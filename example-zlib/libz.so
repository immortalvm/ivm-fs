# This is an ivm64 assembly container generated by ld
#
##:ivm64:obj-id: o6e7b6f
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"crt0.c"
#	.text

# FUNCTION BEGINS:__start
	EXPORT	__start
__start:
	# prologue (1 GPRs)
	push! 0

	push! 0		# 5	[c=4]pushdi1_not_fp/0
	push! 0		# 6	[c=4]pushdi1_not_fp/0
	push! 0		# 7	[c=4]pushdi1_not_fp/0
	call! _start		# 8	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
# Inline assembly starts
# 161 "../../../../libgloss/ivm64/crt0.c" 1
	exit
# 0 "" 2
# Inline assembly ends

	# epilogue
	store8! &0 #set_sp! &1
	return

# FUNCTION ENDS:__start

	#peephole 1
	#peephole nop+set
	#peephole move+push(pushable)
	#peephole pop+move2(deadreg)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole pop(deadreg)+ind push
	#peephole pop+move2(deadreg)
	#peephole pop(deadreg)+push
	#peephole nop+set
	#peephole pop(deadreg)+ind push
	#peephole pop+set+set
	#peephole pop(deadreg)+ind push
	#peephole pop+move2(deadreg)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)

# FUNCTION BEGINS:_start
	EXPORT	_start
_start:
	# prologue (5 GPRs)

	set_sp! &-17

	load8! &19	# 3	[c=2]movdi_push_pop
	store8! &5 	#X4
	push! &0		# 348	[c=4]movdi_to_tr_unspec/1
	add! 56		# 355	[c=4]*adddi/0
	store8! __exit_jb_	# 353	[c=4]movdi_from_tr_unspec/0
	load8! &20	# 17	[c=2]movdi_push_pop
	store8! &7
	load8! &6	# 18	[c=2]movdi_push_pop
	store8! __heap_start
	load8! &18	# 19	[c=2]movdi_push_pop
	store8! __args_start
	# CBRANCH EQ0	# 20	[c=14]cbranchdi4_internal
	load8! &6
	jump_zero! .L19.l_o6e7b6f
	# END CBRANCH
	# CBRANCH	# 58	[c=12]cbranchdi4_internal
	push! 1	
	load8! &5 	#X4
	lt_u	
	jump_zero! .L14.l_o6e7b6f
	# END CBRANCH
.L24.l_o6e7b6f:
	load8! __args_start	# 61	[c=4]movdi_to_tr_unspec/1
	load8! &7	# 332	[c=2]movdi_push_pop
	store8! &2 	#AR
	load8! &1 	#AR	# 63	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load8! &0 	#AR	# 65	[c=5]movdi_to_tr_unspec/1
	add! 8		# 67	[c=4]*adddi/0
	store8! &2 	#X1	# 68	[c=4]movdi_from_tr_unspec/0
	push! 0		# 5	[c=4]movdi_push_pop
	store8! &1 	#AR
	push! 1		# 6	[c=4]movdi_push_pop
	store8! &6
	load8! __args_start	# 108	[c=1]movdi_push_pop
	store8! &4 	#X3
.L10.l_o6e7b6f:
	load8! &3 	#X3	# 110	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 112	[c=6]*adddi/2
	add
	load1		# 328	[c=4]*peep2_mov_from_mem_tr_to_tr_ind_pushqi_unspec
	store8! &3 	#X2	# 117	[c=4]movqi_from_tr_unspec/0
	load8! &0 	#AR	# 124	[c=5]movdi_to_tr_unspec/1
	add! 1		# 126	[c=4]*adddi/0
	store8! &1 	#AR	# 127	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 130	[c=12]cbranchqi4_internal
	load1! &2 	#X2
	jump_not_zero! .L7.l_o6e7b6f
	# END CBRANCH
	# CBRANCH	# 133	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	load8! &5 	#X4
	lt_u	
	jump_zero! .L20.l_o6e7b6f
	# END CBRANCH
.L8.l_o6e7b6f:
	load8! &5	# 79	[c=5]movdi_to_tr_unspec/1
	add! 1		# 81	[c=4]*adddi/0
	store8! &6	# 330	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 85	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 87	[c=6]*adddi/2
	add
	load8! &2 	#X1	# 93	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load8! &1 	#X1	# 100	[c=5]movdi_to_tr_unspec/1
	add! 8		# 102	[c=4]*adddi/0
	store8! &2 	#X1	# 103	[c=4]movdi_from_tr_unspec/0
	load8! __args_start	# 359	[c=1]movdi_push_pop
	store8! &4 	#X3
	jump! .L10.l_o6e7b6f		# 420	[c=4]jump
.L7.l_o6e7b6f:
	# CBRANCH EQ	# 154	[c=12]cbranchqi4_internal
	load1! &2 	#X2
	push! 12	
	xor	
	jump_zero! .L21.l_o6e7b6f
	# END CBRANCH
	# CBRANCH	# 178	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	load8! &5 	#X4
	lt_u	
	not	
	jump_zero! .L10.l_o6e7b6f
	# END CBRANCH
	load8! &5	# 180	[c=5]movdi_to_tr_unspec/1
	shift_l! 3	# 182	[c=8]*ashldi3/0
	store8! &1 	#AR	# 183	[c=4]movdi_from_tr_unspec/0
	load8! &6	# 185	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 187	[c=6]*adddi/2
	add
	store8! &2 	#X1	# 188	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 190	[c=5]movdi_to_tr_unspec/1
	add! 64		# 192	[c=4]*adddi/0
	store8! &1 	#AR	# 193	[c=4]movdi_from_tr_unspec/0
	push! 0		# 197	[c=3]movdi_to_tr_unspec/0
	load8! &2 	#X1	# 199	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load8! __heap_start	# 202	[c=4]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 204	[c=6]*adddi/2
	add
	store8! __heap_start	# 309	[c=4]movdi_from_tr_unspec/0
	push! &0		# 318	[c=4]movdi_to_tr_unspec/1
	add! 56		# 325	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 327	[c=0]*peep2_pop_pusharg
	call! setjmp		# 215	[c=0]*call_value_pop_1/0
	store8! &1

	# CBRANCH EQ0	# 222	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_zero! .L22.l_o6e7b6f
	# END CBRANCH
.L13.l_o6e7b6f:
	load8! __exit_val_	# 224	[c=1]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 225	[c=4]movdi_push_pop
	store8! &21
	load4! &0 	#AR	# 306	[c=4]movsi_push_pop
	store4! &19
	jump! .L23.l_o6e7b6f		# 425	[c=4]jump
.L21.l_o6e7b6f:
	# CBRANCH	# 156	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	load8! &5 	#X4
	lt_u	
	not	
	jump_zero! .L8.l_o6e7b6f
	# END CBRANCH
	load8! &5	# 158	[c=5]movdi_to_tr_unspec/1
	shift_l! 3	# 160	[c=8]*ashldi3/0
	store8! &1 	#AR	# 161	[c=4]movdi_from_tr_unspec/0
	load8! &6	# 163	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 165	[c=6]*adddi/2
	add
	store8! &2 	#X1	# 166	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 168	[c=5]movdi_to_tr_unspec/1
	add! 64		# 170	[c=4]*adddi/0
	store8! &1 	#AR	# 171	[c=4]movdi_from_tr_unspec/0
	push! 0		# 362	[c=3]movdi_to_tr_unspec/0
	load8! &2 	#X1	# 364	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load8! __heap_start	# 365	[c=4]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 367	[c=6]*adddi/2
	add
	store8! __heap_start	# 368	[c=4]movdi_from_tr_unspec/0
	push! &0		# 369	[c=4]movdi_to_tr_unspec/1
	add! 56		# 371	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 373	[c=0]*peep2_pop_pusharg
	call! setjmp		# 374	[c=0]*call_value_pop_1/0
	store8! &1

	# CBRANCH EQ0	# 375	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L13.l_o6e7b6f
	# END CBRANCH
	jump! .L22.l_o6e7b6f		# 428	[c=4]jump
.L19.l_o6e7b6f:
	push! __start		# 22	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 23	[c=5]movdi_to_tr_unspec/1
	add! -8		# 25	[c=4]*adddi/0
	load8		# 333	[c=4]*peep2_mov_from_mem_tr_to_tr_ind_pushdi_unspec
	store8! &7	# 335	[c=4]movdi_from_tr_unspec/0
	load8! &6	# 336	[c=2]movdi_push_pop
	store8! __heap_start
	load8! &0 	#AR	# 35	[c=5]movdi_to_tr_unspec/1
	add! -16		# 37	[c=4]*adddi/0
	load8		# 337	[c=4]*peep2_mov_from_mem_tr_to_tr_ind_pushdi_unspec
	store8! &1 	#AR	# 43	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 46	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	store8! &5 	#X4	# 48	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 50	[c=5]movdi_to_tr_unspec/1
	add! 8		# 52	[c=4]*adddi/0
	store8! __args_start	# 339	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 378	[c=12]cbranchdi4_internal
	push! 1	
	load8! &5 	#X4
	lt_u	
	not	
	jump_zero! .L24.l_o6e7b6f
	# END CBRANCH
.L14.l_o6e7b6f:
	load8! &6	# 7	[c=2]movdi_push_pop
	store8! &2 	#X1
	push! 64		# 8	[c=4]movdi_push_pop
	store8! &1 	#AR
	push! 0		# 9	[c=4]movdi_push_pop
	store8! &6
	push! 0		# 381	[c=3]movdi_to_tr_unspec/0
	load8! &2 	#X1	# 383	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load8! __heap_start	# 384	[c=4]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 386	[c=6]*adddi/2
	add
	store8! __heap_start	# 387	[c=4]movdi_from_tr_unspec/0
	push! &0		# 388	[c=4]movdi_to_tr_unspec/1
	add! 56		# 390	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 392	[c=0]*peep2_pop_pusharg
	call! setjmp		# 393	[c=0]*call_value_pop_1/0
	store8! &1

	# CBRANCH EQ0	# 394	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L13.l_o6e7b6f
	# END CBRANCH
	jump! .L22.l_o6e7b6f		# 432	[c=4]jump
.L20.l_o6e7b6f:
	load8! &5	# 135	[c=5]movdi_to_tr_unspec/1
	shift_l! 3	# 137	[c=8]*ashldi3/0
	store8! &1 	#AR	# 138	[c=4]movdi_from_tr_unspec/0
	load8! &6	# 140	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 142	[c=6]*adddi/2
	add
	store8! &2 	#X1	# 143	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 145	[c=5]movdi_to_tr_unspec/1
	add! 64		# 147	[c=4]*adddi/0
	store8! &1 	#AR	# 148	[c=4]movdi_from_tr_unspec/0
	push! 0		# 397	[c=3]movdi_to_tr_unspec/0
	load8! &2 	#X1	# 399	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load8! __heap_start	# 400	[c=4]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 402	[c=6]*adddi/2
	add
	store8! __heap_start	# 403	[c=4]movdi_from_tr_unspec/0
	push! &0		# 404	[c=4]movdi_to_tr_unspec/1
	add! 56		# 406	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 408	[c=0]*peep2_pop_pusharg
	call! setjmp		# 409	[c=0]*call_value_pop_1/0
	store8! &1

	# CBRANCH EQ0	# 410	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L13.l_o6e7b6f
	# END CBRANCH
.L22.l_o6e7b6f:
	load8! &5	# 307	[c=5]movdi_to_tr_unspec/1
	store8! &1 	#AR	# 236	[c=4]movsi_from_tr_unspec/0
	push! 0		# 238	[c=4]pushdi1_not_fp/0
	load8! &7	# 239	[c=2]pushdi1_not_fp/1
	load4! &2 	#AR	# 240	[c=4]pushsi1_not_fp/1
	call! main		# 241	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	load4! &0 	#AR	# 244	[c=4]pushsi1_not_fp/1
	call! exit		# 245	[c=5]*call_pop_0/0
	set_sp! (+ &0 8)
	

	load8! __exit_val_	# 413	[c=1]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 414	[c=4]movdi_push_pop
	store8! &21
	load4! &0 	#AR	# 415	[c=4]movsi_push_pop
	store4! &19
.L23.l_o6e7b6f:

	# epilogue
	set_sp! &17
	return

# FUNCTION ENDS:_start

#	IMPORT exit
#	IMPORT main
#	IMPORT __exit_val_
#	IMPORT setjmp
#	IMPORT __args_start
#	IMPORT __heap_start
#	IMPORT __exit_jb_
#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: oe92181
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"adler32.c"
#	.text
	#peephole binop1+deadreg+binop2
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole binop1+deadreg+binop2
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole binop1+deadreg+binop2
	#peephole binop1+deadreg+binop2
	#peephole binop1+deadreg+binop2
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole binop1+deadreg+binop2
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole binop1+deadreg+binop2
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole binop1+deadreg+binop2
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn

# FUNCTION BEGINS:adler32_z
	EXPORT	adler32_z
adler32_z:
	# prologue (8 GPRs)

	set_sp! &-8

	load8! &10
	store8! &1 	#AR
	load8! &11
	store8! &5 	#X4
	load8! &9
	shift_ru! 16
	and! 0xffff
	store8! &2 	#X1
	load8! &9
	and! 0xffff
	store8! &3 	#X2
	# CBRANCH EQ
	load8! &4 	#X4
	push! 1
	xor
	jump_zero! .L119.l_oe92181
	# END CBRANCH
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L20.l_oe92181
	# END CBRANCH
	# CBRANCH
	push! 15
	load8! &5 	#X4
	lt_u
	jump_zero! .L6.l_oe92181
	# END CBRANCH
	load8! &4 	#X4
	store8! &6 	#X5
	# CBRANCH
	push! 5551
	load8! &5 	#X4
	lt_u
	jump_zero! .L8.l_oe92181
	# END CBRANCH
	load8! &0 	#AR
	add! 5552
	store8! &4 	#X3
	load8! &3 	#X3
	add! -5552
	store8! &1 	#AR
	load8! &4 	#X4
	add! -5552
	store8! &6 	#X5
.L12.l_oe92181:
	load8! &0 	#AR
	load1
	#
	and! 0x0ff
	load8! &3 	#X2
	add
	store8! &7 	#X6
	load8! &0 	#AR
	add! 1
	load1
	#
	and! 0x0ff
	load8! &7 	#X6
	add
	store8! &3 	#X2
	load8! &6 	#X6
	load8! &3 	#X2
	add
	store8! &7 	#X6
	load8! &0 	#AR
	add! 2
	load1
	#
	and! 0x0ff
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &6 	#X6
	load8! &3 	#X2
	add
	store8! &7 	#X6
	load8! &0 	#AR
	add! 3
	load1
	#
	and! 0x0ff
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &2 	#X2
	load8! &7 	#X6
	add
	store8! &7 	#X6
	load8! &0 	#AR
	add! 4
	load1
	#
	and! 0x0ff
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &2 	#X2
	load8! &7 	#X6
	add
	store8! &7 	#X6
	load8! &0 	#AR
	add! 5
	load1
	#
	and! 0x0ff
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &2 	#X2
	load8! &7 	#X6
	add
	store8! &7 	#X6
	load8! &0 	#AR
	add! 6
	load1
	#
	and! 0x0ff
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &2 	#X2
	load8! &7 	#X6
	add
	store8! &7 	#X6
	load8! &0 	#AR
	add! 7
	load1
	#
	and! 0x0ff
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &2 	#X2
	load8! &7 	#X6
	add
	store8! &7 	#X6
	load8! &0 	#AR
	add! 8
	load1
	#
	and! 0x0ff
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &2 	#X2
	load8! &7 	#X6
	add
	store8! &7 	#X6
	load8! &0 	#AR
	add! 9
	load1
	#
	and! 0x0ff
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &2 	#X2
	load8! &7 	#X6
	add
	store8! &7 	#X6
	load8! &0 	#AR
	add! 10
	load1
	#
	and! 0x0ff
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &6 	#X6
	load8! &3 	#X2
	add
	store8! &7 	#X6
	load8! &0 	#AR
	add! 11
	load1
	#
	and! 0x0ff
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &6 	#X6
	load8! &3 	#X2
	add
	store8! &7 	#X6
	load8! &0 	#AR
	add! 12
	load1
	#
	and! 0x0ff
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &6 	#X6
	load8! &3 	#X2
	add
	store8! &7 	#X6
	load8! &0 	#AR
	add! 13
	load1
	#
	and! 0x0ff
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &6 	#X6
	load8! &3 	#X2
	add
	store8! &7 	#X6
	load8! &0 	#AR
	add! 14
	load1
	#
	and! 0x0ff
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &6 	#X6
	load8! &3 	#X2
	add
	store8! &7 	#X6
	load8! &0 	#AR
	add! 15
	load1
	#
	and! 0x0ff
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &6 	#X6
	load8! &3 	#X2
	add
	load8! &2 	#X1
	add
	store8! &2 	#X1
	load8! &0 	#AR
	add! 16
	store8! &1 	#AR
	# CBRANCH
	load8! &0 	#AR
	load8! &4 	#X3
	xor
	push! 1
	lt_u
	jump_zero! .L12.l_oe92181
	# END CBRANCH
	load8! &2 	#X2
	rem_u! 65521
	store8! &3 	#X2
	load8! &1 	#X1
	rem_u! 65521
	store8! &2 	#X1
	load8! &0 	#AR
	add! 5552
	store8! &4 	#X3
	# CBRANCH
	push! 5551
	load8! &6 	#X5
	lt_u
	jump_zero! .L120.l_oe92181
	# END CBRANCH
	load8! &5 	#X5
	store8! &5 	#X4
	load8! &3 	#X3
	add! -5552
	store8! &1 	#AR
	load8! &4 	#X4
	add! -5552
	store8! &6 	#X5
	jump! .L12.l_oe92181
.L6.l_oe92181:
	# CBRANCH EQ0
	load8! &4 	#X4
	jump_zero! .L9.l_oe92181
	# END CBRANCH
	load8! &0 	#AR
	load1
	#
	and! 0x0ff
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &1 	#X1
	load8! &3 	#X2
	add
	store8! &2 	#X1
	# CBRANCH EQ
	load8! &4 	#X4
	push! 1
	xor
	jump_zero! .L9.l_oe92181
	# END CBRANCH
	load8! &0 	#AR
	add! 1
	load1
	#
	and! 0x0ff
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &2 	#X2
	load8! &2 	#X1
	add
	store8! &2 	#X1
	# CBRANCH EQ
	load8! &4 	#X4
	push! 2
	xor
	jump_zero! .L9.l_oe92181
	# END CBRANCH
	load8! &0 	#AR
	add! 2
	load1
	#
	and! 0x0ff
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &2 	#X2
	load8! &2 	#X1
	add
	store8! &2 	#X1
	# CBRANCH EQ
	load8! &4 	#X4
	push! 3
	xor
	jump_zero! .L9.l_oe92181
	# END CBRANCH
	load8! &0 	#AR
	add! 3
	load1
	#
	and! 0x0ff
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &2 	#X2
	load8! &2 	#X1
	add
	store8! &2 	#X1
	# CBRANCH EQ
	load8! &4 	#X4
	push! 4
	xor
	jump_zero! .L9.l_oe92181
	# END CBRANCH
	load8! &0 	#AR
	add! 4
	load1
	#
	and! 0x0ff
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &2 	#X2
	load8! &2 	#X1
	add
	store8! &2 	#X1
	# CBRANCH EQ
	load8! &4 	#X4
	push! 5
	xor
	jump_zero! .L9.l_oe92181
	# END CBRANCH
	load8! &0 	#AR
	add! 5
	load1
	#
	and! 0x0ff
	load8! &3 	#X2
	add
	store8! &4 	#X3
	load8! &3 	#X3
	store8! &3 	#X2
	load8! &3 	#X3
	load8! &2 	#X1
	add
	store8! &6 	#X5
	load8! &5 	#X5
	store8! &2 	#X1
	# CBRANCH EQ
	load8! &4 	#X4
	push! 6
	xor
	jump_zero! .L9.l_oe92181
	# END CBRANCH
	load8! &0 	#AR
	add! 6
	load1
	#
	and! 0x0ff
	load8! &4 	#X3
	add
	store8! &3 	#X2
	load8! &2 	#X2
	load8! &6 	#X5
	add
	store8! &2 	#X1
	# CBRANCH EQ
	load8! &4 	#X4
	push! 7
	xor
	jump_zero! .L9.l_oe92181
	# END CBRANCH
	load8! &0 	#AR
	add! 7
	load1
	#
	and! 0x0ff
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &2 	#X2
	load8! &2 	#X1
	add
	store8! &2 	#X1
	# CBRANCH EQ
	load8! &4 	#X4
	push! 8
	xor
	jump_zero! .L9.l_oe92181
	# END CBRANCH
	load8! &0 	#AR
	add! 8
	load1
	#
	and! 0x0ff
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &2 	#X2
	load8! &2 	#X1
	add
	store8! &2 	#X1
	# CBRANCH EQ
	load8! &4 	#X4
	push! 9
	xor
	jump_zero! .L9.l_oe92181
	# END CBRANCH
	load8! &0 	#AR
	add! 9
	load1
	#
	and! 0x0ff
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &2 	#X2
	load8! &2 	#X1
	add
	store8! &2 	#X1
	# CBRANCH EQ
	load8! &4 	#X4
	push! 10
	xor
	jump_zero! .L9.l_oe92181
	# END CBRANCH
	load8! &0 	#AR
	add! 10
	load1
	#
	and! 0x0ff
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &2 	#X2
	load8! &2 	#X1
	add
	store8! &2 	#X1
	# CBRANCH EQ
	load8! &4 	#X4
	push! 11
	xor
	jump_zero! .L9.l_oe92181
	# END CBRANCH
	load8! &0 	#AR
	add! 11
	load1
	#
	and! 0x0ff
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &2 	#X2
	load8! &2 	#X1
	add
	store8! &2 	#X1
	# CBRANCH EQ
	load8! &4 	#X4
	push! 12
	xor
	jump_zero! .L9.l_oe92181
	# END CBRANCH
	load8! &0 	#AR
	add! 12
	load1
	#
	and! 0x0ff
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &2 	#X2
	load8! &2 	#X1
	add
	store8! &2 	#X1
	# CBRANCH EQ
	load8! &4 	#X4
	push! 13
	xor
	jump_zero! .L9.l_oe92181
	# END CBRANCH
	load8! &0 	#AR
	add! 13
	load1
	#
	and! 0x0ff
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &2 	#X2
	load8! &2 	#X1
	add
	store8! &2 	#X1
	# CBRANCH EQ
	load8! &4 	#X4
	push! 14
	xor
	jump_zero! .L9.l_oe92181
	# END CBRANCH
	load8! &0 	#AR
	add! 14
	load1
	#
	and! 0x0ff
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &2 	#X2
	load8! &2 	#X1
	add
	store8! &2 	#X1
.L9.l_oe92181:
	# CBRANCH
	push! 65520
	load8! &3 	#X2
	lt_u
	jump_zero! .L11.l_oe92181
	# END CBRANCH
	load8! &2 	#X2
	add! -65521
	store8! &3 	#X2
.L11.l_oe92181:
	load8! &1 	#X1
	rem_u! 65521
	shift_l! 16
	load8! &3 	#X2
	or
	store8! &1 	#AR
	load8! &0 	#AR
	store8! &10
	jump! .L121.l_oe92181
.L120.l_oe92181:
	# CBRANCH EQ0
	load8! &5 	#X5
	jump_not_zero! .L122.l_oe92181
	# END CBRANCH
	load8! &1 	#X1
	shift_l! 16
	load8! &3 	#X2
	or
	store8! &1 	#AR
.L123.l_oe92181:
	load8! &0 	#AR
	store8! &10
	jump! .L121.l_oe92181
.L119.l_oe92181:
	load8! &0 	#AR
	load1
	#
	and! 0x0ff
	load8! &3 	#X2
	add
	store8! &1 	#AR
	# CBRANCH
	push! 65520
	load8! &1 	#AR
	lt_u
	jump_zero! .L3.l_oe92181
	# END CBRANCH
	load8! &0 	#AR
	add! -65521
	store8! &1 	#AR
.L3.l_oe92181:
	load8! &0 	#AR
	load8! &2 	#X1
	add
	store8! &2 	#X1
	# CBRANCH
	push! 65520
	load8! &2 	#X1
	lt_u
	jump_zero! .L4.l_oe92181
	# END CBRANCH
	load8! &1 	#X1
	add! -65521
	store8! &2 	#X1
.L4.l_oe92181:
	load8! &1 	#X1
	shift_l! 16
	load8! &1 	#AR
	or
	store8! &1 	#AR
	load8! &0 	#AR
	store8! &10
	jump! .L121.l_oe92181
.L122.l_oe92181:
	# CBRANCH
	push! 15
	load8! &6 	#X5
	lt_u
	jump_zero! .L15.l_oe92181
	# END CBRANCH
.L8.l_oe92181:
	load8! &5 	#X5
	add! -16
	shift_ru! 4
	store8! &5 	#X4
	load8! &4 	#X4
	add! 1
	shift_l! 4
	load8! &1 	#AR
	add
	store8! &4 	#X3
.L16.l_oe92181:
	load8! &0 	#AR
	load1
	#
	and! 0x0ff
	load8! &3 	#X2
	add
	store8! &7 	#X6
	load8! &0 	#AR
	add! 1
	load1
	#
	and! 0x0ff
	load8! &7 	#X6
	add
	store8! &3 	#X2
	load8! &6 	#X6
	load8! &3 	#X2
	add
	store8! &7 	#X6
	load8! &0 	#AR
	add! 2
	load1
	#
	and! 0x0ff
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &6 	#X6
	load8! &3 	#X2
	add
	store8! &7 	#X6
	load8! &0 	#AR
	add! 3
	load1
	#
	and! 0x0ff
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &6 	#X6
	load8! &3 	#X2
	add
	store8! &7 	#X6
	load8! &0 	#AR
	add! 4
	load1
	#
	and! 0x0ff
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &6 	#X6
	load8! &3 	#X2
	add
	store8! &7 	#X6
	load8! &0 	#AR
	add! 5
	load1
	#
	and! 0x0ff
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &6 	#X6
	load8! &3 	#X2
	add
	store8! &7 	#X6
	load8! &0 	#AR
	add! 6
	load1
	#
	and! 0x0ff
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &2 	#X2
	load8! &7 	#X6
	add
	store8! &7 	#X6
	load8! &0 	#AR
	add! 7
	load1
	#
	and! 0x0ff
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &2 	#X2
	load8! &7 	#X6
	add
	store8! &7 	#X6
	load8! &0 	#AR
	add! 8
	load1
	#
	and! 0x0ff
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &2 	#X2
	load8! &7 	#X6
	add
	store8! &7 	#X6
	load8! &0 	#AR
	add! 9
	load1
	#
	and! 0x0ff
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &2 	#X2
	load8! &7 	#X6
	add
	store8! &7 	#X6
	load8! &0 	#AR
	add! 10
	load1
	#
	and! 0x0ff
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &6 	#X6
	load8! &3 	#X2
	add
	store8! &7 	#X6
	load8! &0 	#AR
	add! 11
	load1
	#
	and! 0x0ff
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &2 	#X2
	load8! &7 	#X6
	add
	store8! &7 	#X6
	load8! &0 	#AR
	add! 12
	load1
	#
	and! 0x0ff
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &2 	#X2
	load8! &7 	#X6
	add
	store8! &7 	#X6
	load8! &0 	#AR
	add! 13
	load1
	#
	and! 0x0ff
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &2 	#X2
	load8! &7 	#X6
	add
	store8! &7 	#X6
	load8! &0 	#AR
	add! 14
	load1
	#
	and! 0x0ff
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &6 	#X6
	load8! &3 	#X2
	add
	store8! &7 	#X6
	load8! &0 	#AR
	add! 15
	load1
	#
	and! 0x0ff
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &6 	#X6
	load8! &3 	#X2
	add
	load8! &2 	#X1
	add
	store8! &2 	#X1
	load8! &0 	#AR
	add! 16
	store8! &1 	#AR
	# CBRANCH
	load8! &3 	#X3
	load8! &1 	#AR
	xor
	push! 1
	lt_u
	jump_zero! .L16.l_oe92181
	# END CBRANCH
	load8! &5 	#X5
	and! 0xf
	store8! &1 	#AR
	load8! &4 	#X4
	mult! -16
	store8! &5 	#X4
	load8! &5 	#X5
	add! -17
	load8! &5 	#X4
	add
	store8! &5 	#X4
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L17.l_oe92181
	# END CBRANCH
.L19.l_oe92181:
	load8! &3 	#X3
	load1
	#
	and! 0x0ff
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &1 	#X1
	load8! &3 	#X2
	add
	store8! &2 	#X1
	# CBRANCH EQ0
	load8! &4 	#X4
	jump_zero! .L17.l_oe92181
	# END CBRANCH
	load8! &3 	#X3
	add! 1
	load1
	#
	and! 0x0ff
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &2 	#X2
	load8! &2 	#X1
	add
	store8! &2 	#X1
	# CBRANCH EQ
	load8! &4 	#X4
	push! 1
	xor
	jump_zero! .L17.l_oe92181
	# END CBRANCH
	load8! &3 	#X3
	add! 2
	load1
	#
	and! 0x0ff
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &2 	#X2
	load8! &2 	#X1
	add
	store8! &2 	#X1
	# CBRANCH EQ
	load8! &4 	#X4
	push! 2
	xor
	jump_zero! .L17.l_oe92181
	# END CBRANCH
	load8! &3 	#X3
	add! 3
	load1
	#
	and! 0x0ff
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &2 	#X2
	load8! &2 	#X1
	add
	store8! &2 	#X1
	# CBRANCH EQ
	load8! &4 	#X4
	push! 3
	xor
	jump_zero! .L17.l_oe92181
	# END CBRANCH
	load8! &3 	#X3
	add! 4
	load1
	#
	and! 0x0ff
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &2 	#X2
	load8! &2 	#X1
	add
	store8! &2 	#X1
	# CBRANCH EQ
	load8! &4 	#X4
	push! 4
	xor
	jump_zero! .L17.l_oe92181
	# END CBRANCH
	load8! &3 	#X3
	add! 5
	load1
	#
	and! 0x0ff
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &2 	#X2
	load8! &2 	#X1
	add
	store8! &2 	#X1
	# CBRANCH EQ
	load8! &4 	#X4
	push! 5
	xor
	jump_zero! .L17.l_oe92181
	# END CBRANCH
	load8! &3 	#X3
	add! 6
	load1
	#
	and! 0x0ff
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &2 	#X2
	load8! &2 	#X1
	add
	store8! &2 	#X1
	# CBRANCH EQ
	load8! &4 	#X4
	push! 6
	xor
	jump_zero! .L17.l_oe92181
	# END CBRANCH
	load8! &3 	#X3
	add! 7
	load1
	#
	and! 0x0ff
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &2 	#X2
	load8! &2 	#X1
	add
	store8! &2 	#X1
	# CBRANCH EQ
	load8! &4 	#X4
	push! 7
	xor
	jump_zero! .L17.l_oe92181
	# END CBRANCH
	load8! &3 	#X3
	add! 8
	load1
	#
	and! 0x0ff
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &2 	#X2
	load8! &2 	#X1
	add
	store8! &2 	#X1
	# CBRANCH EQ
	load8! &4 	#X4
	push! 8
	xor
	jump_zero! .L17.l_oe92181
	# END CBRANCH
	load8! &3 	#X3
	add! 9
	load1
	#
	and! 0x0ff
	load8! &3 	#X2
	add
	store8! &6 	#X5
	load8! &5 	#X5
	store8! &3 	#X2
	load8! &5 	#X5
	load8! &2 	#X1
	add
	store8! &1 	#AR
	load8! &0 	#AR
	store8! &2 	#X1
	# CBRANCH EQ
	load8! &4 	#X4
	push! 9
	xor
	jump_zero! .L17.l_oe92181
	# END CBRANCH
	load8! &3 	#X3
	add! 10
	load1
	#
	and! 0x0ff
	load8! &6 	#X5
	add
	store8! &3 	#X2
	load8! &2 	#X2
	load8! &1 	#AR
	add
	store8! &2 	#X1
	# CBRANCH EQ
	load8! &4 	#X4
	push! 10
	xor
	jump_zero! .L17.l_oe92181
	# END CBRANCH
	load8! &3 	#X3
	add! 11
	load1
	#
	and! 0x0ff
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &2 	#X2
	load8! &2 	#X1
	add
	store8! &2 	#X1
	# CBRANCH EQ
	load8! &4 	#X4
	push! 11
	xor
	jump_zero! .L17.l_oe92181
	# END CBRANCH
	load8! &3 	#X3
	add! 12
	load1
	#
	and! 0x0ff
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &2 	#X2
	load8! &2 	#X1
	add
	store8! &2 	#X1
	# CBRANCH EQ
	load8! &4 	#X4
	push! 12
	xor
	jump_zero! .L17.l_oe92181
	# END CBRANCH
	load8! &3 	#X3
	add! 13
	load1
	#
	and! 0x0ff
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &2 	#X2
	load8! &2 	#X1
	add
	store8! &2 	#X1
	# CBRANCH EQ
	load8! &4 	#X4
	push! 13
	xor
	jump_zero! .L17.l_oe92181
	# END CBRANCH
	load8! &3 	#X3
	add! 14
	load1
	#
	and! 0x0ff
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &2 	#X2
	load8! &2 	#X1
	add
	store8! &2 	#X1
.L17.l_oe92181:
	load8! &2 	#X2
	rem_u! 65521
	store8! &3 	#X2
	load8! &1 	#X1
	rem_u! 65521
	store8! &2 	#X1
	load8! &1 	#X1
	shift_l! 16
	load8! &3 	#X2
	or
	store8! &1 	#AR
	jump! .L123.l_oe92181
.L20.l_oe92181:
	push! 1
	store8! &1 	#AR
	load8! &0 	#AR
	store8! &10
	jump! .L121.l_oe92181
.L15.l_oe92181:
	load8! &4 	#X4
	add! -5553
	store8! &5 	#X4
	load8! &0 	#AR
	store8! &4 	#X3
	jump! .L19.l_oe92181
.L121.l_oe92181:

	# epilogue
	set_sp! &8
	return

# FUNCTION ENDS:adler32_z

	#peephole zero_extend
	#peephole pop+pusharg

# FUNCTION BEGINS:adler32
	EXPORT	adler32
adler32:
	# prologue (1 GPRs)
	push! 0

	load4! &4
	#peep - pop(deadreg)+pusharg
	load8! &4
	load8! &4
	call! adler32_z
	store8! &3

	set_sp! &2
	load8! &0 	#AR
	store8! &3

	# epilogue
	store8! &0 #set_sp! &1
	return

# FUNCTION ENDS:adler32

	#peephole binop1+2
	#peephole binop1+deadreg+binop2
	#peephole pop+push+commut(di)
	#peephole binop1+deadreg+binop2
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole pop+push+commut(di)
	#peephole pop+push+commut(di)

# FUNCTION BEGINS:adler32_combine
	EXPORT	adler32_combine
adler32_combine:
	# prologue (5 GPRs)

	set_sp! &-5

	# CBRANCH
	load8! &8
	add! -9223372036854775808
	push! 0
	add! -9223372036854775808
	lt_u
	not
	jump_zero! .L131.l_oe92181
	# END CBRANCH
	load8! &8
	rem_s! 65521
	store8! &1 	#AR
	load8! &6
	and! 0xffff
	store8! &2 	#X1
	load8! &1 	#X1
	load8! &1 	#AR
	mult
	rem_u! 65521
	store8! &4 	#X3
	load8! &7
	and! 0xffff
	load8! &2 	#X1
	add
	store8! &3 	#X2
	load8! &6
	shift_ru! 16
	and! 0xffff
	store8! &2 	#X1
	load8! &7
	shift_ru! 16
	and! 0xffff
	load8! &1 	#AR
	sub
	load8! &2 	#X1
	add
	load8! &4 	#X3
	add
	store8! &4 	#X3
	load8! &3 	#X3
	add! 65521
	store8! &1 	#AR
	# CBRANCH EQ0
	load8! &2 	#X2
	jump_zero! .L132.l_oe92181
	# END CBRANCH
	load8! &2 	#X2
	add! -1
	store8! &2 	#X1
	# CBRANCH
	push! 65520
	load8! &2 	#X1
	lt_u
	jump_zero! .L128.l_oe92181
	# END CBRANCH
	load8! &2 	#X2
	add! -65522
	store8! &2 	#X1
.L128.l_oe92181:
	# CBRANCH
	push! 131041
	load8! &1 	#AR
	lt_u
	jump_zero! .L129.l_oe92181
	# END CBRANCH
	load8! &3 	#X3
	add! -65521
	store8! &1 	#AR
.L129.l_oe92181:
	# CBRANCH
	push! 65520
	load8! &1 	#AR
	lt_u
	jump_zero! .L130.l_oe92181
	# END CBRANCH
	load8! &0 	#AR
	add! -65521
	store8! &1 	#AR
.L130.l_oe92181:
	load8! &0 	#AR
	shift_l! 16
	load8! &2 	#X1
	or
	store8! &1 	#AR
	load8! &0 	#AR
	store8! &7
	jump! .L135.l_oe92181
.L132.l_oe92181:
	push! 65520
	store8! &2 	#X1
	jump! .L128.l_oe92181
.L131.l_oe92181:
	push! 4294967295
	store8! &1 	#AR
	load8! &0 	#AR
	store8! &7
.L135.l_oe92181:

	# epilogue
	set_sp! &5
	return

# FUNCTION ENDS:adler32_combine

	#peephole binop1+2
	#peephole binop1+deadreg+binop2
	#peephole pop+push+commut(di)
	#peephole binop1+deadreg+binop2
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole pop+push+commut(di)
	#peephole pop+push+commut(di)

# FUNCTION BEGINS:adler32_combine64
	EXPORT	adler32_combine64
adler32_combine64:
	# prologue (5 GPRs)

	set_sp! &-5

	# CBRANCH
	load8! &8
	add! -9223372036854775808
	push! 0
	add! -9223372036854775808
	lt_u
	not
	jump_zero! .L141.l_oe92181
	# END CBRANCH
	load8! &8
	rem_s! 65521
	store8! &1 	#AR
	load8! &6
	and! 0xffff
	store8! &2 	#X1
	load8! &1 	#X1
	load8! &1 	#AR
	mult
	rem_u! 65521
	store8! &4 	#X3
	load8! &7
	and! 0xffff
	load8! &2 	#X1
	add
	store8! &3 	#X2
	load8! &6
	shift_ru! 16
	and! 0xffff
	store8! &2 	#X1
	load8! &7
	shift_ru! 16
	and! 0xffff
	load8! &1 	#AR
	sub
	load8! &2 	#X1
	add
	load8! &4 	#X3
	add
	store8! &4 	#X3
	load8! &3 	#X3
	add! 65521
	store8! &1 	#AR
	# CBRANCH EQ0
	load8! &2 	#X2
	jump_zero! .L142.l_oe92181
	# END CBRANCH
	load8! &2 	#X2
	add! -1
	store8! &2 	#X1
	# CBRANCH
	push! 65520
	load8! &2 	#X1
	lt_u
	jump_zero! .L138.l_oe92181
	# END CBRANCH
	load8! &2 	#X2
	add! -65522
	store8! &2 	#X1
.L138.l_oe92181:
	# CBRANCH
	push! 131041
	load8! &1 	#AR
	lt_u
	jump_zero! .L139.l_oe92181
	# END CBRANCH
	load8! &3 	#X3
	add! -65521
	store8! &1 	#AR
.L139.l_oe92181:
	# CBRANCH
	push! 65520
	load8! &1 	#AR
	lt_u
	jump_zero! .L140.l_oe92181
	# END CBRANCH
	load8! &0 	#AR
	add! -65521
	store8! &1 	#AR
.L140.l_oe92181:
	load8! &0 	#AR
	shift_l! 16
	load8! &2 	#X1
	or
	store8! &1 	#AR
	load8! &0 	#AR
	store8! &7
	jump! .L145.l_oe92181
.L142.l_oe92181:
	push! 65520
	store8! &2 	#X1
	jump! .L138.l_oe92181
.L141.l_oe92181:
	push! 4294967295
	store8! &1 	#AR
	load8! &0 	#AR
	store8! &7
.L145.l_oe92181:

	# epilogue
	set_sp! &5
	return

# FUNCTION ENDS:adler32_combine64

#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: oc73901
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"crc32.c"
#	.text
	#peephole push+pop+deadreg+binop
	#peephole pop+cmp
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+cmp
	#peephole push+pop+deadreg+binop
	#peephole pop+cmp
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole push+pop+deadreg+binop
	#peephole pop+cmp
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+cmp
	#peephole push+pop+deadreg+binop
	#peephole pop+cmp
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole push+pop+deadreg+binop
	#peephole pop+cmp
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+move(deadreg)
	#peephole push+pop+deadreg+binop
	#peephole pop+cmp
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)

# FUNCTION BEGINS:crc32_combine_
crc32_combine_.s_oc73901:
	# prologue (13 GPRs)

	set_sp! &-77

	load8! &78
	store8! &6 	#X5
	load8! &80
	store8! &7 	#X6
	# CBRANCH
	push! 0
	add! -9223372036854775808
	load8! &7 	#X6
	add! -9223372036854775808
	lt_u
	jump_zero! .L1.l_oc73901
	# END CBRANCH
	push! 3988292384
	store8! &46
	push! &0
	add! 360
	add! 8
	store8! &2 	#X1
	push! &0
	add! 360
	store8! &9 	#X8
	load8! &8 	#X8
	add! 256
	store8! &4 	#X3
	push! 1
	store8! &1 	#AR
.L3.l_oc73901:
	load8! &0 	#AR
	load8! &2 	#X1
	store8
	#
	load8! &0 	#AR
	load8! &1 	#AR
	add
	store8! &1 	#AR
	load8! &1 	#X1
	add! 8
	store8! &2 	#X1
	# CBRANCH
	load8! &1 	#X1
	load8! &4 	#X3
	xor
	push! 1
	lt_u
	jump_zero! .L3.l_oc73901
	# END CBRANCH
	push! &0
	add! 104
	store8! &8 	#X7
	load8! &7 	#X7
	store8! &11 	#X10
	load8! &8 	#X8
	store8! &10 	#X9
.L7.l_oc73901:
	load8! &9 	#X9
	load8
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L29.l_oc73901
	# END CBRANCH
	push! 0
	store8! &3 	#X2
	push! &0
	add! 360
	store8! &2 	#X1
.L6.l_oc73901:
	load8! &0 	#AR
	and! 0x1
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L5.l_oc73901
	# END CBRANCH
	load8! &1 	#X1
	load8
	#
	load8! &3 	#X2
	xor
	store8! &3 	#X2
.L5.l_oc73901:
	load8! &0 	#AR
	shift_ru! 1
	store8! &1 	#AR
	load8! &1 	#X1
	add! 8
	store8! &2 	#X1
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_not_zero! .L6.l_oc73901
	# END CBRANCH
	load8! &2 	#X2
	load8! &11 	#X10
	store8
	#
	load8! &9 	#X9
	add! 8
	store8! &10 	#X9
	load8! &10 	#X10
	add! 8
	store8! &11 	#X10
	# CBRANCH
	load8! &9 	#X9
	load8! &4 	#X3
	xor
	push! 1
	lt_u
	jump_zero! .L7.l_oc73901
	# END CBRANCH
.L84.l_oc73901:
	load8! &7 	#X7
	add! 256
	store8! &5 	#X4
	load8! &8 	#X8
	store8! &12 	#X11
	load8! &7 	#X7
	store8! &11 	#X10
.L11.l_oc73901:
	load8! &10 	#X10
	load8
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L30.l_oc73901
	# END CBRANCH
	push! 0
	store8! &3 	#X2
	push! &0
	add! 104
	store8! &2 	#X1
.L10.l_oc73901:
	load8! &0 	#AR
	and! 0x1
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L9.l_oc73901
	# END CBRANCH
	load8! &1 	#X1
	load8
	#
	load8! &3 	#X2
	xor
	store8! &3 	#X2
.L9.l_oc73901:
	load8! &0 	#AR
	shift_ru! 1
	store8! &1 	#AR
	load8! &1 	#X1
	add! 8
	store8! &2 	#X1
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_not_zero! .L10.l_oc73901
	# END CBRANCH
	load8! &2 	#X2
	load8! &12 	#X11
	store8
	#
	load8! &10 	#X10
	add! 8
	store8! &11 	#X10
	load8! &11 	#X11
	add! 8
	store8! &12 	#X11
	# CBRANCH
	load8! &10 	#X10
	load8! &5 	#X4
	xor
	push! 1
	lt_u
	jump_zero! .L11.l_oc73901
	# END CBRANCH
.L27.l_oc73901:
	load8! &7 	#X7
	store8! &12 	#X11
	load8! &8 	#X8
	store8! &11 	#X10
.L15.l_oc73901:
	load8! &10 	#X10
	load8
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L31.l_oc73901
	# END CBRANCH
	push! 0
	store8! &3 	#X2
	push! &0
	add! 360
	store8! &2 	#X1
.L14.l_oc73901:
	load8! &0 	#AR
	and! 0x1
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L13.l_oc73901
	# END CBRANCH
	load8! &1 	#X1
	load8
	#
	load8! &3 	#X2
	xor
	store8! &3 	#X2
.L13.l_oc73901:
	load8! &0 	#AR
	shift_ru! 1
	store8! &1 	#AR
	load8! &1 	#X1
	add! 8
	store8! &2 	#X1
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_not_zero! .L14.l_oc73901
	# END CBRANCH
	load8! &2 	#X2
	load8! &12 	#X11
	store8
	#
	load8! &10 	#X10
	add! 8
	store8! &11 	#X10
	load8! &11 	#X11
	add! 8
	store8! &12 	#X11
	# CBRANCH
	load8! &10 	#X10
	load8! &4 	#X3
	xor
	push! 1
	lt_u
	jump_zero! .L15.l_oc73901
	# END CBRANCH
.L82.l_oc73901:
	load8! &6 	#X6
	and! 0x1
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_not_zero! .L80.l_oc73901
	# END CBRANCH
.L16.l_oc73901:
	load8! &6 	#X6
	shift_rs! 1
	store8! &13 	#X12
	# CBRANCH EQ0
	load8! &12 	#X12
	jump_zero! .L19.l_oc73901
	# END CBRANCH
	load8! &8 	#X8
	store8! &12 	#X11
	load8! &7 	#X7
	store8! &11 	#X10
.L23.l_oc73901:
	load8! &10 	#X10
	load8
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L32.l_oc73901
	# END CBRANCH
	push! 0
	store8! &3 	#X2
	push! &0
	add! 104
	store8! &2 	#X1
.L22.l_oc73901:
	load8! &0 	#AR
	and! 0x1
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L21.l_oc73901
	# END CBRANCH
	load8! &1 	#X1
	load8
	#
	load8! &3 	#X2
	xor
	store8! &3 	#X2
.L21.l_oc73901:
	load8! &0 	#AR
	shift_ru! 1
	store8! &1 	#AR
	load8! &1 	#X1
	add! 8
	store8! &2 	#X1
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_not_zero! .L22.l_oc73901
	# END CBRANCH
	load8! &2 	#X2
	load8! &12 	#X11
	store8
	#
	load8! &10 	#X10
	add! 8
	store8! &11 	#X10
	load8! &11 	#X11
	add! 8
	store8! &12 	#X11
	# CBRANCH
	load8! &4 	#X4
	load8! &11 	#X10
	xor
	push! 1
	lt_u
	jump_zero! .L23.l_oc73901
	# END CBRANCH
.L83.l_oc73901:
	load8! &12 	#X12
	and! 0x1
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_not_zero! .L81.l_oc73901
	# END CBRANCH
.L24.l_oc73901:
	load8! &6 	#X6
	shift_rs! 2
	store8! &7 	#X6
	# CBRANCH EQ0
	load8! &6 	#X6
	jump_not_zero! .L27.l_oc73901
	# END CBRANCH
.L19.l_oc73901:
	load8! &5 	#X5
	load8! &80
	xor
	store8! &6 	#X5
	jump! .L1.l_oc73901
.L81.l_oc73901:
	# CBRANCH EQ0
	load8! &5 	#X5
	jump_zero! .L24.l_oc73901
	# END CBRANCH
	load8! &5 	#X5
	store8! &1 	#AR
	push! 0
	store8! &6 	#X5
	push! &0
	add! 360
	store8! &2 	#X1
.L26.l_oc73901:
	load8! &0 	#AR
	and! 0x1
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L25.l_oc73901
	# END CBRANCH
	load8! &1 	#X1
	load8
	#
	load8! &6 	#X5
	xor
	store8! &6 	#X5
.L25.l_oc73901:
	load8! &0 	#AR
	shift_ru! 1
	store8! &1 	#AR
	load8! &1 	#X1
	add! 8
	store8! &2 	#X1
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_not_zero! .L26.l_oc73901
	# END CBRANCH
	load8! &6 	#X6
	shift_rs! 2
	store8! &7 	#X6
	# CBRANCH EQ0
	load8! &6 	#X6
	jump_not_zero! .L27.l_oc73901
	# END CBRANCH
	jump! .L19.l_oc73901
.L80.l_oc73901:
	# CBRANCH EQ0
	load8! &5 	#X5
	jump_zero! .L16.l_oc73901
	# END CBRANCH
	load8! &5 	#X5
	store8! &1 	#AR
	push! 0
	store8! &6 	#X5
	push! &0
	add! 104
	store8! &2 	#X1
.L18.l_oc73901:
	load8! &0 	#AR
	and! 0x1
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L17.l_oc73901
	# END CBRANCH
	load8! &1 	#X1
	load8
	#
	load8! &6 	#X5
	xor
	store8! &6 	#X5
.L17.l_oc73901:
	load8! &0 	#AR
	shift_ru! 1
	store8! &1 	#AR
	load8! &1 	#X1
	add! 8
	store8! &2 	#X1
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_not_zero! .L18.l_oc73901
	# END CBRANCH
	jump! .L16.l_oc73901
.L31.l_oc73901:
	push! 0
	store8! &3 	#X2
	load8! &2 	#X2
	load8! &12 	#X11
	store8
	#
	load8! &10 	#X10
	add! 8
	store8! &11 	#X10
	load8! &11 	#X11
	add! 8
	store8! &12 	#X11
	# CBRANCH
	load8! &10 	#X10
	load8! &4 	#X3
	xor
	push! 1
	lt_u
	jump_zero! .L15.l_oc73901
	# END CBRANCH
	jump! .L82.l_oc73901
.L32.l_oc73901:
	push! 0
	store8! &3 	#X2
	load8! &2 	#X2
	load8! &12 	#X11
	store8
	#
	load8! &10 	#X10
	add! 8
	store8! &11 	#X10
	load8! &11 	#X11
	add! 8
	store8! &12 	#X11
	# CBRANCH
	load8! &4 	#X4
	load8! &11 	#X10
	xor
	push! 1
	lt_u
	jump_zero! .L23.l_oc73901
	# END CBRANCH
	jump! .L83.l_oc73901
.L29.l_oc73901:
	push! 0
	store8! &3 	#X2
	load8! &2 	#X2
	load8! &11 	#X10
	store8
	#
	load8! &9 	#X9
	add! 8
	store8! &10 	#X9
	load8! &10 	#X10
	add! 8
	store8! &11 	#X10
	# CBRANCH
	load8! &9 	#X9
	load8! &4 	#X3
	xor
	push! 1
	lt_u
	jump_zero! .L7.l_oc73901
	# END CBRANCH
	jump! .L84.l_oc73901
.L30.l_oc73901:
	push! 0
	store8! &3 	#X2
	load8! &2 	#X2
	load8! &12 	#X11
	store8
	#
	load8! &10 	#X10
	add! 8
	store8! &11 	#X10
	load8! &11 	#X11
	add! 8
	store8! &12 	#X11
	# CBRANCH
	load8! &10 	#X10
	load8! &5 	#X4
	xor
	push! 1
	lt_u
	jump_zero! .L11.l_oc73901
	# END CBRANCH
	jump! .L27.l_oc73901
.L1.l_oc73901:
	load8! &5 	#X5
	store8! &79

	# epilogue
	set_sp! &77
	return

# FUNCTION ENDS:crc32_combine_


# FUNCTION BEGINS:get_crc_table
	EXPORT	get_crc_table
get_crc_table:
	# prologue (0 GPRs)

	push! crc_table.s_oc73901
	store8! &2

	# epilogue
	return

# FUNCTION ENDS:get_crc_table

	#peephole zero_extend
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+pushdi
	#peephole pop+push+commut(di)
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole pop(deadreg)+pushdi
	#peephole pop+push+commut(di)
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+pushdi
	#peephole pop+push+commut(di)
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole pop(deadreg)+pushdi
	#peephole pop+push+commut(di)
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+pushdi
	#peephole pop+push+commut(di)
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole pop(deadreg)+pushdi
	#peephole pop+push+commut(di)
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+pushdi
	#peephole pop+push+commut(di)
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole pop(deadreg)+pushdi
	#peephole pop+push+commut(di)
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+pushdi
	#peephole pop+push+commut(di)
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole pop(deadreg)+pushdi
	#peephole pop+push+commut(di)
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+pushdi
	#peephole pop+push+commut(di)
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+pushdi
	#peephole pop+push+commut(di)
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole pop(deadreg)+pushdi
	#peephole pop+push+commut(di)
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole pop(deadreg)+pushdi
	#peephole pop+push+commut(di)
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole pop(deadreg)+pushdi
	#peephole pop+push+commut(di)
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole pop(deadreg)+pushdi
	#peephole pop+push+commut(di)
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole pop(deadreg)+pushdi
	#peephole pop+push+commut(di)
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole pop(deadreg)+pushdi
	#peephole pop+push+commut(di)
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole binop1+deadreg+binop2
	#peephole binop1+deadreg+binop2
	#peephole binop1+deadreg+binop2
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole pop+cmp
	#peephole move
	#peephole 1
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+pushdi
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+pushdi
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+pushdi
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+pushdi
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+pushdi
	#peephole pop+block+push+block
	#peephole pop(deadreg)+pushdi
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+pushdi
	#peephole pop+block+push+block
	#peephole pop(deadreg)+pushdi
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+pushdi
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+pushdi
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+pushdi
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole zero_extend
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+block+push+block
	#peephole pop+block+push+commut(di)
	#peephole redundant blockage insn
	#peephole pop+block+push+commut(di)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+commut(di)
	#peephole pop+block+push+block
	#peephole pop+block+push+commut(di)
	#peephole pop+block+push+block
	#peephole pop+block+push+commut(di)
	#peephole pop+block+push+block
	#peephole pop+block+push+commut(di)
	#peephole pop+block+push+block
	#peephole pop+block+push+commut(di)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+commut(di)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+commut(di)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+commut(di)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole zero_extend
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push

# FUNCTION BEGINS:crc32_z
	EXPORT	crc32_z
crc32_z:
	# prologue (10 GPRs)

	set_sp! &-10

	load8! &12
	store8! &2 	#X1
	load8! &13
	store8! &1 	#AR
	# CBRANCH EQ0
	load8! &1 	#X1
	jump_zero! .L102.l_oc73901
	# END CBRANCH
	load4! &11
	store8! &4 	#X3
	load8! &3 	#X3
	not
	store8! &3 	#X2
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L89.l_oc73901
	# END CBRANCH
	load8! &1 	#X1
	and! 0x3
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L104.l_oc73901
	# END CBRANCH
.L95.l_oc73901:
	load8! &1 	#X1
	add! 1
	store8! &4 	#X3
	load8! &1 	#X1
	load1
	#
	store8! &2 	#X1
	load8! &2 	#X2
	load8! &2 	#X1
	xor
	and! 0xff
	and! 0xffffffff
	shift_l! 2
	add! crc_table.s_oc73901
	load4
	store8! &2 	#X1
	load4! &2 	#X2
	shift_ru! 8
	load8! &2 	#X1
	xor
	store8! &3 	#X2
	load8! &0 	#AR
	add! -1
	store8! &1 	#AR
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L92.l_oc73901
	# END CBRANCH
	load8! &3 	#X3
	and! 0x3
	store8! &5 	#X4
	load8! &3 	#X3
	store8! &2 	#X1
	# CBRANCH EQ0
	load8! &4 	#X4
	jump_not_zero! .L95.l_oc73901
	# END CBRANCH
.L90.l_oc73901:
	# CBRANCH
	push! 31
	load8! &1 	#AR
	lt_u
	jump_zero! .L96.l_oc73901
	# END CBRANCH
	load8! &3 	#X3
	store8! &2 	#X1
	load8! &0 	#AR
	add! -32
	shift_ru! 5
	store8! &6 	#X5
	load8! &5 	#X5
	shift_l! 5
	store8! &5 	#X4
	load8! &3 	#X3
	add! 32
	load8! &5 	#X4
	add
	store8! &5 	#X4
.L97.l_oc73901:
	load8! &1 	#X1
	load4
	#
	load8! &3 	#X2
	xor
	store8! &3 	#X2
	load8! &2 	#X2
	and! 0xff
	and! 0xffffffff
	add! 768
	shift_l! 2
	add! crc_table.s_oc73901
	load4
	store8! &10 	#X9
	load4! &2 	#X2
	shift_ru! 8
	and! 0xff
	and! 0xffffffff
	add! 512
	shift_l! 2
	add! crc_table.s_oc73901
	load4
	store8! &9 	#X8
	load4! &2 	#X2
	shift_ru! 16
	and! 0xff
	and! 0xffffffff
	add! 256
	shift_l! 2
	add! crc_table.s_oc73901
	load4
	store8! &8 	#X7
	load4! &2 	#X2
	shift_ru! 24
	and! 0xffffffff
	shift_l! 2
	add! crc_table.s_oc73901
	load4
	load8! &10 	#X9
	xor
	store8! &7 	#X6
	load8! &1 	#X1
	add! 4
	load4
	#
	load8! &7 	#X6
	xor
	load8! &9 	#X8
	xor
	load8! &8 	#X7
	xor
	store8! &3 	#X2
	load8! &2 	#X2
	and! 0xff
	and! 0xffffffff
	add! 768
	shift_l! 2
	add! crc_table.s_oc73901
	load4
	store8! &10 	#X9
	load4! &2 	#X2
	shift_ru! 8
	and! 0xff
	and! 0xffffffff
	add! 512
	shift_l! 2
	add! crc_table.s_oc73901
	load4
	store8! &9 	#X8
	load4! &2 	#X2
	shift_ru! 16
	and! 0xff
	and! 0xffffffff
	add! 256
	shift_l! 2
	add! crc_table.s_oc73901
	load4
	store8! &8 	#X7
	load4! &2 	#X2
	shift_ru! 24
	and! 0xffffffff
	shift_l! 2
	add! crc_table.s_oc73901
	load4
	load8! &10 	#X9
	xor
	store8! &7 	#X6
	load8! &1 	#X1
	add! 8
	load4
	#
	load8! &7 	#X6
	xor
	load8! &9 	#X8
	xor
	load8! &8 	#X7
	xor
	store8! &3 	#X2
	load8! &2 	#X2
	and! 0xff
	and! 0xffffffff
	add! 768
	shift_l! 2
	add! crc_table.s_oc73901
	load4
	store8! &10 	#X9
	load4! &2 	#X2
	shift_ru! 8
	and! 0xff
	and! 0xffffffff
	add! 512
	shift_l! 2
	add! crc_table.s_oc73901
	load4
	store8! &9 	#X8
	load4! &2 	#X2
	shift_ru! 16
	and! 0xff
	and! 0xffffffff
	add! 256
	shift_l! 2
	add! crc_table.s_oc73901
	load4
	store8! &8 	#X7
	load4! &2 	#X2
	shift_ru! 24
	and! 0xffffffff
	shift_l! 2
	add! crc_table.s_oc73901
	load4
	load8! &10 	#X9
	xor
	store8! &7 	#X6
	load8! &1 	#X1
	add! 12
	load4
	#
	load8! &7 	#X6
	xor
	load8! &9 	#X8
	xor
	load8! &8 	#X7
	xor
	store8! &3 	#X2
	load8! &2 	#X2
	and! 0xff
	and! 0xffffffff
	add! 768
	shift_l! 2
	add! crc_table.s_oc73901
	load4
	store8! &10 	#X9
	load4! &2 	#X2
	shift_ru! 8
	and! 0xff
	and! 0xffffffff
	add! 512
	shift_l! 2
	add! crc_table.s_oc73901
	load4
	store8! &7 	#X6
	load4! &2 	#X2
	shift_ru! 16
	and! 0xff
	and! 0xffffffff
	add! 256
	shift_l! 2
	add! crc_table.s_oc73901
	load4
	store8! &8 	#X7
	load4! &2 	#X2
	shift_ru! 24
	and! 0xffffffff
	shift_l! 2
	add! crc_table.s_oc73901
	load4
	load8! &10 	#X9
	xor
	store8! &3 	#X2
	load8! &1 	#X1
	add! 16
	load4
	#
	load8! &3 	#X2
	xor
	store8! &3 	#X2
	load8! &6 	#X6
	load8! &3 	#X2
	xor
	load8! &8 	#X7
	xor
	store8! &3 	#X2
	load8! &2 	#X2
	and! 0xff
	and! 0xffffffff
	add! 768
	shift_l! 2
	add! crc_table.s_oc73901
	load4
	store8! &10 	#X9
	load4! &2 	#X2
	shift_ru! 8
	and! 0xff
	and! 0xffffffff
	add! 512
	shift_l! 2
	add! crc_table.s_oc73901
	load4
	store8! &9 	#X8
	load4! &2 	#X2
	shift_ru! 16
	and! 0xff
	and! 0xffffffff
	add! 256
	shift_l! 2
	add! crc_table.s_oc73901
	load4
	store8! &7 	#X6
	load4! &2 	#X2
	shift_ru! 24
	and! 0xffffffff
	shift_l! 2
	add! crc_table.s_oc73901
	load4
	load8! &10 	#X9
	xor
	store8! &3 	#X2
	load8! &1 	#X1
	add! 20
	load4
	#
	load8! &3 	#X2
	xor
	load8! &9 	#X8
	xor
	load8! &7 	#X6
	xor
	store8! &3 	#X2
	load8! &2 	#X2
	and! 0xff
	and! 0xffffffff
	add! 768
	shift_l! 2
	add! crc_table.s_oc73901
	load4
	store8! &10 	#X9
	load4! &2 	#X2
	shift_ru! 8
	and! 0xff
	and! 0xffffffff
	add! 512
	shift_l! 2
	add! crc_table.s_oc73901
	load4
	store8! &9 	#X8
	load4! &2 	#X2
	shift_ru! 16
	and! 0xff
	and! 0xffffffff
	add! 256
	shift_l! 2
	add! crc_table.s_oc73901
	load4
	store8! &7 	#X6
	load4! &2 	#X2
	shift_ru! 24
	and! 0xffffffff
	shift_l! 2
	add! crc_table.s_oc73901
	load4
	load8! &10 	#X9
	xor
	store8! &8 	#X7
	load8! &1 	#X1
	add! 24
	load4
	#
	load8! &8 	#X7
	xor
	load8! &9 	#X8
	xor
	load8! &7 	#X6
	xor
	store8! &3 	#X2
	load8! &2 	#X2
	and! 0xff
	and! 0xffffffff
	add! 768
	shift_l! 2
	add! crc_table.s_oc73901
	load4
	store8! &10 	#X9
	load4! &2 	#X2
	shift_ru! 8
	and! 0xff
	and! 0xffffffff
	add! 512
	shift_l! 2
	add! crc_table.s_oc73901
	load4
	store8! &9 	#X8
	load4! &2 	#X2
	shift_ru! 16
	and! 0xff
	and! 0xffffffff
	add! 256
	shift_l! 2
	add! crc_table.s_oc73901
	load4
	store8! &8 	#X7
	load4! &2 	#X2
	shift_ru! 24
	and! 0xffffffff
	shift_l! 2
	add! crc_table.s_oc73901
	load4
	load8! &10 	#X9
	xor
	store8! &7 	#X6
	load8! &1 	#X1
	add! 28
	load4
	#
	load8! &7 	#X6
	xor
	load8! &9 	#X8
	xor
	load8! &8 	#X7
	xor
	store8! &3 	#X2
	load8! &2 	#X2
	and! 0xff
	and! 0xffffffff
	add! 768
	shift_l! 2
	add! crc_table.s_oc73901
	load4
	store8! &10 	#X9
	load4! &2 	#X2
	shift_ru! 8
	and! 0xff
	and! 0xffffffff
	add! 512
	shift_l! 2
	add! crc_table.s_oc73901
	load4
	store8! &9 	#X8
	load4! &2 	#X2
	shift_ru! 16
	and! 0xff
	and! 0xffffffff
	add! 256
	shift_l! 2
	add! crc_table.s_oc73901
	load4
	store8! &8 	#X7
	load4! &2 	#X2
	shift_ru! 24
	and! 0xffffffff
	shift_l! 2
	add! crc_table.s_oc73901
	load4
	load8! &10 	#X9
	xor
	load8! &9 	#X8
	xor
	load8! &8 	#X7
	xor
	store8! &3 	#X2
	load8! &1 	#X1
	add! 32
	store8! &2 	#X1
	# CBRANCH
	load8! &4 	#X4
	load8! &2 	#X1
	xor
	push! 1
	lt_u
	jump_zero! .L97.l_oc73901
	# END CBRANCH
	load8! &0 	#AR
	and! 0x1f
	store8! &1 	#AR
	load8! &5 	#X5
	add! 1
	shift_l! 5
	load8! &4 	#X3
	add
	store8! &4 	#X3
.L96.l_oc73901:
	# CBRANCH
	push! 3
	load8! &1 	#AR
	lt_u
	jump_zero! .L94.l_oc73901
	# END CBRANCH
	load8! &3 	#X3
	load4
	#
	load8! &3 	#X2
	xor
	store8! &2 	#X1
	load8! &1 	#X1
	and! 0xff
	and! 0xffffffff
	add! 768
	shift_l! 2
	add! crc_table.s_oc73901
	load4
	store8! &6 	#X5
	load4! &1 	#X1
	shift_ru! 8
	and! 0xff
	and! 0xffffffff
	add! 512
	shift_l! 2
	add! crc_table.s_oc73901
	load4
	store8! &5 	#X4
	load4! &1 	#X1
	shift_ru! 16
	and! 0xff
	and! 0xffffffff
	add! 256
	shift_l! 2
	add! crc_table.s_oc73901
	load4
	store8! &3 	#X2
	load4! &1 	#X1
	shift_ru! 24
	and! 0xffffffff
	shift_l! 2
	add! crc_table.s_oc73901
	load4
	load8! &6 	#X5
	xor
	load8! &5 	#X4
	xor
	store8! &2 	#X1
	load8! &2 	#X2
	load8! &2 	#X1
	xor
	store8! &3 	#X2
	load8! &0 	#AR
	add! -4
	store8! &5 	#X4
	# CBRANCH
	push! 3
	load8! &5 	#X4
	lt_u
	jump_zero! .L99.l_oc73901
	# END CBRANCH
	load8! &3 	#X3
	add! 4
	load4
	#
	load8! &3 	#X2
	xor
	store8! &2 	#X1
	load8! &1 	#X1
	and! 0xff
	and! 0xffffffff
	add! 768
	shift_l! 2
	add! crc_table.s_oc73901
	load4
	store8! &7 	#X6
	load4! &1 	#X1
	shift_ru! 8
	and! 0xff
	and! 0xffffffff
	add! 512
	shift_l! 2
	add! crc_table.s_oc73901
	load4
	store8! &6 	#X5
	load4! &1 	#X1
	shift_ru! 16
	and! 0xff
	and! 0xffffffff
	add! 256
	shift_l! 2
	add! crc_table.s_oc73901
	load4
	store8! &3 	#X2
	load4! &1 	#X1
	shift_ru! 24
	and! 0xffffffff
	shift_l! 2
	add! crc_table.s_oc73901
	load4
	load8! &7 	#X6
	xor
	load8! &6 	#X5
	xor
	store8! &2 	#X1
	load8! &2 	#X2
	load8! &2 	#X1
	xor
	store8! &3 	#X2
	load8! &0 	#AR
	add! -8
	store8! &2 	#X1
	# CBRANCH
	push! 3
	load8! &2 	#X1
	lt_u
	jump_zero! .L99.l_oc73901
	# END CBRANCH
	load8! &3 	#X3
	add! 8
	load4
	#
	load8! &3 	#X2
	xor
	store8! &2 	#X1
	load8! &1 	#X1
	and! 0xff
	and! 0xffffffff
	add! 768
	shift_l! 2
	add! crc_table.s_oc73901
	load4
	store8! &7 	#X6
	load4! &1 	#X1
	shift_ru! 8
	and! 0xff
	and! 0xffffffff
	add! 512
	shift_l! 2
	add! crc_table.s_oc73901
	load4
	store8! &6 	#X5
	load4! &1 	#X1
	shift_ru! 16
	and! 0xff
	and! 0xffffffff
	add! 256
	shift_l! 2
	add! crc_table.s_oc73901
	load4
	store8! &3 	#X2
	load4! &1 	#X1
	shift_ru! 24
	and! 0xffffffff
	shift_l! 2
	add! crc_table.s_oc73901
	load4
	load8! &7 	#X6
	xor
	load8! &6 	#X5
	xor
	store8! &2 	#X1
	load8! &2 	#X2
	load8! &2 	#X1
	xor
	store8! &3 	#X2
	load8! &0 	#AR
	add! -12
	store8! &2 	#X1
	# CBRANCH
	push! 3
	load8! &2 	#X1
	lt_u
	jump_zero! .L99.l_oc73901
	# END CBRANCH
	load8! &3 	#X3
	add! 12
	load4
	#
	load8! &3 	#X2
	xor
	store8! &2 	#X1
	load8! &1 	#X1
	and! 0xff
	and! 0xffffffff
	add! 768
	shift_l! 2
	add! crc_table.s_oc73901
	load4
	store8! &7 	#X6
	load4! &1 	#X1
	shift_ru! 8
	and! 0xff
	and! 0xffffffff
	add! 512
	shift_l! 2
	add! crc_table.s_oc73901
	load4
	store8! &6 	#X5
	load4! &1 	#X1
	shift_ru! 16
	and! 0xff
	and! 0xffffffff
	add! 256
	shift_l! 2
	add! crc_table.s_oc73901
	load4
	store8! &3 	#X2
	load4! &1 	#X1
	shift_ru! 24
	and! 0xffffffff
	shift_l! 2
	add! crc_table.s_oc73901
	load4
	load8! &7 	#X6
	xor
	load8! &6 	#X5
	xor
	store8! &2 	#X1
	load8! &2 	#X2
	load8! &2 	#X1
	xor
	store8! &3 	#X2
	load8! &0 	#AR
	add! -16
	store8! &2 	#X1
	# CBRANCH
	push! 3
	load8! &2 	#X1
	lt_u
	jump_zero! .L99.l_oc73901
	# END CBRANCH
	load8! &3 	#X3
	add! 16
	load4
	#
	load8! &3 	#X2
	xor
	store8! &2 	#X1
	load8! &1 	#X1
	and! 0xff
	and! 0xffffffff
	add! 768
	shift_l! 2
	add! crc_table.s_oc73901
	load4
	store8! &7 	#X6
	load4! &1 	#X1
	shift_ru! 8
	and! 0xff
	and! 0xffffffff
	add! 512
	shift_l! 2
	add! crc_table.s_oc73901
	load4
	store8! &6 	#X5
	load4! &1 	#X1
	shift_ru! 16
	and! 0xff
	and! 0xffffffff
	add! 256
	shift_l! 2
	add! crc_table.s_oc73901
	load4
	store8! &3 	#X2
	load4! &1 	#X1
	shift_ru! 24
	and! 0xffffffff
	shift_l! 2
	add! crc_table.s_oc73901
	load4
	load8! &7 	#X6
	xor
	load8! &6 	#X5
	xor
	store8! &2 	#X1
	load8! &2 	#X2
	load8! &2 	#X1
	xor
	store8! &3 	#X2
	load8! &0 	#AR
	add! -20
	store8! &2 	#X1
	# CBRANCH
	push! 3
	load8! &2 	#X1
	lt_u
	jump_zero! .L99.l_oc73901
	# END CBRANCH
	load8! &3 	#X3
	add! 20
	load4
	#
	load8! &3 	#X2
	xor
	store8! &2 	#X1
	load8! &1 	#X1
	and! 0xff
	and! 0xffffffff
	add! 768
	shift_l! 2
	add! crc_table.s_oc73901
	load4
	store8! &7 	#X6
	load4! &1 	#X1
	shift_ru! 8
	and! 0xff
	and! 0xffffffff
	add! 512
	shift_l! 2
	add! crc_table.s_oc73901
	load4
	store8! &6 	#X5
	load4! &1 	#X1
	shift_ru! 16
	and! 0xff
	and! 0xffffffff
	add! 256
	shift_l! 2
	add! crc_table.s_oc73901
	load4
	store8! &3 	#X2
	load4! &1 	#X1
	shift_ru! 24
	and! 0xffffffff
	shift_l! 2
	add! crc_table.s_oc73901
	load4
	load8! &7 	#X6
	xor
	load8! &6 	#X5
	xor
	store8! &2 	#X1
	load8! &2 	#X2
	load8! &2 	#X1
	xor
	store8! &3 	#X2
	load8! &0 	#AR
	add! -24
	store8! &2 	#X1
	# CBRANCH
	push! 3
	load8! &2 	#X1
	lt_u
	jump_zero! .L99.l_oc73901
	# END CBRANCH
	load8! &3 	#X3
	add! 24
	load4
	#
	load8! &3 	#X2
	xor
	store8! &2 	#X1
	load8! &1 	#X1
	and! 0xff
	and! 0xffffffff
	add! 768
	shift_l! 2
	add! crc_table.s_oc73901
	load4
	store8! &8 	#X7
	load4! &1 	#X1
	shift_ru! 8
	and! 0xff
	and! 0xffffffff
	add! 512
	shift_l! 2
	add! crc_table.s_oc73901
	load4
	store8! &7 	#X6
	load4! &1 	#X1
	shift_ru! 16
	and! 0xff
	and! 0xffffffff
	add! 256
	shift_l! 2
	add! crc_table.s_oc73901
	load4
	store8! &6 	#X5
	load4! &1 	#X1
	shift_ru! 24
	and! 0xffffffff
	shift_l! 2
	add! crc_table.s_oc73901
	load4
	load8! &8 	#X7
	xor
	load8! &7 	#X6
	xor
	load8! &6 	#X5
	xor
	store8! &3 	#X2
.L99.l_oc73901:
	load8! &4 	#X4
	shift_ru! 2
	add! 1
	shift_l! 2
	load8! &4 	#X3
	add
	store8! &4 	#X3
	load8! &0 	#AR
	and! 0x3
	store8! &1 	#AR
.L94.l_oc73901:
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L92.l_oc73901
	# END CBRANCH
	load8! &3 	#X3
	load1
	#
	and! 0x0ff
	load8! &3 	#X2
	xor
	and! 0xff
	and! 0xffffffff
	shift_l! 2
	add! crc_table.s_oc73901
	load4
	store8! &5 	#X4
	load4! &2 	#X2
	shift_ru! 8
	load8! &5 	#X4
	xor
	store8! &2 	#X1
	load8! &0 	#AR
	add! -1
	store8! &1 	#AR
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L101.l_oc73901
	# END CBRANCH
	load8! &3 	#X3
	add! 1
	load1
	#
	store8! &3 	#X2
	load8! &1 	#X1
	load8! &3 	#X2
	xor
	and! 0xff
	and! 0xffffffff
	shift_l! 2
	add! crc_table.s_oc73901
	load4
	store8! &3 	#X2
	load4! &1 	#X1
	shift_ru! 8
	load8! &3 	#X2
	xor
	store8! &2 	#X1
	# CBRANCH EQ
	load8! &0 	#AR
	push! 1
	xor
	jump_zero! .L101.l_oc73901
	# END CBRANCH
	load8! &3 	#X3
	add! 2
	load1
	#
	store8! &1 	#AR
	load8! &1 	#X1
	load8! &1 	#AR
	xor
	and! 0xff
	and! 0xffffffff
	shift_l! 2
	add! crc_table.s_oc73901
	load4
	store8! &1 	#AR
	load4! &1 	#X1
	shift_ru! 8
	load8! &1 	#AR
	xor
	store8! &2 	#X1
.L101.l_oc73901:
	load8! &1 	#X1
	not
	store8! &4 	#X3
.L89.l_oc73901:
	load4! &3 	#X3
	store8! &1 	#AR
.L87.l_oc73901:
	load8! &0 	#AR
	store8! &12
	jump! .L116.l_oc73901
.L92.l_oc73901:
	load8! &2 	#X2
	not
	store8! &4 	#X3
	load4! &3 	#X3
	store8! &1 	#AR
	jump! .L87.l_oc73901
.L102.l_oc73901:
	push! 0
	store8! &1 	#AR
	load8! &0 	#AR
	store8! &12
	jump! .L116.l_oc73901
.L104.l_oc73901:
	load8! &1 	#X1
	store8! &4 	#X3
	jump! .L90.l_oc73901
.L116.l_oc73901:

	# epilogue
	set_sp! &10
	return

# FUNCTION ENDS:crc32_z

	#peephole zero_extend
	#peephole pop+pusharg

# FUNCTION BEGINS:crc32
	EXPORT	crc32
crc32:
	# prologue (1 GPRs)
	push! 0

	load4! &4
	#peep - pop(deadreg)+pusharg
	load8! &4
	load8! &4
	call! crc32_z
	store8! &3

	set_sp! &2
	load8! &0 	#AR
	store8! &3

	# epilogue
	store8! &0 #set_sp! &1
	return

# FUNCTION ENDS:crc32


# FUNCTION BEGINS:crc32_combine
	EXPORT	crc32_combine
crc32_combine:
	# prologue (1 GPRs)
	push! 0

	load8! &4
	load8! &4
	load8! &4
	call! crc32_combine_.s_oc73901
	store8! &3

	set_sp! &2
	load8! &0 	#AR
	store8! &3

	# epilogue
	store8! &0 #set_sp! &1
	return

# FUNCTION ENDS:crc32_combine


# FUNCTION BEGINS:crc32_combine64
	EXPORT	crc32_combine64
crc32_combine64:
	# prologue (1 GPRs)
	push! 0

	load8! &4
	load8! &4
	load8! &4
	call! crc32_combine_.s_oc73901
	store8! &3

	set_sp! &2
	load8! &0 	#AR
	store8! &3

	# epilogue
	store8! &0 #set_sp! &1
	return

# FUNCTION ENDS:crc32_combine64

crc_table.s_oc73901:
	data4 [0]
	data4 [1996959894]
	data4 [-301047508]
	data4 [-1727442502]
	data4 [124634137]
	data4 [1886057615]
	data4 [-379345611]
	data4 [-1637575261]
	data4 [249268274]
	data4 [2044508324]
	data4 [-522852066]
	data4 [-1747789432]
	data4 [162941995]
	data4 [2125561021]
	data4 [-407360249]
	data4 [-1866523247]
	data4 [498536548]
	data4 [1789927666]
	data4 [-205950648]
	data4 [-2067906082]
	data4 [450548861]
	data4 [1843258603]
	data4 [-187386543]
	data4 [-2083289657]
	data4 [325883990]
	data4 [1684777152]
	data4 [-43845254]
	data4 [-1973040660]
	data4 [335633487]
	data4 [1661365465]
	data4 [-99664541]
	data4 [-1928851979]
	data4 [997073096]
	data4 [1281953886]
	data4 [-715111964]
	data4 [-1570279054]
	data4 [1006888145]
	data4 [1258607687]
	data4 [-770865667]
	data4 [-1526024853]
	data4 [901097722]
	data4 [1119000684]
	data4 [-608450090]
	data4 [-1396901568]
	data4 [853044451]
	data4 [1172266101]
	data4 [-589951537]
	data4 [-1412350631]
	data4 [651767980]
	data4 [1373503546]
	data4 [-925412992]
	data4 [-1076862698]
	data4 [565507253]
	data4 [1454621731]
	data4 [-809855591]
	data4 [-1195530993]
	data4 [671266974]
	data4 [1594198024]
	data4 [-972236366]
	data4 [-1324619484]
	data4 [795835527]
	data4 [1483230225]
	data4 [-1050600021]
	data4 [-1234817731]
	data4 [1994146192]
	data4 [31158534]
	data4 [-1731059524]
	data4 [-271249366]
	data4 [1907459465]
	data4 [112637215]
	data4 [-1614814043]
	data4 [-390540237]
	data4 [2013776290]
	data4 [251722036]
	data4 [-1777751922]
	data4 [-519137256]
	data4 [2137656763]
	data4 [141376813]
	data4 [-1855689577]
	data4 [-429695999]
	data4 [1802195444]
	data4 [476864866]
	data4 [-2056965928]
	data4 [-228458418]
	data4 [1812370925]
	data4 [453092731]
	data4 [-2113342271]
	data4 [-183516073]
	data4 [1706088902]
	data4 [314042704]
	data4 [-1950435094]
	data4 [-54949764]
	data4 [1658658271]
	data4 [366619977]
	data4 [-1932296973]
	data4 [-69972891]
	data4 [1303535960]
	data4 [984961486]
	data4 [-1547960204]
	data4 [-725929758]
	data4 [1256170817]
	data4 [1037604311]
	data4 [-1529756563]
	data4 [-740887301]
	data4 [1131014506]
	data4 [879679996]
	data4 [-1385723834]
	data4 [-631195440]
	data4 [1141124467]
	data4 [855842277]
	data4 [-1442165665]
	data4 [-586318647]
	data4 [1342533948]
	data4 [654459306]
	data4 [-1106571248]
	data4 [-921952122]
	data4 [1466479909]
	data4 [544179635]
	data4 [-1184443383]
	data4 [-832445281]
	data4 [1591671054]
	data4 [702138776]
	data4 [-1328506846]
	data4 [-942167884]
	data4 [1504918807]
	data4 [783551873]
	data4 [-1212326853]
	data4 [-1061524307]
	data4 [-306674912]
	data4 [-1698712650]
	data4 [62317068]
	data4 [1957810842]
	data4 [-355121351]
	data4 [-1647151185]
	data4 [81470997]
	data4 [1943803523]
	data4 [-480048366]
	data4 [-1805370492]
	data4 [225274430]
	data4 [2053790376]
	data4 [-468791541]
	data4 [-1828061283]
	data4 [167816743]
	data4 [2097651377]
	data4 [-267414716]
	data4 [-2029476910]
	data4 [503444072]
	data4 [1762050814]
	data4 [-144550051]
	data4 [-2140837941]
	data4 [426522225]
	data4 [1852507879]
	data4 [-19653770]
	data4 [-1982649376]
	data4 [282753626]
	data4 [1742555852]
	data4 [-105259153]
	data4 [-1900089351]
	data4 [397917763]
	data4 [1622183637]
	data4 [-690576408]
	data4 [-1580100738]
	data4 [953729732]
	data4 [1340076626]
	data4 [-776247311]
	data4 [-1497606297]
	data4 [1068828381]
	data4 [1219638859]
	data4 [-670225446]
	data4 [-1358292148]
	data4 [906185462]
	data4 [1090812512]
	data4 [-547295293]
	data4 [-1469587627]
	data4 [829329135]
	data4 [1181335161]
	data4 [-882789492]
	data4 [-1134132454]
	data4 [628085408]
	data4 [1382605366]
	data4 [-871598187]
	data4 [-1156888829]
	data4 [570562233]
	data4 [1426400815]
	data4 [-977650754]
	data4 [-1296233688]
	data4 [733239954]
	data4 [1555261956]
	data4 [-1026031705]
	data4 [-1244606671]
	data4 [752459403]
	data4 [1541320221]
	data4 [-1687895376]
	data4 [-328994266]
	data4 [1969922972]
	data4 [40735498]
	data4 [-1677130071]
	data4 [-351390145]
	data4 [1913087877]
	data4 [83908371]
	data4 [-1782625662]
	data4 [-491226604]
	data4 [2075208622]
	data4 [213261112]
	data4 [-1831694693]
	data4 [-438977011]
	data4 [2094854071]
	data4 [198958881]
	data4 [-2032938284]
	data4 [-237706686]
	data4 [1759359992]
	data4 [534414190]
	data4 [-2118248755]
	data4 [-155638181]
	data4 [1873836001]
	data4 [414664567]
	data4 [-2012718362]
	data4 [-15766928]
	data4 [1711684554]
	data4 [285281116]
	data4 [-1889165569]
	data4 [-127750551]
	data4 [1634467795]
	data4 [376229701]
	data4 [-1609899400]
	data4 [-686959890]
	data4 [1308918612]
	data4 [956543938]
	data4 [-1486412191]
	data4 [-799009033]
	data4 [1231636301]
	data4 [1047427035]
	data4 [-1362007478]
	data4 [-640263460]
	data4 [1088359270]
	data4 [936918000]
	data4 [-1447252397]
	data4 [-558129467]
	data4 [1202900863]
	data4 [817233897]
	data4 [-1111625188]
	data4 [-893730166]
	data4 [1404277552]
	data4 [615818150]
	data4 [-1160759803]
	data4 [-841546093]
	data4 [1423857449]
	data4 [601450431]
	data4 [-1285129682]
	data4 [-1000256840]
	data4 [1567103746]
	data4 [711928724]
	data4 [-1274298825]
	data4 [-1022587231]
	data4 [1510334235]
	data4 [755167117]
	data4 [0]
	data4 [421212481]
	data4 [842424962]
	data4 [724390851]
	data4 [1684849924]
	data4 [2105013317]
	data4 [1448781702]
	data4 [1329698503]
	data4 [-925267448]
	data4 [-775767223]
	data4 [-84940662]
	data4 [-470492725]
	data4 [-1397403892]
	data4 [-1246855603]
	data4 [-1635570290]
	data4 [-2020074289]
	data4 [1254232657]
	data4 [1406739216]
	data4 [2029285587]
	data4 [1643069842]
	data4 [783210325]
	data4 [934667796]
	data4 [479770071]
	data4 [92505238]
	data4 [-2112120743]
	data4 [-1694455528]
	data4 [-1339163941]
	data4 [-1456026726]
	data4 [-428384931]
	data4 [-9671652]
	data4 [-733921313]
	data4 [-849736034]
	data4 [-1786501982]
	data4 [-1935731229]
	data4 [-1481488864]
	data4 [-1096190111]
	data4 [-236396122]
	data4 [-386674457]
	data4 [-1008827612]
	data4 [-624577947]
	data4 [1566420650]
	data4 [1145479147]
	data4 [1869335592]
	data4 [1987116393]
	data4 [959540142]
	data4 [539646703]
	data4 [185010476]
	data4 [303839341]
	data4 [-549046541]
	data4 [-966981710]
	data4 [-311405455]
	data4 [-194288336]
	data4 [-1154812937]
	data4 [-1573797194]
	data4 [-1994616459]
	data4 [-1878548428]
	data4 [396344571]
	data4 [243568058]
	data4 [631889529]
	data4 [1018359608]
	data4 [1945336319]
	data4 [1793607870]
	data4 [1103436669]
	data4 [1490954812]
	data4 [-260485371]
	data4 [-379421116]
	data4 [-1034998393]
	data4 [-615244602]
	data4 [-1810527743]
	data4 [-1928414400]
	data4 [-1507596157]
	data4 [-1086793278]
	data4 [950060301]
	data4 [565965900]
	data4 [177645455]
	data4 [328046286]
	data4 [1556873225]
	data4 [1171730760]
	data4 [1861902987]
	data4 [2011255754]
	data4 [-1162125996]
	data4 [-1549767659]
	data4 [-2004009002]
	data4 [-1852436841]
	data4 [-556296112]
	data4 [-942888687]
	data4 [-320734510]
	data4 [-168113261]
	data4 [1919080284]
	data4 [1803150877]
	data4 [1079293406]
	data4 [1498383519]
	data4 [370020952]
	data4 [253043481]
	data4 [607678682]
	data4 [1025720731]
	data4 [1711106983]
	data4 [2095471334]
	data4 [1472923941]
	data4 [1322268772]
	data4 [26324643]
	data4 [411738082]
	data4 [866634785]
	data4 [717028704]
	data4 [-1390091857]
	data4 [-1270886162]
	data4 [-1626176723]
	data4 [-2046184852]
	data4 [-918018901]
	data4 [-799861270]
	data4 [-75610583]
	data4 [-496666776]
	data4 [792689142]
	data4 [908347575]
	data4 [487136116]
	data4 [68299317]
	data4 [1263779058]
	data4 [1380486579]
	data4 [2036719216]
	data4 [1618931505]
	data4 [-404294658]
	data4 [-16923969]
	data4 [-707751556]
	data4 [-859070403]
	data4 [-2088093958]
	data4 [-1701771333]
	data4 [-1313057672]
	data4 [-1465424583]
	data4 [998479947]
	data4 [580430090]
	data4 [162921161]
	data4 [279890824]
	data4 [1609522511]
	data4 [1190423566]
	data4 [1842954189]
	data4 [1958874764]
	data4 [-212200893]
	data4 [-364829950]
	data4 [-1049857855]
	data4 [-663273088]
	data4 [-1758013625]
	data4 [-1909594618]
	data4 [-1526680123]
	data4 [-1139047292]
	data4 [1900120602]
	data4 [1750776667]
	data4 [1131931800]
	data4 [1517083097]
	data4 [355290910]
	data4 [204897887]
	data4 [656092572]
	data4 [1040194781]
	data4 [-1181220846]
	data4 [-1602014893]
	data4 [-1951505776]
	data4 [-1833610287]
	data4 [-571161322]
	data4 [-990907305]
	data4 [-272455788]
	data4 [-153512235]
	data4 [-1375224599]
	data4 [-1222865496]
	data4 [-1674453397]
	data4 [-2060783830]
	data4 [-898926099]
	data4 [-747616084]
	data4 [-128115857]
	data4 [-515495378]
	data4 [1725839073]
	data4 [2143618976]
	data4 [1424512099]
	data4 [1307796770]
	data4 [45282277]
	data4 [464110244]
	data4 [813994343]
	data4 [698327078]
	data4 [-456806728]
	data4 [-35741703]
	data4 [-688665542]
	data4 [-806814341]
	data4 [-2136380484]
	data4 [-1716364547]
	data4 [-1298200258]
	data4 [-1417398145]
	data4 [740041904]
	data4 [889656817]
	data4 [506086962]
	data4 [120682355]
	data4 [1215357364]
	data4 [1366020341]
	data4 [2051441462]
	data4 [1667084919]
	data4 [-872753330]
	data4 [-756947441]
	data4 [-104024628]
	data4 [-522746739]
	data4 [-1349119414]
	data4 [-1232264437]
	data4 [-1650429752]
	data4 [-2068102775]
	data4 [52649286]
	data4 [439905287]
	data4 [823476164]
	data4 [672009861]
	data4 [1733269570]
	data4 [2119477507]
	data4 [1434057408]
	data4 [1281543041]
	data4 [-2126985953]
	data4 [-1742474146]
	data4 [-1290885219]
	data4 [-1441425700]
	data4 [-447479781]
	data4 [-61918886]
	data4 [-681418087]
	data4 [-830909480]
	data4 [1239502615]
	data4 [1358593622]
	data4 [2077699477]
	data4 [1657543892]
	data4 [764250643]
	data4 [882293586]
	data4 [532408465]
	data4 [111204816]
	data4 [1585378284]
	data4 [1197851309]
	data4 [1816695150]
	data4 [1968414767]
	data4 [974272232]
	data4 [587794345]
	data4 [136598634]
	data4 [289367339]
	data4 [-1767409180]
	data4 [-1883486043]
	data4 [-1533994138]
	data4 [-1115018713]
	data4 [-221528864]
	data4 [-338653791]
	data4 [-1057104286]
	data4 [-639176925]
	data4 [347922877]
	data4 [229101820]
	data4 [646611775]
	data4 [1066513022]
	data4 [1892689081]
	data4 [1774917112]
	data4 [1122387515]
	data4 [1543337850]
	data4 [-597333067]
	data4 [-981574924]
	data4 [-296548041]
	data4 [-146261898]
	data4 [-1207325007]
	data4 [-1592614928]
	data4 [-1975530445]
	data4 [-1826292366]
	data4 [0]
	data4 [29518391]
	data4 [59036782]
	data4 [38190681]
	data4 [118073564]
	data4 [114017003]
	data4 [76381362]
	data4 [89069189]
	data4 [236147128]
	data4 [265370511]
	data4 [228034006]
	data4 [206958561]
	data4 [152762724]
	data4 [148411219]
	data4 [178138378]
	data4 [190596925]
	data4 [472294256]
	data4 [501532999]
	data4 [530741022]
	data4 [509615401]
	data4 [456068012]
	data4 [451764635]
	data4 [413917122]
	data4 [426358261]
	data4 [305525448]
	data4 [334993663]
	data4 [296822438]
	data4 [275991697]
	data4 [356276756]
	data4 [352202787]
	data4 [381193850]
	data4 [393929805]
	data4 [944588512]
	data4 [965684439]
	data4 [1003065998]
	data4 [973863097]
	data4 [1061482044]
	data4 [1049003019]
	data4 [1019230802]
	data4 [1023561829]
	data4 [912136024]
	data4 [933002607]
	data4 [903529270]
	data4 [874031361]
	data4 [827834244]
	data4 [815125939]
	data4 [852716522]
	data4 [856752605]
	data4 [611050896]
	data4 [631869351]
	data4 [669987326]
	data4 [640506825]
	data4 [593644876]
	data4 [580921211]
	data4 [551983394]
	data4 [556069653]
	data4 [712553512]
	data4 [733666847]
	data4 [704405574]
	data4 [675154545]
	data4 [762387700]
	data4 [749958851]
	data4 [787859610]
	data4 [792175277]
	data4 [1889177024]
	data4 [1901651959]
	data4 [1931368878]
	data4 [1927033753]
	data4 [2006131996]
	data4 [1985040171]
	data4 [1947726194]
	data4 [1976933189]
	data4 [2122964088]
	data4 [2135668303]
	data4 [2098006038]
	data4 [2093965857]
	data4 [2038461604]
	data4 [2017599123]
	data4 [2047123658]
	data4 [2076625661]
	data4 [1824272048]
	data4 [1836991623]
	data4 [1866005214]
	data4 [1861914857]
	data4 [1807058540]
	data4 [1786244187]
	data4 [1748062722]
	data4 [1777547317]
	data4 [1655668488]
	data4 [1668093247]
	data4 [1630251878]
	data4 [1625932113]
	data4 [1705433044]
	data4 [1684323811]
	data4 [1713505210]
	data4 [1742760333]
	data4 [1222101792]
	data4 [1226154263]
	data4 [1263738702]
	data4 [1251046777]
	data4 [1339974652]
	data4 [1310460363]
	data4 [1281013650]
	data4 [1301863845]
	data4 [1187289752]
	data4 [1191637167]
	data4 [1161842422]
	data4 [1149379777]
	data4 [1103966788]
	data4 [1074747507]
	data4 [1112139306]
	data4 [1133218845]
	data4 [1425107024]
	data4 [1429406311]
	data4 [1467333694]
	data4 [1454888457]
	data4 [1408811148]
	data4 [1379576507]
	data4 [1350309090]
	data4 [1371438805]
	data4 [1524775400]
	data4 [1528845279]
	data4 [1499917702]
	data4 [1487177649]
	data4 [1575719220]
	data4 [1546255107]
	data4 [1584350554]
	data4 [1605185389]
	data4 [-516613248]
	data4 [-520654409]
	data4 [-491663378]
	data4 [-478960167]
	data4 [-432229540]
	data4 [-402728597]
	data4 [-440899790]
	data4 [-461763323]
	data4 [-282703304]
	data4 [-287039473]
	data4 [-324886954]
	data4 [-312413087]
	data4 [-399514908]
	data4 [-370308909]
	data4 [-341100918]
	data4 [-362193731]
	data4 [-49039120]
	data4 [-53357881]
	data4 [-23630690]
	data4 [-11204951]
	data4 [-98955220]
	data4 [-69699045]
	data4 [-107035582]
	data4 [-128143755]
	data4 [-218044088]
	data4 [-222133377]
	data4 [-259769050]
	data4 [-247048431]
	data4 [-200719980]
	data4 [-171234397]
	data4 [-141715974]
	data4 [-162529331]
	data4 [-646423200]
	data4 [-658884777]
	data4 [-620984050]
	data4 [-616635591]
	data4 [-562956868]
	data4 [-541876341]
	data4 [-571137582]
	data4 [-600355867]
	data4 [-680850216]
	data4 [-693541137]
	data4 [-722478922]
	data4 [-718425471]
	data4 [-798841852]
	data4 [-777990605]
	data4 [-739872662]
	data4 [-769385891]
	data4 [-983630320]
	data4 [-996371417]
	data4 [-958780802]
	data4 [-954711991]
	data4 [-1034463540]
	data4 [-1013629701]
	data4 [-1043103070]
	data4 [-1072568171]
	data4 [-884101208]
	data4 [-896547425]
	data4 [-926319674]
	data4 [-922021391]
	data4 [-867956876]
	data4 [-846828221]
	data4 [-809446630]
	data4 [-838682323]
	data4 [-1850763712]
	data4 [-1871840137]
	data4 [-1842658770]
	data4 [-1813436391]
	data4 [-1767489892]
	data4 [-1755032405]
	data4 [-1792873742]
	data4 [-1797226299]
	data4 [-1615017992]
	data4 [-1635865137]
	data4 [-1674046570]
	data4 [-1644529247]
	data4 [-1732939996]
	data4 [-1720253165]
	data4 [-1691239606]
	data4 [-1695297155]
	data4 [-1920387792]
	data4 [-1941217529]
	data4 [-1911692962]
	data4 [-1882223767]
	data4 [-1971282452]
	data4 [-1958545445]
	data4 [-1996207742]
	data4 [-2000280651]
	data4 [-2087033720]
	data4 [-2108158273]
	data4 [-2145472282]
	data4 [-2116232495]
	data4 [-2070688684]
	data4 [-2058246557]
	data4 [-2028529606]
	data4 [-2032831987]
	data4 [-1444753248]
	data4 [-1474250089]
	data4 [-1436154674]
	data4 [-1415287047]
	data4 [-1360299908]
	data4 [-1356262837]
	data4 [-1385190382]
	data4 [-1397897691]
	data4 [-1477345000]
	data4 [-1506546897]
	data4 [-1535814282]
	data4 [-1514717375]
	data4 [-1594349116]
	data4 [-1590017037]
	data4 [-1552089686]
	data4 [-1564567651]
	data4 [-1245416496]
	data4 [-1274668569]
	data4 [-1237276738]
	data4 [-1216164471]
	data4 [-1295131892]
	data4 [-1290817221]
	data4 [-1320611998]
	data4 [-1333041835]
	data4 [-1143528856]
	data4 [-1173010337]
	data4 [-1202457082]
	data4 [-1181639631]
	data4 [-1126266188]
	data4 [-1122180989]
	data4 [-1084596518]
	data4 [-1097321235]
	data4 [0]
	data4 [-1195612315]
	data4 [-1442199413]
	data4 [313896942]
	data4 [-1889364137]
	data4 [937357362]
	data4 [627793884]
	data4 [-1646839623]
	data4 [-978048785]
	data4 [2097696650]
	data4 [1874714724]
	data4 [-687765759]
	data4 [1255587768]
	data4 [-227878691]
	data4 [-522225869]
	data4 [1482887254]
	data4 [1343838111]
	data4 [-391827206]
	data4 [-99573996]
	data4 [1118632049]
	data4 [-545537848]
	data4 [1741137837]
	data4 [1970407491]
	data4 [-842109146]
	data4 [-1783791760]
	data4 [756094997]
	data4 [1067759611]
	data4 [-2028416866]
	data4 [449832999]
	data4 [-1569484990]
	data4 [-1329192788]
	data4 [142231497]
	data4 [-1607291074]
	data4 [412010587]
	data4 [171665333]
	data4 [-1299775280]
	data4 [793786473]
	data4 [-1746116852]
	data4 [-2057703198]
	data4 [1038456711]
	data4 [1703315409]
	data4 [-583343948]
	data4 [-812691622]
	data4 [1999841343]
	data4 [-354152314]
	data4 [1381529571]
	data4 [1089329165]
	data4 [-128860312]
	data4 [-265553759]
	data4 [1217896388]
	data4 [1512189994]
	data4 [-492939441]
	data4 [2135519222]
	data4 [-940242797]
	data4 [-717183107]
	data4 [1845280792]
	data4 [899665998]
	data4 [-1927039189]
	data4 [-1617553211]
	data4 [657096608]
	data4 [-1157806311]
	data4 [37822588]
	data4 [284462994]
	data4 [-1471616777]
	data4 [-1693165507]
	data4 [598228824]
	data4 [824021174]
	data4 [-1985873965]
	data4 [343330666]
	data4 [-1396004849]
	data4 [-1098971167]
	data4 [113467524]
	data4 [1587572946]
	data4 [-434366537]
	data4 [-190203815]
	data4 [1276501820]
	data4 [-775755899]
	data4 [1769898208]
	data4 [2076913422]
	data4 [-1015592853]
	data4 [-888336478]
	data4 [1941006535]
	data4 [1627703081]
	data4 [-642211764]
	data4 [1148164341]
	data4 [-53215344]
	data4 [-295284610]
	data4 [1457141531]
	data4 [247015245]
	data4 [-1241169880]
	data4 [-1531908154]
	data4 [470583459]
	data4 [-2116308966]
	data4 [963106687]
	data4 [735213713]
	data4 [-1821499404]
	data4 [992409347]
	data4 [-2087022490]
	data4 [-1859174520]
	data4 [697522413]
	data4 [-1270587308]
	data4 [217581361]
	data4 [508405983]
	data4 [-1494102086]
	data4 [-23928852]
	data4 [1177467017]
	data4 [1419450215]
	data4 [-332959742]
	data4 [1911572667]
	data4 [-917753890]
	data4 [-604405712]
	data4 [1665525589]
	data4 [1799331996]
	data4 [-746338311]
	data4 [-1053399017]
	data4 [2039091058]
	data4 [-463652917]
	data4 [1558270126]
	data4 [1314193216]
	data4 [-152528859]
	data4 [-1366587277]
	data4 [372764438]
	data4 [75645176]
	data4 [-1136777315]
	data4 [568925988]
	data4 [-1722451903]
	data4 [-1948198993]
	data4 [861712586]
	data4 [-312887749]
	data4 [1441124702]
	data4 [1196457648]
	data4 [-1304107]
	data4 [1648042348]
	data4 [-628668919]
	data4 [-936187417]
	data4 [1888390786]
	data4 [686661332]
	data4 [-1873675855]
	data4 [-2098964897]
	data4 [978858298]
	data4 [-1483798141]
	data4 [523464422]
	data4 [226935048]
	data4 [-1254447507]
	data4 [-1119821404]
	data4 [100435649]
	data4 [390670639]
	data4 [-1342878134]
	data4 [841119475]
	data4 [-1969352298]
	data4 [-1741963656]
	data4 [546822429]
	data4 [2029308235]
	data4 [-1068978642]
	data4 [-755170880]
	data4 [1782671013]
	data4 [-141140452]
	data4 [1328167289]
	data4 [1570739863]
	data4 [-450629134]
	data4 [1298864389]
	data4 [-170426784]
	data4 [-412954226]
	data4 [1608431339]
	data4 [-1039561134]
	data4 [2058742071]
	data4 [1744848601]
	data4 [-792976964]
	data4 [-1998638614]
	data4 [811816591]
	data4 [584513889]
	data4 [-1704288764]
	data4 [129869501]
	data4 [-1090403880]
	data4 [-1380684234]
	data4 [352848211]
	data4 [494030490]
	data4 [-1513215489]
	data4 [-1216641519]
	data4 [264757620]
	data4 [-1844389427]
	data4 [715964072]
	data4 [941166918]
	data4 [-2136639965]
	data4 [-658086283]
	data4 [1618608400]
	data4 [1926213374]
	data4 [-898381413]
	data4 [1470427426]
	data4 [-283601337]
	data4 [-38979159]
	data4 [1158766284]
	data4 [1984818694]
	data4 [-823031453]
	data4 [-599513459]
	data4 [1693991400]
	data4 [-114329263]
	data4 [1100160564]
	data4 [1395044826]
	data4 [-342174017]
	data4 [-1275476247]
	data4 [189112716]
	data4 [435162722]
	data4 [-1588827897]
	data4 [1016811966]
	data4 [-2077804837]
	data4 [-1768777419]
	data4 [774831696]
	data4 [643086745]
	data4 [-1628905732]
	data4 [-1940033262]
	data4 [887166583]
	data4 [-1456066866]
	data4 [294275499]
	data4 [54519365]
	data4 [-1149009632]
	data4 [-471821962]
	data4 [1532818963]
	data4 [1240029693]
	data4 [-246071656]
	data4 [1820460577]
	data4 [-734109372]
	data4 [-963916118]
	data4 [2117577167]
	data4 [-696303304]
	data4 [1858283101]
	data4 [2088143283]
	data4 [-993333546]
	data4 [1495127663]
	data4 [-509497078]
	data4 [-216785180]
	data4 [1269332353]
	data4 [332098007]
	data4 [-1418260814]
	data4 [-1178427044]
	data4 [25085497]
	data4 [-1666580864]
	data4 [605395429]
	data4 [916469259]
	data4 [-1910746770]
	data4 [-2040129881]
	data4 [1054503362]
	data4 [745528876]
	data4 [-1798063799]
	data4 [151290352]
	data4 [-1313282411]
	data4 [-1559410309]
	data4 [464596510]
	data4 [1137851976]
	data4 [-76654291]
	data4 [-371460413]
	data4 [1365741990]
	data4 [-860837601]
	data4 [1946996346]
	data4 [1723425172]
	data4 [-570095887]
	data4 [0]
	data4 [-1775237257]
	data4 [744558318]
	data4 [-1169094247]
	data4 [432303367]
	data4 [-1879807376]
	data4 [900031465]
	data4 [-1550490466]
	data4 [847829774]
	data4 [-1531388807]
	data4 [518641120]
	data4 [-1998990697]
	data4 [726447625]
	data4 [-1115901570]
	data4 [120436967]
	data4 [-1860321392]
	data4 [1678817053]
	data4 [-232738710]
	data4 [1215412723]
	data4 [-566116732]
	data4 [2111101466]
	data4 [-337322643]
	data4 [1370871028]
	data4 [-947530877]
	data4 [1452829715]
	data4 [-1062704284]
	data4 [2063164157]
	data4 [-322345590]
	data4 [1331429652]
	data4 [-647231901]
	data4 [1664946170]
	data4 [-183695219]
	data4 [-937398725]
	data4 [1578133836]
	data4 [-465477419]
	data4 [1920034722]
	data4 [-773586116]
	data4 [1205077067]
	data4 [-41611822]
	data4 [1807026853]
	data4 [-89606859]
	data4 [1821946434]
	data4 [-691422245]
	data4 [1090108588]
	data4 [-479406030]
	data4 [1969020741]
	data4 [-821176612]
	data4 [1497223595]
	data4 [-1406084826]
	data4 [973135441]
	data4 [-2142119992]
	data4 [375509183]
	data4 [-1242254303]
	data4 [600093526]
	data4 [-1718240561]
	data4 [262520248]
	data4 [-1632107992]
	data4 [143131999]
	data4 [-1294398266]
	data4 [619252657]
	data4 [-2021888209]
	data4 [290220120]
	data4 [-1424137791]
	data4 [1026385590]
	data4 [-1874731914]
	data4 [108124929]
	data4 [-1138699624]
	data4 [705746415]
	data4 [-1987726991]
	data4 [532002310]
	data4 [-1511735393]
	data4 [869578984]
	data4 [-1563883656]
	data4 [888733711]
	data4 [-1901590122]
	data4 [412618465]
	data4 [-1156748673]
	data4 [759000328]
	data4 [-1754504047]
	data4 [22832102]
	data4 [-195990677]
	data4 [1650551836]
	data4 [-667916923]
	data4 [1308648178]
	data4 [-309000596]
	data4 [2074411291]
	data4 [-1040971646]
	data4 [1472466933]
	data4 [-958812059]
	data4 [1357494034]
	data4 [-356991349]
	data4 [2089335292]
	data4 [-551690910]
	data4 [1227741717]
	data4 [-209923188]
	data4 [1699534075]
	data4 [1482797645]
	data4 [-833505990]
	data4 [1946205347]
	data4 [-500122668]
	data4 [1101389642]
	data4 [-678045635]
	data4 [1841615268]
	data4 [-67840301]
	data4 [1793681731]
	data4 [-52859340]
	data4 [1183344557]
	data4 [-793222950]
	data4 [1932330052]
	data4 [-451083469]
	data4 [1598818986]
	data4 [-914616867]
	data4 [1014039888]
	data4 [-1438580185]
	data4 [269487038]
	data4 [-2044719927]
	data4 [632645719]
	data4 [-1283100896]
	data4 [164914873]
	data4 [-1612422706]
	data4 [251256414]
	data4 [-1731602135]
	data4 [580440240]
	data4 [-1264003129]
	data4 [389919577]
	data4 [-2129808338]
	data4 [995933623]
	data4 [-1385383232]
	data4 [545503469]
	data4 [-1229733990]
	data4 [216184323]
	data4 [-1697468044]
	data4 [961009130]
	data4 [-1351101795]
	data4 [354867972]
	data4 [-2095653773]
	data4 [302736355]
	data4 [-2076482412]
	data4 [1047162125]
	data4 [-1470469510]
	data4 [198119140]
	data4 [-1644230253]
	data4 [665714698]
	data4 [-1315043459]
	data4 [1150488560]
	data4 [-761067385]
	data4 [1760690462]
	data4 [-20838807]
	data4 [1566008055]
	data4 [-882416256]
	data4 [1899392025]
	data4 [-419009682]
	data4 [1981535486]
	data4 [-533998711]
	data4 [1518000656]
	data4 [-867508889]
	data4 [1876933113]
	data4 [-101728626]
	data4 [1136572183]
	data4 [-712069024]
	data4 [-391915818]
	data4 [2123616673]
	data4 [-993863624]
	data4 [1391648591]
	data4 [-244859951]
	data4 [1733803174]
	data4 [-586762945]
	data4 [1261875784]
	data4 [-634712616]
	data4 [1276840623]
	data4 [-162921674]
	data4 [1618609217]
	data4 [-1007722273]
	data4 [1440704424]
	data4 [-275878351]
	data4 [2042521926]
	data4 [-1934401077]
	data4 [444819132]
	data4 [-1596821723]
	data4 [920807506]
	data4 [-1787360052]
	data4 [54987707]
	data4 [-1189739998]
	data4 [791020885]
	data4 [-1103381819]
	data4 [671858098]
	data4 [-1839549397]
	data4 [74101596]
	data4 [-1476405310]
	data4 [835702965]
	data4 [-1952523988]
	data4 [497999451]
	data4 [-1329437541]
	data4 [653419500]
	data4 [-1667011979]
	data4 [177433858]
	data4 [-1459222116]
	data4 [1060507371]
	data4 [-2056845454]
	data4 [324468741]
	data4 [-2109030507]
	data4 [343587042]
	data4 [-1372868229]
	data4 [941340172]
	data4 [-1685138798]
	data4 [230610405]
	data4 [-1209017220]
	data4 [568318731]
	data4 [-724380794]
	data4 [1122161905]
	data4 [-122430104]
	data4 [1854134815]
	data4 [-854147455]
	data4 [1529264630]
	data4 [-512249745]
	data4 [2001188632]
	data4 [-430307192]
	data4 [1885999103]
	data4 [-902101402]
	data4 [1544225041]
	data4 [-6396529]
	data4 [1773036280]
	data4 [-738235551]
	data4 [1171221526]
	data4 [2028079776]
	data4 [-288223785]
	data4 [1417872462]
	data4 [-1028455623]
	data4 [1629906855]
	data4 [-149528368]
	data4 [1296525641]
	data4 [-612929986]
	data4 [1248514478]
	data4 [-598026535]
	data4 [1712054080]
	data4 [-264513481]
	data4 [1403960489]
	data4 [-979452962]
	data4 [2144318023]
	data4 [-369117904]
	data4 [485670333]
	data4 [-1966949686]
	data4 [814986067]
	data4 [-1499220956]
	data4 [87478458]
	data4 [-1828268083]
	data4 [693624404]
	data4 [-1083713245]
	data4 [779773619]
	data4 [-1203084860]
	data4 [35350621]
	data4 [-1809092822]
	data4 [935201716]
	data4 [-1584526141]
	data4 [467600730]
	data4 [-1913716179]
	data4 [0]
	data4 [1093737241]
	data4 [-2107492814]
	data4 [-1017959125]
	data4 [80047204]
	data4 [1173649277]
	data4 [-2035852714]
	data4 [-946454193]
	data4 [143317448]
	data4 [1237041873]
	data4 [-1964445702]
	data4 [-874908445]
	data4 [206550444]
	data4 [1300147893]
	data4 [-1909619810]
	data4 [-820209529]
	data4 [1360183882]
	data4 [270784851]
	data4 [-747572104]
	data4 [-1841172639]
	data4 [1440198190]
	data4 [350663991]
	data4 [-675964900]
	data4 [-1769700603]
	data4 [1503140738]
	data4 [413728923]
	data4 [-604361296]
	data4 [-1697958231]
	data4 [1566406630]
	data4 [476867839]
	data4 [-549502508]
	data4 [-1643226419]
	data4 [-1574665067]
	data4 [-485122164]
	data4 [541504167]
	data4 [1635232190]
	data4 [-1495144207]
	data4 [-405736472]
	data4 [612622019]
	data4 [1706214874]
	data4 [-1431413411]
	data4 [-341883324]
	data4 [684485487]
	data4 [1778217078]
	data4 [-1368706759]
	data4 [-279303648]
	data4 [738789131]
	data4 [1832393746]
	data4 [-214546721]
	data4 [-1308140090]
	data4 [1901359341]
	data4 [811953140]
	data4 [-135058757]
	data4 [-1228787294]
	data4 [1972444297]
	data4 [882902928]
	data4 [-71524585]
	data4 [-1165130738]
	data4 [2044635429]
	data4 [955232828]
	data4 [-8785037]
	data4 [-1102518166]
	data4 [2098971969]
	data4 [1009442392]
	data4 [89094640]
	data4 [1149133545]
	data4 [-2027073598]
	data4 [-971221797]
	data4 [25826708]
	data4 [1086000781]
	data4 [-2081938522]
	data4 [-1025951553]
	data4 [231055416]
	data4 [1291107105]
	data4 [-1884842486]
	data4 [-828994285]
	data4 [151047260]
	data4 [1211225925]
	data4 [-1956447634]
	data4 [-900472457]
	data4 [1415429050]
	data4 [359440547]
	data4 [-700478072]
	data4 [-1760651631]
	data4 [1352194014]
	data4 [296340679]
	data4 [-755310100]
	data4 [-1815348491]
	data4 [1557619314]
	data4 [501643627]
	data4 [-558541760]
	data4 [-1618718887]
	data4 [1477578262]
	data4 [421729551]
	data4 [-630179804]
	data4 [-1690229955]
	data4 [-1486095003]
	data4 [-430250372]
	data4 [621398871]
	data4 [1681444942]
	data4 [-1548840703]
	data4 [-492860904]
	data4 [567060275]
	data4 [1627241514]
	data4 [-1344199507]
	data4 [-288342092]
	data4 [763564703]
	data4 [1823607174]
	data4 [-1423685431]
	data4 [-367701040]
	data4 [692485883]
	data4 [1752655330]
	data4 [-159826129]
	data4 [-1220008906]
	data4 [1947928861]
	data4 [891949572]
	data4 [-222538933]
	data4 [-1282586542]
	data4 [1893623161]
	data4 [837779040]
	data4 [-17570073]
	data4 [-1077740034]
	data4 [2089930965]
	data4 [1033948108]
	data4 [-97088893]
	data4 [-1157131878]
	data4 [2018819249]
	data4 [962963368]
	data4 [1268286267]
	data4 [178886690]
	data4 [-906316535]
	data4 [-1999917552]
	data4 [1331556191]
	data4 [242021446]
	data4 [-851453587]
	data4 [-1945189772]
	data4 [1125276403]
	data4 [35865066]
	data4 [-1049596735]
	data4 [-2143193128]
	data4 [1205286551]
	data4 [115748238]
	data4 [-977993563]
	data4 [-2071716932]
	data4 [445268337]
	data4 [1539005032]
	data4 [-1729595581]
	data4 [-640062374]
	data4 [508505365]
	data4 [1602106892]
	data4 [-1674765529]
	data4 [-585367490]
	data4 [302028985]
	data4 [1395753888]
	data4 [-1872580981]
	data4 [-783043182]
	data4 [382072029]
	data4 [1475669956]
	data4 [-1800944913]
	data4 [-711534090]
	data4 [-373553234]
	data4 [-1467147081]
	data4 [1809723804]
	data4 [720317061]
	data4 [-310809654]
	data4 [-1404538669]
	data4 [1864064504]
	data4 [774522593]
	data4 [-516497818]
	data4 [-1610103425]
	data4 [1666508884]
	data4 [577106765]
	data4 [-437014014]
	data4 [-1530746597]
	data4 [1737589808]
	data4 [648060713]
	data4 [-1196505628]
	data4 [-106963203]
	data4 [986510294]
	data4 [2080237775]
	data4 [-1133794944]
	data4 [-44387687]
	data4 [1040818098]
	data4 [2134410411]
	data4 [-1339810772]
	data4 [-250280139]
	data4 [843459102]
	data4 [1937191175]
	data4 [-1260294072]
	data4 [-170890415]
	data4 [914572922]
	data4 [2008178019]
	data4 [1322777291]
	data4 [266789330]
	data4 [-860500743]
	data4 [-1920673824]
	data4 [1242732207]
	data4 [186879414]
	data4 [-932142947]
	data4 [-1992180860]
	data4 [1180508931]
	data4 [124532762]
	data4 [-1002498767]
	data4 [-2062676440]
	data4 [1117278055]
	data4 [61428862]
	data4 [-1057326763]
	data4 [-2117377460]
	data4 [533018753]
	data4 [1593058200]
	data4 [-1649996109]
	data4 [-594143830]
	data4 [453006565]
	data4 [1513181180]
	data4 [-1721605417]
	data4 [-665617970]
	data4 [391110985]
	data4 [1451162192]
	data4 [-1792157829]
	data4 [-736310174]
	data4 [327847213]
	data4 [1388025396]
	data4 [-1847018721]
	data4 [-791044090]
	data4 [-319586722]
	data4 [-1379769017]
	data4 [1855015020]
	data4 [799036277]
	data4 [-399109574]
	data4 [-1459156701]
	data4 [1783899144]
	data4 [728055569]
	data4 [-461789290]
	data4 [-1521959793]
	data4 [1713082788]
	data4 [657099453]
	data4 [-524497934]
	data4 [-1584541461]
	data4 [1658781120]
	data4 [602924761]
	data4 [-1109279724]
	data4 [-53434611]
	data4 [1065585190]
	data4 [2125631807]
	data4 [-1188769680]
	data4 [-132789399]
	data4 [994502210]
	data4 [2054683995]
	data4 [-1251252772]
	data4 [-195395899]
	data4 [923358190]
	data4 [1983400183]
	data4 [-1313994312]
	data4 [-258010463]
	data4 [869023626]
	data4 [1929192595]
	data4 [0]
	data4 [929743361]
	data4 [1859421187]
	data4 [1505641986]
	data4 [-592967417]
	data4 [-339555578]
	data4 [-1300460284]
	data4 [-2062135547]
	data4 [-1202646258]
	data4 [-1891905265]
	data4 [-695888115]
	data4 [-504408820]
	data4 [1694046729]
	data4 [1402198024]
	data4 [170761738]
	data4 [1028086795]
	data4 [1889740316]
	data4 [1204413469]
	data4 [511156767]
	data4 [689791006]
	data4 [-1408553189]
	data4 [-1688081126]
	data4 [-1025529064]
	data4 [-172660455]
	data4 [-923650798]
	data4 [-6752493]
	data4 [-1507413743]
	data4 [-1857260784]
	data4 [341457941]
	data4 [590413332]
	data4 [2056173590]
	data4 [1306819095]
	data4 [-532263624]
	data4 [-684945607]
	data4 [-1902982853]
	data4 [-1174926534]
	data4 [1022247999]
	data4 [193234494]
	data4 [1379582012]
	data4 [1699742269]
	data4 [1477926454]
	data4 [1870502967]
	data4 [918805045]
	data4 [27858996]
	data4 [-2067835087]
	data4 [-1277848272]
	data4 [-362032334]
	data4 [-587132621]
	data4 [-1864013020]
	data4 [-1483757275]
	data4 [-30281945]
	data4 [-916771546]
	data4 [1280139811]
	data4 [2066194466]
	data4 [580511264]
	data4 [368256033]
	data4 [682915882]
	data4 [534690347]
	data4 [1180761129]
	data4 [1896496680]
	data4 [-199462611]
	data4 [-1015631060]
	data4 [-1698106066]
	data4 [-1381877969]
	data4 [-1064461712]
	data4 [-135833487]
	data4 [-1369891213]
	data4 [-1724654478]
	data4 [472224631]
	data4 [726618486]
	data4 [1928402804]
	data4 [1167840629]
	data4 [2027719038]
	data4 [1337346943]
	data4 [369626493]
	data4 [560123772]
	data4 [-1535868807]
	data4 [-1826733448]
	data4 [-895482758]
	data4 [-37042565]
	data4 [-1339114388]
	data4 [-2025554323]
	data4 [-554026897]
	data4 [-376374674]
	data4 [1820767595]
	data4 [1542223722]
	data4 [38941032]
	data4 [892924777]
	data4 [142585698]
	data4 [1058368867]
	data4 [1722493793]
	data4 [1371662688]
	data4 [-724064667]
	data4 [-474127260]
	data4 [-1174199706]
	data4 [-1922441113]
	data4 [550229832]
	data4 [396432713]
	data4 [1310675787]
	data4 [2037748042]
	data4 [-60563889]
	data4 [-888595378]
	data4 [-1833477556]
	data4 [-1512204211]
	data4 [-1734687674]
	data4 [-1343224249]
	data4 [-162643899]
	data4 [-1054571964]
	data4 [1144180033]
	data4 [1935150912]
	data4 [719735106]
	data4 [495749955]
	data4 [1349054804]
	data4 [1728197461]
	data4 [1052538199]
	data4 [165066582]
	data4 [-1933510573]
	data4 [-1146471854]
	data4 [-501973936]
	data4 [-713114031]
	data4 [-398859686]
	data4 [-548200357]
	data4 [-2031262119]
	data4 [-1316510632]
	data4 [881978205]
	data4 [66791772]
	data4 [1514499934]
	data4 [1831841119]
	data4 [-2145700383]
	data4 [-1217267744]
	data4 [-288378398]
	data4 [-643468317]
	data4 [1555250406]
	data4 [1809448679]
	data4 [845658341]
	data4 [84769508]
	data4 [944383727]
	data4 [253813998]
	data4 [1453236972]
	data4 [1643405549]
	data4 [-454938648]
	data4 [-746000919]
	data4 [-1976128533]
	data4 [-1118017046]
	data4 [-256371715]
	data4 [-942484996]
	data4 [-1637050370]
	data4 [-1459202561]
	data4 [739252986]
	data4 [461035771]
	data4 [1120182009]
	data4 [1974361336]
	data4 [1223229683]
	data4 [2139341554]
	data4 [641565936]
	data4 [290932465]
	data4 [-1807676940]
	data4 [-1557410827]
	data4 [-90862089]
	data4 [-838905866]
	data4 [1616738521]
	data4 [1463270104]
	data4 [243924186]
	data4 [971194075]
	data4 [-1124765218]
	data4 [-1952468001]
	data4 [-769526307]
	data4 [-448055332]
	data4 [-670274601]
	data4 [-278484522]
	data4 [-1227296812]
	data4 [-2119029291]
	data4 [77882064]
	data4 [869179601]
	data4 [1785784019]
	data4 [1561994450]
	data4 [285105861]
	data4 [664050884]
	data4 [2116737734]
	data4 [1228937415]
	data4 [-866756670]
	data4 [-79915581]
	data4 [-1568484415]
	data4 [-1779953216]
	data4 [-1464906293]
	data4 [-1614442550]
	data4 [-964965944]
	data4 [-250541111]
	data4 [1946633420]
	data4 [1131251405]
	data4 [450085071]
	data4 [767099598]
	data4 [1083617169]
	data4 [2013031824]
	data4 [776088466]
	data4 [422111635]
	data4 [-1673615722]
	data4 [-1420532585]
	data4 [-219536747]
	data4 [-981409644]
	data4 [-121127777]
	data4 [-810713442]
	data4 [-1777125220]
	data4 [-1585841507]
	data4 [611300760]
	data4 [319125401]
	data4 [1253781915]
	data4 [2110911386]
	data4 [808814989]
	data4 [123685772]
	data4 [1591807374]
	data4 [1770770319]
	data4 [-325222262]
	data4 [-604552565]
	data4 [-2109143927]
	data4 [-1255946616]
	data4 [-2006672765]
	data4 [-1089578878]
	data4 [-424665472]
	data4 [-774185855]
	data4 [1422693252]
	data4 [1671844229]
	data4 [974657415]
	data4 [225629574]
	data4 [-1596923223]
	data4 [-1749409624]
	data4 [-838572374]
	data4 [-110189397]
	data4 [2088299438]
	data4 [1259481519]
	data4 [313290669]
	data4 [633777580]
	data4 [411169191]
	data4 [803943334]
	data4 [1985312164]
	data4 [1094694821]
	data4 [-1003882336]
	data4 [-213697887]
	data4 [-1426228061]
	data4 [-1650999646]
	data4 [-797719371]
	data4 [-417790284]
	data4 [-1096335178]
	data4 [-1983020361]
	data4 [215731634]
	data4 [1001459635]
	data4 [1645169073]
	data4 [1432718256]
	data4 [1747113915]
	data4 [1598559674]
	data4 [116806584]
	data4 [832344505]
	data4 [-1265967428]
	data4 [-2082464579]
	data4 [-631350593]
	data4 [-315320130]
	data4 [0]
	data4 [1701297336]
	data4 [-1949824598]
	data4 [-290474734]
	data4 [1469538959]
	data4 [854646327]
	data4 [-597726427]
	data4 [-1187457123]
	data4 [-282544955]
	data4 [-1974531971]
	data4 [1692450159]
	data4 [25625047]
	data4 [-1195387318]
	data4 [-573019406]
	data4 [863494112]
	data4 [1443914584]
	data4 [-1621681840]
	data4 [-97475096]
	data4 [345968890]
	data4 [1912122434]
	data4 [-926909473]
	data4 [-1381513369]
	data4 [1124627061]
	data4 [644861645]
	data4 [1887415701]
	data4 [353898797]
	data4 [-71850945]
	data4 [-1630529401]
	data4 [669568794]
	data4 [1116697506]
	data4 [-1407138128]
	data4 [-918062584]
	data4 [1051669152]
	data4 [1539870232]
	data4 [-1251525878]
	data4 [-805271630]
	data4 [1765298223]
	data4 [207613079]
	data4 [-487564923]
	data4 [-2020088515]
	data4 [-779647387]
	data4 [-1260373283]
	data4 [1515163599]
	data4 [1059599223]
	data4 [-2045713174]
	data4 [-478717870]
	data4 [232320320]
	data4 [1757368824]
	data4 [-1577571344]
	data4 [-996174008]
	data4 [707797594]
	data4 [1331142370]
	data4 [-160478849]
	data4 [-1828129337]
	data4 [2108113109]
	data4 [415300717]
	data4 [1322295093]
	data4 [733422477]
	data4 [-988244321]
	data4 [-1602278873]
	data4 [424148410]
	data4 [2082488578]
	data4 [-1836059632]
	data4 [-135771992]
	data4 [1029182619]
	data4 [1480566819]
	data4 [-1232069327]
	data4 [-738745975]
	data4 [1791981076]
	data4 [262720172]
	data4 [-519602242]
	data4 [-2074033402]
	data4 [-764370850]
	data4 [-1223222042]
	data4 [1505274356]
	data4 [1021252940]
	data4 [-2048408879]
	data4 [-528449943]
	data4 [238013307]
	data4 [1799911363]
	data4 [-1576071733]
	data4 [-949440141]
	data4 [700908641]
	data4 [1285601497]
	data4 [-174559420]
	data4 [-1862282244]
	data4 [2119198446]
	data4 [456645206]
	data4 [1294448910]
	data4 [675284406]
	data4 [-957370204]
	data4 [-1551365092]
	data4 [447798145]
	data4 [2144823097]
	data4 [-1854352853]
	data4 [-199266669]
	data4 [66528827]
	data4 [1720752771]
	data4 [-2009124975]
	data4 [-312962263]
	data4 [1415595188]
	data4 [822605836]
	data4 [-542618338]
	data4 [-1160777306]
	data4 [-320892162]
	data4 [-1984418234]
	data4 [1729600340]
	data4 [40904684]
	data4 [-1152847759]
	data4 [-567325495]
	data4 [813758939]
	data4 [1441219939]
	data4 [-1667219605]
	data4 [-104365101]
	data4 [392705729]
	data4 [1913621113]
	data4 [-885563932]
	data4 [-1370431140]
	data4 [1090475086]
	data4 [630778102]
	data4 [1938328494]
	data4 [384775958]
	data4 [-129990140]
	data4 [-1658372420]
	data4 [606071073]
	data4 [1098405273]
	data4 [-1344806773]
	data4 [-894411725]
	data4 [1001806317]
	data4 [1590814037]
	data4 [-1333899193]
	data4 [-719721217]
	data4 [1814117218]
	data4 [155617242]
	data4 [-404147512]
	data4 [-2104586640]
	data4 [-727782104]
	data4 [-1309060720]
	data4 [1599530114]
	data4 [976312378]
	data4 [-2096525401]
	data4 [-428985569]
	data4 [146900493]
	data4 [1839610549]
	data4 [-1528741699]
	data4 [-1048118267]
	data4 [791234839]
	data4 [1246688687]
	data4 [-210361806]
	data4 [-1777230198]
	data4 [2025728920]
	data4 [500799264]
	data4 [1271526520]
	data4 [783173824]
	data4 [-1073611310]
	data4 [-1520025238]
	data4 [475961079]
	data4 [2033789519]
	data4 [-1751736483]
	data4 [-219077659]
	data4 [85551949]
	data4 [1618925557]
	data4 [-1898880281]
	data4 [-340337057]
	data4 [1385040322]
	data4 [938063226]
	data4 [-649723800]
	data4 [-1138639664]
	data4 [-365830264]
	data4 [-1890163920]
	data4 [1643763234]
	data4 [77490842]
	data4 [-1113146105]
	data4 [-658439745]
	data4 [913224877]
	data4 [1393100821]
	data4 [-1706135011]
	data4 [-14037339]
	data4 [294026167]
	data4 [1960953615]
	data4 [-841412462]
	data4 [-1463899094]
	data4 [1175525688]
	data4 [594978176]
	data4 [1969669848]
	data4 [268532320]
	data4 [-22098062]
	data4 [-1681296438]
	data4 [586261591]
	data4 [1201019119]
	data4 [-1455837699]
	data4 [-866250427]
	data4 [116280694]
	data4 [1669984718]
	data4 [-1926871844]
	data4 [-398329756]
	data4 [1366896633]
	data4 [874419009]
	data4 [-625924525]
	data4 [-1076454677]
	data4 [-372835917]
	data4 [-1935588085]
	data4 [1645146137]
	data4 [124341409]
	data4 [-1101948100]
	data4 [-617207932]
	data4 [899256982]
	data4 [1358835246]
	data4 [-1715907546]
	data4 [-52500322]
	data4 [309419404]
	data4 [1997988148]
	data4 [-835832151]
	data4 [-1421243887]
	data4 [1172717315]
	data4 [545358779]
	data4 [1989271779]
	data4 [334912603]
	data4 [-44439223]
	data4 [-1740745231]
	data4 [554074732]
	data4 [1147223764]
	data4 [-1429304378]
	data4 [-810993794]
	data4 [943816662]
	data4 [1562821486]
	data4 [-1282836868]
	data4 [-688993596]
	data4 [1876303193]
	data4 [179413473]
	data4 [-467790605]
	data4 [-2122733493]
	data4 [-680932589]
	data4 [-1307674709]
	data4 [1554105017]
	data4 [969309697]
	data4 [-2130794084]
	data4 [-442952412]
	data4 [188129334]
	data4 [1850809486]
	data4 [-1491704186]
	data4 [-1032725954]
	data4 [752774956]
	data4 [1236915092]
	data4 [-259980279]
	data4 [-1780041551]
	data4 [2068385187]
	data4 [506376475]
	data4 [1212076611]
	data4 [760835835]
	data4 [-1007232023]
	data4 [-1500420271]
	data4 [531214540]
	data4 [2060323956]
	data4 [-1805534874]
	data4 [-251263522]
#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: o74d3c4
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"deflate.c"
#	.text
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+ind push
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole pop+cmprev
	#peephole pop+cmprev
	#peephole pop+cmprev
	#peephole pop+cmprev
	#peephole pop+cmprev
	#peephole pop+cmprev
	#peephole pop+cmprev
	#peephole pop+cmprev
	#peephole pop+cmprev
	#peephole pop+cmprev
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole pop+cmp
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole pop+cmp
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole pop+push+commut(di)
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+ind push
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+sub
	#peephole move_dead
	#peephole zero_extend
	#peephole 1
	#peephole pop+block+cmp
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole pop+block+push+block
	#peephole pop+push+sub
	#peephole popdi(deadreg)+push

# FUNCTION BEGINS:longest_match
longest_match.s_o74d3c4:
	# prologue (16 GPRs)

	set_sp! &-18

	load8! &19
	store8! &11 	#X10
	load4! &20
	store8! &1 	#AR
	load8! &10 	#X10
	add! 188
	load4
	#
	store8! &2 	#X1
	load8! &10 	#X10
	add! 96
	load8
	#
	store8! &6 	#X5
	load8! &10 	#X10
	add! 172
	load4
	#
	store8! &4 	#X3
	load4! &3 	#X3
	store8! &7 	#X6
	load8! &5 	#X5
	load8! &7 	#X6
	add
	store8! &12 	#X11
	load8! &10 	#X10
	add! 184
	load4
	#
	store8! &3 	#X2
	load4! &2 	#X2
	store8! &5 	#X4
	load8! &10 	#X10
	add! 208
	load4
	#
	store4! &18
	load8! &10 	#X10
	add! 80
	load4
	#
	store8! &8 	#X7
	load8! &7 	#X7
	add! -262
	store8! &9 	#X8
	# CBRANCH
	load4! &8 	#X8
	load4! &4 	#X3
	lt_u
	jump_zero! .L18.l_o74d3c4
	# END CBRANCH
	load8! &3 	#X3
	add! 262
	store8! &9 	#X8
	load8! &7 	#X7
	load8! &9 	#X8
	sub
	neg
	store8! &8 	#X7
.L2.l_o74d3c4:
	load8! &10 	#X10
	add! 112
	load8
	#
	store8! &9 	#X8
	load8! &10 	#X10
	add! 88
	load4
	#
	store8! &10 	#X9
	load8! &6 	#X6
	add! 258
	load8! &6 	#X5
	add
	store8! &16 	#X15
	load4! &2 	#X2
	sigx4
	store8! &4 	#X3
	load8! &3 	#X3
	add! -1
	load8! &12 	#X11
	add
	load1
	store8! &13 	#X12
	load8! &11 	#X11
	load8! &4 	#X3
	add
	load1
	store8! &7 	#X6
	load8! &10 	#X10
	add! 204
	load4
	#
	store8! &4 	#X3
	# CBRANCH
	load4! &2 	#X2
	load4! &4 	#X3
	lt_u
	not
	jump_zero! .L3.l_o74d3c4
	# END CBRANCH
	load4! &1 	#X1
	shift_ru! 2
	store8! &2 	#X1
.L3.l_o74d3c4:
	load8! &10 	#X10
	add! 180
	load4
	#
	store4! &17
	# CBRANCH
	load4! &16
	load4! &18
	lt_u
	jump_zero! .L16.l_o74d3c4
	# END CBRANCH
	load4! &16
	store4! &18
.L16.l_o74d3c4:
	load4! &0 	#AR
	load8! &6 	#X5
	add
	store8! &3 	#X2
	load4! &4 	#X4
	sigx4
	store8! &4 	#X3
	load8! &2 	#X2
	load8! &4 	#X3
	add
	load1
	# CBRANCH - peep (modesize=1)
	and! 255
	load1! &7 	#X6
	xor
	push! 1
	lt_u
	jump_zero! .L5.l_o74d3c4
	# END CBRANCH
	load8! &3 	#X3
	add! -1
	load8! &3 	#X2
	add
	load1
	# CBRANCH - peep (modesize=1)
	and! 255
	load1! &13 	#X12
	xor
	push! 1
	lt_u
	jump_zero! .L5.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	load1
	#
	store8! &14 	#X13
	load8! &11 	#X11
	load1
	#
	# CBRANCH - peep (modesize=1)
	and! 255
	# - reverse 
	load1! &14 	#X13
	xor
	push! 1
	lt_u
	jump_zero! .L5.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	add! 1
	load1
	#
	store8! &14 	#X13
	load8! &11 	#X11
	add! 1
	load1
	#
	# CBRANCH - peep (modesize=1)
	and! 255
	# - EQ
	load1! &14 	#X13
	xor
	jump_zero! .L27.l_o74d3c4
	# END CBRANCH
.L5.l_o74d3c4:
	load8! &9 	#X9
	load8! &1 	#AR
	and
	and! 0xffffffff
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	load8! &9 	#X8
	add
	load2
	and! 0x0ffff
	store8! &1 	#AR
	# CBRANCH
	load4! &7 	#X7
	load4! &1 	#AR
	lt_u
	jump_zero! .L15.l_o74d3c4
	# END CBRANCH
	load8! &1 	#X1
	add! -1
	store8! &2 	#X1
	# CBRANCH EQ0
	load4! &1 	#X1
	jump_not_zero! .L16.l_o74d3c4
	# END CBRANCH
.L15.l_o74d3c4:
	load4! &16
	store8! &1 	#AR
	# CBRANCH
	load4! &4 	#X4
	load4! &1 	#AR
	lt_u
	jump_zero! .L17.l_o74d3c4
	# END CBRANCH
	load4! &4 	#X4
	store8! &1 	#AR
	jump! .L17.l_o74d3c4
.L27.l_o74d3c4:
	load8! &11 	#X11
	add! 2
	store8! &4 	#X3
	load8! &2 	#X2
	add! 2
	store8! &3 	#X2
.L14.l_o74d3c4:
	load8! &3 	#X3
	add! 1
	load1
	#
	store8! &15 	#X14
	load8! &2 	#X2
	add! 1
	load1
	#
	# CBRANCH - peep (modesize=1)
	and! 255
	# - reverse 
	load1! &15 	#X14
	xor
	push! 1
	lt_u
	jump_zero! .L6.l_o74d3c4
	# END CBRANCH
	load8! &3 	#X3
	add! 2
	load1
	#
	store8! &15 	#X14
	load8! &2 	#X2
	add! 2
	load1
	#
	# CBRANCH - peep (modesize=1)
	and! 255
	# - reverse 
	load1! &15 	#X14
	xor
	push! 1
	lt_u
	jump_zero! .L28.l_o74d3c4
	# END CBRANCH
	load8! &3 	#X3
	add! 3
	load1
	#
	store8! &15 	#X14
	load8! &2 	#X2
	add! 3
	load1
	#
	# CBRANCH - peep (modesize=1)
	and! 255
	# - reverse 
	load1! &15 	#X14
	xor
	push! 1
	lt_u
	jump_zero! .L29.l_o74d3c4
	# END CBRANCH
	load8! &3 	#X3
	add! 4
	load1
	#
	store8! &15 	#X14
	load8! &2 	#X2
	add! 4
	load1
	#
	# CBRANCH - peep (modesize=1)
	and! 255
	# - reverse 
	load1! &15 	#X14
	xor
	push! 1
	lt_u
	jump_zero! .L30.l_o74d3c4
	# END CBRANCH
	load8! &3 	#X3
	add! 5
	load1
	#
	store8! &15 	#X14
	load8! &2 	#X2
	add! 5
	load1
	#
	# CBRANCH - peep (modesize=1)
	and! 255
	# - reverse 
	load1! &15 	#X14
	xor
	push! 1
	lt_u
	jump_zero! .L31.l_o74d3c4
	# END CBRANCH
	load8! &3 	#X3
	add! 6
	load1
	#
	store8! &15 	#X14
	load8! &2 	#X2
	add! 6
	load1
	#
	# CBRANCH - peep (modesize=1)
	and! 255
	# - reverse 
	load1! &15 	#X14
	xor
	push! 1
	lt_u
	jump_zero! .L32.l_o74d3c4
	# END CBRANCH
	load8! &3 	#X3
	add! 7
	load1
	#
	store8! &15 	#X14
	load8! &2 	#X2
	add! 7
	load1
	#
	# CBRANCH - peep (modesize=1)
	and! 255
	# - reverse 
	load1! &15 	#X14
	xor
	push! 1
	lt_u
	jump_zero! .L33.l_o74d3c4
	# END CBRANCH
	load8! &3 	#X3
	add! 8
	store8! &4 	#X3
	load8! &3 	#X3
	load1
	#
	store8! &15 	#X14
	load8! &2 	#X2
	add! 8
	store8! &3 	#X2
	load8! &2 	#X2
	load1
	#
	# CBRANCH - peep (modesize=1)
	and! 255
	# - reverse 
	load1! &15 	#X14
	xor
	push! 1
	lt_u
	jump_zero! .L8.l_o74d3c4
	# END CBRANCH
	# CBRANCH
	load8! &3 	#X3
	load8! &16 	#X15
	lt_u
	not
	jump_zero! .L14.l_o74d3c4
	# END CBRANCH
.L8.l_o74d3c4:
	load8! &15 	#X15
	load8! &4 	#X3
	sub
	sub! 258
	neg
	store8! &3 	#X2
	# CBRANCH
	load4! &4 	#X4
	add! -2147483648
	load4! &3 	#X2
	add! -2147483648
	lt_u
	jump_zero! .L5.l_o74d3c4
	# END CBRANCH
.L34.l_o74d3c4:
	load4! &0 	#AR
	load8! &11 	#X10
	add! 176
	store4
	#
	# CBRANCH
	load4! &2 	#X2
	add! -2147483648
	load4! &18
	add! -2147483648
	lt_u
	jump_zero! .L19.l_o74d3c4
	# END CBRANCH
	load4! &2 	#X2
	sigx4
	store8! &4 	#X3
	load8! &3 	#X3
	add! -1
	load8! &12 	#X11
	add
	load1
	store8! &13 	#X12
	load8! &11 	#X11
	load8! &4 	#X3
	add
	load1
	store8! &7 	#X6
	load4! &2 	#X2
	store8! &5 	#X4
	jump! .L5.l_o74d3c4
.L18.l_o74d3c4:
	push! 0
	store8! &8 	#X7
	jump! .L2.l_o74d3c4
.L6.l_o74d3c4:
	load8! &3 	#X3
	add! 1
	store8! &4 	#X3
	load8! &15 	#X15
	load8! &4 	#X3
	sub
	sub! 258
	neg
	store8! &3 	#X2
	# CBRANCH
	load4! &4 	#X4
	add! -2147483648
	load4! &3 	#X2
	add! -2147483648
	lt_u
	jump_zero! .L5.l_o74d3c4
	# END CBRANCH
	jump! .L34.l_o74d3c4
.L28.l_o74d3c4:
	load8! &3 	#X3
	add! 2
	store8! &4 	#X3
	load8! &15 	#X15
	load8! &4 	#X3
	sub
	sub! 258
	neg
	store8! &3 	#X2
	# CBRANCH
	load4! &4 	#X4
	add! -2147483648
	load4! &3 	#X2
	add! -2147483648
	lt_u
	jump_zero! .L5.l_o74d3c4
	# END CBRANCH
	jump! .L34.l_o74d3c4
.L29.l_o74d3c4:
	load8! &3 	#X3
	add! 3
	store8! &4 	#X3
	load8! &15 	#X15
	load8! &4 	#X3
	sub
	sub! 258
	neg
	store8! &3 	#X2
	# CBRANCH
	load4! &4 	#X4
	add! -2147483648
	load4! &3 	#X2
	add! -2147483648
	lt_u
	jump_zero! .L5.l_o74d3c4
	# END CBRANCH
	jump! .L34.l_o74d3c4
.L30.l_o74d3c4:
	load8! &3 	#X3
	add! 4
	store8! &4 	#X3
	load8! &15 	#X15
	load8! &4 	#X3
	sub
	sub! 258
	neg
	store8! &3 	#X2
	# CBRANCH
	load4! &4 	#X4
	add! -2147483648
	load4! &3 	#X2
	add! -2147483648
	lt_u
	jump_zero! .L5.l_o74d3c4
	# END CBRANCH
	jump! .L34.l_o74d3c4
.L32.l_o74d3c4:
	load8! &3 	#X3
	add! 6
	store8! &4 	#X3
	load8! &15 	#X15
	load8! &4 	#X3
	sub
	sub! 258
	neg
	store8! &3 	#X2
	# CBRANCH
	load4! &4 	#X4
	add! -2147483648
	load4! &3 	#X2
	add! -2147483648
	lt_u
	jump_zero! .L5.l_o74d3c4
	# END CBRANCH
	jump! .L34.l_o74d3c4
.L31.l_o74d3c4:
	load8! &3 	#X3
	add! 5
	store8! &4 	#X3
	load8! &15 	#X15
	load8! &4 	#X3
	sub
	sub! 258
	neg
	store8! &3 	#X2
	# CBRANCH
	load4! &4 	#X4
	add! -2147483648
	load4! &3 	#X2
	add! -2147483648
	lt_u
	jump_zero! .L5.l_o74d3c4
	# END CBRANCH
	jump! .L34.l_o74d3c4
.L33.l_o74d3c4:
	load8! &3 	#X3
	add! 7
	store8! &4 	#X3
	load8! &15 	#X15
	load8! &4 	#X3
	sub
	sub! 258
	neg
	store8! &3 	#X2
	# CBRANCH
	load4! &4 	#X4
	add! -2147483648
	load4! &3 	#X2
	add! -2147483648
	lt_u
	jump_zero! .L5.l_o74d3c4
	# END CBRANCH
	jump! .L34.l_o74d3c4
.L19.l_o74d3c4:
	load4! &2 	#X2
	store8! &5 	#X4
	jump! .L15.l_o74d3c4
.L17.l_o74d3c4:
	load4! &0 	#AR
	store4! &20

	# epilogue
	set_sp! &18
	return

# FUNCTION ENDS:longest_match

	#peephole push+pop+deadreg+binop
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole popdi+cmp rev
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push offset
	#peephole pop+cmp
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole move
	#peephole move+push(pushable)
	#peephole 1
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole zero_extend
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole zero_extend
	#peephole pop(deadreg)+ind push offset
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole nop+set
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole zero_extend
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole move
	#peephole move+push+sub
	#peephole move_dead
	#peephole zero_extend
	#peephole pop+push+sub
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole 1
	#peephole move
	#peephole move+push+sub
	#peephole move_dead
	#peephole move
	#peephole move+push+sub
	#peephole move_dead
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+block+push+block
	#peephole pop(deadreg)+pushdi
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole redundant blockage insn
	#peephole pop(deadreg)+pushdi
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+block+cmp
	#peephole popdi+cmp rev
	#peephole zero_extend
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole zero_extend
	#peephole pop+block+push+block
	#peephole zero_extend
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole and+pophi
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole and+pophi
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push

# FUNCTION BEGINS:fill_window
fill_window.s_o74d3c4:
	# prologue (13 GPRs)

	set_sp! &-13

	load8! &14
	store8! &3 	#X2
	load8! &2 	#X2
	add! 80
	load4
	#
	store8! &8 	#X7
	load8! &2 	#X2
	add! 180
	load4
	#
	store8! &4 	#X3
	load4! &7 	#X7
	store8! &9 	#X8
	load8! &2 	#X2
	add! 104
	load8
	#
	store8! &1 	#AR
	load8! &2 	#X2
	add! 172
	load4
	#
	store8! &7 	#X6
	load8! &6 	#X6
	load8! &1 	#AR
	sub
	neg
	store8! &5 	#X4
	load8! &3 	#X3
	load8! &5 	#X4
	sub
	neg
	store8! &6 	#X5
	load8! &7 	#X7
	add! -262
	load8! &9 	#X8
	add
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - reverse 
	load4! &7 	#X6
	gt_u
	jump_zero! .L72.l_o74d3c4
	# END CBRANCH
.L36.l_o74d3c4:
	load8! &2 	#X2
	load8
	#
	store8! &5 	#X4
	load8! &4 	#X4
	add! 8
	load4
	#
	store8! &9 	#X8
	# CBRANCH EQ0
	load4! &8 	#X8
	jump_zero! .L45.l_o74d3c4
	# END CBRANCH
.L74.l_o74d3c4:
	load8! &2 	#X2
	add! 180
	load4
	#
	store8! &4 	#X3
	# CBRANCH
	load4! &5 	#X5
	load4! &9 	#X8
	lt_u
	jump_zero! .L60.l_o74d3c4
	# END CBRANCH
	# CBRANCH EQ0
	load4! &5 	#X5
	jump_not_zero! .L73.l_o74d3c4
	# END CBRANCH
	load4! &3 	#X3
	load8! &3 	#X2
	add! 180
	store4
	#
	load8! &2 	#X2
	add! 14012
	load4
	#
	store8! &1 	#AR
	load8! &3 	#X3
	load8! &1 	#AR
	add
	store8! &2 	#X1
	# CBRANCH
	push! 2
	load4! &2 	#X1
	lt_u
	not
	jump_zero! .L50.l_o74d3c4
	# END CBRANCH
.L53.l_o74d3c4:
	# CBRANCH
	push! 261
	load4! &4 	#X3
	lt_u
	not
	jump_zero! .L45.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	load8
	#
	add! 8
	load4
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L45.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	add! 80
	load4
	#
	store8! &9 	#X8
	load8! &2 	#X2
	add! 104
	load8
	#
	store8! &1 	#AR
	load8! &2 	#X2
	add! 172
	load4
	#
	store8! &7 	#X6
	load8! &6 	#X6
	load8! &1 	#AR
	sub
	neg
	store8! &5 	#X4
	load8! &3 	#X3
	load8! &5 	#X4
	sub
	neg
	store8! &6 	#X5
	load8! &7 	#X7
	add! -262
	load8! &9 	#X8
	add
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - reverse 
	load4! &7 	#X6
	gt_u
	not
	jump_zero! .L36.l_o74d3c4
	# END CBRANCH
.L72.l_o74d3c4:
	load8! &7 	#X7
	load8! &7 	#X6
	add
	load8! &1 	#AR
	sub
	load8! &4 	#X3
	add
	and! 0xffffffff
	store8! &4 	#X3
	load8! &2 	#X2
	add! 96
	load8
	#
	store8! &1 	#AR
	load4! &7 	#X7
	load8! &1 	#AR
	add
	store8! &2 	#X1
	load8! &3 	#X3
	load8! &2 	#X1
	load8! &2 	#AR
	call! memcpy
	store8! &3

	set_sp! &2
	load8! &2 	#X2
	add! 176
	load4
	#
	store8! &2 	#X1
	load8! &7 	#X7
	load8! &2 	#X1
	sub
	neg
	load8! &3 	#X2
	add! 176
	store4
	#
	load8! &2 	#X2
	add! 172
	load4
	#
	store8! &2 	#X1
	load8! &7 	#X7
	load8! &2 	#X1
	sub
	neg
	store8! &7 	#X6
	load4! &6 	#X6
	load8! &3 	#X2
	add! 172
	store4
	#
	load8! &2 	#X2
	add! 152
	load8
	#
	store8! &2 	#X1
	load4! &7 	#X7
	load8! &2 	#X1
	sub
	neg
	load8! &3 	#X2
	add! 152
	store8
	#
	load8! &2 	#X2
	add! 80
	load4
	#
	store8! &2 	#X1
	load8! &2 	#X2
	add! 132
	load4
	#
	store8! &4 	#X3
	load8! &2 	#X2
	add! 120
	load8
	#
	store8! &5 	#X4
	load4! &3 	#X3
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	load8! &5 	#X4
	add
	store8! &1 	#AR
	load8! &3 	#X3
	add! -1
	and! 0xffffffff
	add! 1
	mult! -2
	load8! &1 	#AR
	add
	store8! &9 	#X8
.L37.l_o74d3c4:
	load8! &0 	#AR
	add! -2
	store8! &4 	#X3
	load8! &3 	#X3
	store8! &1 	#AR
	load8! &3 	#X3
	load2
	#
	store8! &5 	#X4
	# CBRANCH
	load4! &4 	#X4
	load4! &2 	#X1
	lt_u
	not
	jump_zero! .L38.l_o74d3c4
	# END CBRANCH
	load8! &1 	#X1
	load8! &5 	#X4
	sub
	neg
	load8! &4 	#X3
	store2
	#
	# CBRANCH
	load8! &8 	#X8
	load8! &4 	#X3
	xor
	push! 1
	lt_u
	jump_zero! .L37.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	add! 112
	load8
	#
	store8! &4 	#X3
	load4! &1 	#X1
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	load8! &4 	#X3
	add
	store8! &1 	#AR
	load8! &1 	#X1
	add! -1
	and! 0xffffffff
	add! 1
	mult! -2
	load8! &1 	#AR
	add
	store8! &9 	#X8
.L41.l_o74d3c4:
	load8! &0 	#AR
	add! -2
	store8! &4 	#X3
	load8! &3 	#X3
	store8! &1 	#AR
	load8! &3 	#X3
	load2
	#
	store8! &5 	#X4
	# CBRANCH
	load4! &4 	#X4
	load4! &2 	#X1
	lt_u
	not
	jump_zero! .L42.l_o74d3c4
	# END CBRANCH
	load8! &1 	#X1
	load8! &5 	#X4
	sub
	neg
	load8! &4 	#X3
	store2
	#
	# CBRANCH
	load8! &8 	#X8
	load8! &4 	#X3
	xor
	push! 1
	lt_u
	jump_zero! .L41.l_o74d3c4
	# END CBRANCH
	load8! &5 	#X5
	load8! &8 	#X7
	add
	store8! &6 	#X5
.L77.l_o74d3c4:
	load8! &2 	#X2
	load8
	#
	store8! &5 	#X4
	load8! &4 	#X4
	add! 8
	load4
	#
	store8! &9 	#X8
	# CBRANCH EQ0
	load4! &8 	#X8
	jump_not_zero! .L74.l_o74d3c4
	# END CBRANCH
.L45.l_o74d3c4:
	load8! &2 	#X2
	add! 14024
	load8
	#
	store8! &1 	#AR
	load8! &2 	#X2
	add! 104
	load8
	#
	store8! &2 	#X1
	# CBRANCH
	load8! &0 	#AR
	load8! &2 	#X1
	lt_u
	jump_zero! .L35.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	add! 172
	load4
	#
	store8! &5 	#X4
	load8! &2 	#X2
	add! 180
	load4
	#
	and! 0x0ffffffff
	load8! &5 	#X4
	add
	store8! &4 	#X3
	# CBRANCH
	load8! &0 	#AR
	load8! &4 	#X3
	lt_u
	jump_zero! .L57.l_o74d3c4
	# END CBRANCH
	load8! &1 	#X1
	load8! &4 	#X3
	sub
	store8! &5 	#X4
	# CBRANCH
	push! 258
	load8! &5 	#X4
	lt_u
	not
	jump_zero! .L75.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	add! 96
	load8
	#
	load8! &4 	#X3
	add
	store8! &1 	#AR
	load8! &4 	#X4
	push! 0
	load8! &2 	#AR
	call! memset
	store8! &3

	set_sp! &2
	load8! &3 	#X3
	load8! &5 	#X4
	add
	load8! &3 	#X2
	add! 14024
	store8
	#
.L35.l_o74d3c4:
	jump! .L76.l_o74d3c4
.L50.l_o74d3c4:
	load8! &2 	#X2
	add! 172
	load4
	#
	store8! &5 	#X4
	load8! &4 	#X4
	load8! &1 	#AR
	sub
	store8! &1 	#AR
	load8! &2 	#X2
	add! 96
	load8
	#
	store8! &9 	#X8
	load4! &0 	#AR
	load8! &9 	#X8
	add
	load1
	and! 0x0ff
	store8! &2 	#X1
	load4! &1 	#X1
	load8! &3 	#X2
	add! 128
	store4
	#
	load8! &2 	#X2
	add! 144
	load4
	#
	store8! &11 	#X10
	load4! &10 	#X10
	pow2
	load8! &2 	#X1
	mult
	store8! &2 	#X1
	load8! &0 	#AR
	add! 1
	and! 0xffffffff
	load8! &9 	#X8
	add
	load1
	and! 0x0ff
	load8! &2 	#X1
	xor
	store8! &2 	#X1
	load8! &2 	#X2
	add! 140
	load4
	#
	store8! &10 	#X9
	load8! &9 	#X9
	load8! &2 	#X1
	and
	store8! &2 	#X1
	load4! &1 	#X1
	load8! &3 	#X2
	add! 128
	store4
	#
.L52.l_o74d3c4:
	# CBRANCH EQ
	load4! &0 	#AR
	load4! &5 	#X4
	xor
	jump_zero! .L53.l_o74d3c4
	# END CBRANCH
	load4! &10 	#X10
	pow2
	load8! &2 	#X1
	mult
	store8! &2 	#X1
	load8! &0 	#AR
	add! 2
	and! 0xffffffff
	load8! &9 	#X8
	add
	load1
	and! 0x0ff
	load8! &2 	#X1
	xor
	load8! &10 	#X9
	and
	store8! &2 	#X1
	load4! &1 	#X1
	load8! &3 	#X2
	add! 128
	store4
	#
	load8! &2 	#X2
	add! 120
	load8
	#
	store8! &7 	#X6
	load4! &1 	#X1
	store8! &6 	#X5
	load8! &5 	#X5
	load8! &6 	#X5
	add
	load8! &7 	#X6
	add
	store8! &6 	#X5
	load8! &2 	#X2
	add! 112
	load8
	#
	store8! &12 	#X11
	load8! &2 	#X2
	add! 88
	load4
	#
	load8! &1 	#AR
	and
	and! 0xffffffff
	store8! &7 	#X6
	load8! &6 	#X6
	load8! &7 	#X6
	add
	load8! &12 	#X11
	add
	store8! &7 	#X6
	load8! &5 	#X5
	load2
	#
	load8! &7 	#X6
	store2
	#
	load2! &0 	#AR
	load8! &6 	#X5
	store2
	#
	load8! &0 	#AR
	add! 1
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &5 	#X4
	sub
	neg
	load8! &3 	#X2
	add! 14012
	store4
	#
	load8! &3 	#X3
	load8! &5 	#X4
	add
	store8! &7 	#X6
	load8! &0 	#AR
	load8! &7 	#X6
	sub
	neg
	store8! &6 	#X5
	# CBRANCH
	push! 2
	load4! &6 	#X5
	lt_u
	jump_zero! .L53.l_o74d3c4
	# END CBRANCH
	jump! .L52.l_o74d3c4
.L42.l_o74d3c4:
	push! 0
	load8! &4 	#X3
	store2
	#
	# CBRANCH
	load8! &8 	#X8
	load8! &4 	#X3
	xor
	push! 1
	lt_u
	jump_zero! .L41.l_o74d3c4
	# END CBRANCH
	load8! &5 	#X5
	load8! &8 	#X7
	add
	store8! &6 	#X5
	jump! .L77.l_o74d3c4
.L38.l_o74d3c4:
	push! 0
	load8! &4 	#X3
	store2
	#
	# CBRANCH
	load8! &8 	#X8
	load8! &4 	#X3
	xor
	push! 1
	lt_u
	jump_zero! .L37.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	add! 112
	load8
	#
	store8! &4 	#X3
	load4! &1 	#X1
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	load8! &4 	#X3
	add
	store8! &1 	#AR
	load8! &1 	#X1
	add! -1
	and! 0xffffffff
	add! 1
	mult! -2
	load8! &1 	#AR
	add
	store8! &9 	#X8
	jump! .L41.l_o74d3c4
.L60.l_o74d3c4:
	push! 0
	store8! &1 	#AR
.L46.l_o74d3c4:
	load8! &2 	#X2
	add! 96
	load8
	#
	store8! &6 	#X5
	load4! &3 	#X3
	store8! &2 	#X1
	load4! &6 	#X6
	load8! &2 	#X1
	add
	load8! &6 	#X5
	add
	store8! &6 	#X5
	load4! &0 	#AR
	load8! &5 	#X4
	add! 8
	store4
	#
	load4! &8 	#X8
	store8! &4 	#X3
	load8! &4 	#X4
	load8
	#
	store8! &1 	#AR
	load8! &3 	#X3
	load8! &1 	#AR
	load8! &7 	#X5
	call! memcpy
	store8! &3

	set_sp! &2
	load8! &4 	#X4
	add! 56
	load8
	#
	add! 48
	load4
	store8! &1 	#AR
	# CBRANCH EQ
	load4! &0 	#AR
	push! 1
	xor
	jump_zero! .L78.l_o74d3c4
	# END CBRANCH
	# CBRANCH EQ
	load4! &0 	#AR
	push! 2
	xor
	jump_zero! .L79.l_o74d3c4
	# END CBRANCH
	load8! &4 	#X4
	load8
	#
	load8! &4 	#X3
	add
	load8! &5 	#X4
	store8
	#
	load8! &4 	#X4
	add! 16
	load8
	#
	load8! &4 	#X3
	add
	load8! &5 	#X4
	add! 16
	store8
	#
	load8! &2 	#X2
	add! 180
	load4
	#
	load8! &9 	#X8
	add
	store8! &4 	#X3
.L80.l_o74d3c4:
	load4! &3 	#X3
	load8! &3 	#X2
	add! 180
	store4
	#
	load8! &2 	#X2
	add! 14012
	load4
	#
	store8! &1 	#AR
	load8! &3 	#X3
	load8! &1 	#AR
	add
	store8! &2 	#X1
	# CBRANCH
	push! 2
	load4! &2 	#X1
	lt_u
	not
	jump_zero! .L50.l_o74d3c4
	# END CBRANCH
	jump! .L53.l_o74d3c4
.L79.l_o74d3c4:
	load8! &4 	#X4
	add! 96
	load8
	#
	store8! &1 	#AR
	load4! &8 	#X8
	load8! &6 	#X5
	load8! &2 	#AR
	call! crc32
	store8! &3

	set_sp! &2
	load8! &0 	#AR
	load8! &5 	#X4
	add! 96
	store8
	#
	load8! &4 	#X4
	load8
	#
	load8! &4 	#X3
	add
	load8! &5 	#X4
	store8
	#
	load8! &4 	#X4
	add! 16
	load8
	#
	load8! &4 	#X3
	add
	load8! &5 	#X4
	add! 16
	store8
	#
	load8! &2 	#X2
	add! 180
	load4
	#
	load8! &9 	#X8
	add
	store8! &4 	#X3
	jump! .L80.l_o74d3c4
.L78.l_o74d3c4:
	load8! &4 	#X4
	add! 96
	load8
	#
	store8! &1 	#AR
	load4! &8 	#X8
	load8! &6 	#X5
	load8! &2 	#AR
	call! adler32
	store8! &3

	set_sp! &2
	load8! &0 	#AR
	load8! &5 	#X4
	add! 96
	store8
	#
	load8! &4 	#X4
	load8
	#
	load8! &4 	#X3
	add
	load8! &5 	#X4
	store8
	#
	load8! &4 	#X4
	add! 16
	load8
	#
	load8! &4 	#X3
	add
	load8! &5 	#X4
	add! 16
	store8
	#
	load8! &2 	#X2
	add! 180
	load4
	#
	load8! &9 	#X8
	add
	store8! &4 	#X3
	jump! .L80.l_o74d3c4
.L57.l_o74d3c4:
	load8! &3 	#X3
	add! 258
	# CBRANCH - peep (modesize=8)
	# - reverse 
	load8! &1 	#AR
	gt_u
	jump_zero! .L35.l_o74d3c4
	# END CBRANCH
	push! 258
	load8! &1 	#AR
	sub
	load8! &4 	#X3
	add
	store8! &5 	#X4
	load8! &1 	#X1
	load8! &1 	#AR
	sub
	store8! &4 	#X3
	# CBRANCH
	load8! &4 	#X4
	load8! &4 	#X3
	lt_u
	jump_zero! .L59.l_o74d3c4
	# END CBRANCH
	load8! &4 	#X4
	store8! &4 	#X3
.L59.l_o74d3c4:
	load8! &3 	#X3
	and! 0xffffffff
	store8! &2 	#X1
	load8! &2 	#X2
	add! 96
	load8
	#
	load8! &1 	#AR
	add
	store8! &1 	#AR
	load8! &1 	#X1
	push! 0
	load8! &2 	#AR
	call! memset
	store8! &3

	set_sp! &2
	load8! &2 	#X2
	add! 14024
	load8
	#
	load8! &4 	#X3
	add
	load8! &3 	#X2
	add! 14024
	store8
	#
	jump! .L76.l_o74d3c4
.L75.l_o74d3c4:
	push! 258
	store8! &5 	#X4
	load8! &2 	#X2
	add! 96
	load8
	#
	load8! &4 	#X3
	add
	store8! &1 	#AR
	load8! &4 	#X4
	push! 0
	load8! &2 	#AR
	call! memset
	store8! &3

	set_sp! &2
	load8! &3 	#X3
	load8! &5 	#X4
	add
	load8! &3 	#X2
	add! 14024
	store8
	#
	jump! .L35.l_o74d3c4
.L73.l_o74d3c4:
	load8! &5 	#X5
	load8! &9 	#X8
	sub
	neg
	store8! &1 	#AR
	load4! &5 	#X5
	store8! &9 	#X8
	jump! .L46.l_o74d3c4
.L76.l_o74d3c4:

	# epilogue
	set_sp! &13
	return

# FUNCTION ENDS:fill_window

	#peephole push+pop+push+pop
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+ind push offset
	#peephole pop+cmp
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move+push+sub
	#peephole 1
	#peephole push+pop+deadreg+binop
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole pop(deadreg)+ind push offset
	#peephole pop+cmp
	#peephole pop(deadreg)+ind push offset
	#peephole pop+cmp
	#peephole move
	#peephole move+push(pushable)
	#peephole pop+push+sub
	#peephole 1
	#peephole move_dead
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole 1
	#peephole zero_extend
	#peephole pop+push+sub
	#peephole pop+cmp
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop(deadreg)+ind push offset
	#peephole move
	#peephole move+push+sub
	#peephole move_dead
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+pushdi
	#peephole pop+push+commut(di)
	#peephole move_dead
	#peephole zero_extend
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole zero_extend
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole zero_extend
	#peephole 1
	#peephole move_dead
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole zero_extend
	#peephole pop+cmprev
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole pop(deadreg)+push
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+pushdi
	#peephole pop+push+commut(di)
	#peephole 1
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole zero_extend
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole zero_extend
	#peephole zero_extend
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole zero_extend
	#peephole pop(deadreg)+ind push offset
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move+push+sub
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move+push+sub
	#peephole 1
	#peephole push+pop+deadreg+binop
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole move_dead
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole move
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole move_dead
	#peephole move_dead
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole move_dead
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole move
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole move_dead
	#peephole move_dead
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole move_dead
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole move_dead
	#peephole move
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+block+cmp
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+push(deadreg)+sign_extend
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+pushdi
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole nop+set
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole nop+set
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole nop+set
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole nop+set
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+push(deadreg)+sign_extend
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole zero_extend
	#peephole zero_extend
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+push+commut(si)
	#peephole zero_extend
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole redundant blockage insn

# FUNCTION BEGINS:deflate_stored
deflate_stored.s_o74d3c4:
	# prologue (14 GPRs)

	set_sp! &-14

	load8! &15
	store8! &3 	#X2
	load4! &16
	store8! &7 	#X6
	load8! &2 	#X2
	add! 24
	load8
	#
	add! -5
	store8! &9 	#X8
	load8! &2 	#X2
	add! 80
	load4
	#
	store8! &1 	#AR
	# CBRANCH
	load8! &0 	#AR
	load8! &9 	#X8
	lt_u
	jump_zero! .L82.l_o74d3c4
	# END CBRANCH
	load8! &0 	#AR
	store8! &9 	#X8
.L82.l_o74d3c4:
	load4! &8 	#X8
	store8! &8 	#X7
	load8! &2 	#X2
	load8
	#
	store8! &4 	#X3
	load8! &3 	#X3
	add! 8
	load4
	#
	store8! &10 	#X9
	load4! &9 	#X9
	store8! &1 	#AR
.L103.l_o74d3c4:
	load8! &2 	#X2
	add! 14020
	load4
	#
	add! 42
	sigx4
	shift_rs! 3
	store8! &5 	#X4
	load8! &3 	#X3
	add! 32
	load4
	#
	store8! &2 	#X1
	# CBRANCH
	load4! &1 	#X1
	load4! &5 	#X4
	lt_u
	not
	jump_zero! .L147.l_o74d3c4
	# END CBRANCH
	load8! &1 	#X1
	load8! &5 	#X4
	sub
	store8! &5 	#X4
	load8! &2 	#X2
	add! 172
	load4
	#
	store8! &6 	#X5
	load8! &2 	#X2
	add! 152
	load8
	#
	store8! &2 	#X1
	load8! &5 	#X5
	load8! &2 	#X1
	sub
	store8! &6 	#X5
	load4! &5 	#X5
	load4! &1 	#AR
	add
	store8! &2 	#X1
	# CBRANCH
	push! 65534
	load8! &2 	#X1
	lt_u
	jump_zero! .L84.l_o74d3c4
	# END CBRANCH
	# CBRANCH
	push! 65534
	load4! &5 	#X4
	lt_u
	jump_zero! .L85.l_o74d3c4
	# END CBRANCH
	# CBRANCH
	push! 65535
	load8! &9 	#X8
	lt_u
	not
	jump_zero! .L148.l_o74d3c4
	# END CBRANCH
	push! 0
	store8! &11 	#X10
	push! 0
	store8! &13 	#X12
	push! -1
	store8! &14 	#X13
	push! -1
	store8! &4 	#X3
	push! 65535
	store8! &5 	#X4
	push! 0
	store8! &12 	#X11
	# CBRANCH EQ
	load4! &6 	#X6
	push! 4
	xor
	jump_zero! .L189.l_o74d3c4
	# END CBRANCH
.L91.l_o74d3c4:
	load4! &11 	#X11
	push! 0
	push! 0
	load8! &5 	#X2
	call! _tr_stored_block
	set_sp! (+ &0 32)
	

	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &2 	#X1
	load8! &2 	#X2
	add! 40
	load8
	#
	add! -4
	load8! &2 	#X1
	add
	store8! &1 	#AR
	load1! &3 	#X3
	load8! &1 	#AR
	store1
	#
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &2 	#X1
	load8! &2 	#X2
	add! 40
	load8
	#
	add! -3
	load8! &2 	#X1
	add
	store8! &1 	#AR
	load1! &13 	#X13
	load8! &1 	#AR
	store1
	#
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &2 	#X1
	load8! &2 	#X2
	add! 40
	load8
	#
	add! -2
	load8! &2 	#X1
	add
	store8! &1 	#AR
	load1! &12 	#X12
	load8! &1 	#AR
	store1
	#
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &2 	#X1
	load8! &2 	#X2
	add! 40
	load8
	#
	add! -1
	load8! &2 	#X1
	add
	store8! &1 	#AR
	load1! &10 	#X10
	load8! &1 	#AR
	store1
	#
	load8! &2 	#X2
	load8
	#
	store8! &11 	#X10
	load8! &10 	#X10
	add! 56
	load8
	#
	store8! &13 	#X12
	load8! &12 	#X12
	call! _tr_flush_bits
	set_sp! (+ &0 8)
	

	load8! &12 	#X12
	add! 40
	load8
	#
	store8! &4 	#X3
	load8! &10 	#X10
	add! 32
	load4
	#
	store8! &1 	#AR
	# CBRANCH
	load4! &0 	#AR
	load4! &4 	#X3
	lt_u
	jump_zero! .L92.l_o74d3c4
	# END CBRANCH
	load4! &0 	#AR
	store8! &4 	#X3
.L92.l_o74d3c4:
	# CBRANCH EQ0
	load4! &3 	#X3
	jump_zero! .L94.l_o74d3c4
	# END CBRANCH
	load4! &3 	#X3
	store8! &14 	#X13
	load8! &12 	#X12
	add! 32
	load8
	#
	store8! &2 	#X1
	load8! &10 	#X10
	add! 24
	load8
	#
	store8! &1 	#AR
	load8! &13 	#X13
	load8! &2 	#X1
	load8! &2 	#AR
	call! memcpy
	store8! &3

	set_sp! &2
	load8! &10 	#X10
	add! 24
	load8
	#
	load8! &14 	#X13
	add
	load8! &11 	#X10
	add! 24
	store8
	#
	load8! &12 	#X12
	add! 32
	load8
	#
	load8! &14 	#X13
	add
	load8! &13 	#X12
	add! 32
	store8
	#
	load8! &10 	#X10
	add! 40
	load8
	#
	load8! &14 	#X13
	add
	load8! &11 	#X10
	add! 40
	store8
	#
	load8! &10 	#X10
	add! 32
	load4
	#
	store8! &2 	#X1
	load8! &3 	#X3
	load8! &2 	#X1
	sub
	neg
	load8! &11 	#X10
	add! 32
	store4
	#
	load8! &12 	#X12
	add! 40
	load8
	#
	load8! &14 	#X13
	sub
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &13 	#X12
	add! 40
	store8
	#
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_not_zero! .L94.l_o74d3c4
	# END CBRANCH
	load8! &12 	#X12
	add! 16
	load8
	#
	load8! &13 	#X12
	add! 32
	store8
	#
.L94.l_o74d3c4:
	load8! &2 	#X2
	load8
	#
	store8! &4 	#X3
	# CBRANCH EQ0
	load4! &5 	#X5
	jump_zero! .L96.l_o74d3c4
	# END CBRANCH
	# CBRANCH
	load4! &4 	#X4
	load4! &6 	#X5
	lt_u
	jump_zero! .L97.l_o74d3c4
	# END CBRANCH
	load4! &4 	#X4
	store8! &6 	#X5
.L97.l_o74d3c4:
	load4! &5 	#X5
	store8! &11 	#X10
	load8! &2 	#X2
	add! 96
	load8
	#
	store8! &2 	#X1
	load8! &2 	#X2
	add! 152
	load8
	#
	load8! &2 	#X1
	add
	store8! &2 	#X1
	load8! &3 	#X3
	add! 24
	load8
	#
	store8! &1 	#AR
	load8! &10 	#X10
	load8! &2 	#X1
	load8! &2 	#AR
	call! memcpy
	store8! &3

	set_sp! &2
	load8! &2 	#X2
	load8
	#
	store8! &4 	#X3
	load8! &3 	#X3
	add! 24
	load8
	#
	load8! &11 	#X10
	add
	load8! &4 	#X3
	add! 24
	store8
	#
	load8! &3 	#X3
	add! 32
	load4
	#
	store8! &2 	#X1
	load8! &5 	#X5
	load8! &2 	#X1
	sub
	neg
	load8! &4 	#X3
	add! 32
	store4
	#
	load8! &3 	#X3
	add! 40
	load8
	#
	load8! &11 	#X10
	add
	load8! &4 	#X3
	add! 40
	store8
	#
	load8! &2 	#X2
	add! 152
	load8
	#
	store8! &2 	#X1
	load4! &5 	#X5
	load8! &2 	#X1
	add
	load8! &3 	#X2
	add! 152
	store8
	#
	load8! &5 	#X5
	load8! &5 	#X4
	sub
	neg
	store8! &5 	#X4
.L96.l_o74d3c4:
	load8! &3 	#X3
	add! 8
	load4
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_not_zero! .L190.l_o74d3c4
	# END CBRANCH
	# CBRANCH EQ0
	load4! &11 	#X11
	jump_zero! .L103.l_o74d3c4
	# END CBRANCH
.L201.l_o74d3c4:
	push! 1
	store8! &5 	#X4
.L83.l_o74d3c4:
	load8! &9 	#X9
	load8! &1 	#AR
	sub
	store8! &6 	#X5
	# CBRANCH EQ0
	load4! &5 	#X5
	jump_zero! .L191.l_o74d3c4
	# END CBRANCH
.L104.l_o74d3c4:
	load8! &2 	#X2
	add! 80
	load4
	#
	store8! &1 	#AR
	load8! &2 	#X2
	add! 96
	load8
	#
	store8! &2 	#X1
	# CBRANCH
	load4! &5 	#X5
	load4! &1 	#AR
	lt_u
	jump_zero! .L192.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	add! 104
	load8
	#
	store8! &8 	#X7
	load8! &2 	#X2
	add! 172
	load4
	#
	store8! &10 	#X9
	load4! &9 	#X9
	store8! &9 	#X8
	load8! &7 	#X7
	load8! &9 	#X8
	sub
	store8! &11 	#X10
	load4! &5 	#X5
	store8! &8 	#X7
	# CBRANCH
	load8! &7 	#X7
	load8! &11 	#X10
	lt_u
	jump_zero! .L193.l_o74d3c4
	# END CBRANCH
	load8! &3 	#X3
	load8
	#
	store8! &4 	#X3
	load8! &7 	#X7
	neg
	load8! &4 	#X3
	add
	store8! &4 	#X3
	load8! &1 	#X1
	load8! &9 	#X8
	add
	store8! &1 	#AR
	load8! &7 	#X7
	load8! &4 	#X3
	load8! &2 	#AR
	call! memcpy
	store8! &3

	set_sp! &2
	load8! &2 	#X2
	add! 172
	load4
	#
	load8! &6 	#X5
	add
	store8! &1 	#AR
	load4! &0 	#AR
	load8! &3 	#X2
	add! 172
	store4
	#
	load8! &2 	#X2
	add! 80
	load4
	#
	store8! &8 	#X7
.L107.l_o74d3c4:
	load4! &0 	#AR
	load8! &3 	#X2
	add! 152
	store8
	#
	load8! &2 	#X2
	add! 14012
	load4
	#
	store8! &4 	#X3
	load8! &3 	#X3
	load8! &8 	#X7
	sub
	neg
	store8! &2 	#X1
	# CBRANCH
	load4! &5 	#X5
	load4! &2 	#X1
	lt_u
	jump_zero! .L110.l_o74d3c4
	# END CBRANCH
	load4! &5 	#X5
	store8! &2 	#X1
.L110.l_o74d3c4:
	load8! &1 	#X1
	load8! &4 	#X3
	add
	load8! &3 	#X2
	add! 14012
	store4
	#
.L105.l_o74d3c4:
	load8! &2 	#X2
	add! 14024
	load8
	#
	store8! &4 	#X3
	load4! &0 	#AR
	store8! &2 	#X1
	# CBRANCH
	load8! &3 	#X3
	load8! &2 	#X1
	lt_u
	jump_zero! .L111.l_o74d3c4
	# END CBRANCH
	load8! &1 	#X1
	load8! &3 	#X2
	add! 14024
	store8
	#
.L111.l_o74d3c4:
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_not_zero! .L153.l_o74d3c4
	# END CBRANCH
	load8! &6 	#X6
	and! 0xfffffffffffffffb
	store8! &4 	#X3
	load8! &2 	#X2
	load8
	#
	store8! &8 	#X7
	load8! &7 	#X7
	add! 8
	load4
	#
	store8! &6 	#X5
	# CBRANCH EQ0
	load4! &3 	#X3
	jump_zero! .L113.l_o74d3c4
	# END CBRANCH
	# CBRANCH EQ0
	load4! &5 	#X5
	jump_zero! .L194.l_o74d3c4
	# END CBRANCH
.L113.l_o74d3c4:
	load8! &2 	#X2
	add! 104
	load8
	#
	add! -1
	store8! &9 	#X8
	load8! &0 	#AR
	load8! &9 	#X8
	sub
	neg
	store8! &4 	#X3
	# CBRANCH
	load4! &3 	#X3
	load4! &6 	#X5
	lt_u
	jump_zero! .L115.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	add! 152
	load8
	#
	store8! &11 	#X10
	load8! &2 	#X2
	add! 80
	load4
	#
	store8! &9 	#X8
	load4! &8 	#X8
	store8! &10 	#X9
	# CBRANCH
	load8! &10 	#X10
	add! -9223372036854775808
	load8! &10 	#X9
	add! -9223372036854775808
	lt_u
	jump_zero! .L195.l_o74d3c4
	# END CBRANCH
	# CBRANCH EQ0
	load4! &3 	#X3
	jump_not_zero! .L196.l_o74d3c4
	# END CBRANCH
.L114.l_o74d3c4:
	load8! &2 	#X2
	add! 14024
	load8
	#
	# CBRANCH - peep (modesize=8)
	load8! &2 	#X1
	lt_u
	jump_zero! .L124.l_o74d3c4
	# END CBRANCH
	load8! &1 	#X1
	load8! &3 	#X2
	add! 14024
	store8
	#
.L124.l_o74d3c4:
	load8! &2 	#X2
	add! 14020
	load4
	#
	add! 42
	sigx4
	shift_rs! 3
	store8! &2 	#X1
	load8! &2 	#X2
	add! 24
	load8
	#
	store8! &4 	#X3
	load4! &1 	#X1
	load8! &4 	#X3
	sub
	neg
	store8! &2 	#X1
	# CBRANCH
	push! 65535
	load8! &2 	#X1
	lt_u
	jump_zero! .L125.l_o74d3c4
	# END CBRANCH
	push! 65535
	store8! &2 	#X1
.L125.l_o74d3c4:
	load4! &1 	#X1
	store8! &4 	#X3
	load8! &2 	#X2
	add! 80
	load4
	#
	store8! &2 	#X1
	# CBRANCH
	load4! &3 	#X3
	load4! &2 	#X1
	lt_u
	jump_zero! .L126.l_o74d3c4
	# END CBRANCH
	load4! &3 	#X3
	store8! &2 	#X1
.L126.l_o74d3c4:
	load8! &2 	#X2
	add! 152
	load8
	#
	store8! &5 	#X4
	load4! &4 	#X4
	load8! &1 	#AR
	sub
	neg
	store8! &1 	#AR
	# CBRANCH
	load4! &0 	#AR
	load4! &2 	#X1
	lt_u
	jump_zero! .L127.l_o74d3c4
	# END CBRANCH
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_zero! .L197.l_o74d3c4
	# END CBRANCH
	# CBRANCH EQ0
	load4! &6 	#X6
	jump_zero! .L130.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	load8
	#
	add! 8
	load4
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_not_zero! .L130.l_o74d3c4
	# END CBRANCH
	# CBRANCH
	load4! &3 	#X3
	load4! &1 	#AR
	lt_u
	not
	jump_zero! .L130.l_o74d3c4
	# END CBRANCH
	load4! &3 	#X3
	store8! &6 	#X5
	# CBRANCH
	load4! &0 	#AR
	load4! &4 	#X3
	lt_u
	jump_zero! .L140.l_o74d3c4
	# END CBRANCH
	load4! &0 	#AR
	store8! &6 	#X5
.L140.l_o74d3c4:
	# CBRANCH EQ
	load4! &6 	#X6
	push! 4
	xor
	jump_zero! .L198.l_o74d3c4
	# END CBRANCH
.L133.l_o74d3c4:
	push! 0
	store8! &7 	#X6
.L134.l_o74d3c4:
	load4! &5 	#X5
	store8! &2 	#X1
	load8! &2 	#X2
	add! 96
	load8
	#
	load8! &5 	#X4
	add
	store8! &1 	#AR
	load4! &6 	#X6
	load8! &2 	#X1
	load8! &2 	#AR
	load8! &5 	#X2
	call! _tr_stored_block
	set_sp! (+ &0 32)
	

	load8! &2 	#X2
	add! 152
	load8
	#
	store8! &2 	#X1
	load4! &5 	#X5
	load8! &2 	#X1
	add
	load8! &3 	#X2
	add! 152
	store8
	#
	load8! &2 	#X2
	load8
	#
	store8! &4 	#X3
	load8! &3 	#X3
	add! 56
	load8
	#
	store8! &5 	#X4
	load8! &4 	#X4
	call! _tr_flush_bits
	set_sp! (+ &0 8)
	

	load8! &4 	#X4
	add! 40
	load8
	#
	store8! &3 	#X2
	load8! &3 	#X3
	add! 32
	load4
	#
	store8! &1 	#AR
	# CBRANCH
	load4! &0 	#AR
	load4! &3 	#X2
	lt_u
	jump_zero! .L135.l_o74d3c4
	# END CBRANCH
	load4! &0 	#AR
	store8! &3 	#X2
.L135.l_o74d3c4:
	# CBRANCH EQ0
	load4! &2 	#X2
	jump_zero! .L137.l_o74d3c4
	# END CBRANCH
	load4! &2 	#X2
	store8! &6 	#X5
	load8! &4 	#X4
	add! 32
	load8
	#
	store8! &2 	#X1
	load8! &3 	#X3
	add! 24
	load8
	#
	store8! &1 	#AR
	load8! &5 	#X5
	load8! &2 	#X1
	load8! &2 	#AR
	call! memcpy
	store8! &3

	set_sp! &2
	load8! &3 	#X3
	add! 24
	load8
	#
	load8! &6 	#X5
	add
	load8! &4 	#X3
	add! 24
	store8
	#
	load8! &4 	#X4
	add! 32
	load8
	#
	load8! &6 	#X5
	add
	load8! &5 	#X4
	add! 32
	store8
	#
	load8! &3 	#X3
	add! 40
	load8
	#
	load8! &6 	#X5
	add
	load8! &4 	#X3
	add! 40
	store8
	#
	load8! &3 	#X3
	add! 32
	load4
	#
	store8! &2 	#X1
	load8! &2 	#X2
	load8! &2 	#X1
	sub
	neg
	load8! &4 	#X3
	add! 32
	store4
	#
	load8! &4 	#X4
	add! 40
	load8
	#
	load8! &6 	#X5
	sub
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &5 	#X4
	add! 40
	store8
	#
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L199.l_o74d3c4
	# END CBRANCH
.L137.l_o74d3c4:
	# CBRANCH EQ0
	load4! &6 	#X6
	jump_zero! .L130.l_o74d3c4
	# END CBRANCH
	push! 2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &16
	jump! .L200.l_o74d3c4
.L190.l_o74d3c4:
	load8! &3 	#X3
	add! 24
	load8
	#
	store8! &6 	#X5
	# CBRANCH
	load4! &4 	#X4
	load4! &1 	#AR
	lt_u
	not
	jump_zero! .L152.l_o74d3c4
	# END CBRANCH
	load4! &0 	#AR
	store8! &13 	#X12
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_not_zero! .L99.l_o74d3c4
	# END CBRANCH
	load4! &4 	#X4
	store8! &2 	#X1
	load8! &5 	#X5
	load8! &2 	#X1
	add
	load8! &4 	#X3
	add! 24
	store8
	#
	load8! &3 	#X3
	add! 32
	load4
	#
	load8! &5 	#X4
	sub
	load8! &4 	#X3
	add! 32
	store4
	#
	load8! &3 	#X3
	add! 40
	load8
	#
	load8! &2 	#X1
	add
	load8! &4 	#X3
	add! 40
	store8
	#
.L204.l_o74d3c4:
	# CBRANCH EQ0
	load4! &11 	#X11
	jump_zero! .L103.l_o74d3c4
	# END CBRANCH
	jump! .L201.l_o74d3c4
.L189.l_o74d3c4:
	load8! &0 	#AR
	load8! &6 	#X5
	add
	store8! &12 	#X11
	load4! &4 	#X4
	store8! &2 	#X1
	load8! &11 	#X11
	load8! &2 	#X1
	xor
	and! 0xffffffff
	add! -1
	shift_ru! 63
	and! 0xff
	store8! &12 	#X11
	load4! &1 	#X1
	store8! &5 	#X4
	jump! .L91.l_o74d3c4
.L84.l_o74d3c4:
	load8! &0 	#AR
	load8! &6 	#X5
	add
	store8! &2 	#X1
	# CBRANCH
	load4! &1 	#X1
	load4! &5 	#X4
	lt_u
	jump_zero! .L85.l_o74d3c4
	# END CBRANCH
	load4! &1 	#X1
	store8! &5 	#X4
.L85.l_o74d3c4:
	# CBRANCH
	load4! &4 	#X4
	load4! &8 	#X7
	lt_u
	not
	jump_zero! .L89.l_o74d3c4
	# END CBRANCH
	load1! &4 	#X4
	store8! &4 	#X3
	load4! &4 	#X4
	shift_ru! 8
	store8! &14 	#X13
	load8! &3 	#X3
	not
	store8! &13 	#X12
	load8! &4 	#X4
	not
	and! 0xffffffff
	shift_ru! 8
	store8! &11 	#X10
	push! 0
	store8! &12 	#X11
	# CBRANCH
	load4! &6 	#X6
	push! 4
	xor
	push! 1
	lt_u
	jump_zero! .L91.l_o74d3c4
	# END CBRANCH
	jump! .L189.l_o74d3c4
.L89.l_o74d3c4:
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_not_zero! .L86.l_o74d3c4
	# END CBRANCH
	# CBRANCH
	load4! &6 	#X6
	push! 4
	xor
	push! 1
	lt_u
	jump_zero! .L83.l_o74d3c4
	# END CBRANCH
	load8! &0 	#AR
	load8! &6 	#X5
	add
	store8! &2 	#X1
	# CBRANCH EQ0
	load4! &1 	#X1
	jump_not_zero! .L83.l_o74d3c4
	# END CBRANCH
	push! 0
	store8! &12 	#X11
	push! -1
	store8! &11 	#X10
	push! -1
	store8! &13 	#X12
	push! 0
	store8! &14 	#X13
	push! 0
	store8! &4 	#X3
	load8! &11 	#X11
	load8! &2 	#X1
	xor
	and! 0xffffffff
	add! -1
	shift_ru! 63
	and! 0xff
	store8! &12 	#X11
	load4! &1 	#X1
	store8! &5 	#X4
	jump! .L91.l_o74d3c4
.L148.l_o74d3c4:
	push! 65535
	store8! &5 	#X4
.L86.l_o74d3c4:
	# CBRANCH EQ0
	load4! &6 	#X6
	jump_zero! .L149.l_o74d3c4
	# END CBRANCH
	load8! &0 	#AR
	load8! &6 	#X5
	add
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	load4! &5 	#X4
	xor
	push! 1
	lt_u
	jump_zero! .L150.l_o74d3c4
	# END CBRANCH
	load1! &4 	#X4
	store8! &4 	#X3
	load4! &4 	#X4
	shift_ru! 8
	store8! &14 	#X13
	load8! &3 	#X3
	not
	store8! &13 	#X12
	load8! &4 	#X4
	not
	and! 0xffffffff
	shift_ru! 8
	store8! &11 	#X10
	push! 0
	store8! &12 	#X11
	# CBRANCH
	load4! &6 	#X6
	push! 4
	xor
	push! 1
	lt_u
	jump_zero! .L91.l_o74d3c4
	# END CBRANCH
	jump! .L189.l_o74d3c4
.L152.l_o74d3c4:
	load4! &4 	#X4
	store8! &13 	#X12
.L99.l_o74d3c4:
	load8! &12 	#X12
	load8! &1 	#AR
	sub
	neg
	load8! &4 	#X3
	add! 8
	store4
	#
	load4! &12 	#X12
	store8! &11 	#X10
	load8! &3 	#X3
	load8
	#
	store8! &1 	#AR
	load8! &10 	#X10
	load8! &1 	#AR
	load8! &7 	#X5
	call! memcpy
	store8! &3

	set_sp! &2
	load8! &3 	#X3
	add! 56
	load8
	#
	add! 48
	load4
	store8! &1 	#AR
	# CBRANCH EQ
	load4! &0 	#AR
	push! 1
	xor
	jump_zero! .L202.l_o74d3c4
	# END CBRANCH
	# CBRANCH EQ
	load4! &0 	#AR
	push! 2
	xor
	jump_zero! .L203.l_o74d3c4
	# END CBRANCH
	load8! &3 	#X3
	load8
	#
	load8! &11 	#X10
	add
	load8! &4 	#X3
	store8
	#
	load8! &3 	#X3
	add! 16
	load8
	#
	load8! &11 	#X10
	add
	load8! &4 	#X3
	add! 16
	store8
	#
	load8! &2 	#X2
	load8
	#
	store8! &4 	#X3
	load8! &3 	#X3
	add! 24
	load8
	#
	store8! &6 	#X5
	load8! &3 	#X3
	add! 8
	load4
	#
	store8! &1 	#AR
.L205.l_o74d3c4:
	load4! &4 	#X4
	store8! &2 	#X1
	load8! &5 	#X5
	load8! &2 	#X1
	add
	load8! &4 	#X3
	add! 24
	store8
	#
	load8! &3 	#X3
	add! 32
	load4
	#
	load8! &5 	#X4
	sub
	load8! &4 	#X3
	add! 32
	store4
	#
	load8! &3 	#X3
	add! 40
	load8
	#
	load8! &2 	#X1
	add
	load8! &4 	#X3
	add! 40
	store8
	#
	jump! .L204.l_o74d3c4
.L191.l_o74d3c4:
	load8! &2 	#X2
	add! 172
	load4
	#
	store8! &1 	#AR
	jump! .L105.l_o74d3c4
.L203.l_o74d3c4:
	load8! &3 	#X3
	add! 96
	load8
	#
	store8! &1 	#AR
	load4! &12 	#X12
	load8! &6 	#X5
	load8! &2 	#AR
	call! crc32
	store8! &3

	set_sp! &2
	load8! &0 	#AR
	load8! &4 	#X3
	add! 96
	store8
	#
	load8! &3 	#X3
	load8
	#
	load8! &11 	#X10
	add
	load8! &4 	#X3
	store8
	#
	load8! &3 	#X3
	add! 16
	load8
	#
	load8! &11 	#X10
	add
	load8! &4 	#X3
	add! 16
	store8
	#
	load8! &2 	#X2
	load8
	#
	store8! &4 	#X3
	load8! &3 	#X3
	add! 24
	load8
	#
	store8! &6 	#X5
	load8! &3 	#X3
	add! 8
	load4
	#
	store8! &1 	#AR
	jump! .L205.l_o74d3c4
.L202.l_o74d3c4:
	load8! &3 	#X3
	add! 96
	load8
	#
	store8! &1 	#AR
	load4! &12 	#X12
	load8! &6 	#X5
	load8! &2 	#AR
	call! adler32
	store8! &3

	set_sp! &2
	load8! &0 	#AR
	load8! &4 	#X3
	add! 96
	store8
	#
	load8! &3 	#X3
	load8
	#
	load8! &11 	#X10
	add
	load8! &4 	#X3
	store8
	#
	load8! &3 	#X3
	add! 16
	load8
	#
	load8! &11 	#X10
	add
	load8! &4 	#X3
	add! 16
	store8
	#
	load8! &2 	#X2
	load8
	#
	store8! &4 	#X3
	load8! &3 	#X3
	add! 24
	load8
	#
	store8! &6 	#X5
	load8! &3 	#X3
	add! 8
	load4
	#
	store8! &1 	#AR
	jump! .L205.l_o74d3c4
.L195.l_o74d3c4:
	load8! &10 	#X10
	load8! &10 	#X9
	sub
	load8! &3 	#X2
	add! 152
	store8
	#
	load8! &8 	#X8
	load8! &1 	#AR
	sub
	neg
	store8! &1 	#AR
	load4! &0 	#AR
	load8! &3 	#X2
	add! 172
	store4
	#
	load4! &0 	#AR
	store8! &6 	#X5
	load8! &2 	#X2
	add! 96
	load8
	#
	store8! &1 	#AR
	load4! &8 	#X8
	load8! &1 	#AR
	add
	store8! &2 	#X1
	load8! &5 	#X5
	load8! &2 	#X1
	load8! &2 	#AR
	call! memcpy
	store8! &3

	set_sp! &2
	load8! &2 	#X2
	add! 14008
	load4
	#
	store8! &1 	#AR
	# CBRANCH
	push! 1
	load4! &1 	#AR
	lt_u
	not
	jump_zero! .L117.l_o74d3c4
	# END CBRANCH
	load8! &0 	#AR
	add! 1
	load8! &3 	#X2
	add! 14008
	store4
	#
.L117.l_o74d3c4:
	load8! &2 	#X2
	add! 80
	load4
	#
	load8! &4 	#X3
	add
	store8! &4 	#X3
	load8! &2 	#X2
	load8
	#
	store8! &8 	#X7
	load8! &7 	#X7
	add! 8
	load4
	#
	store8! &6 	#X5
	load8! &2 	#X2
	add! 172
	load4
	#
	store8! &1 	#AR
	load4! &0 	#AR
	store8! &2 	#X1
.L115.l_o74d3c4:
	# CBRANCH
	load4! &5 	#X5
	load4! &4 	#X3
	lt_u
	jump_zero! .L206.l_o74d3c4
	# END CBRANCH
	# CBRANCH EQ0
	load4! &5 	#X5
	jump_zero! .L114.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	add! 96
	load8
	#
	load8! &2 	#X1
	add
	store8! &9 	#X8
	load4! &5 	#X5
	store8! &4 	#X3
.L120.l_o74d3c4:
	load4! &4 	#X4
	load8! &8 	#X7
	add! 8
	store4
	#
	load4! &3 	#X3
	store8! &5 	#X4
	load8! &7 	#X7
	load8
	#
	store8! &1 	#AR
	load8! &4 	#X4
	load8! &1 	#AR
	load8! &10 	#X8
	call! memcpy
	store8! &3

	set_sp! &2
	load8! &7 	#X7
	add! 56
	load8
	#
	add! 48
	load4
	store8! &1 	#AR
	# CBRANCH EQ
	load4! &0 	#AR
	push! 1
	xor
	jump_zero! .L207.l_o74d3c4
	# END CBRANCH
	# CBRANCH EQ
	load4! &0 	#AR
	push! 2
	xor
	jump_zero! .L208.l_o74d3c4
	# END CBRANCH
	load8! &7 	#X7
	load8
	#
	load8! &5 	#X4
	add
	load8! &8 	#X7
	store8
	#
	load8! &7 	#X7
	add! 16
	load8
	#
	load8! &5 	#X4
	add
	load8! &8 	#X7
	add! 16
	store8
	#
	load8! &2 	#X2
	add! 172
	load4
	#
	store8! &1 	#AR
	load4! &5 	#X5
	store8! &4 	#X3
.L121.l_o74d3c4:
	load8! &0 	#AR
	load8! &4 	#X3
	add
	store8! &1 	#AR
	load4! &0 	#AR
	load8! &3 	#X2
	add! 172
	store4
	#
	load4! &0 	#AR
	store8! &2 	#X1
	jump! .L114.l_o74d3c4
.L127.l_o74d3c4:
	load4! &3 	#X3
	store8! &6 	#X5
	# CBRANCH
	load4! &0 	#AR
	load4! &4 	#X3
	lt_u
	not
	jump_zero! .L209.l_o74d3c4
	# END CBRANCH
	# CBRANCH
	load4! &6 	#X6
	push! 4
	xor
	push! 1
	lt_u
	jump_zero! .L133.l_o74d3c4
	# END CBRANCH
.L211.l_o74d3c4:
	load8! &2 	#X2
	load8
	#
	add! 8
	load4
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_not_zero! .L133.l_o74d3c4
	# END CBRANCH
	# CBRANCH
	load4! &3 	#X3
	load4! &1 	#AR
	lt_u
	not
	jump_zero! .L133.l_o74d3c4
	# END CBRANCH
	push! 1
	store8! &7 	#X6
	jump! .L134.l_o74d3c4
.L197.l_o74d3c4:
	# CBRANCH
	load4! &6 	#X6
	push! 4
	xor
	push! 1
	lt_u
	jump_zero! .L130.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	load8
	#
	add! 8
	load4
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L210.l_o74d3c4
	# END CBRANCH
.L130.l_o74d3c4:
	push! 0
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &16
	jump! .L200.l_o74d3c4
.L147.l_o74d3c4:
	push! 0
	store8! &5 	#X4
	load8! &9 	#X9
	load8! &1 	#AR
	sub
	store8! &6 	#X5
	# CBRANCH EQ0
	load4! &5 	#X5
	jump_not_zero! .L104.l_o74d3c4
	# END CBRANCH
	jump! .L191.l_o74d3c4
.L153.l_o74d3c4:
	push! 3
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &16
	jump! .L200.l_o74d3c4
.L209.l_o74d3c4:
	load4! &0 	#AR
	store8! &6 	#X5
	# CBRANCH
	load4! &6 	#X6
	push! 4
	xor
	push! 1
	lt_u
	jump_zero! .L133.l_o74d3c4
	# END CBRANCH
	jump! .L211.l_o74d3c4
.L194.l_o74d3c4:
	load4! &0 	#AR
	store8! &5 	#X4
	load8! &2 	#X2
	add! 152
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - reverse 
	load8! &5 	#X4
	xor
	push! 1
	lt_u
	jump_zero! .L114.l_o74d3c4
	# END CBRANCH
	push! 1
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &16
	jump! .L200.l_o74d3c4
.L193.l_o74d3c4:
	load8! &0 	#AR
	load8! &10 	#X9
	sub
	neg
	store8! &4 	#X3
	load4! &3 	#X3
	load8! &3 	#X2
	add! 172
	store4
	#
	load4! &3 	#X3
	store8! &4 	#X3
	load4! &0 	#AR
	load8! &2 	#X1
	add
	store8! &1 	#AR
	load8! &3 	#X3
	load8! &1 	#AR
	load8! &3 	#X1
	call! memcpy
	store8! &3

	set_sp! &2
	load8! &2 	#X2
	add! 14008
	load4
	#
	store8! &1 	#AR
	# CBRANCH
	push! 1
	load4! &1 	#AR
	lt_u
	jump_zero! .L109.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	load8
	#
	store8! &4 	#X3
	load8! &2 	#X2
	add! 96
	load8
	#
	store8! &2 	#X1
	load8! &2 	#X2
	add! 172
	load4
	#
	store8! &9 	#X8
	load8! &3 	#X3
	load8
	#
	store8! &4 	#X3
	load8! &7 	#X7
	neg
	load8! &4 	#X3
	add
	store8! &4 	#X3
	load8! &1 	#X1
	load8! &9 	#X8
	add
	store8! &1 	#AR
	load8! &7 	#X7
	load8! &4 	#X3
	load8! &2 	#AR
	call! memcpy
	store8! &3

	set_sp! &2
	load8! &2 	#X2
	add! 172
	load4
	#
	load8! &6 	#X5
	add
	store8! &1 	#AR
	load4! &0 	#AR
	load8! &3 	#X2
	add! 172
	store4
	#
	load8! &2 	#X2
	add! 80
	load4
	#
	store8! &8 	#X7
	jump! .L107.l_o74d3c4
.L199.l_o74d3c4:
	load8! &4 	#X4
	add! 16
	load8
	#
	load8! &5 	#X4
	add! 32
	store8
	#
	jump! .L137.l_o74d3c4
.L206.l_o74d3c4:
	# CBRANCH EQ0
	load4! &3 	#X3
	jump_zero! .L114.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	add! 96
	load8
	#
	load8! &2 	#X1
	add
	store8! &9 	#X8
	# CBRANCH
	load4! &3 	#X3
	load4! &6 	#X5
	lt_u
	jump_zero! .L119.l_o74d3c4
	# END CBRANCH
	load8! &3 	#X3
	load8! &6 	#X5
	sub
	neg
	store8! &5 	#X4
	load4! &3 	#X3
	store8! &6 	#X5
	jump! .L120.l_o74d3c4
.L192.l_o74d3c4:
	push! 2
	load8! &3 	#X2
	add! 14008
	store4
	#
	load4! &0 	#AR
	store8! &1 	#AR
	load8! &3 	#X3
	load8
	#
	store8! &8 	#X7
	load8! &0 	#AR
	neg
	load8! &8 	#X7
	add
	store8! &4 	#X3
	load8! &0 	#AR
	load8! &4 	#X3
	load8! &3 	#X1
	call! memcpy
	store8! &3

	set_sp! &2
	load8! &2 	#X2
	add! 80
	load4
	#
	store8! &1 	#AR
	load4! &0 	#AR
	load8! &3 	#X2
	add! 172
	store4
	#
	load4! &0 	#AR
	store8! &8 	#X7
	jump! .L107.l_o74d3c4
.L149.l_o74d3c4:
	push! 0
	store8! &5 	#X4
	load8! &9 	#X9
	load8! &1 	#AR
	sub
	store8! &6 	#X5
	# CBRANCH EQ0
	load4! &5 	#X5
	jump_not_zero! .L104.l_o74d3c4
	# END CBRANCH
	jump! .L191.l_o74d3c4
.L119.l_o74d3c4:
	# CBRANCH EQ0
	load4! &5 	#X5
	jump_zero! .L121.l_o74d3c4
	# END CBRANCH
	load4! &5 	#X5
	store8! &1 	#AR
	load4! &3 	#X3
	store8! &6 	#X5
	load4! &0 	#AR
	store8! &4 	#X3
	jump! .L120.l_o74d3c4
.L150.l_o74d3c4:
	push! 0
	store8! &5 	#X4
	load8! &9 	#X9
	load8! &1 	#AR
	sub
	store8! &6 	#X5
	# CBRANCH EQ0
	load4! &5 	#X5
	jump_not_zero! .L104.l_o74d3c4
	# END CBRANCH
	jump! .L191.l_o74d3c4
.L196.l_o74d3c4:
	load8! &2 	#X2
	add! 96
	load8
	#
	load8! &2 	#X1
	add
	store8! &9 	#X8
	load8! &3 	#X3
	load8! &6 	#X5
	sub
	neg
	store8! &5 	#X4
	load4! &3 	#X3
	store8! &6 	#X5
	jump! .L120.l_o74d3c4
.L210.l_o74d3c4:
	push! 0
	store8! &6 	#X5
	push! 1
	store8! &7 	#X6
	jump! .L134.l_o74d3c4
.L208.l_o74d3c4:
	load8! &7 	#X7
	add! 96
	load8
	#
	store8! &1 	#AR
	load4! &3 	#X3
	load8! &9 	#X8
	load8! &2 	#AR
	call! crc32
	store8! &3

	set_sp! &2
	load8! &0 	#AR
	load8! &8 	#X7
	add! 96
	store8
	#
	load8! &7 	#X7
	load8
	#
	load8! &5 	#X4
	add
	load8! &8 	#X7
	store8
	#
	load8! &7 	#X7
	add! 16
	load8
	#
	load8! &5 	#X4
	add
	load8! &8 	#X7
	add! 16
	store8
	#
	load8! &2 	#X2
	add! 172
	load4
	#
	store8! &1 	#AR
	load4! &5 	#X5
	store8! &4 	#X3
	jump! .L121.l_o74d3c4
.L109.l_o74d3c4:
	load8! &0 	#AR
	add! 1
	load8! &3 	#X2
	add! 14008
	store4
	#
	load8! &2 	#X2
	load8
	#
	store8! &4 	#X3
	load8! &2 	#X2
	add! 96
	load8
	#
	store8! &2 	#X1
	load8! &2 	#X2
	add! 172
	load4
	#
	store8! &9 	#X8
	load8! &3 	#X3
	load8
	#
	store8! &4 	#X3
	load8! &7 	#X7
	neg
	load8! &4 	#X3
	add
	store8! &4 	#X3
	load8! &1 	#X1
	load8! &9 	#X8
	add
	store8! &1 	#AR
	load8! &7 	#X7
	load8! &4 	#X3
	load8! &2 	#AR
	call! memcpy
	store8! &3

	set_sp! &2
	load8! &2 	#X2
	add! 172
	load4
	#
	load8! &6 	#X5
	add
	store8! &1 	#AR
	load4! &0 	#AR
	load8! &3 	#X2
	add! 172
	store4
	#
	load8! &2 	#X2
	add! 80
	load4
	#
	store8! &8 	#X7
	jump! .L107.l_o74d3c4
.L207.l_o74d3c4:
	load8! &7 	#X7
	add! 96
	load8
	#
	store8! &1 	#AR
	load4! &3 	#X3
	load8! &9 	#X8
	load8! &2 	#AR
	call! adler32
	store8! &3

	set_sp! &2
	load8! &0 	#AR
	load8! &8 	#X7
	add! 96
	store8
	#
	load8! &7 	#X7
	load8
	#
	load8! &5 	#X4
	add
	load8! &8 	#X7
	store8
	#
	load8! &7 	#X7
	add! 16
	load8
	#
	load8! &5 	#X4
	add
	load8! &8 	#X7
	add! 16
	store8
	#
	load8! &2 	#X2
	add! 172
	load4
	#
	store8! &1 	#AR
	load4! &5 	#X5
	store8! &4 	#X3
	jump! .L121.l_o74d3c4
.L198.l_o74d3c4:
	push! 1
	store8! &7 	#X6
	jump! .L134.l_o74d3c4
.L200.l_o74d3c4:

	# epilogue
	set_sp! &14
	return

# FUNCTION ENDS:deflate_stored

	#peephole pop(deadreg)+ind push offset
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move+push+sub
	#peephole 1
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole pop+push+commut(di)
	#peephole zero_extend
	#peephole pop+cmp
	#peephole pop(deadreg)+ind push offset
	#peephole pop+cmp
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move+push+sub
	#peephole 1
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole pop+push+commut(di)
	#peephole zero_extend
	#peephole pop(deadreg)+ind push offset
	#peephole pop+cmp
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move+push+sub
	#peephole 1
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole pop+push+commut(di)
	#peephole zero_extend
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole zero_extend
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole pop(deadreg)+pushdi
	#peephole move_dead
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move+push(pushable)
	#peephole pop+push+commut(di)
	#peephole 1
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole move
	#peephole move+push(pushable)
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole nop+set
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole move
	#peephole move+push+sub
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole 1
	#peephole move
	#peephole move+push+sub
	#peephole move_dead
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole pop+push(deadreg)+shiftl
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+pushdi
	#peephole pop+push+commut(di)
	#peephole 1
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole zero_extend
	#peephole 1
	#peephole move
	#peephole move+push(pushable)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+push(deadreg)+sign_extend
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+push(deadreg)+sign_extend
	#peephole redundant blockage insn
	#peephole nop+set
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+push(deadreg)+sign_extend
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+pushdi
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+commut(di)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+commut(di)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole redundant blockage insn
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push

# FUNCTION BEGINS:deflate_fast
deflate_fast.s_o74d3c4:
	# prologue (16 GPRs)

	set_sp! &-17

	load8! &18
	store8! &14 	#X13
.L234.l_o74d3c4:
	load8! &13 	#X13
	add! 180
	load4
	#
	store8! &13 	#X12
.L227.l_o74d3c4:
	# CBRANCH
	push! 261
	load4! &13 	#X12
	lt_u
	jump_zero! .L260.l_o74d3c4
	# END CBRANCH
.L213.l_o74d3c4:
	load8! &13 	#X13
	add! 172
	load4
	#
	store8! &3 	#X2
.L217.l_o74d3c4:
	load8! &13 	#X13
	add! 128
	load4
	#
	store8! &2 	#X1
	load8! &13 	#X13
	add! 144
	load4
	#
	and! 0x0ffffffff
	pow2
	load8! &2 	#X1
	mult
	store8! &1 	#AR
	load8! &13 	#X13
	add! 96
	load8
	#
	store8! &4 	#X3
	load8! &2 	#X2
	add! 2
	and! 0xffffffff
	load8! &4 	#X3
	add
	load1
	and! 0x0ff
	load8! &1 	#AR
	xor
	store8! &1 	#AR
	load8! &13 	#X13
	add! 140
	load4
	#
	load8! &1 	#AR
	and
	store8! &1 	#AR
	load4! &0 	#AR
	load8! &14 	#X13
	add! 128
	store4
	#
	load8! &13 	#X13
	add! 120
	load8
	#
	store8! &2 	#X1
	load4! &0 	#AR
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	load8! &2 	#X1
	add
	store8! &1 	#AR
	load8! &13 	#X13
	add! 112
	load8
	#
	store8! &4 	#X3
	load8! &13 	#X13
	add! 88
	load4
	#
	load8! &3 	#X2
	and
	and! 0xffffffff
	store8! &2 	#X1
	load8! &1 	#X1
	load8! &2 	#X1
	add
	load8! &4 	#X3
	add
	store8! &4 	#X3
	load8! &0 	#AR
	load2
	#
	store8! &2 	#X1
	load2! &1 	#X1
	load8! &4 	#X3
	store2
	#
	load2! &1 	#X1
	store8! &2 	#X1
	load2! &2 	#X2
	load8! &1 	#AR
	store2
	#
	# CBRANCH EQ0
	load4! &1 	#X1
	jump_not_zero! .L219.l_o74d3c4
	# END CBRANCH
	load8! &13 	#X13
	add! 160
	load4
	#
	store8! &1 	#AR
.L218.l_o74d3c4:
	load8! &13 	#X13
	add! 13984
	load8
	#
	store8! &6 	#X5
	load8! &13 	#X13
	add! 13980
	load4
	#
	store8! &4 	#X3
	load4! &3 	#X3
	store8! &2 	#X1
	load8! &1 	#X1
	load8! &2 	#X1
	add
	load8! &6 	#X5
	add
	store8! &5 	#X4
	load8! &13 	#X13
	add! 13968
	load8
	#
	store8! &6 	#X5
	load8! &3 	#X3
	add! 1
	store8! &4 	#X3
	load8! &5 	#X5
	load8! &2 	#X1
	add
	store8! &2 	#X1
	# CBRANCH
	push! 2
	load4! &1 	#AR
	lt_u
	jump_zero! .L221.l_o74d3c4
	# END CBRANCH
.L263.l_o74d3c4:
	load8! &0 	#AR
	add! -3
	store8! &1 	#AR
	load2! &2 	#X2
	store8! &6 	#X5
	load8! &13 	#X13
	add! 176
	load4
	#
	store8! &3 	#X2
	load8! &5 	#X5
	load8! &3 	#X2
	sub
	store8! &3 	#X2
	load2! &2 	#X2
	load8! &5 	#X4
	store2
	#
	load4! &3 	#X3
	load8! &14 	#X13
	add! 13980
	store4
	#
	load1! &0 	#AR
	load8! &2 	#X1
	store1
	#
	load8! &2 	#X2
	add! -1
	store8! &2 	#X1
	load1! &0 	#AR
	sigx4
	add! _length_code
	load1
	and! 0x0ff
	add! 257
	store8! &1 	#AR
	load4! &0 	#AR
	sigx4
	shift_l! 4
	load8! &14 	#X13
	add
	add! 216
	load2
	add! 1
	store8! &3 	#X2
	load4! &0 	#AR
	sigx4
	shift_l! 4
	load8! &14 	#X13
	add
	add! 216
	store8! &1 	#AR
	load2! &2 	#X2
	load8! &1 	#AR
	store2
	#
	# CBRANCH
	push! 255
	load2! &2 	#X1
	lt_u
	not
	jump_zero! .L222.l_o74d3c4
	# END CBRANCH
	load2! &1 	#X1
	sigx4
	add! _dist_code
	load1
	and! 0x0ff
	store8! &1 	#AR
.L223.l_o74d3c4:
	load4! &0 	#AR
	sigx4
	shift_l! 4
	load8! &14 	#X13
	add
	add! 9384
	load2
	add! 1
	store8! &2 	#X1
	load4! &0 	#AR
	sigx4
	shift_l! 4
	load8! &14 	#X13
	add
	add! 9384
	store8! &1 	#AR
	load2! &1 	#X1
	load8! &1 	#AR
	store2
	#
	load8! &13 	#X13
	add! 13980
	load4
	#
	store8! &1 	#AR
	load8! &13 	#X13
	add! 13976
	load4
	#
	add! -1
	load8! &1 	#AR
	xor
	and! 0xffffffff
	add! -1
	shift_ru! 63
	and! 0xff
	store8! &5 	#X4
	load8! &13 	#X13
	add! 180
	load4
	#
	store8! &2 	#X1
	load8! &13 	#X13
	add! 160
	load4
	#
	store8! &4 	#X3
	load8! &3 	#X3
	load8! &2 	#X1
	sub
	neg
	store8! &13 	#X12
	load4! &12 	#X12
	load8! &14 	#X13
	add! 180
	store4
	#
	load8! &13 	#X13
	add! 192
	load4
	#
	store8! &1 	#AR
	load8! &13 	#X13
	add! 96
	load8
	#
	store8! &6 	#X5
	load8! &13 	#X13
	add! 144
	load4
	#
	store8! &9 	#X8
	load8! &13 	#X13
	add! 140
	load4
	#
	store8! &8 	#X7
	load8! &13 	#X13
	add! 172
	load4
	#
	store8! &12 	#X11
	# CBRANCH
	load4! &0 	#AR
	load4! &4 	#X3
	lt_u
	not
	jump_zero! .L224.l_o74d3c4
	# END CBRANCH
	# CBRANCH
	push! 2
	load4! &13 	#X12
	lt_u
	not
	jump_zero! .L261.l_o74d3c4
	# END CBRANCH
.L224.l_o74d3c4:
	load8! &11 	#X11
	load8! &4 	#X3
	add
	store8! &1 	#AR
	load4! &0 	#AR
	load8! &14 	#X13
	add! 172
	store4
	#
	push! 0
	load8! &14 	#X13
	add! 160
	store4
	#
	load4! &0 	#AR
	load8! &6 	#X5
	add
	load1
	and! 0x0ff
	store8! &2 	#X1
	load4! &1 	#X1
	load8! &14 	#X13
	add! 128
	store4
	#
	load4! &8 	#X8
	pow2
	load8! &2 	#X1
	mult
	store8! &2 	#X1
	load8! &0 	#AR
	add! 1
	and! 0xffffffff
	load8! &6 	#X5
	add
	load1
	and! 0x0ff
	load8! &2 	#X1
	xor
	load8! &8 	#X7
	and
	load8! &14 	#X13
	add! 128
	store4
	#
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_zero! .L227.l_o74d3c4
	# END CBRANCH
.L264.l_o74d3c4:
	load4! &0 	#AR
	store8! &2 	#X1
	load8! &13 	#X13
	add! 152
	load8
	#
	store8! &1 	#AR
	load8! &1 	#X1
	load8! &1 	#AR
	sub
	store8! &2 	#X1
	# CBRANCH
	load8! &0 	#AR
	add! -9223372036854775808
	push! 0
	add! -9223372036854775808
	lt_u
	not
	jump_zero! .L247.l_o74d3c4
	# END CBRANCH
	load8! &13 	#X13
	add! 96
	load8
	#
	store8! &3 	#X2
	load8! &0 	#AR
	and! 0xffffffff
	load8! &3 	#X2
	add
	store8! &1 	#AR
.L228.l_o74d3c4:
	push! 0
	load8! &2 	#X1
	load8! &2 	#AR
	load8! &16 	#X13
	call! _tr_flush_block
	set_sp! (+ &0 32)
	

	load8! &13 	#X13
	add! 172
	load4
	#
	and! 0x0ffffffff
	load8! &14 	#X13
	add! 152
	store8
	#
	load8! &13 	#X13
	load8
	#
	store8! &4 	#X3
	load8! &3 	#X3
	add! 56
	load8
	#
	store8! &5 	#X4
	load8! &4 	#X4
	call! _tr_flush_bits
	set_sp! (+ &0 8)
	

	load8! &4 	#X4
	add! 40
	load8
	#
	store8! &3 	#X2
	load8! &3 	#X3
	add! 32
	load4
	#
	store8! &1 	#AR
	# CBRANCH
	load4! &0 	#AR
	load4! &3 	#X2
	lt_u
	jump_zero! .L229.l_o74d3c4
	# END CBRANCH
	load4! &0 	#AR
	store8! &3 	#X2
.L229.l_o74d3c4:
	# CBRANCH EQ0
	load4! &2 	#X2
	jump_zero! .L231.l_o74d3c4
	# END CBRANCH
	load4! &2 	#X2
	store8! &6 	#X5
	load8! &4 	#X4
	add! 32
	load8
	#
	store8! &2 	#X1
	load8! &3 	#X3
	add! 24
	load8
	#
	store8! &1 	#AR
	load8! &5 	#X5
	load8! &2 	#X1
	load8! &2 	#AR
	call! memcpy
	store8! &3

	set_sp! &2
	load8! &3 	#X3
	add! 24
	load8
	#
	load8! &6 	#X5
	add
	load8! &4 	#X3
	add! 24
	store8
	#
	load8! &4 	#X4
	add! 32
	load8
	#
	load8! &6 	#X5
	add
	load8! &5 	#X4
	add! 32
	store8
	#
	load8! &3 	#X3
	add! 40
	load8
	#
	load8! &6 	#X5
	add
	load8! &4 	#X3
	add! 40
	store8
	#
	load8! &3 	#X3
	add! 32
	load4
	#
	store8! &2 	#X1
	load8! &2 	#X2
	load8! &2 	#X1
	sub
	neg
	load8! &4 	#X3
	add! 32
	store4
	#
	load8! &4 	#X4
	add! 40
	load8
	#
	load8! &6 	#X5
	sub
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &5 	#X4
	add! 40
	store8
	#
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_not_zero! .L231.l_o74d3c4
	# END CBRANCH
	load8! &4 	#X4
	add! 16
	load8
	#
	load8! &5 	#X4
	add! 32
	store8
	#
.L231.l_o74d3c4:
	load8! &13 	#X13
	load8
	#
	add! 32
	load4
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_not_zero! .L234.l_o74d3c4
	# END CBRANCH
.L233.l_o74d3c4:
	push! 0
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &19
	jump! .L262.l_o74d3c4
.L260.l_o74d3c4:
	load8! &13 	#X13
	call! fill_window.s_o74d3c4
	set_sp! (+ &0 8)
	

	load8! &13 	#X13
	add! 180
	load4
	#
	store8! &1 	#AR
	# CBRANCH
	push! 261
	load4! &1 	#AR
	lt_u
	not
	jump_zero! .L213.l_o74d3c4
	# END CBRANCH
	# CBRANCH EQ0
	load4! &19
	jump_zero! .L233.l_o74d3c4
	# END CBRANCH
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_zero! .L216.l_o74d3c4
	# END CBRANCH
	load8! &13 	#X13
	add! 172
	load4
	#
	store8! &3 	#X2
	# CBRANCH
	push! 2
	load4! &1 	#AR
	lt_u
	not
	jump_zero! .L217.l_o74d3c4
	# END CBRANCH
	load8! &13 	#X13
	add! 160
	load4
	#
	store8! &1 	#AR
	load8! &13 	#X13
	add! 13984
	load8
	#
	store8! &6 	#X5
	load8! &13 	#X13
	add! 13980
	load4
	#
	store8! &4 	#X3
	load4! &3 	#X3
	store8! &2 	#X1
	load8! &1 	#X1
	load8! &2 	#X1
	add
	load8! &6 	#X5
	add
	store8! &5 	#X4
	load8! &13 	#X13
	add! 13968
	load8
	#
	store8! &6 	#X5
	load8! &3 	#X3
	add! 1
	store8! &4 	#X3
	load8! &5 	#X5
	load8! &2 	#X1
	add
	store8! &2 	#X1
	# CBRANCH
	push! 2
	load4! &1 	#AR
	lt_u
	not
	jump_zero! .L263.l_o74d3c4
	# END CBRANCH
.L221.l_o74d3c4:
	load8! &13 	#X13
	add! 96
	load8
	#
	store8! &6 	#X5
	load4! &2 	#X2
	load8! &6 	#X5
	add
	load1
	store8! &1 	#AR
	push! 0
	load8! &5 	#X4
	store2
	#
	load4! &3 	#X3
	load8! &14 	#X13
	add! 13980
	store4
	#
	load1! &0 	#AR
	load8! &2 	#X1
	store1
	#
	load1! &0 	#AR
	store8! &1 	#AR
	load4! &0 	#AR
	sigx4
	shift_l! 4
	load8! &14 	#X13
	add
	add! 216
	load2
	add! 1
	store8! &2 	#X1
	load4! &0 	#AR
	sigx4
	shift_l! 4
	load8! &14 	#X13
	add
	add! 216
	store8! &1 	#AR
	load2! &1 	#X1
	load8! &1 	#AR
	store2
	#
	load8! &13 	#X13
	add! 13980
	load4
	#
	store8! &1 	#AR
	load8! &13 	#X13
	add! 13976
	load4
	#
	add! -1
	load8! &1 	#AR
	xor
	and! 0xffffffff
	add! -1
	shift_ru! 63
	and! 0xff
	store8! &5 	#X4
	load8! &13 	#X13
	add! 180
	load4
	#
	add! -1
	store8! &13 	#X12
	load4! &12 	#X12
	load8! &14 	#X13
	add! 180
	store4
	#
	load8! &13 	#X13
	add! 172
	load4
	#
	add! 1
	store8! &1 	#AR
	load4! &0 	#AR
	load8! &14 	#X13
	add! 172
	store4
	#
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_zero! .L227.l_o74d3c4
	# END CBRANCH
	jump! .L264.l_o74d3c4
.L261.l_o74d3c4:
	load8! &3 	#X3
	add! -1
	store8! &2 	#X1
	load4! &1 	#X1
	load8! &14 	#X13
	add! 160
	store4
	#
	load8! &13 	#X13
	add! 120
	load8
	#
	store8! &16 	#X15
	load8! &13 	#X13
	add! 112
	load8
	#
	store8! &15 	#X14
	load8! &13 	#X13
	add! 88
	load4
	#
	store8! &11 	#X10
	load8! &13 	#X13
	add! 128
	load4
	#
	store8! &3 	#X2
	load8! &11 	#X11
	add! 1
	store8! &1 	#AR
	load4! &3 	#X3
	store4! &17
.L225.l_o74d3c4:
	load4! &0 	#AR
	load8! &14 	#X13
	add! 172
	store4
	#
	load4! &8 	#X8
	pow2
	load8! &3 	#X2
	mult
	store8! &3 	#X2
	load8! &0 	#AR
	add! 2
	and! 0xffffffff
	load8! &6 	#X5
	add
	load1
	and! 0x0ff
	load8! &3 	#X2
	xor
	load8! &8 	#X7
	and
	store8! &3 	#X2
	load4! &2 	#X2
	load8! &14 	#X13
	add! 128
	store4
	#
	load4! &2 	#X2
	store8! &4 	#X3
	load8! &3 	#X3
	load8! &4 	#X3
	add
	load8! &16 	#X15
	add
	store8! &4 	#X3
	load8! &0 	#AR
	load8! &11 	#X10
	and
	and! 0xffffffff
	store8! &7 	#X6
	load8! &6 	#X6
	load8! &7 	#X6
	add
	load8! &15 	#X14
	add
	store8! &7 	#X6
	load8! &3 	#X3
	load2
	#
	load8! &7 	#X6
	store2
	#
	load2! &0 	#AR
	load8! &4 	#X3
	store2
	#
	load8! &1 	#X1
	add! -1
	store8! &2 	#X1
	load4! &1 	#X1
	load8! &14 	#X13
	add! 160
	store4
	#
	load8! &0 	#AR
	add! 1
	store8! &1 	#AR
	# CBRANCH EQ0
	load4! &1 	#X1
	jump_not_zero! .L225.l_o74d3c4
	# END CBRANCH
	load4! &16
	load8! &12 	#X11
	add
	store8! &1 	#AR
	load4! &0 	#AR
	load8! &14 	#X13
	add! 172
	store4
	#
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_zero! .L227.l_o74d3c4
	# END CBRANCH
	jump! .L264.l_o74d3c4
.L222.l_o74d3c4:
	load2! &1 	#X1
	shift_ru! 7
	and! 0xffff
	add! 256
	sigx4
	add! _dist_code
	load1
	and! 0x0ff
	store8! &1 	#AR
	jump! .L223.l_o74d3c4
.L219.l_o74d3c4:
	load8! &1 	#X1
	load8! &3 	#X2
	sub
	neg
	store8! &4 	#X3
	load8! &13 	#X13
	add! 80
	load4
	#
	add! -262
	store8! &1 	#AR
	# CBRANCH
	load4! &0 	#AR
	load4! &4 	#X3
	lt_u
	jump_zero! .L220.l_o74d3c4
	# END CBRANCH
	load8! &13 	#X13
	add! 160
	load4
	#
	store8! &1 	#AR
	jump! .L218.l_o74d3c4
.L220.l_o74d3c4:
	load4! &1 	#X1
	load8! &14 	#X13
	call! longest_match.s_o74d3c4
	store8! &2

	store8! &0 #set_sp! &1
	load4! &0 	#AR
	load8! &14 	#X13
	add! 160
	store4
	#
	load8! &13 	#X13
	add! 172
	load4
	#
	store8! &3 	#X2
	jump! .L218.l_o74d3c4
.L247.l_o74d3c4:
	push! 0
	store8! &1 	#AR
	jump! .L228.l_o74d3c4
.L216.l_o74d3c4:
	load8! &13 	#X13
	add! 172
	load4
	#
	store8! &1 	#AR
	load4! &0 	#AR
	store8! &2 	#X1
	# CBRANCH
	push! 2
	load4! &1 	#AR
	lt_u
	not
	jump_zero! .L265.l_o74d3c4
	# END CBRANCH
	load4! &1 	#X1
	load8! &14 	#X13
	add! 14012
	store4
	#
	# CBRANCH EQ
	load4! &19
	push! 4
	xor
	jump_zero! .L266.l_o74d3c4
	# END CBRANCH
.L236.l_o74d3c4:
	load8! &13 	#X13
	add! 13980
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L250.l_o74d3c4
	# END CBRANCH
	load4! &0 	#AR
	store8! &2 	#X1
	load8! &13 	#X13
	add! 152
	load8
	#
	store8! &1 	#AR
	load8! &1 	#X1
	load8! &1 	#AR
	sub
	store8! &2 	#X1
	# CBRANCH
	load8! &0 	#AR
	add! -9223372036854775808
	push! 0
	add! -9223372036854775808
	lt_u
	not
	jump_zero! .L251.l_o74d3c4
	# END CBRANCH
	load8! &13 	#X13
	add! 96
	load8
	#
	store8! &3 	#X2
	load8! &0 	#AR
	and! 0xffffffff
	load8! &3 	#X2
	add
	store8! &1 	#AR
.L242.l_o74d3c4:
	push! 0
	load8! &2 	#X1
	load8! &2 	#AR
	load8! &16 	#X13
	call! _tr_flush_block
	set_sp! (+ &0 32)
	

	load8! &13 	#X13
	add! 172
	load4
	#
	and! 0x0ffffffff
	load8! &14 	#X13
	add! 152
	store8
	#
	load8! &13 	#X13
	load8
	#
	store8! &5 	#X4
	load8! &4 	#X4
	add! 56
	load8
	#
	store8! &4 	#X3
	load8! &3 	#X3
	call! _tr_flush_bits
	set_sp! (+ &0 8)
	

	load8! &3 	#X3
	add! 40
	load8
	#
	store8! &3 	#X2
	load8! &4 	#X4
	add! 32
	load4
	#
	store8! &1 	#AR
	# CBRANCH
	load4! &0 	#AR
	load4! &3 	#X2
	lt_u
	jump_zero! .L243.l_o74d3c4
	# END CBRANCH
	load4! &0 	#AR
	store8! &3 	#X2
.L243.l_o74d3c4:
	# CBRANCH EQ0
	load4! &2 	#X2
	jump_zero! .L245.l_o74d3c4
	# END CBRANCH
	load4! &2 	#X2
	store8! &6 	#X5
	load8! &3 	#X3
	add! 32
	load8
	#
	store8! &2 	#X1
	load8! &4 	#X4
	add! 24
	load8
	#
	store8! &1 	#AR
	load8! &5 	#X5
	load8! &2 	#X1
	load8! &2 	#AR
	call! memcpy
	store8! &3

	set_sp! &2
	load8! &4 	#X4
	add! 24
	load8
	#
	load8! &6 	#X5
	add
	load8! &5 	#X4
	add! 24
	store8
	#
	load8! &3 	#X3
	add! 32
	load8
	#
	load8! &6 	#X5
	add
	load8! &4 	#X3
	add! 32
	store8
	#
	load8! &4 	#X4
	add! 40
	load8
	#
	load8! &6 	#X5
	add
	load8! &5 	#X4
	add! 40
	store8
	#
	load8! &4 	#X4
	add! 32
	load4
	#
	store8! &2 	#X1
	load8! &2 	#X2
	load8! &2 	#X1
	sub
	neg
	load8! &5 	#X4
	add! 32
	store4
	#
	load8! &3 	#X3
	add! 40
	load8
	#
	load8! &6 	#X5
	sub
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &4 	#X3
	add! 40
	store8
	#
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_not_zero! .L245.l_o74d3c4
	# END CBRANCH
	load8! &3 	#X3
	add! 16
	load8
	#
	load8! &4 	#X3
	add! 32
	store8
	#
.L245.l_o74d3c4:
	load8! &13 	#X13
	load8
	#
	add! 32
	load4
	and! 0x0ffffffff
	neg
	shift_ru! 63
	and! 0xff
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &19
	jump! .L262.l_o74d3c4
.L265.l_o74d3c4:
	push! 2
	store8! &2 	#X1
	load4! &1 	#X1
	load8! &14 	#X13
	add! 14012
	store4
	#
	# CBRANCH
	load4! &19
	push! 4
	xor
	push! 1
	lt_u
	jump_zero! .L236.l_o74d3c4
	# END CBRANCH
.L266.l_o74d3c4:
	load4! &0 	#AR
	store8! &2 	#X1
	load8! &13 	#X13
	add! 152
	load8
	#
	store8! &1 	#AR
	load8! &1 	#X1
	load8! &1 	#AR
	sub
	store8! &2 	#X1
	# CBRANCH
	load8! &0 	#AR
	add! -9223372036854775808
	push! 0
	add! -9223372036854775808
	lt_u
	not
	jump_zero! .L248.l_o74d3c4
	# END CBRANCH
	load8! &13 	#X13
	add! 96
	load8
	#
	store8! &3 	#X2
	load8! &0 	#AR
	and! 0xffffffff
	load8! &3 	#X2
	add
	store8! &1 	#AR
.L237.l_o74d3c4:
	push! 1
	load8! &2 	#X1
	load8! &2 	#AR
	load8! &16 	#X13
	call! _tr_flush_block
	set_sp! (+ &0 32)
	

	load8! &13 	#X13
	add! 172
	load4
	#
	and! 0x0ffffffff
	load8! &14 	#X13
	add! 152
	store8
	#
	load8! &13 	#X13
	load8
	#
	store8! &3 	#X2
	load8! &2 	#X2
	add! 56
	load8
	#
	store8! &5 	#X4
	load8! &4 	#X4
	call! _tr_flush_bits
	set_sp! (+ &0 8)
	

	load8! &4 	#X4
	add! 40
	load8
	#
	store8! &4 	#X3
	load8! &2 	#X2
	add! 32
	load4
	#
	store8! &1 	#AR
	# CBRANCH
	load4! &0 	#AR
	load4! &4 	#X3
	lt_u
	jump_zero! .L238.l_o74d3c4
	# END CBRANCH
	load4! &0 	#AR
	store8! &4 	#X3
.L238.l_o74d3c4:
	# CBRANCH EQ0
	load4! &3 	#X3
	jump_zero! .L240.l_o74d3c4
	# END CBRANCH
	load4! &3 	#X3
	store8! &6 	#X5
	load8! &4 	#X4
	add! 32
	load8
	#
	store8! &2 	#X1
	load8! &2 	#X2
	add! 24
	load8
	#
	store8! &1 	#AR
	load8! &5 	#X5
	load8! &2 	#X1
	load8! &2 	#AR
	call! memcpy
	store8! &3

	set_sp! &2
	load8! &2 	#X2
	add! 24
	load8
	#
	load8! &6 	#X5
	add
	load8! &3 	#X2
	add! 24
	store8
	#
	load8! &4 	#X4
	add! 32
	load8
	#
	load8! &6 	#X5
	add
	load8! &5 	#X4
	add! 32
	store8
	#
	load8! &2 	#X2
	add! 40
	load8
	#
	load8! &6 	#X5
	add
	load8! &3 	#X2
	add! 40
	store8
	#
	load8! &2 	#X2
	add! 32
	load4
	#
	store8! &2 	#X1
	load8! &3 	#X3
	load8! &2 	#X1
	sub
	neg
	load8! &3 	#X2
	add! 32
	store4
	#
	load8! &4 	#X4
	add! 40
	load8
	#
	load8! &6 	#X5
	sub
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &5 	#X4
	add! 40
	store8
	#
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_not_zero! .L240.l_o74d3c4
	# END CBRANCH
	load8! &4 	#X4
	add! 16
	load8
	#
	load8! &5 	#X4
	add! 32
	store8
	#
.L240.l_o74d3c4:
	load8! &13 	#X13
	load8
	#
	add! 32
	load4
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L249.l_o74d3c4
	# END CBRANCH
	push! 3
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &19
	jump! .L262.l_o74d3c4
.L250.l_o74d3c4:
	push! 1
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &19
	jump! .L262.l_o74d3c4
.L248.l_o74d3c4:
	push! 0
	store8! &1 	#AR
	jump! .L237.l_o74d3c4
.L251.l_o74d3c4:
	push! 0
	store8! &1 	#AR
	jump! .L242.l_o74d3c4
.L249.l_o74d3c4:
	push! 2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &19
.L262.l_o74d3c4:

	# epilogue
	set_sp! &17
	return

# FUNCTION ENDS:deflate_fast

	#peephole pop(deadreg)+ind push offset
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move+push+sub
	#peephole 1
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole pop+push+commut(di)
	#peephole zero_extend
	#peephole pop+cmp
	#peephole pop(deadreg)+ind push offset
	#peephole pop+cmp
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move+push+sub
	#peephole 1
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole pop+push+commut(di)
	#peephole zero_extend
	#peephole 1
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole 1
	#peephole push+add+pop+push+ind pop
	#peephole zero_extend
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole pop(deadreg)+pushdi
	#peephole move_dead
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole pop(deadreg)+pushdi
	#peephole move_dead
	#peephole pop(deadreg)+ind push offset
	#peephole pop+cmp
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move+push+sub
	#peephole 1
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole 1
	#peephole push+add+pop+push+ind pop
	#peephole zero_extend
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole pop+cmp
	#peephole pop(deadreg)+ind push offset
	#peephole pop+cmp
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move+push+sub
	#peephole 1
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole pop+push+commut(di)
	#peephole zero_extend
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole pop+push(deadreg)+shiftl
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+pushdi
	#peephole pop+push+commut(di)
	#peephole 1
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole move
	#peephole move+push(pushable)
	#peephole 1
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+pushdi
	#peephole move_dead
	#peephole move_dead
	#peephole move
	#peephole move+push+sub
	#peephole move_dead
	#peephole move_dead
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move_dead
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move_dead
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole 1
	#peephole push+add+pop+push+ind pop
	#peephole move_dead
	#peephole zero_extend
	#peephole 1
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+pushdi
	#peephole pop+push+sub
	#peephole 1
	#peephole move
	#peephole move+push+sub
	#peephole move_dead
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole pop+push(deadreg)+shiftl
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+pushdi
	#peephole pop+push+commut(di)
	#peephole 1
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole zero_extend
	#peephole 1
	#peephole move
	#peephole move+push(pushable)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole popdi+cmp rev
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+pushdi
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+push(deadreg)+sign_extend
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+push(deadreg)+sign_extend
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+push(deadreg)+sign_extend
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+pushdi
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole zero_extend
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole redundant blockage insn
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push

# FUNCTION BEGINS:deflate_slow
deflate_slow.s_o74d3c4:
	# prologue (13 GPRs)

	set_sp! &-13

	load8! &14
	store8! &3 	#X2
	load4! &15
	store8! &7 	#X6
	load8! &2 	#X2
	add! 180
	load4
	#
	store8! &4 	#X3
.L268.l_o74d3c4:
	# CBRANCH
	push! 261
	load4! &4 	#X3
	lt_u
	jump_zero! .L337.l_o74d3c4
	# END CBRANCH
.L269.l_o74d3c4:
	load8! &2 	#X2
	add! 172
	load4
	#
	store8! &4 	#X3
	load8! &2 	#X2
	add! 160
	load4
	#
	store8! &2 	#X1
	load8! &2 	#X2
	add! 176
	load4
	#
	store8! &1 	#AR
.L273.l_o74d3c4:
	load8! &2 	#X2
	add! 128
	load4
	#
	store8! &6 	#X5
	load8! &2 	#X2
	add! 144
	load4
	#
	and! 0x0ffffffff
	pow2
	load8! &6 	#X5
	mult
	store8! &5 	#X4
	load8! &2 	#X2
	add! 96
	load8
	#
	store8! &8 	#X7
	load8! &3 	#X3
	add! 2
	and! 0xffffffff
	load8! &8 	#X7
	add
	load1
	and! 0x0ff
	load8! &5 	#X4
	xor
	store8! &5 	#X4
	load8! &2 	#X2
	add! 140
	load4
	#
	load8! &5 	#X4
	and
	store8! &5 	#X4
	load4! &4 	#X4
	load8! &3 	#X2
	add! 128
	store4
	#
	load8! &2 	#X2
	add! 120
	load8
	#
	store8! &6 	#X5
	load4! &4 	#X4
	store8! &5 	#X4
	load8! &4 	#X4
	load8! &5 	#X4
	add
	load8! &6 	#X5
	add
	store8! &5 	#X4
	load8! &2 	#X2
	add! 112
	load8
	#
	store8! &8 	#X7
	load8! &2 	#X2
	add! 88
	load4
	#
	load8! &4 	#X3
	and
	and! 0xffffffff
	store8! &6 	#X5
	load8! &5 	#X5
	load8! &6 	#X5
	add
	load8! &8 	#X7
	add
	store8! &8 	#X7
	load8! &4 	#X4
	load2
	#
	store8! &6 	#X5
	load2! &5 	#X5
	load8! &8 	#X7
	store2
	#
	load2! &5 	#X5
	store8! &6 	#X5
	load2! &3 	#X3
	load8! &5 	#X4
	store2
	#
	load4! &1 	#X1
	load8! &3 	#X2
	add! 184
	store4
	#
	load4! &0 	#AR
	load8! &3 	#X2
	add! 164
	store4
	#
	push! 2
	load8! &3 	#X2
	add! 160
	store4
	#
	# CBRANCH EQ0
	load4! &5 	#X5
	jump_zero! .L311.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	add! 192
	load4
	#
	store8! &1 	#AR
	# CBRANCH
	load4! &1 	#X1
	load4! &1 	#AR
	lt_u
	jump_zero! .L312.l_o74d3c4
	# END CBRANCH
	load8! &5 	#X5
	load8! &4 	#X3
	sub
	neg
	store8! &5 	#X4
	load8! &2 	#X2
	add! 80
	load4
	#
	add! -262
	store8! &1 	#AR
	# CBRANCH
	load4! &0 	#AR
	load4! &5 	#X4
	lt_u
	jump_zero! .L338.l_o74d3c4
	# END CBRANCH
	push! 2
	store8! &1 	#AR
.L274.l_o74d3c4:
	# CBRANCH
	push! 2
	load4! &2 	#X1
	lt_u
	jump_zero! .L278.l_o74d3c4
	# END CBRANCH
	# CBRANCH
	load4! &1 	#X1
	load4! &1 	#AR
	lt_u
	jump_zero! .L277.l_o74d3c4
	# END CBRANCH
.L278.l_o74d3c4:
	load8! &2 	#X2
	add! 168
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L292.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	add! 96
	load8
	#
	store8! &2 	#X1
	load8! &3 	#X3
	add! -1
	and! 0xffffffff
	load8! &2 	#X1
	add
	load1
	store8! &2 	#X1
	load8! &2 	#X2
	add! 13984
	load8
	#
	store8! &6 	#X5
	load8! &2 	#X2
	add! 13980
	load4
	#
	store8! &4 	#X3
	load4! &3 	#X3
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	load8! &6 	#X5
	add
	store8! &5 	#X4
	push! 0
	load8! &5 	#X4
	store2
	#
	load8! &2 	#X2
	add! 13968
	load8
	#
	store8! &5 	#X4
	load8! &3 	#X3
	add! 1
	load8! &3 	#X2
	add! 13980
	store4
	#
	load1! &1 	#X1
	load8! &5 	#X4
	load8! &2 	#AR
	add
	store1
	load1! &1 	#X1
	store8! &1 	#AR
	load4! &0 	#AR
	sigx4
	shift_l! 4
	load8! &3 	#X2
	add
	add! 216
	load2
	add! 1
	store8! &2 	#X1
	load4! &0 	#AR
	sigx4
	shift_l! 4
	load8! &3 	#X2
	add
	add! 216
	store8! &1 	#AR
	load2! &1 	#X1
	load8! &1 	#AR
	store2
	#
	load8! &2 	#X2
	add! 13980
	load4
	#
	store8! &2 	#X1
	load8! &2 	#X2
	add! 13976
	load4
	#
	add! -1
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ
	load4! &2 	#X1
	xor
	jump_zero! .L339.l_o74d3c4
	# END CBRANCH
.L294.l_o74d3c4:
	load8! &2 	#X2
	add! 172
	load4
	#
	add! 1
	load8! &3 	#X2
	add! 172
	store4
	#
	load8! &2 	#X2
	add! 180
	load4
	#
	add! -1
	store8! &4 	#X3
	load4! &3 	#X3
	load8! &3 	#X2
	add! 180
	store4
	#
	load8! &2 	#X2
	load8
	#
	add! 32
	load4
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_not_zero! .L268.l_o74d3c4
	# END CBRANCH
.L291.l_o74d3c4:
	push! 0
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &15
	jump! .L340.l_o74d3c4
.L337.l_o74d3c4:
	load8! &2 	#X2
	call! fill_window.s_o74d3c4
	set_sp! (+ &0 8)
	

	load8! &2 	#X2
	add! 180
	load4
	#
	store8! &5 	#X4
	# CBRANCH
	push! 261
	load4! &5 	#X4
	lt_u
	not
	jump_zero! .L269.l_o74d3c4
	# END CBRANCH
	# CBRANCH EQ0
	load4! &6 	#X6
	jump_zero! .L291.l_o74d3c4
	# END CBRANCH
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_zero! .L272.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	add! 172
	load4
	#
	store8! &4 	#X3
	load8! &2 	#X2
	add! 160
	load4
	#
	store8! &2 	#X1
	load8! &2 	#X2
	add! 176
	load4
	#
	store8! &1 	#AR
	# CBRANCH
	push! 2
	load4! &5 	#X4
	lt_u
	not
	jump_zero! .L273.l_o74d3c4
	# END CBRANCH
	load4! &1 	#X1
	load8! &3 	#X2
	add! 184
	store4
	#
	load4! &0 	#AR
	load8! &3 	#X2
	add! 164
	store4
	#
	push! 2
	load8! &3 	#X2
	add! 160
	store4
	#
	push! 2
	store8! &1 	#AR
	jump! .L274.l_o74d3c4
.L339.l_o74d3c4:
	load8! &2 	#X2
	add! 172
	load4
	#
	store8! &2 	#X1
	load8! &2 	#X2
	add! 152
	load8
	#
	store8! &1 	#AR
	load8! &1 	#X1
	load8! &1 	#AR
	sub
	store8! &2 	#X1
	# CBRANCH
	load8! &0 	#AR
	add! -9223372036854775808
	push! 0
	add! -9223372036854775808
	lt_u
	not
	jump_zero! .L315.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	add! 96
	load8
	#
	store8! &4 	#X3
	load8! &0 	#AR
	and! 0xffffffff
	load8! &4 	#X3
	add
	store8! &1 	#AR
.L295.l_o74d3c4:
	push! 0
	load8! &2 	#X1
	load8! &2 	#AR
	load8! &5 	#X2
	call! _tr_flush_block
	set_sp! (+ &0 32)
	

	load8! &2 	#X2
	add! 172
	load4
	#
	and! 0x0ffffffff
	load8! &3 	#X2
	add! 152
	store8
	#
	load8! &2 	#X2
	load8
	#
	store8! &5 	#X4
	load8! &4 	#X4
	add! 56
	load8
	#
	store8! &6 	#X5
	load8! &5 	#X5
	call! _tr_flush_bits
	set_sp! (+ &0 8)
	

	load8! &5 	#X5
	add! 40
	load8
	#
	store8! &4 	#X3
	load8! &4 	#X4
	add! 32
	load4
	#
	store8! &1 	#AR
	# CBRANCH
	load4! &0 	#AR
	load4! &4 	#X3
	lt_u
	jump_zero! .L296.l_o74d3c4
	# END CBRANCH
	load4! &0 	#AR
	store8! &4 	#X3
.L296.l_o74d3c4:
	# CBRANCH EQ0
	load4! &3 	#X3
	jump_zero! .L294.l_o74d3c4
	# END CBRANCH
	load4! &3 	#X3
	store8! &8 	#X7
	load8! &5 	#X5
	add! 32
	load8
	#
	store8! &2 	#X1
	load8! &4 	#X4
	add! 24
	load8
	#
	store8! &1 	#AR
	load8! &7 	#X7
	load8! &2 	#X1
	load8! &2 	#AR
	call! memcpy
	store8! &3

	set_sp! &2
	load8! &4 	#X4
	add! 24
	load8
	#
	load8! &8 	#X7
	add
	load8! &5 	#X4
	add! 24
	store8
	#
	load8! &5 	#X5
	add! 32
	load8
	#
	load8! &8 	#X7
	add
	load8! &6 	#X5
	add! 32
	store8
	#
	load8! &4 	#X4
	add! 40
	load8
	#
	load8! &8 	#X7
	add
	load8! &5 	#X4
	add! 40
	store8
	#
	load8! &4 	#X4
	add! 32
	load4
	#
	store8! &2 	#X1
	load8! &3 	#X3
	load8! &2 	#X1
	sub
	neg
	load8! &5 	#X4
	add! 32
	store4
	#
	load8! &5 	#X5
	add! 40
	load8
	#
	load8! &8 	#X7
	sub
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &6 	#X5
	add! 40
	store8
	#
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_not_zero! .L294.l_o74d3c4
	# END CBRANCH
	load8! &5 	#X5
	add! 16
	load8
	#
	load8! &6 	#X5
	add! 32
	store8
	#
	load8! &2 	#X2
	add! 172
	load4
	#
	add! 1
	load8! &3 	#X2
	add! 172
	store4
	#
	load8! &2 	#X2
	add! 180
	load4
	#
	add! -1
	store8! &4 	#X3
	load4! &3 	#X3
	load8! &3 	#X2
	add! 180
	store4
	#
	load8! &2 	#X2
	load8
	#
	add! 32
	load4
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_not_zero! .L268.l_o74d3c4
	# END CBRANCH
	jump! .L291.l_o74d3c4
.L275.l_o74d3c4:
	load8! &2 	#X2
	add! 200
	load4
	#
	store8! &5 	#X4
	load8! &2 	#X2
	add! 172
	load4
	#
	store8! &4 	#X3
	load8! &2 	#X2
	add! 184
	load4
	#
	store8! &2 	#X1
	# CBRANCH EQ
	load4! &4 	#X4
	push! 1
	xor
	jump_zero! .L276.l_o74d3c4
	# END CBRANCH
	# CBRANCH
	load4! &0 	#AR
	push! 3
	xor
	push! 1
	lt_u
	jump_zero! .L274.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	add! 176
	load4
	#
	load8! &4 	#X3
	sub
	neg
	store8! &5 	#X4
	# CBRANCH
	push! 4096
	load4! &5 	#X4
	lt_u
	jump_zero! .L274.l_o74d3c4
	# END CBRANCH
.L276.l_o74d3c4:
	push! 2
	load8! &3 	#X2
	add! 160
	store4
	#
	# CBRANCH
	push! 2
	load4! &2 	#X1
	lt_u
	jump_zero! .L278.l_o74d3c4
	# END CBRANCH
.L277.l_o74d3c4:
	load8! &2 	#X2
	add! 180
	load4
	#
	add! -3
	store8! &1 	#AR
	load8! &3 	#X3
	load8! &1 	#AR
	add
	store8! &8 	#X7
	load1! &1 	#X1
	add! -3
	store8! &5 	#X4
	load2! &3 	#X3
	store8! &2 	#X1
	load8! &2 	#X2
	add! 164
	load4
	#
	store8! &1 	#AR
	load8! &1 	#X1
	load8! &1 	#AR
	sub
	store8! &2 	#X1
	load8! &1 	#X1
	add! -1
	store8! &9 	#X8
	load8! &2 	#X2
	add! 13984
	load8
	#
	store8! &10 	#X9
	load8! &2 	#X2
	add! 13980
	load4
	#
	store8! &4 	#X3
	load4! &3 	#X3
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	load8! &10 	#X9
	add
	store8! &6 	#X5
	load2! &8 	#X8
	load8! &6 	#X5
	store2
	#
	load8! &2 	#X2
	add! 13968
	load8
	#
	store8! &6 	#X5
	load8! &3 	#X3
	add! 1
	load8! &3 	#X2
	add! 13980
	store4
	#
	load1! &4 	#X4
	load8! &6 	#X5
	load8! &2 	#AR
	add
	store1
	load8! &1 	#X1
	add! -2
	store8! &2 	#X1
	load1! &4 	#X4
	sigx4
	add! _length_code
	load1
	and! 0x0ff
	add! 257
	store8! &1 	#AR
	load4! &0 	#AR
	sigx4
	shift_l! 4
	load8! &3 	#X2
	add
	add! 216
	load2
	add! 1
	store8! &4 	#X3
	load4! &0 	#AR
	sigx4
	shift_l! 4
	load8! &3 	#X2
	add
	add! 216
	store8! &1 	#AR
	load2! &3 	#X3
	load8! &1 	#AR
	store2
	#
	# CBRANCH
	push! 255
	load2! &2 	#X1
	lt_u
	not
	jump_zero! .L279.l_o74d3c4
	# END CBRANCH
	load2! &1 	#X1
	sigx4
	add! _dist_code
	load1
	and! 0x0ff
	store8! &1 	#AR
	load4! &0 	#AR
	sigx4
	shift_l! 4
	load8! &3 	#X2
	add
	add! 9384
	load2
	add! 1
	store8! &2 	#X1
	load4! &0 	#AR
	sigx4
	shift_l! 4
	load8! &3 	#X2
	add
	add! 9384
	store8! &1 	#AR
	load2! &1 	#X1
	load8! &1 	#AR
	store2
	#
	load8! &2 	#X2
	add! 13980
	load4
	#
	store8! &12 	#X11
	load8! &2 	#X2
	add! 13976
	load4
	#
	add! -1
	store8! &11 	#X10
	load8! &2 	#X2
	add! 180
	load4
	#
	store8! &1 	#AR
	load8! &2 	#X2
	add! 184
	load4
	#
	store8! &9 	#X8
	load8! &0 	#AR
	add! 1
	store8! &2 	#X1
	load8! &8 	#X8
	load8! &2 	#X1
	sub
	neg
	store8! &4 	#X3
	load4! &3 	#X3
	load8! &3 	#X2
	add! 180
	store4
	#
	load8! &8 	#X8
	add! -2
	store8! &2 	#X1
	load4! &1 	#X1
	load8! &3 	#X2
	add! 184
	store4
	#
	load8! &2 	#X2
	add! 172
	load4
	#
	store8! &10 	#X9
	load8! &9 	#X9
	add! 1
	store8! &1 	#AR
.L281.l_o74d3c4:
	load4! &0 	#AR
	load8! &3 	#X2
	add! 172
	store4
	#
	# CBRANCH
	load4! &7 	#X7
	load4! &1 	#AR
	lt_u
	not
	jump_zero! .L282.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	add! 128
	load4
	#
	store8! &6 	#X5
	load8! &2 	#X2
	add! 144
	load4
	#
	and! 0x0ffffffff
	pow2
	load8! &6 	#X5
	mult
	store8! &5 	#X4
	load8! &2 	#X2
	add! 96
	load8
	#
	store8! &13 	#X12
	load8! &0 	#AR
	add! 2
	and! 0xffffffff
	load8! &13 	#X12
	add
	load1
	and! 0x0ff
	load8! &5 	#X4
	xor
	store8! &5 	#X4
	load8! &2 	#X2
	add! 140
	load4
	#
	load8! &5 	#X4
	and
	store8! &5 	#X4
	load4! &4 	#X4
	load8! &3 	#X2
	add! 128
	store4
	#
	load8! &2 	#X2
	add! 120
	load8
	#
	store8! &6 	#X5
	load4! &4 	#X4
	store8! &5 	#X4
	load8! &4 	#X4
	load8! &5 	#X4
	add
	load8! &6 	#X5
	add
	store8! &5 	#X4
	load8! &2 	#X2
	add! 112
	load8
	#
	store8! &13 	#X12
	load8! &2 	#X2
	add! 88
	load4
	#
	load8! &1 	#AR
	and
	and! 0xffffffff
	store8! &6 	#X5
	load8! &5 	#X5
	load8! &6 	#X5
	add
	load8! &13 	#X12
	add
	store8! &6 	#X5
	load8! &4 	#X4
	load2
	#
	load8! &6 	#X5
	store2
	#
	load2! &0 	#AR
	load8! &5 	#X4
	store2
	#
	load8! &1 	#X1
	add! -1
	store8! &2 	#X1
	load4! &1 	#X1
	load8! &3 	#X2
	add! 184
	store4
	#
	load8! &0 	#AR
	add! 1
	store8! &1 	#AR
	# CBRANCH EQ0
	load4! &1 	#X1
	jump_not_zero! .L281.l_o74d3c4
	# END CBRANCH
	load8! &9 	#X9
	load8! &9 	#X8
	add
	store8! &1 	#AR
	push! 0
	load8! &3 	#X2
	add! 168
	store4
	#
	push! 2
	load8! &3 	#X2
	add! 160
	store4
	#
	load8! &0 	#AR
	add! -1
	store8! &1 	#AR
	load4! &0 	#AR
	load8! &3 	#X2
	add! 172
	store4
	#
	# CBRANCH
	load4! &11 	#X11
	load4! &11 	#X10
	xor
	push! 1
	lt_u
	jump_zero! .L268.l_o74d3c4
	# END CBRANCH
.L342.l_o74d3c4:
	load4! &0 	#AR
	store8! &2 	#X1
	load8! &2 	#X2
	add! 152
	load8
	#
	store8! &1 	#AR
	load8! &1 	#X1
	load8! &1 	#AR
	sub
	store8! &2 	#X1
	# CBRANCH
	load8! &0 	#AR
	add! -9223372036854775808
	push! 0
	add! -9223372036854775808
	lt_u
	not
	jump_zero! .L314.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	add! 96
	load8
	#
	store8! &4 	#X3
	load8! &0 	#AR
	and! 0xffffffff
	load8! &4 	#X3
	add
	store8! &1 	#AR
.L286.l_o74d3c4:
	push! 0
	load8! &2 	#X1
	load8! &2 	#AR
	load8! &5 	#X2
	call! _tr_flush_block
	set_sp! (+ &0 32)
	

	load8! &2 	#X2
	add! 172
	load4
	#
	and! 0x0ffffffff
	load8! &3 	#X2
	add! 152
	store8
	#
	load8! &2 	#X2
	load8
	#
	store8! &5 	#X4
	load8! &4 	#X4
	add! 56
	load8
	#
	store8! &6 	#X5
	load8! &5 	#X5
	call! _tr_flush_bits
	set_sp! (+ &0 8)
	

	load8! &5 	#X5
	add! 40
	load8
	#
	store8! &4 	#X3
	load8! &4 	#X4
	add! 32
	load4
	#
	store8! &1 	#AR
	# CBRANCH
	load4! &0 	#AR
	load4! &4 	#X3
	lt_u
	jump_zero! .L287.l_o74d3c4
	# END CBRANCH
	load4! &0 	#AR
	store8! &4 	#X3
.L287.l_o74d3c4:
	# CBRANCH EQ0
	load4! &3 	#X3
	jump_zero! .L289.l_o74d3c4
	# END CBRANCH
	load4! &3 	#X3
	store8! &8 	#X7
	load8! &5 	#X5
	add! 32
	load8
	#
	store8! &2 	#X1
	load8! &4 	#X4
	add! 24
	load8
	#
	store8! &1 	#AR
	load8! &7 	#X7
	load8! &2 	#X1
	load8! &2 	#AR
	call! memcpy
	store8! &3

	set_sp! &2
	load8! &4 	#X4
	add! 24
	load8
	#
	load8! &8 	#X7
	add
	load8! &5 	#X4
	add! 24
	store8
	#
	load8! &5 	#X5
	add! 32
	load8
	#
	load8! &8 	#X7
	add
	load8! &6 	#X5
	add! 32
	store8
	#
	load8! &4 	#X4
	add! 40
	load8
	#
	load8! &8 	#X7
	add
	load8! &5 	#X4
	add! 40
	store8
	#
	load8! &4 	#X4
	add! 32
	load4
	#
	store8! &2 	#X1
	load8! &3 	#X3
	load8! &2 	#X1
	sub
	neg
	load8! &5 	#X4
	add! 32
	store4
	#
	load8! &5 	#X5
	add! 40
	load8
	#
	load8! &8 	#X7
	sub
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &6 	#X5
	add! 40
	store8
	#
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L341.l_o74d3c4
	# END CBRANCH
.L289.l_o74d3c4:
	load8! &2 	#X2
	load8
	#
	add! 32
	load4
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L291.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	add! 180
	load4
	#
	store8! &4 	#X3
	# CBRANCH
	push! 261
	load4! &4 	#X3
	lt_u
	not
	jump_zero! .L269.l_o74d3c4
	# END CBRANCH
	jump! .L337.l_o74d3c4
.L282.l_o74d3c4:
	load8! &1 	#X1
	add! -1
	store8! &2 	#X1
	load4! &1 	#X1
	load8! &3 	#X2
	add! 184
	store4
	#
	load8! &0 	#AR
	add! 1
	store8! &1 	#AR
	# CBRANCH EQ0
	load4! &1 	#X1
	jump_not_zero! .L281.l_o74d3c4
	# END CBRANCH
	load8! &9 	#X9
	load8! &9 	#X8
	add
	store8! &1 	#AR
	push! 0
	load8! &3 	#X2
	add! 168
	store4
	#
	push! 2
	load8! &3 	#X2
	add! 160
	store4
	#
	load8! &0 	#AR
	add! -1
	store8! &1 	#AR
	load4! &0 	#AR
	load8! &3 	#X2
	add! 172
	store4
	#
	# CBRANCH
	load4! &11 	#X11
	load4! &11 	#X10
	xor
	push! 1
	lt_u
	jump_zero! .L268.l_o74d3c4
	# END CBRANCH
	jump! .L342.l_o74d3c4
.L292.l_o74d3c4:
	push! 1
	load8! &3 	#X2
	add! 168
	store4
	#
	load8! &3 	#X3
	add! 1
	load8! &3 	#X2
	add! 172
	store4
	#
	load8! &2 	#X2
	add! 180
	load4
	#
	add! -1
	store8! &4 	#X3
	load4! &3 	#X3
	load8! &3 	#X2
	add! 180
	store4
	#
	# CBRANCH
	push! 261
	load4! &4 	#X3
	lt_u
	not
	jump_zero! .L269.l_o74d3c4
	# END CBRANCH
	jump! .L337.l_o74d3c4
.L312.l_o74d3c4:
	push! 2
	store8! &1 	#AR
	jump! .L274.l_o74d3c4
.L311.l_o74d3c4:
	push! 2
	store8! &1 	#AR
	jump! .L274.l_o74d3c4
.L338.l_o74d3c4:
	load4! &5 	#X5
	load8! &3 	#X2
	call! longest_match.s_o74d3c4
	store8! &2

	store8! &0 #set_sp! &1
	load4! &0 	#AR
	load8! &3 	#X2
	add! 160
	store4
	#
	# CBRANCH
	push! 5
	load4! &1 	#AR
	lt_u
	jump_zero! .L275.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	add! 184
	load4
	#
	store8! &2 	#X1
	load8! &2 	#X2
	add! 172
	load4
	#
	store8! &4 	#X3
	jump! .L274.l_o74d3c4
.L279.l_o74d3c4:
	load2! &1 	#X1
	shift_ru! 7
	and! 0xffff
	add! 256
	sigx4
	add! _dist_code
	load1
	and! 0x0ff
	store8! &1 	#AR
	load4! &0 	#AR
	sigx4
	shift_l! 4
	load8! &3 	#X2
	add
	add! 9384
	load2
	add! 1
	store8! &2 	#X1
	load4! &0 	#AR
	sigx4
	shift_l! 4
	load8! &3 	#X2
	add
	add! 9384
	store8! &1 	#AR
	load2! &1 	#X1
	load8! &1 	#AR
	store2
	#
	load8! &2 	#X2
	add! 13980
	load4
	#
	store8! &12 	#X11
	load8! &2 	#X2
	add! 13976
	load4
	#
	add! -1
	store8! &11 	#X10
	load8! &2 	#X2
	add! 180
	load4
	#
	store8! &1 	#AR
	load8! &2 	#X2
	add! 184
	load4
	#
	store8! &9 	#X8
	load8! &0 	#AR
	add! 1
	store8! &2 	#X1
	load8! &8 	#X8
	load8! &2 	#X1
	sub
	neg
	store8! &4 	#X3
	load4! &3 	#X3
	load8! &3 	#X2
	add! 180
	store4
	#
	load8! &8 	#X8
	add! -2
	store8! &2 	#X1
	load4! &1 	#X1
	load8! &3 	#X2
	add! 184
	store4
	#
	load8! &2 	#X2
	add! 172
	load4
	#
	store8! &10 	#X9
	load8! &9 	#X9
	add! 1
	store8! &1 	#AR
	jump! .L281.l_o74d3c4
.L315.l_o74d3c4:
	push! 0
	store8! &1 	#AR
	jump! .L295.l_o74d3c4
.L314.l_o74d3c4:
	push! 0
	store8! &1 	#AR
	jump! .L286.l_o74d3c4
.L341.l_o74d3c4:
	load8! &5 	#X5
	add! 16
	load8
	#
	load8! &6 	#X5
	add! 32
	store8
	#
	jump! .L289.l_o74d3c4
.L272.l_o74d3c4:
	load8! &2 	#X2
	add! 168
	load4
	#
	store8! &2 	#X1
	load8! &2 	#X2
	add! 172
	load4
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load4! &1 	#X1
	jump_zero! .L298.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	add! 96
	load8
	#
	store8! &2 	#X1
	load8! &0 	#AR
	add! -1
	and! 0xffffffff
	load8! &2 	#X1
	add
	load1
	store8! &2 	#X1
	load8! &2 	#X2
	add! 13984
	load8
	#
	store8! &6 	#X5
	load8! &2 	#X2
	add! 13980
	load4
	#
	store8! &4 	#X3
	load4! &3 	#X3
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	load8! &6 	#X5
	add
	store8! &5 	#X4
	push! 0
	load8! &5 	#X4
	store2
	#
	load8! &2 	#X2
	add! 13968
	load8
	#
	store8! &5 	#X4
	load8! &3 	#X3
	add! 1
	load8! &3 	#X2
	add! 13980
	store4
	#
	load1! &1 	#X1
	load8! &5 	#X4
	load8! &2 	#AR
	add
	store1
	load1! &1 	#X1
	store8! &1 	#AR
	load4! &0 	#AR
	sigx4
	shift_l! 4
	load8! &3 	#X2
	add
	add! 216
	load2
	add! 1
	store8! &2 	#X1
	load4! &0 	#AR
	sigx4
	shift_l! 4
	load8! &3 	#X2
	add
	add! 216
	store8! &1 	#AR
	load2! &1 	#X1
	load8! &1 	#AR
	store2
	#
	push! 0
	load8! &3 	#X2
	add! 168
	store4
	#
	load8! &2 	#X2
	add! 172
	load4
	#
	store8! &1 	#AR
.L298.l_o74d3c4:
	load4! &0 	#AR
	store8! &2 	#X1
	# CBRANCH
	push! 2
	load4! &1 	#AR
	lt_u
	not
	jump_zero! .L343.l_o74d3c4
	# END CBRANCH
	load4! &1 	#X1
	load8! &3 	#X2
	add! 14012
	store4
	#
	# CBRANCH EQ
	load4! &6 	#X6
	push! 4
	xor
	jump_zero! .L344.l_o74d3c4
	# END CBRANCH
.L300.l_o74d3c4:
	load8! &2 	#X2
	add! 13980
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L318.l_o74d3c4
	# END CBRANCH
	load4! &0 	#AR
	store8! &2 	#X1
	load8! &2 	#X2
	add! 152
	load8
	#
	store8! &1 	#AR
	load8! &1 	#X1
	load8! &1 	#AR
	sub
	store8! &2 	#X1
	# CBRANCH
	load8! &0 	#AR
	add! -9223372036854775808
	push! 0
	add! -9223372036854775808
	lt_u
	not
	jump_zero! .L319.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	add! 96
	load8
	#
	store8! &4 	#X3
	load8! &0 	#AR
	and! 0xffffffff
	load8! &4 	#X3
	add
	store8! &1 	#AR
.L306.l_o74d3c4:
	push! 0
	load8! &2 	#X1
	load8! &2 	#AR
	load8! &5 	#X2
	call! _tr_flush_block
	set_sp! (+ &0 32)
	

	load8! &2 	#X2
	add! 172
	load4
	#
	and! 0x0ffffffff
	load8! &3 	#X2
	add! 152
	store8
	#
	load8! &2 	#X2
	load8
	#
	store8! &5 	#X4
	load8! &4 	#X4
	add! 56
	load8
	#
	store8! &4 	#X3
	load8! &3 	#X3
	call! _tr_flush_bits
	set_sp! (+ &0 8)
	

	load8! &3 	#X3
	add! 40
	load8
	#
	store8! &6 	#X5
	load8! &4 	#X4
	add! 32
	load4
	#
	store8! &1 	#AR
	# CBRANCH
	load4! &0 	#AR
	load4! &6 	#X5
	lt_u
	jump_zero! .L307.l_o74d3c4
	# END CBRANCH
	load4! &0 	#AR
	store8! &6 	#X5
.L307.l_o74d3c4:
	# CBRANCH EQ0
	load4! &5 	#X5
	jump_zero! .L309.l_o74d3c4
	# END CBRANCH
	load4! &5 	#X5
	store8! &7 	#X6
	load8! &3 	#X3
	add! 32
	load8
	#
	store8! &2 	#X1
	load8! &4 	#X4
	add! 24
	load8
	#
	store8! &1 	#AR
	load8! &6 	#X6
	load8! &2 	#X1
	load8! &2 	#AR
	call! memcpy
	store8! &3

	set_sp! &2
	load8! &4 	#X4
	add! 24
	load8
	#
	load8! &7 	#X6
	add
	load8! &5 	#X4
	add! 24
	store8
	#
	load8! &3 	#X3
	add! 32
	load8
	#
	load8! &7 	#X6
	add
	load8! &4 	#X3
	add! 32
	store8
	#
	load8! &4 	#X4
	add! 40
	load8
	#
	load8! &7 	#X6
	add
	load8! &5 	#X4
	add! 40
	store8
	#
	load8! &4 	#X4
	add! 32
	load4
	#
	store8! &2 	#X1
	load8! &5 	#X5
	load8! &2 	#X1
	sub
	neg
	load8! &5 	#X4
	add! 32
	store4
	#
	load8! &3 	#X3
	add! 40
	load8
	#
	load8! &7 	#X6
	sub
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &4 	#X3
	add! 40
	store8
	#
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_not_zero! .L309.l_o74d3c4
	# END CBRANCH
	load8! &3 	#X3
	add! 16
	load8
	#
	load8! &4 	#X3
	add! 32
	store8
	#
.L309.l_o74d3c4:
	load8! &2 	#X2
	load8
	#
	add! 32
	load4
	and! 0x0ffffffff
	neg
	shift_ru! 63
	and! 0xff
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &15
	jump! .L340.l_o74d3c4
.L343.l_o74d3c4:
	push! 2
	store8! &2 	#X1
	load4! &1 	#X1
	load8! &3 	#X2
	add! 14012
	store4
	#
	# CBRANCH
	load4! &6 	#X6
	push! 4
	xor
	push! 1
	lt_u
	jump_zero! .L300.l_o74d3c4
	# END CBRANCH
.L344.l_o74d3c4:
	load4! &0 	#AR
	store8! &2 	#X1
	load8! &2 	#X2
	add! 152
	load8
	#
	store8! &1 	#AR
	load8! &1 	#X1
	load8! &1 	#AR
	sub
	store8! &2 	#X1
	# CBRANCH
	load8! &0 	#AR
	add! -9223372036854775808
	push! 0
	add! -9223372036854775808
	lt_u
	not
	jump_zero! .L316.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	add! 96
	load8
	#
	store8! &4 	#X3
	load8! &0 	#AR
	and! 0xffffffff
	load8! &4 	#X3
	add
	store8! &1 	#AR
.L301.l_o74d3c4:
	push! 1
	load8! &2 	#X1
	load8! &2 	#AR
	load8! &5 	#X2
	call! _tr_flush_block
	set_sp! (+ &0 32)
	

	load8! &2 	#X2
	add! 172
	load4
	#
	and! 0x0ffffffff
	load8! &3 	#X2
	add! 152
	store8
	#
	load8! &2 	#X2
	load8
	#
	store8! &5 	#X4
	load8! &4 	#X4
	add! 56
	load8
	#
	store8! &4 	#X3
	load8! &3 	#X3
	call! _tr_flush_bits
	set_sp! (+ &0 8)
	

	load8! &3 	#X3
	add! 40
	load8
	#
	store8! &6 	#X5
	load8! &4 	#X4
	add! 32
	load4
	#
	store8! &1 	#AR
	# CBRANCH
	load4! &0 	#AR
	load4! &6 	#X5
	lt_u
	jump_zero! .L302.l_o74d3c4
	# END CBRANCH
	load4! &0 	#AR
	store8! &6 	#X5
.L302.l_o74d3c4:
	# CBRANCH EQ0
	load4! &5 	#X5
	jump_zero! .L304.l_o74d3c4
	# END CBRANCH
	load4! &5 	#X5
	store8! &7 	#X6
	load8! &3 	#X3
	add! 32
	load8
	#
	store8! &2 	#X1
	load8! &4 	#X4
	add! 24
	load8
	#
	store8! &1 	#AR
	load8! &6 	#X6
	load8! &2 	#X1
	load8! &2 	#AR
	call! memcpy
	store8! &3

	set_sp! &2
	load8! &4 	#X4
	add! 24
	load8
	#
	load8! &7 	#X6
	add
	load8! &5 	#X4
	add! 24
	store8
	#
	load8! &3 	#X3
	add! 32
	load8
	#
	load8! &7 	#X6
	add
	load8! &4 	#X3
	add! 32
	store8
	#
	load8! &4 	#X4
	add! 40
	load8
	#
	load8! &7 	#X6
	add
	load8! &5 	#X4
	add! 40
	store8
	#
	load8! &4 	#X4
	add! 32
	load4
	#
	store8! &2 	#X1
	load8! &5 	#X5
	load8! &2 	#X1
	sub
	neg
	load8! &5 	#X4
	add! 32
	store4
	#
	load8! &3 	#X3
	add! 40
	load8
	#
	load8! &7 	#X6
	sub
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &4 	#X3
	add! 40
	store8
	#
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L345.l_o74d3c4
	# END CBRANCH
.L304.l_o74d3c4:
	load8! &2 	#X2
	load8
	#
	add! 32
	load4
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L317.l_o74d3c4
	# END CBRANCH
	push! 3
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &15
	jump! .L340.l_o74d3c4
.L318.l_o74d3c4:
	push! 1
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &15
	jump! .L340.l_o74d3c4
.L317.l_o74d3c4:
	push! 2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &15
	jump! .L340.l_o74d3c4
.L345.l_o74d3c4:
	load8! &3 	#X3
	add! 16
	load8
	#
	load8! &4 	#X3
	add! 32
	store8
	#
	jump! .L304.l_o74d3c4
.L316.l_o74d3c4:
	push! 0
	store8! &1 	#AR
	jump! .L301.l_o74d3c4
.L319.l_o74d3c4:
	push! 0
	store8! &1 	#AR
	jump! .L306.l_o74d3c4
.L340.l_o74d3c4:

	# epilogue
	set_sp! &13
	return

# FUNCTION ENDS:deflate_slow

	#peephole pop+cmp
	#peephole pop+cmp
	#peephole pop(deadreg)+pushdi
	#peephole pop+push+commut(di)
	#peephole 1
	#peephole zero_extend
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole move
	#peephole move+push(pushable)
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move
	#peephole move+push(pushable)
	#peephole 1
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole pop+move2(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole zero_extend
	#peephole push+add+pop+push+ind pop
	#peephole zero_extend
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole pop+cmprev
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+cmp
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+commut(di)
	#peephole pop+block+push+block
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push

# FUNCTION BEGINS:deflateSetDictionary
	EXPORT	deflateSetDictionary
deflateSetDictionary:
	# prologue (16 GPRs)

	set_sp! &-17

	load8! &18
	store8! &12 	#X11
	# CBRANCH EQ0
	load8! &11 	#X11
	jump_zero! .L361.l_o74d3c4
	# END CBRANCH
	load8! &11 	#X11
	add! 64
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L362.l_o74d3c4
	# END CBRANCH
	load8! &11 	#X11
	add! 72
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L363.l_o74d3c4
	# END CBRANCH
	load8! &11 	#X11
	add! 56
	load8
	#
	store8! &4 	#X3
	# CBRANCH EQ0
	load8! &3 	#X3
	jump_zero! .L364.l_o74d3c4
	# END CBRANCH
	load8! &3 	#X3
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ
	load8! &12 	#X11
	xor
	jump_zero! .L381.l_o74d3c4
	# END CBRANCH
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &19
	jump! .L382.l_o74d3c4
.L381.l_o74d3c4:
	load8! &3 	#X3
	add! 8
	load4
	#
	store8! &1 	#AR
	load8! &0 	#AR
	add! -42
	store8! &2 	#X1
	# CBRANCH
	push! 61
	load4! &2 	#X1
	lt_u
	jump_zero! .L348.l_o74d3c4
	# END CBRANCH
	# CBRANCH EQ
	load4! &0 	#AR
	push! 113
	xor
	jump_zero! .L350.l_o74d3c4
	# END CBRANCH
	# CBRANCH
	load4! &0 	#AR
	push! 666
	xor
	push! 1
	lt_u
	jump_zero! .L367.l_o74d3c4
	# END CBRANCH
.L350.l_o74d3c4:
	# CBRANCH EQ0
	load8! &19
	jump_zero! .L368.l_o74d3c4
	# END CBRANCH
	load8! &3 	#X3
	add! 48
	load4
	#
	store8! &13 	#X12
	# CBRANCH EQ
	load4! &12 	#X12
	push! 2
	xor
	jump_zero! .L369.l_o74d3c4
	# END CBRANCH
	# CBRANCH EQ
	load4! &12 	#X12
	push! 1
	xor
	jump_zero! .L383.l_o74d3c4
	# END CBRANCH
	load8! &3 	#X3
	add! 180
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_not_zero! .L384.l_o74d3c4
	# END CBRANCH
	push! 0
	load8! &4 	#X3
	add! 48
	store4
	#
	load8! &3 	#X3
	add! 80
	load4
	#
	store8! &1 	#AR
	# CBRANCH
	load4! &20
	load4! &1 	#AR
	lt_u
	not
	jump_zero! .L354.l_o74d3c4
	# END CBRANCH
	# CBRANCH EQ0
	load4! &12 	#X12
	jump_zero! .L385.l_o74d3c4
	# END CBRANCH
	load8! &0 	#AR
	store8! &2 	#X1
	load4! &20
	load8! &1 	#AR
	sub
	and! 0xffffffff
	load8! &20
	add
	store8! &20
	load4! &0 	#AR
	store4! &21
.L354.l_o74d3c4:
	load8! &11 	#X11
	add! 8
	load4
	#
	store4! &17
	load8! &11 	#X11
	load8
	#
	store8! &14 	#X13
	load4! &20
	load8! &12 	#X11
	add! 8
	store4
	#
	load8! &19
	load8! &12 	#X11
	store8
	#
	load8! &3 	#X3
	call! fill_window.s_o74d3c4
	set_sp! (+ &0 8)
	

	load8! &3 	#X3
	add! 180
	load4
	#
	store8! &3 	#X2
	# CBRANCH
	push! 2
	load4! &3 	#X2
	lt_u
	jump_zero! .L356.l_o74d3c4
	# END CBRANCH
.L358.l_o74d3c4:
	load8! &3 	#X3
	add! 172
	load4
	#
	store8! &1 	#AR
	load8! &3 	#X3
	add! 144
	load4
	#
	store8! &15 	#X14
	load8! &3 	#X3
	add! 96
	load8
	#
	store8! &11 	#X10
	load8! &3 	#X3
	add! 140
	load4
	#
	store8! &10 	#X9
	load8! &3 	#X3
	add! 120
	load8
	#
	store8! &9 	#X8
	load8! &3 	#X3
	add! 112
	load8
	#
	store8! &8 	#X7
	load8! &3 	#X3
	add! 88
	load4
	#
	store8! &7 	#X6
	load8! &3 	#X3
	add! 128
	load4
	#
	store8! &2 	#X1
	load8! &0 	#AR
	add! -2
	store8! &5 	#X4
	load8! &2 	#X2
	load8! &5 	#X4
	add
	store8! &6 	#X5
.L357.l_o74d3c4:
	load4! &14 	#X14
	pow2
	load8! &2 	#X1
	mult
	store8! &2 	#X1
	load8! &0 	#AR
	add! 2
	and! 0xffffffff
	load8! &11 	#X10
	add
	load1
	and! 0x0ff
	load8! &2 	#X1
	xor
	load8! &10 	#X9
	and
	store8! &2 	#X1
	load4! &1 	#X1
	load8! &4 	#X3
	add! 128
	store4
	#
	load4! &1 	#X1
	store8! &3 	#X2
	load8! &2 	#X2
	load8! &3 	#X2
	add
	load8! &9 	#X8
	add
	store8! &3 	#X2
	load8! &0 	#AR
	load8! &7 	#X6
	and
	and! 0xffffffff
	store8! &5 	#X4
	load8! &4 	#X4
	load8! &5 	#X4
	add
	load8! &8 	#X7
	add
	store8! &5 	#X4
	load8! &2 	#X2
	load2
	#
	load8! &5 	#X4
	store2
	#
	load2! &0 	#AR
	load8! &3 	#X2
	store2
	#
	load8! &0 	#AR
	add! 1
	store8! &1 	#AR
	# CBRANCH
	load4! &0 	#AR
	load4! &6 	#X5
	xor
	push! 1
	lt_u
	jump_zero! .L357.l_o74d3c4
	# END CBRANCH
	load4! &0 	#AR
	load8! &4 	#X3
	add! 172
	store4
	#
	push! 2
	load8! &4 	#X3
	add! 180
	store4
	#
	load8! &3 	#X3
	call! fill_window.s_o74d3c4
	set_sp! (+ &0 8)
	

	load8! &3 	#X3
	add! 180
	load4
	#
	store8! &3 	#X2
	# CBRANCH
	push! 2
	load4! &3 	#X2
	lt_u
	not
	jump_zero! .L358.l_o74d3c4
	# END CBRANCH
.L356.l_o74d3c4:
	load8! &3 	#X3
	add! 172
	load4
	#
	load8! &3 	#X2
	add
	store8! &1 	#AR
	load4! &0 	#AR
	load8! &4 	#X3
	add! 172
	store4
	#
	load4! &0 	#AR
	load8! &4 	#X3
	add! 152
	store8
	#
	load4! &2 	#X2
	load8! &4 	#X3
	add! 14012
	store4
	#
	push! 0
	load8! &4 	#X3
	add! 180
	store4
	#
	push! 2
	load8! &4 	#X3
	add! 184
	store4
	#
	push! 2
	load8! &4 	#X3
	add! 160
	store4
	#
	push! 0
	load8! &4 	#X3
	add! 168
	store4
	#
	load8! &13 	#X13
	load8! &12 	#X11
	store8
	#
	load4! &16
	load8! &12 	#X11
	add! 8
	store4
	#
	load4! &12 	#X12
	load8! &4 	#X3
	add! 48
	store4
	#
	push! 0
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &19
	jump! .L382.l_o74d3c4
.L348.l_o74d3c4:
	load4! &1 	#X1
	store8! &2 	#X1
	push! 2306405961448849409
	load8! &2 	#X1
	shift_ru
	not
	and! 0x1
	# CBRANCH - peep (modesize=1)
	and! 255
	# - EQ0
	jump_zero! .L350.l_o74d3c4
	# END CBRANCH
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &19
	jump! .L382.l_o74d3c4
.L364.l_o74d3c4:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &19
	jump! .L382.l_o74d3c4
.L385.l_o74d3c4:
	load8! &3 	#X3
	add! 120
	load8
	#
	store8! &1 	#AR
	load8! &3 	#X3
	add! 132
	load4
	#
	add! -1
	and! 0xffffffff
	store8! &2 	#X1
	load8! &1 	#X1
	load8! &2 	#X1
	add
	store8! &2 	#X1
	push! 0
	load8! &1 	#AR
	load8! &3 	#X1
	add
	store2
	load8! &1 	#X1
	push! 0
	load8! &2 	#AR
	call! memset
	store8! &3

	set_sp! &2
	push! 0
	load8! &4 	#X3
	add! 172
	store4
	#
	push! 0
	load8! &4 	#X3
	add! 152
	store8
	#
	push! 0
	load8! &4 	#X3
	add! 14012
	store4
	#
	load8! &3 	#X3
	add! 80
	load4
	#
	store8! &1 	#AR
	load8! &0 	#AR
	store8! &2 	#X1
	load4! &20
	load8! &1 	#AR
	sub
	and! 0xffffffff
	load8! &20
	add
	store8! &20
	load4! &0 	#AR
	store4! &21
	jump! .L354.l_o74d3c4
.L383.l_o74d3c4:
	# CBRANCH
	load4! &0 	#AR
	push! 42
	xor
	push! 1
	lt_u
	jump_zero! .L386.l_o74d3c4
	# END CBRANCH
	load8! &3 	#X3
	add! 180
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_not_zero! .L387.l_o74d3c4
	# END CBRANCH
	load8! &11 	#X11
	add! 96
	load8
	#
	store8! &1 	#AR
	load4! &20
	load8! &20
	load8! &2 	#AR
	call! adler32
	store8! &3

	set_sp! &2
	load8! &0 	#AR
	load8! &12 	#X11
	add! 96
	store8
	#
	push! 0
	load8! &4 	#X3
	add! 48
	store4
	#
	load8! &3 	#X3
	add! 80
	load4
	#
	store8! &1 	#AR
	# CBRANCH
	load4! &20
	load4! &1 	#AR
	lt_u
	not
	jump_zero! .L354.l_o74d3c4
	# END CBRANCH
	load8! &0 	#AR
	store8! &2 	#X1
	load4! &20
	load8! &1 	#AR
	sub
	and! 0xffffffff
	load8! &20
	add
	store8! &20
	load4! &0 	#AR
	store4! &21
	jump! .L354.l_o74d3c4
.L361.l_o74d3c4:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &19
	jump! .L382.l_o74d3c4
.L362.l_o74d3c4:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &19
	jump! .L382.l_o74d3c4
.L363.l_o74d3c4:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &19
	jump! .L382.l_o74d3c4
.L387.l_o74d3c4:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &19
	jump! .L382.l_o74d3c4
.L386.l_o74d3c4:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &19
	jump! .L382.l_o74d3c4
.L369.l_o74d3c4:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &19
	jump! .L382.l_o74d3c4
.L368.l_o74d3c4:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &19
	jump! .L382.l_o74d3c4
.L367.l_o74d3c4:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &19
	jump! .L382.l_o74d3c4
.L384.l_o74d3c4:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &19
.L382.l_o74d3c4:

	# epilogue
	set_sp! &17
	return

# FUNCTION ENDS:deflateSetDictionary

	#peephole nop+set
	#peephole zero_extend
	#peephole zero_extend
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole zero_extend
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole pop+cmprev
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+cmp

# FUNCTION BEGINS:deflateGetDictionary
	EXPORT	deflateGetDictionary
deflateGetDictionary:
	# prologue (6 GPRs)

	set_sp! &-6

	load8! &7
	store8! &1 	#AR
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L395.l_o74d3c4
	# END CBRANCH
	load8! &0 	#AR
	add! 64
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L396.l_o74d3c4
	# END CBRANCH
	load8! &0 	#AR
	add! 72
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L397.l_o74d3c4
	# END CBRANCH
	load8! &0 	#AR
	add! 56
	load8
	#
	store8! &2 	#X1
	# CBRANCH EQ0
	load8! &1 	#X1
	jump_zero! .L398.l_o74d3c4
	# END CBRANCH
	load8! &1 	#X1
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ
	load8! &1 	#AR
	xor
	jump_zero! .L411.l_o74d3c4
	# END CBRANCH
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &8
	jump! .L412.l_o74d3c4
.L411.l_o74d3c4:
	load8! &1 	#X1
	add! 8
	load4
	#
	store8! &1 	#AR
	load8! &0 	#AR
	add! -42
	store8! &3 	#X2
	# CBRANCH
	push! 61
	load4! &3 	#X2
	lt_u
	jump_zero! .L390.l_o74d3c4
	# END CBRANCH
	# CBRANCH EQ
	load4! &0 	#AR
	push! 113
	xor
	jump_zero! .L392.l_o74d3c4
	# END CBRANCH
	# CBRANCH
	load4! &0 	#AR
	push! 666
	xor
	push! 1
	lt_u
	jump_zero! .L401.l_o74d3c4
	# END CBRANCH
.L392.l_o74d3c4:
	load8! &1 	#X1
	add! 172
	load4
	#
	store8! &5 	#X4
	load8! &1 	#X1
	add! 180
	load4
	#
	store8! &4 	#X3
	load8! &3 	#X3
	load8! &5 	#X4
	add
	store8! &1 	#AR
	load8! &1 	#X1
	add! 80
	load4
	#
	store8! &3 	#X2
	# CBRANCH
	load4! &0 	#AR
	load4! &3 	#X2
	lt_u
	jump_zero! .L393.l_o74d3c4
	# END CBRANCH
	load4! &0 	#AR
	store8! &3 	#X2
.L393.l_o74d3c4:
	# CBRANCH EQ0
	load8! &8
	jump_zero! .L394.l_o74d3c4
	# END CBRANCH
	# CBRANCH EQ0
	load4! &2 	#X2
	jump_not_zero! .L413.l_o74d3c4
	# END CBRANCH
.L394.l_o74d3c4:
	# CBRANCH EQ0
	load8! &9
	jump_zero! .L402.l_o74d3c4
	# END CBRANCH
.L414.l_o74d3c4:
	load4! &2 	#X2
	load8! &10
	store8! &2 	#AR
	load8! &1 	#AR
	store4
	#
	push! 0
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &8
	jump! .L412.l_o74d3c4
.L390.l_o74d3c4:
	load4! &2 	#X2
	store8! &1 	#AR
	push! 2306405961448849409
	load8! &1 	#AR
	shift_ru
	not
	and! 0x1
	# CBRANCH - peep (modesize=1)
	and! 255
	# - EQ0
	jump_zero! .L392.l_o74d3c4
	# END CBRANCH
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &8
	jump! .L412.l_o74d3c4
.L398.l_o74d3c4:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &8
	jump! .L412.l_o74d3c4
.L413.l_o74d3c4:
	load4! &2 	#X2
	store8! &1 	#AR
	load8! &1 	#X1
	add! 96
	load8
	#
	store8! &6 	#X5
	load4! &4 	#X4
	store8! &5 	#X4
	load4! &3 	#X3
	load8! &5 	#X4
	add
	load8! &1 	#AR
	sub
	load8! &6 	#X5
	add
	store8! &2 	#X1
	load8! &0 	#AR
	load8! &2 	#X1
	load8! &10
	call! memcpy
	store8! &3

	set_sp! &2
	# CBRANCH EQ0
	load8! &9
	jump_not_zero! .L414.l_o74d3c4
	# END CBRANCH
.L402.l_o74d3c4:
	push! 0
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &8
	jump! .L412.l_o74d3c4
.L395.l_o74d3c4:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &8
	jump! .L412.l_o74d3c4
.L396.l_o74d3c4:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &8
	jump! .L412.l_o74d3c4
.L397.l_o74d3c4:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &8
	jump! .L412.l_o74d3c4
.L401.l_o74d3c4:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &8
.L412.l_o74d3c4:

	# epilogue
	set_sp! &6
	return

# FUNCTION ENDS:deflateGetDictionary

	#peephole 1
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole pop+cmprev
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+cmp
	#peephole popdi(deadreg)+push
	#peephole and+popsi

# FUNCTION BEGINS:deflateResetKeep
	EXPORT	deflateResetKeep
deflateResetKeep:
	# prologue (4 GPRs)
	push! 0
	push! 0
	push! 0
	push! 0

	load8! &5
	store8! &3 	#X2
	# CBRANCH EQ0
	load8! &2 	#X2
	jump_zero! .L425.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	add! 64
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L426.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	add! 72
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L427.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	add! 56
	load8
	#
	store8! &4 	#X3
	# CBRANCH EQ0
	load8! &3 	#X3
	jump_zero! .L428.l_o74d3c4
	# END CBRANCH
	load8! &3 	#X3
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ
	load8! &3 	#X2
	xor
	jump_zero! .L437.l_o74d3c4
	# END CBRANCH
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &6
	jump! .L438.l_o74d3c4
.L437.l_o74d3c4:
	load8! &3 	#X3
	add! 8
	load4
	#
	store8! &1 	#AR
	load8! &0 	#AR
	add! -42
	store8! &2 	#X1
	# CBRANCH
	push! 61
	load4! &2 	#X1
	lt_u
	jump_zero! .L417.l_o74d3c4
	# END CBRANCH
	# CBRANCH EQ
	load4! &0 	#AR
	push! 113
	xor
	jump_zero! .L419.l_o74d3c4
	# END CBRANCH
	# CBRANCH
	load4! &0 	#AR
	push! 666
	xor
	push! 1
	lt_u
	jump_zero! .L431.l_o74d3c4
	# END CBRANCH
.L419.l_o74d3c4:
	push! 0
	load8! &3 	#X2
	add! 40
	store8
	#
	push! 0
	load8! &3 	#X2
	add! 16
	store8
	#
	push! 0
	load8! &3 	#X2
	add! 48
	store8
	#
	push! 2
	load8! &3 	#X2
	add! 88
	store4
	#
	push! 0
	load8! &4 	#X3
	add! 40
	store8
	#
	load8! &3 	#X3
	add! 16
	load8
	#
	load8! &4 	#X3
	add! 32
	store8
	#
	load8! &3 	#X3
	add! 48
	load4
	#
	store8! &1 	#AR
	# CBRANCH
	load4! &0 	#AR
	add! -2147483648
	push! 0
	add! -2147483648
	lt_u
	not
	jump_zero! .L439.l_o74d3c4
	# END CBRANCH
	# CBRANCH EQ
	load4! &0 	#AR
	push! 2
	xor
	jump_zero! .L422.l_o74d3c4
	# END CBRANCH
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_not_zero! .L421.l_o74d3c4
	# END CBRANCH
	push! 113
	store8! &1 	#AR
	load4! &0 	#AR
	load8! &4 	#X3
	add! 8
	store4
	#
	push! 0
	push! 0
	push! 0
	call! adler32
	store8! &3

	set_sp! &2
.L424.l_o74d3c4:
	load8! &0 	#AR
	load8! &3 	#X2
	add! 96
	store8
	#
	push! 0
	load8! &4 	#X3
	add! 76
	store4
	#
	load8! &3 	#X3
	call! _tr_init
	set_sp! (+ &0 8)
	

	push! 0
	store8! &1 	#AR
.L440.l_o74d3c4:
	load4! &0 	#AR
	store4! &6
	jump! .L438.l_o74d3c4
.L417.l_o74d3c4:
	load4! &1 	#X1
	store8! &1 	#AR
	push! 2306405961448849409
	load8! &1 	#AR
	shift_ru
	not
	and! 0x1
	# CBRANCH - peep (modesize=1)
	and! 255
	# - EQ0
	jump_zero! .L419.l_o74d3c4
	# END CBRANCH
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &6
	jump! .L438.l_o74d3c4
.L428.l_o74d3c4:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &6
	jump! .L438.l_o74d3c4
.L439.l_o74d3c4:
	load8! &0 	#AR
	neg
	load8! &4 	#X3
	add! 48
	store4
	#
	# CBRANCH EQ
	load4! &0 	#AR
	push! 4294967294
	xor
	jump_zero! .L422.l_o74d3c4
	# END CBRANCH
.L421.l_o74d3c4:
	push! 42
	store8! &1 	#AR
	load4! &0 	#AR
	load8! &4 	#X3
	add! 8
	store4
	#
	push! 0
	push! 0
	push! 0
	call! adler32
	store8! &3

	set_sp! &2
	jump! .L424.l_o74d3c4
.L422.l_o74d3c4:
	push! 57
	load8! &4 	#X3
	add! 8
	store4
	#
	push! 0
	push! 0
	push! 0
	call! crc32
	store8! &3

	set_sp! &2
	load8! &0 	#AR
	load8! &3 	#X2
	add! 96
	store8
	#
	push! 0
	load8! &4 	#X3
	add! 76
	store4
	#
	load8! &3 	#X3
	call! _tr_init
	set_sp! (+ &0 8)
	

	push! 0
	store8! &1 	#AR
	jump! .L440.l_o74d3c4
.L425.l_o74d3c4:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &6
	jump! .L438.l_o74d3c4
.L426.l_o74d3c4:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &6
	jump! .L438.l_o74d3c4
.L427.l_o74d3c4:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &6
	jump! .L438.l_o74d3c4
.L431.l_o74d3c4:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &6
.L438.l_o74d3c4:

	# epilogue
	set_sp! &4
	return

# FUNCTION ENDS:deflateResetKeep

	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole zero_extend
	#peephole push+add+pop+push+ind pop
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole zero_extend
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole and+popsi

# FUNCTION BEGINS:deflateReset
	EXPORT	deflateReset
deflateReset:
	# prologue (5 GPRs)

	set_sp! &-5

	load8! &6
	call! deflateResetKeep
	store8! &1

	load4! &0 	#AR
	store8! &4 	#X3
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_zero! .L445.l_o74d3c4
	# END CBRANCH
	load4! &3 	#X3
	store4! &7
	jump! .L446.l_o74d3c4
.L445.l_o74d3c4:
	load8! &6
	add! 56
	load8
	#
	store8! &3 	#X2
	load8! &2 	#X2
	add! 80
	load4
	#
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	load8! &3 	#X2
	add! 104
	store8
	#
	load8! &2 	#X2
	add! 120
	load8
	#
	store8! &1 	#AR
	load8! &2 	#X2
	add! 132
	load4
	#
	add! -1
	and! 0xffffffff
	store8! &2 	#X1
	load8! &1 	#X1
	load8! &2 	#X1
	add
	store8! &2 	#X1
	push! 0
	load8! &1 	#AR
	load8! &3 	#X1
	add
	store2
	load8! &1 	#X1
	push! 0
	load8! &2 	#AR
	call! memset
	store8! &3

	set_sp! &2
	load8! &2 	#X2
	add! 196
	load4
	#
	store8! &1 	#AR
	load4! &0 	#AR
	sigx4
	shift_l! 4
	add! configuration_table.s_o74d3c4
	add! 2
	load2
	and! 0x0ffff
	load8! &3 	#X2
	add! 192
	store4
	#
	load4! &0 	#AR
	sigx4
	shift_l! 4
	add! configuration_table.s_o74d3c4
	load2
	and! 0x0ffff
	load8! &3 	#X2
	add! 204
	store4
	#
	load4! &0 	#AR
	sigx4
	shift_l! 4
	add! configuration_table.s_o74d3c4
	add! 4
	load2
	and! 0x0ffff
	load8! &3 	#X2
	add! 208
	store4
	#
	load4! &0 	#AR
	sigx4
	shift_l! 4
	add! configuration_table.s_o74d3c4
	add! 6
	load2
	and! 0x0ffff
	load8! &3 	#X2
	add! 188
	store4
	#
	push! 0
	load8! &3 	#X2
	add! 152
	store8
	#
	push! 0
	load8! &3 	#X2
	add! 180
	store4
	#
	push! 0
	load8! &3 	#X2
	add! 14012
	store4
	#
	push! 2
	load8! &3 	#X2
	add! 184
	store4
	#
	push! 2
	load8! &3 	#X2
	add! 160
	store4
	#
	push! 0
	load8! &3 	#X2
	add! 168
	store8
	#
	push! 0
	load8! &3 	#X2
	add! 128
	store4
	#
	load4! &3 	#X3
	store4! &7
.L446.l_o74d3c4:

	# epilogue
	set_sp! &5
	return

# FUNCTION ENDS:deflateReset

	#peephole pop+cmp
	#peephole zero_extend
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole pop+cmprev
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+cmp

# FUNCTION BEGINS:deflateSetHeader
	EXPORT	deflateSetHeader
deflateSetHeader:
	# prologue (3 GPRs)
	push! 0
	push! 0
	push! 0

	load8! &4
	store8! &1 	#AR
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L452.l_o74d3c4
	# END CBRANCH
	load8! &0 	#AR
	add! 64
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L453.l_o74d3c4
	# END CBRANCH
	load8! &0 	#AR
	add! 72
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L454.l_o74d3c4
	# END CBRANCH
	load8! &0 	#AR
	add! 56
	load8
	#
	store8! &2 	#X1
	# CBRANCH EQ0
	load8! &1 	#X1
	jump_zero! .L455.l_o74d3c4
	# END CBRANCH
	load8! &1 	#X1
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ
	load8! &1 	#AR
	xor
	jump_zero! .L462.l_o74d3c4
	# END CBRANCH
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
	jump! .L463.l_o74d3c4
.L462.l_o74d3c4:
	load8! &1 	#X1
	add! 8
	load4
	#
	store8! &1 	#AR
	load8! &0 	#AR
	add! -42
	store8! &3 	#X2
	# CBRANCH
	push! 61
	load4! &3 	#X2
	lt_u
	jump_zero! .L449.l_o74d3c4
	# END CBRANCH
	# CBRANCH EQ
	load4! &0 	#AR
	push! 113
	xor
	jump_zero! .L451.l_o74d3c4
	# END CBRANCH
	# CBRANCH
	load4! &0 	#AR
	push! 666
	xor
	push! 1
	lt_u
	jump_zero! .L458.l_o74d3c4
	# END CBRANCH
.L451.l_o74d3c4:
	load8! &1 	#X1
	add! 48
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	push! 2
	xor
	push! 1
	lt_u
	jump_zero! .L459.l_o74d3c4
	# END CBRANCH
	load8! &5
	load8! &2 	#X1
	add! 56
	store8
	#
	push! 0
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
	jump! .L463.l_o74d3c4
.L449.l_o74d3c4:
	load4! &2 	#X2
	store8! &1 	#AR
	push! 2306405961448849409
	load8! &1 	#AR
	shift_ru
	not
	and! 0x1
	# CBRANCH - peep (modesize=1)
	and! 255
	# - EQ0
	jump_zero! .L451.l_o74d3c4
	# END CBRANCH
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
	jump! .L463.l_o74d3c4
.L455.l_o74d3c4:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
	jump! .L463.l_o74d3c4
.L452.l_o74d3c4:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
	jump! .L463.l_o74d3c4
.L453.l_o74d3c4:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
	jump! .L463.l_o74d3c4
.L454.l_o74d3c4:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
	jump! .L463.l_o74d3c4
.L459.l_o74d3c4:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
	jump! .L463.l_o74d3c4
.L458.l_o74d3c4:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
.L463.l_o74d3c4:

	# epilogue
	set_sp! &3
	return

# FUNCTION ENDS:deflateSetHeader

	#peephole pop(deadreg)+push
	#peephole nop+set
	#peephole 1
	#peephole nop+set
	#peephole zero_extend
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole pop+cmprev
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole nop+set
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+cmp

# FUNCTION BEGINS:deflatePending
	EXPORT	deflatePending
deflatePending:
	# prologue (3 GPRs)
	push! 0
	push! 0
	push! 0

	load8! &4
	store8! &1 	#AR
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L470.l_o74d3c4
	# END CBRANCH
	load8! &0 	#AR
	add! 64
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L471.l_o74d3c4
	# END CBRANCH
	load8! &0 	#AR
	add! 72
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L472.l_o74d3c4
	# END CBRANCH
	load8! &0 	#AR
	add! 56
	load8
	#
	store8! &2 	#X1
	# CBRANCH EQ0
	load8! &1 	#X1
	jump_zero! .L473.l_o74d3c4
	# END CBRANCH
	load8! &1 	#X1
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ
	load8! &1 	#AR
	xor
	jump_zero! .L483.l_o74d3c4
	# END CBRANCH
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
	jump! .L484.l_o74d3c4
.L483.l_o74d3c4:
	load8! &1 	#X1
	add! 8
	load4
	#
	store8! &1 	#AR
	load8! &0 	#AR
	add! -42
	store8! &3 	#X2
	# CBRANCH
	push! 61
	load4! &3 	#X2
	lt_u
	jump_zero! .L466.l_o74d3c4
	# END CBRANCH
	# CBRANCH EQ
	load4! &0 	#AR
	push! 113
	xor
	jump_zero! .L468.l_o74d3c4
	# END CBRANCH
	# CBRANCH
	load4! &0 	#AR
	push! 666
	xor
	push! 1
	lt_u
	jump_zero! .L476.l_o74d3c4
	# END CBRANCH
.L468.l_o74d3c4:
	# CBRANCH EQ0
	load8! &5
	jump_zero! .L469.l_o74d3c4
	# END CBRANCH
	load8! &1 	#X1
	add! 40
	load8
	#
	store8! &1 	#AR
	load4! &0 	#AR
	load8! &6
	store8! &2 	#AR
	load8! &1 	#AR
	store4
	#
.L469.l_o74d3c4:
	# CBRANCH EQ0
	load8! &6
	jump_zero! .L477.l_o74d3c4
	# END CBRANCH
	load8! &1 	#X1
	add! 14020
	load4
	#
	load8! &7
	store8! &2 	#AR
	load8! &1 	#AR
	store4
	#
	push! 0
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
	jump! .L484.l_o74d3c4
.L466.l_o74d3c4:
	load4! &2 	#X2
	store8! &1 	#AR
	push! 2306405961448849409
	load8! &1 	#AR
	shift_ru
	not
	and! 0x1
	# CBRANCH - peep (modesize=1)
	and! 255
	# - EQ0
	jump_zero! .L468.l_o74d3c4
	# END CBRANCH
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
	jump! .L484.l_o74d3c4
.L473.l_o74d3c4:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
	jump! .L484.l_o74d3c4
.L470.l_o74d3c4:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
	jump! .L484.l_o74d3c4
.L477.l_o74d3c4:
	push! 0
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
	jump! .L484.l_o74d3c4
.L471.l_o74d3c4:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
	jump! .L484.l_o74d3c4
.L472.l_o74d3c4:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
	jump! .L484.l_o74d3c4
.L476.l_o74d3c4:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
.L484.l_o74d3c4:

	# epilogue
	set_sp! &3
	return

# FUNCTION ENDS:deflatePending

	#peephole 1
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole pop+push(deadreg)+shiftl
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole pop+push(deadreg)+shiftl
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+sub
	#peephole move_dead
	#peephole move
	#peephole move+push+sub
	#peephole move_dead
	#peephole push+pop+deadreg+binop
	#peephole popdi+cmp rev
	#peephole zero_extend
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole pop+cmprev
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+cmp
	#peephole redundant blockage insn
	#peephole pop+block+push+commut(di)
	#peephole pop+block+push+commut(di)
	#peephole pop+block+push+commut(di)
	#peephole popdi(deadreg)+push
	#peephole and+pophi
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole and+pophi

# FUNCTION BEGINS:deflatePrime
	EXPORT	deflatePrime
deflatePrime:
	# prologue (7 GPRs)

	set_sp! &-7

	load8! &8
	store8! &1 	#AR
	load4! &9
	store8! &5 	#X4
	load4! &10
	store8! &6 	#X5
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L492.l_o74d3c4
	# END CBRANCH
	load8! &0 	#AR
	add! 64
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L493.l_o74d3c4
	# END CBRANCH
	load8! &0 	#AR
	add! 72
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L494.l_o74d3c4
	# END CBRANCH
	load8! &0 	#AR
	add! 56
	load8
	#
	store8! &3 	#X2
	# CBRANCH EQ0
	load8! &2 	#X2
	jump_zero! .L495.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ
	load8! &1 	#AR
	xor
	jump_zero! .L503.l_o74d3c4
	# END CBRANCH
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &9
	jump! .L504.l_o74d3c4
.L503.l_o74d3c4:
	load8! &2 	#X2
	add! 8
	load4
	#
	store8! &1 	#AR
	load8! &0 	#AR
	add! -42
	store8! &2 	#X1
	# CBRANCH
	push! 61
	load4! &2 	#X1
	lt_u
	jump_zero! .L487.l_o74d3c4
	# END CBRANCH
	# CBRANCH EQ
	load4! &0 	#AR
	push! 113
	xor
	jump_zero! .L489.l_o74d3c4
	# END CBRANCH
	# CBRANCH
	load4! &0 	#AR
	push! 666
	xor
	push! 1
	lt_u
	jump_zero! .L498.l_o74d3c4
	# END CBRANCH
.L489.l_o74d3c4:
	load8! &2 	#X2
	add! 13984
	load8
	#
	store8! &2 	#X1
	load8! &2 	#X2
	add! 32
	load8
	#
	add! 2
	# CBRANCH - peep (modesize=8)
	# - reverse 
	load8! &2 	#X1
	gt_u
	not
	jump_zero! .L499.l_o74d3c4
	# END CBRANCH
.L491.l_o74d3c4:
	load8! &2 	#X2
	add! 14020
	load4
	#
	store8! &1 	#AR
	load8! &0 	#AR
	sub! 16
	neg
	store8! &4 	#X3
	load8! &2 	#X2
	add! 14016
	load2
	#
	store8! &2 	#X1
	# CBRANCH
	load4! &4 	#X4
	add! -2147483648
	load4! &4 	#X3
	add! -2147483648
	lt_u
	jump_zero! .L505.l_o74d3c4
	# END CBRANCH
	load4! &4 	#X4
	sigx4
	store8! &4 	#X3
	push! 1
	load8! &4 	#X3
	shift_l
	add! -1
	load8! &6 	#X5
	and
	store8! &6 	#X5
	load4! &0 	#AR
	sigx4
	pow2
	load8! &6 	#X5
	mult
	load8! &2 	#X1
	or
	load8! &3 	#X2
	add! 14016
	store2
	#
	load8! &4 	#X4
	load8! &1 	#AR
	add
	load8! &3 	#X2
	add! 14020
	store4
	#
	load8! &2 	#X2
	call! _tr_flush_bits
	set_sp! (+ &0 8)
	

	push! 0
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &9
	jump! .L504.l_o74d3c4
.L487.l_o74d3c4:
	load4! &1 	#X1
	store8! &1 	#AR
	push! 2306405961448849409
	load8! &1 	#AR
	shift_ru
	not
	and! 0x1
	# CBRANCH - peep (modesize=1)
	and! 255
	# - EQ0
	jump_zero! .L489.l_o74d3c4
	# END CBRANCH
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &9
	jump! .L504.l_o74d3c4
.L495.l_o74d3c4:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &9
	jump! .L504.l_o74d3c4
.L505.l_o74d3c4:
	load4! &3 	#X3
	sigx4
	store8! &7 	#X6
	push! 1
	load8! &7 	#X6
	shift_l
	add! -1
	load8! &6 	#X5
	and
	store8! &7 	#X6
	load4! &0 	#AR
	sigx4
	pow2
	load8! &7 	#X6
	mult
	load8! &2 	#X1
	or
	load8! &3 	#X2
	add! 14016
	store2
	#
	push! 16
	load8! &3 	#X2
	add! 14020
	store4
	#
	load8! &2 	#X2
	call! _tr_flush_bits
	set_sp! (+ &0 8)
	

	load4! &5 	#X5
	sigx4
	store8! &2 	#X1
	load4! &3 	#X3
	sigx4
	store8! &1 	#AR
	load8! &1 	#X1
	load8! &1 	#AR
	shift_rs
	store8! &6 	#X5
	load8! &3 	#X3
	load8! &5 	#X4
	sub
	neg
	store8! &5 	#X4
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_not_zero! .L491.l_o74d3c4
	# END CBRANCH
	push! 0
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &9
	jump! .L504.l_o74d3c4
.L492.l_o74d3c4:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &9
	jump! .L504.l_o74d3c4
.L493.l_o74d3c4:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &9
	jump! .L504.l_o74d3c4
.L494.l_o74d3c4:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &9
	jump! .L504.l_o74d3c4
.L499.l_o74d3c4:
	push! -5
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &9
	jump! .L504.l_o74d3c4
.L498.l_o74d3c4:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &9
.L504.l_o74d3c4:

	# epilogue
	set_sp! &7
	return

# FUNCTION ENDS:deflatePrime

	#peephole zero_extend
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole pop+cmprev
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+cmp

# FUNCTION BEGINS:deflateTune
	EXPORT	deflateTune
deflateTune:
	# prologue (3 GPRs)
	push! 0
	push! 0
	push! 0

	load8! &4
	store8! &1 	#AR
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L511.l_o74d3c4
	# END CBRANCH
	load8! &0 	#AR
	add! 64
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L512.l_o74d3c4
	# END CBRANCH
	load8! &0 	#AR
	add! 72
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L513.l_o74d3c4
	# END CBRANCH
	load8! &0 	#AR
	add! 56
	load8
	#
	store8! &2 	#X1
	# CBRANCH EQ0
	load8! &1 	#X1
	jump_zero! .L514.l_o74d3c4
	# END CBRANCH
	load8! &1 	#X1
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ
	load8! &1 	#AR
	xor
	jump_zero! .L520.l_o74d3c4
	# END CBRANCH
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
	jump! .L521.l_o74d3c4
.L520.l_o74d3c4:
	load8! &1 	#X1
	add! 8
	load4
	#
	store8! &1 	#AR
	load8! &0 	#AR
	add! -42
	store8! &3 	#X2
	# CBRANCH
	push! 61
	load4! &3 	#X2
	lt_u
	jump_zero! .L508.l_o74d3c4
	# END CBRANCH
	# CBRANCH EQ
	load4! &0 	#AR
	push! 113
	xor
	jump_zero! .L510.l_o74d3c4
	# END CBRANCH
	# CBRANCH
	load4! &0 	#AR
	push! 666
	xor
	push! 1
	lt_u
	jump_zero! .L517.l_o74d3c4
	# END CBRANCH
.L510.l_o74d3c4:
	load4! &5
	load8! &2 	#X1
	add! 204
	store4
	#
	load4! &6
	load8! &2 	#X1
	add! 192
	store4
	#
	load4! &7
	load8! &2 	#X1
	add! 208
	store4
	#
	load4! &8
	load8! &2 	#X1
	add! 188
	store4
	#
	push! 0
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
	jump! .L521.l_o74d3c4
.L508.l_o74d3c4:
	load4! &2 	#X2
	store8! &1 	#AR
	push! 2306405961448849409
	load8! &1 	#AR
	shift_ru
	not
	and! 0x1
	# CBRANCH - peep (modesize=1)
	and! 255
	# - EQ0
	jump_zero! .L510.l_o74d3c4
	# END CBRANCH
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
	jump! .L521.l_o74d3c4
.L514.l_o74d3c4:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
	jump! .L521.l_o74d3c4
.L511.l_o74d3c4:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
	jump! .L521.l_o74d3c4
.L512.l_o74d3c4:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
	jump! .L521.l_o74d3c4
.L513.l_o74d3c4:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
	jump! .L521.l_o74d3c4
.L517.l_o74d3c4:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
.L521.l_o74d3c4:

	# epilogue
	set_sp! &3
	return

# FUNCTION ENDS:deflateTune

	#peephole pop+push+commut(di)
	#peephole pop+push+commut(di)
	#peephole pop+push+commut(di)
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole binop1+deadreg+binop2
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole pop+cmp
	#peephole binop1+deadreg+binop2
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole pop+cmp
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole zero_extend
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole pop+cmprev
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole binop1+deadreg+binop2
	#peephole pop+push+commut(di)
	#peephole pop+push+commut(di)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+cmp
	#peephole popdi(deadreg)+push

# FUNCTION BEGINS:deflateBound
	EXPORT	deflateBound
deflateBound:
	# prologue (8 GPRs)

	set_sp! &-8

	load8! &9
	store8! &1 	#AR
	load8! &10
	add! 7
	store8! &4 	#X3
	load8! &3 	#X3
	shift_ru! 3
	store8! &3 	#X2
	load8! &10
	add! 63
	shift_ru! 6
	load8! &3 	#X2
	add
	load8! &11
	add
	store8! &6 	#X5
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L523.l_o74d3c4
	# END CBRANCH
	load8! &0 	#AR
	add! 64
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L523.l_o74d3c4
	# END CBRANCH
	load8! &0 	#AR
	add! 72
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L523.l_o74d3c4
	# END CBRANCH
	load8! &0 	#AR
	add! 56
	load8
	#
	store8! &3 	#X2
	# CBRANCH EQ0
	load8! &2 	#X2
	jump_zero! .L523.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - reverse 
	load8! &1 	#AR
	xor
	push! 1
	lt_u
	jump_zero! .L523.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	add! 8
	load4
	#
	store8! &1 	#AR
	load8! &0 	#AR
	add! -42
	store8! &2 	#X1
	# CBRANCH
	push! 61
	load4! &2 	#X1
	lt_u
	jump_zero! .L524.l_o74d3c4
	# END CBRANCH
	# CBRANCH EQ
	load4! &0 	#AR
	push! 113
	xor
	jump_zero! .L526.l_o74d3c4
	# END CBRANCH
	# CBRANCH
	load4! &0 	#AR
	push! 666
	xor
	push! 1
	lt_u
	jump_zero! .L523.l_o74d3c4
	# END CBRANCH
.L526.l_o74d3c4:
	load8! &2 	#X2
	add! 48
	load4
	#
	store8! &1 	#AR
	# CBRANCH EQ
	load4! &0 	#AR
	push! 1
	xor
	jump_zero! .L528.l_o74d3c4
	# END CBRANCH
	# CBRANCH EQ
	load4! &0 	#AR
	push! 2
	xor
	jump_zero! .L529.l_o74d3c4
	# END CBRANCH
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_zero! .L538.l_o74d3c4
	# END CBRANCH
	push! 6
	store8! &1 	#AR
.L530.l_o74d3c4:
	load8! &2 	#X2
	add! 84
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	push! 15
	xor
	push! 1
	lt_u
	jump_zero! .L536.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	add! 136
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	push! 15
	xor
	push! 1
	lt_u
	jump_zero! .L536.l_o74d3c4
	# END CBRANCH
	load8! &10
	shift_ru! 12
	store8! &2 	#X1
	load8! &10
	shift_ru! 14
	store8! &5 	#X4
	load8! &3 	#X3
	load8! &2 	#X1
	add
	store8! &2 	#X1
	load8! &10
	shift_ru! 25
	store8! &3 	#X2
	load8! &4 	#X4
	load8! &2 	#X1
	add
	load8! &3 	#X2
	add
	load8! &1 	#AR
	add
	store8! &1 	#AR
	load8! &0 	#AR
	store8! &10
	jump! .L566.l_o74d3c4
.L524.l_o74d3c4:
	load4! &1 	#X1
	store8! &1 	#AR
	push! 2306405961448849409
	load8! &1 	#AR
	shift_ru
	not
	and! 0x1
	# CBRANCH - peep (modesize=1)
	and! 255
	# - EQ0
	jump_zero! .L526.l_o74d3c4
	# END CBRANCH
.L523.l_o74d3c4:
	load8! &5 	#X5
	add! 11
	store8! &1 	#AR
	load8! &0 	#AR
	store8! &10
	jump! .L566.l_o74d3c4
.L536.l_o74d3c4:
	load8! &5 	#X5
	add! 5
	load8! &1 	#AR
	add
	store8! &1 	#AR
	load8! &0 	#AR
	store8! &10
	jump! .L566.l_o74d3c4
.L538.l_o74d3c4:
	push! 0
	store8! &1 	#AR
	jump! .L530.l_o74d3c4
.L529.l_o74d3c4:
	load8! &2 	#X2
	add! 56
	load8
	#
	store8! &7 	#X6
	# CBRANCH EQ0
	load8! &6 	#X6
	jump_zero! .L540.l_o74d3c4
	# END CBRANCH
	load8! &6 	#X6
	add! 24
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L541.l_o74d3c4
	# END CBRANCH
	load8! &6 	#X6
	add! 32
	load4
	#
	add! 2
	and! 0xffffffff
	add! 18
	store8! &2 	#X1
.L531.l_o74d3c4:
	load8! &6 	#X6
	add! 40
	load8
	#
	store8! &8 	#X7
	# CBRANCH EQ0
	load8! &7 	#X7
	jump_zero! .L542.l_o74d3c4
	# END CBRANCH
	load8! &1 	#X1
	store8! &5 	#X4
.L533.l_o74d3c4:
	load8! &4 	#X4
	add! 1
	store8! &5 	#X4
	load8! &4 	#X4
	load8! &2 	#X1
	sub
	add! -1
	load8! &8 	#X7
	add
	load1
	# CBRANCH - peep (modesize=1)
	and! 255
	# - EQ0
	jump_not_zero! .L533.l_o74d3c4
	# END CBRANCH
.L532.l_o74d3c4:
	load8! &6 	#X6
	add! 56
	load8
	#
	store8! &8 	#X7
	# CBRANCH EQ0
	load8! &7 	#X7
	jump_zero! .L543.l_o74d3c4
	# END CBRANCH
	load8! &4 	#X4
	store8! &1 	#AR
.L535.l_o74d3c4:
	load8! &0 	#AR
	add! 1
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &5 	#X4
	sub
	add! -1
	load8! &8 	#X7
	add
	load1
	# CBRANCH - peep (modesize=1)
	and! 255
	# - EQ0
	jump_not_zero! .L535.l_o74d3c4
	# END CBRANCH
.L534.l_o74d3c4:
	load8! &6 	#X6
	add! 68
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L530.l_o74d3c4
	# END CBRANCH
	load8! &0 	#AR
	add! 2
	store8! &1 	#AR
	jump! .L530.l_o74d3c4
.L528.l_o74d3c4:
	load8! &2 	#X2
	add! 172
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L567.l_o74d3c4
	# END CBRANCH
	push! 10
	store8! &1 	#AR
	jump! .L530.l_o74d3c4
.L567.l_o74d3c4:
	push! 6
	store8! &1 	#AR
	jump! .L530.l_o74d3c4
.L541.l_o74d3c4:
	push! 18
	store8! &2 	#X1
	jump! .L531.l_o74d3c4
.L540.l_o74d3c4:
	push! 18
	store8! &1 	#AR
	jump! .L530.l_o74d3c4
.L543.l_o74d3c4:
	load8! &4 	#X4
	store8! &1 	#AR
	jump! .L534.l_o74d3c4
.L542.l_o74d3c4:
	load8! &1 	#X1
	store8! &5 	#X4
	jump! .L532.l_o74d3c4
.L566.l_o74d3c4:

	# epilogue
	set_sp! &8
	return

# FUNCTION ENDS:deflateBound

	#peephole zero_extend
	#peephole pop(deadreg)+ind push offset
	#peephole pop+cmp
	#peephole pop(deadreg)+ind push offset
	#peephole pop+cmp
	#peephole pop(deadreg)+ind push offset
	#peephole pop+cmp
	#peephole pop(deadreg)+ind push offset
	#peephole pop+cmp
	#peephole pop(deadreg)+ind push offset
	#peephole pop+cmp
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move+push+sub
	#peephole 1
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole move
	#peephole move+push(pushable)
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole move_dead
	#peephole move+push(pushable)
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole move_dead
	#peephole move+push(pushable)
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move+push+sub
	#peephole 1
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole zero_extend
	#peephole push+add+pop+push+ind pop
	#peephole pop+cmp
	#peephole 1
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move+push+sub
	#peephole 1
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop+cmp
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move+push+sub
	#peephole 1
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+ind push offset
	#peephole pop+cmp
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move+push+sub
	#peephole 1
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole pop+push+commut(di)
	#peephole zero_extend
	#peephole pop(deadreg)+ind push
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole 1
	#peephole push+add+pop+push+ind pop
	#peephole zero_extend
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole move_dead
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole 1
	#peephole push+add+pop+push+ind pop
	#peephole zero_extend
	#peephole 1
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole move
	#peephole move+push(pushable)
	#peephole zero_extend
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole pop+cmprev
	#peephole pop+cmprev
	#peephole pop+cmprev
	#peephole pop+cmprev
	#peephole pop+cmprev
	#peephole pop+cmprev
	#peephole pop+cmprev
	#peephole pop+cmprev
	#peephole pop+push+commut(di)
	#peephole pop+cmprev
	#peephole pop+cmprev
	#peephole pop+push+commut(di)
	#peephole pop+cmprev
	#peephole zero_extend
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move+push+sub
	#peephole 1
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop+cmp
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move+push+sub
	#peephole 1
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+ind push offset
	#peephole pop+cmp
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move+push+sub
	#peephole 1
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole pop+push+commut(di)
	#peephole zero_extend
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole 1
	#peephole push+add+pop+push+ind pop
	#peephole zero_extend
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+pushdi
	#peephole move_dead
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move+push+sub
	#peephole 1
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move+push+sub
	#peephole 1
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole pop+cmprev
	#peephole pop(deadreg)+ind push offset
	#peephole 1
	#peephole move
	#peephole move+push(pushable)
	#peephole pop+push+sub
	#peephole move_dead
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+ind push offset
	#peephole pop(deadreg)+ind push offset
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+push
	#peephole push+add+pop+push+ind pop
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move+push+sub
	#peephole 1
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole 1
	#peephole move
	#peephole move+push(pushable)
	#peephole pop+push+sub
	#peephole move_dead
	#peephole push+pop+deadreg+binop
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole 1
	#peephole move
	#peephole move+push(pushable)
	#peephole pop+push+sub
	#peephole move_dead
	#peephole push+pop+deadreg+binop
	#peephole pop+cmp
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+push
	#peephole push+add+pop+push+ind pop
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move+push+sub
	#peephole 1
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole 1
	#peephole move
	#peephole move+push(pushable)
	#peephole pop+push+sub
	#peephole move_dead
	#peephole push+pop+deadreg+binop
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole 1
	#peephole move
	#peephole move+push(pushable)
	#peephole pop+push+sub
	#peephole move_dead
	#peephole push+pop+deadreg+binop
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop+cmp
	#peephole move_dead
	#peephole move+push+sub
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole pop(deadreg)+ind push offset
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move+push+sub
	#peephole 1
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move_dead
	#peephole move
	#peephole move+push+sub
	#peephole move_dead
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole move
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+ind push offset
	#peephole pop+cmp
	#peephole pop(deadreg)+pushdi
	#peephole move_dead
	#peephole move
	#peephole move+push(pushable)
	#peephole pop+push+sub
	#peephole move_dead
	#peephole zero_extend
	#peephole move_dead
	#peephole pop+cmp
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole pop(deadreg)+ind push offset
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole push+add+pop+push+ind pop
	#peephole pop(deadreg)+ind push offset
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole pop+cmp
	#peephole pop(deadreg)+push
	#peephole push+add+pop+push+ind pop
	#peephole pop(deadreg)+ind push offset
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole pop(deadreg)+ind push offset
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole pop(deadreg)+ind push offset
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole pop(deadreg)+ind push offset
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole pop+cmp
	#peephole 1
	#peephole pop+cmp
	#peephole 1
	#peephole pop+cmp
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move+push+sub
	#peephole 1
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole push+add+pop+push+ind pop
	#peephole pop(deadreg)+push
	#peephole push+add+pop+push+ind pop
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole push+add+pop+push+ind pop
	#peephole pop(deadreg)+push
	#peephole push+add+pop+push+ind pop
	#peephole pop(deadreg)+push
	#peephole push+add+pop+push+ind pop
	#peephole pop(deadreg)+push
	#peephole push+add+pop+push+ind pop
	#peephole pop(deadreg)+push
	#peephole push+add+pop+push+ind pop
	#peephole pop(deadreg)+push
	#peephole push+add+pop+push+ind pop
	#peephole pop(deadreg)+push
	#peephole push+add+pop+push+ind pop
	#peephole pop(deadreg)+push
	#peephole push+add+pop+push+ind pop
	#peephole pop+cmp
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move+push+sub
	#peephole 1
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole push+pop+deadreg+binop
	#peephole move
	#peephole move+push(pushable)
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+sub
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole pop+cmp
	#peephole 1
	#peephole pop+cmp
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move
	#peephole move+push(pushable)
	#peephole pop+cmp
	#peephole move
	#peephole move+push(pushable)
	#peephole 1
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move+push+sub
	#peephole 1
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole pop+cmp
	#peephole move
	#peephole move+push(pushable)
	#peephole pop+cmp
	#peephole move
	#peephole move+push(pushable)
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole zero_extend
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole pop+cmprev
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+cmp
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+push(deadreg)+sign_extend
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+pushdi
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+cmp
	#peephole redundant blockage insn
	#peephole push+add+pop+push+ind pop
	#peephole redundant blockage insn
	#peephole push+add+pop+push+ind pop
	#peephole push+add+pop+push+ind pop
	#peephole push+add+pop+push+ind pop
	#peephole push+add+pop+push+ind pop
	#peephole push+add+pop+push+ind pop
	#peephole push+add+pop+push+ind pop
	#peephole push+add+pop+push+ind pop
	#peephole push+add+pop+push+ind pop
	#peephole push+add+pop+push+ind pop
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole zero_extend
	#peephole redundant blockage insn
	#peephole zero_extend
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+push+sub
	#peephole redundant blockage insn
	#peephole zero_extend
	#peephole redundant blockage insn
	#peephole zero_extend
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole push+add+pop+push+ind pop
	#peephole push+add+pop+push+ind pop
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole push+add+pop+push+ind pop
	#peephole push+add+pop+push+ind pop
	#peephole push+add+pop+push+ind pop
	#peephole push+add+pop+push+ind pop
	#peephole push+add+pop+push+ind pop
	#peephole push+add+pop+push+ind pop
	#peephole push+add+pop+push+ind pop
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole push+add+pop+push+ind pop
	#peephole push+add+pop+push+ind pop
	#peephole redundant blockage insn
	#peephole push+add+pop+push+ind pop
	#peephole push+add+pop+push+ind pop
	#peephole push+add+pop+push+ind pop
	#peephole push+add+pop+push+ind pop
	#peephole redundant blockage insn
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole and+popsi

# FUNCTION BEGINS:deflate
	EXPORT	deflate
deflate:
	# prologue (11 GPRs)

	set_sp! &-11

	load8! &12
	store8! &4 	#X3
	load4! &13
	store8! &6 	#X5
	# CBRANCH EQ0
	load8! &3 	#X3
	jump_zero! .L749.l_o74d3c4
	# END CBRANCH
	load8! &3 	#X3
	add! 64
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L750.l_o74d3c4
	# END CBRANCH
	load8! &3 	#X3
	add! 72
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L751.l_o74d3c4
	# END CBRANCH
	load8! &3 	#X3
	add! 56
	load8
	#
	store8! &3 	#X2
	# CBRANCH EQ0
	load8! &2 	#X2
	jump_zero! .L752.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ
	load8! &4 	#X3
	xor
	jump_zero! .L920.l_o74d3c4
	# END CBRANCH
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &13
	jump! .L921.l_o74d3c4
.L920.l_o74d3c4:
	load8! &2 	#X2
	add! 8
	load4
	#
	store8! &1 	#AR
	load8! &0 	#AR
	add! -42
	store8! &2 	#X1
	# CBRANCH
	push! 61
	load4! &2 	#X1
	lt_u
	jump_zero! .L570.l_o74d3c4
	# END CBRANCH
	# CBRANCH EQ
	load4! &0 	#AR
	push! 113
	xor
	jump_zero! .L572.l_o74d3c4
	# END CBRANCH
	# CBRANCH
	load4! &0 	#AR
	push! 666
	xor
	push! 1
	lt_u
	jump_zero! .L755.l_o74d3c4
	# END CBRANCH
.L572.l_o74d3c4:
	# CBRANCH
	push! 5
	load4! &6 	#X5
	lt_u
	not
	jump_zero! .L756.l_o74d3c4
	# END CBRANCH
	load8! &3 	#X3
	add! 24
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L573.l_o74d3c4
	# END CBRANCH
	load8! &3 	#X3
	add! 8
	load4
	#
	store8! &2 	#X1
	# CBRANCH EQ0
	load4! &1 	#X1
	jump_zero! .L574.l_o74d3c4
	# END CBRANCH
	load8! &3 	#X3
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L573.l_o74d3c4
	# END CBRANCH
.L574.l_o74d3c4:
	# CBRANCH EQ
	load4! &0 	#AR
	push! 666
	xor
	jump_zero! .L922.l_o74d3c4
	# END CBRANCH
.L575.l_o74d3c4:
	load8! &3 	#X3
	add! 32
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L923.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	add! 76
	load4
	#
	store8! &5 	#X4
	load4! &5 	#X5
	load8! &3 	#X2
	add! 76
	store4
	#
	load8! &2 	#X2
	add! 40
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_not_zero! .L924.l_o74d3c4
	# END CBRANCH
	# CBRANCH EQ0
	load4! &1 	#X1
	jump_not_zero! .L581.l_o74d3c4
	# END CBRANCH
	load8! &5 	#X5
	load8! &6 	#X5
	add
	store8! &7 	#X6
	# CBRANCH
	load4! &5 	#X5
	push! 5
	xor
	push! 1
	lt_u
	jump_zero! .L582.l_o74d3c4
	# END CBRANCH
	push! 1
	store8! &7 	#X6
.L582.l_o74d3c4:
	load8! &4 	#X4
	load8! &5 	#X4
	add
	store8! &2 	#X1
	# CBRANCH
	push! 4
	add! -2147483648
	load4! &5 	#X4
	add! -2147483648
	lt_u
	jump_zero! .L583.l_o74d3c4
	# END CBRANCH
	load8! &1 	#X1
	add! -9
	store8! &2 	#X1
.L583.l_o74d3c4:
	# CBRANCH
	load4! &1 	#X1
	add! -2147483648
	load4! &7 	#X6
	add! -2147483648
	lt_u
	not
	jump_zero! .L584.l_o74d3c4
	# END CBRANCH
	# CBRANCH
	load4! &5 	#X5
	push! 4
	xor
	push! 1
	lt_u
	jump_zero! .L925.l_o74d3c4
	# END CBRANCH
.L584.l_o74d3c4:
	# CBRANCH
	load4! &0 	#AR
	push! 666
	xor
	push! 1
	lt_u
	jump_zero! .L585.l_o74d3c4
	# END CBRANCH
	load8! &3 	#X3
	add! 8
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_not_zero! .L747.l_o74d3c4
	# END CBRANCH
.L586.l_o74d3c4:
	load8! &3 	#X3
	add! 8
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_not_zero! .L662.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	add! 180
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_not_zero! .L662.l_o74d3c4
	# END CBRANCH
	# CBRANCH EQ0
	load4! &5 	#X5
	jump_zero! .L728.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	add! 8
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ
	push! 666
	xor
	jump_zero! .L664.l_o74d3c4
	# END CBRANCH
.L662.l_o74d3c4:
	load8! &2 	#X2
	add! 196
	load4
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_zero! .L926.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	add! 200
	load4
	#
	store8! &2 	#X1
	# CBRANCH EQ
	load4! &1 	#X1
	push! 2
	xor
	jump_zero! .L678.l_o74d3c4
	# END CBRANCH
	# CBRANCH EQ
	load4! &1 	#X1
	push! 3
	xor
	jump_zero! .L715.l_o74d3c4
	# END CBRANCH
	load4! &0 	#AR
	sigx4
	shift_l! 4
	add! configuration_table.s_o74d3c4
	add! 8
	load8
	store8! &1 	#AR
	load4! &5 	#X5
	load8! &3 	#X2
	load8! &2 	#AR
	call
	store8! &2

	store8! &0 #set_sp! &1
.L666.l_o74d3c4:
	load8! &0 	#AR
	add! -2
	store8! &2 	#X1
	# CBRANCH
	push! 1
	load4! &2 	#X1
	lt_u
	jump_zero! .L927.l_o74d3c4
	# END CBRANCH
	load8! &0 	#AR
	and! 0xfffffffffffffffd
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_not_zero! .L915.l_o74d3c4
	# END CBRANCH
.L684.l_o74d3c4:
	load8! &3 	#X3
	add! 32
	load4
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_not_zero! .L728.l_o74d3c4
	# END CBRANCH
	push! -1
	load8! &3 	#X2
	add! 76
	store4
	#
	load4! &0 	#AR
	store4! &13
	jump! .L921.l_o74d3c4
.L570.l_o74d3c4:
	load4! &1 	#X1
	store8! &2 	#X1
	push! 2306405961448849409
	load8! &2 	#X1
	shift_ru
	not
	and! 0x1
	# CBRANCH - peep (modesize=1)
	and! 255
	# - EQ0
	jump_zero! .L572.l_o74d3c4
	# END CBRANCH
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &13
	jump! .L921.l_o74d3c4
.L752.l_o74d3c4:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &13
	jump! .L921.l_o74d3c4
.L922.l_o74d3c4:
	# CBRANCH EQ
	load4! &5 	#X5
	push! 4
	xor
	jump_zero! .L575.l_o74d3c4
	# END CBRANCH
.L573.l_o74d3c4:
	load8! (+ z_errmsg 32)
	load8! &4 	#X3
	add! 48
	store8
	#
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &13
	jump! .L921.l_o74d3c4
.L927.l_o74d3c4:
	push! 666
	load8! &3 	#X2
	add! 8
	store4
	#
	# CBRANCH EQ
	load4! &0 	#AR
	push! 2
	xor
	jump_zero! .L684.l_o74d3c4
	# END CBRANCH
.L664.l_o74d3c4:
	# CBRANCH EQ
	load4! &5 	#X5
	push! 4
	xor
	jump_zero! .L685.l_o74d3c4
	# END CBRANCH
.L728.l_o74d3c4:
	push! 0
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &13
	jump! .L921.l_o74d3c4
.L581.l_o74d3c4:
	# CBRANCH EQ
	load4! &0 	#AR
	push! 666
	xor
	jump_zero! .L747.l_o74d3c4
	# END CBRANCH
.L585.l_o74d3c4:
	# CBRANCH
	load4! &0 	#AR
	push! 42
	xor
	push! 1
	lt_u
	jump_zero! .L587.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	add! 84
	load4
	#
	add! -8
	shift_l! 4
	add! 8
	shift_l! 8
	store8! &1 	#AR
	load8! &2 	#X2
	add! 200
	load4
	#
	store8! &2 	#X1
	# CBRANCH
	push! 1
	add! -2147483648
	load4! &2 	#X1
	add! -2147483648
	lt_u
	jump_zero! .L928.l_o74d3c4
	# END CBRANCH
.L588.l_o74d3c4:
	load8! &2 	#X2
	add! 172
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L591.l_o74d3c4
	# END CBRANCH
	load8! &0 	#AR
	or! 0x20
	store8! &1 	#AR
.L591.l_o74d3c4:
	load4! &0 	#AR
	rem_u! 31
	store8! &5 	#X4
	load8! &0 	#AR
	add! 31
	store8! &2 	#X1
	load8! &4 	#X4
	load8! &2 	#X1
	sub
	neg
	store8! &1 	#AR
	load4! &0 	#AR
	shift_ru! 8
	store8! &5 	#X4
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &7 	#X6
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &2 	#X1
	load8! &1 	#X1
	add! 1
	load8! &3 	#X2
	add! 40
	store8
	#
	load1! &4 	#X4
	load8! &7 	#X6
	load8! &3 	#X1
	add
	store1
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &5 	#X4
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &2 	#X1
	load8! &1 	#X1
	add! 1
	load8! &3 	#X2
	add! 40
	store8
	#
	load1! &0 	#AR
	load8! &5 	#X4
	load8! &3 	#X1
	add
	store1
	load8! &2 	#X2
	add! 172
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L592.l_o74d3c4
	# END CBRANCH
	load8! &3 	#X3
	add! 96
	load8
	#
	shift_ru! 16
	store8! &2 	#X1
	load4! &1 	#X1
	shift_ru! 8
	store8! &5 	#X4
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &7 	#X6
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &1 	#AR
	load8! &0 	#AR
	add! 1
	load8! &3 	#X2
	add! 40
	store8
	#
	load1! &4 	#X4
	load8! &7 	#X6
	load8! &2 	#AR
	add
	store1
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &5 	#X4
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &1 	#AR
	load8! &0 	#AR
	add! 1
	load8! &3 	#X2
	add! 40
	store8
	#
	load1! &1 	#X1
	load8! &5 	#X4
	load8! &2 	#AR
	add
	store1
	load8! &3 	#X3
	add! 96
	load8
	#
	and! 0xffff
	store8! &1 	#AR
	load4! &0 	#AR
	shift_ru! 8
	store8! &5 	#X4
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &7 	#X6
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &2 	#X1
	load8! &1 	#X1
	add! 1
	load8! &3 	#X2
	add! 40
	store8
	#
	load1! &4 	#X4
	load8! &7 	#X6
	load8! &3 	#X1
	add
	store1
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &5 	#X4
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &2 	#X1
	load8! &1 	#X1
	add! 1
	load8! &3 	#X2
	add! 40
	store8
	#
	load1! &0 	#AR
	load8! &5 	#X4
	load8! &3 	#X1
	add
	store1
.L592.l_o74d3c4:
	push! 0
	push! 0
	push! 0
	call! adler32
	store8! &3

	set_sp! &2
	load8! &0 	#AR
	load8! &4 	#X3
	add! 96
	store8
	#
	push! 113
	load8! &3 	#X2
	add! 8
	store4
	#
	load8! &3 	#X3
	add! 56
	load8
	#
	store8! &7 	#X6
	load8! &6 	#X6
	call! _tr_flush_bits
	set_sp! (+ &0 8)
	

	load8! &6 	#X6
	add! 40
	load8
	#
	store8! &5 	#X4
	load8! &3 	#X3
	add! 32
	load4
	#
	store8! &1 	#AR
	# CBRANCH
	load4! &0 	#AR
	load4! &5 	#X4
	lt_u
	jump_zero! .L593.l_o74d3c4
	# END CBRANCH
	load4! &0 	#AR
	store8! &5 	#X4
.L593.l_o74d3c4:
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_zero! .L595.l_o74d3c4
	# END CBRANCH
	load4! &4 	#X4
	store8! &8 	#X7
	load8! &6 	#X6
	add! 32
	load8
	#
	store8! &2 	#X1
	load8! &3 	#X3
	add! 24
	load8
	#
	store8! &1 	#AR
	load8! &7 	#X7
	load8! &2 	#X1
	load8! &2 	#AR
	call! memcpy
	store8! &3

	set_sp! &2
	load8! &3 	#X3
	add! 24
	load8
	#
	load8! &8 	#X7
	add
	load8! &4 	#X3
	add! 24
	store8
	#
	load8! &6 	#X6
	add! 32
	load8
	#
	load8! &8 	#X7
	add
	load8! &7 	#X6
	add! 32
	store8
	#
	load8! &3 	#X3
	add! 40
	load8
	#
	load8! &8 	#X7
	add
	load8! &4 	#X3
	add! 40
	store8
	#
	load8! &3 	#X3
	add! 32
	load4
	#
	store8! &2 	#X1
	load8! &4 	#X4
	load8! &2 	#X1
	sub
	neg
	load8! &4 	#X3
	add! 32
	store4
	#
	load8! &6 	#X6
	add! 40
	load8
	#
	load8! &8 	#X7
	sub
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &7 	#X6
	add! 40
	store8
	#
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L929.l_o74d3c4
	# END CBRANCH
.L595.l_o74d3c4:
	load8! &2 	#X2
	add! 40
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_not_zero! .L597.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	add! 8
	load4
	#
	store8! &1 	#AR
.L587.l_o74d3c4:
	# CBRANCH EQ
	load4! &0 	#AR
	push! 57
	xor
	jump_zero! .L930.l_o74d3c4
	# END CBRANCH
.L598.l_o74d3c4:
	# CBRANCH EQ
	load4! &0 	#AR
	push! 69
	xor
	jump_zero! .L931.l_o74d3c4
	# END CBRANCH
	# CBRANCH EQ
	load4! &0 	#AR
	push! 73
	xor
	jump_zero! .L932.l_o74d3c4
	# END CBRANCH
	# CBRANCH EQ
	load4! &0 	#AR
	push! 91
	xor
	jump_zero! .L933.l_o74d3c4
	# END CBRANCH
	# CBRANCH
	load4! &0 	#AR
	push! 103
	xor
	push! 1
	lt_u
	jump_zero! .L586.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	add! 56
	load8
	#
	add! 68
	load4
	store8! &1 	#AR
.L652.l_o74d3c4:
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_zero! .L651.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &1 	#AR
	load8! &0 	#AR
	add! 2
	store8! &5 	#X4
	load8! &2 	#X2
	add! 24
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - reverse 
	load8! &5 	#X4
	lt_u
	jump_zero! .L653.l_o74d3c4
	# END CBRANCH
	load8! &3 	#X3
	add! 56
	load8
	#
	store8! &7 	#X6
	load8! &6 	#X6
	call! _tr_flush_bits
	set_sp! (+ &0 8)
	

	load8! &6 	#X6
	add! 40
	load8
	#
	store8! &5 	#X4
	load8! &3 	#X3
	add! 32
	load4
	#
	store8! &1 	#AR
	# CBRANCH
	load4! &0 	#AR
	load4! &5 	#X4
	lt_u
	jump_zero! .L654.l_o74d3c4
	# END CBRANCH
	load4! &0 	#AR
	store8! &5 	#X4
.L654.l_o74d3c4:
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_zero! .L656.l_o74d3c4
	# END CBRANCH
	load4! &4 	#X4
	store8! &8 	#X7
	load8! &6 	#X6
	add! 32
	load8
	#
	store8! &2 	#X1
	load8! &3 	#X3
	add! 24
	load8
	#
	store8! &1 	#AR
	load8! &7 	#X7
	load8! &2 	#X1
	load8! &2 	#AR
	call! memcpy
	store8! &3

	set_sp! &2
	load8! &3 	#X3
	add! 24
	load8
	#
	load8! &8 	#X7
	add
	load8! &4 	#X3
	add! 24
	store8
	#
	load8! &6 	#X6
	add! 32
	load8
	#
	load8! &8 	#X7
	add
	load8! &7 	#X6
	add! 32
	store8
	#
	load8! &3 	#X3
	add! 40
	load8
	#
	load8! &8 	#X7
	add
	load8! &4 	#X3
	add! 40
	store8
	#
	load8! &3 	#X3
	add! 32
	load4
	#
	store8! &2 	#X1
	load8! &4 	#X4
	load8! &2 	#X1
	sub
	neg
	load8! &4 	#X3
	add! 32
	store4
	#
	load8! &6 	#X6
	add! 40
	load8
	#
	load8! &8 	#X7
	sub
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &7 	#X6
	add! 40
	store8
	#
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_not_zero! .L656.l_o74d3c4
	# END CBRANCH
	load8! &6 	#X6
	add! 16
	load8
	#
	load8! &7 	#X6
	add! 32
	store8
	#
.L656.l_o74d3c4:
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_not_zero! .L934.l_o74d3c4
	# END CBRANCH
.L653.l_o74d3c4:
	load8! &3 	#X3
	add! 96
	load8
	#
	store8! &2 	#X1
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &5 	#X4
	load8! &0 	#AR
	add! 1
	load8! &3 	#X2
	add! 40
	store8
	#
	load1! &1 	#X1
	load8! &5 	#X4
	load8! &2 	#AR
	add
	store1
	load8! &3 	#X3
	add! 96
	load8
	#
	shift_ru! 8
	store8! &2 	#X1
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &5 	#X4
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &1 	#AR
	load8! &0 	#AR
	add! 1
	load8! &3 	#X2
	add! 40
	store8
	#
	load1! &1 	#X1
	load8! &5 	#X4
	load8! &2 	#AR
	add
	store1
	push! 0
	push! 0
	push! 0
	call! crc32
	store8! &3

	set_sp! &2
	load8! &0 	#AR
	load8! &4 	#X3
	add! 96
	store8
	#
.L651.l_o74d3c4:
	push! 113
	load8! &3 	#X2
	add! 8
	store4
	#
	load8! &3 	#X3
	add! 56
	load8
	#
	store8! &7 	#X6
	load8! &6 	#X6
	call! _tr_flush_bits
	set_sp! (+ &0 8)
	

	load8! &6 	#X6
	add! 40
	load8
	#
	store8! &5 	#X4
	load8! &3 	#X3
	add! 32
	load4
	#
	store8! &1 	#AR
	# CBRANCH
	load4! &0 	#AR
	load4! &5 	#X4
	lt_u
	not
	jump_zero! .L935.l_o74d3c4
	# END CBRANCH
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_not_zero! .L936.l_o74d3c4
	# END CBRANCH
.L660.l_o74d3c4:
	load8! &2 	#X2
	add! 40
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L586.l_o74d3c4
	# END CBRANCH
.L965.l_o74d3c4:
	push! -1
	load8! &3 	#X2
	add! 76
	store4
	#
	push! 0
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &13
	jump! .L921.l_o74d3c4
.L928.l_o74d3c4:
	load8! &2 	#X2
	add! 196
	load4
	#
	store8! &2 	#X1
	# CBRANCH
	push! 1
	add! -2147483648
	load4! &2 	#X1
	add! -2147483648
	lt_u
	jump_zero! .L588.l_o74d3c4
	# END CBRANCH
	# CBRANCH
	push! 5
	add! -2147483648
	load4! &2 	#X1
	add! -2147483648
	lt_u
	not
	jump_zero! .L589.l_o74d3c4
	# END CBRANCH
	load8! &0 	#AR
	or! 0x40
	store8! &1 	#AR
	jump! .L588.l_o74d3c4
.L930.l_o74d3c4:
	push! 0
	push! 0
	push! 0
	call! crc32
	store8! &3

	set_sp! &2
	load8! &0 	#AR
	load8! &4 	#X3
	add! 96
	store8
	#
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &2 	#X1
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &1 	#AR
	load8! &0 	#AR
	add! 1
	load8! &3 	#X2
	add! 40
	store8
	#
	push! 31
	load8! &2 	#X1
	load8! &2 	#AR
	add
	store1
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &2 	#X1
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &1 	#AR
	load8! &0 	#AR
	add! 1
	load8! &3 	#X2
	add! 40
	store8
	#
	push! -117
	load8! &2 	#X1
	load8! &2 	#AR
	add
	store1
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &2 	#X1
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &1 	#AR
	load8! &0 	#AR
	add! 1
	load8! &3 	#X2
	add! 40
	store8
	#
	push! 8
	load8! &2 	#X1
	load8! &2 	#AR
	add
	store1
	load8! &2 	#X2
	add! 56
	load8
	#
	store8! &2 	#X1
	# CBRANCH EQ0
	load8! &1 	#X1
	jump_zero! .L937.l_o74d3c4
	# END CBRANCH
	load8! &1 	#X1
	load4
	#
	and! 0x0ffffffff
	neg
	shift_ru! 63
	store8! &1 	#AR
	load8! &1 	#X1
	add! 68
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L606.l_o74d3c4
	# END CBRANCH
	load8! &0 	#AR
	add! 2
	store8! &1 	#AR
.L606.l_o74d3c4:
	load8! &1 	#X1
	add! 24
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L607.l_o74d3c4
	# END CBRANCH
	load8! &0 	#AR
	add! 4
	store8! &1 	#AR
.L607.l_o74d3c4:
	load8! &1 	#X1
	add! 40
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L608.l_o74d3c4
	# END CBRANCH
	load8! &0 	#AR
	add! 8
	store8! &1 	#AR
.L608.l_o74d3c4:
	load8! &1 	#X1
	add! 56
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L609.l_o74d3c4
	# END CBRANCH
	load8! &0 	#AR
	add! 16
	store8! &1 	#AR
.L609.l_o74d3c4:
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &5 	#X4
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &2 	#X1
	load8! &1 	#X1
	add! 1
	load8! &3 	#X2
	add! 40
	store8
	#
	load1! &0 	#AR
	load8! &5 	#X4
	load8! &3 	#X1
	add
	store1
	load8! &2 	#X2
	add! 56
	load8
	#
	add! 8
	load8
	store8! &2 	#X1
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &5 	#X4
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &1 	#AR
	load8! &0 	#AR
	add! 1
	load8! &3 	#X2
	add! 40
	store8
	#
	load1! &1 	#X1
	load8! &5 	#X4
	load8! &2 	#AR
	add
	store1
	load8! &2 	#X2
	add! 56
	load8
	#
	add! 8
	load8
	shift_ru! 8
	store8! &2 	#X1
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &5 	#X4
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &1 	#AR
	load8! &0 	#AR
	add! 1
	load8! &3 	#X2
	add! 40
	store8
	#
	load1! &1 	#X1
	load8! &5 	#X4
	load8! &2 	#AR
	add
	store1
	load8! &2 	#X2
	add! 56
	load8
	#
	add! 8
	load8
	shift_ru! 16
	store8! &2 	#X1
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &5 	#X4
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &1 	#AR
	load8! &0 	#AR
	add! 1
	load8! &3 	#X2
	add! 40
	store8
	#
	load1! &1 	#X1
	load8! &5 	#X4
	load8! &2 	#AR
	add
	store1
	load8! &2 	#X2
	add! 56
	load8
	#
	add! 8
	load8
	shift_ru! 24
	store8! &2 	#X1
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &5 	#X4
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &1 	#AR
	load8! &0 	#AR
	add! 1
	load8! &3 	#X2
	add! 40
	store8
	#
	load1! &1 	#X1
	load8! &5 	#X4
	load8! &2 	#AR
	add
	store1
	load8! &2 	#X2
	add! 196
	load4
	#
	store8! &1 	#AR
	# CBRANCH EQ
	load4! &0 	#AR
	push! 9
	xor
	jump_zero! .L763.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	add! 200
	load4
	#
	store8! &2 	#X1
	# CBRANCH
	push! 1
	add! -2147483648
	load4! &2 	#X1
	add! -2147483648
	lt_u
	jump_zero! .L938.l_o74d3c4
	# END CBRANCH
	push! 4
	store8! &2 	#X1
.L610.l_o74d3c4:
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &5 	#X4
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &1 	#AR
	load8! &0 	#AR
	add! 1
	load8! &3 	#X2
	add! 40
	store8
	#
	load1! &1 	#X1
	load8! &5 	#X4
	load8! &2 	#AR
	add
	store1
	load8! &2 	#X2
	add! 56
	load8
	#
	add! 20
	load4
	store8! &2 	#X1
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &5 	#X4
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &1 	#AR
	load8! &0 	#AR
	add! 1
	load8! &3 	#X2
	add! 40
	store8
	#
	load1! &1 	#X1
	load8! &5 	#X4
	load8! &2 	#AR
	add
	store1
	load8! &2 	#X2
	add! 56
	load8
	#
	store8! &1 	#AR
	load8! &0 	#AR
	add! 24
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L611.l_o74d3c4
	# END CBRANCH
	load8! &0 	#AR
	add! 32
	load4
	#
	store8! &2 	#X1
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &5 	#X4
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &1 	#AR
	load8! &0 	#AR
	add! 1
	load8! &3 	#X2
	add! 40
	store8
	#
	load1! &1 	#X1
	load8! &5 	#X4
	load8! &2 	#AR
	add
	store1
	load8! &2 	#X2
	add! 56
	load8
	#
	add! 32
	load4
	and! 0x0ffffffff
	shift_ru! 8
	store8! &2 	#X1
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &5 	#X4
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &1 	#AR
	load8! &0 	#AR
	add! 1
	load8! &3 	#X2
	add! 40
	store8
	#
	load1! &1 	#X1
	load8! &5 	#X4
	load8! &2 	#AR
	add
	store1
	load8! &2 	#X2
	add! 56
	load8
	#
	store8! &1 	#AR
.L611.l_o74d3c4:
	load8! &0 	#AR
	add! 68
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_not_zero! .L939.l_o74d3c4
	# END CBRANCH
	push! 0
	load8! &3 	#X2
	add! 64
	store8
	#
	push! 69
	load8! &3 	#X2
	add! 8
	store4
	#
.L613.l_o74d3c4:
	load8! &0 	#AR
	add! 24
	load8
	#
	store8! &2 	#X1
	# CBRANCH EQ0
	load8! &1 	#X1
	jump_zero! .L615.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &8 	#X7
	load8! &0 	#AR
	add! 32
	load4
	#
	and! 0xffff
	store8! &5 	#X4
	load8! &2 	#X2
	add! 64
	load8
	#
	store8! &7 	#X6
	load4! &6 	#X6
	load8! &5 	#X4
	sub
	neg
	store8! &9 	#X8
	load4! &8 	#X8
	store8! &5 	#X4
	load8! &7 	#X7
	load8! &5 	#X4
	add
	store8! &10 	#X9
	load8! &2 	#X2
	add! 24
	load8
	#
	store8! &1 	#AR
	# CBRANCH
	load8! &0 	#AR
	load8! &10 	#X9
	lt_u
	jump_zero! .L616.l_o74d3c4
	# END CBRANCH
.L623.l_o74d3c4:
	load4! &0 	#AR
	store8! &11 	#X10
	load4! &7 	#X7
	store8! &10 	#X9
	load8! &9 	#X9
	load8! &11 	#X10
	sub
	neg
	and! 0xffffffff
	store8! &5 	#X4
	load8! &1 	#X1
	load8! &7 	#X6
	add
	store8! &2 	#X1
	load8! &2 	#X2
	add! 16
	load8
	#
	load8! &8 	#X7
	add
	store8! &1 	#AR
	load8! &4 	#X4
	load8! &2 	#X1
	load8! &2 	#AR
	call! memcpy
	store8! &3

	set_sp! &2
	load8! &2 	#X2
	add! 24
	load8
	#
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &3 	#X2
	add! 40
	store8
	#
	load8! &2 	#X2
	add! 56
	load8
	#
	add! 68
	load4
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L617.l_o74d3c4
	# END CBRANCH
	# CBRANCH
	load8! &7 	#X7
	load8! &1 	#AR
	lt_u
	not
	jump_zero! .L940.l_o74d3c4
	# END CBRANCH
.L617.l_o74d3c4:
	load8! &2 	#X2
	add! 64
	load8
	#
	load8! &5 	#X4
	add
	load8! &3 	#X2
	add! 64
	store8
	#
	load8! &3 	#X3
	add! 56
	load8
	#
	store8! &7 	#X6
	load8! &6 	#X6
	call! _tr_flush_bits
	set_sp! (+ &0 8)
	

	load8! &6 	#X6
	add! 40
	load8
	#
	store8! &5 	#X4
	load8! &3 	#X3
	add! 32
	load4
	#
	store8! &1 	#AR
	# CBRANCH
	load4! &0 	#AR
	load4! &5 	#X4
	lt_u
	jump_zero! .L618.l_o74d3c4
	# END CBRANCH
	load4! &0 	#AR
	store8! &5 	#X4
.L618.l_o74d3c4:
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_zero! .L620.l_o74d3c4
	# END CBRANCH
	load4! &4 	#X4
	store8! &8 	#X7
	load8! &6 	#X6
	add! 32
	load8
	#
	store8! &2 	#X1
	load8! &3 	#X3
	add! 24
	load8
	#
	store8! &1 	#AR
	load8! &7 	#X7
	load8! &2 	#X1
	load8! &2 	#AR
	call! memcpy
	store8! &3

	set_sp! &2
	load8! &3 	#X3
	add! 24
	load8
	#
	load8! &8 	#X7
	add
	load8! &4 	#X3
	add! 24
	store8
	#
	load8! &6 	#X6
	add! 32
	load8
	#
	load8! &8 	#X7
	add
	load8! &7 	#X6
	add! 32
	store8
	#
	load8! &3 	#X3
	add! 40
	load8
	#
	load8! &8 	#X7
	add
	load8! &4 	#X3
	add! 40
	store8
	#
	load8! &3 	#X3
	add! 32
	load4
	#
	store8! &2 	#X1
	load8! &4 	#X4
	load8! &2 	#X1
	sub
	neg
	load8! &4 	#X3
	add! 32
	store4
	#
	load8! &6 	#X6
	add! 40
	load8
	#
	load8! &8 	#X7
	sub
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &7 	#X6
	add! 40
	store8
	#
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_not_zero! .L620.l_o74d3c4
	# END CBRANCH
	load8! &6 	#X6
	add! 16
	load8
	#
	load8! &7 	#X6
	add! 32
	store8
	#
.L620.l_o74d3c4:
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &8 	#X7
	# CBRANCH EQ0
	load8! &7 	#X7
	jump_not_zero! .L941.l_o74d3c4
	# END CBRANCH
	load8! &10 	#X10
	load8! &10 	#X9
	sub
	neg
	store8! &1 	#AR
	load8! &8 	#X8
	load8! &1 	#AR
	add
	store8! &9 	#X8
	load4! &8 	#X8
	store8! &5 	#X4
	load8! &2 	#X2
	add! 24
	load8
	#
	store8! &1 	#AR
	load8! &2 	#X2
	add! 56
	load8
	#
	add! 24
	load8
	store8! &2 	#X1
	load8! &2 	#X2
	add! 64
	load8
	#
	store8! &7 	#X6
	# CBRANCH
	load8! &0 	#AR
	load8! &5 	#X4
	lt_u
	not
	jump_zero! .L623.l_o74d3c4
	# END CBRANCH
.L616.l_o74d3c4:
	load8! &1 	#X1
	load8! &7 	#X6
	add
	store8! &2 	#X1
	load8! &2 	#X2
	add! 16
	load8
	#
	load8! &8 	#X7
	add
	store8! &1 	#AR
	load8! &4 	#X4
	load8! &2 	#X1
	load8! &2 	#AR
	call! memcpy
	store8! &3

	set_sp! &2
	load8! &2 	#X2
	add! 40
	load8
	#
	load8! &5 	#X4
	add
	store8! &2 	#X1
	load8! &1 	#X1
	load8! &3 	#X2
	add! 40
	store8
	#
	load8! &2 	#X2
	add! 56
	load8
	#
	store8! &1 	#AR
	load8! &0 	#AR
	add! 68
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L624.l_o74d3c4
	# END CBRANCH
	# CBRANCH
	load8! &7 	#X7
	load8! &2 	#X1
	lt_u
	not
	jump_zero! .L942.l_o74d3c4
	# END CBRANCH
.L624.l_o74d3c4:
	push! 0
	load8! &3 	#X2
	add! 64
	store8
	#
.L615.l_o74d3c4:
	push! 73
	load8! &3 	#X2
	add! 8
	store4
	#
.L625.l_o74d3c4:
	load8! &0 	#AR
	add! 40
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L627.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &8 	#X7
	load8! &7 	#X7
	store8! &2 	#X1
	load8! &2 	#X2
	add! 24
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ
	load8! &2 	#X1
	xor
	jump_zero! .L943.l_o74d3c4
	# END CBRANCH
.L628.l_o74d3c4:
	load8! &0 	#AR
	add! 40
	load8
	#
	store8! &5 	#X4
	load8! &2 	#X2
	add! 64
	load8
	#
	store8! &1 	#AR
	load8! &0 	#AR
	add! 1
	load8! &3 	#X2
	add! 64
	store8
	#
	load8! &4 	#X4
	load8! &1 	#AR
	add
	load1
	store8! &1 	#AR
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &5 	#X4
	load8! &1 	#X1
	add! 1
	load8! &3 	#X2
	add! 40
	store8
	#
	load1! &0 	#AR
	load8! &5 	#X4
	load8! &3 	#X1
	add
	store1
	# CBRANCH EQ0
	load1! &0 	#AR
	jump_zero! .L635.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &2 	#X1
	load8! &2 	#X2
	add! 56
	load8
	#
	store8! &1 	#AR
	load8! &2 	#X2
	add! 24
	load8
	#
	# CBRANCH - peep (modesize=8)
	load8! &2 	#X1
	xor
	push! 1
	lt_u
	jump_zero! .L628.l_o74d3c4
	# END CBRANCH
	jump! .L943.l_o74d3c4
.L671.l_o74d3c4:
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_not_zero! .L668.l_o74d3c4
	# END CBRANCH
.L946.l_o74d3c4:
	load8! &2 	#X2
	call! fill_window.s_o74d3c4
	set_sp! (+ &0 8)
	

	load8! &2 	#X2
	add! 180
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L944.l_o74d3c4
	# END CBRANCH
.L668.l_o74d3c4:
	push! 0
	load8! &3 	#X2
	add! 160
	store4
	#
	load8! &2 	#X2
	add! 96
	load8
	#
	store8! &2 	#X1
	load8! &2 	#X2
	add! 172
	load4
	#
	and! 0x0ffffffff
	load8! &2 	#X1
	add
	load1
	store8! &2 	#X1
	load8! &2 	#X2
	add! 13984
	load8
	#
	store8! &8 	#X7
	load8! &2 	#X2
	add! 13980
	load4
	#
	store8! &5 	#X4
	load4! &4 	#X4
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	load8! &8 	#X7
	add
	store8! &7 	#X6
	push! 0
	load8! &7 	#X6
	store2
	#
	load8! &2 	#X2
	add! 13968
	load8
	#
	store8! &7 	#X6
	load8! &4 	#X4
	add! 1
	load8! &3 	#X2
	add! 13980
	store4
	#
	load1! &1 	#X1
	load8! &7 	#X6
	load8! &2 	#AR
	add
	store1
	load1! &1 	#X1
	store8! &1 	#AR
	load4! &0 	#AR
	sigx4
	shift_l! 4
	load8! &3 	#X2
	add
	add! 216
	load2
	add! 1
	store8! &2 	#X1
	load4! &0 	#AR
	sigx4
	shift_l! 4
	load8! &3 	#X2
	add
	add! 216
	store8! &1 	#AR
	load2! &1 	#X1
	load8! &1 	#AR
	store2
	#
	load8! &2 	#X2
	add! 13980
	load4
	#
	store8! &7 	#X6
	load8! &2 	#X2
	add! 13976
	load4
	#
	add! -1
	store8! &5 	#X4
	load8! &2 	#X2
	add! 180
	load4
	#
	add! -1
	store8! &1 	#AR
	load4! &0 	#AR
	load8! &3 	#X2
	add! 180
	store4
	#
	load8! &2 	#X2
	add! 172
	load4
	#
	add! 1
	store8! &2 	#X1
	load4! &1 	#X1
	load8! &3 	#X2
	add! 172
	store4
	#
	# CBRANCH
	load4! &6 	#X6
	load4! &5 	#X4
	xor
	push! 1
	lt_u
	jump_zero! .L671.l_o74d3c4
	# END CBRANCH
	load4! &1 	#X1
	store8! &2 	#X1
	load8! &2 	#X2
	add! 152
	load8
	#
	store8! &1 	#AR
	load8! &1 	#X1
	load8! &1 	#AR
	sub
	store8! &2 	#X1
	# CBRANCH
	load8! &0 	#AR
	add! -9223372036854775808
	push! 0
	add! -9223372036854775808
	lt_u
	jump_zero! .L945.l_o74d3c4
	# END CBRANCH
	push! 0
	store8! &1 	#AR
.L672.l_o74d3c4:
	push! 0
	load8! &2 	#X1
	load8! &2 	#AR
	load8! &5 	#X2
	call! _tr_flush_block
	set_sp! (+ &0 32)
	

	load8! &2 	#X2
	add! 172
	load4
	#
	and! 0x0ffffffff
	load8! &3 	#X2
	add! 152
	store8
	#
	load8! &2 	#X2
	load8
	#
	store8! &7 	#X6
	load8! &6 	#X6
	add! 56
	load8
	#
	store8! &8 	#X7
	load8! &7 	#X7
	call! _tr_flush_bits
	set_sp! (+ &0 8)
	

	load8! &7 	#X7
	add! 40
	load8
	#
	store8! &5 	#X4
	load8! &6 	#X6
	add! 32
	load4
	#
	store8! &1 	#AR
	# CBRANCH
	load4! &0 	#AR
	load4! &5 	#X4
	lt_u
	jump_zero! .L673.l_o74d3c4
	# END CBRANCH
	load4! &0 	#AR
	store8! &5 	#X4
.L673.l_o74d3c4:
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_zero! .L675.l_o74d3c4
	# END CBRANCH
	load4! &4 	#X4
	store8! &9 	#X8
	load8! &7 	#X7
	add! 32
	load8
	#
	store8! &2 	#X1
	load8! &6 	#X6
	add! 24
	load8
	#
	store8! &1 	#AR
	load8! &8 	#X8
	load8! &2 	#X1
	load8! &2 	#AR
	call! memcpy
	store8! &3

	set_sp! &2
	load8! &6 	#X6
	add! 24
	load8
	#
	load8! &9 	#X8
	add
	load8! &7 	#X6
	add! 24
	store8
	#
	load8! &7 	#X7
	add! 32
	load8
	#
	load8! &9 	#X8
	add
	load8! &8 	#X7
	add! 32
	store8
	#
	load8! &6 	#X6
	add! 40
	load8
	#
	load8! &9 	#X8
	add
	load8! &7 	#X6
	add! 40
	store8
	#
	load8! &6 	#X6
	add! 32
	load4
	#
	store8! &2 	#X1
	load8! &4 	#X4
	load8! &2 	#X1
	sub
	neg
	load8! &7 	#X6
	add! 32
	store4
	#
	load8! &7 	#X7
	add! 40
	load8
	#
	load8! &9 	#X8
	sub
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &8 	#X7
	add! 40
	store8
	#
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_not_zero! .L675.l_o74d3c4
	# END CBRANCH
	load8! &7 	#X7
	add! 16
	load8
	#
	load8! &8 	#X7
	add! 32
	store8
	#
.L675.l_o74d3c4:
	load8! &2 	#X2
	load8
	#
	add! 32
	load4
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L684.l_o74d3c4
	# END CBRANCH
.L678.l_o74d3c4:
	load8! &2 	#X2
	add! 180
	load4
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_not_zero! .L668.l_o74d3c4
	# END CBRANCH
	jump! .L946.l_o74d3c4
.L709.l_o74d3c4:
	# CBRANCH
	push! 258
	load4! &1 	#AR
	lt_u
	not
	jump_zero! .L694.l_o74d3c4
	# END CBRANCH
.L947.l_o74d3c4:
	load8! &2 	#X2
	call! fill_window.s_o74d3c4
	set_sp! (+ &0 8)
	

	load8! &2 	#X2
	add! 180
	load4
	#
	store8! &1 	#AR
	# CBRANCH
	push! 258
	load4! &1 	#AR
	lt_u
	not
	jump_zero! .L694.l_o74d3c4
	# END CBRANCH
	# CBRANCH EQ0
	load4! &5 	#X5
	jump_zero! .L684.l_o74d3c4
	# END CBRANCH
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_zero! .L695.l_o74d3c4
	# END CBRANCH
	push! 0
	load8! &3 	#X2
	add! 160
	store4
	#
	load8! &2 	#X2
	add! 172
	load4
	#
	store8! &2 	#X1
	load8! &2 	#X2
	add! 96
	load8
	#
	store8! &7 	#X6
	load4! &1 	#X1
	store8! &5 	#X4
	# CBRANCH
	push! 2
	load4! &1 	#AR
	lt_u
	not
	jump_zero! .L748.l_o74d3c4
	# END CBRANCH
.L696.l_o74d3c4:
	load8! &6 	#X6
	load8! &5 	#X4
	add
	load1
	store8! &2 	#X1
	load8! &2 	#X2
	add! 13984
	load8
	#
	store8! &8 	#X7
	load8! &2 	#X2
	add! 13980
	load4
	#
	store8! &5 	#X4
	load4! &4 	#X4
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	load8! &8 	#X7
	add
	store8! &7 	#X6
	push! 0
	load8! &7 	#X6
	store2
	#
	load8! &2 	#X2
	add! 13968
	load8
	#
	store8! &7 	#X6
	load8! &4 	#X4
	add! 1
	load8! &3 	#X2
	add! 13980
	store4
	#
	load1! &1 	#X1
	load8! &7 	#X6
	load8! &2 	#AR
	add
	store1
	load1! &1 	#X1
	store8! &1 	#AR
	load4! &0 	#AR
	sigx4
	shift_l! 4
	load8! &3 	#X2
	add
	add! 216
	load2
	add! 1
	store8! &2 	#X1
	load4! &0 	#AR
	sigx4
	shift_l! 4
	load8! &3 	#X2
	add
	add! 216
	store8! &1 	#AR
	load2! &1 	#X1
	load8! &1 	#AR
	store2
	#
	load8! &2 	#X2
	add! 13980
	load4
	#
	store8! &1 	#AR
	load8! &2 	#X2
	add! 13976
	load4
	#
	add! -1
	load8! &1 	#AR
	xor
	and! 0xffffffff
	add! -1
	shift_ru! 63
	and! 0xff
	store8! &5 	#X4
	load8! &2 	#X2
	add! 180
	load4
	#
	add! -1
	store8! &1 	#AR
	load4! &0 	#AR
	load8! &3 	#X2
	add! 180
	store4
	#
	load8! &2 	#X2
	add! 172
	load4
	#
	add! 1
	store8! &2 	#X1
	load4! &1 	#X1
	load8! &3 	#X2
	add! 172
	store4
	#
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_zero! .L709.l_o74d3c4
	# END CBRANCH
.L954.l_o74d3c4:
	load4! &1 	#X1
	store8! &2 	#X1
	load8! &2 	#X2
	add! 152
	load8
	#
	store8! &1 	#AR
	load8! &1 	#X1
	load8! &1 	#AR
	sub
	store8! &2 	#X1
	# CBRANCH
	load8! &0 	#AR
	add! -9223372036854775808
	push! 0
	add! -9223372036854775808
	lt_u
	not
	jump_zero! .L769.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	add! 96
	load8
	#
	store8! &5 	#X4
	load8! &0 	#AR
	and! 0xffffffff
	load8! &5 	#X4
	add
	store8! &1 	#AR
.L710.l_o74d3c4:
	push! 0
	load8! &2 	#X1
	load8! &2 	#AR
	load8! &5 	#X2
	call! _tr_flush_block
	set_sp! (+ &0 32)
	

	load8! &2 	#X2
	add! 172
	load4
	#
	and! 0x0ffffffff
	load8! &3 	#X2
	add! 152
	store8
	#
	load8! &2 	#X2
	load8
	#
	store8! &5 	#X4
	load8! &4 	#X4
	add! 56
	load8
	#
	store8! &8 	#X7
	load8! &7 	#X7
	call! _tr_flush_bits
	set_sp! (+ &0 8)
	

	load8! &7 	#X7
	add! 40
	load8
	#
	store8! &7 	#X6
	load8! &4 	#X4
	add! 32
	load4
	#
	store8! &1 	#AR
	# CBRANCH
	load4! &0 	#AR
	load4! &7 	#X6
	lt_u
	jump_zero! .L711.l_o74d3c4
	# END CBRANCH
	load4! &0 	#AR
	store8! &7 	#X6
.L711.l_o74d3c4:
	# CBRANCH EQ0
	load4! &6 	#X6
	jump_zero! .L713.l_o74d3c4
	# END CBRANCH
	load4! &6 	#X6
	store8! &9 	#X8
	load8! &7 	#X7
	add! 32
	load8
	#
	store8! &2 	#X1
	load8! &4 	#X4
	add! 24
	load8
	#
	store8! &1 	#AR
	load8! &8 	#X8
	load8! &2 	#X1
	load8! &2 	#AR
	call! memcpy
	store8! &3

	set_sp! &2
	load8! &4 	#X4
	add! 24
	load8
	#
	load8! &9 	#X8
	add
	load8! &5 	#X4
	add! 24
	store8
	#
	load8! &7 	#X7
	add! 32
	load8
	#
	load8! &9 	#X8
	add
	load8! &8 	#X7
	add! 32
	store8
	#
	load8! &4 	#X4
	add! 40
	load8
	#
	load8! &9 	#X8
	add
	load8! &5 	#X4
	add! 40
	store8
	#
	load8! &4 	#X4
	add! 32
	load4
	#
	store8! &2 	#X1
	load8! &6 	#X6
	load8! &2 	#X1
	sub
	neg
	load8! &5 	#X4
	add! 32
	store4
	#
	load8! &7 	#X7
	add! 40
	load8
	#
	load8! &9 	#X8
	sub
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &8 	#X7
	add! 40
	store8
	#
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_not_zero! .L713.l_o74d3c4
	# END CBRANCH
	load8! &7 	#X7
	add! 16
	load8
	#
	load8! &8 	#X7
	add! 32
	store8
	#
.L713.l_o74d3c4:
	load8! &2 	#X2
	load8
	#
	add! 32
	load4
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L684.l_o74d3c4
	# END CBRANCH
.L715.l_o74d3c4:
	load8! &2 	#X2
	add! 180
	load4
	#
	store8! &1 	#AR
	# CBRANCH
	push! 258
	load4! &1 	#AR
	lt_u
	jump_zero! .L947.l_o74d3c4
	# END CBRANCH
.L694.l_o74d3c4:
	push! 0
	load8! &3 	#X2
	add! 160
	store4
	#
	load8! &2 	#X2
	add! 172
	load4
	#
	store8! &2 	#X1
	load8! &2 	#X2
	add! 96
	load8
	#
	store8! &7 	#X6
	load4! &1 	#X1
	store8! &5 	#X4
.L748.l_o74d3c4:
	# CBRANCH EQ0
	load4! &1 	#X1
	jump_zero! .L696.l_o74d3c4
	# END CBRANCH
	load8! &4 	#X4
	add! -1
	load8! &7 	#X6
	add
	store8! &2 	#X1
	load8! &1 	#X1
	load1
	#
	store8! &8 	#X7
	load8! &1 	#X1
	add! 1
	load1
	#
	# CBRANCH - peep (modesize=1)
	and! 255
	# - reverse 
	load1! &8 	#X7
	xor
	push! 1
	lt_u
	jump_zero! .L696.l_o74d3c4
	# END CBRANCH
	load8! &1 	#X1
	add! 2
	load1
	#
	# CBRANCH - peep (modesize=1)
	and! 255
	# - reverse 
	load1! &8 	#X7
	xor
	push! 1
	lt_u
	jump_zero! .L696.l_o74d3c4
	# END CBRANCH
	load8! &1 	#X1
	add! 3
	load1
	#
	# CBRANCH - peep (modesize=1)
	and! 255
	# - reverse 
	load1! &8 	#X7
	xor
	push! 1
	lt_u
	jump_zero! .L696.l_o74d3c4
	# END CBRANCH
	load8! &1 	#X1
	add! 3
	store8! &2 	#X1
	load8! &4 	#X4
	add! 258
	load8! &7 	#X6
	add
	store8! &10 	#X9
.L705.l_o74d3c4:
	load8! &1 	#X1
	add! 1
	load1
	#
	# CBRANCH - peep (modesize=1)
	and! 255
	# - reverse 
	load1! &8 	#X7
	xor
	push! 1
	lt_u
	jump_zero! .L697.l_o74d3c4
	# END CBRANCH
	load8! &1 	#X1
	add! 2
	load1
	#
	# CBRANCH - peep (modesize=1)
	and! 255
	# - reverse 
	load1! &8 	#X7
	xor
	push! 1
	lt_u
	jump_zero! .L948.l_o74d3c4
	# END CBRANCH
	load8! &1 	#X1
	add! 3
	load1
	#
	# CBRANCH - peep (modesize=1)
	and! 255
	# - reverse 
	load1! &8 	#X7
	xor
	push! 1
	lt_u
	jump_zero! .L949.l_o74d3c4
	# END CBRANCH
	load8! &1 	#X1
	add! 4
	load1
	#
	# CBRANCH - peep (modesize=1)
	and! 255
	# - reverse 
	load1! &8 	#X7
	xor
	push! 1
	lt_u
	jump_zero! .L950.l_o74d3c4
	# END CBRANCH
	load8! &1 	#X1
	add! 5
	load1
	#
	# CBRANCH - peep (modesize=1)
	and! 255
	# - reverse 
	load1! &8 	#X7
	xor
	push! 1
	lt_u
	jump_zero! .L951.l_o74d3c4
	# END CBRANCH
	load8! &1 	#X1
	add! 6
	load1
	#
	# CBRANCH - peep (modesize=1)
	and! 255
	# - reverse 
	load1! &8 	#X7
	xor
	push! 1
	lt_u
	jump_zero! .L952.l_o74d3c4
	# END CBRANCH
	load8! &1 	#X1
	add! 7
	load1
	#
	# CBRANCH - peep (modesize=1)
	and! 255
	# - reverse 
	load1! &8 	#X7
	xor
	push! 1
	lt_u
	jump_zero! .L953.l_o74d3c4
	# END CBRANCH
	load8! &1 	#X1
	add! 8
	store8! &2 	#X1
	load8! &1 	#X1
	load1
	#
	# CBRANCH - peep (modesize=1)
	and! 255
	# - reverse 
	load1! &8 	#X7
	xor
	push! 1
	lt_u
	jump_zero! .L699.l_o74d3c4
	# END CBRANCH
	# CBRANCH
	load8! &1 	#X1
	load8! &10 	#X9
	lt_u
	not
	jump_zero! .L705.l_o74d3c4
	# END CBRANCH
.L699.l_o74d3c4:
	load8! &9 	#X9
	load8! &2 	#X1
	sub
	sub! 258
	neg
	store8! &2 	#X1
	load4! &1 	#X1
	load8! &3 	#X2
	add! 160
	store4
	#
	# CBRANCH
	load4! &0 	#AR
	load4! &2 	#X1
	lt_u
	jump_zero! .L706.l_o74d3c4
	# END CBRANCH
	load4! &0 	#AR
	load8! &3 	#X2
	add! 160
	store4
	#
	load4! &0 	#AR
	store8! &2 	#X1
	load1! &1 	#X1
	add! -3
	store8! &2 	#X1
	load8! &2 	#X2
	add! 13984
	load8
	#
	store8! &8 	#X7
	load8! &2 	#X2
	add! 13980
	load4
	#
	store8! &5 	#X4
	load4! &4 	#X4
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	load8! &8 	#X7
	add
	store8! &7 	#X6
	push! 1
	load8! &7 	#X6
	store2
	#
	load8! &2 	#X2
	add! 13968
	load8
	#
	store8! &7 	#X6
	load8! &4 	#X4
	add! 1
	load8! &3 	#X2
	add! 13980
	store4
	#
	load1! &1 	#X1
	load8! &7 	#X6
	load8! &2 	#AR
	add
	store1
	load1! &1 	#X1
	sigx4
	add! _length_code
	load1
	and! 0x0ff
	add! 257
	store8! &1 	#AR
	load4! &0 	#AR
	sigx4
	shift_l! 4
	load8! &3 	#X2
	add
	add! 216
	load2
	add! 1
	store8! &2 	#X1
	load4! &0 	#AR
	sigx4
	shift_l! 4
	load8! &3 	#X2
	add
	add! 216
	store8! &1 	#AR
	load2! &1 	#X1
	load8! &1 	#AR
	store2
	#
	load1! _dist_code
	store8! &1 	#AR
	load4! &0 	#AR
	sigx4
	shift_l! 4
	load8! &3 	#X2
	add
	add! 9384
	load2
	add! 1
	store8! &2 	#X1
	load4! &0 	#AR
	sigx4
	shift_l! 4
	load8! &3 	#X2
	add
	add! 9384
	store8! &1 	#AR
	load2! &1 	#X1
	load8! &1 	#AR
	store2
	#
	load8! &2 	#X2
	add! 13980
	load4
	#
	store8! &1 	#AR
	load8! &2 	#X2
	add! 13976
	load4
	#
	add! -1
	load8! &1 	#AR
	xor
	and! 0xffffffff
	add! -1
	shift_ru! 63
	and! 0xff
	store8! &5 	#X4
	load8! &2 	#X2
	add! 180
	load4
	#
	store8! &7 	#X6
	load8! &2 	#X2
	add! 160
	load4
	#
	store8! &2 	#X1
	load8! &1 	#X1
	load8! &7 	#X6
	sub
	neg
	store8! &1 	#AR
	load4! &0 	#AR
	load8! &3 	#X2
	add! 180
	store4
	#
	load8! &2 	#X2
	add! 172
	load4
	#
	load8! &2 	#X1
	add
	store8! &2 	#X1
	load4! &1 	#X1
	load8! &3 	#X2
	add! 172
	store4
	#
	push! 0
	load8! &3 	#X2
	add! 160
	store4
	#
.L969.l_o74d3c4:
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_zero! .L709.l_o74d3c4
	# END CBRANCH
	jump! .L954.l_o74d3c4
.L749.l_o74d3c4:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &13
	jump! .L921.l_o74d3c4
.L924.l_o74d3c4:
	load8! &2 	#X2
	call! _tr_flush_bits
	set_sp! (+ &0 8)
	

	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &5 	#X4
	load8! &3 	#X3
	add! 32
	load4
	#
	store8! &1 	#AR
	# CBRANCH
	load4! &0 	#AR
	load4! &5 	#X4
	lt_u
	jump_zero! .L578.l_o74d3c4
	# END CBRANCH
	load4! &0 	#AR
	store8! &5 	#X4
.L578.l_o74d3c4:
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_zero! .L579.l_o74d3c4
	# END CBRANCH
	load4! &4 	#X4
	store8! &7 	#X6
	load8! &2 	#X2
	add! 32
	load8
	#
	store8! &2 	#X1
	load8! &3 	#X3
	add! 24
	load8
	#
	store8! &1 	#AR
	load8! &6 	#X6
	load8! &2 	#X1
	load8! &2 	#AR
	call! memcpy
	store8! &3

	set_sp! &2
	load8! &3 	#X3
	add! 24
	load8
	#
	load8! &7 	#X6
	add
	load8! &4 	#X3
	add! 24
	store8
	#
	load8! &2 	#X2
	add! 32
	load8
	#
	load8! &7 	#X6
	add
	load8! &3 	#X2
	add! 32
	store8
	#
	load8! &3 	#X3
	add! 40
	load8
	#
	load8! &7 	#X6
	add
	load8! &4 	#X3
	add! 40
	store8
	#
	load8! &3 	#X3
	add! 32
	load4
	#
	store8! &2 	#X1
	load8! &4 	#X4
	load8! &2 	#X1
	sub
	neg
	store8! &1 	#AR
	load4! &0 	#AR
	load8! &4 	#X3
	add! 32
	store4
	#
	load8! &2 	#X2
	add! 40
	load8
	#
	load8! &7 	#X6
	sub
	store8! &2 	#X1
	load8! &1 	#X1
	load8! &3 	#X2
	add! 40
	store8
	#
	# CBRANCH EQ0
	load8! &1 	#X1
	jump_zero! .L955.l_o74d3c4
	# END CBRANCH
.L579.l_o74d3c4:
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_zero! .L956.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	add! 8
	load4
	#
	store8! &1 	#AR
	jump! .L584.l_o74d3c4
.L750.l_o74d3c4:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &13
	jump! .L921.l_o74d3c4
.L751.l_o74d3c4:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &13
	jump! .L921.l_o74d3c4
.L931.l_o74d3c4:
	load8! &2 	#X2
	add! 56
	load8
	#
	store8! &1 	#AR
	jump! .L613.l_o74d3c4
.L940.l_o74d3c4:
	load4! &0 	#AR
	store8! &2 	#X1
	load8! &9 	#X9
	load8! &2 	#X1
	sub
	neg
	store8! &7 	#X6
	load8! &2 	#X2
	add! 16
	load8
	#
	load8! &8 	#X7
	add
	store8! &2 	#X1
	load8! &3 	#X3
	add! 96
	load8
	#
	store8! &1 	#AR
	load4! &6 	#X6
	load8! &2 	#X1
	load8! &2 	#AR
	call! crc32
	store8! &3

	set_sp! &2
	load8! &0 	#AR
	load8! &4 	#X3
	add! 96
	store8
	#
	jump! .L617.l_o74d3c4
.L943.l_o74d3c4:
	load8! &0 	#AR
	add! 68
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L629.l_o74d3c4
	# END CBRANCH
	# CBRANCH
	load8! &7 	#X7
	load8! &2 	#X1
	lt_u
	not
	jump_zero! .L957.l_o74d3c4
	# END CBRANCH
.L629.l_o74d3c4:
	load8! &3 	#X3
	add! 56
	load8
	#
	store8! &7 	#X6
	load8! &6 	#X6
	call! _tr_flush_bits
	set_sp! (+ &0 8)
	

	load8! &6 	#X6
	add! 40
	load8
	#
	store8! &5 	#X4
	load8! &3 	#X3
	add! 32
	load4
	#
	store8! &1 	#AR
	# CBRANCH
	load4! &0 	#AR
	load4! &5 	#X4
	lt_u
	jump_zero! .L630.l_o74d3c4
	# END CBRANCH
	load4! &0 	#AR
	store8! &5 	#X4
.L630.l_o74d3c4:
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_zero! .L632.l_o74d3c4
	# END CBRANCH
	load4! &4 	#X4
	store8! &8 	#X7
	load8! &6 	#X6
	add! 32
	load8
	#
	store8! &2 	#X1
	load8! &3 	#X3
	add! 24
	load8
	#
	store8! &1 	#AR
	load8! &7 	#X7
	load8! &2 	#X1
	load8! &2 	#AR
	call! memcpy
	store8! &3

	set_sp! &2
	load8! &3 	#X3
	add! 24
	load8
	#
	load8! &8 	#X7
	add
	load8! &4 	#X3
	add! 24
	store8
	#
	load8! &6 	#X6
	add! 32
	load8
	#
	load8! &8 	#X7
	add
	load8! &7 	#X6
	add! 32
	store8
	#
	load8! &3 	#X3
	add! 40
	load8
	#
	load8! &8 	#X7
	add
	load8! &4 	#X3
	add! 40
	store8
	#
	load8! &3 	#X3
	add! 32
	load4
	#
	store8! &2 	#X1
	load8! &4 	#X4
	load8! &2 	#X1
	sub
	neg
	load8! &4 	#X3
	add! 32
	store4
	#
	load8! &6 	#X6
	add! 40
	load8
	#
	load8! &8 	#X7
	sub
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &7 	#X6
	add! 40
	store8
	#
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_not_zero! .L632.l_o74d3c4
	# END CBRANCH
	load8! &6 	#X6
	add! 16
	load8
	#
	load8! &7 	#X6
	add! 32
	store8
	#
.L632.l_o74d3c4:
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &2 	#X1
	# CBRANCH EQ0
	load8! &1 	#X1
	jump_not_zero! .L634.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	add! 56
	load8
	#
	store8! &1 	#AR
	push! 0
	store8! &8 	#X7
	jump! .L628.l_o74d3c4
.L957.l_o74d3c4:
	load4! &7 	#X7
	load8! &2 	#X1
	sub
	neg
	store8! &5 	#X4
	load8! &2 	#X2
	add! 16
	load8
	#
	load8! &8 	#X7
	add
	store8! &2 	#X1
	load8! &3 	#X3
	add! 96
	load8
	#
	store8! &1 	#AR
	load4! &4 	#X4
	load8! &2 	#X1
	load8! &2 	#AR
	call! crc32
	store8! &3

	set_sp! &2
	load8! &0 	#AR
	load8! &4 	#X3
	add! 96
	store8
	#
	jump! .L629.l_o74d3c4
.L635.l_o74d3c4:
	load8! &2 	#X2
	add! 56
	load8
	#
	store8! &1 	#AR
	load8! &0 	#AR
	add! 68
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L637.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &2 	#X1
	# CBRANCH
	load8! &7 	#X7
	load8! &2 	#X1
	lt_u
	jump_zero! .L637.l_o74d3c4
	# END CBRANCH
	load4! &7 	#X7
	load8! &2 	#X1
	sub
	neg
	store8! &5 	#X4
	load8! &2 	#X2
	add! 16
	load8
	#
	load8! &8 	#X7
	add
	store8! &2 	#X1
	load8! &3 	#X3
	add! 96
	load8
	#
	store8! &1 	#AR
	load4! &4 	#X4
	load8! &2 	#X1
	load8! &2 	#AR
	call! crc32
	store8! &3

	set_sp! &2
	load8! &0 	#AR
	load8! &4 	#X3
	add! 96
	store8
	#
	load8! &2 	#X2
	add! 56
	load8
	#
	store8! &1 	#AR
.L637.l_o74d3c4:
	push! 0
	load8! &3 	#X2
	add! 64
	store8
	#
.L627.l_o74d3c4:
	push! 91
	load8! &3 	#X2
	add! 8
	store4
	#
.L638.l_o74d3c4:
	load8! &0 	#AR
	add! 56
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L958.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &8 	#X7
	load8! &7 	#X7
	store8! &2 	#X1
	load8! &2 	#X2
	add! 24
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ
	load8! &2 	#X1
	xor
	jump_zero! .L959.l_o74d3c4
	# END CBRANCH
.L642.l_o74d3c4:
	load8! &0 	#AR
	add! 56
	load8
	#
	store8! &5 	#X4
	load8! &2 	#X2
	add! 64
	load8
	#
	store8! &1 	#AR
	load8! &0 	#AR
	add! 1
	load8! &3 	#X2
	add! 64
	store8
	#
	load8! &4 	#X4
	load8! &1 	#AR
	add
	load1
	store8! &1 	#AR
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &5 	#X4
	load8! &1 	#X1
	add! 1
	load8! &3 	#X2
	add! 40
	store8
	#
	load1! &0 	#AR
	load8! &5 	#X4
	load8! &3 	#X1
	add
	store1
	# CBRANCH EQ0
	load1! &0 	#AR
	jump_zero! .L649.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &2 	#X1
	load8! &2 	#X2
	add! 56
	load8
	#
	store8! &1 	#AR
	load8! &2 	#X2
	add! 24
	load8
	#
	# CBRANCH - peep (modesize=8)
	load8! &2 	#X1
	xor
	push! 1
	lt_u
	jump_zero! .L642.l_o74d3c4
	# END CBRANCH
.L959.l_o74d3c4:
	load8! &0 	#AR
	add! 68
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L643.l_o74d3c4
	# END CBRANCH
	# CBRANCH
	load8! &7 	#X7
	load8! &2 	#X1
	lt_u
	not
	jump_zero! .L960.l_o74d3c4
	# END CBRANCH
.L643.l_o74d3c4:
	load8! &3 	#X3
	add! 56
	load8
	#
	store8! &7 	#X6
	load8! &6 	#X6
	call! _tr_flush_bits
	set_sp! (+ &0 8)
	

	load8! &6 	#X6
	add! 40
	load8
	#
	store8! &5 	#X4
	load8! &3 	#X3
	add! 32
	load4
	#
	store8! &1 	#AR
	# CBRANCH
	load4! &0 	#AR
	load4! &5 	#X4
	lt_u
	jump_zero! .L644.l_o74d3c4
	# END CBRANCH
	load4! &0 	#AR
	store8! &5 	#X4
.L644.l_o74d3c4:
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_zero! .L646.l_o74d3c4
	# END CBRANCH
	load4! &4 	#X4
	store8! &8 	#X7
	load8! &6 	#X6
	add! 32
	load8
	#
	store8! &2 	#X1
	load8! &3 	#X3
	add! 24
	load8
	#
	store8! &1 	#AR
	load8! &7 	#X7
	load8! &2 	#X1
	load8! &2 	#AR
	call! memcpy
	store8! &3

	set_sp! &2
	load8! &3 	#X3
	add! 24
	load8
	#
	load8! &8 	#X7
	add
	load8! &4 	#X3
	add! 24
	store8
	#
	load8! &6 	#X6
	add! 32
	load8
	#
	load8! &8 	#X7
	add
	load8! &7 	#X6
	add! 32
	store8
	#
	load8! &3 	#X3
	add! 40
	load8
	#
	load8! &8 	#X7
	add
	load8! &4 	#X3
	add! 40
	store8
	#
	load8! &3 	#X3
	add! 32
	load4
	#
	store8! &2 	#X1
	load8! &4 	#X4
	load8! &2 	#X1
	sub
	neg
	load8! &4 	#X3
	add! 32
	store4
	#
	load8! &6 	#X6
	add! 40
	load8
	#
	load8! &8 	#X7
	sub
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &7 	#X6
	add! 40
	store8
	#
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_not_zero! .L646.l_o74d3c4
	# END CBRANCH
	load8! &6 	#X6
	add! 16
	load8
	#
	load8! &7 	#X6
	add! 32
	store8
	#
.L646.l_o74d3c4:
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &2 	#X1
	# CBRANCH EQ0
	load8! &1 	#X1
	jump_not_zero! .L648.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	add! 56
	load8
	#
	store8! &1 	#AR
	push! 0
	store8! &8 	#X7
	jump! .L642.l_o74d3c4
.L960.l_o74d3c4:
	load4! &7 	#X7
	load8! &2 	#X1
	sub
	neg
	store8! &5 	#X4
	load8! &2 	#X2
	add! 16
	load8
	#
	load8! &8 	#X7
	add
	store8! &2 	#X1
	load8! &3 	#X3
	add! 96
	load8
	#
	store8! &1 	#AR
	load4! &4 	#X4
	load8! &2 	#X1
	load8! &2 	#AR
	call! crc32
	store8! &3

	set_sp! &2
	load8! &0 	#AR
	load8! &4 	#X3
	add! 96
	store8
	#
	jump! .L643.l_o74d3c4
.L972.l_o74d3c4:
	load8! &2 	#X2
	add! 172
	load4
	#
	store8! &2 	#X1
	load8! &2 	#X2
	add! 152
	load8
	#
	store8! &1 	#AR
	load8! &1 	#X1
	load8! &1 	#AR
	sub
	store8! &2 	#X1
	# CBRANCH
	load8! &0 	#AR
	add! -9223372036854775808
	push! 0
	add! -9223372036854775808
	lt_u
	not
	jump_zero! .L770.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	add! 96
	load8
	#
	store8! &5 	#X4
	load8! &0 	#AR
	and! 0xffffffff
	load8! &5 	#X4
	add
	store8! &1 	#AR
.L717.l_o74d3c4:
	push! 1
	load8! &2 	#X1
	load8! &2 	#AR
	load8! &5 	#X2
	call! _tr_flush_block
	set_sp! (+ &0 32)
	

	load8! &2 	#X2
	add! 172
	load4
	#
	and! 0x0ffffffff
	load8! &3 	#X2
	add! 152
	store8
	#
	load8! &2 	#X2
	load8
	#
	store8! &5 	#X4
	load8! &4 	#X4
	add! 56
	load8
	#
	store8! &7 	#X6
	load8! &6 	#X6
	call! _tr_flush_bits
	set_sp! (+ &0 8)
	

	load8! &6 	#X6
	add! 40
	load8
	#
	store8! &6 	#X5
	load8! &4 	#X4
	add! 32
	load4
	#
	store8! &1 	#AR
	# CBRANCH
	load4! &0 	#AR
	load4! &6 	#X5
	lt_u
	jump_zero! .L718.l_o74d3c4
	# END CBRANCH
	load4! &0 	#AR
	store8! &6 	#X5
.L718.l_o74d3c4:
	# CBRANCH EQ0
	load4! &5 	#X5
	jump_zero! .L720.l_o74d3c4
	# END CBRANCH
	load4! &5 	#X5
	store8! &8 	#X7
	load8! &6 	#X6
	add! 32
	load8
	#
	store8! &2 	#X1
	load8! &4 	#X4
	add! 24
	load8
	#
	store8! &1 	#AR
	load8! &7 	#X7
	load8! &2 	#X1
	load8! &2 	#AR
	call! memcpy
	store8! &3

	set_sp! &2
	load8! &4 	#X4
	add! 24
	load8
	#
	load8! &8 	#X7
	add
	load8! &5 	#X4
	add! 24
	store8
	#
	load8! &6 	#X6
	add! 32
	load8
	#
	load8! &8 	#X7
	add
	load8! &7 	#X6
	add! 32
	store8
	#
	load8! &4 	#X4
	add! 40
	load8
	#
	load8! &8 	#X7
	add
	load8! &5 	#X4
	add! 40
	store8
	#
	load8! &4 	#X4
	add! 32
	load4
	#
	store8! &2 	#X1
	load8! &5 	#X5
	load8! &2 	#X1
	sub
	neg
	load8! &5 	#X4
	add! 32
	store4
	#
	load8! &6 	#X6
	add! 40
	load8
	#
	load8! &8 	#X7
	sub
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &7 	#X6
	add! 40
	store8
	#
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_not_zero! .L720.l_o74d3c4
	# END CBRANCH
	load8! &6 	#X6
	add! 16
	load8
	#
	load8! &7 	#X6
	add! 32
	store8
	#
.L720.l_o74d3c4:
	load8! &2 	#X2
	load8
	#
	add! 32
	load4
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L961.l_o74d3c4
	# END CBRANCH
	push! 666
	load8! &3 	#X2
	add! 8
	store4
	#
.L685.l_o74d3c4:
	load8! &2 	#X2
	add! 48
	load4
	#
	store8! &1 	#AR
	# CBRANCH
	push! 0
	add! -2147483648
	load4! &1 	#AR
	add! -2147483648
	lt_u
	jump_zero! .L962.l_o74d3c4
	# END CBRANCH
	load8! &3 	#X3
	add! 96
	load8
	#
	store8! &6 	#X5
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &7 	#X6
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &2 	#X1
	load8! &1 	#X1
	add! 1
	store8! &5 	#X4
	load8! &6 	#X6
	load8! &2 	#X1
	add
	store8! &2 	#X1
	# CBRANCH EQ
	load4! &0 	#AR
	push! 2
	xor
	jump_zero! .L963.l_o74d3c4
	# END CBRANCH
	load8! &5 	#X5
	shift_ru! 16
	store8! &1 	#AR
	load4! &0 	#AR
	shift_ru! 8
	store8! &6 	#X5
	load8! &4 	#X4
	load8! &3 	#X2
	add! 40
	store8
	#
	load1! &5 	#X5
	load8! &2 	#X1
	store1
	#
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &5 	#X4
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &2 	#X1
	load8! &1 	#X1
	add! 1
	load8! &3 	#X2
	add! 40
	store8
	#
	load1! &0 	#AR
	load8! &5 	#X4
	load8! &3 	#X1
	add
	store1
	load8! &3 	#X3
	add! 96
	load8
	#
	and! 0xffff
	store8! &1 	#AR
	load4! &0 	#AR
	shift_ru! 8
	store8! &5 	#X4
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &6 	#X5
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &2 	#X1
	load8! &1 	#X1
	add! 1
	load8! &3 	#X2
	add! 40
	store8
	#
	load1! &4 	#X4
	load8! &6 	#X5
	load8! &3 	#X1
	add
	store1
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &5 	#X4
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &2 	#X1
	load8! &1 	#X1
	add! 1
	load8! &3 	#X2
	add! 40
	store8
	#
	load1! &0 	#AR
	load8! &5 	#X4
	load8! &3 	#X1
	add
	store1
.L735.l_o74d3c4:
	load8! &3 	#X3
	add! 56
	load8
	#
	store8! &6 	#X5
	load8! &5 	#X5
	call! _tr_flush_bits
	set_sp! (+ &0 8)
	

	load8! &5 	#X5
	add! 40
	load8
	#
	store8! &5 	#X4
	load8! &3 	#X3
	add! 32
	load4
	#
	store8! &1 	#AR
	# CBRANCH
	load4! &0 	#AR
	load4! &5 	#X4
	lt_u
	jump_zero! .L736.l_o74d3c4
	# END CBRANCH
	load4! &0 	#AR
	store8! &5 	#X4
.L736.l_o74d3c4:
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_zero! .L738.l_o74d3c4
	# END CBRANCH
	load4! &4 	#X4
	store8! &7 	#X6
	load8! &5 	#X5
	add! 32
	load8
	#
	store8! &2 	#X1
	load8! &3 	#X3
	add! 24
	load8
	#
	store8! &1 	#AR
	load8! &6 	#X6
	load8! &2 	#X1
	load8! &2 	#AR
	call! memcpy
	store8! &3

	set_sp! &2
	load8! &3 	#X3
	add! 24
	load8
	#
	load8! &7 	#X6
	add
	load8! &4 	#X3
	add! 24
	store8
	#
	load8! &5 	#X5
	add! 32
	load8
	#
	load8! &7 	#X6
	add
	load8! &6 	#X5
	add! 32
	store8
	#
	load8! &3 	#X3
	add! 40
	load8
	#
	load8! &7 	#X6
	add
	load8! &4 	#X3
	add! 40
	store8
	#
	load8! &3 	#X3
	add! 32
	load4
	#
	store8! &2 	#X1
	load8! &4 	#X4
	load8! &2 	#X1
	sub
	neg
	load8! &4 	#X3
	add! 32
	store4
	#
	load8! &5 	#X5
	add! 40
	load8
	#
	load8! &7 	#X6
	sub
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &6 	#X5
	add! 40
	store8
	#
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_not_zero! .L738.l_o74d3c4
	# END CBRANCH
	load8! &5 	#X5
	add! 16
	load8
	#
	load8! &6 	#X5
	add! 32
	store8
	#
.L738.l_o74d3c4:
	load8! &2 	#X2
	add! 48
	load4
	#
	store8! &1 	#AR
	# CBRANCH
	push! 0
	add! -2147483648
	load4! &1 	#AR
	add! -2147483648
	lt_u
	jump_zero! .L740.l_o74d3c4
	# END CBRANCH
	load8! &0 	#AR
	neg
	load8! &3 	#X2
	add! 48
	store4
	#
.L740.l_o74d3c4:
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &2 	#X1
	push! 1
	store8! &1 	#AR
	# CBRANCH EQ0
	load8! &1 	#X1
	jump_zero! .L741.l_o74d3c4
	# END CBRANCH
	push! 0
	store8! &1 	#AR
.L741.l_o74d3c4:
	load1! &0 	#AR
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &13
	jump! .L921.l_o74d3c4
.L926.l_o74d3c4:
	load4! &5 	#X5
	load8! &3 	#X2
	call! deflate_stored.s_o74d3c4
	store8! &2

	store8! &0 #set_sp! &1
	jump! .L666.l_o74d3c4
.L649.l_o74d3c4:
	load8! &2 	#X2
	add! 56
	load8
	#
	add! 68
	load4
	store8! &1 	#AR
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_zero! .L651.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &2 	#X1
	# CBRANCH
	load8! &7 	#X7
	load8! &2 	#X1
	lt_u
	not
	jump_zero! .L964.l_o74d3c4
	# END CBRANCH
	push! 103
	load8! &3 	#X2
	add! 8
	store4
	#
	jump! .L652.l_o74d3c4
.L956.l_o74d3c4:
	push! -1
	load8! &3 	#X2
	add! 76
	store4
	#
	load4! &0 	#AR
	store4! &13
	jump! .L921.l_o74d3c4
.L597.l_o74d3c4:
	push! -1
	load8! &3 	#X2
	add! 76
	store4
	#
	push! 0
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &13
	jump! .L921.l_o74d3c4
.L935.l_o74d3c4:
	load4! &0 	#AR
	store8! &5 	#X4
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_zero! .L660.l_o74d3c4
	# END CBRANCH
.L936.l_o74d3c4:
	load4! &4 	#X4
	store8! &8 	#X7
	load8! &6 	#X6
	add! 32
	load8
	#
	store8! &2 	#X1
	load8! &3 	#X3
	add! 24
	load8
	#
	store8! &1 	#AR
	load8! &7 	#X7
	load8! &2 	#X1
	load8! &2 	#AR
	call! memcpy
	store8! &3

	set_sp! &2
	load8! &3 	#X3
	add! 24
	load8
	#
	load8! &8 	#X7
	add
	load8! &4 	#X3
	add! 24
	store8
	#
	load8! &6 	#X6
	add! 32
	load8
	#
	load8! &8 	#X7
	add
	load8! &7 	#X6
	add! 32
	store8
	#
	load8! &3 	#X3
	add! 40
	load8
	#
	load8! &8 	#X7
	add
	load8! &4 	#X3
	add! 40
	store8
	#
	load8! &3 	#X3
	add! 32
	load4
	#
	store8! &2 	#X1
	load8! &4 	#X4
	load8! &2 	#X1
	sub
	neg
	load8! &4 	#X3
	add! 32
	store4
	#
	load8! &6 	#X6
	add! 40
	load8
	#
	load8! &8 	#X7
	sub
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &7 	#X6
	add! 40
	store8
	#
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_not_zero! .L660.l_o74d3c4
	# END CBRANCH
	load8! &6 	#X6
	add! 16
	load8
	#
	load8! &7 	#X6
	add! 32
	store8
	#
	load8! &2 	#X2
	add! 40
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L586.l_o74d3c4
	# END CBRANCH
	jump! .L965.l_o74d3c4
.L945.l_o74d3c4:
	load8! &2 	#X2
	add! 96
	load8
	#
	store8! &5 	#X4
	load8! &0 	#AR
	and! 0xffffffff
	load8! &5 	#X4
	add
	store8! &1 	#AR
	jump! .L672.l_o74d3c4
.L915.l_o74d3c4:
	# CBRANCH
	load4! &0 	#AR
	push! 1
	xor
	push! 1
	lt_u
	jump_zero! .L664.l_o74d3c4
	# END CBRANCH
.L721.l_o74d3c4:
	# CBRANCH EQ
	load4! &5 	#X5
	push! 1
	xor
	jump_zero! .L966.l_o74d3c4
	# END CBRANCH
	# CBRANCH EQ
	load4! &5 	#X5
	push! 5
	xor
	jump_zero! .L729.l_o74d3c4
	# END CBRANCH
	push! 0
	push! 0
	push! 0
	load8! &5 	#X2
	call! _tr_stored_block
	set_sp! (+ &0 32)
	

	# CBRANCH EQ
	load4! &5 	#X5
	push! 3
	xor
	jump_zero! .L967.l_o74d3c4
	# END CBRANCH
.L729.l_o74d3c4:
	load8! &3 	#X3
	add! 56
	load8
	#
	store8! &7 	#X6
	load8! &6 	#X6
	call! _tr_flush_bits
	set_sp! (+ &0 8)
	

	load8! &6 	#X6
	add! 40
	load8
	#
	store8! &5 	#X4
	load8! &3 	#X3
	add! 32
	load4
	#
	store8! &1 	#AR
	# CBRANCH
	load4! &0 	#AR
	load4! &5 	#X4
	lt_u
	jump_zero! .L732.l_o74d3c4
	# END CBRANCH
	load4! &0 	#AR
	store8! &5 	#X4
.L732.l_o74d3c4:
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_zero! .L733.l_o74d3c4
	# END CBRANCH
	load4! &4 	#X4
	store8! &8 	#X7
	load8! &6 	#X6
	add! 32
	load8
	#
	store8! &2 	#X1
	load8! &3 	#X3
	add! 24
	load8
	#
	store8! &1 	#AR
	load8! &7 	#X7
	load8! &2 	#X1
	load8! &2 	#AR
	call! memcpy
	store8! &3

	set_sp! &2
	load8! &3 	#X3
	add! 24
	load8
	#
	load8! &8 	#X7
	add
	load8! &4 	#X3
	add! 24
	store8
	#
	load8! &6 	#X6
	add! 32
	load8
	#
	load8! &8 	#X7
	add
	load8! &7 	#X6
	add! 32
	store8
	#
	load8! &3 	#X3
	add! 40
	load8
	#
	load8! &8 	#X7
	add
	load8! &4 	#X3
	add! 40
	store8
	#
	load8! &3 	#X3
	add! 32
	load4
	#
	store8! &2 	#X1
	load8! &4 	#X4
	load8! &2 	#X1
	sub
	neg
	store8! &1 	#AR
	load4! &0 	#AR
	load8! &4 	#X3
	add! 32
	store4
	#
	load8! &6 	#X6
	add! 40
	load8
	#
	load8! &8 	#X7
	sub
	store8! &2 	#X1
	load8! &1 	#X1
	load8! &7 	#X6
	add! 40
	store8
	#
	# CBRANCH EQ0
	load8! &1 	#X1
	jump_not_zero! .L733.l_o74d3c4
	# END CBRANCH
	load8! &6 	#X6
	add! 16
	load8
	#
	load8! &7 	#X6
	add! 32
	store8
	#
.L733.l_o74d3c4:
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_not_zero! .L664.l_o74d3c4
	# END CBRANCH
	push! -1
	load8! &3 	#X2
	add! 76
	store4
	#
	load4! &0 	#AR
	store4! &13
	jump! .L921.l_o74d3c4
.L955.l_o74d3c4:
	load8! &2 	#X2
	add! 16
	load8
	#
	load8! &3 	#X2
	add! 32
	store8
	#
	jump! .L579.l_o74d3c4
.L929.l_o74d3c4:
	load8! &6 	#X6
	add! 16
	load8
	#
	load8! &7 	#X6
	add! 32
	store8
	#
	jump! .L595.l_o74d3c4
.L944.l_o74d3c4:
	# CBRANCH EQ0
	load4! &5 	#X5
	jump_zero! .L684.l_o74d3c4
	# END CBRANCH
	push! 0
	load8! &3 	#X2
	add! 14012
	store4
	#
	# CBRANCH EQ
	load4! &5 	#X5
	push! 4
	xor
	jump_zero! .L968.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	add! 13980
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L721.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	add! 172
	load4
	#
	store8! &2 	#X1
	load8! &2 	#X2
	add! 152
	load8
	#
	store8! &1 	#AR
	load8! &1 	#X1
	load8! &1 	#AR
	sub
	store8! &2 	#X1
	# CBRANCH
	load8! &0 	#AR
	add! -9223372036854775808
	push! 0
	add! -9223372036854775808
	lt_u
	not
	jump_zero! .L768.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	add! 96
	load8
	#
	store8! &5 	#X4
	load8! &0 	#AR
	and! 0xffffffff
	load8! &5 	#X4
	add
	store8! &1 	#AR
.L689.l_o74d3c4:
	push! 0
	load8! &2 	#X1
	load8! &2 	#AR
	load8! &5 	#X2
	call! _tr_flush_block
	set_sp! (+ &0 32)
	

	load8! &2 	#X2
	add! 172
	load4
	#
	and! 0x0ffffffff
	load8! &3 	#X2
	add! 152
	store8
	#
	load8! &2 	#X2
	load8
	#
	store8! &5 	#X4
	load8! &4 	#X4
	add! 56
	load8
	#
	store8! &8 	#X7
	load8! &7 	#X7
	call! _tr_flush_bits
	set_sp! (+ &0 8)
	

	load8! &7 	#X7
	add! 40
	load8
	#
	store8! &7 	#X6
	load8! &4 	#X4
	add! 32
	load4
	#
	store8! &1 	#AR
	# CBRANCH
	load4! &0 	#AR
	load4! &7 	#X6
	lt_u
	jump_zero! .L690.l_o74d3c4
	# END CBRANCH
	load4! &0 	#AR
	store8! &7 	#X6
.L690.l_o74d3c4:
	# CBRANCH EQ0
	load4! &6 	#X6
	jump_zero! .L692.l_o74d3c4
	# END CBRANCH
	load4! &6 	#X6
	store8! &9 	#X8
	load8! &7 	#X7
	add! 32
	load8
	#
	store8! &2 	#X1
	load8! &4 	#X4
	add! 24
	load8
	#
	store8! &1 	#AR
	load8! &8 	#X8
	load8! &2 	#X1
	load8! &2 	#AR
	call! memcpy
	store8! &3

	set_sp! &2
	load8! &4 	#X4
	add! 24
	load8
	#
	load8! &9 	#X8
	add
	load8! &5 	#X4
	add! 24
	store8
	#
	load8! &7 	#X7
	add! 32
	load8
	#
	load8! &9 	#X8
	add
	load8! &8 	#X7
	add! 32
	store8
	#
	load8! &4 	#X4
	add! 40
	load8
	#
	load8! &9 	#X8
	add
	load8! &5 	#X4
	add! 40
	store8
	#
	load8! &4 	#X4
	add! 32
	load4
	#
	store8! &2 	#X1
	load8! &6 	#X6
	load8! &2 	#X1
	sub
	neg
	load8! &5 	#X4
	add! 32
	store4
	#
	load8! &7 	#X7
	add! 40
	load8
	#
	load8! &9 	#X8
	sub
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &8 	#X7
	add! 40
	store8
	#
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_not_zero! .L692.l_o74d3c4
	# END CBRANCH
	load8! &7 	#X7
	add! 16
	load8
	#
	load8! &8 	#X7
	add! 32
	store8
	#
.L692.l_o74d3c4:
	load8! &2 	#X2
	load8
	#
	add! 32
	load4
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_not_zero! .L721.l_o74d3c4
	# END CBRANCH
	jump! .L684.l_o74d3c4
.L763.l_o74d3c4:
	push! 2
	store8! &2 	#X1
	jump! .L610.l_o74d3c4
.L939.l_o74d3c4:
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &5 	#X4
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &2 	#X1
	load8! &3 	#X3
	add! 96
	load8
	#
	store8! &1 	#AR
	load4! &4 	#X4
	load8! &2 	#X1
	load8! &2 	#AR
	call! crc32
	store8! &3

	set_sp! &2
	load8! &0 	#AR
	load8! &4 	#X3
	add! 96
	store8
	#
	load8! &2 	#X2
	add! 56
	load8
	#
	store8! &1 	#AR
	push! 0
	load8! &3 	#X2
	add! 64
	store8
	#
	push! 69
	load8! &3 	#X2
	add! 8
	store4
	#
	jump! .L613.l_o74d3c4
.L963.l_o74d3c4:
	load8! &4 	#X4
	load8! &3 	#X2
	add! 40
	store8
	#
	load1! &5 	#X5
	load8! &2 	#X1
	store1
	#
	load8! &3 	#X3
	add! 96
	load8
	#
	shift_ru! 8
	store8! &2 	#X1
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &5 	#X4
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &1 	#AR
	load8! &0 	#AR
	add! 1
	load8! &3 	#X2
	add! 40
	store8
	#
	load1! &1 	#X1
	load8! &5 	#X4
	load8! &2 	#AR
	add
	store1
	load8! &3 	#X3
	add! 96
	load8
	#
	shift_ru! 16
	store8! &2 	#X1
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &5 	#X4
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &1 	#AR
	load8! &0 	#AR
	add! 1
	load8! &3 	#X2
	add! 40
	store8
	#
	load1! &1 	#X1
	load8! &5 	#X4
	load8! &2 	#AR
	add
	store1
	load8! &3 	#X3
	add! 96
	load8
	#
	shift_ru! 24
	store8! &2 	#X1
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &5 	#X4
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &1 	#AR
	load8! &0 	#AR
	add! 1
	load8! &3 	#X2
	add! 40
	store8
	#
	load1! &1 	#X1
	load8! &5 	#X4
	load8! &2 	#AR
	add
	store1
	load8! &3 	#X3
	add! 16
	load8
	#
	store8! &2 	#X1
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &5 	#X4
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &1 	#AR
	load8! &0 	#AR
	add! 1
	load8! &3 	#X2
	add! 40
	store8
	#
	load1! &1 	#X1
	load8! &5 	#X4
	load8! &2 	#AR
	add
	store1
	load8! &3 	#X3
	add! 16
	load8
	#
	shift_ru! 8
	store8! &2 	#X1
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &5 	#X4
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &1 	#AR
	load8! &0 	#AR
	add! 1
	load8! &3 	#X2
	add! 40
	store8
	#
	load1! &1 	#X1
	load8! &5 	#X4
	load8! &2 	#AR
	add
	store1
	load8! &3 	#X3
	add! 16
	load8
	#
	shift_ru! 16
	store8! &2 	#X1
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &5 	#X4
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &1 	#AR
	load8! &0 	#AR
	add! 1
	load8! &3 	#X2
	add! 40
	store8
	#
	load1! &1 	#X1
	load8! &5 	#X4
	load8! &2 	#AR
	add
	store1
	load8! &3 	#X3
	add! 16
	load8
	#
	shift_ru! 24
	store8! &2 	#X1
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &5 	#X4
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &1 	#AR
	load8! &0 	#AR
	add! 1
	load8! &3 	#X2
	add! 40
	store8
	#
	load1! &1 	#X1
	load8! &5 	#X4
	load8! &2 	#AR
	add
	store1
	jump! .L735.l_o74d3c4
.L964.l_o74d3c4:
	load4! &7 	#X7
	load8! &2 	#X1
	sub
	neg
	store8! &5 	#X4
	load8! &2 	#X2
	add! 16
	load8
	#
	load8! &8 	#X7
	add
	store8! &2 	#X1
	load8! &3 	#X3
	add! 96
	load8
	#
	store8! &1 	#AR
	load4! &4 	#X4
	load8! &2 	#X1
	load8! &2 	#AR
	call! crc32
	store8! &3

	set_sp! &2
	load8! &0 	#AR
	load8! &4 	#X3
	add! 96
	store8
	#
	load8! &2 	#X2
	add! 56
	load8
	#
	add! 68
	load4
	store8! &1 	#AR
	push! 103
	load8! &3 	#X2
	add! 8
	store4
	#
	jump! .L652.l_o74d3c4
.L934.l_o74d3c4:
	push! -1
	load8! &3 	#X2
	add! 76
	store4
	#
	push! 0
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &13
	jump! .L921.l_o74d3c4
.L942.l_o74d3c4:
	load4! &7 	#X7
	load8! &2 	#X1
	sub
	neg
	store8! &5 	#X4
	load8! &2 	#X2
	add! 16
	load8
	#
	load8! &8 	#X7
	add
	store8! &2 	#X1
	load8! &3 	#X3
	add! 96
	load8
	#
	store8! &1 	#AR
	load4! &4 	#X4
	load8! &2 	#X1
	load8! &2 	#AR
	call! crc32
	store8! &3

	set_sp! &2
	load8! &0 	#AR
	load8! &4 	#X3
	add! 96
	store8
	#
	load8! &2 	#X2
	add! 56
	load8
	#
	store8! &1 	#AR
	push! 0
	load8! &3 	#X2
	add! 64
	store8
	#
	jump! .L615.l_o74d3c4
.L967.l_o74d3c4:
	load8! &2 	#X2
	add! 120
	load8
	#
	store8! &1 	#AR
	load8! &2 	#X2
	add! 132
	load4
	#
	add! -1
	and! 0xffffffff
	store8! &2 	#X1
	load8! &1 	#X1
	load8! &2 	#X1
	add
	store8! &2 	#X1
	push! 0
	load8! &1 	#AR
	load8! &3 	#X1
	add
	store2
	load8! &1 	#X1
	push! 0
	load8! &2 	#AR
	call! memset
	store8! &3

	set_sp! &2
	load8! &2 	#X2
	add! 180
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_not_zero! .L729.l_o74d3c4
	# END CBRANCH
	push! 0
	load8! &3 	#X2
	add! 172
	store4
	#
	push! 0
	load8! &3 	#X2
	add! 152
	store8
	#
	push! 0
	load8! &3 	#X2
	add! 14012
	store4
	#
	jump! .L729.l_o74d3c4
.L925.l_o74d3c4:
	load8! (+ z_errmsg 56)
	load8! &4 	#X3
	add! 48
	store8
	#
	push! -5
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &13
	jump! .L921.l_o74d3c4
.L747.l_o74d3c4:
	load8! (+ z_errmsg 56)
	load8! &4 	#X3
	add! 48
	store8
	#
	push! -5
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &13
	jump! .L921.l_o74d3c4
.L706.l_o74d3c4:
	# CBRANCH
	push! 2
	load4! &2 	#X1
	lt_u
	jump_zero! .L696.l_o74d3c4
	# END CBRANCH
	load1! &1 	#X1
	add! -3
	store8! &2 	#X1
	load8! &2 	#X2
	add! 13984
	load8
	#
	store8! &8 	#X7
	load8! &2 	#X2
	add! 13980
	load4
	#
	store8! &5 	#X4
	load4! &4 	#X4
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	load8! &8 	#X7
	add
	store8! &7 	#X6
	push! 1
	load8! &7 	#X6
	store2
	#
	load8! &2 	#X2
	add! 13968
	load8
	#
	store8! &7 	#X6
	load8! &4 	#X4
	add! 1
	load8! &3 	#X2
	add! 13980
	store4
	#
	load1! &1 	#X1
	load8! &7 	#X6
	load8! &2 	#AR
	add
	store1
	load1! &1 	#X1
	sigx4
	add! _length_code
	load1
	and! 0x0ff
	add! 257
	store8! &1 	#AR
	load4! &0 	#AR
	sigx4
	shift_l! 4
	load8! &3 	#X2
	add
	add! 216
	load2
	add! 1
	store8! &2 	#X1
	load4! &0 	#AR
	sigx4
	shift_l! 4
	load8! &3 	#X2
	add
	add! 216
	store8! &1 	#AR
	load2! &1 	#X1
	load8! &1 	#AR
	store2
	#
	load1! _dist_code
	store8! &1 	#AR
	load4! &0 	#AR
	sigx4
	shift_l! 4
	load8! &3 	#X2
	add
	add! 9384
	load2
	add! 1
	store8! &2 	#X1
	load4! &0 	#AR
	sigx4
	shift_l! 4
	load8! &3 	#X2
	add
	add! 9384
	store8! &1 	#AR
	load2! &1 	#X1
	load8! &1 	#AR
	store2
	#
	load8! &2 	#X2
	add! 13980
	load4
	#
	store8! &1 	#AR
	load8! &2 	#X2
	add! 13976
	load4
	#
	add! -1
	load8! &1 	#AR
	xor
	and! 0xffffffff
	add! -1
	shift_ru! 63
	and! 0xff
	store8! &5 	#X4
	load8! &2 	#X2
	add! 180
	load4
	#
	store8! &7 	#X6
	load8! &2 	#X2
	add! 160
	load4
	#
	store8! &2 	#X1
	load8! &1 	#X1
	load8! &7 	#X6
	sub
	neg
	store8! &1 	#AR
	load4! &0 	#AR
	load8! &3 	#X2
	add! 180
	store4
	#
	load8! &2 	#X2
	add! 172
	load4
	#
	load8! &2 	#X1
	add
	store8! &2 	#X1
	load4! &1 	#X1
	load8! &3 	#X2
	add! 172
	store4
	#
	push! 0
	load8! &3 	#X2
	add! 160
	store4
	#
	jump! .L969.l_o74d3c4
.L941.l_o74d3c4:
	push! -1
	load8! &3 	#X2
	add! 76
	store4
	#
	push! 0
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &13
	jump! .L921.l_o74d3c4
.L958.l_o74d3c4:
	load8! &0 	#AR
	add! 68
	load4
	#
	store8! &1 	#AR
	push! 103
	load8! &3 	#X2
	add! 8
	store4
	#
	jump! .L652.l_o74d3c4
.L932.l_o74d3c4:
	load8! &2 	#X2
	add! 56
	load8
	#
	store8! &1 	#AR
	jump! .L625.l_o74d3c4
.L937.l_o74d3c4:
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &2 	#X1
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &1 	#AR
	load8! &0 	#AR
	add! 1
	load8! &3 	#X2
	add! 40
	store8
	#
	push! 0
	load8! &2 	#X1
	load8! &2 	#AR
	add
	store1
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &2 	#X1
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &1 	#AR
	load8! &0 	#AR
	add! 1
	load8! &3 	#X2
	add! 40
	store8
	#
	push! 0
	load8! &2 	#X1
	load8! &2 	#AR
	add
	store1
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &2 	#X1
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &1 	#AR
	load8! &0 	#AR
	add! 1
	load8! &3 	#X2
	add! 40
	store8
	#
	push! 0
	load8! &2 	#X1
	load8! &2 	#AR
	add
	store1
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &2 	#X1
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &1 	#AR
	load8! &0 	#AR
	add! 1
	load8! &3 	#X2
	add! 40
	store8
	#
	push! 0
	load8! &2 	#X1
	load8! &2 	#AR
	add
	store1
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &2 	#X1
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &1 	#AR
	load8! &0 	#AR
	add! 1
	load8! &3 	#X2
	add! 40
	store8
	#
	push! 0
	load8! &2 	#X1
	load8! &2 	#AR
	add
	store1
	load8! &2 	#X2
	add! 196
	load4
	#
	store8! &1 	#AR
	# CBRANCH EQ
	load4! &0 	#AR
	push! 9
	xor
	jump_zero! .L760.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	add! 200
	load4
	#
	store8! &2 	#X1
	# CBRANCH
	push! 1
	add! -2147483648
	load4! &2 	#X1
	add! -2147483648
	lt_u
	jump_zero! .L970.l_o74d3c4
	# END CBRANCH
	push! 4
	store8! &7 	#X6
.L600.l_o74d3c4:
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &2 	#X1
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &1 	#AR
	load8! &0 	#AR
	add! 1
	load8! &3 	#X2
	add! 40
	store8
	#
	load1! &6 	#X6
	load8! &2 	#X1
	load8! &2 	#AR
	add
	store1
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &2 	#X1
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &1 	#AR
	load8! &0 	#AR
	add! 1
	load8! &3 	#X2
	add! 40
	store8
	#
	push! 3
	load8! &2 	#X1
	load8! &2 	#AR
	add
	store1
	push! 113
	load8! &3 	#X2
	add! 8
	store4
	#
	load8! &3 	#X3
	add! 56
	load8
	#
	store8! &7 	#X6
	load8! &6 	#X6
	call! _tr_flush_bits
	set_sp! (+ &0 8)
	

	load8! &6 	#X6
	add! 40
	load8
	#
	store8! &5 	#X4
	load8! &3 	#X3
	add! 32
	load4
	#
	store8! &1 	#AR
	# CBRANCH
	load4! &0 	#AR
	load4! &5 	#X4
	lt_u
	jump_zero! .L601.l_o74d3c4
	# END CBRANCH
	load4! &0 	#AR
	store8! &5 	#X4
.L601.l_o74d3c4:
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_zero! .L603.l_o74d3c4
	# END CBRANCH
	load4! &4 	#X4
	store8! &8 	#X7
	load8! &6 	#X6
	add! 32
	load8
	#
	store8! &2 	#X1
	load8! &3 	#X3
	add! 24
	load8
	#
	store8! &1 	#AR
	load8! &7 	#X7
	load8! &2 	#X1
	load8! &2 	#AR
	call! memcpy
	store8! &3

	set_sp! &2
	load8! &3 	#X3
	add! 24
	load8
	#
	load8! &8 	#X7
	add
	load8! &4 	#X3
	add! 24
	store8
	#
	load8! &6 	#X6
	add! 32
	load8
	#
	load8! &8 	#X7
	add
	load8! &7 	#X6
	add! 32
	store8
	#
	load8! &3 	#X3
	add! 40
	load8
	#
	load8! &8 	#X7
	add
	load8! &4 	#X3
	add! 40
	store8
	#
	load8! &3 	#X3
	add! 32
	load4
	#
	store8! &2 	#X1
	load8! &4 	#X4
	load8! &2 	#X1
	sub
	neg
	load8! &4 	#X3
	add! 32
	store4
	#
	load8! &6 	#X6
	add! 40
	load8
	#
	load8! &8 	#X7
	sub
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &7 	#X6
	add! 40
	store8
	#
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_not_zero! .L603.l_o74d3c4
	# END CBRANCH
	load8! &6 	#X6
	add! 16
	load8
	#
	load8! &7 	#X6
	add! 32
	store8
	#
.L603.l_o74d3c4:
	load8! &2 	#X2
	add! 40
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_not_zero! .L605.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	add! 8
	load4
	#
	store8! &1 	#AR
	jump! .L598.l_o74d3c4
.L634.l_o74d3c4:
	push! -1
	load8! &3 	#X2
	add! 76
	store4
	#
	push! 0
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &13
	jump! .L921.l_o74d3c4
.L648.l_o74d3c4:
	push! -1
	load8! &3 	#X2
	add! 76
	store4
	#
	push! 0
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &13
	jump! .L921.l_o74d3c4
.L962.l_o74d3c4:
	push! 1
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &13
	jump! .L921.l_o74d3c4
.L589.l_o74d3c4:
	# CBRANCH EQ
	load4! &1 	#X1
	push! 6
	xor
	jump_zero! .L971.l_o74d3c4
	# END CBRANCH
	load8! &0 	#AR
	or! 0xc0
	store8! &1 	#AR
	jump! .L588.l_o74d3c4
.L769.l_o74d3c4:
	push! 0
	store8! &1 	#AR
	jump! .L710.l_o74d3c4
.L938.l_o74d3c4:
	# CBRANCH
	push! 1
	add! -2147483648
	load4! &1 	#AR
	add! -2147483648
	lt_u
	jump_zero! .L765.l_o74d3c4
	# END CBRANCH
	push! 0
	store8! &2 	#X1
	jump! .L610.l_o74d3c4
.L695.l_o74d3c4:
	push! 0
	load8! &3 	#X2
	add! 14012
	store4
	#
	# CBRANCH EQ
	load4! &5 	#X5
	push! 4
	xor
	jump_zero! .L972.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	add! 13980
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L721.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	add! 172
	load4
	#
	store8! &2 	#X1
	load8! &2 	#X2
	add! 152
	load8
	#
	store8! &1 	#AR
	load8! &1 	#X1
	load8! &1 	#AR
	sub
	store8! &2 	#X1
	# CBRANCH
	load8! &0 	#AR
	add! -9223372036854775808
	push! 0
	add! -9223372036854775808
	lt_u
	not
	jump_zero! .L771.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	add! 96
	load8
	#
	store8! &5 	#X4
	load8! &0 	#AR
	and! 0xffffffff
	load8! &5 	#X4
	add
	store8! &1 	#AR
.L722.l_o74d3c4:
	push! 0
	load8! &2 	#X1
	load8! &2 	#AR
	load8! &5 	#X2
	call! _tr_flush_block
	set_sp! (+ &0 32)
	

	load8! &2 	#X2
	add! 172
	load4
	#
	and! 0x0ffffffff
	load8! &3 	#X2
	add! 152
	store8
	#
	load8! &2 	#X2
	load8
	#
	store8! &5 	#X4
	load8! &4 	#X4
	add! 56
	load8
	#
	store8! &8 	#X7
	load8! &7 	#X7
	call! _tr_flush_bits
	set_sp! (+ &0 8)
	

	load8! &7 	#X7
	add! 40
	load8
	#
	store8! &7 	#X6
	load8! &4 	#X4
	add! 32
	load4
	#
	store8! &1 	#AR
	# CBRANCH
	load4! &0 	#AR
	load4! &7 	#X6
	lt_u
	jump_zero! .L723.l_o74d3c4
	# END CBRANCH
	load4! &0 	#AR
	store8! &7 	#X6
.L723.l_o74d3c4:
	# CBRANCH EQ0
	load4! &6 	#X6
	jump_zero! .L725.l_o74d3c4
	# END CBRANCH
	load4! &6 	#X6
	store8! &9 	#X8
	load8! &7 	#X7
	add! 32
	load8
	#
	store8! &2 	#X1
	load8! &4 	#X4
	add! 24
	load8
	#
	store8! &1 	#AR
	load8! &8 	#X8
	load8! &2 	#X1
	load8! &2 	#AR
	call! memcpy
	store8! &3

	set_sp! &2
	load8! &4 	#X4
	add! 24
	load8
	#
	load8! &9 	#X8
	add
	load8! &5 	#X4
	add! 24
	store8
	#
	load8! &7 	#X7
	add! 32
	load8
	#
	load8! &9 	#X8
	add
	load8! &8 	#X7
	add! 32
	store8
	#
	load8! &4 	#X4
	add! 40
	load8
	#
	load8! &9 	#X8
	add
	load8! &5 	#X4
	add! 40
	store8
	#
	load8! &4 	#X4
	add! 32
	load4
	#
	store8! &2 	#X1
	load8! &6 	#X6
	load8! &2 	#X1
	sub
	neg
	load8! &5 	#X4
	add! 32
	store4
	#
	load8! &7 	#X7
	add! 40
	load8
	#
	load8! &9 	#X8
	sub
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &8 	#X7
	add! 40
	store8
	#
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_not_zero! .L725.l_o74d3c4
	# END CBRANCH
	load8! &7 	#X7
	add! 16
	load8
	#
	load8! &8 	#X7
	add! 32
	store8
	#
.L725.l_o74d3c4:
	load8! &2 	#X2
	load8
	#
	add! 32
	load4
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_not_zero! .L721.l_o74d3c4
	# END CBRANCH
	jump! .L684.l_o74d3c4
.L933.l_o74d3c4:
	load8! &2 	#X2
	add! 56
	load8
	#
	store8! &1 	#AR
	jump! .L638.l_o74d3c4
.L760.l_o74d3c4:
	push! 2
	store8! &7 	#X6
	jump! .L600.l_o74d3c4
.L605.l_o74d3c4:
	push! -1
	load8! &3 	#X2
	add! 76
	store4
	#
	push! 0
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &13
	jump! .L921.l_o74d3c4
.L966.l_o74d3c4:
	load8! &2 	#X2
	call! _tr_align
	set_sp! (+ &0 8)
	

	jump! .L729.l_o74d3c4
.L970.l_o74d3c4:
	# CBRANCH
	push! 1
	add! -2147483648
	load4! &1 	#AR
	add! -2147483648
	lt_u
	jump_zero! .L762.l_o74d3c4
	# END CBRANCH
	push! 0
	store8! &7 	#X6
	jump! .L600.l_o74d3c4
.L971.l_o74d3c4:
	load8! &0 	#AR
	or! 0x80
	store8! &1 	#AR
	jump! .L588.l_o74d3c4
.L765.l_o74d3c4:
	push! 4
	store8! &2 	#X1
	jump! .L610.l_o74d3c4
.L968.l_o74d3c4:
	load8! &2 	#X2
	add! 172
	load4
	#
	store8! &2 	#X1
	load8! &2 	#X2
	add! 152
	load8
	#
	store8! &1 	#AR
	load8! &1 	#X1
	load8! &1 	#AR
	sub
	store8! &2 	#X1
	# CBRANCH
	load8! &0 	#AR
	add! -9223372036854775808
	push! 0
	add! -9223372036854775808
	lt_u
	not
	jump_zero! .L767.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	add! 96
	load8
	#
	store8! &5 	#X4
	load8! &0 	#AR
	and! 0xffffffff
	load8! &5 	#X4
	add
	store8! &1 	#AR
.L680.l_o74d3c4:
	push! 1
	load8! &2 	#X1
	load8! &2 	#AR
	load8! &5 	#X2
	call! _tr_flush_block
	set_sp! (+ &0 32)
	

	load8! &2 	#X2
	add! 172
	load4
	#
	and! 0x0ffffffff
	load8! &3 	#X2
	add! 152
	store8
	#
	load8! &2 	#X2
	load8
	#
	store8! &6 	#X5
	load8! &5 	#X5
	add! 56
	load8
	#
	store8! &7 	#X6
	load8! &6 	#X6
	call! _tr_flush_bits
	set_sp! (+ &0 8)
	

	load8! &6 	#X6
	add! 40
	load8
	#
	store8! &5 	#X4
	load8! &5 	#X5
	add! 32
	load4
	#
	store8! &1 	#AR
	# CBRANCH
	load4! &0 	#AR
	load4! &5 	#X4
	lt_u
	jump_zero! .L681.l_o74d3c4
	# END CBRANCH
	load4! &0 	#AR
	store8! &5 	#X4
.L681.l_o74d3c4:
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_zero! .L682.l_o74d3c4
	# END CBRANCH
	load4! &4 	#X4
	store8! &8 	#X7
	load8! &6 	#X6
	add! 32
	load8
	#
	store8! &2 	#X1
	load8! &5 	#X5
	add! 24
	load8
	#
	store8! &1 	#AR
	load8! &7 	#X7
	load8! &2 	#X1
	load8! &2 	#AR
	call! memcpy
	store8! &3

	set_sp! &2
	load8! &5 	#X5
	add! 24
	load8
	#
	load8! &8 	#X7
	add
	load8! &6 	#X5
	add! 24
	store8
	#
	load8! &6 	#X6
	add! 32
	load8
	#
	load8! &8 	#X7
	add
	load8! &7 	#X6
	add! 32
	store8
	#
	load8! &5 	#X5
	add! 40
	load8
	#
	load8! &8 	#X7
	add
	load8! &6 	#X5
	add! 40
	store8
	#
	load8! &5 	#X5
	add! 32
	load4
	#
	store8! &2 	#X1
	load8! &4 	#X4
	load8! &2 	#X1
	sub
	neg
	load8! &6 	#X5
	add! 32
	store4
	#
	load8! &6 	#X6
	add! 40
	load8
	#
	load8! &8 	#X7
	sub
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &7 	#X6
	add! 40
	store8
	#
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_not_zero! .L683.l_o74d3c4
	# END CBRANCH
	load8! &6 	#X6
	add! 16
	load8
	#
	load8! &7 	#X6
	add! 32
	store8
	#
.L683.l_o74d3c4:
	load8! &2 	#X2
	load8
	#
	add! 32
	load4
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L742.l_o74d3c4
	# END CBRANCH
.L743.l_o74d3c4:
	push! 666
	load8! &3 	#X2
	add! 8
	store4
	#
	jump! .L685.l_o74d3c4
.L682.l_o74d3c4:
	load8! &2 	#X2
	load8
	#
	add! 32
	load4
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_not_zero! .L743.l_o74d3c4
	# END CBRANCH
.L742.l_o74d3c4:
	push! 666
	load8! &3 	#X2
	add! 8
	store4
	#
	jump! .L684.l_o74d3c4
.L756.l_o74d3c4:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &13
	jump! .L921.l_o74d3c4
.L923.l_o74d3c4:
	load8! (+ z_errmsg 56)
	load8! &4 	#X3
	add! 48
	store8
	#
	push! -5
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &13
	jump! .L921.l_o74d3c4
.L762.l_o74d3c4:
	push! 4
	store8! &7 	#X6
	jump! .L600.l_o74d3c4
.L767.l_o74d3c4:
	push! 0
	store8! &1 	#AR
	jump! .L680.l_o74d3c4
.L768.l_o74d3c4:
	push! 0
	store8! &1 	#AR
	jump! .L689.l_o74d3c4
.L770.l_o74d3c4:
	push! 0
	store8! &1 	#AR
	jump! .L717.l_o74d3c4
.L771.l_o74d3c4:
	push! 0
	store8! &1 	#AR
	jump! .L722.l_o74d3c4
.L961.l_o74d3c4:
	push! 666
	load8! &3 	#X2
	add! 8
	store4
	#
	jump! .L684.l_o74d3c4
.L950.l_o74d3c4:
	load8! &1 	#X1
	add! 4
	store8! &2 	#X1
	jump! .L699.l_o74d3c4
.L949.l_o74d3c4:
	load8! &1 	#X1
	add! 3
	store8! &2 	#X1
	jump! .L699.l_o74d3c4
.L948.l_o74d3c4:
	load8! &1 	#X1
	add! 2
	store8! &2 	#X1
	jump! .L699.l_o74d3c4
.L697.l_o74d3c4:
	load8! &1 	#X1
	add! 1
	store8! &2 	#X1
	jump! .L699.l_o74d3c4
.L953.l_o74d3c4:
	load8! &1 	#X1
	add! 7
	store8! &2 	#X1
	jump! .L699.l_o74d3c4
.L952.l_o74d3c4:
	load8! &1 	#X1
	add! 6
	store8! &2 	#X1
	jump! .L699.l_o74d3c4
.L951.l_o74d3c4:
	load8! &1 	#X1
	add! 5
	store8! &2 	#X1
	jump! .L699.l_o74d3c4
.L755.l_o74d3c4:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &13
.L921.l_o74d3c4:

	# epilogue
	set_sp! &11
	return

# FUNCTION ENDS:deflate

	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole push+add+pop+push+ind pop
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole binop1+2
	#peephole pop+push+commut(di)
	#peephole 1
	#peephole zero_extend
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+ind push
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+ind push
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole zero_extend
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole pop+cmprev
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+cmp
	#peephole pop+block+push+block
	#peephole zero_extend
	#peephole pop+block+push+block
	#peephole zero_extend
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole and+pophi
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole and+pophi
	#peephole popdi(deadreg)+push

# FUNCTION BEGINS:deflateParams
	EXPORT	deflateParams
deflateParams:
	# prologue (10 GPRs)

	set_sp! &-10

	load8! &11
	store8! &4 	#X3
	load4! &12
	store8! &5 	#X4
	# CBRANCH EQ0
	load8! &3 	#X3
	jump_zero! .L976.l_o74d3c4
	# END CBRANCH
	load8! &3 	#X3
	add! 64
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L976.l_o74d3c4
	# END CBRANCH
	load8! &3 	#X3
	add! 72
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L976.l_o74d3c4
	# END CBRANCH
	load8! &3 	#X3
	add! 56
	load8
	#
	store8! &3 	#X2
	# CBRANCH EQ0
	load8! &2 	#X2
	jump_zero! .L976.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - reverse 
	load8! &4 	#X3
	xor
	push! 1
	lt_u
	jump_zero! .L976.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	add! 8
	load4
	#
	store8! &1 	#AR
	load8! &0 	#AR
	add! -42
	store8! &2 	#X1
	# CBRANCH
	push! 61
	load4! &2 	#X1
	lt_u
	jump_zero! .L977.l_o74d3c4
	# END CBRANCH
	# CBRANCH EQ
	load4! &0 	#AR
	push! 113
	xor
	jump_zero! .L979.l_o74d3c4
	# END CBRANCH
	# CBRANCH
	load4! &0 	#AR
	push! 666
	xor
	push! 1
	lt_u
	jump_zero! .L976.l_o74d3c4
	# END CBRANCH
.L979.l_o74d3c4:
	# CBRANCH EQ
	load4! &4 	#X4
	push! 4294967295
	xor
	jump_zero! .L994.l_o74d3c4
	# END CBRANCH
	# CBRANCH
	push! 9
	load4! &5 	#X4
	lt_u
	not
	jump_zero! .L976.l_o74d3c4
	# END CBRANCH
.L980.l_o74d3c4:
	# CBRANCH
	push! 4
	load4! &14
	lt_u
	not
	jump_zero! .L976.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	add! 196
	load4
	#
	store8! &1 	#AR
	load8! &2 	#X2
	add! 200
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ
	load4! &14
	xor
	jump_zero! .L1016.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	add! 14024
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_not_zero! .L1017.l_o74d3c4
	# END CBRANCH
.L982.l_o74d3c4:
	# CBRANCH EQ
	load4! &0 	#AR
	load4! &5 	#X4
	xor
	jump_zero! .L983.l_o74d3c4
	# END CBRANCH
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_not_zero! .L984.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	add! 14008
	load4
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_zero! .L984.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	add! 120
	load8
	#
	store8! &7 	#X6
	load8! &2 	#X2
	add! 132
	load4
	#
	store8! &6 	#X5
	load8! &5 	#X5
	add! -1
	and! 0xffffffff
	store8! &4 	#X3
	load8! &3 	#X3
	load8! &4 	#X3
	add
	store8! &8 	#X7
	# CBRANCH EQ
	load4! &0 	#AR
	push! 1
	xor
	jump_zero! .L1018.l_o74d3c4
	# END CBRANCH
	push! 0
	load8! &7 	#X6
	load8! &9 	#X7
	add
	store2
	load8! &7 	#X7
	push! 0
	load8! &8 	#X6
	call! memset
	store8! &3

	set_sp! &2
	push! 0
	load8! &3 	#X2
	add! 14008
	store4
	#
.L984.l_o74d3c4:
	load4! &4 	#X4
	load8! &3 	#X2
	add! 196
	store4
	#
	load4! &4 	#X4
	sigx4
	shift_l! 4
	add! configuration_table.s_o74d3c4
	add! 2
	load2
	and! 0x0ffff
	load8! &3 	#X2
	add! 192
	store4
	#
	load4! &4 	#X4
	sigx4
	shift_l! 4
	add! configuration_table.s_o74d3c4
	load2
	and! 0x0ffff
	load8! &3 	#X2
	add! 204
	store4
	#
	load4! &4 	#X4
	sigx4
	shift_l! 4
	add! configuration_table.s_o74d3c4
	add! 4
	load2
	and! 0x0ffff
	load8! &3 	#X2
	add! 208
	store4
	#
	load4! &4 	#X4
	sigx4
	shift_l! 4
	add! configuration_table.s_o74d3c4
	add! 6
	load2
	and! 0x0ffff
	load8! &3 	#X2
	add! 188
	store4
	#
.L983.l_o74d3c4:
	load4! &13
	load8! &3 	#X2
	add! 200
	store4
	#
	push! 0
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &12
	jump! .L1019.l_o74d3c4
.L977.l_o74d3c4:
	load4! &1 	#X1
	store8! &1 	#AR
	push! 2306405961448849409
	load8! &1 	#AR
	shift_ru
	not
	and! 0x1
	# CBRANCH - peep (modesize=1)
	and! 255
	# - EQ0
	jump_zero! .L979.l_o74d3c4
	# END CBRANCH
.L976.l_o74d3c4:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &12
	jump! .L1019.l_o74d3c4
.L1016.l_o74d3c4:
	load4! &0 	#AR
	sigx4
	shift_l! 4
	add! configuration_table.s_o74d3c4
	add! 8
	load8
	store8! &2 	#X1
	load4! &4 	#X4
	sigx4
	shift_l! 4
	add! configuration_table.s_o74d3c4
	add! 8
	load8
	# CBRANCH - peep (modesize=8)
	# - EQ
	load8! &2 	#X1
	xor
	jump_zero! .L982.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	add! 14024
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L982.l_o74d3c4
	# END CBRANCH
.L1017.l_o74d3c4:
	push! 5
	load8! &4 	#X3
	call! deflate
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH EQ
	load4! &0 	#AR
	push! 4294967294
	xor
	jump_zero! .L976.l_o74d3c4
	# END CBRANCH
	load8! &3 	#X3
	add! 32
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L995.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	add! 196
	load4
	#
	store8! &1 	#AR
	jump! .L982.l_o74d3c4
.L994.l_o74d3c4:
	push! 6
	store8! &5 	#X4
	jump! .L980.l_o74d3c4
.L1018.l_o74d3c4:
	load8! &2 	#X2
	add! 80
	load4
	#
	store8! &2 	#X1
	load4! &5 	#X5
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	load8! &7 	#X6
	add
	store8! &1 	#AR
	load8! &3 	#X3
	add! 1
	mult! -2
	load8! &1 	#AR
	add
	store8! &9 	#X8
.L986.l_o74d3c4:
	load8! &0 	#AR
	add! -2
	store8! &4 	#X3
	load8! &3 	#X3
	store8! &1 	#AR
	load8! &3 	#X3
	load2
	#
	store8! &6 	#X5
	# CBRANCH
	load4! &5 	#X5
	load4! &2 	#X1
	lt_u
	not
	jump_zero! .L987.l_o74d3c4
	# END CBRANCH
	load8! &1 	#X1
	load8! &6 	#X5
	sub
	neg
	load8! &4 	#X3
	store2
	#
	# CBRANCH
	load8! &8 	#X8
	load8! &4 	#X3
	xor
	push! 1
	lt_u
	jump_zero! .L986.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	add! 112
	load8
	#
	store8! &4 	#X3
	load4! &1 	#X1
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	load8! &4 	#X3
	add
	store8! &1 	#AR
	load8! &1 	#X1
	add! -1
	and! 0xffffffff
	add! 1
	mult! -2
	load8! &1 	#AR
	add
	store8! &9 	#X8
.L990.l_o74d3c4:
	load8! &0 	#AR
	add! -2
	store8! &4 	#X3
	load8! &3 	#X3
	store8! &1 	#AR
	load8! &3 	#X3
	load2
	#
	store8! &6 	#X5
	# CBRANCH
	load4! &5 	#X5
	load4! &2 	#X1
	lt_u
	not
	jump_zero! .L991.l_o74d3c4
	# END CBRANCH
	load8! &1 	#X1
	load8! &6 	#X5
	sub
	neg
	load8! &4 	#X3
	store2
	#
	# CBRANCH
	load8! &8 	#X8
	load8! &4 	#X3
	xor
	push! 1
	lt_u
	jump_zero! .L990.l_o74d3c4
	# END CBRANCH
	load8! &7 	#X7
	push! 0
	load8! &8 	#X6
	call! memset
	store8! &3

	set_sp! &2
	push! 0
	load8! &3 	#X2
	add! 14008
	store4
	#
	jump! .L984.l_o74d3c4
.L987.l_o74d3c4:
	push! 0
	load8! &4 	#X3
	store2
	#
	# CBRANCH
	load8! &8 	#X8
	load8! &4 	#X3
	xor
	push! 1
	lt_u
	jump_zero! .L986.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	add! 112
	load8
	#
	store8! &4 	#X3
	load4! &1 	#X1
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	load8! &4 	#X3
	add
	store8! &1 	#AR
	load8! &1 	#X1
	add! -1
	and! 0xffffffff
	add! 1
	mult! -2
	load8! &1 	#AR
	add
	store8! &9 	#X8
	jump! .L990.l_o74d3c4
.L991.l_o74d3c4:
	push! 0
	load8! &4 	#X3
	store2
	#
	# CBRANCH
	load8! &8 	#X8
	load8! &4 	#X3
	xor
	push! 1
	lt_u
	jump_zero! .L990.l_o74d3c4
	# END CBRANCH
	load8! &7 	#X7
	push! 0
	load8! &8 	#X6
	call! memset
	store8! &3

	set_sp! &2
	push! 0
	load8! &3 	#X2
	add! 14008
	store4
	#
	jump! .L984.l_o74d3c4
.L995.l_o74d3c4:
	push! -5
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &12
.L1019.l_o74d3c4:

	# epilogue
	set_sp! &10
	return

# FUNCTION ENDS:deflateParams

	#peephole zero_extend
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole pop+cmprev
	#peephole pop+cmp
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+cmp

# FUNCTION BEGINS:deflateEnd
	EXPORT	deflateEnd
deflateEnd:
	# prologue (6 GPRs)

	set_sp! &-6

	load8! &7
	store8! &3 	#X2
	# CBRANCH EQ0
	load8! &2 	#X2
	jump_zero! .L1029.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	add! 64
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L1030.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	add! 72
	load8
	#
	store8! &2 	#X1
	# CBRANCH EQ0
	load8! &1 	#X1
	jump_zero! .L1031.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	add! 56
	load8
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L1032.l_o74d3c4
	# END CBRANCH
	load8! &0 	#AR
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ
	load8! &3 	#X2
	xor
	jump_zero! .L1051.l_o74d3c4
	# END CBRANCH
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &8
	jump! .L1052.l_o74d3c4
.L1051.l_o74d3c4:
	load8! &0 	#AR
	add! 8
	load4
	#
	store8! &6 	#X5
	load8! &5 	#X5
	add! -42
	store8! &4 	#X3
	# CBRANCH
	push! 61
	load4! &4 	#X3
	lt_u
	jump_zero! .L1022.l_o74d3c4
	# END CBRANCH
	# CBRANCH EQ
	load4! &5 	#X5
	push! 113
	xor
	jump_zero! .L1024.l_o74d3c4
	# END CBRANCH
	# CBRANCH
	load4! &5 	#X5
	push! 666
	xor
	push! 1
	lt_u
	jump_zero! .L1035.l_o74d3c4
	# END CBRANCH
.L1024.l_o74d3c4:
	load8! &0 	#AR
	add! 16
	load8
	#
	store8! &5 	#X4
	load8! &2 	#X2
	add! 80
	load8
	#
	store8! &4 	#X3
	# CBRANCH EQ0
	load8! &4 	#X4
	jump_zero! .L1025.l_o74d3c4
	# END CBRANCH
	load8! &4 	#X4
	load8! &4 	#X3
	load8! &3 	#X1
	call
	set_sp! (+ &0 16)
	

	load8! &2 	#X2
	add! 56
	load8
	#
	store8! &1 	#AR
	load8! &2 	#X2
	add! 72
	load8
	#
	store8! &2 	#X1
	load8! &2 	#X2
	add! 80
	load8
	#
	store8! &4 	#X3
.L1025.l_o74d3c4:
	load8! &0 	#AR
	add! 120
	load8
	#
	store8! &5 	#X4
	# CBRANCH EQ0
	load8! &4 	#X4
	jump_zero! .L1026.l_o74d3c4
	# END CBRANCH
	load8! &4 	#X4
	load8! &4 	#X3
	load8! &3 	#X1
	call
	set_sp! (+ &0 16)
	

	load8! &2 	#X2
	add! 56
	load8
	#
	store8! &1 	#AR
	load8! &2 	#X2
	add! 72
	load8
	#
	store8! &2 	#X1
	load8! &2 	#X2
	add! 80
	load8
	#
	store8! &4 	#X3
.L1026.l_o74d3c4:
	load8! &0 	#AR
	add! 112
	load8
	#
	store8! &5 	#X4
	# CBRANCH EQ0
	load8! &4 	#X4
	jump_zero! .L1027.l_o74d3c4
	# END CBRANCH
	load8! &4 	#X4
	load8! &4 	#X3
	load8! &3 	#X1
	call
	set_sp! (+ &0 16)
	

	load8! &2 	#X2
	add! 56
	load8
	#
	store8! &1 	#AR
	load8! &2 	#X2
	add! 72
	load8
	#
	store8! &2 	#X1
	load8! &2 	#X2
	add! 80
	load8
	#
	store8! &4 	#X3
.L1027.l_o74d3c4:
	load8! &0 	#AR
	add! 96
	load8
	#
	store8! &5 	#X4
	# CBRANCH EQ0
	load8! &4 	#X4
	jump_zero! .L1028.l_o74d3c4
	# END CBRANCH
	load8! &4 	#X4
	load8! &4 	#X3
	load8! &3 	#X1
	call
	set_sp! (+ &0 16)
	

	load8! &2 	#X2
	add! 72
	load8
	#
	store8! &2 	#X1
	load8! &2 	#X2
	add! 56
	load8
	#
	store8! &1 	#AR
	load8! &2 	#X2
	add! 80
	load8
	#
	store8! &4 	#X3
.L1028.l_o74d3c4:
	load8! &0 	#AR
	load8! &4 	#X3
	load8! &3 	#X1
	call
	set_sp! (+ &0 16)
	

	push! 0
	load8! &3 	#X2
	add! 56
	store8
	#
	# CBRANCH EQ
	load4! &5 	#X5
	push! 113
	xor
	jump_zero! .L1036.l_o74d3c4
	# END CBRANCH
	push! 0
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &8
	jump! .L1052.l_o74d3c4
.L1022.l_o74d3c4:
	load4! &3 	#X3
	store8! &4 	#X3
	push! 2306405961448849409
	load8! &4 	#X3
	shift_ru
	not
	and! 0x1
	# CBRANCH - peep (modesize=1)
	and! 255
	# - EQ0
	jump_zero! .L1024.l_o74d3c4
	# END CBRANCH
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &8
	jump! .L1052.l_o74d3c4
.L1032.l_o74d3c4:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &8
	jump! .L1052.l_o74d3c4
.L1029.l_o74d3c4:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &8
	jump! .L1052.l_o74d3c4
.L1030.l_o74d3c4:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &8
	jump! .L1052.l_o74d3c4
.L1031.l_o74d3c4:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &8
	jump! .L1052.l_o74d3c4
.L1036.l_o74d3c4:
	push! -3
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &8
	jump! .L1052.l_o74d3c4
.L1035.l_o74d3c4:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &8
.L1052.l_o74d3c4:

	# epilogue
	set_sp! &6
	return

# FUNCTION ENDS:deflateEnd

	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole move
	#peephole move+push(pushable)
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole 1
	#peephole 1
	#peephole move+push(pushable)
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move+push(pushable)
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole move+push(pushable)
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole pop(deadreg)+push
	#peephole pop+cmp
	#peephole 1
	#peephole move+push(pushable)
	#peephole 1
	#peephole 1
	#peephole nop+set
	#peephole 1
	#peephole nop+set
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+push(deadreg)+sign_extend
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole pop+block+cmp
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole and+popsi

# FUNCTION BEGINS:deflateInit2_
	EXPORT	deflateInit2_
deflateInit2_:
	# prologue (7 GPRs)

	set_sp! &-7

	load8! &8
	store8! &4 	#X3
	load4! &9
	store8! &6 	#X5
	load4! &11
	store8! &1 	#AR
	load8! &14
	store8! &2 	#X1
	# CBRANCH EQ0
	load8! &1 	#X1
	jump_zero! .L1065.l_o74d3c4
	# END CBRANCH
	load8! &1 	#X1
	load1
	#
	# CBRANCH - peep (modesize=1)
	and! 255
	push! 49
	xor
	push! 1
	lt_u
	jump_zero! .L1066.l_o74d3c4
	# END CBRANCH
	# CBRANCH
	load4! &15
	push! 112
	xor
	push! 1
	lt_u
	jump_zero! .L1067.l_o74d3c4
	# END CBRANCH
	# CBRANCH EQ0
	load8! &3 	#X3
	jump_zero! .L1061.l_o74d3c4
	# END CBRANCH
	push! 0
	load8! &4 	#X3
	add! 48
	store8
	#
	load8! &3 	#X3
	add! 64
	load8
	#
	store8! &2 	#X1
	# CBRANCH EQ0
	load8! &1 	#X1
	jump_zero! .L1081.l_o74d3c4
	# END CBRANCH
	load8! &3 	#X3
	add! 72
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L1082.l_o74d3c4
	# END CBRANCH
.L1057.l_o74d3c4:
	# CBRANCH EQ
	load4! &5 	#X5
	push! 4294967295
	xor
	jump_zero! .L1083.l_o74d3c4
	# END CBRANCH
.L1058.l_o74d3c4:
	# CBRANCH
	load4! &0 	#AR
	add! -2147483648
	push! 0
	add! -2147483648
	lt_u
	not
	jump_zero! .L1084.l_o74d3c4
	# END CBRANCH
.L1059.l_o74d3c4:
	# CBRANCH
	push! 15
	add! -2147483648
	load4! &1 	#AR
	add! -2147483648
	lt_u
	jump_zero! .L1068.l_o74d3c4
	# END CBRANCH
	load8! &0 	#AR
	add! -16
	store8! &1 	#AR
	push! 2
	store8! &7 	#X6
.L1060.l_o74d3c4:
	load4! &12
	add! -1
	store8! &3 	#X2
	# CBRANCH
	push! 8
	load4! &3 	#X2
	lt_u
	not
	jump_zero! .L1061.l_o74d3c4
	# END CBRANCH
	# CBRANCH
	load4! &10
	push! 8
	xor
	push! 1
	lt_u
	jump_zero! .L1061.l_o74d3c4
	# END CBRANCH
	load4! &0 	#AR
	store8! &5 	#X4
	load8! &4 	#X4
	add! -8
	store8! &1 	#AR
	# CBRANCH
	push! 7
	load4! &1 	#AR
	lt_u
	not
	jump_zero! .L1061.l_o74d3c4
	# END CBRANCH
	# CBRANCH
	push! 9
	load4! &6 	#X5
	lt_u
	not
	jump_zero! .L1061.l_o74d3c4
	# END CBRANCH
	# CBRANCH
	push! 4
	load4! &14
	lt_u
	not
	jump_zero! .L1061.l_o74d3c4
	# END CBRANCH
	# CBRANCH EQ
	load4! &4 	#X4
	push! 8
	xor
	jump_zero! .L1085.l_o74d3c4
	# END CBRANCH
.L1062.l_o74d3c4:
	load8! &3 	#X3
	add! 80
	load8
	#
	store8! &1 	#AR
	push! 14032
	push! 1
	load8! &2 	#AR
	load8! &4 	#X1
	call
	store8! &3

	set_sp! &2
	load8! &0 	#AR
	store8! &3 	#X2
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L1069.l_o74d3c4
	# END CBRANCH
	load8! &0 	#AR
	load8! &4 	#X3
	add! 56
	store8
	#
	load8! &3 	#X3
	load8! &1 	#AR
	store8
	#
	push! 42
	load8! &1 	#AR
	add! 8
	store4
	#
	load4! &6 	#X6
	load8! &1 	#AR
	add! 48
	store4
	#
	push! 0
	load8! &1 	#AR
	add! 56
	store8
	#
	load4! &4 	#X4
	load8! &1 	#AR
	add! 84
	store4
	#
	load4! &4 	#X4
	sigx4
	store8! &1 	#AR
	push! 1
	load8! &1 	#AR
	shift_l
	store8! &1 	#AR
	load4! &0 	#AR
	load8! &3 	#X2
	add! 80
	store4
	#
	load8! &0 	#AR
	add! -1
	load8! &3 	#X2
	add! 88
	store4
	#
	load4! &12
	add! 7
	store8! &2 	#X1
	load4! &1 	#X1
	load8! &3 	#X2
	add! 136
	store4
	#
	load4! &1 	#X1
	sigx4
	store8! &2 	#X1
	push! 1
	load8! &2 	#X1
	shift_l
	store8! &2 	#X1
	load4! &1 	#X1
	load8! &3 	#X2
	add! 132
	store4
	#
	load8! &1 	#X1
	add! -1
	load8! &3 	#X2
	add! 140
	store4
	#
	load4! &12
	add! 9
	and! 0xffffffff
	div_u! 3
	load8! &3 	#X2
	add! 144
	store4
	#
	load8! &3 	#X3
	add! 64
	load8
	#
	store8! &2 	#X1
	load8! &3 	#X3
	add! 80
	load8
	#
	store8! &5 	#X4
	push! 2
	load4! &1 	#AR
	load8! &6 	#X4
	load8! &4 	#X1
	call
	store8! &3

	set_sp! &2
	load8! &0 	#AR
	load8! &3 	#X2
	add! 96
	store8
	#
	load8! &3 	#X3
	add! 64
	load8
	#
	store8! &1 	#AR
	load8! &2 	#X2
	add! 80
	load4
	#
	store8! &5 	#X4
	load8! &3 	#X3
	add! 80
	load8
	#
	store8! &2 	#X1
	push! 2
	load4! &5 	#X4
	load8! &3 	#X1
	load8! &3 	#AR
	call
	store8! &3

	set_sp! &2
	load8! &0 	#AR
	load8! &3 	#X2
	add! 112
	store8
	#
	load8! &3 	#X3
	add! 64
	load8
	#
	store8! &1 	#AR
	load8! &2 	#X2
	add! 132
	load4
	#
	store8! &5 	#X4
	load8! &3 	#X3
	add! 80
	load8
	#
	store8! &2 	#X1
	push! 2
	load4! &5 	#X4
	load8! &3 	#X1
	load8! &3 	#AR
	call
	store8! &3

	set_sp! &2
	load8! &0 	#AR
	load8! &3 	#X2
	add! 120
	store8
	#
	push! 0
	load8! &3 	#X2
	add! 14024
	store8
	#
	load4! &12
	add! 6
	sigx4
	store8! &1 	#AR
	push! 1
	load8! &1 	#AR
	shift_l
	store8! &1 	#AR
	load4! &0 	#AR
	load8! &3 	#X2
	add! 13976
	store4
	#
	load8! &3 	#X3
	add! 64
	load8
	#
	store8! &2 	#X1
	load8! &3 	#X3
	add! 80
	load8
	#
	store8! &5 	#X4
	push! 4
	load4! &1 	#AR
	load8! &6 	#X4
	load8! &4 	#X1
	call
	store8! &3

	set_sp! &2
	load8! &0 	#AR
	load8! &3 	#X2
	add! 16
	store8
	#
	load8! &2 	#X2
	add! 13976
	load4
	#
	store8! &5 	#X4
	load4! &4 	#X4
	store8! &2 	#X1
	load8! &1 	#X1
	shift_l! 2
	load8! &3 	#X2
	add! 24
	store8
	#
	load8! &2 	#X2
	add! 96
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L1063.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	add! 112
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L1063.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	add! 120
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L1063.l_o74d3c4
	# END CBRANCH
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L1063.l_o74d3c4
	# END CBRANCH
	load4! &4 	#X4
	shift_ru! 1
	and! 0xffffffff
	store8! &5 	#X4
	load8! &4 	#X4
	load8! &5 	#X4
	add
	load8! &1 	#AR
	add
	load8! &3 	#X2
	add! 13984
	store8
	#
	load8! &1 	#X1
	mult! 3
	load8! &1 	#AR
	add
	load8! &3 	#X2
	add! 13968
	store8
	#
	load4! &5 	#X5
	load8! &3 	#X2
	add! 196
	store4
	#
	load4! &13
	load8! &3 	#X2
	add! 200
	store4
	#
	push! 8
	load8! &3 	#X2
	add! 72
	store1
	#
	load8! &3 	#X3
	call! deflateReset
	store8! &1

	load4! &0 	#AR
	store4! &9
	jump! .L1086.l_o74d3c4
.L1083.l_o74d3c4:
	push! 6
	store8! &6 	#X5
	# CBRANCH
	load4! &0 	#AR
	add! -2147483648
	push! 0
	add! -2147483648
	lt_u
	jump_zero! .L1059.l_o74d3c4
	# END CBRANCH
.L1084.l_o74d3c4:
	load8! &0 	#AR
	neg
	store8! &1 	#AR
	push! 0
	store8! &7 	#X6
	jump! .L1060.l_o74d3c4
.L1082.l_o74d3c4:
	push! zcfree
	load8! &4 	#X3
	add! 72
	store8
	#
	# CBRANCH
	load4! &5 	#X5
	push! 4294967295
	xor
	push! 1
	lt_u
	jump_zero! .L1058.l_o74d3c4
	# END CBRANCH
	jump! .L1083.l_o74d3c4
.L1081.l_o74d3c4:
	push! zcalloc
	load8! &4 	#X3
	add! 64
	store8
	#
	push! 0
	load8! &4 	#X3
	add! 80
	store8
	#
	push! zcalloc
	store8! &2 	#X1
	load8! &3 	#X3
	add! 72
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_not_zero! .L1057.l_o74d3c4
	# END CBRANCH
	jump! .L1082.l_o74d3c4
.L1068.l_o74d3c4:
	push! 1
	store8! &7 	#X6
	jump! .L1060.l_o74d3c4
.L1085.l_o74d3c4:
	# CBRANCH
	load4! &6 	#X6
	push! 1
	xor
	push! 1
	lt_u
	jump_zero! .L1061.l_o74d3c4
	# END CBRANCH
	push! 9
	store8! &5 	#X4
	jump! .L1062.l_o74d3c4
.L1061.l_o74d3c4:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &9
	jump! .L1086.l_o74d3c4
.L1066.l_o74d3c4:
	push! -6
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &9
	jump! .L1086.l_o74d3c4
.L1067.l_o74d3c4:
	push! -6
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &9
	jump! .L1086.l_o74d3c4
.L1063.l_o74d3c4:
	push! 666
	load8! &3 	#X2
	add! 8
	store4
	#
	load8! (+ z_errmsg 48)
	load8! &4 	#X3
	add! 48
	store8
	#
	load8! &3 	#X3
	call! deflateEnd
	store8! &1

	push! -4
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &9
	jump! .L1086.l_o74d3c4
.L1065.l_o74d3c4:
	push! -6
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &9
	jump! .L1086.l_o74d3c4
.L1069.l_o74d3c4:
	push! -4
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &9
.L1086.l_o74d3c4:

	# epilogue
	set_sp! &7
	return

# FUNCTION ENDS:deflateInit2_


# FUNCTION BEGINS:deflateInit_
	EXPORT	deflateInit_
deflateInit_:
	# prologue (1 GPRs)
	push! 0

	load4! &5
	load8! &5
	push! 0
	push! 8
	push! 15
	push! 8
	load4! &9
	load8! &9
	call! deflateInit2_
	store8! &8

	set_sp! &7
	load4! &0 	#AR
	store4! &3

	# epilogue
	store8! &0 #set_sp! &1
	return

# FUNCTION ENDS:deflateInit_

	#peephole move
	#peephole move+binop
	#peephole 1
	#peephole zero_extend
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole push+pop+deadreg+binop
	#peephole pop+push+sub
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole zero_extend
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole pop+cmprev
	#peephole pop+cmp
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+cmp
	#peephole zero_extend
	#peephole zero_extend
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push

# FUNCTION BEGINS:deflateCopy
	EXPORT	deflateCopy
deflateCopy:
	# prologue (6 GPRs)

	set_sp! &-6

	load8! &7
	store8! &4 	#X3
	load8! &8
	store8! &1 	#AR
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L1096.l_o74d3c4
	# END CBRANCH
	load8! &0 	#AR
	add! 64
	load8
	#
	store8! &3 	#X2
	# CBRANCH EQ0
	load8! &2 	#X2
	jump_zero! .L1097.l_o74d3c4
	# END CBRANCH
	load8! &0 	#AR
	add! 72
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L1098.l_o74d3c4
	# END CBRANCH
	load8! &0 	#AR
	add! 56
	load8
	#
	store8! &5 	#X4
	# CBRANCH EQ0
	load8! &4 	#X4
	jump_zero! .L1099.l_o74d3c4
	# END CBRANCH
	load8! &4 	#X4
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ
	load8! &1 	#AR
	xor
	jump_zero! .L1116.l_o74d3c4
	# END CBRANCH
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &8
	jump! .L1117.l_o74d3c4
.L1116.l_o74d3c4:
	load8! &4 	#X4
	add! 8
	load4
	#
	store8! &2 	#X1
	load8! &1 	#X1
	add! -42
	store8! &6 	#X5
	# CBRANCH
	push! 61
	load4! &6 	#X5
	lt_u
	jump_zero! .L1091.l_o74d3c4
	# END CBRANCH
	# CBRANCH EQ
	load4! &1 	#X1
	push! 113
	xor
	jump_zero! .L1093.l_o74d3c4
	# END CBRANCH
	# CBRANCH
	load4! &1 	#X1
	push! 666
	xor
	push! 1
	lt_u
	jump_zero! .L1102.l_o74d3c4
	# END CBRANCH
.L1093.l_o74d3c4:
	# CBRANCH EQ0
	load8! &3 	#X3
	jump_zero! .L1103.l_o74d3c4
	# END CBRANCH
	push! 112
	load8! &1 	#AR
	load8! &5 	#X3
	call! memcpy
	store8! &3

	set_sp! &2
	load8! &3 	#X3
	add! 80
	load8
	#
	store8! &1 	#AR
	push! 14032
	push! 1
	load8! &2 	#AR
	load8! &5 	#X2
	call
	store8! &3

	set_sp! &2
	load8! &0 	#AR
	store8! &3 	#X2
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L1104.l_o74d3c4
	# END CBRANCH
	load8! &0 	#AR
	load8! &4 	#X3
	add! 56
	store8
	#
	push! 14032
	load8! &5 	#X4
	load8! &2 	#AR
	call! memcpy
	store8! &3

	set_sp! &2
	load8! &3 	#X3
	load8! &3 	#X2
	store8
	#
	load8! &3 	#X3
	add! 64
	load8
	#
	store8! &1 	#AR
	load8! &2 	#X2
	add! 80
	load4
	#
	store8! &6 	#X5
	load8! &3 	#X3
	add! 80
	load8
	#
	store8! &2 	#X1
	push! 2
	load4! &6 	#X5
	load8! &3 	#X1
	load8! &3 	#AR
	call
	store8! &3

	set_sp! &2
	load8! &0 	#AR
	load8! &3 	#X2
	add! 96
	store8
	#
	load8! &3 	#X3
	add! 64
	load8
	#
	store8! &1 	#AR
	load8! &2 	#X2
	add! 80
	load4
	#
	store8! &6 	#X5
	load8! &3 	#X3
	add! 80
	load8
	#
	store8! &2 	#X1
	push! 2
	load4! &6 	#X5
	load8! &3 	#X1
	load8! &3 	#AR
	call
	store8! &3

	set_sp! &2
	load8! &0 	#AR
	load8! &3 	#X2
	add! 112
	store8
	#
	load8! &3 	#X3
	add! 64
	load8
	#
	store8! &1 	#AR
	load8! &2 	#X2
	add! 132
	load4
	#
	store8! &6 	#X5
	load8! &3 	#X3
	add! 80
	load8
	#
	store8! &2 	#X1
	push! 2
	load4! &6 	#X5
	load8! &3 	#X1
	load8! &3 	#AR
	call
	store8! &3

	set_sp! &2
	load8! &0 	#AR
	load8! &3 	#X2
	add! 120
	store8
	#
	load8! &3 	#X3
	add! 64
	load8
	#
	store8! &1 	#AR
	load8! &2 	#X2
	add! 13976
	load4
	#
	store8! &6 	#X5
	load8! &3 	#X3
	add! 80
	load8
	#
	store8! &2 	#X1
	push! 4
	load4! &6 	#X5
	load8! &3 	#X1
	load8! &3 	#AR
	call
	store8! &3

	set_sp! &2
	load8! &0 	#AR
	store8! &6 	#X5
	load8! &0 	#AR
	load8! &3 	#X2
	add! 16
	store8
	#
	load8! &2 	#X2
	add! 96
	load8
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L1094.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	add! 112
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L1094.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	add! 120
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L1094.l_o74d3c4
	# END CBRANCH
	# CBRANCH EQ0
	load8! &5 	#X5
	jump_zero! .L1094.l_o74d3c4
	# END CBRANCH
	load8! &2 	#X2
	add! 80
	load4
	#
	store8! &2 	#X1
	load8! &1 	#X1
	load8! &2 	#X1
	add
	and! 0xffffffff
	store8! &4 	#X3
	load8! &4 	#X4
	add! 96
	load8
	#
	store8! &2 	#X1
	load8! &3 	#X3
	load8! &2 	#X1
	load8! &2 	#AR
	call! memcpy
	store8! &3

	set_sp! &2
	load8! &2 	#X2
	add! 80
	load4
	#
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	store8! &4 	#X3
	load8! &4 	#X4
	add! 112
	load8
	#
	store8! &2 	#X1
	load8! &2 	#X2
	add! 112
	load8
	#
	store8! &1 	#AR
	load8! &3 	#X3
	load8! &2 	#X1
	load8! &2 	#AR
	call! memcpy
	store8! &3

	set_sp! &2
	load8! &2 	#X2
	add! 132
	load4
	#
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	store8! &4 	#X3
	load8! &4 	#X4
	add! 120
	load8
	#
	store8! &2 	#X1
	load8! &2 	#X2
	add! 120
	load8
	#
	store8! &1 	#AR
	load8! &3 	#X3
	load8! &2 	#X1
	load8! &2 	#AR
	call! memcpy
	store8! &3

	set_sp! &2
	load8! &2 	#X2
	add! 24
	load8
	#
	and! 0xffffffff
	store8! &4 	#X3
	load8! &4 	#X4
	add! 16
	load8
	#
	store8! &2 	#X1
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &1 	#AR
	load8! &3 	#X3
	load8! &2 	#X1
	load8! &2 	#AR
	call! memcpy
	store8! &3

	set_sp! &2
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &1 	#AR
	load8! &4 	#X4
	add! 32
	load8
	#
	store8! &4 	#X3
	load8! &4 	#X4
	add! 16
	load8
	#
	load8! &4 	#X3
	sub
	neg
	load8! &1 	#AR
	add
	load8! &3 	#X2
	add! 32
	store8
	#
	load8! &2 	#X2
	add! 13976
	load4
	#
	store8! &2 	#X1
	load4! &1 	#X1
	shift_ru! 1
	and! 0xffffffff
	store8! &4 	#X3
	load8! &3 	#X3
	load8! &4 	#X3
	add
	load8! &6 	#X5
	add
	load8! &3 	#X2
	add! 13984
	store8
	#
	load4! &1 	#X1
	mult! 3
	load8! &1 	#AR
	add
	load8! &3 	#X2
	add! 13968
	store8
	#
	load8! &2 	#X2
	add! 216
	load8! &3 	#X2
	add! 10984
	store8
	#
	load8! &2 	#X2
	add! 9384
	load8! &3 	#X2
	add! 11008
	store8
	#
	load8! &2 	#X2
	add! 10360
	load8! &3 	#X2
	add! 11032
	store8
	#
	push! 0
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &8
	jump! .L1117.l_o74d3c4
.L1091.l_o74d3c4:
	load4! &5 	#X5
	store8! &2 	#X1
	push! 2306405961448849409
	load8! &2 	#X1
	shift_ru
	not
	and! 0x1
	# CBRANCH - peep (modesize=1)
	and! 255
	# - EQ0
	jump_zero! .L1093.l_o74d3c4
	# END CBRANCH
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &8
	jump! .L1117.l_o74d3c4
.L1099.l_o74d3c4:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &8
	jump! .L1117.l_o74d3c4
.L1096.l_o74d3c4:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &8
	jump! .L1117.l_o74d3c4
.L1097.l_o74d3c4:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &8
	jump! .L1117.l_o74d3c4
.L1098.l_o74d3c4:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &8
	jump! .L1117.l_o74d3c4
.L1094.l_o74d3c4:
	load8! &3 	#X3
	call! deflateEnd
	store8! &1

	push! -4
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &8
	jump! .L1117.l_o74d3c4
.L1104.l_o74d3c4:
	push! -4
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &8
	jump! .L1117.l_o74d3c4
.L1103.l_o74d3c4:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &8
	jump! .L1117.l_o74d3c4
.L1102.l_o74d3c4:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &8
.L1117.l_o74d3c4:

	# epilogue
	set_sp! &6
	return

# FUNCTION ENDS:deflateCopy

#	.data
configuration_table.s_o74d3c4:
	data2 [0]
	data2 [0]
	data2 [0]
	data2 [0]
	data8 [deflate_stored.s_o74d3c4]
	data2 [4]
	data2 [4]
	data2 [8]
	data2 [4]
	data8 [deflate_fast.s_o74d3c4]
	data2 [4]
	data2 [5]
	data2 [16]
	data2 [8]
	data8 [deflate_fast.s_o74d3c4]
	data2 [4]
	data2 [6]
	data2 [32]
	data2 [32]
	data8 [deflate_fast.s_o74d3c4]
	data2 [4]
	data2 [4]
	data2 [16]
	data2 [16]
	data8 [deflate_slow.s_o74d3c4]
	data2 [8]
	data2 [16]
	data2 [32]
	data2 [32]
	data8 [deflate_slow.s_o74d3c4]
	data2 [8]
	data2 [16]
	data2 [128]
	data2 [128]
	data8 [deflate_slow.s_o74d3c4]
	data2 [8]
	data2 [32]
	data2 [128]
	data2 [256]
	data8 [deflate_slow.s_o74d3c4]
	data2 [32]
	data2 [128]
	data2 [258]
	data2 [1024]
	data8 [deflate_slow.s_o74d3c4]
	data2 [32]
	data2 [258]
	data2 [258]
	data2 [4096]
	data8 [deflate_slow.s_o74d3c4]
	EXPORT	deflate_copyright
#	.text
deflate_copyright:
	data1 [ 32 100 101 102 108 97 116 101 32 49 46 50 46 49 49 32 67 111 112 121 114 105 103 104 116 32 49 57 57 53 45 50 48 49 55 32 74 101 97 110 45 108 111 117 112 32 71 97 105 108 108 121 32 97 110 100 32 77 97 114 107 32 65 100 108 101 114 32 0 ]
#	IMPORT zcalloc
#	IMPORT zcfree
#	IMPORT _tr_align
#	IMPORT z_errmsg
#	IMPORT _tr_init
#	IMPORT _tr_flush_block
#	IMPORT _dist_code
#	IMPORT _length_code
#	IMPORT _tr_flush_bits
#	IMPORT _tr_stored_block
#	IMPORT adler32
#	IMPORT crc32
#	IMPORT memset
#	IMPORT memcpy
#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: o95f807
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"infback.c"
#	.text
	#peephole zero_extend
	#peephole 1
	#peephole pop+cmp
	#peephole move+push(pushable)
	#peephole 1
	#peephole pop+cmp
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole popdi(deadreg)+push
	#peephole and+popsi

# FUNCTION BEGINS:inflateBackInit_
	EXPORT	inflateBackInit_
inflateBackInit_:
	# prologue (4 GPRs)
	push! 0
	push! 0
	push! 0
	push! 0

	load8! &5
	store8! &3 	#X2
	load8! &8
	store8! &1 	#AR
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L6.l_o95f807
	# END CBRANCH
	load8! &0 	#AR
	load1
	#
	# CBRANCH - peep (modesize=1)
	and! 255
	push! 49
	xor
	push! 1
	lt_u
	jump_zero! .L7.l_o95f807
	# END CBRANCH
	# CBRANCH
	load4! &9
	push! 112
	xor
	push! 1
	lt_u
	jump_zero! .L8.l_o95f807
	# END CBRANCH
	# CBRANCH EQ0
	load8! &2 	#X2
	jump_zero! .L9.l_o95f807
	# END CBRANCH
	# CBRANCH EQ0
	load8! &7
	jump_zero! .L10.l_o95f807
	# END CBRANCH
	load4! &6
	add! -8
	store8! &1 	#AR
	# CBRANCH
	push! 7
	load4! &1 	#AR
	lt_u
	not
	jump_zero! .L11.l_o95f807
	# END CBRANCH
	push! 0
	load8! &3 	#X2
	add! 48
	store8
	#
	load8! &2 	#X2
	add! 64
	load8
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L3.l_o95f807
	# END CBRANCH
	load8! &2 	#X2
	add! 80
	load8
	#
	store8! &2 	#X1
	load8! &2 	#X2
	add! 72
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L15.l_o95f807
	# END CBRANCH
.L5.l_o95f807:
	push! 12936
	push! 1
	load8! &3 	#X1
	load8! &3 	#AR
	call
	store8! &3

	set_sp! &2
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L12.l_o95f807
	# END CBRANCH
	load8! &0 	#AR
	load8! &3 	#X2
	add! 56
	store8
	#
	push! 32768
	load8! &1 	#AR
	add! 28
	store4
	#
	load4! &6
	load8! &1 	#AR
	add! 56
	store4
	#
	load4! &6
	store8! &2 	#X1
	push! 1
	load8! &2 	#X1
	shift_l
	load8! &1 	#AR
	add! 60
	store4
	#
	load8! &7
	load8! &1 	#AR
	add! 72
	store8
	#
	push! 0
	load8! &1 	#AR
	add! 64
	store8
	#
	push! 0
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &6
	jump! .L16.l_o95f807
.L15.l_o95f807:
	push! zcfree
	load8! &3 	#X2
	add! 72
	store8
	#
	jump! .L5.l_o95f807
.L3.l_o95f807:
	push! zcalloc
	load8! &3 	#X2
	add! 64
	store8
	#
	push! 0
	load8! &3 	#X2
	add! 80
	store8
	#
	push! 0
	store8! &2 	#X1
	push! zcalloc
	store8! &1 	#AR
	load8! &2 	#X2
	add! 72
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_not_zero! .L5.l_o95f807
	# END CBRANCH
	jump! .L15.l_o95f807
.L7.l_o95f807:
	push! -6
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &6
	jump! .L16.l_o95f807
.L8.l_o95f807:
	push! -6
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &6
	jump! .L16.l_o95f807
.L11.l_o95f807:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &6
	jump! .L16.l_o95f807
.L6.l_o95f807:
	push! -6
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &6
	jump! .L16.l_o95f807
.L10.l_o95f807:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &6
	jump! .L16.l_o95f807
.L9.l_o95f807:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &6
	jump! .L16.l_o95f807
.L12.l_o95f807:
	push! -4
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &6
.L16.l_o95f807:

	# epilogue
	set_sp! &4
	return

# FUNCTION ENDS:inflateBackInit_

.LC0.l_o95f807:
#	.string "invalid block type"
	data1 [ 105 110 118 97 108 105 100 32 98 108 111 99 107 32 116 121 112 101 0 ]
.LC1.l_o95f807:
#	.string "invalid stored block lengths"
	data1 [ 105 110 118 97 108 105 100 32 115 116 111 114 101 100 32 98 108 111 99 107 32 108 101 110 103 116 104 115 0 ]
.LC2.l_o95f807:
#	.string "too many length or distance symbols"
	data1 [ 116 111 111 32 109 97 110 121 32 108 101 110 103 116 104 32 111 114 32 100 105 115 116 97 110 99 101 32 115 121 109 98 111 108 115 0 ]
.LC3.l_o95f807:
#	.string "invalid code lengths set"
	data1 [ 105 110 118 97 108 105 100 32 99 111 100 101 32 108 101 110 103 116 104 115 32 115 101 116 0 ]
.LC4.l_o95f807:
#	.string "invalid bit length repeat"
	data1 [ 105 110 118 97 108 105 100 32 98 105 116 32 108 101 110 103 116 104 32 114 101 112 101 97 116 0 ]
.LC5.l_o95f807:
#	.string "invalid code -- missing end-of-block"
	data1 [ 105 110 118 97 108 105 100 32 99 111 100 101 32 45 45 32 109 105 115 115 105 110 103 32 101 110 100 45 111 102 45 98 108 111 99 107 0 ]
.LC6.l_o95f807:
#	.string "invalid literal/lengths set"
	data1 [ 105 110 118 97 108 105 100 32 108 105 116 101 114 97 108 47 108 101 110 103 116 104 115 32 115 101 116 0 ]
.LC7.l_o95f807:
#	.string "invalid distances set"
	data1 [ 105 110 118 97 108 105 100 32 100 105 115 116 97 110 99 101 115 32 115 101 116 0 ]
.LC8.l_o95f807:
#	.string "invalid literal/length code"
	data1 [ 105 110 118 97 108 105 100 32 108 105 116 101 114 97 108 47 108 101 110 103 116 104 32 99 111 100 101 0 ]
.LC9.l_o95f807:
#	.string "invalid distance code"
	data1 [ 105 110 118 97 108 105 100 32 100 105 115 116 97 110 99 101 32 99 111 100 101 0 ]
.LC10.l_o95f807:
#	.string "invalid distance too far back"
	data1 [ 105 110 118 97 108 105 100 32 100 105 115 116 97 110 99 101 32 116 111 111 32 102 97 114 32 98 97 99 107 0 ]
	#peephole move_dead
	#peephole move+push+sub
	#peephole move_dead
	#peephole pop+push+commut(di)
	#peephole pop+cmp
	#peephole pop(deadreg)+push
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole move
	#peephole move+push+sub
	#peephole move_dead
	#peephole 1
	#peephole zero_extend
	#peephole binop1+deadreg+binop2
	#peephole zero_extend
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole 1
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+sub
	#peephole move_dead
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole pop+cmprev
	#peephole move
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole move_dead
	#peephole move_dead
	#peephole pop+move2(deadreg)
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole move_dead
	#peephole zero_extend
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole move+push+sub
	#peephole move_dead
	#peephole 1
	#peephole zero_extend
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole move_dead
	#peephole move
	#peephole 1
	#peephole nop+set
	#peephole pop+move2(deadreg)
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole zero_extend
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole move_dead
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole zero_extend
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole move
	#peephole 1
	#peephole 1
	#peephole nop+set
	#peephole pop+move2(deadreg)
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move
	#peephole zero_extend
	#peephole 1
	#peephole move_dead
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole 1
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole move
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole 1
	#peephole move
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole move+push+sub
	#peephole move_dead
	#peephole 1
	#peephole nop+set
	#peephole pop+move2(deadreg)
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole 1
	#peephole move
	#peephole zero_extend
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole nop+set
	#peephole pop+move2(deadreg)
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move
	#peephole move+push(pushable)
	#peephole pop+push+commut(di)
	#peephole 1
	#peephole zero_extend
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole 1
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole move_dead
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole zero_extend
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole nop+set
	#peephole move+push(pushable)
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole 1
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole move+push+sub
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole move+push+sub
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole move
	#peephole 1
	#peephole nop+set
	#peephole pop+move2(deadreg)
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move
	#peephole zero_extend
	#peephole 1
	#peephole move_dead
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole 1
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole move
	#peephole zero_extend
	#peephole 1
	#peephole move_dead
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole 1
	#peephole pop+move2(deadreg)
	#peephole move_dead
	#peephole move+push+sub
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole 1
	#peephole move_dead
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole move_dead
	#peephole move
	#peephole move+push(pushable)
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole 1
	#peephole nop+set
	#peephole pop+move2(deadreg)
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole zero_extend
	#peephole 1
	#peephole move_dead
	#peephole move
	#peephole move+push(pushable)
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole 1
	#peephole nop+set
	#peephole pop+move2(deadreg)
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole move_dead
	#peephole move_dead
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move
	#peephole move+push(pushable)
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole nop+set
	#peephole pop+move2(deadreg)
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole move_dead
	#peephole zero_extend
	#peephole move_dead
	#peephole move+push+sub
	#peephole move_dead
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole move_dead
	#peephole 1
	#peephole nop+set
	#peephole pop+move2(deadreg)
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole move
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole zero_extend
	#peephole binop1+deadreg+binop2
	#peephole move_dead
	#peephole move+push+sub
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole binop1+deadreg+binop2
	#peephole move
	#peephole move_dead
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole move_dead
	#peephole 1
	#peephole nop+set
	#peephole pop+move2(deadreg)
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole move
	#peephole move+push(pushable)
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole nop+set
	#peephole pop+move2(deadreg)
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole zero_extend
	#peephole move
	#peephole move+push+sub
	#peephole move_dead
	#peephole pop+move2(deadreg)
	#peephole move
	#peephole move+push+sub
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+sub
	#peephole move_dead
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole move_dead
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole binop1+deadreg+binop2
	#peephole pop+cmprev
	#peephole 1
	#peephole nop+set
	#peephole pop+move2(deadreg)
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole move_dead
	#peephole move_dead
	#peephole move_dead
	#peephole move
	#peephole move+push(pushable)
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole pop+move2(deadreg)
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole pop+cmp
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole nop+set
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole move+push(pushable)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+block+cmp
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole nop+set
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+cmp
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole nop+set
	#peephole pop+block+cmp
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole nop+set
	#peephole pop+block+cmp
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole nop+set
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole nop+set
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+move2(deadreg)
	#peephole redundant blockage insn
	#peephole nop+set
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+commut(si)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole nop+set
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole nop+set
	#peephole pop+block+cmp
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole nop+set
	#peephole pop+block+cmp
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop(deadreg)+pushdi
	#peephole pop+block+cmp
	#peephole popdi+cmp rev
	#peephole pop+block+cmp
	#peephole pop+block+push+block
	#peephole pop(deadreg)+pushdi
	#peephole pop+block+cmp
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole nop+set
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+push(deadreg)+sign_extend
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole zero_extend
	#peephole pop+block+push+commut(di)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move2(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+commut(di)
	#peephole pop+block+push+commut(di)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole zero_extend
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+commut(di)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole zero_extend
	#peephole pop+block+push+commut(di)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+move2(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+commut(di)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole zero_extend
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole zero_extend
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole zero_extend
	#peephole zero_extend
	#peephole zero_extend
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole zero_extend
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+block+push+commut(di)
	#peephole pop+block+push+block
	#peephole zero_extend
	#peephole zero_extend
	#peephole zero_extend
	#peephole zero_extend
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole redundant blockage insn
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole redundant blockage insn
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole and+popsi

# FUNCTION BEGINS:inflateBack
	EXPORT	inflateBack
inflateBack:
	# prologue (16 GPRs)

	set_sp! &-20

	load8! &21
	store8! &7 	#X6
	load8! &22
	store8! &14 	#X13
	load8! &23
	store8! &13 	#X12
	# CBRANCH EQ0
	load8! &6 	#X6
	jump_zero! .L131.l_o95f807
	# END CBRANCH
	load8! &6 	#X6
	add! 56
	load8
	#
	store8! &6 	#X5
	# CBRANCH EQ0
	load8! &5 	#X5
	jump_zero! .L132.l_o95f807
	# END CBRANCH
	push! 0
	load8! &7 	#X6
	add! 48
	store8
	#
	push! 16191
	load8! &6 	#X5
	add! 8
	store8
	#
	push! 0
	load8! &6 	#X5
	add! 64
	store4
	#
	load8! &6 	#X6
	load8
	#
	store8! &1 	#AR
	load8! &0 	#AR
	store8! &20
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L133.l_o95f807
	# END CBRANCH
	load8! &6 	#X6
	add! 8
	load4
	#
	store8! &3 	#X2
.L19.l_o95f807:
	load8! &5 	#X5
	add! 72
	load8
	#
	store8! &16 	#X15
	load8! &5 	#X5
	add! 60
	load4
	#
	store8! &8 	#X7
	push! 16191
	store8! &1 	#AR
	push! 0
	store8! &5 	#X4
	push! 0
	store8! &4 	#X3
	load8! &15 	#X15
	store8! &15 	#X14
	load4! &7 	#X7
	store8! &12 	#X11
.L20.l_o95f807:
	#CASESI
	push! 18
	load4! &1 	#AR
	sigx4
	add! -16191
	lt_u
	not
	jump_zero! .L21.l_o95f807
	load4! &0 	#AR
	sigx4
	add! -16191
	mult! 8
	add! .L23.l_o95f807
	load8
	add! .L23.l_o95f807
	jump
	##
.L23.l_o95f807:
	data8 [(+ .L28.l_o95f807 -.L23.l_o95f807)]#rel casesi entry
	data8 [(+ .L21.l_o95f807 -.L23.l_o95f807)]#rel casesi entry
	data8 [(+ .L27.l_o95f807 -.L23.l_o95f807)]#rel casesi entry
	data8 [(+ .L21.l_o95f807 -.L23.l_o95f807)]#rel casesi entry
	data8 [(+ .L21.l_o95f807 -.L23.l_o95f807)]#rel casesi entry
	data8 [(+ .L26.l_o95f807 -.L23.l_o95f807)]#rel casesi entry
	data8 [(+ .L21.l_o95f807 -.L23.l_o95f807)]#rel casesi entry
	data8 [(+ .L21.l_o95f807 -.L23.l_o95f807)]#rel casesi entry
	data8 [(+ .L21.l_o95f807 -.L23.l_o95f807)]#rel casesi entry
	data8 [(+ .L39.l_o95f807 -.L23.l_o95f807)]#rel casesi entry
	data8 [(+ .L21.l_o95f807 -.L23.l_o95f807)]#rel casesi entry
	data8 [(+ .L21.l_o95f807 -.L23.l_o95f807)]#rel casesi entry
	data8 [(+ .L21.l_o95f807 -.L23.l_o95f807)]#rel casesi entry
	data8 [(+ .L21.l_o95f807 -.L23.l_o95f807)]#rel casesi entry
	data8 [(+ .L21.l_o95f807 -.L23.l_o95f807)]#rel casesi entry
	data8 [(+ .L21.l_o95f807 -.L23.l_o95f807)]#rel casesi entry
	data8 [(+ .L21.l_o95f807 -.L23.l_o95f807)]#rel casesi entry
	data8 [(+ .L213.l_o95f807 -.L23.l_o95f807)]#rel casesi entry
	data8 [(+ .L22.l_o95f807 -.L23.l_o95f807)]#rel casesi entry
.L36.l_o95f807:
	push! 16196
	load8! &6 	#X5
	add! 8
	store4
	#
	load8! &3 	#X3
	shift_ru! 3
	store8! &4 	#X3
	load8! &4 	#X4
	add! -3
	store8! &5 	#X4
.L26.l_o95f807:
	load4! &2 	#X2
	store8! &1 	#AR
	# CBRANCH
	push! 13
	load4! &5 	#X4
	lt_u
	not
	jump_zero! .L31.l_o95f807
	# END CBRANCH
.L30.l_o95f807:
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_not_zero! .L51.l_o95f807
	# END CBRANCH
	push! &0
	add! 152
	#peep - pop(deadreg)+pusharg
	load8! &13 	#X12
	load8! &15 	#X13
	call
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_zero! .L42.l_o95f807
	# END CBRANCH
.L51.l_o95f807:
	load8! &0 	#AR
	add! -1
	store8! &1 	#AR
	load8! &19
	store8! &2 	#X1
	load8! &1 	#X1
	add! 1
	store8! &20
	load8! &1 	#X1
	load1
	#
	store8! &3 	#X2
	load4! &4 	#X4
	pow2
	load8! &3 	#X2
	mult
	load8! &4 	#X3
	add
	store8! &4 	#X3
	load8! &4 	#X4
	add! 8
	store8! &5 	#X4
	# CBRANCH
	push! 13
	load4! &5 	#X4
	lt_u
	jump_zero! .L30.l_o95f807
	# END CBRANCH
	load4! &0 	#AR
	store8! &3 	#X2
.L31.l_o95f807:
	load4! &3 	#X3
	and! 0x1f
	add! 257
	store8! &1 	#AR
	load4! &0 	#AR
	load8! &6 	#X5
	add! 132
	store4
	#
	load8! &3 	#X3
	shift_ru! 5
	and! 0x1f
	add! 1
	store8! &8 	#X7
	load4! &7 	#X7
	load8! &6 	#X5
	add! 136
	store4
	#
	load8! &3 	#X3
	shift_ru! 10
	and! 0xf
	add! 4
	store8! &2 	#X1
	load4! &1 	#X1
	load8! &6 	#X5
	add! 128
	store4
	#
	load8! &3 	#X3
	shift_ru! 14
	store8! &4 	#X3
	load8! &4 	#X4
	add! -14
	store8! &5 	#X4
	# CBRANCH
	push! 286
	load4! &1 	#AR
	lt_u
	not
	jump_zero! .L52.l_o95f807
	# END CBRANCH
	# CBRANCH
	push! 30
	load4! &8 	#X7
	lt_u
	jump_zero! .L53.l_o95f807
	# END CBRANCH
.L52.l_o95f807:
	push! .LC2.l_o95f807
	load8! &7 	#X6
	add! 48
	store8
	#
	push! 16209
	load8! &6 	#X5
	add! 8
	store4
	#
.L22.l_o95f807:
	load8! &19
	store8! &2 	#X1
	push! -3
	store8! &1 	#AR
.L29.l_o95f807:
	load8! &1 	#X1
	load8! &7 	#X6
	store8
	#
	load4! &2 	#X2
	load8! &7 	#X6
	add! 8
	store4
	#
.L17.l_o95f807:
	load4! &0 	#AR
	store4! &22
	jump! .L237.l_o95f807
.L240.l_o95f807:
	load1! &9 	#X9
	and! 0xffffffff
	store8! &2 	#X1
	load8! &3 	#X3
	load8! &2 	#X1
	shift_ru
	store8! &4 	#X3
	load8! &7 	#X7
	load8! &5 	#X4
	sub
	neg
	store8! &5 	#X4
	load8! &0 	#AR
	shift_ru! 16
	and! 0xffff
	store8! &1 	#AR
	load4! &0 	#AR
	load8! &6 	#X5
	add! 92
	store4
	#
.L95.l_o95f807:
	# CBRANCH EQ0
	load4! &11 	#X11
	jump_not_zero! .L134.l_o95f807
	# END CBRANCH
	load8! &5 	#X5
	add! 72
	load8
	#
	store8! &8 	#X7
	load8! &5 	#X5
	add! 60
	load4
	#
	store8! &12 	#X11
	load4! &11 	#X11
	load8! &6 	#X5
	add! 64
	store4
	#
	load4! &11 	#X11
	load8! &8 	#X7
	load8! &27
	load8! &27
	store8! &5 	#X1
	load8! &4 	#X1
	call
	store8! &3

	set_sp! &2
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_not_zero! .L238.l_o95f807
	# END CBRANCH
	load8! &5 	#X5
	add! 92
	load4
	#
	store8! &1 	#AR
	load8! &7 	#X7
	add! 1
	store8! &15 	#X14
	load1! &0 	#AR
	load8! &8 	#X7
	store1
	#
	load8! &11 	#X11
	add! -1
	store8! &12 	#X11
	push! 16200
	load8! &6 	#X5
	add! 8
	store4
	#
.L39.l_o95f807:
	# CBRANCH
	push! 5
	load4! &3 	#X2
	lt_u
	not
	jump_zero! .L239.l_o95f807
	# END CBRANCH
.L88.l_o95f807:
	load8! &5 	#X5
	add! 104
	load8
	#
	store8! &2 	#X1
	load4! &3 	#X3
	store8! &9 	#X8
	load8! &5 	#X5
	add! 120
	load4
	#
	store8! &11 	#X10
	load4! &10 	#X10
	store8! &1 	#AR
	push! -1
	load8! &1 	#AR
	shift_l
	not
	load8! &9 	#X8
	and
	and! 0xffffffff
	shift_l! 3
	load8! &2 	#X1
	add
	load8
	store8! &1 	#AR
	load8! &0 	#AR
	shift_ru! 8
	store8! &10 	#X9
	load1! &9 	#X9
	store8! &8 	#X7
	# CBRANCH
	load4! &4 	#X4
	load4! &8 	#X7
	lt_u
	jump_zero! .L91.l_o95f807
	# END CBRANCH
	load4! &2 	#X2
	store8! &1 	#AR
.L93.l_o95f807:
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_not_zero! .L92.l_o95f807
	# END CBRANCH
	push! &0
	add! 152
	#peep - pop(deadreg)+pusharg
	load8! &13 	#X12
	load8! &15 	#X13
	call
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_zero! .L42.l_o95f807
	# END CBRANCH
	load8! &5 	#X5
	add! 104
	load8
	#
	store8! &2 	#X1
	load8! &5 	#X5
	add! 120
	load4
	#
	store8! &11 	#X10
.L92.l_o95f807:
	load8! &0 	#AR
	add! -1
	store8! &1 	#AR
	load8! &19
	store8! &3 	#X2
	load8! &2 	#X2
	add! 1
	store8! &20
	load8! &2 	#X2
	load1
	#
	store8! &8 	#X7
	load4! &4 	#X4
	pow2
	load8! &8 	#X7
	mult
	load8! &4 	#X3
	add
	store8! &4 	#X3
	load8! &4 	#X4
	add! 8
	store8! &5 	#X4
	load4! &3 	#X3
	store8! &9 	#X8
	load4! &10 	#X10
	store8! &3 	#X2
	push! -1
	load8! &3 	#X2
	shift_l
	not
	load8! &9 	#X8
	and
	and! 0xffffffff
	shift_l! 3
	load8! &2 	#X1
	add
	load8
	store8! &3 	#X2
	load8! &2 	#X2
	shift_ru! 8
	store8! &10 	#X9
	load1! &9 	#X9
	store8! &8 	#X7
	# CBRANCH
	load4! &4 	#X4
	load4! &8 	#X7
	lt_u
	not
	jump_zero! .L93.l_o95f807
	# END CBRANCH
	load8! &2 	#X2
	store8! &11 	#X10
	load4! &0 	#AR
	store8! &3 	#X2
	load8! &10 	#X10
	store8! &1 	#AR
.L91.l_o95f807:
	load1! &0 	#AR
	store8! &11 	#X10
	# CBRANCH EQ0
	load1! &0 	#AR
	jump_zero! .L240.l_o95f807
	# END CBRANCH
	load8! &10 	#X10
	and! 0xfffffffffffffff0
	# CBRANCH - peep (modesize=1)
	and! 255
	# - EQ0
	jump_zero! .L96.l_o95f807
	# END CBRANCH
	load1! &9 	#X9
	and! 0xffffffff
	store8! &2 	#X1
	load8! &3 	#X3
	load8! &2 	#X1
	shift_ru
	store8! &4 	#X3
	load8! &7 	#X7
	load8! &5 	#X4
	sub
	neg
	store8! &5 	#X4
	load8! &0 	#AR
	shift_ru! 16
	and! 0xffff
	load8! &6 	#X5
	add! 92
	store4
	#
.L97.l_o95f807:
	load8! &10 	#X10
	and! 0x20
	# CBRANCH - peep (modesize=1)
	and! 255
	# - EQ0
	jump_zero! .L103.l_o95f807
	# END CBRANCH
	push! 16191
	load8! &6 	#X5
	add! 8
	store4
	#
.L28.l_o95f807:
	load8! &5 	#X5
	add! 12
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_not_zero! .L32.l_o95f807
	# END CBRANCH
	# CBRANCH
	push! 2
	load4! &5 	#X4
	lt_u
	not
	jump_zero! .L34.l_o95f807
	# END CBRANCH
.L33.l_o95f807:
	# CBRANCH EQ0
	load4! &2 	#X2
	jump_not_zero! .L35.l_o95f807
	# END CBRANCH
	push! &0
	add! 152
	#peep - pop(deadreg)+pusharg
	load8! &13 	#X12
	load8! &15 	#X13
	call
	store8! &2

	store8! &0 #set_sp! &1
	load4! &0 	#AR
	store8! &3 	#X2
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_zero! .L42.l_o95f807
	# END CBRANCH
.L35.l_o95f807:
	load8! &2 	#X2
	add! -1
	store8! &3 	#X2
	load8! &19
	store8! &1 	#AR
	load8! &0 	#AR
	add! 1
	store8! &20
	load8! &0 	#AR
	load1
	#
	store8! &2 	#X1
	load4! &4 	#X4
	pow2
	load8! &2 	#X1
	mult
	load8! &4 	#X3
	add
	store8! &4 	#X3
	load8! &4 	#X4
	add! 8
	store8! &5 	#X4
.L34.l_o95f807:
	load4! &3 	#X3
	and! 0x1
	load8! &6 	#X5
	add! 12
	store4
	#
	load8! &3 	#X3
	shift_ru! 1
	and! 0x3
	store8! &1 	#AR
	# CBRANCH EQ
	load4! &0 	#AR
	push! 2
	xor
	jump_zero! .L36.l_o95f807
	# END CBRANCH
	# CBRANCH EQ
	load4! &0 	#AR
	push! 3
	xor
	jump_zero! .L37.l_o95f807
	# END CBRANCH
	# CBRANCH EQ
	load4! &0 	#AR
	push! 1
	xor
	jump_zero! .L38.l_o95f807
	# END CBRANCH
	push! 16193
	load8! &6 	#X5
	add! 8
	store4
	#
	load8! &3 	#X3
	shift_ru! 3
	store8! &4 	#X3
	load8! &4 	#X4
	add! -3
	store8! &5 	#X4
.L27.l_o95f807:
	load8! &4 	#X4
	and! 0x7
	and! 0xffffffff
	store8! &1 	#AR
	load8! &3 	#X3
	load8! &1 	#AR
	shift_ru
	store8! &4 	#X3
	load8! &4 	#X4
	and! 0xfffffffffffffff8
	store8! &5 	#X4
	# CBRANCH
	push! 31
	load4! &5 	#X4
	lt_u
	not
	jump_zero! .L40.l_o95f807
	# END CBRANCH
	load4! &2 	#X2
	store8! &1 	#AR
.L43.l_o95f807:
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_not_zero! .L41.l_o95f807
	# END CBRANCH
	push! &0
	add! 152
	#peep - pop(deadreg)+pusharg
	load8! &13 	#X12
	load8! &15 	#X13
	call
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_zero! .L42.l_o95f807
	# END CBRANCH
.L41.l_o95f807:
	load8! &0 	#AR
	add! -1
	store8! &1 	#AR
	load8! &19
	store8! &2 	#X1
	load8! &1 	#X1
	add! 1
	store8! &20
	load8! &1 	#X1
	load1
	#
	store8! &3 	#X2
	load4! &4 	#X4
	pow2
	load8! &3 	#X2
	mult
	load8! &4 	#X3
	add
	store8! &4 	#X3
	load8! &4 	#X4
	add! 8
	store8! &5 	#X4
	# CBRANCH
	push! 31
	load4! &5 	#X4
	lt_u
	jump_zero! .L43.l_o95f807
	# END CBRANCH
	load4! &0 	#AR
	store8! &3 	#X2
.L40.l_o95f807:
	load8! &3 	#X3
	and! 0xffff
	store8! &2 	#X1
	load8! &3 	#X3
	shift_ru! 16
	xor! 0xffff
	# CBRANCH - peep (modesize=8)
	# - EQ
	load8! &2 	#X1
	xor
	jump_zero! .L44.l_o95f807
	# END CBRANCH
	push! .LC1.l_o95f807
	load8! &7 	#X6
	add! 48
	store8
	#
	push! 16209
	load8! &6 	#X5
	add! 8
	store4
	#
	load8! &19
	store8! &2 	#X1
	push! -3
	store8! &1 	#AR
	jump! .L29.l_o95f807
.L21.l_o95f807:
	load8! &19
	store8! &2 	#X1
	push! -2
	store8! &1 	#AR
	load8! &1 	#X1
	load8! &7 	#X6
	store8
	#
	load4! &2 	#X2
	load8! &7 	#X6
	add! 8
	store4
	#
	jump! .L17.l_o95f807
.L66.l_o95f807:
	# CBRANCH EQ
	load2! &9 	#X9
	push! 16
	xor
	jump_zero! .L241.l_o95f807
	# END CBRANCH
	# CBRANCH EQ
	load2! &9 	#X9
	push! 17
	xor
	jump_zero! .L75.l_o95f807
	# END CBRANCH
	load8! &7 	#X7
	add! 7
	store8! &10 	#X9
	# CBRANCH
	load4! &4 	#X4
	load4! &10 	#X9
	lt_u
	jump_zero! .L77.l_o95f807
	# END CBRANCH
.L76.l_o95f807:
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_not_zero! .L81.l_o95f807
	# END CBRANCH
	push! &0
	add! 152
	#peep - pop(deadreg)+pusharg
	load8! &13 	#X12
	load8! &15 	#X13
	call
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_not_zero! .L81.l_o95f807
	# END CBRANCH
.L42.l_o95f807:
	push! 0
	store8! &2 	#X1
	push! -5
	store8! &1 	#AR
	push! 0
	store8! &3 	#X2
.L243.l_o95f807:
	load8! &1 	#X1
	load8! &7 	#X6
	store8
	#
	load4! &2 	#X2
	load8! &7 	#X6
	add! 8
	store4
	#
	jump! .L17.l_o95f807
.L133.l_o95f807:
	push! 0
	store8! &3 	#X2
	jump! .L19.l_o95f807
.L239.l_o95f807:
	# CBRANCH
	push! 257
	load4! &12 	#X11
	lt_u
	jump_zero! .L88.l_o95f807
	# END CBRANCH
	load8! &14 	#X14
	load8! &7 	#X6
	add! 24
	store8
	#
	load4! &11 	#X11
	load8! &7 	#X6
	add! 32
	store4
	#
	load8! &19
	load8! &7 	#X6
	store8
	#
	load4! &2 	#X2
	load8! &7 	#X6
	add! 8
	store4
	#
	load8! &3 	#X3
	load8! &6 	#X5
	add! 80
	store8
	#
	load4! &4 	#X4
	load8! &6 	#X5
	add! 88
	store4
	#
	load8! &5 	#X5
	add! 64
	load4
	#
	store8! &2 	#X1
	load8! &5 	#X5
	add! 60
	load4
	#
	store8! &1 	#AR
	# CBRANCH
	load4! &1 	#X1
	load4! &1 	#AR
	lt_u
	jump_zero! .L89.l_o95f807
	# END CBRANCH
	load8! &11 	#X11
	load8! &1 	#AR
	sub
	neg
	load8! &6 	#X5
	add! 64
	store4
	#
.L89.l_o95f807:
	load4! &0 	#AR
	load8! &7 	#X6
	call! inflate_fast
	set_sp! (+ &0 16)
	

	load8! &6 	#X6
	add! 24
	load8
	#
	store8! &15 	#X14
	load8! &6 	#X6
	add! 32
	load4
	#
	store8! &12 	#X11
	load8! &6 	#X6
	load8
	#
	store8! &20
	load8! &6 	#X6
	add! 8
	load4
	#
	store8! &3 	#X2
	load8! &5 	#X5
	add! 80
	load8
	#
	store8! &4 	#X3
	load8! &5 	#X5
	add! 88
	load4
	#
	store8! &5 	#X4
	load8! &5 	#X5
	add! 8
	load4
	#
	store8! &1 	#AR
	jump! .L20.l_o95f807
.L44.l_o95f807:
	load4! &3 	#X3
	and! 0xffff
	store8! &5 	#X4
	load4! &4 	#X4
	load8! &6 	#X5
	add! 92
	store4
	#
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_not_zero! .L50.l_o95f807
	# END CBRANCH
.L45.l_o95f807:
	push! 16191
	load8! &6 	#X5
	add! 8
	store4
	#
	load8! &5 	#X5
	add! 12
	load4
	#
	store8! &1 	#AR
	push! 0
	store8! &5 	#X4
	push! 0
	store8! &4 	#X3
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_zero! .L33.l_o95f807
	# END CBRANCH
.L32.l_o95f807:
	load4! &11 	#X11
	store8! &8 	#X7
	push! 16208
	load8! &6 	#X5
	add! 8
	store4
	#
.L24.l_o95f807:
	load8! &5 	#X5
	add! 60
	load4
	#
	store8! &1 	#AR
	# CBRANCH
	load4! &7 	#X7
	load4! &1 	#AR
	lt_u
	not
	jump_zero! .L129.l_o95f807
	# END CBRANCH
	load8! &19
	store8! &2 	#X1
	push! 1
	store8! &1 	#AR
	load8! &1 	#X1
	load8! &7 	#X6
	store8
	#
	load4! &2 	#X2
	load8! &7 	#X6
	add! 8
	store4
	#
	jump! .L17.l_o95f807
.L129.l_o95f807:
	load8! &7 	#X7
	load8! &1 	#AR
	sub
	neg
	store8! &2 	#X1
	load8! &5 	#X5
	add! 72
	load8
	#
	store8! &1 	#AR
	load4! &1 	#X1
	load8! &1 	#AR
	load8! &27
	load8! &27
	store8! &12 	#X8
	load8! &11 	#X8
	call
	store8! &3

	set_sp! &2
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_not_zero! .L130.l_o95f807
	# END CBRANCH
	load8! &19
	store8! &2 	#X1
	push! 1
	store8! &1 	#AR
	load8! &1 	#X1
	load8! &7 	#X6
	store8
	#
	load4! &2 	#X2
	load8! &7 	#X6
	add! 8
	store4
	#
	jump! .L17.l_o95f807
.L130.l_o95f807:
	load8! &19
	store8! &2 	#X1
	push! -5
	store8! &1 	#AR
	load8! &1 	#X1
	load8! &7 	#X6
	store8
	#
	load4! &2 	#X2
	load8! &7 	#X6
	add! 8
	store4
	#
	jump! .L17.l_o95f807
.L213.l_o95f807:
	load4! &11 	#X11
	store8! &8 	#X7
	jump! .L24.l_o95f807
.L53.l_o95f807:
	push! 0
	load8! &6 	#X5
	add! 140
	store4
	#
	push! 0
	store8! &8 	#X7
	load4! &2 	#X2
	store8! &1 	#AR
.L54.l_o95f807:
	# CBRANCH
	push! 2
	load4! &5 	#X4
	lt_u
	not
	jump_zero! .L58.l_o95f807
	# END CBRANCH
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_not_zero! .L55.l_o95f807
	# END CBRANCH
	push! &0
	add! 152
	#peep - pop(deadreg)+pusharg
	load8! &13 	#X12
	load8! &15 	#X13
	call
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_zero! .L42.l_o95f807
	# END CBRANCH
	load8! &5 	#X5
	add! 140
	load4
	#
	store8! &8 	#X7
	load8! &5 	#X5
	add! 128
	load4
	#
	store8! &2 	#X1
.L55.l_o95f807:
	load8! &0 	#AR
	add! -1
	store8! &1 	#AR
	load8! &19
	store8! &3 	#X2
	load8! &2 	#X2
	add! 1
	store8! &20
	load8! &2 	#X2
	load1
	#
	store8! &9 	#X8
	load4! &4 	#X4
	pow2
	load8! &9 	#X8
	mult
	load8! &4 	#X3
	add
	store8! &4 	#X3
	load8! &4 	#X4
	add! 8
	store8! &5 	#X4
.L58.l_o95f807:
	load2! &3 	#X3
	store8! &10 	#X9
	load8! &7 	#X7
	add! 1
	store8! &9 	#X8
	load4! &8 	#X8
	load8! &6 	#X5
	add! 140
	store4
	#
	load4! &7 	#X7
	store8! &3 	#X2
	load8! &2 	#X2
	load8! &3 	#X2
	add
	add! .Li_order_3203.l_o95f807
	load2
	and! 0x0ffff
	store8! &3 	#X2
	load8! &9 	#X9
	and! 0x7
	store8! &8 	#X7
	load4! &2 	#X2
	sigx4
	add! 76
	store8! &3 	#X2
	load8! &2 	#X2
	load8! &3 	#X2
	add
	load8! &6 	#X5
	add
	store8! &3 	#X2
	load2! &7 	#X7
	load8! &3 	#X2
	store2
	#
	load8! &3 	#X3
	shift_ru! 3
	store8! &4 	#X3
	load8! &4 	#X4
	add! -3
	store8! &5 	#X4
	# CBRANCH
	load4! &8 	#X8
	load4! &2 	#X1
	lt_u
	jump_zero! .L56.l_o95f807
	# END CBRANCH
	load4! &8 	#X8
	store8! &8 	#X7
	jump! .L54.l_o95f807
.L46.l_o95f807:
	# CBRANCH EQ0
	load4! &11 	#X11
	jump_not_zero! .L47.l_o95f807
	# END CBRANCH
	load8! &5 	#X5
	add! 72
	load8
	#
	store8! &15 	#X14
	load8! &5 	#X5
	add! 60
	load4
	#
	store8! &12 	#X11
	load4! &11 	#X11
	load8! &6 	#X5
	add! 64
	store4
	#
	load4! &11 	#X11
	load8! &15 	#X14
	load8! &27
	load8! &27
	store8! &5 	#X1
	load8! &4 	#X1
	call
	store8! &3

	set_sp! &2
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_not_zero! .L242.l_o95f807
	# END CBRANCH
.L47.l_o95f807:
	load4! &2 	#X2
	store8! &4 	#X3
	# CBRANCH
	load4! &11 	#X11
	load4! &3 	#X2
	lt_u
	jump_zero! .L48.l_o95f807
	# END CBRANCH
	load4! &11 	#X11
	store8! &4 	#X3
.L48.l_o95f807:
	# CBRANCH
	load4! &4 	#X4
	load4! &4 	#X3
	lt_u
	jump_zero! .L49.l_o95f807
	# END CBRANCH
	load4! &4 	#X4
	store8! &4 	#X3
.L49.l_o95f807:
	load4! &3 	#X3
	store8! &5 	#X4
	load8! &4 	#X4
	load8! &20
	load8! &16 	#X14
	call! memcpy
	store8! &3

	set_sp! &2
	load8! &3 	#X3
	load8! &3 	#X2
	sub
	neg
	store8! &3 	#X2
	load8! &19
	load8! &5 	#X4
	add
	store8! &20
	load8! &3 	#X3
	load8! &12 	#X11
	sub
	neg
	store8! &12 	#X11
	load8! &14 	#X14
	load8! &5 	#X4
	add
	store8! &15 	#X14
	load8! &5 	#X5
	add! 92
	load4
	#
	store8! &2 	#X1
	load8! &3 	#X3
	load8! &2 	#X1
	sub
	neg
	store8! &5 	#X4
	load4! &4 	#X4
	load8! &6 	#X5
	add! 92
	store4
	#
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_zero! .L45.l_o95f807
	# END CBRANCH
.L50.l_o95f807:
	# CBRANCH EQ0
	load4! &2 	#X2
	jump_not_zero! .L46.l_o95f807
	# END CBRANCH
	push! &0
	add! 152
	#peep - pop(deadreg)+pusharg
	load8! &13 	#X12
	load8! &15 	#X13
	call
	store8! &2

	store8! &0 #set_sp! &1
	load4! &0 	#AR
	store8! &3 	#X2
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_not_zero! .L46.l_o95f807
	# END CBRANCH
	push! 0
	store8! &2 	#X1
	push! -5
	store8! &1 	#AR
	push! 0
	store8! &3 	#X2
	jump! .L243.l_o95f807
.L242.l_o95f807:
	load8! &19
	store8! &2 	#X1
	push! -5
	store8! &1 	#AR
	load8! &1 	#X1
	load8! &7 	#X6
	store8
	#
	load4! &2 	#X2
	load8! &7 	#X6
	add! 8
	store4
	#
	jump! .L17.l_o95f807
.L103.l_o95f807:
	load8! &10 	#X10
	and! 0x40
	# CBRANCH - peep (modesize=1)
	and! 255
	# - EQ0
	jump_zero! .L104.l_o95f807
	# END CBRANCH
	push! .LC8.l_o95f807
	load8! &7 	#X6
	add! 48
	store8
	#
	push! 16209
	load8! &6 	#X5
	add! 8
	store4
	#
	load8! &19
	store8! &2 	#X1
	push! -3
	store8! &1 	#AR
	jump! .L29.l_o95f807
.L134.l_o95f807:
	load8! &14 	#X14
	store8! &8 	#X7
	load8! &7 	#X7
	add! 1
	store8! &15 	#X14
	load1! &0 	#AR
	load8! &8 	#X7
	store1
	#
	load8! &11 	#X11
	add! -1
	store8! &12 	#X11
	push! 16200
	load8! &6 	#X5
	add! 8
	store4
	#
	jump! .L39.l_o95f807
.L96.l_o95f807:
	load8! &0 	#AR
	shift_ru! 16
	and! 0xffff
	store4! &17
	load8! &0 	#AR
	shift_ru! 8
	store1! &18
	load1! &17
	store8! &8 	#X7
	load1! &0 	#AR
	load8! &8 	#X7
	add
	and! 0xffffffff
	store8! &1 	#AR
	push! -1
	load8! &1 	#AR
	shift_l
	not
	store8! &11 	#X10
	load8! &8 	#X8
	load8! &11 	#X10
	and
	and! 0xffffffff
	store8! &9 	#X8
	load4! &7 	#X7
	store8! &1 	#AR
	load8! &8 	#X8
	load8! &1 	#AR
	shift_ru
	load4! &17
	add
	and! 0xffffffff
	shift_l! 3
	load8! &2 	#X1
	add
	load8
	store8! &1 	#AR
	load8! &0 	#AR
	shift_ru! 8
	store8! &10 	#X9
	load1! &9 	#X9
	store8! &9 	#X8
	load8! &7 	#X7
	load8! &9 	#X8
	add
	store8! &16 	#X15
	# CBRANCH
	load4! &4 	#X4
	load4! &16 	#X15
	lt_u
	jump_zero! .L98.l_o95f807
	# END CBRANCH
	load8! &14 	#X14
	store8! &19
	load4! &2 	#X2
	store8! &1 	#AR
	load4! &16
	store8! &16 	#X15
.L100.l_o95f807:
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_not_zero! .L99.l_o95f807
	# END CBRANCH
	push! &0
	add! 152
	#peep - pop(deadreg)+pusharg
	load8! &13 	#X12
	load8! &15 	#X13
	call
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_zero! .L42.l_o95f807
	# END CBRANCH
	load8! &5 	#X5
	add! 104
	load8
	#
	store8! &2 	#X1
.L99.l_o95f807:
	load8! &0 	#AR
	add! -1
	store8! &1 	#AR
	load8! &19
	store8! &3 	#X2
	load8! &2 	#X2
	add! 1
	store8! &20
	load8! &2 	#X2
	load1
	#
	store8! &9 	#X8
	load4! &4 	#X4
	pow2
	load8! &9 	#X8
	mult
	load8! &4 	#X3
	add
	store8! &4 	#X3
	load8! &4 	#X4
	add! 8
	store8! &5 	#X4
	load4! &3 	#X3
	load8! &11 	#X10
	and
	and! 0xffffffff
	store8! &9 	#X8
	load4! &7 	#X7
	store8! &3 	#X2
	load8! &8 	#X8
	load8! &3 	#X2
	shift_ru
	load8! &16 	#X15
	add
	and! 0xffffffff
	shift_l! 3
	load8! &2 	#X1
	add
	load8
	store8! &3 	#X2
	load8! &2 	#X2
	shift_ru! 8
	store8! &10 	#X9
	load1! &9 	#X9
	store8! &9 	#X8
	load8! &7 	#X7
	load8! &9 	#X8
	add
	store8! &15 	#X14
	# CBRANCH
	load4! &4 	#X4
	load4! &15 	#X14
	lt_u
	not
	jump_zero! .L100.l_o95f807
	# END CBRANCH
	load8! &18
	store8! &15 	#X14
	load8! &2 	#X2
	store8! &2 	#X1
	load4! &0 	#AR
	store8! &3 	#X2
	load8! &1 	#X1
	store8! &1 	#AR
.L98.l_o95f807:
	load4! &7 	#X7
	store8! &2 	#X1
	load8! &3 	#X3
	load8! &2 	#X1
	shift_ru
	store8! &4 	#X3
	load1! &17
	store8! &2 	#X1
	load8! &4 	#X4
	load8! &2 	#X1
	sub
	store8! &5 	#X4
	load1! &9 	#X9
	store8! &2 	#X1
	load1! &0 	#AR
	store8! &11 	#X10
	load4! &8 	#X8
	store8! &8 	#X7
	load8! &3 	#X3
	load8! &8 	#X7
	shift_ru
	store8! &4 	#X3
	load8! &4 	#X4
	load8! &2 	#X1
	sub
	store8! &5 	#X4
	load8! &0 	#AR
	shift_ru! 16
	and! 0xffff
	store8! &1 	#AR
	load4! &0 	#AR
	load8! &6 	#X5
	add! 92
	store4
	#
	# CBRANCH EQ0
	load1! &10 	#X10
	jump_not_zero! .L97.l_o95f807
	# END CBRANCH
	jump! .L95.l_o95f807
.L104.l_o95f807:
	load8! &10 	#X10
	and! 0xf
	store8! &1 	#AR
	load1! &0 	#AR
	store8! &2 	#X1
	load4! &1 	#X1
	load8! &6 	#X5
	add! 100
	store4
	#
	# CBRANCH EQ0
	load1! &0 	#AR
	jump_zero! .L105.l_o95f807
	# END CBRANCH
	# CBRANCH
	load4! &4 	#X4
	load4! &2 	#X1
	lt_u
	jump_zero! .L106.l_o95f807
	# END CBRANCH
	load4! &2 	#X2
	store8! &1 	#AR
.L108.l_o95f807:
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_not_zero! .L107.l_o95f807
	# END CBRANCH
	push! &0
	add! 152
	#peep - pop(deadreg)+pusharg
	load8! &13 	#X12
	load8! &15 	#X13
	call
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_zero! .L42.l_o95f807
	# END CBRANCH
	load8! &5 	#X5
	add! 100
	load4
	#
	store8! &2 	#X1
.L107.l_o95f807:
	load8! &0 	#AR
	add! -1
	store8! &1 	#AR
	load8! &19
	store8! &3 	#X2
	load8! &2 	#X2
	add! 1
	store8! &20
	load8! &2 	#X2
	load1
	#
	store8! &8 	#X7
	load4! &4 	#X4
	pow2
	load8! &8 	#X7
	mult
	load8! &4 	#X3
	add
	store8! &4 	#X3
	load8! &4 	#X4
	add! 8
	store8! &5 	#X4
	# CBRANCH
	load4! &4 	#X4
	load4! &2 	#X1
	lt_u
	not
	jump_zero! .L108.l_o95f807
	# END CBRANCH
	load4! &0 	#AR
	store8! &3 	#X2
.L106.l_o95f807:
	load8! &5 	#X5
	add! 92
	load4
	#
	store8! &1 	#AR
	load4! &3 	#X3
	store8! &8 	#X7
	load4! &1 	#X1
	store8! &9 	#X8
	push! -1
	load8! &9 	#X8
	shift_l
	not
	load8! &8 	#X7
	and
	load8! &1 	#AR
	add
	load8! &6 	#X5
	add! 92
	store4
	#
	load4! &1 	#X1
	store8! &1 	#AR
	load8! &3 	#X3
	load8! &1 	#AR
	shift_ru
	store8! &4 	#X3
	load8! &1 	#X1
	load8! &5 	#X4
	sub
	neg
	store8! &5 	#X4
.L105.l_o95f807:
	load8! &5 	#X5
	add! 112
	load8
	#
	store8! &2 	#X1
	load4! &3 	#X3
	store8! &9 	#X8
	load8! &5 	#X5
	add! 124
	load4
	#
	store8! &10 	#X9
	load4! &9 	#X9
	store8! &1 	#AR
	push! -1
	load8! &1 	#AR
	shift_l
	not
	load8! &9 	#X8
	and
	and! 0xffffffff
	shift_l! 3
	load8! &2 	#X1
	add
	load8
	store8! &1 	#AR
	load8! &0 	#AR
	shift_ru! 8
	store8! &11 	#X10
	load1! &10 	#X10
	store8! &8 	#X7
	# CBRANCH
	load4! &4 	#X4
	load4! &8 	#X7
	lt_u
	jump_zero! .L109.l_o95f807
	# END CBRANCH
	load4! &2 	#X2
	store8! &1 	#AR
.L111.l_o95f807:
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_not_zero! .L110.l_o95f807
	# END CBRANCH
	push! &0
	add! 152
	#peep - pop(deadreg)+pusharg
	load8! &13 	#X12
	load8! &15 	#X13
	call
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_zero! .L42.l_o95f807
	# END CBRANCH
	load8! &5 	#X5
	add! 112
	load8
	#
	store8! &2 	#X1
	load8! &5 	#X5
	add! 124
	load4
	#
	store8! &10 	#X9
.L110.l_o95f807:
	load8! &0 	#AR
	add! -1
	store8! &1 	#AR
	load8! &19
	store8! &3 	#X2
	load8! &2 	#X2
	add! 1
	store8! &20
	load8! &2 	#X2
	load1
	#
	store8! &8 	#X7
	load4! &4 	#X4
	pow2
	load8! &8 	#X7
	mult
	load8! &4 	#X3
	add
	store8! &4 	#X3
	load8! &4 	#X4
	add! 8
	store8! &5 	#X4
	load4! &3 	#X3
	store8! &9 	#X8
	load4! &9 	#X9
	store8! &3 	#X2
	push! -1
	load8! &3 	#X2
	shift_l
	not
	load8! &9 	#X8
	and
	and! 0xffffffff
	shift_l! 3
	load8! &2 	#X1
	add
	load8
	store8! &3 	#X2
	load8! &2 	#X2
	shift_ru! 8
	store8! &11 	#X10
	load1! &10 	#X10
	store8! &8 	#X7
	# CBRANCH
	load4! &4 	#X4
	load4! &8 	#X7
	lt_u
	not
	jump_zero! .L111.l_o95f807
	# END CBRANCH
	load8! &2 	#X2
	store8! &10 	#X9
	load4! &0 	#AR
	store8! &3 	#X2
	load8! &9 	#X9
	store8! &1 	#AR
.L109.l_o95f807:
	load1! &0 	#AR
	store8! &10 	#X9
	load8! &9 	#X9
	and! 0xfffffffffffffff0
	# CBRANCH - peep (modesize=1)
	and! 255
	# - EQ0
	jump_zero! .L244.l_o95f807
	# END CBRANCH
.L112.l_o95f807:
	load1! &10 	#X10
	and! 0xffffffff
	store8! &2 	#X1
	load8! &3 	#X3
	load8! &2 	#X1
	shift_ru
	store8! &4 	#X3
	load8! &7 	#X7
	load8! &5 	#X4
	sub
	neg
	store8! &5 	#X4
	load8! &9 	#X9
	and! 0x40
	# CBRANCH - peep (modesize=1)
	and! 255
	# - EQ0
	jump_zero! .L116.l_o95f807
	# END CBRANCH
	push! .LC9.l_o95f807
	load8! &7 	#X6
	add! 48
	store8
	#
	push! 16209
	load8! &6 	#X5
	add! 8
	store4
	#
	load8! &19
	store8! &2 	#X1
	push! -3
	store8! &1 	#AR
	jump! .L29.l_o95f807
.L244.l_o95f807:
	load8! &0 	#AR
	shift_ru! 16
	and! 0xffff
	store8! &10 	#X9
	load8! &0 	#AR
	shift_ru! 8
	store1! &17
	load1! &16
	store8! &8 	#X7
	load1! &0 	#AR
	load8! &8 	#X7
	add
	and! 0xffffffff
	store8! &1 	#AR
	push! -1
	load8! &1 	#AR
	shift_l
	not
	store8! &11 	#X10
	load8! &8 	#X8
	load8! &11 	#X10
	and
	and! 0xffffffff
	store8! &9 	#X8
	load4! &7 	#X7
	store8! &1 	#AR
	load8! &8 	#X8
	load8! &1 	#AR
	shift_ru
	load8! &10 	#X9
	add
	and! 0xffffffff
	shift_l! 3
	load8! &2 	#X1
	add
	load8
	store8! &1 	#AR
	load8! &0 	#AR
	shift_ru! 8
	and! 0xff
	load8! &8 	#X7
	add
	store8! &9 	#X8
	# CBRANCH
	load4! &4 	#X4
	load4! &9 	#X8
	lt_u
	jump_zero! .L113.l_o95f807
	# END CBRANCH
	load4! &2 	#X2
	store8! &1 	#AR
.L115.l_o95f807:
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_not_zero! .L114.l_o95f807
	# END CBRANCH
	push! &0
	add! 152
	#peep - pop(deadreg)+pusharg
	load8! &13 	#X12
	load8! &15 	#X13
	call
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_zero! .L42.l_o95f807
	# END CBRANCH
	load8! &5 	#X5
	add! 112
	load8
	#
	store8! &2 	#X1
.L114.l_o95f807:
	load8! &0 	#AR
	add! -1
	store8! &1 	#AR
	load8! &19
	store8! &3 	#X2
	load8! &2 	#X2
	add! 1
	store8! &20
	load8! &2 	#X2
	load1
	#
	store8! &9 	#X8
	load4! &4 	#X4
	pow2
	load8! &9 	#X8
	mult
	load8! &4 	#X3
	add
	store8! &4 	#X3
	load8! &4 	#X4
	add! 8
	store8! &5 	#X4
	load4! &3 	#X3
	load8! &11 	#X10
	and
	and! 0xffffffff
	store8! &9 	#X8
	load4! &7 	#X7
	store8! &3 	#X2
	load8! &8 	#X8
	load8! &3 	#X2
	shift_ru
	load8! &10 	#X9
	add
	and! 0xffffffff
	shift_l! 3
	load8! &2 	#X1
	add
	load8
	store8! &3 	#X2
	load8! &2 	#X2
	shift_ru! 8
	and! 0xff
	load8! &8 	#X7
	add
	store8! &9 	#X8
	# CBRANCH
	load4! &4 	#X4
	load4! &9 	#X8
	lt_u
	not
	jump_zero! .L115.l_o95f807
	# END CBRANCH
	load8! &2 	#X2
	store8! &2 	#X1
	load4! &0 	#AR
	store8! &3 	#X2
	load8! &1 	#X1
	store8! &1 	#AR
.L113.l_o95f807:
	load4! &7 	#X7
	store8! &2 	#X1
	load8! &3 	#X3
	load8! &2 	#X1
	shift_ru
	store8! &4 	#X3
	load1! &16
	store8! &2 	#X1
	load8! &4 	#X4
	load8! &2 	#X1
	sub
	store8! &5 	#X4
	load8! &0 	#AR
	shift_ru! 8
	store8! &11 	#X10
	load1! &10 	#X10
	store8! &8 	#X7
	load1! &0 	#AR
	store8! &10 	#X9
	jump! .L112.l_o95f807
.L38.l_o95f807:
	push! .Li_lenfix_3181.l_o95f807
	load8! &6 	#X5
	add! 104
	store8
	#
	push! .Li_distfix_3182.l_o95f807
	load8! &6 	#X5
	add! 112
	store8
	#
	push! 21474836489
	load8! &6 	#X5
	add! 120
	store8
	#
	push! 16200
	load8! &6 	#X5
	add! 8
	store4
	#
	load8! &3 	#X3
	shift_ru! 3
	store8! &4 	#X3
	load8! &4 	#X4
	add! -3
	store8! &5 	#X4
	# CBRANCH
	push! 5
	load4! &3 	#X2
	lt_u
	not
	jump_zero! .L239.l_o95f807
	# END CBRANCH
	jump! .L88.l_o95f807
.L37.l_o95f807:
	push! .LC0.l_o95f807
	load8! &7 	#X6
	add! 48
	store8
	#
	push! 16209
	load8! &6 	#X5
	add! 8
	store4
	#
	load8! &19
	store8! &2 	#X1
	push! -3
	store8! &1 	#AR
	jump! .L29.l_o95f807
.L131.l_o95f807:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &22
	jump! .L237.l_o95f807
.L132.l_o95f807:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &22
	jump! .L237.l_o95f807
.L56.l_o95f807:
	load4! &0 	#AR
	store8! &3 	#X2
	# CBRANCH
	push! 18
	load4! &9 	#X8
	lt_u
	not
	jump_zero! .L59.l_o95f807
	# END CBRANCH
	load4! &8 	#X8
	store8! &2 	#X1
	load8! &1 	#X1
	load8! &2 	#X1
	add
	add! .Li_order_3203.l_o95f807
	store8! &1 	#AR
	load8! &8 	#X8
	sub! 18
	neg
	and! 0xffffffff
	load8! &2 	#X1
	add
	store8! &2 	#X1
	load8! &1 	#X1
	load8! &2 	#X1
	add
	store8! &2 	#X1
	push! .Li_order_3203.l_o95f807
	add! 2
	load8! &2 	#X1
	add
	store8! &8 	#X7
.L60.l_o95f807:
	load8! &0 	#AR
	load2
	#
	and! 0x0ffff
	sigx4
	add! 76
	store8! &2 	#X1
	load8! &1 	#X1
	load8! &2 	#X1
	add
	load8! &6 	#X5
	add
	store8! &2 	#X1
	push! 0
	load8! &2 	#X1
	store2
	#
	load8! &0 	#AR
	add! 2
	store8! &1 	#AR
	# CBRANCH
	load8! &7 	#X7
	load8! &1 	#AR
	xor
	push! 1
	lt_u
	jump_zero! .L60.l_o95f807
	# END CBRANCH
	push! 19
	load8! &6 	#X5
	add! 140
	store4
	#
.L59.l_o95f807:
	load8! &5 	#X5
	add! 1368
	store8! &9 	#X8
	load8! &8 	#X8
	load8! &6 	#X5
	add! 144
	store8
	#
	load8! &8 	#X8
	load8! &6 	#X5
	add! 104
	store8
	#
	push! 7
	load8! &6 	#X5
	add! 120
	store4
	#
	load8! &5 	#X5
	add! 792
	store8! &17
	load8! &5 	#X5
	add! 120
	store8! &19
	load8! &5 	#X5
	add! 144
	store8! &16 	#X15
	load8! &5 	#X5
	add! 152
	store8! &18
	load8! &16
	load8! &19
	load8! &17 	#X15
	push! 19
	load8! &21
	push! 0
	call! inflate_table
	store8! &6

	set_sp! &5
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_zero! .L61.l_o95f807
	# END CBRANCH
	push! .LC3.l_o95f807
	load8! &7 	#X6
	add! 48
	store8
	#
	push! 16209
	load8! &6 	#X5
	add! 8
	store4
	#
	load8! &19
	store8! &2 	#X1
	push! -3
	store8! &1 	#AR
	jump! .L29.l_o95f807
.L116.l_o95f807:
	load8! &0 	#AR
	shift_ru! 16
	and! 0xffff
	store8! &2 	#X1
	load4! &1 	#X1
	load8! &6 	#X5
	add! 96
	store4
	#
	load8! &9 	#X9
	and! 0xf
	store8! &8 	#X7
	load1! &7 	#X7
	store8! &1 	#AR
	load4! &0 	#AR
	load8! &6 	#X5
	add! 100
	store4
	#
	# CBRANCH EQ0
	load1! &7 	#X7
	jump_not_zero! .L245.l_o95f807
	# END CBRANCH
.L117.l_o95f807:
	load8! &5 	#X5
	add! 60
	load4
	#
	store8! &1 	#AR
	load8! &5 	#X5
	add! 64
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - reverse 
	load4! &1 	#AR
	lt_u
	jump_zero! .L121.l_o95f807
	# END CBRANCH
	load8! &11 	#X11
	load8! &1 	#AR
	sub
	neg
	store8! &1 	#AR
.L121.l_o95f807:
	# CBRANCH
	load4! &0 	#AR
	load4! &2 	#X1
	lt_u
	jump_zero! .L122.l_o95f807
	# END CBRANCH
	push! .LC10.l_o95f807
	load8! &7 	#X6
	add! 48
	store8
	#
	push! 16209
	load8! &6 	#X5
	add! 8
	store4
	#
	load8! &19
	store8! &2 	#X1
	push! -3
	store8! &1 	#AR
	jump! .L29.l_o95f807
.L122.l_o95f807:
	load8! &5 	#X5
	add! 60
	load4
	#
	store8! &8 	#X7
	# CBRANCH EQ0
	load4! &11 	#X11
	jump_not_zero! .L123.l_o95f807
	# END CBRANCH
	load8! &5 	#X5
	add! 72
	load8
	#
	store8! &15 	#X14
	load4! &7 	#X7
	load8! &6 	#X5
	add! 64
	store4
	#
	load4! &7 	#X7
	load8! &15 	#X14
	load8! &27
	load8! &27
	store8! &5 	#X1
	load8! &4 	#X1
	call
	store8! &3

	set_sp! &2
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_not_zero! .L246.l_o95f807
	# END CBRANCH
	load8! &5 	#X5
	add! 60
	load4
	#
	store8! &1 	#AR
	load4! &7 	#X7
	store8! &12 	#X11
	load4! &0 	#AR
	store8! &8 	#X7
.L123.l_o95f807:
	load8! &5 	#X5
	add! 96
	load4
	#
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &8 	#X7
	sub
	neg
	store8! &2 	#X1
	# CBRANCH
	load4! &1 	#X1
	load4! &12 	#X11
	lt_u
	jump_zero! .L125.l_o95f807
	# END CBRANCH
	load4! &1 	#X1
	load8! &15 	#X14
	add
	store8! &2 	#X1
	load8! &11 	#X11
	load8! &1 	#AR
	add
	store8! &9 	#X8
	load8! &7 	#X7
	load8! &9 	#X8
	sub
	neg
	store8! &9 	#X8
.L126.l_o95f807:
	load8! &5 	#X5
	add! 92
	load4
	#
	store8! &1 	#AR
	load4! &0 	#AR
	store8! &8 	#X7
	# CBRANCH
	load4! &8 	#X8
	load4! &1 	#AR
	lt_u
	jump_zero! .L127.l_o95f807
	# END CBRANCH
	load4! &8 	#X8
	store8! &8 	#X7
.L127.l_o95f807:
	load8! &7 	#X7
	load8! &1 	#AR
	sub
	neg
	load8! &6 	#X5
	add! 92
	store4
	#
	load8! &7 	#X7
	load8! &12 	#X11
	sub
	neg
	store8! &12 	#X11
	load8! &14 	#X14
	store8! &1 	#AR
	load8! &7 	#X7
	add! -1
	and! 0xffffffff
	store8! &10 	#X9
	load8! &14 	#X14
	add! 1
	load8! &10 	#X9
	add
	store8! &9 	#X8
.L128.l_o95f807:
	load8! &1 	#X1
	load1
	#
	load8! &1 	#AR
	store1
	#
	load8! &0 	#AR
	add! 1
	store8! &1 	#AR
	load8! &1 	#X1
	add! 1
	store8! &2 	#X1
	# CBRANCH
	load8! &0 	#AR
	load8! &9 	#X8
	xor
	push! 1
	lt_u
	jump_zero! .L128.l_o95f807
	# END CBRANCH
	load8! &9 	#X9
	add! 1
	load8! &15 	#X14
	add
	store8! &15 	#X14
	load8! &5 	#X5
	add! 92
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_not_zero! .L122.l_o95f807
	# END CBRANCH
	load8! &5 	#X5
	add! 8
	load4
	#
	store8! &1 	#AR
	jump! .L20.l_o95f807
.L245.l_o95f807:
	# CBRANCH
	load4! &4 	#X4
	load4! &1 	#AR
	lt_u
	jump_zero! .L118.l_o95f807
	# END CBRANCH
.L120.l_o95f807:
	# CBRANCH EQ0
	load4! &2 	#X2
	jump_not_zero! .L119.l_o95f807
	# END CBRANCH
	push! &0
	add! 152
	#peep - pop(deadreg)+pusharg
	load8! &13 	#X12
	load8! &15 	#X13
	call
	store8! &2

	store8! &0 #set_sp! &1
	load4! &0 	#AR
	store8! &3 	#X2
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_zero! .L42.l_o95f807
	# END CBRANCH
	load8! &5 	#X5
	add! 100
	load4
	#
	store8! &1 	#AR
.L119.l_o95f807:
	load8! &2 	#X2
	add! -1
	store8! &3 	#X2
	load8! &19
	store8! &2 	#X1
	load8! &1 	#X1
	add! 1
	store8! &20
	load8! &1 	#X1
	load1
	#
	store8! &8 	#X7
	load4! &4 	#X4
	pow2
	load8! &8 	#X7
	mult
	load8! &4 	#X3
	add
	store8! &4 	#X3
	load8! &4 	#X4
	add! 8
	store8! &5 	#X4
	# CBRANCH
	load4! &4 	#X4
	load4! &1 	#AR
	lt_u
	not
	jump_zero! .L120.l_o95f807
	# END CBRANCH
.L118.l_o95f807:
	load8! &5 	#X5
	add! 96
	load4
	#
	store8! &2 	#X1
	load4! &3 	#X3
	store8! &8 	#X7
	load4! &0 	#AR
	store8! &9 	#X8
	push! -1
	load8! &9 	#X8
	shift_l
	not
	load8! &8 	#X7
	and
	load8! &2 	#X1
	add
	store8! &2 	#X1
	load4! &1 	#X1
	load8! &6 	#X5
	add! 96
	store4
	#
	load4! &0 	#AR
	store8! &8 	#X7
	load8! &3 	#X3
	load8! &8 	#X7
	shift_ru
	store8! &4 	#X3
	load8! &4 	#X4
	load8! &1 	#AR
	sub
	store8! &5 	#X4
	jump! .L117.l_o95f807
.L125.l_o95f807:
	load4! &0 	#AR
	neg
	load8! &15 	#X14
	add
	store8! &2 	#X1
	load4! &11 	#X11
	store8! &9 	#X8
	jump! .L126.l_o95f807
.L61.l_o95f807:
	push! 0
	load8! &6 	#X5
	add! 140
	store4
	#
	load4! &2 	#X2
	store8! &1 	#AR
.L62.l_o95f807:
	load8! &5 	#X5
	add! 140
	load4
	#
	store8! &3 	#X2
	load8! &5 	#X5
	add! 132
	load4
	#
	store8! &11 	#X10
	load8! &5 	#X5
	add! 136
	load4
	#
	load8! &11 	#X10
	add
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - reverse 
	load4! &3 	#X2
	gt_u
	jump_zero! .L247.l_o95f807
	# END CBRANCH
	load8! &5 	#X5
	add! 104
	load8
	#
	store8! &8 	#X7
	load4! &3 	#X3
	store8! &3 	#X2
	load8! &5 	#X5
	add! 120
	load4
	#
	store8! &10 	#X9
	load4! &9 	#X9
	store8! &2 	#X1
	push! -1
	load8! &2 	#X1
	shift_l
	not
	load8! &3 	#X2
	and
	and! 0xffffffff
	shift_l! 3
	load8! &8 	#X7
	add
	load8
	store8! &11 	#X10
	load8! &10 	#X10
	shift_ru! 8
	store8! &2 	#X1
	load1! &1 	#X1
	store8! &3 	#X2
	# CBRANCH
	load4! &4 	#X4
	load4! &3 	#X2
	lt_u
	jump_zero! .L63.l_o95f807
	# END CBRANCH
.L65.l_o95f807:
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_not_zero! .L64.l_o95f807
	# END CBRANCH
	push! &0
	add! 152
	#peep - pop(deadreg)+pusharg
	load8! &13 	#X12
	load8! &15 	#X13
	call
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_zero! .L42.l_o95f807
	# END CBRANCH
	load8! &5 	#X5
	add! 104
	load8
	#
	store8! &8 	#X7
	load8! &5 	#X5
	add! 120
	load4
	#
	store8! &10 	#X9
.L64.l_o95f807:
	load8! &0 	#AR
	add! -1
	store8! &1 	#AR
	load8! &19
	store8! &2 	#X1
	load8! &1 	#X1
	add! 1
	store8! &20
	load8! &1 	#X1
	load1
	#
	store8! &3 	#X2
	load4! &4 	#X4
	pow2
	load8! &3 	#X2
	mult
	load8! &4 	#X3
	add
	store8! &4 	#X3
	load8! &4 	#X4
	add! 8
	store8! &5 	#X4
	load4! &3 	#X3
	store8! &2 	#X1
	load4! &9 	#X9
	store8! &3 	#X2
	push! -1
	load8! &3 	#X2
	shift_l
	not
	load8! &2 	#X1
	and
	and! 0xffffffff
	shift_l! 3
	load8! &8 	#X7
	add
	load8
	store8! &11 	#X10
	load8! &10 	#X10
	shift_ru! 8
	store8! &2 	#X1
	load1! &1 	#X1
	store8! &3 	#X2
	# CBRANCH
	load4! &4 	#X4
	load4! &3 	#X2
	lt_u
	not
	jump_zero! .L65.l_o95f807
	# END CBRANCH
.L63.l_o95f807:
	load8! &10 	#X10
	shift_ru! 16
	store8! &10 	#X9
	load1! &1 	#X1
	store8! &8 	#X7
	# CBRANCH
	push! 15
	load2! &10 	#X9
	lt_u
	not
	jump_zero! .L66.l_o95f807
	# END CBRANCH
	load4! &7 	#X7
	store8! &2 	#X1
	load8! &3 	#X3
	load8! &2 	#X1
	shift_ru
	store8! &4 	#X3
	load8! &2 	#X2
	load8! &5 	#X4
	sub
	neg
	store8! &5 	#X4
	load8! &5 	#X5
	add! 140
	load4
	#
	store8! &2 	#X1
	load8! &1 	#X1
	add! 1
	load8! &6 	#X5
	add! 140
	store4
	#
	load4! &1 	#X1
	add! 76
	store8! &2 	#X1
	load8! &1 	#X1
	load8! &2 	#X1
	add
	load8! &6 	#X5
	add
	store8! &2 	#X1
	load2! &9 	#X9
	load8! &2 	#X1
	store2
	#
	jump! .L62.l_o95f807
.L81.l_o95f807:
	load8! &0 	#AR
	add! -1
	store8! &1 	#AR
	load8! &19
	store8! &2 	#X1
	load8! &1 	#X1
	add! 1
	store8! &20
	load8! &1 	#X1
	load1
	#
	store8! &11 	#X10
	load4! &4 	#X4
	pow2
	load8! &11 	#X10
	mult
	load8! &4 	#X3
	add
	store8! &4 	#X3
	load8! &4 	#X4
	add! 8
	store8! &5 	#X4
	# CBRANCH
	load4! &4 	#X4
	load4! &10 	#X9
	lt_u
	not
	jump_zero! .L76.l_o95f807
	# END CBRANCH
.L77.l_o95f807:
	load4! &7 	#X7
	store8! &2 	#X1
	load8! &3 	#X3
	load8! &2 	#X1
	shift_ru
	store8! &2 	#X1
	push! -7
	load8! &3 	#X2
	sub
	store8! &8 	#X7
	load4! &1 	#X1
	and! 0x7f
	add! 11
	store8! &3 	#X2
	load8! &1 	#X1
	shift_ru! 7
	store8! &4 	#X3
	load8! &4 	#X4
	load8! &8 	#X7
	add
	store8! &5 	#X4
	push! 0
	store8! &8 	#X7
.L74.l_o95f807:
	load8! &5 	#X5
	add! 140
	load4
	#
	store8! &2 	#X1
	load8! &2 	#X2
	load8! &2 	#X1
	add
	store8! &3 	#X2
	load8! &5 	#X5
	add! 132
	load4
	#
	store8! &10 	#X9
	load8! &5 	#X5
	add! 136
	load4
	#
	load8! &10 	#X9
	add
	store8! &10 	#X9
	# CBRANCH
	load4! &9 	#X9
	load4! &3 	#X2
	lt_u
	not
	jump_zero! .L82.l_o95f807
	# END CBRANCH
	load2! &7 	#X7
	store8! &10 	#X9
.L83.l_o95f807:
	load4! &1 	#X1
	add! 76
	store8! &8 	#X7
	load8! &7 	#X7
	load8! &8 	#X7
	add
	load8! &6 	#X5
	add
	store8! &8 	#X7
	load2! &9 	#X9
	load8! &8 	#X7
	store2
	#
	load8! &1 	#X1
	add! 1
	store8! &2 	#X1
	# CBRANCH
	load4! &2 	#X2
	load4! &2 	#X1
	xor
	push! 1
	lt_u
	jump_zero! .L83.l_o95f807
	# END CBRANCH
	load4! &2 	#X2
	load8! &6 	#X5
	add! 140
	store4
	#
	jump! .L62.l_o95f807
.L246.l_o95f807:
	load8! &19
	store8! &2 	#X1
	push! -5
	store8! &1 	#AR
	load8! &1 	#X1
	load8! &7 	#X6
	store8
	#
	load4! &2 	#X2
	load8! &7 	#X6
	add! 8
	store4
	#
	jump! .L17.l_o95f807
.L238.l_o95f807:
	load8! &19
	store8! &2 	#X1
	push! -5
	store8! &1 	#AR
	load8! &1 	#X1
	load8! &7 	#X6
	store8
	#
	load4! &2 	#X2
	load8! &7 	#X6
	add! 8
	store4
	#
	jump! .L17.l_o95f807
.L75.l_o95f807:
	load8! &7 	#X7
	add! 3
	store8! &10 	#X9
	# CBRANCH
	load4! &4 	#X4
	load4! &10 	#X9
	lt_u
	jump_zero! .L78.l_o95f807
	# END CBRANCH
.L80.l_o95f807:
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_not_zero! .L79.l_o95f807
	# END CBRANCH
	push! &0
	add! 152
	#peep - pop(deadreg)+pusharg
	load8! &13 	#X12
	load8! &15 	#X13
	call
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_zero! .L42.l_o95f807
	# END CBRANCH
.L79.l_o95f807:
	load8! &0 	#AR
	add! -1
	store8! &1 	#AR
	load8! &19
	store8! &2 	#X1
	load8! &1 	#X1
	add! 1
	store8! &20
	load8! &1 	#X1
	load1
	#
	store8! &11 	#X10
	load4! &4 	#X4
	pow2
	load8! &11 	#X10
	mult
	load8! &4 	#X3
	add
	store8! &4 	#X3
	load8! &4 	#X4
	add! 8
	store8! &5 	#X4
	# CBRANCH
	load4! &4 	#X4
	load4! &10 	#X9
	lt_u
	not
	jump_zero! .L80.l_o95f807
	# END CBRANCH
.L78.l_o95f807:
	load4! &7 	#X7
	store8! &2 	#X1
	load8! &3 	#X3
	load8! &2 	#X1
	shift_ru
	store8! &2 	#X1
	push! -3
	load8! &3 	#X2
	sub
	store8! &8 	#X7
	load4! &1 	#X1
	and! 0x7
	add! 3
	store8! &3 	#X2
	load8! &1 	#X1
	shift_ru! 3
	store8! &4 	#X3
	load8! &4 	#X4
	load8! &8 	#X7
	add
	store8! &5 	#X4
	push! 0
	store8! &8 	#X7
	jump! .L74.l_o95f807
.L82.l_o95f807:
	load4! &0 	#AR
	store8! &3 	#X2
	push! .LC4.l_o95f807
	load8! &7 	#X6
	add! 48
	store8
	#
	push! 16209
	load8! &6 	#X5
	add! 8
	store4
	#
	load8! &19
	store8! &2 	#X1
	push! -3
	store8! &1 	#AR
	jump! .L29.l_o95f807
.L247.l_o95f807:
	load4! &0 	#AR
	store8! &3 	#X2
	load8! &5 	#X5
	add! 8
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ
	push! 16209
	xor
	jump_zero! .L22.l_o95f807
	# END CBRANCH
	load8! &5 	#X5
	add! 664
	load2
	#
	# CBRANCH - peep (modesize=2)
	and! 65535
	# - EQ0
	jump_not_zero! .L85.l_o95f807
	# END CBRANCH
	push! .LC5.l_o95f807
	load8! &7 	#X6
	add! 48
	store8
	#
	push! 16209
	load8! &6 	#X5
	add! 8
	store4
	#
	load8! &19
	store8! &2 	#X1
	push! -3
	store8! &1 	#AR
	jump! .L29.l_o95f807
.L241.l_o95f807:
	load8! &7 	#X7
	add! 2
	store8! &10 	#X9
	# CBRANCH
	load4! &4 	#X4
	load4! &10 	#X9
	lt_u
	jump_zero! .L69.l_o95f807
	# END CBRANCH
.L71.l_o95f807:
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_not_zero! .L70.l_o95f807
	# END CBRANCH
	push! &0
	add! 152
	#peep - pop(deadreg)+pusharg
	load8! &13 	#X12
	load8! &15 	#X13
	call
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_zero! .L42.l_o95f807
	# END CBRANCH
.L70.l_o95f807:
	load8! &0 	#AR
	add! -1
	store8! &1 	#AR
	load8! &19
	store8! &2 	#X1
	load8! &1 	#X1
	add! 1
	store8! &20
	load8! &1 	#X1
	load1
	#
	store8! &11 	#X10
	load4! &4 	#X4
	pow2
	load8! &11 	#X10
	mult
	load8! &4 	#X3
	add
	store8! &4 	#X3
	load8! &4 	#X4
	add! 8
	store8! &5 	#X4
	# CBRANCH
	load4! &4 	#X4
	load4! &10 	#X9
	lt_u
	not
	jump_zero! .L71.l_o95f807
	# END CBRANCH
.L69.l_o95f807:
	load4! &7 	#X7
	store8! &2 	#X1
	load8! &3 	#X3
	load8! &2 	#X1
	shift_ru
	store8! &2 	#X1
	load8! &4 	#X4
	load8! &3 	#X2
	sub
	store8! &5 	#X4
	load8! &5 	#X5
	add! 140
	load4
	#
	store8! &3 	#X2
	# CBRANCH EQ0
	load4! &2 	#X2
	jump_zero! .L248.l_o95f807
	# END CBRANCH
	load8! &2 	#X2
	add! -1
	and! 0xffffffff
	add! 76
	store8! &3 	#X2
	load8! &2 	#X2
	load8! &3 	#X2
	add
	load8! &6 	#X5
	add
	load2
	and! 0x0ffff
	store8! &8 	#X7
	load4! &1 	#X1
	and! 0x3
	add! 3
	store8! &3 	#X2
	load8! &1 	#X1
	shift_ru! 2
	store8! &4 	#X3
	load8! &4 	#X4
	add! -2
	store8! &5 	#X4
	jump! .L74.l_o95f807
.L85.l_o95f807:
	load8! &8 	#X8
	load8! &6 	#X5
	add! 144
	store8
	#
	load8! &8 	#X8
	load8! &6 	#X5
	add! 104
	store8
	#
	push! 9
	load8! &6 	#X5
	add! 120
	store4
	#
	load8! &16
	load8! &19
	load8! &17 	#X15
	load4! &13 	#X10
	load8! &21
	push! 1
	call! inflate_table
	store8! &6

	set_sp! &5
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_zero! .L86.l_o95f807
	# END CBRANCH
	push! .LC6.l_o95f807
	load8! &7 	#X6
	add! 48
	store8
	#
	push! 16209
	load8! &6 	#X5
	add! 8
	store4
	#
	load8! &19
	store8! &2 	#X1
	push! -3
	store8! &1 	#AR
	jump! .L29.l_o95f807
.L248.l_o95f807:
	load4! &0 	#AR
	store8! &3 	#X2
	push! .LC4.l_o95f807
	load8! &7 	#X6
	add! 48
	store8
	#
	push! 16209
	load8! &6 	#X5
	add! 8
	store4
	#
	load8! &19
	store8! &2 	#X1
	push! -3
	store8! &1 	#AR
	jump! .L29.l_o95f807
.L86.l_o95f807:
	load8! &5 	#X5
	add! 144
	load8
	#
	load8! &6 	#X5
	add! 112
	store8
	#
	push! 6
	load8! &6 	#X5
	add! 124
	store4
	#
	load8! &5 	#X5
	add! 124
	store8! &8 	#X7
	load8! &5 	#X5
	add! 136
	load4
	#
	store8! &2 	#X1
	load8! &5 	#X5
	add! 132
	load4
	#
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	load8! &18
	add
	store8! &1 	#AR
	load8! &16
	load8! &8 	#X7
	load8! &17 	#X15
	load4! &4 	#X1
	load8! &4 	#AR
	push! 2
	call! inflate_table
	store8! &6

	set_sp! &5
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_zero! .L87.l_o95f807
	# END CBRANCH
	push! .LC7.l_o95f807
	load8! &7 	#X6
	add! 48
	store8
	#
	push! 16209
	load8! &6 	#X5
	add! 8
	store4
	#
	load8! &19
	store8! &2 	#X1
	push! -3
	store8! &1 	#AR
	jump! .L29.l_o95f807
.L87.l_o95f807:
	push! 16200
	load8! &6 	#X5
	add! 8
	store4
	#
	# CBRANCH
	push! 5
	load4! &3 	#X2
	lt_u
	not
	jump_zero! .L239.l_o95f807
	# END CBRANCH
	jump! .L88.l_o95f807
.L237.l_o95f807:

	# epilogue
	set_sp! &20
	return

# FUNCTION ENDS:inflateBack


# FUNCTION BEGINS:inflateBackEnd
	EXPORT	inflateBackEnd
inflateBackEnd:
	# prologue (4 GPRs)
	push! 0
	push! 0
	push! 0
	push! 0

	load8! &5
	store8! &3 	#X2
	# CBRANCH EQ0
	load8! &2 	#X2
	jump_zero! .L251.l_o95f807
	# END CBRANCH
	load8! &2 	#X2
	add! 56
	load8
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L252.l_o95f807
	# END CBRANCH
	load8! &2 	#X2
	add! 72
	load8
	#
	store8! &2 	#X1
	# CBRANCH EQ0
	load8! &1 	#X1
	jump_zero! .L253.l_o95f807
	# END CBRANCH
	load8! &2 	#X2
	add! 80
	load8
	#
	store8! &4 	#X3
	load8! &0 	#AR
	load8! &4 	#X3
	load8! &3 	#X1
	call
	set_sp! (+ &0 16)
	

	push! 0
	load8! &3 	#X2
	add! 56
	store8
	#
	push! 0
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &6
	jump! .L256.l_o95f807
.L251.l_o95f807:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &6
	jump! .L256.l_o95f807
.L253.l_o95f807:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &6
	jump! .L256.l_o95f807
.L252.l_o95f807:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &6
.L256.l_o95f807:

	# epilogue
	set_sp! &4
	return

# FUNCTION ENDS:inflateBackEnd

.Li_distfix_3182.l_o95f807:
	data1 [16]
	data1 [5]
	data2 [1]
	data4 [0]

	data1 [23]
	data1 [5]
	data2 [257]
	data4 [0]

	data1 [19]
	data1 [5]
	data2 [17]
	data4 [0]

	data1 [27]
	data1 [5]
	data2 [4097]
	data4 [0]

	data1 [17]
	data1 [5]
	data2 [5]
	data4 [0]

	data1 [25]
	data1 [5]
	data2 [1025]
	data4 [0]

	data1 [21]
	data1 [5]
	data2 [65]
	data4 [0]

	data1 [29]
	data1 [5]
	data2 [16385]
	data4 [0]

	data1 [16]
	data1 [5]
	data2 [3]
	data4 [0]

	data1 [24]
	data1 [5]
	data2 [513]
	data4 [0]

	data1 [20]
	data1 [5]
	data2 [33]
	data4 [0]

	data1 [28]
	data1 [5]
	data2 [8193]
	data4 [0]

	data1 [18]
	data1 [5]
	data2 [9]
	data4 [0]

	data1 [26]
	data1 [5]
	data2 [2049]
	data4 [0]

	data1 [22]
	data1 [5]
	data2 [129]
	data4 [0]

	data1 [64]
	data1 [5]
	data2 [0]
	data4 [0]

	data1 [16]
	data1 [5]
	data2 [2]
	data4 [0]

	data1 [23]
	data1 [5]
	data2 [385]
	data4 [0]

	data1 [19]
	data1 [5]
	data2 [25]
	data4 [0]

	data1 [27]
	data1 [5]
	data2 [6145]
	data4 [0]

	data1 [17]
	data1 [5]
	data2 [7]
	data4 [0]

	data1 [25]
	data1 [5]
	data2 [1537]
	data4 [0]

	data1 [21]
	data1 [5]
	data2 [97]
	data4 [0]

	data1 [29]
	data1 [5]
	data2 [24577]
	data4 [0]

	data1 [16]
	data1 [5]
	data2 [4]
	data4 [0]

	data1 [24]
	data1 [5]
	data2 [769]
	data4 [0]

	data1 [20]
	data1 [5]
	data2 [49]
	data4 [0]

	data1 [28]
	data1 [5]
	data2 [12289]
	data4 [0]

	data1 [18]
	data1 [5]
	data2 [13]
	data4 [0]

	data1 [26]
	data1 [5]
	data2 [3073]
	data4 [0]

	data1 [22]
	data1 [5]
	data2 [193]
	data4 [0]

	data1 [64]
	data1 [5]
	data2 [0]
	data4 [0]

.Li_lenfix_3181.l_o95f807:
	data1 [96]
	data1 [7]
	data2 [0]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [80]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [16]
	data4 [0]

	data1 [20]
	data1 [8]
	data2 [115]
	data4 [0]

	data1 [18]
	data1 [7]
	data2 [31]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [112]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [48]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [192]
	data4 [0]

	data1 [16]
	data1 [7]
	data2 [10]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [96]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [32]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [160]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [0]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [128]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [64]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [224]
	data4 [0]

	data1 [16]
	data1 [7]
	data2 [6]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [88]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [24]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [144]
	data4 [0]

	data1 [19]
	data1 [7]
	data2 [59]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [120]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [56]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [208]
	data4 [0]

	data1 [17]
	data1 [7]
	data2 [17]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [104]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [40]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [176]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [8]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [136]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [72]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [240]
	data4 [0]

	data1 [16]
	data1 [7]
	data2 [4]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [84]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [20]
	data4 [0]

	data1 [21]
	data1 [8]
	data2 [227]
	data4 [0]

	data1 [19]
	data1 [7]
	data2 [43]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [116]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [52]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [200]
	data4 [0]

	data1 [17]
	data1 [7]
	data2 [13]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [100]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [36]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [168]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [4]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [132]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [68]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [232]
	data4 [0]

	data1 [16]
	data1 [7]
	data2 [8]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [92]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [28]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [152]
	data4 [0]

	data1 [20]
	data1 [7]
	data2 [83]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [124]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [60]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [216]
	data4 [0]

	data1 [18]
	data1 [7]
	data2 [23]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [108]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [44]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [184]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [12]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [140]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [76]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [248]
	data4 [0]

	data1 [16]
	data1 [7]
	data2 [3]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [82]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [18]
	data4 [0]

	data1 [21]
	data1 [8]
	data2 [163]
	data4 [0]

	data1 [19]
	data1 [7]
	data2 [35]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [114]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [50]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [196]
	data4 [0]

	data1 [17]
	data1 [7]
	data2 [11]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [98]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [34]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [164]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [2]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [130]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [66]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [228]
	data4 [0]

	data1 [16]
	data1 [7]
	data2 [7]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [90]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [26]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [148]
	data4 [0]

	data1 [20]
	data1 [7]
	data2 [67]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [122]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [58]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [212]
	data4 [0]

	data1 [18]
	data1 [7]
	data2 [19]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [106]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [42]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [180]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [10]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [138]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [74]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [244]
	data4 [0]

	data1 [16]
	data1 [7]
	data2 [5]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [86]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [22]
	data4 [0]

	data1 [64]
	data1 [8]
	data2 [0]
	data4 [0]

	data1 [19]
	data1 [7]
	data2 [51]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [118]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [54]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [204]
	data4 [0]

	data1 [17]
	data1 [7]
	data2 [15]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [102]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [38]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [172]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [6]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [134]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [70]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [236]
	data4 [0]

	data1 [16]
	data1 [7]
	data2 [9]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [94]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [30]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [156]
	data4 [0]

	data1 [20]
	data1 [7]
	data2 [99]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [126]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [62]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [220]
	data4 [0]

	data1 [18]
	data1 [7]
	data2 [27]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [110]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [46]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [188]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [14]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [142]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [78]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [252]
	data4 [0]

	data1 [96]
	data1 [7]
	data2 [0]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [81]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [17]
	data4 [0]

	data1 [21]
	data1 [8]
	data2 [131]
	data4 [0]

	data1 [18]
	data1 [7]
	data2 [31]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [113]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [49]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [194]
	data4 [0]

	data1 [16]
	data1 [7]
	data2 [10]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [97]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [33]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [162]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [1]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [129]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [65]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [226]
	data4 [0]

	data1 [16]
	data1 [7]
	data2 [6]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [89]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [25]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [146]
	data4 [0]

	data1 [19]
	data1 [7]
	data2 [59]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [121]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [57]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [210]
	data4 [0]

	data1 [17]
	data1 [7]
	data2 [17]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [105]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [41]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [178]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [9]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [137]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [73]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [242]
	data4 [0]

	data1 [16]
	data1 [7]
	data2 [4]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [85]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [21]
	data4 [0]

	data1 [16]
	data1 [8]
	data2 [258]
	data4 [0]

	data1 [19]
	data1 [7]
	data2 [43]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [117]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [53]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [202]
	data4 [0]

	data1 [17]
	data1 [7]
	data2 [13]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [101]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [37]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [170]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [5]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [133]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [69]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [234]
	data4 [0]

	data1 [16]
	data1 [7]
	data2 [8]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [93]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [29]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [154]
	data4 [0]

	data1 [20]
	data1 [7]
	data2 [83]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [125]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [61]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [218]
	data4 [0]

	data1 [18]
	data1 [7]
	data2 [23]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [109]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [45]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [186]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [13]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [141]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [77]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [250]
	data4 [0]

	data1 [16]
	data1 [7]
	data2 [3]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [83]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [19]
	data4 [0]

	data1 [21]
	data1 [8]
	data2 [195]
	data4 [0]

	data1 [19]
	data1 [7]
	data2 [35]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [115]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [51]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [198]
	data4 [0]

	data1 [17]
	data1 [7]
	data2 [11]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [99]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [35]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [166]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [3]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [131]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [67]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [230]
	data4 [0]

	data1 [16]
	data1 [7]
	data2 [7]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [91]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [27]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [150]
	data4 [0]

	data1 [20]
	data1 [7]
	data2 [67]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [123]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [59]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [214]
	data4 [0]

	data1 [18]
	data1 [7]
	data2 [19]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [107]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [43]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [182]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [11]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [139]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [75]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [246]
	data4 [0]

	data1 [16]
	data1 [7]
	data2 [5]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [87]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [23]
	data4 [0]

	data1 [64]
	data1 [8]
	data2 [0]
	data4 [0]

	data1 [19]
	data1 [7]
	data2 [51]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [119]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [55]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [206]
	data4 [0]

	data1 [17]
	data1 [7]
	data2 [15]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [103]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [39]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [174]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [7]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [135]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [71]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [238]
	data4 [0]

	data1 [16]
	data1 [7]
	data2 [9]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [95]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [31]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [158]
	data4 [0]

	data1 [20]
	data1 [7]
	data2 [99]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [127]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [63]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [222]
	data4 [0]

	data1 [18]
	data1 [7]
	data2 [27]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [111]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [47]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [190]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [15]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [143]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [79]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [254]
	data4 [0]

	data1 [96]
	data1 [7]
	data2 [0]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [80]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [16]
	data4 [0]

	data1 [20]
	data1 [8]
	data2 [115]
	data4 [0]

	data1 [18]
	data1 [7]
	data2 [31]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [112]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [48]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [193]
	data4 [0]

	data1 [16]
	data1 [7]
	data2 [10]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [96]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [32]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [161]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [0]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [128]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [64]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [225]
	data4 [0]

	data1 [16]
	data1 [7]
	data2 [6]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [88]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [24]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [145]
	data4 [0]

	data1 [19]
	data1 [7]
	data2 [59]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [120]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [56]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [209]
	data4 [0]

	data1 [17]
	data1 [7]
	data2 [17]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [104]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [40]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [177]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [8]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [136]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [72]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [241]
	data4 [0]

	data1 [16]
	data1 [7]
	data2 [4]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [84]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [20]
	data4 [0]

	data1 [21]
	data1 [8]
	data2 [227]
	data4 [0]

	data1 [19]
	data1 [7]
	data2 [43]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [116]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [52]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [201]
	data4 [0]

	data1 [17]
	data1 [7]
	data2 [13]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [100]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [36]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [169]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [4]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [132]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [68]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [233]
	data4 [0]

	data1 [16]
	data1 [7]
	data2 [8]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [92]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [28]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [153]
	data4 [0]

	data1 [20]
	data1 [7]
	data2 [83]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [124]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [60]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [217]
	data4 [0]

	data1 [18]
	data1 [7]
	data2 [23]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [108]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [44]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [185]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [12]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [140]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [76]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [249]
	data4 [0]

	data1 [16]
	data1 [7]
	data2 [3]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [82]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [18]
	data4 [0]

	data1 [21]
	data1 [8]
	data2 [163]
	data4 [0]

	data1 [19]
	data1 [7]
	data2 [35]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [114]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [50]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [197]
	data4 [0]

	data1 [17]
	data1 [7]
	data2 [11]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [98]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [34]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [165]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [2]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [130]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [66]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [229]
	data4 [0]

	data1 [16]
	data1 [7]
	data2 [7]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [90]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [26]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [149]
	data4 [0]

	data1 [20]
	data1 [7]
	data2 [67]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [122]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [58]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [213]
	data4 [0]

	data1 [18]
	data1 [7]
	data2 [19]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [106]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [42]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [181]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [10]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [138]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [74]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [245]
	data4 [0]

	data1 [16]
	data1 [7]
	data2 [5]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [86]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [22]
	data4 [0]

	data1 [64]
	data1 [8]
	data2 [0]
	data4 [0]

	data1 [19]
	data1 [7]
	data2 [51]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [118]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [54]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [205]
	data4 [0]

	data1 [17]
	data1 [7]
	data2 [15]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [102]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [38]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [173]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [6]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [134]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [70]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [237]
	data4 [0]

	data1 [16]
	data1 [7]
	data2 [9]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [94]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [30]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [157]
	data4 [0]

	data1 [20]
	data1 [7]
	data2 [99]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [126]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [62]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [221]
	data4 [0]

	data1 [18]
	data1 [7]
	data2 [27]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [110]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [46]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [189]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [14]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [142]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [78]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [253]
	data4 [0]

	data1 [96]
	data1 [7]
	data2 [0]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [81]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [17]
	data4 [0]

	data1 [21]
	data1 [8]
	data2 [131]
	data4 [0]

	data1 [18]
	data1 [7]
	data2 [31]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [113]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [49]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [195]
	data4 [0]

	data1 [16]
	data1 [7]
	data2 [10]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [97]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [33]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [163]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [1]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [129]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [65]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [227]
	data4 [0]

	data1 [16]
	data1 [7]
	data2 [6]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [89]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [25]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [147]
	data4 [0]

	data1 [19]
	data1 [7]
	data2 [59]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [121]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [57]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [211]
	data4 [0]

	data1 [17]
	data1 [7]
	data2 [17]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [105]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [41]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [179]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [9]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [137]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [73]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [243]
	data4 [0]

	data1 [16]
	data1 [7]
	data2 [4]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [85]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [21]
	data4 [0]

	data1 [16]
	data1 [8]
	data2 [258]
	data4 [0]

	data1 [19]
	data1 [7]
	data2 [43]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [117]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [53]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [203]
	data4 [0]

	data1 [17]
	data1 [7]
	data2 [13]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [101]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [37]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [171]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [5]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [133]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [69]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [235]
	data4 [0]

	data1 [16]
	data1 [7]
	data2 [8]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [93]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [29]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [155]
	data4 [0]

	data1 [20]
	data1 [7]
	data2 [83]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [125]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [61]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [219]
	data4 [0]

	data1 [18]
	data1 [7]
	data2 [23]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [109]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [45]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [187]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [13]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [141]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [77]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [251]
	data4 [0]

	data1 [16]
	data1 [7]
	data2 [3]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [83]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [19]
	data4 [0]

	data1 [21]
	data1 [8]
	data2 [195]
	data4 [0]

	data1 [19]
	data1 [7]
	data2 [35]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [115]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [51]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [199]
	data4 [0]

	data1 [17]
	data1 [7]
	data2 [11]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [99]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [35]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [167]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [3]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [131]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [67]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [231]
	data4 [0]

	data1 [16]
	data1 [7]
	data2 [7]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [91]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [27]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [151]
	data4 [0]

	data1 [20]
	data1 [7]
	data2 [67]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [123]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [59]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [215]
	data4 [0]

	data1 [18]
	data1 [7]
	data2 [19]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [107]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [43]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [183]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [11]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [139]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [75]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [247]
	data4 [0]

	data1 [16]
	data1 [7]
	data2 [5]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [87]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [23]
	data4 [0]

	data1 [64]
	data1 [8]
	data2 [0]
	data4 [0]

	data1 [19]
	data1 [7]
	data2 [51]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [119]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [55]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [207]
	data4 [0]

	data1 [17]
	data1 [7]
	data2 [15]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [103]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [39]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [175]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [7]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [135]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [71]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [239]
	data4 [0]

	data1 [16]
	data1 [7]
	data2 [9]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [95]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [31]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [159]
	data4 [0]

	data1 [20]
	data1 [7]
	data2 [99]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [127]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [63]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [223]
	data4 [0]

	data1 [18]
	data1 [7]
	data2 [27]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [111]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [47]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [191]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [15]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [143]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [79]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [255]
	data4 [0]

.Li_order_3203.l_o95f807:
	data2 [16]
	data2 [17]
	data2 [18]
	data2 [0]
	data2 [8]
	data2 [7]
	data2 [9]
	data2 [6]
	data2 [10]
	data2 [5]
	data2 [11]
	data2 [4]
	data2 [12]
	data2 [3]
	data2 [13]
	data2 [2]
	data2 [14]
	data2 [1]
	data2 [15]
#	IMPORT inflate_table
#	IMPORT memcpy
#	IMPORT inflate_fast
#	IMPORT zcalloc
#	IMPORT zcfree
#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: od9cdd1
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"inffast.c"
#	.text
.LC0.l_od9cdd1:
#	.string "invalid distance too far back"
	data1 [ 105 110 118 97 108 105 100 32 100 105 115 116 97 110 99 101 32 116 111 111 32 102 97 114 32 98 97 99 107 0 ]
.LC1.l_od9cdd1:
#	.string "invalid distance code"
	data1 [ 105 110 118 97 108 105 100 32 100 105 115 116 97 110 99 101 32 99 111 100 101 0 ]
.LC2.l_od9cdd1:
#	.string "invalid literal/length code"
	data1 [ 105 110 118 97 108 105 100 32 108 105 116 101 114 97 108 47 108 101 110 103 116 104 32 99 111 100 101 0 ]
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole zero_extend
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole move
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole move
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole push+add+pop+push+ind pop
	#peephole move_dead
	#peephole zero_extend
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+ind push
	#peephole push+add+pop+push+ind pop
	#peephole move_dead
	#peephole pop+push+commut(di)
	#peephole zero_extend
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole zero_extend
	#peephole binop1+deadreg+binop2
	#peephole move+push(pushable)
	#peephole 1
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole zero_extend
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole move
	#peephole move+push+sub
	#peephole move_dead
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move+push(pushable)
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole nop+set
	#peephole move+push(pushable)
	#peephole 1
	#peephole 1
	#peephole nop+set
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move+push(pushable)
	#peephole move+push(pushable)
	#peephole 1
	#peephole 1
	#peephole nop+set
	#peephole move+push(pushable)
	#peephole 1
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole move+push(pushable)
	#peephole pop+push+sub
	#peephole move_dead
	#peephole pop+push+commut(di)
	#peephole zero_extend
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole zero_extend
	#peephole binop1+deadreg+binop2
	#peephole move+push(pushable)
	#peephole 1
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole move
	#peephole move+push+sub
	#peephole move_dead
	#peephole pop+cmp
	#peephole move
	#peephole move+push+sub
	#peephole move_dead
	#peephole move
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole pop+push+commut(di)
	#peephole 1
	#peephole nop+set
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole move
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole pop+push+commut(di)
	#peephole pop+push+commut(di)
	#peephole 1
	#peephole nop+set
	#peephole move
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole nop+set
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole binop1+deadreg+binop2
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole move
	#peephole zero_extend
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole pop+push+commut(di)
	#peephole pop+push+commut(di)
	#peephole 1
	#peephole nop+set
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole move
	#peephole move+push(pushable)
	#peephole 1
	#peephole zero_extend
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole nop+set
	#peephole pop+block+cmp
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole nop+set
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop(deadreg)+push
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop(deadreg)+push
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+commut(si)
	#peephole pop+move(deadreg)
	#peephole pop+push+commut(si)
	#peephole pop+block+push+commut(si)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+move2(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move2(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole nop+set
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole redundant blockage insn
	#peephole nop+set
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole nop+set
	#peephole pop+block+cmp
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+move2(deadreg)
	#peephole pop+block+push+block
	#peephole pop+push+sub
	#peephole pop+block+push+block
	#peephole pop+push+sub
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole zero_extend
	#peephole zero_extend
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole zero_extend
	#peephole zero_extend
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole zero_extend
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole zero_extend
	#peephole zero_extend
	#peephole zero_extend
	#peephole zero_extend
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push

# FUNCTION BEGINS:inflate_fast
	EXPORT	inflate_fast
inflate_fast:
	# prologue (16 GPRs)

	set_sp! &-24

	load8! &25
	store8! &9 	#X8
	load8! &8 	#X8
	add! 56
	load8
	#
	store8! &7 	#X6
	load8! &8 	#X8
	load8
	#
	store8! &10 	#X9
	load8! &8 	#X8
	add! 8
	load4
	#
	add! -5
	and! 0xffffffff
	load8! &10 	#X9
	add
	store8! &12 	#X11
	load8! &8 	#X8
	add! 24
	load8
	#
	store8! &3 	#X2
	load8! &8 	#X8
	add! 32
	load4
	#
	store8! &1 	#AR
	load8! &0 	#AR
	store8! &2 	#X1
	load4! &26
	load8! &2 	#X1
	sub
	and! 0xffffffff
	neg
	store8! &2 	#X1
	load8! &2 	#X2
	load8! &2 	#X1
	add
	store8! &19
	load8! &0 	#AR
	add! -257
	and! 0xffffffff
	load8! &3 	#X2
	add
	store8! &16 	#X15
	load8! &6 	#X6
	add! 60
	load4
	#
	store4! &22
	load8! &6 	#X6
	add! 64
	load4
	#
	store4! &21
	load8! &6 	#X6
	add! 68
	load4
	#
	store4! &18
	load8! &6 	#X6
	add! 72
	load8
	#
	store8! &20
	load8! &6 	#X6
	add! 80
	load8
	#
	store8! &1 	#AR
	load8! &6 	#X6
	add! 88
	load4
	#
	store8! &2 	#X1
	load8! &6 	#X6
	add! 104
	load8
	#
	store8! &4 	#X3
	load8! &6 	#X6
	add! 112
	load8
	#
	store8! &11 	#X10
	load8! &6 	#X6
	add! 120
	load4
	#
	store8! &5 	#X4
	push! 1
	load8! &5 	#X4
	shift_l
	add! -1
	store8! &5 	#X4
	load8! &6 	#X6
	add! 124
	load4
	#
	store8! &6 	#X5
	push! 1
	load8! &6 	#X5
	shift_l
	add! -1
	store4! &17
	load4! &4 	#X4
	store8! &15 	#X14
.L35.l_od9cdd1:
	# CBRANCH
	push! 14
	load4! &2 	#X1
	lt_u
	not
	jump_zero! .L2.l_od9cdd1
	# END CBRANCH
	load8! &9 	#X9
	load1
	#
	store8! &6 	#X5
	load4! &1 	#X1
	pow2
	load8! &6 	#X5
	mult
	store8! &8 	#X7
	load8! &1 	#X1
	add! 8
	store8! &6 	#X5
	load8! &9 	#X9
	add! 2
	store8! &5 	#X4
	load8! &9 	#X9
	add! 1
	load1
	#
	store8! &10 	#X9
	load4! &5 	#X5
	pow2
	load8! &10 	#X9
	mult
	load8! &8 	#X7
	add
	load8! &1 	#AR
	add
	store8! &1 	#AR
	load8! &1 	#X1
	add! 16
	store8! &2 	#X1
	load8! &4 	#X4
	store8! &10 	#X9
.L2.l_od9cdd1:
	load8! &0 	#AR
	load8! &15 	#X14
	and
	shift_l! 3
	load8! &4 	#X3
	add
	load8
	store8! &5 	#X4
	load8! &4 	#X4
	shift_ru! 8
	and! 0xff
	store8! &6 	#X5
	load4! &5 	#X5
	store8! &8 	#X7
	load8! &0 	#AR
	load8! &8 	#X7
	shift_ru
	store8! &1 	#AR
	load8! &1 	#X1
	load8! &6 	#X5
	sub
	store8! &2 	#X1
	load1! &4 	#X4
	store8! &6 	#X5
	load1! &4 	#X4
	store8! &8 	#X7
	# CBRANCH EQ0
	load4! &7 	#X7
	jump_zero! .L3.l_od9cdd1
	# END CBRANCH
	load8! &5 	#X5
	and! 0x10
	# CBRANCH - peep (modesize=1)
	and! 255
	# - EQ0
	jump_not_zero! .L4.l_od9cdd1
	# END CBRANCH
	load8! &5 	#X5
	and! 0x40
	# CBRANCH - peep (modesize=1)
	and! 255
	# - EQ0
	jump_not_zero! .L6.l_od9cdd1
	# END CBRANCH
.L5.l_od9cdd1:
	load8! &4 	#X4
	shift_ru! 16
	and! 0xffff
	store8! &6 	#X5
	load4! &7 	#X7
	store8! &5 	#X4
	push! 1
	load8! &5 	#X4
	shift_l
	add! -1
	and! 0xffffffff
	load8! &1 	#AR
	and
	load8! &6 	#X5
	add
	shift_l! 3
	load8! &4 	#X3
	add
	load8
	store8! &5 	#X4
	load8! &4 	#X4
	shift_ru! 8
	and! 0xff
	store8! &6 	#X5
	load4! &5 	#X5
	store8! &8 	#X7
	load8! &0 	#AR
	load8! &8 	#X7
	shift_ru
	store8! &1 	#AR
	load8! &1 	#X1
	load8! &6 	#X5
	sub
	store8! &2 	#X1
	load1! &4 	#X4
	store8! &6 	#X5
	load1! &4 	#X4
	store8! &8 	#X7
	# CBRANCH EQ0
	load4! &7 	#X7
	jump_zero! .L3.l_od9cdd1
	# END CBRANCH
	load8! &5 	#X5
	and! 0x10
	# CBRANCH - peep (modesize=1)
	and! 255
	# - EQ0
	jump_not_zero! .L4.l_od9cdd1
	# END CBRANCH
	load8! &5 	#X5
	and! 0x40
	# CBRANCH - peep (modesize=1)
	and! 255
	# - EQ0
	jump_zero! .L5.l_od9cdd1
	# END CBRANCH
.L6.l_od9cdd1:
	load8! &5 	#X5
	and! 0x20
	# CBRANCH - peep (modesize=1)
	and! 255
	# - EQ0
	jump_zero! .L34.l_od9cdd1
	# END CBRANCH
	push! 16191
	load8! &7 	#X6
	add! 8
	store4
	#
.L19.l_od9cdd1:
	load4! &1 	#X1
	shift_ru! 3
	and! 0xffffffff
	neg
	load8! &10 	#X9
	add
	store8! &4 	#X3
	load8! &1 	#X1
	and! 0x7
	store8! &2 	#X1
	load4! &1 	#X1
	store8! &5 	#X4
	push! 1
	load8! &5 	#X4
	shift_l
	add! -1
	and! 0xffffffff
	load8! &1 	#AR
	and
	store8! &1 	#AR
	load8! &3 	#X3
	load8! &9 	#X8
	store8
	#
	load8! &2 	#X2
	load8! &9 	#X8
	add! 24
	store8
	#
	# CBRANCH
	load8! &3 	#X3
	load8! &12 	#X11
	lt_u
	jump_zero! .L36.l_od9cdd1
	# END CBRANCH
.L80.l_od9cdd1:
	load8! &11 	#X11
	load8! &4 	#X3
	sub
	add! 5
	store8! &4 	#X3
	load4! &3 	#X3
	load8! &9 	#X8
	add! 8
	store4
	#
	# CBRANCH
	load8! &2 	#X2
	load8! &16 	#X15
	lt_u
	jump_zero! .L38.l_od9cdd1
	# END CBRANCH
.L81.l_od9cdd1:
	load8! &15 	#X15
	load8! &3 	#X2
	sub
	add! 257
	store8! &3 	#X2
	load4! &2 	#X2
	load8! &9 	#X8
	add! 32
	store4
	#
	load8! &0 	#AR
	load8! &7 	#X6
	add! 80
	store8
	#
	load4! &1 	#X1
	load8! &7 	#X6
	add! 88
	store4
	#
	jump! .L79.l_od9cdd1
.L3.l_od9cdd1:
	load8! &4 	#X4
	shift_ru! 16
	store8! &6 	#X5
	load8! &2 	#X2
	add! 1
	store8! &5 	#X4
	load1! &5 	#X5
	load8! &3 	#X2
	store1
	#
	load8! &4 	#X4
	store8! &3 	#X2
.L7.l_od9cdd1:
	# CBRANCH
	load8! &9 	#X9
	load8! &12 	#X11
	lt_u
	jump_zero! .L19.l_od9cdd1
	# END CBRANCH
	# CBRANCH
	load8! &2 	#X2
	load8! &16 	#X15
	lt_u
	not
	jump_zero! .L35.l_od9cdd1
	# END CBRANCH
	load4! &1 	#X1
	shift_ru! 3
	and! 0xffffffff
	neg
	load8! &10 	#X9
	add
	store8! &4 	#X3
	load8! &1 	#X1
	and! 0x7
	store8! &2 	#X1
	load4! &1 	#X1
	store8! &5 	#X4
	push! 1
	load8! &5 	#X4
	shift_l
	add! -1
	and! 0xffffffff
	load8! &1 	#AR
	and
	store8! &1 	#AR
	load8! &3 	#X3
	load8! &9 	#X8
	store8
	#
	load8! &2 	#X2
	load8! &9 	#X8
	add! 24
	store8
	#
	# CBRANCH
	load8! &3 	#X3
	load8! &12 	#X11
	lt_u
	not
	jump_zero! .L80.l_od9cdd1
	# END CBRANCH
.L36.l_od9cdd1:
	load8! &3 	#X3
	load8! &12 	#X11
	sub
	sub! 5
	neg
	store8! &4 	#X3
	load4! &3 	#X3
	load8! &9 	#X8
	add! 8
	store4
	#
	# CBRANCH
	load8! &2 	#X2
	load8! &16 	#X15
	lt_u
	jump_zero! .L38.l_od9cdd1
	# END CBRANCH
	jump! .L81.l_od9cdd1
.L4.l_od9cdd1:
	load8! &4 	#X4
	shift_ru! 16
	and! 0xffff
	store8! &8 	#X7
	load8! &5 	#X5
	and! 0xf
	store8! &5 	#X4
	# CBRANCH EQ0
	load1! &4 	#X4
	jump_zero! .L9.l_od9cdd1
	# END CBRANCH
	load1! &4 	#X4
	store8! &5 	#X4
	# CBRANCH
	load4! &1 	#X1
	load4! &5 	#X4
	lt_u
	jump_zero! .L10.l_od9cdd1
	# END CBRANCH
	load8! &9 	#X9
	add! 1
	store8! &6 	#X5
	load8! &9 	#X9
	load1
	#
	store8! &13 	#X12
	load4! &1 	#X1
	pow2
	load8! &13 	#X12
	mult
	load8! &1 	#AR
	add
	store8! &1 	#AR
	load8! &1 	#X1
	add! 8
	store8! &2 	#X1
	load8! &5 	#X5
	store8! &10 	#X9
.L10.l_od9cdd1:
	load4! &0 	#AR
	store8! &6 	#X5
	load4! &4 	#X4
	store8! &13 	#X12
	push! -1
	load8! &13 	#X12
	shift_l
	not
	load8! &6 	#X5
	and
	store8! &6 	#X5
	load8! &7 	#X7
	load8! &6 	#X5
	add
	store8! &8 	#X7
	load4! &4 	#X4
	store8! &6 	#X5
	load8! &0 	#AR
	load8! &6 	#X5
	shift_ru
	store8! &1 	#AR
	load8! &1 	#X1
	load8! &5 	#X4
	sub
	store8! &2 	#X1
.L9.l_od9cdd1:
	# CBRANCH
	push! 14
	load4! &2 	#X1
	lt_u
	jump_zero! .L82.l_od9cdd1
	# END CBRANCH
.L11.l_od9cdd1:
	load4! &16
	load8! &1 	#AR
	and
	shift_l! 3
	load8! &11 	#X10
	add
	load8
	store8! &5 	#X4
	load8! &4 	#X4
	shift_ru! 8
	and! 0xff
	store8! &6 	#X5
	load4! &5 	#X5
	store8! &13 	#X12
	load8! &0 	#AR
	load8! &13 	#X12
	shift_ru
	store8! &1 	#AR
	load8! &1 	#X1
	load8! &6 	#X5
	sub
	store8! &2 	#X1
	load1! &4 	#X4
	store8! &6 	#X5
	load1! &4 	#X4
	store8! &13 	#X12
	load8! &5 	#X5
	and! 0x10
	# CBRANCH - peep (modesize=1)
	and! 255
	# - EQ0
	jump_not_zero! .L12.l_od9cdd1
	# END CBRANCH
	load8! &5 	#X5
	and! 0x40
	# CBRANCH - peep (modesize=1)
	and! 255
	# - EQ0
	jump_not_zero! .L14.l_od9cdd1
	# END CBRANCH
.L13.l_od9cdd1:
	load8! &4 	#X4
	shift_ru! 16
	and! 0xffff
	store8! &6 	#X5
	load4! &12 	#X12
	store8! &5 	#X4
	push! 1
	load8! &5 	#X4
	shift_l
	add! -1
	and! 0xffffffff
	load8! &1 	#AR
	and
	load8! &6 	#X5
	add
	shift_l! 3
	load8! &11 	#X10
	add
	load8
	store8! &5 	#X4
	load8! &4 	#X4
	shift_ru! 8
	and! 0xff
	store8! &6 	#X5
	load4! &5 	#X5
	store8! &13 	#X12
	load8! &0 	#AR
	load8! &13 	#X12
	shift_ru
	store8! &1 	#AR
	load8! &1 	#X1
	load8! &6 	#X5
	sub
	store8! &2 	#X1
	load1! &4 	#X4
	store8! &6 	#X5
	load1! &4 	#X4
	store8! &13 	#X12
	load8! &5 	#X5
	and! 0x10
	# CBRANCH - peep (modesize=1)
	and! 255
	# - EQ0
	jump_not_zero! .L12.l_od9cdd1
	# END CBRANCH
	load8! &5 	#X5
	and! 0x40
	# CBRANCH - peep (modesize=1)
	and! 255
	# - EQ0
	jump_zero! .L13.l_od9cdd1
	# END CBRANCH
.L14.l_od9cdd1:
	push! .LC1.l_od9cdd1
	load8! &9 	#X8
	add! 48
	store8
	#
	push! 16209
	load8! &7 	#X6
	add! 8
	store4
	#
	jump! .L19.l_od9cdd1
.L38.l_od9cdd1:
	load8! &2 	#X2
	load8! &16 	#X15
	sub
	sub! 257
	neg
	store8! &3 	#X2
	load4! &2 	#X2
	load8! &9 	#X8
	add! 32
	store4
	#
	load8! &0 	#AR
	load8! &7 	#X6
	add! 80
	store8
	#
	load4! &1 	#X1
	load8! &7 	#X6
	add! 88
	store4
	#
	jump! .L79.l_od9cdd1
.L82.l_od9cdd1:
	load8! &9 	#X9
	load1
	#
	store8! &6 	#X5
	load4! &1 	#X1
	pow2
	load8! &6 	#X5
	mult
	store8! &13 	#X12
	load8! &1 	#X1
	add! 8
	store8! &6 	#X5
	load8! &9 	#X9
	add! 2
	store8! &5 	#X4
	load8! &9 	#X9
	add! 1
	load1
	#
	store8! &10 	#X9
	load4! &5 	#X5
	pow2
	load8! &10 	#X9
	mult
	load8! &13 	#X12
	add
	load8! &1 	#AR
	add
	store8! &1 	#AR
	load8! &1 	#X1
	add! 16
	store8! &2 	#X1
	load8! &4 	#X4
	store8! &10 	#X9
	jump! .L11.l_od9cdd1
.L34.l_od9cdd1:
	push! .LC2.l_od9cdd1
	load8! &9 	#X8
	add! 48
	store8
	#
	push! 16209
	load8! &7 	#X6
	add! 8
	store4
	#
	jump! .L19.l_od9cdd1
.L12.l_od9cdd1:
	load8! &4 	#X4
	shift_ru! 16
	and! 0xffff
	store8! &13 	#X12
	load8! &5 	#X5
	and! 0xf
	and! 0xff
	store8! &5 	#X4
	# CBRANCH
	load4! &1 	#X1
	load4! &5 	#X4
	lt_u
	jump_zero! .L15.l_od9cdd1
	# END CBRANCH
	load8! &9 	#X9
	load1
	#
	store8! &14 	#X13
	load4! &1 	#X1
	pow2
	load8! &14 	#X13
	mult
	load8! &1 	#AR
	add
	store8! &1 	#AR
	load8! &1 	#X1
	add! 8
	store8! &6 	#X5
	# CBRANCH
	load4! &5 	#X5
	load4! &5 	#X4
	lt_u
	not
	jump_zero! .L16.l_od9cdd1
	# END CBRANCH
	load8! &9 	#X9
	add! 1
	store8! &10 	#X9
	load4! &5 	#X5
	store8! &2 	#X1
.L15.l_od9cdd1:
	load4! &0 	#AR
	store8! &6 	#X5
	load4! &4 	#X4
	store8! &14 	#X13
	push! -1
	load8! &14 	#X13
	shift_l
	not
	load8! &6 	#X5
	and
	store8! &6 	#X5
	load8! &12 	#X12
	load8! &6 	#X5
	add
	store8! &14 	#X13
	load4! &4 	#X4
	store8! &6 	#X5
	load8! &0 	#AR
	load8! &6 	#X5
	shift_ru
	store8! &1 	#AR
	load8! &1 	#X1
	load8! &5 	#X4
	sub
	store8! &2 	#X1
	load8! &2 	#X2
	load8! &19
	sub
	store8! &5 	#X4
	# CBRANCH
	load4! &4 	#X4
	load4! &14 	#X13
	lt_u
	jump_zero! .L17.l_od9cdd1
	# END CBRANCH
	load8! &4 	#X4
	load8! &14 	#X13
	sub
	neg
	store8! &13 	#X12
	# CBRANCH
	load4! &20
	load4! &13 	#X12
	lt_u
	jump_zero! .L18.l_od9cdd1
	# END CBRANCH
	load8! &6 	#X6
	add! 12920
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_not_zero! .L83.l_od9cdd1
	# END CBRANCH
.L18.l_od9cdd1:
	load8! &13 	#X13
	load8! &5 	#X4
	sub
	neg
	store4! &24
	# CBRANCH EQ0
	load4! &17
	jump_zero! .L84.l_od9cdd1
	# END CBRANCH
	# CBRANCH
	load4! &17
	load4! &13 	#X12
	lt_u
	jump_zero! .L23.l_od9cdd1
	# END CBRANCH
	load4! &21
	load4! &18
	add
	load4! &24
	add
	and! 0xffffffff
	load8! &20
	add
	store8! &5 	#X4
	load4! &17
	load8! &13 	#X12
	sub
	neg
	store4! &23
	# CBRANCH
	load4! &22
	load4! &8 	#X7
	lt_u
	not
	jump_zero! .L85.l_od9cdd1
	# END CBRANCH
.L21.l_od9cdd1:
	# CBRANCH
	push! 2
	load4! &8 	#X7
	lt_u
	jump_zero! .L27.l_od9cdd1
	# END CBRANCH
.L26.l_od9cdd1:
	load8! &4 	#X4
	load1
	#
	load8! &3 	#X2
	store1
	#
	load8! &4 	#X4
	add! 1
	load1
	#
	load8! &3 	#X2
	add! 1
	store1
	#
	load8! &4 	#X4
	add! 3
	store8! &5 	#X4
	load8! &2 	#X2
	add! 3
	store8! &3 	#X2
	load8! &4 	#X4
	add! -1
	load1
	load8! &3 	#X2
	add! -1
	store1
	load8! &7 	#X7
	add! -3
	store8! &8 	#X7
	# CBRANCH
	push! 2
	load4! &8 	#X7
	lt_u
	not
	jump_zero! .L26.l_od9cdd1
	# END CBRANCH
.L27.l_od9cdd1:
	# CBRANCH EQ0
	load4! &7 	#X7
	jump_zero! .L7.l_od9cdd1
	# END CBRANCH
	load8! &4 	#X4
	load1
	#
	load8! &3 	#X2
	store1
	#
	# CBRANCH
	load4! &7 	#X7
	push! 2
	xor
	push! 1
	lt_u
	jump_zero! .L86.l_od9cdd1
	# END CBRANCH
	load8! &2 	#X2
	add! 2
	store8! &6 	#X5
	load8! &4 	#X4
	add! 1
	load1
	#
	load8! &3 	#X2
	add! 1
	store1
	#
	load8! &5 	#X5
	store8! &3 	#X2
	jump! .L7.l_od9cdd1
.L84.l_od9cdd1:
	load4! &21
	store8! &5 	#X4
	load4! &23
	store8! &6 	#X5
	load8! &5 	#X5
	load8! &5 	#X4
	add
	and! 0xffffffff
	load8! &20
	add
	store8! &5 	#X4
	# CBRANCH
	load4! &12 	#X12
	load4! &8 	#X7
	lt_u
	jump_zero! .L21.l_od9cdd1
	# END CBRANCH
	load8! &5 	#X5
	load8! &8 	#X7
	add
	store8! &8 	#X7
	load8! &2 	#X2
	store8! &6 	#X5
	load8! &12 	#X12
	add! -1
	and! 0xffffffff
	store8! &23
	load8! &2 	#X2
	add! 1
	load8! &23
	add
	store8! &13 	#X12
	load8! &2 	#X2
	store8! &24
.L22.l_od9cdd1:
	load8! &4 	#X4
	load1
	#
	load8! &6 	#X5
	store1
	#
	load8! &5 	#X5
	add! 1
	store8! &6 	#X5
	load8! &4 	#X4
	add! 1
	store8! &5 	#X4
	# CBRANCH
	load8! &12 	#X12
	load8! &6 	#X5
	xor
	push! 1
	lt_u
	jump_zero! .L22.l_od9cdd1
	# END CBRANCH
	load8! &23
	store8! &3 	#X2
	load8! &22
	add! 1
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load4! &13 	#X13
	neg
	load8! &3 	#X2
	add
	store8! &5 	#X4
	# CBRANCH
	push! 2
	load4! &8 	#X7
	lt_u
	not
	jump_zero! .L26.l_od9cdd1
	# END CBRANCH
	jump! .L27.l_od9cdd1
.L17.l_od9cdd1:
	load4! &13 	#X13
	neg
	load8! &3 	#X2
	add
	store8! &6 	#X5
.L30.l_od9cdd1:
	load8! &5 	#X5
	store8! &5 	#X4
	load8! &5 	#X5
	load1
	#
	load8! &3 	#X2
	store1
	#
	load8! &5 	#X5
	add! 1
	load1
	#
	load8! &3 	#X2
	add! 1
	store1
	#
	load8! &2 	#X2
	add! 3
	store8! &13 	#X12
	load8! &5 	#X5
	add! 2
	load1
	#
	load8! &13 	#X12
	add! -1
	store1
	load8! &7 	#X7
	add! -3
	store8! &8 	#X7
	load8! &5 	#X5
	add! 3
	store8! &6 	#X5
	# CBRANCH
	push! 2
	load4! &8 	#X7
	lt_u
	jump_zero! .L87.l_od9cdd1
	# END CBRANCH
	load8! &12 	#X12
	store8! &3 	#X2
	jump! .L30.l_od9cdd1
.L87.l_od9cdd1:
	# CBRANCH EQ0
	load4! &7 	#X7
	jump_zero! .L42.l_od9cdd1
	# END CBRANCH
	load8! &4 	#X4
	add! 3
	load1
	#
	load8! &3 	#X2
	add! 3
	store1
	#
	# CBRANCH
	load4! &7 	#X7
	push! 2
	xor
	push! 1
	lt_u
	jump_zero! .L88.l_od9cdd1
	# END CBRANCH
	load8! &2 	#X2
	add! 5
	store8! &6 	#X5
	load8! &4 	#X4
	add! 4
	load1
	#
	load8! &3 	#X2
	add! 4
	store1
	#
	load8! &5 	#X5
	store8! &3 	#X2
	jump! .L7.l_od9cdd1
.L16.l_od9cdd1:
	load8! &9 	#X9
	add! 2
	store8! &14 	#X13
	load8! &9 	#X9
	add! 1
	load1
	#
	store8! &10 	#X9
	load4! &5 	#X5
	pow2
	load8! &10 	#X9
	mult
	load8! &1 	#AR
	add
	store8! &1 	#AR
	load8! &1 	#X1
	add! 16
	store8! &2 	#X1
	load8! &13 	#X13
	store8! &10 	#X9
	jump! .L15.l_od9cdd1
.L23.l_od9cdd1:
	load4! &17
	store8! &5 	#X4
	load4! &23
	store8! &6 	#X5
	load8! &5 	#X5
	load8! &5 	#X4
	add
	and! 0xffffffff
	load8! &20
	add
	store8! &5 	#X4
	# CBRANCH
	load4! &12 	#X12
	load4! &8 	#X7
	lt_u
	jump_zero! .L21.l_od9cdd1
	# END CBRANCH
	load8! &5 	#X5
	load8! &8 	#X7
	add
	store8! &8 	#X7
	load8! &2 	#X2
	store8! &6 	#X5
	load8! &12 	#X12
	add! -1
	and! 0xffffffff
	store8! &23
	load8! &2 	#X2
	add! 1
	load8! &23
	add
	store8! &13 	#X12
	load8! &0 	#AR
	store8! &24
	load8! &12 	#X12
	store8! &1 	#AR
.L28.l_od9cdd1:
	load8! &4 	#X4
	load1
	#
	load8! &6 	#X5
	store1
	#
	load8! &5 	#X5
	add! 1
	store8! &6 	#X5
	load8! &4 	#X4
	add! 1
	store8! &5 	#X4
	# CBRANCH
	load8! &0 	#AR
	load8! &6 	#X5
	xor
	push! 1
	lt_u
	jump_zero! .L28.l_od9cdd1
	# END CBRANCH
	load8! &23
	store8! &1 	#AR
	load8! &22
	add! 1
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load4! &13 	#X13
	neg
	load8! &3 	#X2
	add
	store8! &5 	#X4
	# CBRANCH
	push! 2
	load4! &8 	#X7
	lt_u
	not
	jump_zero! .L26.l_od9cdd1
	# END CBRANCH
	jump! .L27.l_od9cdd1
.L86.l_od9cdd1:
	load8! &2 	#X2
	add! 1
	store8! &3 	#X2
	jump! .L7.l_od9cdd1
.L42.l_od9cdd1:
	load8! &12 	#X12
	store8! &3 	#X2
	jump! .L7.l_od9cdd1
.L85.l_od9cdd1:
	load4! &17
	load8! &8 	#X7
	add
	load4! &24
	add
	store8! &8 	#X7
	load8! &2 	#X2
	store8! &6 	#X5
	load4! &22
	load8! &3 	#X2
	add
	store8! &13 	#X12
	load8! &0 	#AR
	store8! &24
	load8! &12 	#X12
	store8! &1 	#AR
.L24.l_od9cdd1:
	load8! &4 	#X4
	load1
	#
	load8! &6 	#X5
	store1
	#
	load8! &5 	#X5
	add! 1
	store8! &6 	#X5
	load8! &4 	#X4
	add! 1
	store8! &5 	#X4
	# CBRANCH
	load8! &0 	#AR
	load8! &6 	#X5
	xor
	push! 1
	lt_u
	jump_zero! .L24.l_od9cdd1
	# END CBRANCH
	load8! &23
	store8! &1 	#AR
	load4! &22
	add! -1
	and! 0xffffffff
	add! 1
	store8! &5 	#X4
	load8! &2 	#X2
	load8! &5 	#X4
	add
	store8! &24
	load8! &23
	store8! &3 	#X2
	load8! &19
	store8! &5 	#X4
	# CBRANCH
	load4! &17
	load4! &8 	#X7
	lt_u
	jump_zero! .L21.l_od9cdd1
	# END CBRANCH
	load4! &17
	store8! &6 	#X5
	load8! &5 	#X5
	load8! &8 	#X7
	sub
	neg
	store8! &8 	#X7
	load8! &19
	store8! &5 	#X4
	load8! &5 	#X5
	add! -1
	and! 0xffffffff
	add! 1
	store8! &13 	#X12
	load8! &12 	#X12
	load8! &3 	#X2
	add
	store8! &23
.L25.l_od9cdd1:
	load8! &4 	#X4
	load1
	#
	load8! &3 	#X2
	store1
	#
	load8! &2 	#X2
	add! 1
	store8! &3 	#X2
	load8! &4 	#X4
	add! 1
	store8! &5 	#X4
	# CBRANCH
	load8! &22
	load8! &3 	#X2
	xor
	push! 1
	lt_u
	jump_zero! .L25.l_od9cdd1
	# END CBRANCH
	load8! &23
	load8! &13 	#X12
	add
	store8! &3 	#X2
	load4! &13 	#X13
	neg
	load8! &3 	#X2
	add
	store8! &5 	#X4
	# CBRANCH
	push! 2
	load4! &8 	#X7
	lt_u
	not
	jump_zero! .L26.l_od9cdd1
	# END CBRANCH
	jump! .L27.l_od9cdd1
.L83.l_od9cdd1:
	push! .LC0.l_od9cdd1
	load8! &9 	#X8
	add! 48
	store8
	#
	push! 16209
	load8! &7 	#X6
	add! 8
	store4
	#
	jump! .L19.l_od9cdd1
.L88.l_od9cdd1:
	load8! &2 	#X2
	add! 4
	store8! &3 	#X2
	jump! .L7.l_od9cdd1
.L79.l_od9cdd1:

	# epilogue
	set_sp! &24
	return

# FUNCTION ENDS:inflate_fast

#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: ocf9910
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"inflate.c"
#	.text
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole pop(deadreg)+pushdi
	#peephole pop+push+commut(di)
	#peephole move_dead
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+pusharg
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+sub
	#peephole move_dead
	#peephole move
	#peephole move+push+sub
	#peephole move_dead
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole zero_extend
	#peephole zero_extend
	#peephole popdi(deadreg)+push
	#peephole and+popsi

# FUNCTION BEGINS:updatewindow
updatewindow.s_ocf9910:
	# prologue (9 GPRs)

	set_sp! &-9

	load8! &10
	store8! &2 	#X1
	load4! &12
	store8! &5 	#X4
	load8! &1 	#X1
	add! 56
	load8
	#
	store8! &3 	#X2
	load8! &2 	#X2
	add! 72
	load8
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L14.l_ocf9910
	# END CBRANCH
.L2.l_ocf9910:
	load8! &2 	#X2
	add! 60
	load4
	#
	store8! &4 	#X3
	# CBRANCH EQ0
	load4! &3 	#X3
	jump_zero! .L15.l_ocf9910
	# END CBRANCH
	# CBRANCH
	load4! &4 	#X4
	load4! &4 	#X3
	lt_u
	jump_zero! .L16.l_ocf9910
	# END CBRANCH
.L5.l_ocf9910:
	load8! &2 	#X2
	add! 68
	load4
	#
	store8! &6 	#X5
	load8! &5 	#X5
	load8! &4 	#X3
	sub
	neg
	store8! &7 	#X6
	load4! &4 	#X4
	store8! &2 	#X1
	load8! &1 	#X1
	neg
	load8! &12
	add
	store8! &9 	#X8
	load4! &5 	#X5
	load8! &1 	#AR
	add
	store8! &1 	#AR
	# CBRANCH
	load4! &4 	#X4
	load4! &7 	#X6
	lt_u
	not
	jump_zero! .L6.l_ocf9910
	# END CBRANCH
	load4! &6 	#X6
	#peep - pop(deadreg)+pusharg
	load8! &9 	#X8
	load8! &2 	#AR
	call! memcpy
	store8! &3

	set_sp! &2
	load8! &4 	#X4
	load8! &6 	#X5
	add
	store8! &2 	#X1
	load8! &3 	#X3
	load8! &2 	#X1
	sub
	neg
	store8! &4 	#X3
	# CBRANCH EQ0
	load4! &3 	#X3
	jump_zero! .L10.l_ocf9910
	# END CBRANCH
	load4! &3 	#X3
	store8! &1 	#AR
	load8! &0 	#AR
	neg
	load8! &12
	add
	store8! &5 	#X4
	load8! &2 	#X2
	add! 72
	load8
	#
	store8! &2 	#X1
	load8! &0 	#AR
	load8! &5 	#X4
	load8! &3 	#X1
	call! memcpy
	store8! &3

	set_sp! &2
	load4! &3 	#X3
	load8! &3 	#X2
	add! 68
	store4
	#
	load8! &2 	#X2
	add! 60
	load4
	#
	load8! &3 	#X2
	add! 64
	store4
	#
	push! 0
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &11
	jump! .L17.l_ocf9910
.L15.l_ocf9910:
	load8! &2 	#X2
	add! 56
	load4
	#
	store8! &2 	#X1
	push! 1
	load8! &2 	#X1
	shift_l
	store8! &4 	#X3
	load4! &3 	#X3
	load8! &3 	#X2
	add! 60
	store4
	#
	push! 0
	load8! &3 	#X2
	add! 64
	store8
	#
	# CBRANCH
	load4! &4 	#X4
	load4! &4 	#X3
	lt_u
	not
	jump_zero! .L5.l_ocf9910
	# END CBRANCH
.L16.l_ocf9910:
	load4! &3 	#X3
	store8! &2 	#X1
	load8! &1 	#X1
	neg
	load8! &12
	add
	store8! &4 	#X3
	load8! &1 	#X1
	load8! &4 	#X3
	load8! &2 	#AR
	call! memcpy
	store8! &3

	set_sp! &2
	push! 0
	load8! &3 	#X2
	add! 68
	store4
	#
	load8! &2 	#X2
	add! 60
	load4
	#
	load8! &3 	#X2
	add! 64
	store4
	#
	push! 0
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &11
	jump! .L17.l_ocf9910
.L6.l_ocf9910:
	load8! &1 	#X1
	load8! &9 	#X8
	load8! &2 	#AR
	call! memcpy
	store8! &3

	set_sp! &2
	load8! &2 	#X2
	add! 68
	load4
	#
	load8! &5 	#X4
	add
	store8! &2 	#X1
	load4! &1 	#X1
	load8! &3 	#X2
	add! 68
	store4
	#
	load8! &2 	#X2
	add! 60
	load4
	#
	store8! &1 	#AR
	# CBRANCH EQ
	load4! &1 	#X1
	load4! &1 	#AR
	xor
	jump_zero! .L18.l_ocf9910
	# END CBRANCH
.L8.l_ocf9910:
	load8! &2 	#X2
	add! 64
	load4
	#
	store8! &2 	#X1
	# CBRANCH
	load4! &1 	#X1
	load4! &1 	#AR
	lt_u
	jump_zero! .L11.l_ocf9910
	# END CBRANCH
	load8! &4 	#X4
	load8! &2 	#X1
	add
	load8! &3 	#X2
	add! 64
	store4
	#
	push! 0
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &11
	jump! .L17.l_ocf9910
.L14.l_ocf9910:
	load8! &1 	#X1
	add! 64
	load8
	#
	store8! &1 	#AR
	load8! &2 	#X2
	add! 56
	load4
	#
	store8! &4 	#X3
	push! 1
	load8! &4 	#X3
	shift_l
	store8! &4 	#X3
	load8! &1 	#X1
	add! 80
	load8
	#
	store8! &2 	#X1
	push! 1
	load4! &4 	#X3
	load8! &3 	#X1
	load8! &3 	#AR
	call
	store8! &3

	set_sp! &2
	load8! &0 	#AR
	load8! &3 	#X2
	add! 72
	store8
	#
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_not_zero! .L2.l_ocf9910
	# END CBRANCH
	push! 1
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &11
	jump! .L17.l_ocf9910
.L11.l_ocf9910:
	push! 0
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &11
	jump! .L17.l_ocf9910
.L18.l_ocf9910:
	push! 0
	load8! &3 	#X2
	add! 68
	store4
	#
	jump! .L8.l_ocf9910
.L10.l_ocf9910:
	load4! &6 	#X6
	store8! &5 	#X4
	load8! &2 	#X2
	add! 68
	load4
	#
	load8! &5 	#X4
	add
	store8! &2 	#X1
	load4! &1 	#X1
	load8! &3 	#X2
	add! 68
	store4
	#
	load8! &2 	#X2
	add! 60
	load4
	#
	store8! &1 	#AR
	# CBRANCH
	load4! &1 	#X1
	load4! &1 	#AR
	xor
	push! 1
	lt_u
	jump_zero! .L8.l_ocf9910
	# END CBRANCH
	jump! .L18.l_ocf9910
.L17.l_ocf9910:

	# epilogue
	set_sp! &9
	return

# FUNCTION ENDS:updatewindow

	#peephole 1
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole pop+cmprev
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole pop+block+push+block
	#peephole pop+push(deadreg)+sign_extend
	#peephole redundant blockage insn
	#peephole pop+block+cmp

# FUNCTION BEGINS:inflateResetKeep
	EXPORT	inflateResetKeep
inflateResetKeep:
	# prologue (3 GPRs)
	push! 0
	push! 0
	push! 0

	load8! &4
	store8! &2 	#X1
	# CBRANCH EQ0
	load8! &1 	#X1
	jump_zero! .L22.l_ocf9910
	# END CBRANCH
	load8! &1 	#X1
	add! 64
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L23.l_ocf9910
	# END CBRANCH
	load8! &1 	#X1
	add! 72
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L24.l_ocf9910
	# END CBRANCH
	load8! &1 	#X1
	add! 56
	load8
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L25.l_ocf9910
	# END CBRANCH
	load8! &0 	#AR
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ
	load8! &2 	#X1
	xor
	jump_zero! .L33.l_ocf9910
	# END CBRANCH
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
	jump! .L34.l_ocf9910
.L33.l_ocf9910:
	load8! &0 	#AR
	add! 8
	load4
	#
	add! -16180
	store8! &3 	#X2
	# CBRANCH
	push! 31
	load4! &3 	#X2
	lt_u
	not
	jump_zero! .L27.l_ocf9910
	# END CBRANCH
	push! 0
	load8! &1 	#AR
	add! 40
	store8
	#
	push! 0
	load8! &2 	#X1
	add! 40
	store8
	#
	push! 0
	load8! &2 	#X1
	add! 16
	store8
	#
	push! 0
	load8! &2 	#X1
	add! 48
	store8
	#
	load8! &0 	#AR
	add! 16
	load4
	#
	store8! &3 	#X2
	# CBRANCH EQ0
	load4! &2 	#X2
	jump_zero! .L21.l_ocf9910
	# END CBRANCH
	load8! &2 	#X2
	and! 0x1
	sigx4
	load8! &2 	#X1
	add! 96
	store8
	#
.L21.l_ocf9910:
	push! 16180
	load8! &1 	#AR
	add! 8
	store8
	#
	push! 0
	load8! &1 	#AR
	add! 20
	store4
	#
	push! 32768
	load8! &1 	#AR
	add! 28
	store4
	#
	push! 0
	load8! &1 	#AR
	add! 48
	store8
	#
	push! 0
	load8! &1 	#AR
	add! 80
	store8
	#
	push! 0
	load8! &1 	#AR
	add! 88
	store4
	#
	load8! &0 	#AR
	add! 1368
	store8! &2 	#X1
	load8! &1 	#X1
	load8! &1 	#AR
	add! 144
	store8
	#
	load8! &1 	#X1
	load8! &1 	#AR
	add! 112
	store8
	#
	load8! &1 	#X1
	load8! &1 	#AR
	add! 104
	store8
	#
	push! -4294967295
	load8! &1 	#AR
	add! 12920
	store8
	#
	push! 0
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
	jump! .L34.l_ocf9910
.L25.l_ocf9910:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
	jump! .L34.l_ocf9910
.L27.l_ocf9910:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
	jump! .L34.l_ocf9910
.L22.l_ocf9910:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
	jump! .L34.l_ocf9910
.L23.l_ocf9910:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
	jump! .L34.l_ocf9910
.L24.l_ocf9910:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
.L34.l_ocf9910:

	# epilogue
	set_sp! &3
	return

# FUNCTION ENDS:inflateResetKeep

	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole pop+cmprev
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole redundant blockage insn
	#peephole pop+block+cmp

# FUNCTION BEGINS:inflateReset
	EXPORT	inflateReset
inflateReset:
	# prologue (3 GPRs)
	push! 0
	push! 0
	push! 0

	load8! &4
	store8! &1 	#AR
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L37.l_ocf9910
	# END CBRANCH
	load8! &0 	#AR
	add! 64
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L38.l_ocf9910
	# END CBRANCH
	load8! &0 	#AR
	add! 72
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L39.l_ocf9910
	# END CBRANCH
	load8! &0 	#AR
	add! 56
	load8
	#
	store8! &2 	#X1
	# CBRANCH EQ0
	load8! &1 	#X1
	jump_zero! .L40.l_ocf9910
	# END CBRANCH
	load8! &1 	#X1
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ
	load8! &1 	#AR
	xor
	jump_zero! .L45.l_ocf9910
	# END CBRANCH
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
	jump! .L46.l_ocf9910
.L45.l_ocf9910:
	load8! &1 	#X1
	add! 8
	load4
	#
	add! -16180
	store8! &3 	#X2
	# CBRANCH
	push! 31
	load4! &3 	#X2
	lt_u
	not
	jump_zero! .L42.l_ocf9910
	# END CBRANCH
	push! 0
	load8! &2 	#X1
	add! 60
	store4
	#
	push! 0
	load8! &2 	#X1
	add! 64
	store8
	#
	load8! &0 	#AR
	call! inflateResetKeep
	store8! &1

	load4! &0 	#AR
	store4! &5
	jump! .L46.l_ocf9910
.L40.l_ocf9910:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
	jump! .L46.l_ocf9910
.L42.l_ocf9910:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
	jump! .L46.l_ocf9910
.L37.l_ocf9910:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
	jump! .L46.l_ocf9910
.L38.l_ocf9910:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
	jump! .L46.l_ocf9910
.L39.l_ocf9910:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
.L46.l_ocf9910:

	# epilogue
	set_sp! &3
	return

# FUNCTION ENDS:inflateReset

	#peephole pop+cmp
	#peephole 1
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole nop+set
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole pop+cmprev
	#peephole pop+cmp
	#peephole pop+block+cmp
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+cmp

# FUNCTION BEGINS:inflateReset2
	EXPORT	inflateReset2
inflateReset2:
	# prologue (7 GPRs)

	set_sp! &-7

	load8! &8
	store8! &3 	#X2
	load4! &9
	store8! &1 	#AR
	# CBRANCH EQ0
	load8! &2 	#X2
	jump_zero! .L54.l_ocf9910
	# END CBRANCH
	load8! &2 	#X2
	add! 64
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L55.l_ocf9910
	# END CBRANCH
	load8! &2 	#X2
	add! 72
	load8
	#
	store8! &2 	#X1
	# CBRANCH EQ0
	load8! &1 	#X1
	jump_zero! .L56.l_ocf9910
	# END CBRANCH
	load8! &2 	#X2
	add! 56
	load8
	#
	store8! &5 	#X4
	# CBRANCH EQ0
	load8! &4 	#X4
	jump_zero! .L57.l_ocf9910
	# END CBRANCH
	load8! &4 	#X4
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ
	load8! &3 	#X2
	xor
	jump_zero! .L67.l_ocf9910
	# END CBRANCH
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &9
	jump! .L68.l_ocf9910
.L67.l_ocf9910:
	load8! &4 	#X4
	add! 8
	load4
	#
	add! -16180
	store8! &4 	#X3
	# CBRANCH
	push! 31
	load4! &4 	#X3
	lt_u
	not
	jump_zero! .L59.l_ocf9910
	# END CBRANCH
	# CBRANCH
	load4! &0 	#AR
	add! -2147483648
	push! 0
	add! -2147483648
	lt_u
	not
	jump_zero! .L69.l_ocf9910
	# END CBRANCH
	load4! &0 	#AR
	sigx4
	shift_rs! 4
	add! 5
	store8! &6 	#X5
	# CBRANCH
	push! 47
	add! -2147483648
	load4! &1 	#AR
	add! -2147483648
	lt_u
	jump_zero! .L70.l_ocf9910
	# END CBRANCH
.L51.l_ocf9910:
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_not_zero! .L50.l_ocf9910
	# END CBRANCH
	push! 0
	store8! &4 	#X3
.L52.l_ocf9910:
	load8! &4 	#X4
	add! 72
	load8
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L53.l_ocf9910
	# END CBRANCH
	load8! &4 	#X4
	add! 56
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ
	load4! &4 	#X3
	xor
	jump_zero! .L53.l_ocf9910
	# END CBRANCH
	load8! &2 	#X2
	add! 80
	load8
	#
	store8! &7 	#X6
	load8! &0 	#AR
	load8! &7 	#X6
	load8! &3 	#X1
	call
	set_sp! (+ &0 16)
	

	push! 0
	load8! &5 	#X4
	add! 72
	store8
	#
.L53.l_ocf9910:
	load4! &5 	#X5
	load8! &5 	#X4
	add! 16
	store4
	#
	load4! &3 	#X3
	load8! &5 	#X4
	add! 56
	store4
	#
	load8! &2 	#X2
	call! inflateReset
	store8! &1

	load4! &0 	#AR
	store4! &9
	jump! .L68.l_ocf9910
.L69.l_ocf9910:
	load8! &0 	#AR
	neg
	store8! &1 	#AR
	push! 0
	store8! &6 	#X5
.L50.l_ocf9910:
	load4! &0 	#AR
	store8! &4 	#X3
	load8! &3 	#X3
	add! -8
	store8! &1 	#AR
	# CBRANCH
	push! 7
	load4! &1 	#AR
	lt_u
	jump_zero! .L52.l_ocf9910
	# END CBRANCH
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &9
	jump! .L68.l_ocf9910
.L70.l_ocf9910:
	load8! &0 	#AR
	and! 0xf
	store8! &1 	#AR
	jump! .L51.l_ocf9910
.L57.l_ocf9910:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &9
	jump! .L68.l_ocf9910
.L59.l_ocf9910:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &9
	jump! .L68.l_ocf9910
.L54.l_ocf9910:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &9
	jump! .L68.l_ocf9910
.L55.l_ocf9910:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &9
	jump! .L68.l_ocf9910
.L56.l_ocf9910:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &9
.L68.l_ocf9910:

	# epilogue
	set_sp! &7
	return

# FUNCTION ENDS:inflateReset2

	#peephole pop+cmp
	#peephole pop+cmp

# FUNCTION BEGINS:inflateInit2_
	EXPORT	inflateInit2_
inflateInit2_:
	# prologue (5 GPRs)

	set_sp! &-6

	load8! &7
	store8! &3 	#X2
	load8! &9
	store8! &1 	#AR
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L76.l_ocf9910
	# END CBRANCH
	load8! &0 	#AR
	load1
	#
	# CBRANCH - peep (modesize=1)
	and! 255
	push! 49
	xor
	push! 1
	lt_u
	jump_zero! .L77.l_ocf9910
	# END CBRANCH
	# CBRANCH
	load4! &10
	push! 112
	xor
	push! 1
	lt_u
	jump_zero! .L78.l_ocf9910
	# END CBRANCH
	# CBRANCH EQ0
	load8! &2 	#X2
	jump_zero! .L79.l_ocf9910
	# END CBRANCH
	push! 0
	load8! &3 	#X2
	add! 48
	store8
	#
	load8! &2 	#X2
	add! 64
	load8
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L73.l_ocf9910
	# END CBRANCH
	load8! &2 	#X2
	add! 80
	load8
	#
	store8! &2 	#X1
	load8! &2 	#X2
	add! 72
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L86.l_ocf9910
	# END CBRANCH
.L75.l_ocf9910:
	push! 12936
	push! 1
	load8! &3 	#X1
	load8! &3 	#AR
	call
	store8! &3

	set_sp! &2
	load8! &0 	#AR
	store8! &4 	#X3
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L80.l_ocf9910
	# END CBRANCH
	load8! &0 	#AR
	load8! &3 	#X2
	add! 56
	store8
	#
	load8! &2 	#X2
	load8! &1 	#AR
	store8
	#
	push! 0
	load8! &1 	#AR
	add! 72
	store8
	#
	push! 16180
	load8! &1 	#AR
	add! 8
	store4
	#
	load4! &8
	load8! &3 	#X2
	call! inflateReset2
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_zero! .L71.l_ocf9910
	# END CBRANCH
	load8! &2 	#X2
	add! 72
	load8
	#
	store8! &2 	#X1
	load8! &2 	#X2
	add! 80
	load8
	#
	store8! &5 	#X4
	load8! &3 	#X3
	load8! &5 	#X4
	load8! &2 	#AR
	store8! &8
	load8! &3 	#X1
	call
	set_sp! (+ &0 16)
	

	push! 0
	load8! &3 	#X2
	add! 56
	store8
	#
	load8! &5
	store8! &1 	#AR
.L71.l_ocf9910:
	load4! &0 	#AR
	store4! &8
	jump! .L87.l_ocf9910
.L86.l_ocf9910:
	push! zcfree
	load8! &3 	#X2
	add! 72
	store8
	#
	jump! .L75.l_ocf9910
.L73.l_ocf9910:
	push! zcalloc
	load8! &3 	#X2
	add! 64
	store8
	#
	push! 0
	load8! &3 	#X2
	add! 80
	store8
	#
	push! 0
	store8! &2 	#X1
	push! zcalloc
	store8! &1 	#AR
	load8! &2 	#X2
	add! 72
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_not_zero! .L75.l_ocf9910
	# END CBRANCH
	jump! .L86.l_ocf9910
.L77.l_ocf9910:
	push! -6
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &8
	jump! .L87.l_ocf9910
.L78.l_ocf9910:
	push! -6
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &8
	jump! .L87.l_ocf9910
.L80.l_ocf9910:
	push! -4
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &8
	jump! .L87.l_ocf9910
.L76.l_ocf9910:
	push! -6
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &8
	jump! .L87.l_ocf9910
.L79.l_ocf9910:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &8
.L87.l_ocf9910:

	# epilogue
	set_sp! &6
	return

# FUNCTION ENDS:inflateInit2_


# FUNCTION BEGINS:inflateInit_
	EXPORT	inflateInit_
inflateInit_:
	# prologue (1 GPRs)
	push! 0

	load4! &4
	load8! &4
	push! 15
	load8! &5
	call! inflateInit2_
	store8! &4

	set_sp! &3
	load4! &0 	#AR
	store4! &3

	# epilogue
	store8! &0 #set_sp! &1
	return

# FUNCTION ENDS:inflateInit_

	#peephole 1
	#peephole 1
	#peephole 1
	#peephole nop+set
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole 1
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole move
	#peephole 1
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole pop+cmprev
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+commut(si)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole popdi(deadreg)+push

# FUNCTION BEGINS:inflatePrime
	EXPORT	inflatePrime
inflatePrime:
	# prologue (5 GPRs)

	set_sp! &-5

	load8! &6
	store8! &1 	#AR
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L93.l_ocf9910
	# END CBRANCH
	load8! &0 	#AR
	add! 64
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L94.l_ocf9910
	# END CBRANCH
	load8! &0 	#AR
	add! 72
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L95.l_ocf9910
	# END CBRANCH
	load8! &0 	#AR
	add! 56
	load8
	#
	store8! &2 	#X1
	# CBRANCH EQ0
	load8! &1 	#X1
	jump_zero! .L96.l_ocf9910
	# END CBRANCH
	load8! &1 	#X1
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ
	load8! &1 	#AR
	xor
	jump_zero! .L103.l_ocf9910
	# END CBRANCH
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &7
	jump! .L104.l_ocf9910
.L103.l_ocf9910:
	load8! &1 	#X1
	add! 8
	load4
	#
	add! -16180
	store8! &1 	#AR
	# CBRANCH
	push! 31
	load4! &1 	#AR
	lt_u
	not
	jump_zero! .L98.l_ocf9910
	# END CBRANCH
	# CBRANCH
	load4! &7
	add! -2147483648
	push! 0
	add! -2147483648
	lt_u
	not
	jump_zero! .L105.l_ocf9910
	# END CBRANCH
	# CBRANCH
	push! 16
	add! -2147483648
	load4! &8
	add! -2147483648
	lt_u
	not
	jump_zero! .L99.l_ocf9910
	# END CBRANCH
	load8! &1 	#X1
	add! 88
	load4
	#
	store8! &3 	#X2
	load8! &2 	#X2
	store8! &1 	#AR
	load4! &7
	store8! &4 	#X3
	load8! &3 	#X3
	load8! &1 	#AR
	add
	store8! &1 	#AR
	# CBRANCH
	push! 32
	load4! &1 	#AR
	lt_u
	not
	jump_zero! .L100.l_ocf9910
	# END CBRANCH
	load4! &3 	#X3
	sigx4
	store8! &4 	#X3
	push! 1
	load8! &4 	#X3
	shift_l
	add! -1
	load4! &9
	and
	store8! &5 	#X4
	load8! &1 	#X1
	add! 80
	load8
	#
	store8! &4 	#X3
	load4! &2 	#X2
	pow2
	load8! &5 	#X4
	mult
	and! 0xffffffff
	load8! &4 	#X3
	add
	load8! &2 	#X1
	add! 80
	store8
	#
	load4! &0 	#AR
	load8! &2 	#X1
	add! 88
	store4
	#
	push! 0
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &7
	jump! .L104.l_ocf9910
.L96.l_ocf9910:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &7
	jump! .L104.l_ocf9910
.L98.l_ocf9910:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &7
	jump! .L104.l_ocf9910
.L93.l_ocf9910:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &7
	jump! .L104.l_ocf9910
.L94.l_ocf9910:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &7
	jump! .L104.l_ocf9910
.L105.l_ocf9910:
	push! 0
	load8! &2 	#X1
	add! 80
	store8
	#
	push! 0
	load8! &2 	#X1
	add! 88
	store4
	#
	push! 0
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &7
	jump! .L104.l_ocf9910
.L95.l_ocf9910:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &7
	jump! .L104.l_ocf9910
.L99.l_ocf9910:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &7
	jump! .L104.l_ocf9910
.L100.l_ocf9910:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &7
.L104.l_ocf9910:

	# epilogue
	set_sp! &5
	return

# FUNCTION ENDS:inflatePrime

.LC0.l_ocf9910:
#	.string "incorrect header check"
	data1 [ 105 110 99 111 114 114 101 99 116 32 104 101 97 100 101 114 32 99 104 101 99 107 0 ]
.LC1.l_ocf9910:
#	.string "unknown compression method"
	data1 [ 117 110 107 110 111 119 110 32 99 111 109 112 114 101 115 115 105 111 110 32 109 101 116 104 111 100 0 ]
.LC2.l_ocf9910:
#	.string "invalid window size"
	data1 [ 105 110 118 97 108 105 100 32 119 105 110 100 111 119 32 115 105 122 101 0 ]
.LC3.l_ocf9910:
#	.string "unknown header flags set"
	data1 [ 117 110 107 110 111 119 110 32 104 101 97 100 101 114 32 102 108 97 103 115 32 115 101 116 0 ]
.LC4.l_ocf9910:
#	.string "header crc mismatch"
	data1 [ 104 101 97 100 101 114 32 99 114 99 32 109 105 115 109 97 116 99 104 0 ]
.LC5.l_ocf9910:
#	.string "invalid block type"
	data1 [ 105 110 118 97 108 105 100 32 98 108 111 99 107 32 116 121 112 101 0 ]
.LC6.l_ocf9910:
#	.string "invalid stored block lengths"
	data1 [ 105 110 118 97 108 105 100 32 115 116 111 114 101 100 32 98 108 111 99 107 32 108 101 110 103 116 104 115 0 ]
.LC7.l_ocf9910:
#	.string "too many length or distance symbols"
	data1 [ 116 111 111 32 109 97 110 121 32 108 101 110 103 116 104 32 111 114 32 100 105 115 116 97 110 99 101 32 115 121 109 98 111 108 115 0 ]
.LC8.l_ocf9910:
#	.string "invalid code lengths set"
	data1 [ 105 110 118 97 108 105 100 32 99 111 100 101 32 108 101 110 103 116 104 115 32 115 101 116 0 ]
.LC9.l_ocf9910:
#	.string "invalid bit length repeat"
	data1 [ 105 110 118 97 108 105 100 32 98 105 116 32 108 101 110 103 116 104 32 114 101 112 101 97 116 0 ]
.LC10.l_ocf9910:
#	.string "invalid code -- missing end-of-block"
	data1 [ 105 110 118 97 108 105 100 32 99 111 100 101 32 45 45 32 109 105 115 115 105 110 103 32 101 110 100 45 111 102 45 98 108 111 99 107 0 ]
.LC11.l_ocf9910:
#	.string "invalid literal/lengths set"
	data1 [ 105 110 118 97 108 105 100 32 108 105 116 101 114 97 108 47 108 101 110 103 116 104 115 32 115 101 116 0 ]
.LC12.l_ocf9910:
#	.string "invalid distances set"
	data1 [ 105 110 118 97 108 105 100 32 100 105 115 116 97 110 99 101 115 32 115 101 116 0 ]
.LC13.l_ocf9910:
#	.string "invalid literal/length code"
	data1 [ 105 110 118 97 108 105 100 32 108 105 116 101 114 97 108 47 108 101 110 103 116 104 32 99 111 100 101 0 ]
.LC14.l_ocf9910:
#	.string "invalid distance code"
	data1 [ 105 110 118 97 108 105 100 32 100 105 115 116 97 110 99 101 32 99 111 100 101 0 ]
.LC15.l_ocf9910:
#	.string "invalid distance too far back"
	data1 [ 105 110 118 97 108 105 100 32 100 105 115 116 97 110 99 101 32 116 111 111 32 102 97 114 32 98 97 99 107 0 ]
.LC16.l_ocf9910:
#	.string "incorrect data check"
	data1 [ 105 110 99 111 114 114 101 99 116 32 100 97 116 97 32 99 104 101 99 107 0 ]
.LC17.l_ocf9910:
#	.string "incorrect length check"
	data1 [ 105 110 99 111 114 114 101 99 116 32 108 101 110 103 116 104 32 99 104 101 99 107 0 ]
	#peephole move
	#peephole move+push+sub
	#peephole move_dead
	#peephole move
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+sub
	#peephole move_dead
	#peephole move
	#peephole move+push+sub
	#peephole move_dead
	#peephole move
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+sub
	#peephole move_dead
	#peephole 1
	#peephole nop+set
	#peephole move
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole move_dead
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole move_dead
	#peephole pop(deadreg)+pushdi
	#peephole move_dead
	#peephole move
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole pop(deadreg)+pushdi
	#peephole move_dead
	#peephole move
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole pop(deadreg)+pushdi
	#peephole move_dead
	#peephole move
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole move_dead
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole pop(deadreg)+pushdi
	#peephole move_dead
	#peephole move
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole 1
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole pop+cmp
	#peephole pop+push+commut(di)
	#peephole move_dead
	#peephole move+push+sub
	#peephole move_dead
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole pop(deadreg)+pushdi
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole pop+cmp
	#peephole move
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole move
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole push+pop+deadreg+binop
	#peephole pop+cmp
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole pop+push+commut(di)
	#peephole 1
	#peephole move
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole move
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole pop+cmp
	#peephole binop1+deadreg+binop2
	#peephole binop1+deadreg+binop2
	#peephole pop+push+commut(di)
	#peephole binop1+deadreg+binop2
	#peephole binop1+deadreg+binop2
	#peephole pop+push+commut(di)
	#peephole pop+push+commut(di)
	#peephole 1
	#peephole pop+push+commut(di)
	#peephole move
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole zero_extend
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole move
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole move
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole 1
	#peephole move_dead
	#peephole pop+push+commut(di)
	#peephole pop+cmp
	#peephole pop(deadreg)+push
	#peephole move
	#peephole move+push+sub
	#peephole move_dead
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole binop1+deadreg+binop2
	#peephole zero_extend
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole 1
	#peephole nop+set
	#peephole move+push(pushable)
	#peephole 1
	#peephole pop+cmp
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move+push+sub
	#peephole move_dead
	#peephole pop+cmp
	#peephole move
	#peephole move_dead
	#peephole move
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole pop(deadreg)+pushdi
	#peephole pop+push+commut(di)
	#peephole 1
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole pop+push+commut(di)
	#peephole 1
	#peephole move
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole move
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole move+push+sub
	#peephole 1
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole zero_extend
	#peephole move_dead
	#peephole move
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move
	#peephole move+push(pushable)
	#peephole pop+push+commut(di)
	#peephole 1
	#peephole zero_extend
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole move_dead
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole move
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole move
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole move_dead
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole move_dead
	#peephole move+push(pushable)
	#peephole pop+push+commut(di)
	#peephole 1
	#peephole zero_extend
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole nop+set
	#peephole move+push(pushable)
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole move_dead
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole move
	#peephole 1
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole pop+push+commut(di)
	#peephole move_dead
	#peephole move
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole move_dead
	#peephole move
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole move
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole move
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole move_dead
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole move_dead
	#peephole move
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole pop(deadreg)+pushdi
	#peephole pop+push+commut(di)
	#peephole 1
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole move
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole 1
	#peephole move
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole pop+push+commut(di)
	#peephole move_dead
	#peephole move
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole zero_extend
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole move_dead
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole move
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole move
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole move_dead
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole move_dead
	#peephole move+push(pushable)
	#peephole pop+push+commut(di)
	#peephole 1
	#peephole zero_extend
	#peephole zero_extend
	#peephole move_dead
	#peephole move+push(pushable)
	#peephole pop+push+commut(di)
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole move_dead
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole zero_extend
	#peephole 1
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole move+push+sub
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole move+push+sub
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole move
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole move_dead
	#peephole move
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole move
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole move
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole move_dead
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole move_dead
	#peephole move
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole move+push(pushable)
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole move_dead
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole move_dead
	#peephole move+push+sub
	#peephole move_dead
	#peephole move
	#peephole move+push(pushable)
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole zero_extend
	#peephole move_dead
	#peephole move+push+sub
	#peephole move_dead
	#peephole move
	#peephole move+push(pushable)
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole pop+push+commut(di)
	#peephole move_dead
	#peephole move
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole move
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole 1
	#peephole move
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole move
	#peephole move+push(pushable)
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole move_dead
	#peephole move+push+sub
	#peephole move_dead
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole move
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole move+push+sub
	#peephole move_dead
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move
	#peephole move+push(pushable)
	#peephole pop+push+commut(di)
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole move
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole move
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole move
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole zero_extend
	#peephole binop1+deadreg+binop2
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole pop+push+commut(di)
	#peephole move
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole move
	#peephole 1
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole 1
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole pop+push+commut(di)
	#peephole move_dead
	#peephole move
	#peephole move+push(pushable)
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole move
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole zero_extend
	#peephole move
	#peephole move+push+sub
	#peephole move_dead
	#peephole move
	#peephole move+push+sub
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+sub
	#peephole 1
	#peephole move
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole move
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole move_dead
	#peephole move+push(pushable)
	#peephole 1
	#peephole binop1+deadreg+binop2
	#peephole pop+cmprev
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole pop+push+commut(di)
	#peephole 1
	#peephole move
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole move
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole move_dead
	#peephole move_dead
	#peephole move_dead
	#peephole move
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole move_dead
	#peephole move_dead
	#peephole move
	#peephole move+push(pushable)
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole pop+push+commut(di)
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole move
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole move
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole pop+cmp
	#peephole binop1+deadreg+binop2
	#peephole binop1+deadreg+binop2
	#peephole pop+push+commut(di)
	#peephole binop1+deadreg+binop2
	#peephole binop1+deadreg+binop2
	#peephole pop+push+commut(di)
	#peephole pop+push+commut(di)
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole move
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole unary+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole push+pop+deadreg+binop
	#peephole pop+cmp
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole pop+push+commut(di)
	#peephole 1
	#peephole move
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole move
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole move_dead
	#peephole move
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole move_dead
	#peephole move
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole 1
	#peephole move
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole move
	#peephole move+push+sub
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+sub
	#peephole 1
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole 1
	#peephole move_dead
	#peephole move+push(pushable)
	#peephole pop+push+sub
	#peephole 1
	#peephole zero_extend
	#peephole move
	#peephole move+push(pushable)
	#peephole 1
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole move+move(allmodes x allmodes)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole 1
	#peephole nop+set
	#peephole 1
	#peephole nop+set
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole 1
	#peephole nop+set
	#peephole 1
	#peephole move
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole move
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move+move(allmodes x allmodes)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole 1
	#peephole move
	#peephole move+push(pushable)
	#peephole 1
	#peephole 1
	#peephole move
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole move_dead
	#peephole move+move(allmodes x allmodes)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole move
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole move_dead
	#peephole move+move(allmodes x allmodes)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move
	#peephole 1
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole move
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole zero_extend
	#peephole 1
	#peephole move_dead
	#peephole move
	#peephole move+push(pushable)
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop+cmp
	#peephole 1
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole pop+cmp
	#peephole 1
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole pop+push+commut(di)
	#peephole 1
	#peephole move
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole move
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole move
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole move
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole move
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole move
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole 1
	#peephole pop+cmprev
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole nop+set
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+pushdi
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole nop+set
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+move2(deadreg)
	#peephole redundant blockage insn
	#peephole nop+set
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+move2(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+commut(si)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole nop+set
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole nop+set
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole nop+set
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole nop+set
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole move+push(pushable)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole nop+set
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+move2(deadreg)
	#peephole redundant blockage insn
	#peephole nop+set
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+move2(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole nop+set
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole nop+set
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole nop+set
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+push+commut(si)
	#peephole pop+move2(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole nop+set
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+push(deadreg)+sign_extend
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole move_dead
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole move_dead
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole move_dead
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole move_dead
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move2(deadreg)
	#peephole pop+block+cmp
	#peephole zero_extend
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole zero_extend
	#peephole zero_extend
	#peephole zero_extend
	#peephole zero_extend
	#peephole zero_extend
	#peephole zero_extend
	#peephole zero_extend
	#peephole zero_extend
	#peephole redundant blockage insn
	#peephole pop+block+push+commut(di)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole zero_extend
	#peephole pop+block+push+commut(di)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move2(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+commut(di)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole zero_extend
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole zero_extend
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole zero_extend
	#peephole pop+block+push+commut(di)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move2(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+commut(di)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole zero_extend
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole zero_extend
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole zero_extend
	#peephole redundant blockage insn
	#peephole zero_extend
	#peephole zero_extend
	#peephole zero_extend
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole zero_extend
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole zero_extend
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole zero_extend
	#peephole zero_extend
	#peephole zero_extend
	#peephole zero_extend
	#peephole zero_extend
	#peephole zero_extend
	#peephole zero_extend
	#peephole zero_extend
	#peephole zero_extend
	#peephole zero_extend
	#peephole zero_extend
	#peephole zero_extend
	#peephole zero_extend
	#peephole zero_extend
	#peephole zero_extend
	#peephole zero_extend
	#peephole zero_extend
	#peephole zero_extend
	#peephole zero_extend
	#peephole zero_extend
	#peephole zero_extend
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole redundant blockage insn
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole redundant blockage insn
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push

# FUNCTION BEGINS:inflate
	EXPORT	inflate
inflate:
	# prologue (16 GPRs)

	set_sp! &-23

	load8! &24
	store8! &8 	#X7
	# CBRANCH EQ0
	load8! &7 	#X7
	jump_zero! .L361.l_ocf9910
	# END CBRANCH
	load8! &7 	#X7
	add! 64
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L362.l_ocf9910
	# END CBRANCH
	load8! &7 	#X7
	add! 72
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L363.l_ocf9910
	# END CBRANCH
	load8! &7 	#X7
	add! 56
	load8
	#
	store8! &6 	#X5
	# CBRANCH EQ0
	load8! &5 	#X5
	jump_zero! .L364.l_ocf9910
	# END CBRANCH
	load8! &5 	#X5
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ
	load8! &8 	#X7
	xor
	jump_zero! .L614.l_ocf9910
	# END CBRANCH
	push! -2
	store8! &11 	#X10
.L106.l_ocf9910:
	load4! &10 	#X10
	store4! &25
	jump! .L615.l_ocf9910
.L614.l_ocf9910:
	load8! &5 	#X5
	add! 8
	load4
	#
	store8! &1 	#AR
	load8! &0 	#AR
	add! -16180
	store8! &2 	#X1
	# CBRANCH
	push! 31
	load4! &2 	#X1
	lt_u
	not
	jump_zero! .L366.l_ocf9910
	# END CBRANCH
	load8! &7 	#X7
	add! 24
	load8
	#
	store8! &14 	#X13
	# CBRANCH EQ0
	load8! &13 	#X13
	jump_zero! .L367.l_ocf9910
	# END CBRANCH
	load8! &7 	#X7
	load8
	#
	store8! &7 	#X6
	load8! &7 	#X7
	add! 8
	load4
	#
	store8! &16 	#X15
	# CBRANCH EQ0
	load8! &6 	#X6
	jump_zero! .L616.l_ocf9910
	# END CBRANCH
.L108.l_ocf9910:
	# CBRANCH EQ
	load4! &0 	#AR
	push! 16191
	xor
	jump_zero! .L617.l_ocf9910
	# END CBRANCH
.L109.l_ocf9910:
	load8! &7 	#X7
	add! 32
	load4
	#
	store8! &15 	#X14
	load8! &5 	#X5
	add! 80
	load8
	#
	store8! &3 	#X2
	load8! &5 	#X5
	add! 88
	load4
	#
	store8! &4 	#X3
	load4! &25
	add! -5
	store4! &18
	load4! &14 	#X14
	store4! &17
	load4! &15 	#X15
	store8! &5 	#X4
.L110.l_ocf9910:
	#CASESI
	push! 30
	load4! &1 	#AR
	sigx4
	add! -16180
	lt_u
	not
	jump_zero! .L111.l_ocf9910
	load4! &0 	#AR
	sigx4
	add! -16180
	mult! 8
	add! .L112.l_ocf9910
	load8
	add! .L112.l_ocf9910
	jump
	##
.L112.l_ocf9910:
	data8 [(+ .L142.l_ocf9910 -.L112.l_ocf9910)]#rel casesi entry
	data8 [(+ .L141.l_ocf9910 -.L112.l_ocf9910)]#rel casesi entry
	data8 [(+ .L140.l_ocf9910 -.L112.l_ocf9910)]#rel casesi entry
	data8 [(+ .L139.l_ocf9910 -.L112.l_ocf9910)]#rel casesi entry
	data8 [(+ .L138.l_ocf9910 -.L112.l_ocf9910)]#rel casesi entry
	data8 [(+ .L137.l_ocf9910 -.L112.l_ocf9910)]#rel casesi entry
	data8 [(+ .L136.l_ocf9910 -.L112.l_ocf9910)]#rel casesi entry
	data8 [(+ .L135.l_ocf9910 -.L112.l_ocf9910)]#rel casesi entry
	data8 [(+ .L134.l_ocf9910 -.L112.l_ocf9910)]#rel casesi entry
	data8 [(+ .L133.l_ocf9910 -.L112.l_ocf9910)]#rel casesi entry
	data8 [(+ .L132.l_ocf9910 -.L112.l_ocf9910)]#rel casesi entry
	data8 [(+ .L131.l_ocf9910 -.L112.l_ocf9910)]#rel casesi entry
	data8 [(+ .L130.l_ocf9910 -.L112.l_ocf9910)]#rel casesi entry
	data8 [(+ .L129.l_ocf9910 -.L112.l_ocf9910)]#rel casesi entry
	data8 [(+ .L128.l_ocf9910 -.L112.l_ocf9910)]#rel casesi entry
	data8 [(+ .L127.l_ocf9910 -.L112.l_ocf9910)]#rel casesi entry
	data8 [(+ .L126.l_ocf9910 -.L112.l_ocf9910)]#rel casesi entry
	data8 [(+ .L125.l_ocf9910 -.L112.l_ocf9910)]#rel casesi entry
	data8 [(+ .L124.l_ocf9910 -.L112.l_ocf9910)]#rel casesi entry
	data8 [(+ .L123.l_ocf9910 -.L112.l_ocf9910)]#rel casesi entry
	data8 [(+ .L122.l_ocf9910 -.L112.l_ocf9910)]#rel casesi entry
	data8 [(+ .L121.l_ocf9910 -.L112.l_ocf9910)]#rel casesi entry
	data8 [(+ .L120.l_ocf9910 -.L112.l_ocf9910)]#rel casesi entry
	data8 [(+ .L119.l_ocf9910 -.L112.l_ocf9910)]#rel casesi entry
	data8 [(+ .L118.l_ocf9910 -.L112.l_ocf9910)]#rel casesi entry
	data8 [(+ .L369.l_ocf9910 -.L112.l_ocf9910)]#rel casesi entry
	data8 [(+ .L116.l_ocf9910 -.L112.l_ocf9910)]#rel casesi entry
	data8 [(+ .L115.l_ocf9910 -.L112.l_ocf9910)]#rel casesi entry
	data8 [(+ .L114.l_ocf9910 -.L112.l_ocf9910)]#rel casesi entry
	data8 [(+ .L113.l_ocf9910 -.L112.l_ocf9910)]#rel casesi entry
	data8 [(+ .L370.l_ocf9910 -.L112.l_ocf9910)]#rel casesi entry
.L617.l_ocf9910:
	push! 16192
	load8! &6 	#X5
	add! 8
	store4
	#
	push! 16192
	store8! &1 	#AR
	jump! .L109.l_ocf9910
.L616.l_ocf9910:
	# CBRANCH EQ0
	load4! &15 	#X15
	jump_zero! .L108.l_ocf9910
	# END CBRANCH
	push! -2
	store8! &11 	#X10
	load4! &10 	#X10
	store4! &25
	jump! .L615.l_ocf9910
.L364.l_ocf9910:
	push! -2
	store8! &11 	#X10
	load4! &10 	#X10
	store4! &25
	jump! .L615.l_ocf9910
.L142.l_ocf9910:
	load8! &5 	#X5
	add! 16
	load4
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_not_zero! .L618.l_ocf9910
	# END CBRANCH
	push! 16192
	load8! &6 	#X5
	add! 8
	store4
	#
.L130.l_ocf9910:
	load8! &5 	#X5
	add! 12
	load4
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_zero! .L619.l_ocf9910
	# END CBRANCH
	load8! &3 	#X3
	and! 0x7
	and! 0xffffffff
	store8! &1 	#AR
	load8! &2 	#X2
	load8! &1 	#AR
	shift_ru
	store8! &3 	#X2
	load8! &3 	#X3
	and! 0xfffffffffffffff8
	store8! &4 	#X3
	push! 16206
	load8! &6 	#X5
	add! 8
	store4
	#
.L116.l_ocf9910:
	load8! &5 	#X5
	add! 16
	load4
	#
	store8! &2 	#X1
	# CBRANCH EQ0
	load4! &1 	#X1
	jump_zero! .L325.l_ocf9910
	# END CBRANCH
	# CBRANCH
	push! 31
	load4! &4 	#X3
	lt_u
	not
	jump_zero! .L415.l_ocf9910
	# END CBRANCH
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_zero! .L620.l_ocf9910
	# END CBRANCH
	load8! &4 	#X4
	add! -1
	store8! &10 	#X9
	load8! &6 	#X6
	add! 1
	store8! &9 	#X8
	load8! &6 	#X6
	load1
	#
	store8! &11 	#X10
	load4! &3 	#X3
	pow2
	load8! &11 	#X10
	mult
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &3 	#X3
	add! 8
	store8! &1 	#AR
	# CBRANCH
	push! 31
	load4! &1 	#AR
	lt_u
	not
	jump_zero! .L416.l_ocf9910
	# END CBRANCH
	# CBRANCH EQ0
	load4! &9 	#X9
	jump_zero! .L417.l_ocf9910
	# END CBRANCH
	load8! &4 	#X4
	add! -2
	store8! &10 	#X9
	load8! &6 	#X6
	add! 2
	store8! &9 	#X8
	load8! &6 	#X6
	add! 1
	load1
	#
	store8! &11 	#X10
	load4! &0 	#AR
	pow2
	load8! &11 	#X10
	mult
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &3 	#X3
	add! 16
	store8! &1 	#AR
	# CBRANCH
	push! 31
	load4! &1 	#AR
	lt_u
	not
	jump_zero! .L418.l_ocf9910
	# END CBRANCH
	# CBRANCH EQ0
	load4! &9 	#X9
	jump_zero! .L419.l_ocf9910
	# END CBRANCH
	load8! &4 	#X4
	add! -3
	store8! &10 	#X9
	load8! &6 	#X6
	add! 3
	store8! &9 	#X8
	load8! &6 	#X6
	add! 2
	load1
	#
	store8! &11 	#X10
	load4! &0 	#AR
	pow2
	load8! &11 	#X10
	mult
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &3 	#X3
	add! 24
	store8! &1 	#AR
	# CBRANCH
	push! 31
	load4! &1 	#AR
	lt_u
	not
	jump_zero! .L420.l_ocf9910
	# END CBRANCH
	# CBRANCH EQ0
	load4! &9 	#X9
	jump_zero! .L421.l_ocf9910
	# END CBRANCH
	load8! &4 	#X4
	add! -4
	store8! &5 	#X4
	load8! &6 	#X6
	add! 4
	store8! &9 	#X8
	load8! &6 	#X6
	add! 3
	load1
	#
	store8! &7 	#X6
	load4! &0 	#AR
	pow2
	load8! &7 	#X6
	mult
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &3 	#X3
	add! 32
	store8! &4 	#X3
.L326.l_ocf9910:
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	load8! &7 	#X7
	add! 40
	load8
	#
	store8! &1 	#AR
	load4! &9 	#X9
	store8! &7 	#X6
	load8! &0 	#AR
	load8! &7 	#X6
	add
	load8! &8 	#X7
	add! 40
	store8
	#
	load8! &5 	#X5
	add! 40
	load8
	#
	load8! &7 	#X6
	add
	load8! &6 	#X5
	add! 40
	store8
	#
	load8! &1 	#X1
	and! 0x4
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L422.l_ocf9910
	# END CBRANCH
	load8! &5 	#X5
	add! 24
	load4
	#
	store8! &2 	#X1
	load8! &5 	#X5
	add! 32
	load8
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load4! &9 	#X9
	jump_zero! .L329.l_ocf9910
	# END CBRANCH
	load8! &6 	#X6
	neg
	load8! &14 	#X13
	add
	store8! &7 	#X6
	# CBRANCH EQ0
	load4! &1 	#X1
	jump_zero! .L330.l_ocf9910
	# END CBRANCH
	load4! &9 	#X9
	load8! &7 	#X6
	load8! &2 	#AR
	call! crc32
	store8! &3

	set_sp! &2
.L331.l_ocf9910:
	load8! &0 	#AR
	load8! &6 	#X5
	add! 32
	store8
	#
	load8! &0 	#AR
	load8! &8 	#X7
	add! 96
	store8
	#
	load8! &5 	#X5
	add! 16
	load4
	#
	store8! &2 	#X1
	load8! &1 	#X1
	and! 0x4
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L423.l_ocf9910
	# END CBRANCH
	load8! &5 	#X5
	add! 24
	load4
	#
	store8! &2 	#X1
.L329.l_ocf9910:
	# CBRANCH EQ0
	load4! &1 	#X1
	jump_not_zero! .L424.l_ocf9910
	# END CBRANCH
	load8! &2 	#X2
	shift_ru! 24
	and! 0xff
	store8! &7 	#X6
	load8! &2 	#X2
	shift_ru! 8
	and! 0xff00
	load8! &7 	#X6
	or
	store8! &7 	#X6
	load8! &2 	#X2
	shift_l! 8
	and! 0xff0000
	store8! &10 	#X9
	load8! &2 	#X2
	shift_l! 24
	and! 0xffffffff
	load8! &10 	#X9
	add
	load8! &7 	#X6
	add
	store8! &2 	#X1
.L332.l_ocf9910:
	# CBRANCH EQ
	load8! &1 	#X1
	load8! &1 	#AR
	xor
	jump_zero! .L621.l_ocf9910
	# END CBRANCH
	push! .LC16.l_ocf9910
	load8! &8 	#X7
	add! 48
	store8
	#
	push! 16209
	load8! &6 	#X5
	add! 8
	store4
	#
	load4! &14 	#X14
	store4! &17
	load8! &8 	#X8
	store8! &7 	#X6
.L113.l_ocf9910:
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	push! -3
	store8! &11 	#X10
.L154.l_ocf9910:
	load8! &13 	#X13
	load8! &8 	#X7
	add! 24
	store8
	#
	load4! &14 	#X14
	load8! &8 	#X7
	add! 32
	store4
	#
	load8! &6 	#X6
	load8! &8 	#X7
	store8
	#
	load4! &4 	#X4
	load8! &8 	#X7
	add! 8
	store4
	#
	load8! &2 	#X2
	load8! &6 	#X5
	add! 80
	store8
	#
	load4! &3 	#X3
	load8! &6 	#X5
	add! 88
	store4
	#
	load8! &5 	#X5
	add! 60
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_not_zero! .L338.l_ocf9910
	# END CBRANCH
	# CBRANCH EQ
	load4! &16
	load4! &15 	#X14
	xor
	jump_zero! .L339.l_ocf9910
	# END CBRANCH
	load8! &5 	#X5
	add! 8
	load4
	#
	store8! &1 	#AR
	# CBRANCH
	push! 16208
	load4! &1 	#AR
	lt_u
	not
	jump_zero! .L339.l_ocf9910
	# END CBRANCH
	# CBRANCH
	push! 16205
	load4! &1 	#AR
	lt_u
	jump_zero! .L338.l_ocf9910
	# END CBRANCH
	# CBRANCH EQ
	load4! &25
	push! 4
	xor
	jump_zero! .L339.l_ocf9910
	# END CBRANCH
.L338.l_ocf9910:
	load4! &9 	#X9
	load8! &14 	#X13
	load8! &9 	#X7
	call! updatewindow.s_ocf9910
	store8! &3

	set_sp! &2
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_not_zero! .L340.l_ocf9910
	# END CBRANCH
	load8! &7 	#X7
	add! 8
	load4
	#
	store8! &5 	#X4
	load8! &7 	#X7
	add! 32
	load4
	#
	store8! &1 	#AR
	load4! &16
	load8! &1 	#AR
	sub
	store8! &10 	#X9
.L339.l_ocf9910:
	load8! &4 	#X4
	load8! &16 	#X15
	sub
	neg
	store8! &3 	#X2
	load8! &7 	#X7
	add! 16
	load8
	#
	store8! &2 	#X1
	load4! &2 	#X2
	load8! &2 	#X1
	add
	load8! &8 	#X7
	add! 16
	store8
	#
	load8! &7 	#X7
	add! 40
	load8
	#
	store8! &2 	#X1
	load4! &9 	#X9
	store8! &1 	#AR
	load8! &1 	#X1
	load8! &1 	#AR
	add
	load8! &8 	#X7
	add! 40
	store8
	#
	load8! &5 	#X5
	add! 40
	load8
	#
	load8! &1 	#AR
	add
	load8! &6 	#X5
	add! 40
	store8
	#
	load8! &5 	#X5
	add! 16
	load4
	#
	and! 0x4
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L341.l_ocf9910
	# END CBRANCH
	# CBRANCH EQ0
	load4! &9 	#X9
	jump_zero! .L341.l_ocf9910
	# END CBRANCH
	load8! &5 	#X5
	add! 24
	load4
	#
	store8! &2 	#X1
	load8! &7 	#X7
	add! 24
	load8
	#
	store8! &4 	#X3
	load8! &0 	#AR
	neg
	load8! &4 	#X3
	add
	store8! &4 	#X3
	load8! &5 	#X5
	add! 32
	load8
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load4! &1 	#X1
	jump_zero! .L342.l_ocf9910
	# END CBRANCH
	load4! &9 	#X9
	load8! &4 	#X3
	load8! &2 	#AR
	call! crc32
	store8! &3

	set_sp! &2
	load8! &0 	#AR
	load8! &6 	#X5
	add! 32
	store8
	#
	load8! &0 	#AR
	load8! &8 	#X7
	add! 96
	store8
	#
.L341.l_ocf9910:
	load8! &5 	#X5
	add! 88
	load4
	#
	store8! &1 	#AR
	load8! &5 	#X5
	add! 12
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L344.l_ocf9910
	# END CBRANCH
	load8! &0 	#AR
	add! 64
	store8! &1 	#AR
.L344.l_ocf9910:
	load8! &5 	#X5
	add! 8
	load4
	#
	store8! &2 	#X1
	# CBRANCH EQ
	load4! &1 	#X1
	push! 16191
	xor
	jump_zero! .L345.l_ocf9910
	# END CBRANCH
	# CBRANCH
	load4! &1 	#X1
	push! 16199
	xor
	push! 1
	lt_u
	jump_zero! .L346.l_ocf9910
	# END CBRANCH
	load8! &0 	#AR
	add! 256
	store8! &1 	#AR
.L347.l_ocf9910:
	load4! &0 	#AR
	load8! &8 	#X7
	add! 88
	store4
	#
	load8! &9 	#X9
	load8! &3 	#X2
	or
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_not_zero! .L622.l_ocf9910
	# END CBRANCH
.L348.l_ocf9910:
	# CBRANCH EQ0
	load4! &10 	#X10
	jump_not_zero! .L106.l_ocf9910
	# END CBRANCH
	push! -5
	store8! &11 	#X10
	load4! &10 	#X10
	store4! &25
	jump! .L615.l_ocf9910
.L366.l_ocf9910:
	push! -2
	store8! &11 	#X10
	load4! &10 	#X10
	store4! &25
	jump! .L615.l_ocf9910
.L369.l_ocf9910:
	load8! &13 	#X13
	store8! &9 	#X8
.L117.l_ocf9910:
	# CBRANCH EQ0
	load4! &14 	#X14
	jump_zero! .L414.l_ocf9910
	# END CBRANCH
	load8! &5 	#X5
	add! 92
	load4
	#
	store8! &1 	#AR
	load8! &13 	#X13
	add! 1
	store8! &14 	#X13
	load1! &0 	#AR
	load8! &9 	#X8
	store1
	#
	load8! &14 	#X14
	add! -1
	store8! &15 	#X14
	push! 16200
	load8! &6 	#X5
	add! 8
	store4
	#
.L122.l_ocf9910:
	# CBRANCH
	push! 5
	load4! &5 	#X4
	lt_u
	jump_zero! .L283.l_ocf9910
	# END CBRANCH
	# CBRANCH
	push! 257
	load4! &15 	#X14
	lt_u
	jump_zero! .L284.l_ocf9910
	# END CBRANCH
	load8! &13 	#X13
	load8! &8 	#X7
	add! 24
	store8
	#
	load4! &14 	#X14
	load8! &8 	#X7
	add! 32
	store4
	#
	load8! &6 	#X6
	load8! &8 	#X7
	store8
	#
	load4! &4 	#X4
	load8! &8 	#X7
	add! 8
	store4
	#
	load8! &2 	#X2
	load8! &6 	#X5
	add! 80
	store8
	#
	load4! &3 	#X3
	load8! &6 	#X5
	add! 88
	store4
	#
	load4! &16
	load8! &8 	#X7
	call! inflate_fast
	set_sp! (+ &0 16)
	

	load8! &7 	#X7
	add! 24
	load8
	#
	store8! &14 	#X13
	load8! &7 	#X7
	add! 32
	load4
	#
	store8! &15 	#X14
	load8! &7 	#X7
	load8
	#
	store8! &7 	#X6
	load8! &7 	#X7
	add! 8
	load4
	#
	store8! &5 	#X4
	load8! &5 	#X5
	add! 80
	load8
	#
	store8! &3 	#X2
	load8! &5 	#X5
	add! 88
	load4
	#
	store8! &4 	#X3
	load8! &5 	#X5
	add! 8
	load4
	#
	store8! &1 	#AR
	# CBRANCH
	load4! &0 	#AR
	push! 16191
	xor
	push! 1
	lt_u
	jump_zero! .L110.l_ocf9910
	# END CBRANCH
	push! -1
	load8! &6 	#X5
	add! 12924
	store4
	#
.L131.l_ocf9910:
	# CBRANCH
	push! 1
	load4! &18
	lt_u
	not
	jump_zero! .L130.l_ocf9910
	# END CBRANCH
.L626.l_ocf9910:
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	push! 0
	store8! &11 	#X10
	jump! .L154.l_ocf9910
.L412.l_ocf9910:
	load8! &6 	#X6
	store8! &2 	#X1
.L313.l_ocf9910:
	load8! &5 	#X5
	add! 96
	load4
	#
	store8! &7 	#X6
	load4! &2 	#X2
	store8! &9 	#X8
	load4! &0 	#AR
	store8! &10 	#X9
	push! -1
	load8! &10 	#X9
	shift_l
	not
	load8! &9 	#X8
	and
	load8! &7 	#X6
	add
	load8! &6 	#X5
	add! 96
	store4
	#
	load4! &0 	#AR
	store8! &7 	#X6
	load8! &2 	#X2
	load8! &7 	#X6
	shift_ru
	store8! &3 	#X2
	load8! &0 	#AR
	load8! &4 	#X3
	sub
	neg
	store8! &4 	#X3
	load8! &5 	#X5
	add! 12924
	load4
	#
	load8! &1 	#AR
	add
	load8! &6 	#X5
	add! 12924
	store4
	#
	load8! &1 	#X1
	store8! &7 	#X6
.L312.l_ocf9910:
	push! 16204
	load8! &6 	#X5
	add! 8
	store4
	#
.L118.l_ocf9910:
	# CBRANCH EQ0
	load4! &14 	#X14
	jump_zero! .L413.l_ocf9910
	# END CBRANCH
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	store8! &13 	#X12
	load8! &12 	#X12
	load8! &15 	#X14
	sub
	store8! &2 	#X1
	load8! &5 	#X5
	add! 96
	load4
	#
	store8! &1 	#AR
	# CBRANCH
	load4! &1 	#X1
	load4! &1 	#AR
	lt_u
	jump_zero! .L316.l_ocf9910
	# END CBRANCH
	load8! &14 	#X14
	load8! &1 	#AR
	add
	store8! &1 	#AR
	load8! &12 	#X12
	load8! &1 	#AR
	sub
	neg
	store8! &10 	#X9
	load8! &5 	#X5
	add! 64
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	load4! &10 	#X9
	lt_u
	jump_zero! .L317.l_ocf9910
	# END CBRANCH
	load8! &5 	#X5
	add! 12920
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L317.l_ocf9910
	# END CBRANCH
	push! .LC15.l_ocf9910
	load8! &8 	#X7
	add! 48
	store8
	#
	push! 16209
	load8! &6 	#X5
	add! 8
	store4
	#
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	push! -3
	store8! &11 	#X10
	jump! .L154.l_ocf9910
.L297.l_ocf9910:
	load8! &6 	#X6
	and! 0xf
	and! 0xff
	store8! &9 	#X8
	load4! &8 	#X8
	load8! &6 	#X5
	add! 100
	store4
	#
	push! 16201
	load8! &6 	#X5
	add! 8
	store4
	#
	load8! &1 	#X1
	store8! &7 	#X6
.L145.l_ocf9910:
	# CBRANCH EQ0
	load4! &8 	#X8
	jump_not_zero! .L298.l_ocf9910
	# END CBRANCH
	load8! &5 	#X5
	add! 92
	load4
	#
	store8! &2 	#X1
	load4! &1 	#X1
	load8! &6 	#X5
	add! 12928
	store4
	#
	push! 16202
	load8! &6 	#X5
	add! 8
	store4
	#
.L120.l_ocf9910:
	load8! &5 	#X5
	add! 112
	load8
	#
	store8! &12 	#X11
	load4! &2 	#X2
	store8! &11 	#X10
	load8! &5 	#X5
	add! 124
	load4
	#
	store8! &1 	#AR
	push! -1
	load8! &1 	#AR
	shift_l
	not
	store8! &13 	#X12
	load8! &10 	#X10
	load8! &13 	#X12
	and
	and! 0xffffffff
	shift_l! 3
	load8! &12 	#X11
	add
	load8
	store8! &1 	#AR
	load8! &0 	#AR
	shift_ru! 8
	store8! &10 	#X9
	load1! &9 	#X9
	store8! &9 	#X8
	# CBRANCH
	load4! &3 	#X3
	load4! &9 	#X8
	lt_u
	jump_zero! .L410.l_ocf9910
	# END CBRANCH
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_zero! .L623.l_ocf9910
	# END CBRANCH
.L304.l_ocf9910:
	load8! &4 	#X4
	add! -1
	store8! &5 	#X4
	load8! &6 	#X6
	add! 1
	store8! &2 	#X1
	load8! &6 	#X6
	load1
	#
	store8! &7 	#X6
	load4! &3 	#X3
	pow2
	load8! &7 	#X6
	mult
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &3 	#X3
	add! 8
	store8! &4 	#X3
	load4! &2 	#X2
	store8! &11 	#X10
	load8! &12 	#X12
	load8! &11 	#X10
	and
	and! 0xffffffff
	shift_l! 3
	load8! &12 	#X11
	add
	load8
	store8! &1 	#AR
	load8! &0 	#AR
	shift_ru! 8
	store8! &10 	#X9
	load1! &9 	#X9
	store8! &9 	#X8
	# CBRANCH
	load4! &3 	#X3
	load4! &9 	#X8
	lt_u
	jump_zero! .L303.l_ocf9910
	# END CBRANCH
	load8! &1 	#X1
	store8! &7 	#X6
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_not_zero! .L304.l_ocf9910
	# END CBRANCH
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	push! 0
	store8! &11 	#X10
	jump! .L154.l_ocf9910
.L173.l_ocf9910:
	push! 16189
	load8! &6 	#X5
	add! 8
	store4
	#
	push! 0
	store8! &3 	#X2
	load8! &8 	#X8
	store8! &7 	#X6
	push! 0
	store8! &4 	#X3
.L174.l_ocf9910:
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_zero! .L624.l_ocf9910
	# END CBRANCH
	load8! &4 	#X4
	add! -1
	store8! &9 	#X8
	load8! &6 	#X6
	add! 1
	store8! &1 	#AR
	load8! &6 	#X6
	load1
	#
	store8! &10 	#X9
	load4! &3 	#X3
	pow2
	load8! &10 	#X9
	mult
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &3 	#X3
	add! 8
	store8! &2 	#X1
	# CBRANCH
	push! 31
	load4! &2 	#X1
	lt_u
	not
	jump_zero! .L386.l_ocf9910
	# END CBRANCH
	# CBRANCH EQ0
	load4! &8 	#X8
	jump_zero! .L387.l_ocf9910
	# END CBRANCH
	load8! &4 	#X4
	add! -2
	store8! &9 	#X8
	load8! &6 	#X6
	add! 2
	store8! &1 	#AR
	load8! &6 	#X6
	add! 1
	load1
	#
	store8! &10 	#X9
	load4! &1 	#X1
	pow2
	load8! &10 	#X9
	mult
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &3 	#X3
	add! 16
	store8! &2 	#X1
	# CBRANCH
	push! 31
	load4! &2 	#X1
	lt_u
	not
	jump_zero! .L388.l_ocf9910
	# END CBRANCH
	# CBRANCH EQ0
	load4! &8 	#X8
	jump_zero! .L389.l_ocf9910
	# END CBRANCH
	load8! &4 	#X4
	add! -3
	store8! &9 	#X8
	load8! &6 	#X6
	add! 3
	store8! &1 	#AR
	load8! &6 	#X6
	add! 2
	load1
	#
	store8! &10 	#X9
	load4! &1 	#X1
	pow2
	load8! &10 	#X9
	mult
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &3 	#X3
	add! 24
	store8! &4 	#X3
	# CBRANCH
	push! 31
	load4! &4 	#X3
	lt_u
	not
	jump_zero! .L390.l_ocf9910
	# END CBRANCH
	# CBRANCH EQ0
	load4! &8 	#X8
	jump_zero! .L391.l_ocf9910
	# END CBRANCH
	load8! &4 	#X4
	add! -4
	store8! &5 	#X4
	load8! &6 	#X6
	add! 4
	store8! &1 	#AR
	load8! &6 	#X6
	add! 3
	load1
	#
	store8! &7 	#X6
	load4! &3 	#X3
	pow2
	load8! &7 	#X6
	mult
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &2 	#X2
	shift_ru! 24
	and! 0xff
	store8! &4 	#X3
	load8! &2 	#X2
	shift_ru! 8
	and! 0xff00
	load8! &4 	#X3
	or
	store8! &4 	#X3
	load8! &2 	#X2
	shift_l! 8
	and! 0xff0000
	store8! &7 	#X6
	load8! &2 	#X2
	shift_l! 24
	and! 0xffffffff
	load8! &7 	#X6
	add
	load8! &4 	#X3
	add
	store8! &2 	#X1
	load8! &1 	#X1
	load8! &6 	#X5
	add! 32
	store8
	#
	load8! &1 	#X1
	load8! &8 	#X7
	add! 96
	store8
	#
	push! 16190
	load8! &6 	#X5
	add! 8
	store4
	#
	load8! &0 	#AR
	store8! &7 	#X6
	push! 0
	store8! &4 	#X3
	push! 0
	store8! &3 	#X2
.L132.l_ocf9910:
	load8! &5 	#X5
	add! 20
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L625.l_ocf9910
	# END CBRANCH
	push! 0
	push! 0
	push! 0
	call! adler32
	store8! &3

	set_sp! &2
	load8! &0 	#AR
	load8! &6 	#X5
	add! 32
	store8
	#
	load8! &0 	#AR
	load8! &8 	#X7
	add! 96
	store8
	#
	push! 16191
	load8! &6 	#X5
	add! 8
	store4
	#
	# CBRANCH
	push! 1
	load4! &18
	lt_u
	not
	jump_zero! .L130.l_ocf9910
	# END CBRANCH
	jump! .L626.l_ocf9910
.L361.l_ocf9910:
	push! -2
	store8! &11 	#X10
	load4! &10 	#X10
	store4! &25
	jump! .L615.l_ocf9910
.L362.l_ocf9910:
	push! -2
	store8! &11 	#X10
	load4! &10 	#X10
	store4! &25
	jump! .L615.l_ocf9910
.L363.l_ocf9910:
	push! -2
	store8! &11 	#X10
	load4! &10 	#X10
	store4! &25
	jump! .L615.l_ocf9910
.L622.l_ocf9910:
	# CBRANCH EQ
	load4! &25
	push! 4
	xor
	jump_zero! .L348.l_ocf9910
	# END CBRANCH
	load4! &10 	#X10
	store4! &25
	jump! .L615.l_ocf9910
.L127.l_ocf9910:
	load8! &5 	#X5
	add! 92
	load4
	#
	store8! &1 	#AR
.L146.l_ocf9910:
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_zero! .L240.l_ocf9910
	# END CBRANCH
	load4! &4 	#X4
	store8! &9 	#X8
	# CBRANCH
	load4! &0 	#AR
	load4! &5 	#X4
	lt_u
	jump_zero! .L241.l_ocf9910
	# END CBRANCH
	load4! &0 	#AR
	store8! &9 	#X8
.L241.l_ocf9910:
	# CBRANCH
	load4! &14 	#X14
	load4! &9 	#X8
	lt_u
	jump_zero! .L242.l_ocf9910
	# END CBRANCH
	load4! &14 	#X14
	store8! &9 	#X8
.L242.l_ocf9910:
	# CBRANCH EQ0
	load4! &8 	#X8
	jump_zero! .L627.l_ocf9910
	# END CBRANCH
	load4! &8 	#X8
	store8! &10 	#X9
	load8! &9 	#X9
	load8! &7 	#X6
	load8! &15 	#X13
	call! memcpy
	store8! &3

	set_sp! &2
	load8! &8 	#X8
	load8! &5 	#X4
	sub
	neg
	store8! &5 	#X4
	load8! &6 	#X6
	load8! &10 	#X9
	add
	store8! &7 	#X6
	load8! &8 	#X8
	load8! &15 	#X14
	sub
	neg
	store8! &15 	#X14
	load8! &13 	#X13
	load8! &10 	#X9
	add
	store8! &14 	#X13
	load8! &5 	#X5
	add! 92
	load4
	#
	store8! &2 	#X1
	load8! &8 	#X8
	load8! &2 	#X1
	sub
	neg
	load8! &6 	#X5
	add! 92
	store4
	#
	load8! &5 	#X5
	add! 8
	load4
	#
	store8! &1 	#AR
	jump! .L110.l_ocf9910
.L125.l_ocf9910:
	load8! &5 	#X5
	add! 140
	load4
	#
	store8! &9 	#X8
	load8! &5 	#X5
	add! 128
	load4
	#
	store8! &10 	#X9
	# CBRANCH
	load4! &8 	#X8
	load4! &10 	#X9
	lt_u
	jump_zero! .L250.l_ocf9910
	# END CBRANCH
.L249.l_ocf9910:
	# CBRANCH
	push! 2
	load4! &4 	#X3
	lt_u
	not
	jump_zero! .L403.l_ocf9910
	# END CBRANCH
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_zero! .L628.l_ocf9910
	# END CBRANCH
	load8! &4 	#X4
	add! -1
	store8! &5 	#X4
	load8! &6 	#X6
	add! 1
	store8! &2 	#X1
	load8! &6 	#X6
	load1
	#
	store8! &7 	#X6
	load4! &3 	#X3
	pow2
	load8! &7 	#X6
	mult
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &3 	#X3
	add! 8
	store8! &4 	#X3
.L251.l_ocf9910:
	load2! &2 	#X2
	store8! &11 	#X10
	load8! &8 	#X8
	add! 1
	store8! &1 	#AR
	load4! &0 	#AR
	load8! &6 	#X5
	add! 140
	store4
	#
	load4! &8 	#X8
	store8! &7 	#X6
	load8! &6 	#X6
	load8! &7 	#X6
	add
	add! .Li_order_3249.l_ocf9910
	load2
	and! 0x0ffff
	store8! &7 	#X6
	load8! &10 	#X10
	and! 0x7
	store8! &9 	#X8
	load4! &6 	#X6
	sigx4
	add! 76
	store8! &7 	#X6
	load8! &6 	#X6
	load8! &7 	#X6
	add
	load8! &6 	#X5
	add
	store8! &7 	#X6
	load2! &8 	#X8
	load8! &7 	#X6
	store2
	#
	load8! &2 	#X2
	shift_ru! 3
	store8! &3 	#X2
	load8! &3 	#X3
	add! -3
	store8! &4 	#X3
	# CBRANCH
	load4! &0 	#AR
	load4! &10 	#X9
	lt_u
	jump_zero! .L629.l_ocf9910
	# END CBRANCH
	load8! &1 	#X1
	store8! &7 	#X6
	load4! &0 	#AR
	store8! &9 	#X8
	jump! .L249.l_ocf9910
.L124.l_ocf9910:
	load8! &5 	#X5
	add! 140
	load4
	#
	store8! &13 	#X12
	load8! &5 	#X5
	add! 132
	load4
	#
	store4! &20
	load8! &5 	#X5
	add! 136
	load4
	#
	store4! &21
.L278.l_ocf9910:
	load4! &19
	load4! &21
	add
	store4! &19
	# CBRANCH
	load4! &12 	#X12
	load4! &19
	lt_u
	jump_zero! .L630.l_ocf9910
	# END CBRANCH
	load8! &5 	#X5
	add! 104
	load8
	#
	store8! &11 	#X10
	load4! &2 	#X2
	store8! &1 	#AR
	load8! &5 	#X5
	add! 120
	load4
	#
	store8! &2 	#X1
	push! -1
	load8! &2 	#X1
	shift_l
	not
	store8! &12 	#X11
	load8! &11 	#X11
	load8! &1 	#AR
	and
	and! 0xffffffff
	shift_l! 3
	load8! &11 	#X10
	add
	load8
	store8! &9 	#X8
	load8! &8 	#X8
	shift_ru! 8
	store8! &2 	#X1
	load1! &1 	#X1
	store8! &10 	#X9
	# CBRANCH
	load4! &3 	#X3
	load4! &10 	#X9
	lt_u
	jump_zero! .L404.l_ocf9910
	# END CBRANCH
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_zero! .L631.l_ocf9910
	# END CBRANCH
.L258.l_ocf9910:
	load8! &4 	#X4
	add! -1
	store8! &5 	#X4
	load8! &6 	#X6
	add! 1
	store8! &1 	#AR
	load8! &6 	#X6
	load1
	#
	store8! &7 	#X6
	load4! &3 	#X3
	pow2
	load8! &7 	#X6
	mult
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &3 	#X3
	add! 8
	store8! &4 	#X3
	load4! &2 	#X2
	load8! &12 	#X11
	and
	and! 0xffffffff
	shift_l! 3
	load8! &11 	#X10
	add
	load8
	store8! &9 	#X8
	load8! &8 	#X8
	shift_ru! 8
	store8! &2 	#X1
	load1! &1 	#X1
	store8! &10 	#X9
	# CBRANCH
	load4! &3 	#X3
	load4! &10 	#X9
	lt_u
	jump_zero! .L257.l_ocf9910
	# END CBRANCH
	load8! &0 	#AR
	store8! &7 	#X6
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_not_zero! .L258.l_ocf9910
	# END CBRANCH
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	push! 0
	store8! &11 	#X10
	jump! .L154.l_ocf9910
.L140.l_ocf9910:
	# CBRANCH
	push! 31
	load4! &4 	#X3
	lt_u
	not
	jump_zero! .L377.l_ocf9910
	# END CBRANCH
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_zero! .L632.l_ocf9910
	# END CBRANCH
.L181.l_ocf9910:
	load8! &4 	#X4
	add! -1
	store8! &5 	#X4
	load8! &6 	#X6
	add! 1
	store8! &9 	#X8
	load8! &6 	#X6
	load1
	#
	store8! &2 	#X1
	load4! &3 	#X3
	pow2
	load8! &2 	#X1
	mult
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &3 	#X3
	add! 8
	store8! &4 	#X3
	# CBRANCH
	push! 31
	load4! &4 	#X3
	lt_u
	not
	jump_zero! .L183.l_ocf9910
	# END CBRANCH
	load8! &8 	#X8
	store8! &7 	#X6
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_not_zero! .L181.l_ocf9910
	# END CBRANCH
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	push! 0
	store8! &11 	#X10
	jump! .L154.l_ocf9910
.L136.l_ocf9910:
	load8! &5 	#X5
	add! 24
	load4
	#
	store8! &12 	#X11
.L150.l_ocf9910:
	load8! &11 	#X11
	and! 0x800
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_not_zero! .L633.l_ocf9910
	# END CBRANCH
	load8! &5 	#X5
	add! 48
	load8
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L214.l_ocf9910
	# END CBRANCH
	push! 0
	load8! &1 	#AR
	add! 40
	store8
	#
.L214.l_ocf9910:
	push! 0
	load8! &6 	#X5
	add! 92
	store4
	#
	push! 16187
	load8! &6 	#X5
	add! 8
	store4
	#
.L149.l_ocf9910:
	load8! &11 	#X11
	and! 0x1000
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_not_zero! .L634.l_ocf9910
	# END CBRANCH
	load8! &5 	#X5
	add! 48
	load8
	#
	store8! &2 	#X1
	load8! &11 	#X11
	and! 0x200
	store8! &1 	#AR
	# CBRANCH EQ0
	load8! &1 	#X1
	jump_zero! .L221.l_ocf9910
	# END CBRANCH
	push! 0
	load8! &2 	#X1
	add! 56
	store8
	#
.L221.l_ocf9910:
	push! 16188
	load8! &6 	#X5
	add! 8
	store4
	#
.L148.l_ocf9910:
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_not_zero! .L635.l_ocf9910
	# END CBRANCH
.L222.l_ocf9910:
	load8! &5 	#X5
	add! 48
	load8
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L226.l_ocf9910
	# END CBRANCH
	load4! &11 	#X11
	sigx4
	shift_rs! 9
	and! 0x1
	load8! &1 	#AR
	add! 68
	store4
	#
	push! 1
	load8! &1 	#AR
	add! 72
	store4
	#
.L226.l_ocf9910:
	push! 0
	push! 0
	push! 0
	call! crc32
	store8! &3

	set_sp! &2
	load8! &0 	#AR
	load8! &6 	#X5
	add! 32
	store8
	#
	load8! &0 	#AR
	load8! &8 	#X7
	add! 96
	store8
	#
	push! 16191
	load8! &6 	#X5
	add! 8
	store4
	#
	# CBRANCH
	push! 1
	load4! &18
	lt_u
	not
	jump_zero! .L130.l_ocf9910
	# END CBRANCH
	jump! .L626.l_ocf9910
.L635.l_ocf9910:
	# CBRANCH
	push! 15
	load4! &4 	#X3
	lt_u
	not
	jump_zero! .L382.l_ocf9910
	# END CBRANCH
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_zero! .L636.l_ocf9910
	# END CBRANCH
	load8! &4 	#X4
	add! -1
	store8! &9 	#X8
	load8! &6 	#X6
	add! 1
	store8! &2 	#X1
	load8! &6 	#X6
	load1
	#
	store8! &10 	#X9
	load4! &3 	#X3
	pow2
	load8! &10 	#X9
	mult
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &3 	#X3
	add! 8
	store8! &1 	#AR
	# CBRANCH
	push! 15
	load4! &1 	#AR
	lt_u
	not
	jump_zero! .L383.l_ocf9910
	# END CBRANCH
	# CBRANCH EQ0
	load4! &8 	#X8
	jump_zero! .L225.l_ocf9910
	# END CBRANCH
	load8! &4 	#X4
	add! -2
	store8! &5 	#X4
	load8! &6 	#X6
	add! 2
	store8! &2 	#X1
	load8! &6 	#X6
	add! 1
	load1
	#
	store8! &7 	#X6
	load4! &0 	#AR
	pow2
	load8! &7 	#X6
	mult
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &3 	#X3
	add! 16
	store8! &4 	#X3
.L223.l_ocf9910:
	load8! &5 	#X5
	add! 16
	load4
	#
	and! 0x4
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L384.l_ocf9910
	# END CBRANCH
	load8! &5 	#X5
	add! 32
	load8
	#
	and! 0xffff
	# CBRANCH - peep (modesize=8)
	# - EQ
	load8! &3 	#X2
	xor
	jump_zero! .L385.l_ocf9910
	# END CBRANCH
	push! .LC4.l_ocf9910
	load8! &8 	#X7
	add! 48
	store8
	#
	push! 16209
	load8! &6 	#X5
	add! 8
	store4
	#
	load8! &1 	#X1
	store8! &7 	#X6
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	push! -3
	store8! &11 	#X10
	jump! .L154.l_ocf9910
.L135.l_ocf9910:
	load8! &5 	#X5
	add! 24
	load4
	#
	store8! &12 	#X11
	jump! .L149.l_ocf9910
.L138.l_ocf9910:
	load8! &5 	#X5
	add! 24
	load4
	#
	store8! &12 	#X11
	load8! &11 	#X11
	and! 0x400
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_not_zero! .L637.l_ocf9910
	# END CBRANCH
.L193.l_ocf9910:
	load8! &5 	#X5
	add! 48
	load8
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L380.l_ocf9910
	# END CBRANCH
	push! 0
	load8! &1 	#AR
	add! 24
	store8
	#
	push! 0
	store8! &1 	#AR
	push! 16185
	load8! &6 	#X5
	add! 8
	store4
	#
.L151.l_ocf9910:
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_zero! .L201.l_ocf9910
	# END CBRANCH
	load8! &5 	#X5
	add! 92
	load4
	#
	store8! &1 	#AR
	load4! &4 	#X4
	store8! &9 	#X8
	# CBRANCH
	load4! &0 	#AR
	load4! &5 	#X4
	lt_u
	jump_zero! .L202.l_ocf9910
	# END CBRANCH
	load4! &0 	#AR
	store8! &9 	#X8
.L202.l_ocf9910:
	# CBRANCH EQ0
	load4! &8 	#X8
	jump_zero! .L203.l_ocf9910
	# END CBRANCH
	load8! &5 	#X5
	add! 48
	load8
	#
	store8! &2 	#X1
	load4! &8 	#X8
	store8! &10 	#X9
	# CBRANCH EQ0
	load8! &1 	#X1
	jump_zero! .L204.l_ocf9910
	# END CBRANCH
	load8! &1 	#X1
	add! 24
	load8
	#
	store8! &11 	#X10
	# CBRANCH EQ0
	load8! &10 	#X10
	jump_zero! .L204.l_ocf9910
	# END CBRANCH
	load8! &1 	#X1
	add! 32
	load4
	#
	store4! &19
	load8! &0 	#AR
	store8! &12 	#X11
	load4! &18
	load8! &1 	#AR
	sub
	store8! &12 	#X11
	load8! &11 	#X11
	load8! &9 	#X8
	add
	store8! &13 	#X12
	load8! &1 	#X1
	add! 36
	load4
	#
	store8! &2 	#X1
	# CBRANCH
	load4! &1 	#X1
	load4! &13 	#X12
	lt_u
	jump_zero! .L381.l_ocf9910
	# END CBRANCH
	load8! &0 	#AR
	load8! &2 	#X1
	add
	store8! &2 	#X1
	load4! &18
	load8! &2 	#X1
	sub
	neg
	and! 0xffffffff
	store8! &2 	#X1
	load4! &11 	#X11
	load8! &11 	#X10
	add
	store8! &1 	#AR
	load8! &1 	#X1
	load8! &7 	#X6
	load8! &2 	#AR
	call! memcpy
	store8! &3

	set_sp! &2
	load8! &5 	#X5
	add! 24
	load4
	#
	store8! &12 	#X11
.L204.l_ocf9910:
	load8! &11 	#X11
	and! 0x200
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L206.l_ocf9910
	# END CBRANCH
	load8! &5 	#X5
	add! 16
	load4
	#
	and! 0x4
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_not_zero! .L638.l_ocf9910
	# END CBRANCH
.L206.l_ocf9910:
	load8! &8 	#X8
	load8! &5 	#X4
	sub
	neg
	store8! &5 	#X4
	load8! &6 	#X6
	load8! &10 	#X9
	add
	store8! &7 	#X6
	load8! &5 	#X5
	add! 92
	load4
	#
	store8! &2 	#X1
	load8! &8 	#X8
	load8! &2 	#X1
	sub
	neg
	store8! &1 	#AR
	load4! &0 	#AR
	load8! &6 	#X5
	add! 92
	store4
	#
.L203.l_ocf9910:
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_not_zero! .L639.l_ocf9910
	# END CBRANCH
	load8! &5 	#X5
	add! 24
	load4
	#
	store8! &12 	#X11
.L201.l_ocf9910:
	push! 0
	load8! &6 	#X5
	add! 92
	store4
	#
	push! 16186
	load8! &6 	#X5
	add! 8
	store4
	#
	jump! .L150.l_ocf9910
.L137.l_ocf9910:
	load8! &5 	#X5
	add! 24
	load4
	#
	store8! &12 	#X11
	load8! &11 	#X11
	and! 0x400
	store8! &1 	#AR
	jump! .L151.l_ocf9910
.L139.l_ocf9910:
	# CBRANCH
	push! 15
	load4! &4 	#X3
	lt_u
	not
	jump_zero! .L378.l_ocf9910
	# END CBRANCH
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_zero! .L640.l_ocf9910
	# END CBRANCH
.L187.l_ocf9910:
	load8! &4 	#X4
	add! -1
	store8! &5 	#X4
	load8! &6 	#X6
	add! 1
	store8! &9 	#X8
	load8! &6 	#X6
	load1
	#
	store8! &2 	#X1
	load4! &3 	#X3
	pow2
	load8! &2 	#X1
	mult
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &3 	#X3
	add! 8
	store8! &4 	#X3
	# CBRANCH
	push! 15
	load4! &4 	#X3
	lt_u
	not
	jump_zero! .L189.l_ocf9910
	# END CBRANCH
	load8! &8 	#X8
	store8! &7 	#X6
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_not_zero! .L187.l_ocf9910
	# END CBRANCH
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	push! 0
	store8! &11 	#X10
	jump! .L154.l_ocf9910
.L121.l_ocf9910:
	load8! &5 	#X5
	add! 100
	load4
	#
	store8! &9 	#X8
	jump! .L145.l_ocf9910
.L115.l_ocf9910:
	load8! &5 	#X5
	add! 16
	load4
	#
	store8! &2 	#X1
.L143.l_ocf9910:
	# CBRANCH EQ0
	load4! &1 	#X1
	jump_zero! .L334.l_ocf9910
	# END CBRANCH
	load8! &5 	#X5
	add! 24
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L334.l_ocf9910
	# END CBRANCH
	# CBRANCH
	push! 31
	load4! &4 	#X3
	lt_u
	not
	jump_zero! .L425.l_ocf9910
	# END CBRANCH
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_zero! .L641.l_ocf9910
	# END CBRANCH
	load8! &4 	#X4
	add! -1
	store8! &2 	#X1
	load8! &6 	#X6
	add! 1
	store8! &9 	#X8
	load8! &6 	#X6
	load1
	#
	store8! &10 	#X9
	load4! &3 	#X3
	pow2
	load8! &10 	#X9
	mult
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &3 	#X3
	add! 8
	store8! &1 	#AR
	# CBRANCH
	push! 31
	load4! &1 	#AR
	lt_u
	not
	jump_zero! .L426.l_ocf9910
	# END CBRANCH
	# CBRANCH EQ0
	load4! &1 	#X1
	jump_zero! .L427.l_ocf9910
	# END CBRANCH
	load8! &4 	#X4
	add! -2
	store8! &2 	#X1
	load8! &6 	#X6
	add! 2
	store8! &9 	#X8
	load8! &6 	#X6
	add! 1
	load1
	#
	store8! &10 	#X9
	load4! &0 	#AR
	pow2
	load8! &10 	#X9
	mult
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &3 	#X3
	add! 16
	store8! &1 	#AR
	# CBRANCH
	push! 31
	load4! &1 	#AR
	lt_u
	not
	jump_zero! .L428.l_ocf9910
	# END CBRANCH
	# CBRANCH EQ0
	load4! &1 	#X1
	jump_zero! .L429.l_ocf9910
	# END CBRANCH
	load8! &4 	#X4
	add! -3
	store8! &10 	#X9
	load8! &6 	#X6
	add! 3
	store8! &9 	#X8
	load8! &6 	#X6
	add! 2
	load1
	#
	store8! &2 	#X1
	load4! &0 	#AR
	pow2
	load8! &2 	#X1
	mult
	load8! &3 	#X2
	add
	store8! &2 	#X1
	load8! &1 	#X1
	store8! &3 	#X2
	load8! &3 	#X3
	add! 24
	store8! &1 	#AR
	# CBRANCH
	push! 31
	load4! &1 	#AR
	lt_u
	not
	jump_zero! .L430.l_ocf9910
	# END CBRANCH
	# CBRANCH EQ0
	load4! &9 	#X9
	jump_zero! .L431.l_ocf9910
	# END CBRANCH
	load8! &4 	#X4
	add! -4
	store8! &5 	#X4
	load8! &6 	#X6
	add! 4
	store8! &9 	#X8
	load8! &6 	#X6
	add! 3
	load1
	#
	store8! &3 	#X2
	load4! &0 	#AR
	pow2
	load8! &3 	#X2
	mult
	load8! &2 	#X1
	add
	store8! &3 	#X2
	load8! &3 	#X3
	add! 32
	store8! &4 	#X3
.L335.l_ocf9910:
	load8! &5 	#X5
	add! 40
	load8
	#
	and! 0xffffffff
	# CBRANCH - peep (modesize=8)
	# - EQ
	load8! &3 	#X2
	xor
	jump_zero! .L432.l_ocf9910
	# END CBRANCH
	push! .LC17.l_ocf9910
	load8! &8 	#X7
	add! 48
	store8
	#
	push! 16209
	load8! &6 	#X5
	add! 8
	store4
	#
	load8! &8 	#X8
	store8! &7 	#X6
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	push! -3
	store8! &11 	#X10
	jump! .L154.l_ocf9910
.L114.l_ocf9910:
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	push! 1
	store8! &11 	#X10
	jump! .L154.l_ocf9910
.L119.l_ocf9910:
	load8! &5 	#X5
	add! 100
	load4
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_zero! .L312.l_ocf9910
	# END CBRANCH
.L661.l_ocf9910:
	# CBRANCH
	load4! &3 	#X3
	load4! &1 	#AR
	lt_u
	jump_zero! .L412.l_ocf9910
	# END CBRANCH
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_zero! .L642.l_ocf9910
	# END CBRANCH
.L314.l_ocf9910:
	load8! &4 	#X4
	add! -1
	store8! &5 	#X4
	load8! &6 	#X6
	add! 1
	store8! &2 	#X1
	load8! &6 	#X6
	load1
	#
	store8! &9 	#X8
	load4! &3 	#X3
	pow2
	load8! &9 	#X8
	mult
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &3 	#X3
	add! 8
	store8! &4 	#X3
	# CBRANCH
	load4! &3 	#X3
	load4! &1 	#AR
	lt_u
	jump_zero! .L313.l_ocf9910
	# END CBRANCH
	load8! &1 	#X1
	store8! &7 	#X6
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_not_zero! .L314.l_ocf9910
	# END CBRANCH
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	push! 0
	store8! &11 	#X10
	jump! .L154.l_ocf9910
.L134.l_ocf9910:
	load8! &5 	#X5
	add! 24
	load4
	#
	store8! &12 	#X11
	load8! &11 	#X11
	and! 0x200
	store8! &1 	#AR
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_zero! .L222.l_ocf9910
	# END CBRANCH
	jump! .L635.l_ocf9910
.L128.l_ocf9910:
	load8! &5 	#X5
	add! 92
	load4
	#
	store8! &1 	#AR
	push! 16195
	load8! &6 	#X5
	add! 8
	store4
	#
	jump! .L146.l_ocf9910
.L133.l_ocf9910:
	# CBRANCH
	push! 31
	load4! &4 	#X3
	lt_u
	jump_zero! .L174.l_ocf9910
	# END CBRANCH
	load8! &6 	#X6
	store8! &1 	#AR
	load8! &2 	#X2
	shift_ru! 24
	and! 0xff
	store8! &4 	#X3
	load8! &2 	#X2
	shift_ru! 8
	and! 0xff00
	load8! &4 	#X3
	or
	store8! &4 	#X3
	load8! &2 	#X2
	shift_l! 8
	and! 0xff0000
	store8! &7 	#X6
	load8! &2 	#X2
	shift_l! 24
	and! 0xffffffff
	load8! &7 	#X6
	add
	load8! &4 	#X3
	add
	store8! &2 	#X1
	load8! &1 	#X1
	load8! &6 	#X5
	add! 32
	store8
	#
	load8! &1 	#X1
	load8! &8 	#X7
	add! 96
	store8
	#
	push! 16190
	load8! &6 	#X5
	add! 8
	store4
	#
	load8! &0 	#AR
	store8! &7 	#X6
	push! 0
	store8! &4 	#X3
	push! 0
	store8! &3 	#X2
	jump! .L132.l_ocf9910
.L370.l_ocf9910:
	push! -4
	store8! &11 	#X10
	load4! &10 	#X10
	store4! &25
	jump! .L615.l_ocf9910
.L284.l_ocf9910:
	push! 0
	load8! &6 	#X5
	add! 12924
	store4
	#
	load8! &5 	#X5
	add! 104
	load8
	#
	store8! &9 	#X8
	load4! &2 	#X2
	store8! &11 	#X10
	load8! &5 	#X5
	add! 120
	load4
	#
	store8! &1 	#AR
	push! -1
	load8! &1 	#AR
	shift_l
	not
	store8! &13 	#X12
	load8! &12 	#X12
	load8! &11 	#X10
	and
	and! 0xffffffff
	shift_l! 3
	load8! &9 	#X8
	add
	load8
	store8! &1 	#AR
	load8! &0 	#AR
	shift_ru! 8
	store8! &10 	#X9
	load1! &9 	#X9
	store8! &12 	#X11
	# CBRANCH
	load4! &3 	#X3
	load4! &12 	#X11
	lt_u
	jump_zero! .L643.l_ocf9910
	# END CBRANCH
.L287.l_ocf9910:
	load8! &4 	#X4
	add! -1
	store8! &5 	#X4
	load8! &6 	#X6
	add! 1
	store8! &2 	#X1
	load8! &6 	#X6
	load1
	#
	store8! &7 	#X6
	load4! &3 	#X3
	pow2
	load8! &7 	#X6
	mult
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &3 	#X3
	add! 8
	store8! &4 	#X3
	load4! &2 	#X2
	store8! &11 	#X10
	load8! &12 	#X12
	load8! &11 	#X10
	and
	and! 0xffffffff
	shift_l! 3
	load8! &9 	#X8
	add
	load8
	store8! &1 	#AR
	load8! &0 	#AR
	shift_ru! 8
	store8! &10 	#X9
	load1! &9 	#X9
	store8! &12 	#X11
	# CBRANCH
	load4! &3 	#X3
	load4! &12 	#X11
	lt_u
	jump_zero! .L285.l_ocf9910
	# END CBRANCH
	load8! &1 	#X1
	store8! &7 	#X6
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_not_zero! .L287.l_ocf9910
	# END CBRANCH
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	push! 0
	store8! &11 	#X10
	jump! .L154.l_ocf9910
.L141.l_ocf9910:
	# CBRANCH
	push! 15
	load4! &4 	#X3
	lt_u
	not
	jump_zero! .L373.l_ocf9910
	# END CBRANCH
.L165.l_ocf9910:
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_zero! .L644.l_ocf9910
	# END CBRANCH
	load8! &4 	#X4
	add! -1
	store8! &2 	#X1
	load8! &6 	#X6
	add! 1
	store8! &9 	#X8
	load8! &6 	#X6
	load1
	#
	store8! &10 	#X9
	load4! &3 	#X3
	pow2
	load8! &10 	#X9
	mult
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &3 	#X3
	add! 8
	store8! &1 	#AR
	# CBRANCH
	push! 15
	load4! &1 	#AR
	lt_u
	not
	jump_zero! .L376.l_ocf9910
	# END CBRANCH
	# CBRANCH EQ0
	load4! &1 	#X1
	jump_zero! .L175.l_ocf9910
	# END CBRANCH
	load8! &4 	#X4
	add! -2
	store8! &5 	#X4
	load8! &6 	#X6
	add! 2
	store8! &9 	#X8
	load8! &6 	#X6
	add! 1
	load1
	#
	store8! &2 	#X1
	load4! &0 	#AR
	pow2
	load8! &2 	#X1
	mult
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &3 	#X3
	add! 16
	store8! &4 	#X3
.L157.l_ocf9910:
	load4! &2 	#X2
	store8! &1 	#AR
	load4! &2 	#X2
	load8! &6 	#X5
	add! 24
	store4
	#
	load8! &0 	#AR
	and! 0xff
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ
	push! 8
	xor
	jump_zero! .L176.l_ocf9910
	# END CBRANCH
	push! .LC1.l_ocf9910
	load8! &8 	#X7
	add! 48
	store8
	#
	push! 16209
	load8! &6 	#X5
	add! 8
	store4
	#
	load8! &8 	#X8
	store8! &7 	#X6
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	push! -3
	store8! &11 	#X10
	jump! .L154.l_ocf9910
.L234.l_ocf9910:
	push! .Li_lenfix_3220.l_ocf9910
	load8! &6 	#X5
	add! 104
	store8
	#
	push! .Li_distfix_3221.l_ocf9910
	load8! &6 	#X5
	add! 112
	store8
	#
	push! 21474836489
	load8! &6 	#X5
	add! 120
	store8
	#
	push! 16199
	load8! &6 	#X5
	add! 8
	store4
	#
	# CBRANCH EQ
	load4! &25
	push! 6
	xor
	jump_zero! .L235.l_ocf9910
	# END CBRANCH
	load8! &2 	#X2
	shift_ru! 3
	store8! &3 	#X2
	load8! &3 	#X3
	add! -3
	store8! &4 	#X3
	load8! &1 	#X1
	store8! &7 	#X6
.L123.l_ocf9910:
	push! 16200
	load8! &6 	#X5
	add! 8
	store4
	#
	jump! .L122.l_ocf9910
.L232.l_ocf9910:
	push! 16196
	load8! &6 	#X5
	add! 8
	store4
	#
	load8! &2 	#X2
	shift_ru! 3
	store8! &3 	#X2
	load8! &3 	#X3
	add! -3
	store8! &4 	#X3
	load8! &1 	#X1
	store8! &7 	#X6
.L126.l_ocf9910:
	# CBRANCH
	push! 13
	load4! &4 	#X3
	lt_u
	not
	jump_zero! .L371.l_ocf9910
	# END CBRANCH
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_zero! .L645.l_ocf9910
	# END CBRANCH
	load8! &4 	#X4
	add! -1
	store8! &9 	#X8
	load8! &6 	#X6
	add! 1
	store8! &2 	#X1
	load8! &6 	#X6
	load1
	#
	store8! &10 	#X9
	load4! &3 	#X3
	pow2
	load8! &10 	#X9
	mult
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &3 	#X3
	add! 8
	store8! &1 	#AR
	# CBRANCH
	push! 13
	load4! &1 	#AR
	lt_u
	not
	jump_zero! .L401.l_ocf9910
	# END CBRANCH
	# CBRANCH EQ0
	load4! &8 	#X8
	jump_zero! .L245.l_ocf9910
	# END CBRANCH
	load8! &4 	#X4
	add! -2
	store8! &5 	#X4
	load8! &6 	#X6
	add! 2
	store8! &2 	#X1
	load8! &6 	#X6
	add! 1
	load1
	#
	store8! &7 	#X6
	load4! &0 	#AR
	pow2
	load8! &7 	#X6
	mult
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &3 	#X3
	add! 16
	store8! &4 	#X3
.L152.l_ocf9910:
	load4! &2 	#X2
	and! 0x1f
	add! 257
	store8! &1 	#AR
	load4! &0 	#AR
	load8! &6 	#X5
	add! 132
	store4
	#
	load8! &2 	#X2
	shift_ru! 5
	and! 0x1f
	add! 1
	store8! &7 	#X6
	load4! &6 	#X6
	load8! &6 	#X5
	add! 136
	store4
	#
	load8! &2 	#X2
	shift_ru! 10
	and! 0xf
	add! 4
	store8! &10 	#X9
	load4! &9 	#X9
	load8! &6 	#X5
	add! 128
	store4
	#
	load8! &2 	#X2
	shift_ru! 14
	store8! &3 	#X2
	load8! &3 	#X3
	add! -14
	store8! &4 	#X3
	# CBRANCH
	push! 286
	load4! &1 	#AR
	lt_u
	not
	jump_zero! .L246.l_ocf9910
	# END CBRANCH
	# CBRANCH
	push! 30
	load4! &7 	#X6
	lt_u
	jump_zero! .L247.l_ocf9910
	# END CBRANCH
.L246.l_ocf9910:
	push! .LC7.l_ocf9910
	load8! &8 	#X7
	add! 48
	store8
	#
	push! 16209
	load8! &6 	#X5
	add! 8
	store4
	#
	load8! &1 	#X1
	store8! &7 	#X6
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	push! -3
	store8! &11 	#X10
	jump! .L154.l_ocf9910
.L619.l_ocf9910:
	# CBRANCH
	push! 2
	load4! &4 	#X3
	lt_u
	not
	jump_zero! .L392.l_ocf9910
	# END CBRANCH
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_zero! .L646.l_ocf9910
	# END CBRANCH
	load8! &4 	#X4
	add! -1
	store8! &5 	#X4
	load8! &6 	#X6
	add! 1
	store8! &2 	#X1
	load8! &6 	#X6
	load1
	#
	store8! &9 	#X8
	load4! &3 	#X3
	pow2
	load8! &9 	#X8
	mult
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &3 	#X3
	add! 8
	store8! &4 	#X3
.L230.l_ocf9910:
	load4! &2 	#X2
	and! 0x1
	load8! &6 	#X5
	add! 12
	store4
	#
	load8! &2 	#X2
	shift_ru! 1
	and! 0x3
	store8! &7 	#X6
	# CBRANCH EQ
	load4! &6 	#X6
	push! 2
	xor
	jump_zero! .L232.l_ocf9910
	# END CBRANCH
	# CBRANCH EQ
	load4! &6 	#X6
	push! 3
	xor
	jump_zero! .L233.l_ocf9910
	# END CBRANCH
	# CBRANCH EQ
	load4! &6 	#X6
	push! 1
	xor
	jump_zero! .L234.l_ocf9910
	# END CBRANCH
	push! 16193
	load8! &6 	#X5
	add! 8
	store4
	#
	load8! &2 	#X2
	shift_ru! 3
	store8! &3 	#X2
	load8! &3 	#X3
	add! -3
	store8! &4 	#X3
	load8! &1 	#X1
	store8! &7 	#X6
.L129.l_ocf9910:
	load8! &3 	#X3
	and! 0x7
	and! 0xffffffff
	store8! &1 	#AR
	load8! &2 	#X2
	load8! &1 	#AR
	shift_ru
	store8! &3 	#X2
	load8! &3 	#X3
	and! 0xfffffffffffffff8
	store8! &4 	#X3
	# CBRANCH
	push! 31
	load4! &4 	#X3
	lt_u
	not
	jump_zero! .L393.l_ocf9910
	# END CBRANCH
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_zero! .L647.l_ocf9910
	# END CBRANCH
	load8! &4 	#X4
	add! -1
	store8! &9 	#X8
	load8! &6 	#X6
	add! 1
	store8! &2 	#X1
	load8! &6 	#X6
	load1
	#
	store8! &10 	#X9
	load4! &3 	#X3
	pow2
	load8! &10 	#X9
	mult
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &3 	#X3
	add! 8
	store8! &1 	#AR
	# CBRANCH
	push! 31
	load4! &1 	#AR
	lt_u
	not
	jump_zero! .L394.l_ocf9910
	# END CBRANCH
	# CBRANCH EQ0
	load4! &8 	#X8
	jump_zero! .L395.l_ocf9910
	# END CBRANCH
	load8! &4 	#X4
	add! -2
	store8! &9 	#X8
	load8! &6 	#X6
	add! 2
	store8! &2 	#X1
	load8! &6 	#X6
	add! 1
	load1
	#
	store8! &10 	#X9
	load4! &0 	#AR
	pow2
	load8! &10 	#X9
	mult
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &3 	#X3
	add! 16
	store8! &1 	#AR
	# CBRANCH
	push! 31
	load4! &1 	#AR
	lt_u
	not
	jump_zero! .L396.l_ocf9910
	# END CBRANCH
	# CBRANCH EQ0
	load4! &8 	#X8
	jump_zero! .L397.l_ocf9910
	# END CBRANCH
	load8! &4 	#X4
	add! -3
	store8! &9 	#X8
	load8! &6 	#X6
	add! 3
	store8! &2 	#X1
	load8! &6 	#X6
	add! 2
	load1
	#
	store8! &10 	#X9
	load4! &0 	#AR
	pow2
	load8! &10 	#X9
	mult
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &3 	#X3
	add! 24
	store8! &1 	#AR
	# CBRANCH
	push! 31
	load4! &1 	#AR
	lt_u
	not
	jump_zero! .L398.l_ocf9910
	# END CBRANCH
	# CBRANCH EQ0
	load4! &8 	#X8
	jump_zero! .L399.l_ocf9910
	# END CBRANCH
	load8! &4 	#X4
	add! -4
	store8! &5 	#X4
	load8! &6 	#X6
	add! 4
	store8! &2 	#X1
	load8! &6 	#X6
	add! 3
	load1
	#
	store8! &7 	#X6
	load4! &0 	#AR
	pow2
	load8! &7 	#X6
	mult
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &3 	#X3
	add! 32
	store8! &4 	#X3
.L236.l_ocf9910:
	load8! &2 	#X2
	and! 0xffff
	store8! &7 	#X6
	load8! &2 	#X2
	shift_ru! 16
	xor! 0xffff
	# CBRANCH - peep (modesize=8)
	# - EQ
	load8! &7 	#X6
	xor
	jump_zero! .L239.l_ocf9910
	# END CBRANCH
	push! .LC6.l_ocf9910
	load8! &8 	#X7
	add! 48
	store8
	#
	push! 16209
	load8! &6 	#X5
	add! 8
	store4
	#
	load8! &1 	#X1
	store8! &7 	#X6
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	push! -3
	store8! &11 	#X10
	jump! .L154.l_ocf9910
.L317.l_ocf9910:
	load8! &5 	#X5
	add! 68
	load4
	#
	store8! &2 	#X1
	load8! &5 	#X5
	add! 72
	load8
	#
	store8! &9 	#X8
	load4! &16
	load8! &1 	#AR
	sub
	store8! &1 	#AR
	# CBRANCH
	load4! &1 	#X1
	load4! &10 	#X9
	lt_u
	jump_zero! .L318.l_ocf9910
	# END CBRANCH
	load8! &1 	#X1
	load8! &10 	#X9
	sub
	neg
	store8! &10 	#X9
	load8! &5 	#X5
	add! 60
	load4
	#
	load8! &2 	#X1
	add
	load8! &1 	#AR
	add
	and! 0xffffffff
	load8! &9 	#X8
	add
	store8! &2 	#X1
.L319.l_ocf9910:
	load8! &5 	#X5
	add! 92
	load4
	#
	store8! &1 	#AR
	load4! &0 	#AR
	store8! &9 	#X8
	# CBRANCH
	load4! &9 	#X9
	load4! &1 	#AR
	lt_u
	jump_zero! .L321.l_ocf9910
	# END CBRANCH
	load4! &9 	#X9
	store8! &9 	#X8
.L321.l_ocf9910:
	# CBRANCH
	load4! &14 	#X14
	load4! &9 	#X8
	lt_u
	jump_zero! .L322.l_ocf9910
	# END CBRANCH
	load4! &14 	#X14
	store8! &9 	#X8
.L322.l_ocf9910:
	load8! &8 	#X8
	load8! &15 	#X14
	sub
	neg
	store8! &15 	#X14
	load8! &8 	#X8
	load8! &1 	#AR
	sub
	neg
	load8! &6 	#X5
	add! 92
	store4
	#
	load8! &13 	#X13
	store8! &1 	#AR
	load8! &8 	#X8
	add! -1
	and! 0xffffffff
	store8! &11 	#X10
	load8! &13 	#X13
	add! 1
	load8! &11 	#X10
	add
	store8! &10 	#X9
.L323.l_ocf9910:
	load8! &1 	#X1
	load1
	#
	load8! &1 	#AR
	store1
	#
	load8! &0 	#AR
	add! 1
	store8! &1 	#AR
	load8! &1 	#X1
	add! 1
	store8! &2 	#X1
	# CBRANCH
	load8! &0 	#AR
	load8! &10 	#X9
	xor
	push! 1
	lt_u
	jump_zero! .L323.l_ocf9910
	# END CBRANCH
	load8! &10 	#X10
	add! 1
	load8! &14 	#X13
	add
	store8! &14 	#X13
	load8! &5 	#X5
	add! 92
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L324.l_ocf9910
	# END CBRANCH
	load8! &5 	#X5
	add! 8
	load4
	#
	store8! &1 	#AR
	jump! .L110.l_ocf9910
.L637.l_ocf9910:
	# CBRANCH
	push! 15
	load4! &4 	#X3
	lt_u
	not
	jump_zero! .L194.l_ocf9910
	# END CBRANCH
	load8! &6 	#X6
	store8! &9 	#X8
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_zero! .L648.l_ocf9910
	# END CBRANCH
.L195.l_ocf9910:
	load8! &4 	#X4
	add! -1
	store8! &5 	#X4
	load8! &8 	#X8
	add! 1
	store8! &7 	#X6
	load8! &8 	#X8
	load1
	#
	store8! &2 	#X1
	load4! &3 	#X3
	pow2
	load8! &2 	#X1
	mult
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &3 	#X3
	add! 8
	store8! &4 	#X3
	# CBRANCH
	push! 15
	load4! &4 	#X3
	lt_u
	not
	jump_zero! .L194.l_ocf9910
	# END CBRANCH
	load8! &6 	#X6
	store8! &9 	#X8
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_not_zero! .L195.l_ocf9910
	# END CBRANCH
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	push! 0
	store8! &11 	#X10
	jump! .L154.l_ocf9910
.L378.l_ocf9910:
	load8! &6 	#X6
	store8! &9 	#X8
.L189.l_ocf9910:
	load8! &5 	#X5
	add! 48
	load8
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L190.l_ocf9910
	# END CBRANCH
	load4! &2 	#X2
	and! 0xff
	load8! &1 	#AR
	add! 16
	store4
	#
	load8! &2 	#X2
	shift_ru! 8
	load8! &1 	#AR
	add! 20
	store4
	#
.L190.l_ocf9910:
	load8! &5 	#X5
	add! 24
	load4
	#
	store8! &12 	#X11
	load8! &11 	#X11
	and! 0x200
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L191.l_ocf9910
	# END CBRANCH
	load8! &5 	#X5
	add! 16
	load4
	#
	and! 0x4
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_not_zero! .L649.l_ocf9910
	# END CBRANCH
.L191.l_ocf9910:
	push! 16184
	load8! &6 	#X5
	add! 8
	store4
	#
	load8! &11 	#X11
	and! 0x400
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_not_zero! .L379.l_ocf9910
	# END CBRANCH
	load8! &8 	#X8
	store8! &7 	#X6
	push! 0
	store8! &4 	#X3
	push! 0
	store8! &3 	#X2
	jump! .L193.l_ocf9910
.L649.l_ocf9910:
	load2! &2 	#X2
	store2! &23
	load8! &5 	#X5
	add! 32
	load8
	#
	store8! &1 	#AR
	push! 2
	push! &0
	add! 184
	#peep - pop(deadreg)+pusharg
	load8! &2 	#AR
	call! crc32
	store8! &3

	set_sp! &2
	load8! &0 	#AR
	load8! &6 	#X5
	add! 32
	store8
	#
	load8! &5 	#X5
	add! 24
	load4
	#
	store8! &12 	#X11
	jump! .L191.l_ocf9910
.L638.l_ocf9910:
	load8! &5 	#X5
	add! 32
	load8
	#
	store8! &1 	#AR
	load4! &8 	#X8
	load8! &7 	#X6
	load8! &2 	#AR
	call! crc32
	store8! &3

	set_sp! &2
	load8! &0 	#AR
	load8! &6 	#X5
	add! 32
	store8
	#
	load8! &8 	#X8
	load8! &5 	#X4
	sub
	neg
	store8! &5 	#X4
	load8! &6 	#X6
	load8! &10 	#X9
	add
	store8! &7 	#X6
	load8! &5 	#X5
	add! 92
	load4
	#
	store8! &2 	#X1
	load8! &8 	#X8
	load8! &2 	#X1
	sub
	neg
	store8! &1 	#AR
	load4! &0 	#AR
	load8! &6 	#X5
	add! 92
	store4
	#
	jump! .L203.l_ocf9910
.L623.l_ocf9910:
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	push! 0
	store8! &11 	#X10
	jump! .L154.l_ocf9910
.L631.l_ocf9910:
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	push! 0
	store8! &11 	#X10
	jump! .L154.l_ocf9910
.L640.l_ocf9910:
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	push! 0
	store8! &11 	#X10
	jump! .L154.l_ocf9910
.L247.l_ocf9910:
	push! 0
	load8! &6 	#X5
	add! 140
	store4
	#
	push! 16197
	load8! &6 	#X5
	add! 8
	store4
	#
	load8! &1 	#X1
	store8! &7 	#X6
	push! 0
	store8! &9 	#X8
	jump! .L249.l_ocf9910
.L629.l_ocf9910:
	load4! &0 	#AR
	store8! &9 	#X8
	load8! &1 	#X1
	store8! &7 	#X6
.L250.l_ocf9910:
	# CBRANCH
	push! 18
	load4! &9 	#X8
	lt_u
	not
	jump_zero! .L253.l_ocf9910
	# END CBRANCH
	load4! &8 	#X8
	store8! &2 	#X1
	load8! &1 	#X1
	load8! &2 	#X1
	add
	add! .Li_order_3249.l_ocf9910
	store8! &1 	#AR
	push! 18
	load8! &9 	#X8
	sub
	and! 0xffffffff
	load8! &2 	#X1
	add
	store8! &2 	#X1
	load8! &1 	#X1
	load8! &2 	#X1
	add
	store8! &9 	#X8
	push! .Li_order_3249.l_ocf9910
	add! 2
	load8! &9 	#X8
	add
	store8! &9 	#X8
.L254.l_ocf9910:
	load8! &0 	#AR
	load2
	#
	and! 0x0ffff
	sigx4
	add! 76
	store8! &2 	#X1
	load8! &1 	#X1
	load8! &2 	#X1
	add
	load8! &6 	#X5
	add
	store8! &2 	#X1
	push! 0
	load8! &2 	#X1
	store2
	#
	load8! &0 	#AR
	add! 2
	store8! &1 	#AR
	# CBRANCH
	load8! &0 	#AR
	load8! &9 	#X8
	xor
	push! 1
	lt_u
	jump_zero! .L254.l_ocf9910
	# END CBRANCH
	push! 19
	load8! &6 	#X5
	add! 140
	store4
	#
.L253.l_ocf9910:
	load8! &5 	#X5
	add! 1368
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &6 	#X5
	add! 144
	store8
	#
	load8! &0 	#AR
	load8! &6 	#X5
	add! 104
	store8
	#
	push! 7
	load8! &6 	#X5
	add! 120
	store4
	#
	load8! &5 	#X5
	add! 792
	store8! &10 	#X9
	load8! &5 	#X5
	add! 120
	store8! &9 	#X8
	load8! &5 	#X5
	add! 144
	store8! &2 	#X1
	load8! &5 	#X5
	add! 152
	store8! &1 	#AR
	load8! &9 	#X9
	load8! &9 	#X8
	load8! &3 	#X1
	push! 19
	load8! &4 	#AR
	push! 0
	call! inflate_table
	store8! &6

	set_sp! &5
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_zero! .L255.l_ocf9910
	# END CBRANCH
	push! .LC8.l_ocf9910
	load8! &8 	#X7
	add! 48
	store8
	#
	push! 16209
	load8! &6 	#X5
	add! 8
	store4
	#
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	push! -3
	store8! &11 	#X10
	jump! .L154.l_ocf9910
.L377.l_ocf9910:
	load8! &6 	#X6
	store8! &9 	#X8
.L183.l_ocf9910:
	load8! &5 	#X5
	add! 48
	load8
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L184.l_ocf9910
	# END CBRANCH
	load8! &2 	#X2
	load8! &1 	#AR
	add! 8
	store8
	#
.L184.l_ocf9910:
	load8! &5 	#X5
	add! 24
	load4
	#
	and! 0x200
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L185.l_ocf9910
	# END CBRANCH
	load8! &5 	#X5
	add! 16
	load4
	#
	and! 0x4
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_not_zero! .L650.l_ocf9910
	# END CBRANCH
.L185.l_ocf9910:
	push! 16183
	load8! &6 	#X5
	add! 8
	store4
	#
	load8! &8 	#X8
	store8! &7 	#X6
	push! 0
	store8! &3 	#X2
	push! 0
	store8! &4 	#X3
.L651.l_ocf9910:
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_not_zero! .L187.l_ocf9910
	# END CBRANCH
	jump! .L640.l_ocf9910
.L650.l_ocf9910:
	load4! &2 	#X2
	store4! &23
	load8! &5 	#X5
	add! 32
	load8
	#
	store8! &1 	#AR
	push! 4
	push! &0
	add! 184
	#peep - pop(deadreg)+pusharg
	load8! &2 	#AR
	call! crc32
	store8! &3

	set_sp! &2
	load8! &0 	#AR
	load8! &6 	#X5
	add! 32
	store8
	#
	push! 16183
	load8! &6 	#X5
	add! 8
	store4
	#
	load8! &8 	#X8
	store8! &7 	#X6
	push! 0
	store8! &3 	#X2
	push! 0
	store8! &4 	#X3
	jump! .L651.l_ocf9910
.L373.l_ocf9910:
	load8! &6 	#X6
	store8! &9 	#X8
	jump! .L157.l_ocf9910
.L632.l_ocf9910:
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	push! 0
	store8! &11 	#X10
	jump! .L154.l_ocf9910
.L643.l_ocf9910:
	load8! &6 	#X6
	store8! &2 	#X1
.L285.l_ocf9910:
	load1! &0 	#AR
	store8! &7 	#X6
	# CBRANCH EQ0
	load1! &0 	#AR
	jump_not_zero! .L289.l_ocf9910
	# END CBRANCH
	load8! &5 	#X5
	add! 12924
	load4
	#
	store8! &9 	#X8
	load1! &9 	#X9
	store8! &7 	#X6
	load8! &6 	#X6
	load8! &9 	#X8
	add
	store8! &9 	#X8
	load4! &6 	#X6
	store8! &7 	#X6
	load8! &2 	#X2
	load8! &7 	#X6
	shift_ru
	store8! &3 	#X2
	load8! &11 	#X11
	load8! &4 	#X3
	sub
	neg
	store8! &4 	#X3
	load4! &8 	#X8
	load8! &6 	#X5
	add! 12924
	store4
	#
	load8! &0 	#AR
	shift_ru! 16
	and! 0xffff
	load8! &6 	#X5
	add! 92
	store4
	#
	push! 16205
	load8! &6 	#X5
	add! 8
	store4
	#
	load8! &13 	#X13
	store8! &9 	#X8
	load8! &1 	#X1
	store8! &7 	#X6
	jump! .L117.l_ocf9910
.L648.l_ocf9910:
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	load8! &8 	#X8
	store8! &7 	#X6
	push! 0
	store8! &11 	#X10
	jump! .L154.l_ocf9910
.L642.l_ocf9910:
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	push! 0
	store8! &11 	#X10
	jump! .L154.l_ocf9910
.L345.l_ocf9910:
	load8! &0 	#AR
	add! 128
	store8! &1 	#AR
	load4! &0 	#AR
	load8! &8 	#X7
	add! 88
	store4
	#
	load8! &9 	#X9
	load8! &3 	#X2
	or
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L348.l_ocf9910
	# END CBRANCH
	jump! .L622.l_ocf9910
.L346.l_ocf9910:
	# CBRANCH
	load4! &1 	#X1
	push! 16194
	xor
	push! 1
	lt_u
	jump_zero! .L347.l_ocf9910
	# END CBRANCH
	load8! &0 	#AR
	add! 256
	store8! &1 	#AR
	load4! &0 	#AR
	load8! &8 	#X7
	add! 88
	store4
	#
	load8! &9 	#X9
	load8! &3 	#X2
	or
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L348.l_ocf9910
	# END CBRANCH
	jump! .L622.l_ocf9910
.L342.l_ocf9910:
	load4! &9 	#X9
	load8! &4 	#X3
	load8! &2 	#AR
	call! adler32
	store8! &3

	set_sp! &2
	load8! &0 	#AR
	load8! &6 	#X5
	add! 32
	store8
	#
	load8! &0 	#AR
	load8! &8 	#X7
	add! 96
	store8
	#
	jump! .L341.l_ocf9910
.L634.l_ocf9910:
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_zero! .L652.l_ocf9910
	# END CBRANCH
	load8! &6 	#X6
	store8! &9 	#X8
	push! 0
	store8! &10 	#X9
.L219.l_ocf9910:
	load8! &9 	#X9
	add! 1
	store8! &10 	#X9
	load8! &8 	#X8
	load1
	#
	store8! &2 	#X1
	load8! &5 	#X5
	add! 48
	load8
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L217.l_ocf9910
	# END CBRANCH
	load8! &0 	#AR
	add! 56
	load8
	#
	store8! &11 	#X10
	# CBRANCH EQ0
	load8! &10 	#X10
	jump_zero! .L217.l_ocf9910
	# END CBRANCH
	load8! &5 	#X5
	add! 92
	load4
	#
	store8! &12 	#X11
	load8! &0 	#AR
	add! 64
	load4
	#
	store8! &1 	#AR
	# CBRANCH
	load4! &11 	#X11
	load4! &1 	#AR
	lt_u
	jump_zero! .L217.l_ocf9910
	# END CBRANCH
	load8! &11 	#X11
	add! 1
	load8! &6 	#X5
	add! 92
	store4
	#
	load4! &11 	#X11
	load8! &11 	#X10
	add
	store8! &1 	#AR
	load1! &1 	#X1
	load8! &1 	#AR
	store1
	#
.L217.l_ocf9910:
	load8! &8 	#X8
	add! 1
	store8! &9 	#X8
	# CBRANCH EQ0
	load1! &1 	#X1
	jump_zero! .L218.l_ocf9910
	# END CBRANCH
	# CBRANCH
	load4! &4 	#X4
	load4! &10 	#X9
	xor
	push! 1
	lt_u
	jump_zero! .L219.l_ocf9910
	# END CBRANCH
	load8! &5 	#X5
	add! 24
	load4
	#
	and! 0x200
	store8! &11 	#X10
	# CBRANCH EQ0
	load4! &10 	#X10
	jump_zero! .L653.l_ocf9910
	# END CBRANCH
	load8! &5 	#X5
	add! 16
	load4
	#
	and! 0x4
	store8! &11 	#X10
	# CBRANCH EQ0
	load4! &10 	#X10
	jump_zero! .L654.l_ocf9910
	# END CBRANCH
	load8! &5 	#X5
	add! 32
	load8
	#
	store8! &1 	#AR
	load4! &4 	#X4
	load8! &7 	#X6
	load8! &2 	#AR
	call! crc32
	store8! &3

	set_sp! &2
	load8! &0 	#AR
	load8! &6 	#X5
	add! 32
	store8
	#
	load8! &4 	#X4
	load8! &5 	#X4
	sub
	neg
	store8! &5 	#X4
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	load8! &8 	#X8
	store8! &7 	#X6
	push! 0
	store8! &11 	#X10
	jump! .L154.l_ocf9910
.L240.l_ocf9910:
	push! 16191
	load8! &6 	#X5
	add! 8
	store4
	#
	# CBRANCH
	push! 1
	load4! &18
	lt_u
	not
	jump_zero! .L130.l_ocf9910
	# END CBRANCH
	jump! .L626.l_ocf9910
.L633.l_ocf9910:
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_zero! .L655.l_ocf9910
	# END CBRANCH
	load8! &6 	#X6
	store8! &9 	#X8
	push! 0
	store8! &10 	#X9
.L212.l_ocf9910:
	load8! &9 	#X9
	add! 1
	store8! &10 	#X9
	load8! &8 	#X8
	load1
	#
	store8! &2 	#X1
	load8! &5 	#X5
	add! 48
	load8
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L210.l_ocf9910
	# END CBRANCH
	load8! &0 	#AR
	add! 40
	load8
	#
	store8! &11 	#X10
	# CBRANCH EQ0
	load8! &10 	#X10
	jump_zero! .L210.l_ocf9910
	# END CBRANCH
	load8! &5 	#X5
	add! 92
	load4
	#
	store8! &12 	#X11
	load8! &0 	#AR
	add! 48
	load4
	#
	store8! &1 	#AR
	# CBRANCH
	load4! &11 	#X11
	load4! &1 	#AR
	lt_u
	jump_zero! .L210.l_ocf9910
	# END CBRANCH
	load8! &11 	#X11
	add! 1
	load8! &6 	#X5
	add! 92
	store4
	#
	load4! &11 	#X11
	load8! &11 	#X10
	add
	store8! &1 	#AR
	load1! &1 	#X1
	load8! &1 	#AR
	store1
	#
.L210.l_ocf9910:
	load8! &8 	#X8
	add! 1
	store8! &9 	#X8
	# CBRANCH EQ0
	load1! &1 	#X1
	jump_zero! .L211.l_ocf9910
	# END CBRANCH
	# CBRANCH
	load4! &4 	#X4
	load4! &10 	#X9
	xor
	push! 1
	lt_u
	jump_zero! .L212.l_ocf9910
	# END CBRANCH
	load8! &5 	#X5
	add! 24
	load4
	#
	and! 0x200
	store8! &11 	#X10
	# CBRANCH EQ0
	load4! &10 	#X10
	jump_zero! .L656.l_ocf9910
	# END CBRANCH
	load8! &5 	#X5
	add! 16
	load4
	#
	and! 0x4
	store8! &11 	#X10
	# CBRANCH EQ0
	load4! &10 	#X10
	jump_zero! .L657.l_ocf9910
	# END CBRANCH
	load8! &5 	#X5
	add! 32
	load8
	#
	store8! &1 	#AR
	load4! &4 	#X4
	load8! &7 	#X6
	load8! &2 	#AR
	call! crc32
	store8! &3

	set_sp! &2
	load8! &0 	#AR
	load8! &6 	#X5
	add! 32
	store8
	#
	load8! &4 	#X4
	load8! &5 	#X4
	sub
	neg
	store8! &5 	#X4
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	load8! &8 	#X8
	store8! &7 	#X6
	push! 0
	store8! &11 	#X10
	jump! .L154.l_ocf9910
.L410.l_ocf9910:
	load8! &6 	#X6
	store8! &2 	#X1
.L303.l_ocf9910:
	load1! &0 	#AR
	store8! &13 	#X12
	load8! &12 	#X12
	and! 0xfffffffffffffff0
	# CBRANCH - peep (modesize=1)
	and! 255
	# - EQ0
	jump_zero! .L306.l_ocf9910
	# END CBRANCH
	load8! &5 	#X5
	add! 12924
	load4
	#
	store8! &11 	#X10
	load1! &9 	#X9
	store8! &10 	#X9
.L307.l_ocf9910:
	load4! &9 	#X9
	store8! &7 	#X6
	load8! &2 	#X2
	load8! &7 	#X6
	shift_ru
	store8! &3 	#X2
	load8! &8 	#X8
	load8! &4 	#X3
	sub
	neg
	store8! &4 	#X3
	load8! &9 	#X9
	load8! &11 	#X10
	add
	load8! &6 	#X5
	add! 12924
	store4
	#
	load8! &12 	#X12
	and! 0x40
	# CBRANCH - peep (modesize=1)
	and! 255
	# - EQ0
	jump_zero! .L311.l_ocf9910
	# END CBRANCH
	push! .LC14.l_ocf9910
	load8! &8 	#X7
	add! 48
	store8
	#
	push! 16209
	load8! &6 	#X5
	add! 8
	store4
	#
	load8! &1 	#X1
	store8! &7 	#X6
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	push! -3
	store8! &11 	#X10
	jump! .L154.l_ocf9910
.L404.l_ocf9910:
	load8! &6 	#X6
	store8! &1 	#AR
.L257.l_ocf9910:
	load8! &8 	#X8
	shift_ru! 16
	store8! &7 	#X6
	load1! &1 	#X1
	store8! &9 	#X8
	# CBRANCH
	push! 15
	load2! &7 	#X6
	lt_u
	not
	jump_zero! .L260.l_ocf9910
	# END CBRANCH
	load4! &8 	#X8
	store8! &2 	#X1
	load8! &2 	#X2
	load8! &2 	#X1
	shift_ru
	store8! &3 	#X2
	load8! &9 	#X9
	load8! &4 	#X3
	sub
	neg
	store8! &4 	#X3
	load8! &12 	#X12
	add! 1
	store8! &2 	#X1
	load4! &1 	#X1
	load8! &6 	#X5
	add! 140
	store4
	#
	load4! &12 	#X12
	add! 76
	store8! &9 	#X8
	load8! &8 	#X8
	load8! &9 	#X8
	add
	load8! &6 	#X5
	add
	store8! &9 	#X8
	load2! &6 	#X6
	load8! &9 	#X8
	store2
	#
	load4! &1 	#X1
	store8! &13 	#X12
	load8! &0 	#AR
	store8! &7 	#X6
	jump! .L278.l_ocf9910
.L324.l_ocf9910:
	push! 16200
	load8! &6 	#X5
	add! 8
	store4
	#
	jump! .L122.l_ocf9910
.L225.l_ocf9910:
	load8! &14 	#X14
	store8! &4 	#X3
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	load4! &0 	#AR
	store8! &4 	#X3
	push! 0
	store8! &5 	#X4
	load8! &1 	#X1
	store8! &7 	#X6
	push! 0
	store8! &11 	#X10
	jump! .L154.l_ocf9910
.L218.l_ocf9910:
	load8! &5 	#X5
	add! 24
	load4
	#
	store8! &12 	#X11
	load8! &11 	#X11
	and! 0x200
	store8! &1 	#AR
	load8! &9 	#X9
	load8! &5 	#X4
	sub
	neg
	store8! &2 	#X1
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_not_zero! .L349.l_ocf9910
	# END CBRANCH
	load4! &1 	#X1
	store8! &5 	#X4
	load8! &8 	#X8
	store8! &7 	#X6
	push! 16188
	load8! &6 	#X5
	add! 8
	store4
	#
	jump! .L148.l_ocf9910
.L621.l_ocf9910:
	load8! &5 	#X5
	add! 16
	load4
	#
	store8! &2 	#X1
	load4! &14 	#X14
	store4! &17
	load8! &8 	#X8
	store8! &7 	#X6
	push! 0
	store8! &4 	#X3
	push! 0
	store8! &3 	#X2
.L325.l_ocf9910:
	push! 16207
	load8! &6 	#X5
	add! 8
	store4
	#
	jump! .L143.l_ocf9910
.L316.l_ocf9910:
	load4! &0 	#AR
	neg
	load8! &14 	#X13
	add
	store8! &2 	#X1
	load8! &5 	#X5
	add! 92
	load4
	#
	store8! &9 	#X8
	load4! &8 	#X8
	store8! &1 	#AR
	jump! .L321.l_ocf9910
.L283.l_ocf9910:
	push! 0
	load8! &6 	#X5
	add! 12924
	store4
	#
	load8! &5 	#X5
	add! 104
	load8
	#
	store8! &9 	#X8
	load4! &2 	#X2
	store8! &11 	#X10
	load8! &5 	#X5
	add! 120
	load4
	#
	store8! &1 	#AR
	push! -1
	load8! &1 	#AR
	shift_l
	not
	store8! &13 	#X12
	load8! &12 	#X12
	load8! &11 	#X10
	and
	and! 0xffffffff
	shift_l! 3
	load8! &9 	#X8
	add
	load8
	store8! &1 	#AR
	load8! &0 	#AR
	shift_ru! 8
	store8! &10 	#X9
	load1! &9 	#X9
	store8! &12 	#X11
	# CBRANCH
	load4! &3 	#X3
	load4! &12 	#X11
	lt_u
	jump_zero! .L408.l_ocf9910
	# END CBRANCH
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_not_zero! .L287.l_ocf9910
	# END CBRANCH
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	push! 0
	store8! &11 	#X10
	jump! .L154.l_ocf9910
.L298.l_ocf9910:
	# CBRANCH
	load4! &3 	#X3
	load4! &9 	#X8
	lt_u
	jump_zero! .L409.l_ocf9910
	# END CBRANCH
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_zero! .L658.l_ocf9910
	# END CBRANCH
.L301.l_ocf9910:
	load8! &4 	#X4
	add! -1
	store8! &5 	#X4
	load8! &6 	#X6
	add! 1
	store8! &1 	#AR
	load8! &6 	#X6
	load1
	#
	store8! &7 	#X6
	load4! &3 	#X3
	pow2
	load8! &7 	#X6
	mult
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &3 	#X3
	add! 8
	store8! &4 	#X3
	# CBRANCH
	load4! &3 	#X3
	load4! &9 	#X8
	lt_u
	jump_zero! .L300.l_ocf9910
	# END CBRANCH
	load8! &0 	#AR
	store8! &7 	#X6
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_not_zero! .L301.l_ocf9910
	# END CBRANCH
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	push! 0
	store8! &11 	#X10
	jump! .L154.l_ocf9910
.L658.l_ocf9910:
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	push! 0
	store8! &11 	#X10
	jump! .L154.l_ocf9910
.L211.l_ocf9910:
	load8! &5 	#X5
	add! 24
	load4
	#
	store8! &12 	#X11
	load8! &11 	#X11
	and! 0x200
	store8! &2 	#X1
	load8! &9 	#X9
	load8! &5 	#X4
	sub
	neg
	store8! &1 	#AR
	# CBRANCH EQ0
	load4! &1 	#X1
	jump_not_zero! .L352.l_ocf9910
	# END CBRANCH
	load4! &0 	#AR
	store8! &5 	#X4
	load8! &8 	#X8
	store8! &7 	#X6
	push! 0
	load8! &6 	#X5
	add! 92
	store4
	#
	push! 16187
	load8! &6 	#X5
	add! 8
	store4
	#
	jump! .L149.l_ocf9910
.L175.l_ocf9910:
	load8! &14 	#X14
	store8! &2 	#X1
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	load4! &0 	#AR
	store8! &4 	#X3
	push! 0
	store8! &5 	#X4
	load8! &8 	#X8
	store8! &7 	#X6
	push! 0
	store8! &11 	#X10
	jump! .L154.l_ocf9910
.L245.l_ocf9910:
	load8! &14 	#X14
	store8! &4 	#X3
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	load4! &0 	#AR
	store8! &4 	#X3
	push! 0
	store8! &5 	#X4
	load8! &1 	#X1
	store8! &7 	#X6
	push! 0
	store8! &11 	#X10
	jump! .L154.l_ocf9910
.L260.l_ocf9910:
	# CBRANCH EQ
	load2! &6 	#X6
	push! 16
	xor
	jump_zero! .L659.l_ocf9910
	# END CBRANCH
	# CBRANCH EQ
	load2! &6 	#X6
	push! 17
	xor
	jump_zero! .L269.l_ocf9910
	# END CBRANCH
	load8! &8 	#X8
	add! 7
	store8! &2 	#X1
	# CBRANCH
	load4! &3 	#X3
	load4! &2 	#X1
	lt_u
	jump_zero! .L406.l_ocf9910
	# END CBRANCH
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_zero! .L660.l_ocf9910
	# END CBRANCH
.L271.l_ocf9910:
	load8! &4 	#X4
	add! -1
	store8! &5 	#X4
	load8! &0 	#AR
	add! 1
	store8! &7 	#X6
	load8! &0 	#AR
	load1
	#
	store8! &11 	#X10
	load4! &3 	#X3
	pow2
	load8! &11 	#X10
	mult
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &3 	#X3
	add! 8
	store8! &4 	#X3
	# CBRANCH
	load4! &3 	#X3
	load4! &2 	#X1
	lt_u
	jump_zero! .L270.l_ocf9910
	# END CBRANCH
	load8! &6 	#X6
	store8! &1 	#AR
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_not_zero! .L271.l_ocf9910
	# END CBRANCH
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	push! 0
	store8! &11 	#X10
	jump! .L154.l_ocf9910
.L660.l_ocf9910:
	load8! &14 	#X14
	store8! &2 	#X1
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	load8! &0 	#AR
	store8! &7 	#X6
	push! 0
	store8! &11 	#X10
	jump! .L154.l_ocf9910
.L311.l_ocf9910:
	load8! &0 	#AR
	shift_ru! 16
	and! 0xffff
	load8! &6 	#X5
	add! 96
	store4
	#
	load8! &12 	#X12
	and! 0xf
	and! 0xff
	store8! &1 	#AR
	load4! &0 	#AR
	load8! &6 	#X5
	add! 100
	store4
	#
	push! 16203
	load8! &6 	#X5
	add! 8
	store4
	#
	load8! &1 	#X1
	store8! &7 	#X6
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_zero! .L312.l_ocf9910
	# END CBRANCH
	jump! .L661.l_ocf9910
.L380.l_ocf9910:
	push! 0
	store8! &1 	#AR
	push! 16185
	load8! &6 	#X5
	add! 8
	store4
	#
	jump! .L151.l_ocf9910
.L384.l_ocf9910:
	load8! &1 	#X1
	store8! &7 	#X6
	push! 0
	store8! &4 	#X3
	push! 0
	store8! &3 	#X2
	jump! .L222.l_ocf9910
.L318.l_ocf9910:
	load8! &0 	#AR
	load8! &2 	#X1
	add
	and! 0xffffffff
	load8! &9 	#X8
	add
	store8! &2 	#X1
	jump! .L319.l_ocf9910
.L289.l_ocf9910:
	load8! &6 	#X6
	and! 0xfffffffffffffff0
	# CBRANCH - peep (modesize=1)
	and! 255
	# - EQ0
	jump_zero! .L291.l_ocf9910
	# END CBRANCH
	load8! &5 	#X5
	add! 12924
	load4
	#
	store8! &11 	#X10
	load1! &9 	#X9
	store8! &9 	#X8
	load8! &8 	#X8
	load8! &11 	#X10
	add
	store8! &10 	#X9
	load4! &8 	#X8
	store8! &9 	#X8
	load8! &2 	#X2
	load8! &9 	#X8
	shift_ru
	store8! &3 	#X2
	load8! &11 	#X11
	load8! &4 	#X3
	sub
	neg
	store8! &4 	#X3
	load4! &9 	#X9
	load8! &6 	#X5
	add! 12924
	store4
	#
	load8! &0 	#AR
	shift_ru! 16
	and! 0xffff
	load8! &6 	#X5
	add! 92
	store4
	#
.L292.l_ocf9910:
	load8! &6 	#X6
	and! 0x20
	# CBRANCH - peep (modesize=1)
	and! 255
	# - EQ0
	jump_zero! .L296.l_ocf9910
	# END CBRANCH
	push! -1
	load8! &6 	#X5
	add! 12924
	store4
	#
	push! 16191
	load8! &6 	#X5
	add! 8
	store4
	#
	load8! &1 	#X1
	store8! &7 	#X6
	# CBRANCH
	push! 1
	load4! &18
	lt_u
	not
	jump_zero! .L130.l_ocf9910
	# END CBRANCH
	jump! .L626.l_ocf9910
.L409.l_ocf9910:
	load8! &6 	#X6
	store8! &1 	#AR
.L300.l_ocf9910:
	load8! &5 	#X5
	add! 92
	load4
	#
	store8! &2 	#X1
	load4! &2 	#X2
	store8! &7 	#X6
	load4! &8 	#X8
	store8! &10 	#X9
	push! -1
	load8! &10 	#X9
	shift_l
	not
	load8! &7 	#X6
	and
	load8! &2 	#X1
	add
	store8! &2 	#X1
	load4! &1 	#X1
	load8! &6 	#X5
	add! 92
	store4
	#
	load4! &8 	#X8
	store8! &7 	#X6
	load8! &2 	#X2
	load8! &7 	#X6
	shift_ru
	store8! &3 	#X2
	load8! &8 	#X8
	load8! &4 	#X3
	sub
	neg
	store8! &4 	#X3
	load8! &5 	#X5
	add! 12924
	load4
	#
	load8! &9 	#X8
	add
	load8! &6 	#X5
	add! 12924
	store4
	#
	load8! &0 	#AR
	store8! &7 	#X6
	load4! &1 	#X1
	load8! &6 	#X5
	add! 12928
	store4
	#
	push! 16202
	load8! &6 	#X5
	add! 8
	store4
	#
	jump! .L120.l_ocf9910
.L618.l_ocf9910:
	# CBRANCH
	push! 15
	load4! &4 	#X3
	lt_u
	not
	jump_zero! .L374.l_ocf9910
	# END CBRANCH
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_zero! .L662.l_ocf9910
	# END CBRANCH
	load8! &4 	#X4
	add! -1
	store8! &10 	#X9
	load8! &6 	#X6
	add! 1
	store8! &9 	#X8
	load8! &6 	#X6
	load1
	#
	store8! &11 	#X10
	load4! &3 	#X3
	pow2
	load8! &11 	#X10
	mult
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &3 	#X3
	add! 8
	store8! &2 	#X1
	# CBRANCH
	push! 15
	load4! &2 	#X1
	lt_u
	not
	jump_zero! .L375.l_ocf9910
	# END CBRANCH
	# CBRANCH EQ0
	load4! &9 	#X9
	jump_zero! .L162.l_ocf9910
	# END CBRANCH
	load8! &4 	#X4
	add! -2
	store8! &5 	#X4
	load8! &6 	#X6
	add! 2
	store8! &9 	#X8
	load8! &6 	#X6
	add! 1
	load1
	#
	store8! &7 	#X6
	load4! &1 	#X1
	pow2
	load8! &7 	#X6
	mult
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &3 	#X3
	add! 16
	store8! &4 	#X3
.L160.l_ocf9910:
	load8! &0 	#AR
	and! 0x2
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L163.l_ocf9910
	# END CBRANCH
	# CBRANCH EQ
	load8! &2 	#X2
	push! 35615
	xor
	jump_zero! .L663.l_ocf9910
	# END CBRANCH
.L163.l_ocf9910:
	push! 0
	load8! &6 	#X5
	add! 24
	store4
	#
	load8! &5 	#X5
	add! 48
	load8
	#
	store8! &2 	#X1
	# CBRANCH EQ0
	load8! &1 	#X1
	jump_zero! .L166.l_ocf9910
	# END CBRANCH
	push! -1
	load8! &2 	#X1
	add! 72
	store4
	#
.L166.l_ocf9910:
	load8! &0 	#AR
	and! 0x1
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L167.l_ocf9910
	# END CBRANCH
	load4! &2 	#X2
	store8! &1 	#AR
	load8! &0 	#AR
	shift_l! 8
	and! 0xffff
	and! 0xffffffff
	store8! &7 	#X6
	load8! &2 	#X2
	shift_ru! 8
	load8! &7 	#X6
	add
	rem_u! 31
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_not_zero! .L167.l_ocf9910
	# END CBRANCH
	load8! &0 	#AR
	and! 0xf
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ
	push! 8
	xor
	jump_zero! .L169.l_ocf9910
	# END CBRANCH
	push! .LC1.l_ocf9910
	load8! &8 	#X7
	add! 48
	store8
	#
	push! 16209
	load8! &6 	#X5
	add! 8
	store4
	#
	load8! &8 	#X8
	store8! &7 	#X6
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	push! -3
	store8! &11 	#X10
	jump! .L154.l_ocf9910
.L663.l_ocf9910:
	load8! &5 	#X5
	add! 56
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_not_zero! .L164.l_ocf9910
	# END CBRANCH
	push! 15
	load8! &6 	#X5
	add! 56
	store4
	#
.L164.l_ocf9910:
	push! 0
	push! 0
	push! 0
	call! crc32
	store8! &3

	set_sp! &2
	load8! &0 	#AR
	load8! &6 	#X5
	add! 32
	store8
	#
	push! -29921
	store2! &23
	push! 2
	push! &0
	add! 184
	#peep - pop(deadreg)+pusharg
	load8! &2 	#AR
	call! crc32
	store8! &3

	set_sp! &2
	load8! &0 	#AR
	load8! &6 	#X5
	add! 32
	store8
	#
	push! 16181
	load8! &6 	#X5
	add! 8
	store4
	#
	load8! &8 	#X8
	store8! &7 	#X6
	push! 0
	store8! &4 	#X3
	push! 0
	store8! &3 	#X2
	jump! .L165.l_ocf9910
.L306.l_ocf9910:
	load8! &0 	#AR
	shift_ru! 16
	and! 0xffff
	store4! &20
	load8! &0 	#AR
	shift_ru! 8
	store1! &21
	load1! &20
	store8! &9 	#X8
	load1! &0 	#AR
	load8! &9 	#X8
	add
	and! 0xffffffff
	store8! &1 	#AR
	push! -1
	load8! &1 	#AR
	shift_l
	not
	store4! &19
	load4! &18
	load8! &11 	#X10
	and
	and! 0xffffffff
	store8! &7 	#X6
	load4! &8 	#X8
	store8! &1 	#AR
	load8! &6 	#X6
	load8! &1 	#AR
	shift_ru
	load4! &20
	add
	and! 0xffffffff
	shift_l! 3
	load8! &12 	#X11
	add
	load8
	store8! &1 	#AR
	load8! &0 	#AR
	shift_ru! 8
	store8! &13 	#X12
	load1! &12 	#X12
	store8! &10 	#X9
	load8! &9 	#X9
	load8! &9 	#X8
	add
	store8! &7 	#X6
	# CBRANCH
	load4! &3 	#X3
	load4! &7 	#X6
	lt_u
	jump_zero! .L411.l_ocf9910
	# END CBRANCH
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_zero! .L664.l_ocf9910
	# END CBRANCH
	load8! &13 	#X13
	store8! &22
	load4! &18
	store8! &11 	#X10
	load4! &19
	store8! &14 	#X13
.L309.l_ocf9910:
	load8! &4 	#X4
	add! -1
	store8! &5 	#X4
	load8! &1 	#X1
	add! 1
	store8! &7 	#X6
	load8! &1 	#X1
	load1
	#
	store8! &2 	#X1
	load4! &3 	#X3
	pow2
	load8! &2 	#X1
	mult
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &3 	#X3
	add! 8
	store8! &4 	#X3
	load4! &2 	#X2
	load8! &11 	#X10
	and
	and! 0xffffffff
	store8! &2 	#X1
	load4! &8 	#X8
	store8! &1 	#AR
	load8! &1 	#X1
	load8! &1 	#AR
	shift_ru
	load8! &14 	#X13
	add
	and! 0xffffffff
	shift_l! 3
	load8! &12 	#X11
	add
	load8
	store8! &1 	#AR
	load8! &0 	#AR
	shift_ru! 8
	store8! &13 	#X12
	load1! &12 	#X12
	store8! &10 	#X9
	load8! &9 	#X9
	load8! &9 	#X8
	add
	store8! &2 	#X1
	# CBRANCH
	load4! &3 	#X3
	load4! &2 	#X1
	lt_u
	jump_zero! .L665.l_ocf9910
	# END CBRANCH
	load8! &6 	#X6
	store8! &2 	#X1
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_not_zero! .L309.l_ocf9910
	# END CBRANCH
	load8! &21
	store8! &14 	#X13
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	push! 0
	store8! &11 	#X10
	jump! .L154.l_ocf9910
.L194.l_ocf9910:
	load4! &2 	#X2
	store8! &2 	#X1
	load4! &2 	#X2
	load8! &6 	#X5
	add! 92
	store4
	#
	load8! &5 	#X5
	add! 48
	load8
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L197.l_ocf9910
	# END CBRANCH
	load4! &2 	#X2
	load8! &1 	#AR
	add! 32
	store4
	#
.L197.l_ocf9910:
	load8! &11 	#X11
	and! 0x200
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_not_zero! .L198.l_ocf9910
	# END CBRANCH
	load8! &5 	#X5
	add! 24
	load4
	#
	store8! &12 	#X11
	load8! &11 	#X11
	and! 0x400
	store8! &1 	#AR
	push! 0
	store8! &4 	#X3
	push! 0
	store8! &3 	#X2
	push! 16185
	load8! &6 	#X5
	add! 8
	store4
	#
	jump! .L151.l_ocf9910
.L379.l_ocf9910:
	push! 0
	store8! &4 	#X3
	push! 0
	store8! &3 	#X2
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_not_zero! .L195.l_ocf9910
	# END CBRANCH
	jump! .L648.l_ocf9910
.L239.l_ocf9910:
	load4! &2 	#X2
	and! 0xffff
	store8! &1 	#AR
	load4! &0 	#AR
	load8! &6 	#X5
	add! 92
	store4
	#
	push! 16194
	load8! &6 	#X5
	add! 8
	store4
	#
	# CBRANCH EQ
	load4! &25
	push! 6
	xor
	jump_zero! .L666.l_ocf9910
	# END CBRANCH
	load8! &1 	#X1
	store8! &7 	#X6
	push! 0
	store8! &4 	#X3
	push! 0
	store8! &3 	#X2
	push! 16195
	load8! &6 	#X5
	add! 8
	store4
	#
	jump! .L146.l_ocf9910
.L176.l_ocf9910:
	load8! &0 	#AR
	and! 0xe000
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L177.l_ocf9910
	# END CBRANCH
	push! .LC3.l_ocf9910
	load8! &8 	#X7
	add! 48
	store8
	#
	push! 16209
	load8! &6 	#X5
	add! 8
	store4
	#
	load8! &8 	#X8
	store8! &7 	#X6
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	push! -3
	store8! &11 	#X10
	jump! .L154.l_ocf9910
.L381.l_ocf9910:
	load8! &9 	#X9
	store8! &2 	#X1
	load4! &11 	#X11
	load8! &11 	#X10
	add
	store8! &1 	#AR
	load8! &1 	#X1
	load8! &7 	#X6
	load8! &2 	#AR
	call! memcpy
	store8! &3

	set_sp! &2
	load8! &5 	#X5
	add! 24
	load4
	#
	store8! &12 	#X11
	jump! .L204.l_ocf9910
.L296.l_ocf9910:
	load8! &6 	#X6
	and! 0x40
	# CBRANCH - peep (modesize=1)
	and! 255
	# - EQ0
	jump_zero! .L297.l_ocf9910
	# END CBRANCH
	push! .LC13.l_ocf9910
	load8! &8 	#X7
	add! 48
	store8
	#
	push! 16209
	load8! &6 	#X5
	add! 8
	store4
	#
	load8! &1 	#X1
	store8! &7 	#X6
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	push! -3
	store8! &11 	#X10
	jump! .L154.l_ocf9910
.L385.l_ocf9910:
	load8! &1 	#X1
	store8! &7 	#X6
	push! 0
	store8! &4 	#X3
	push! 0
	store8! &3 	#X2
	jump! .L222.l_ocf9910
.L422.l_ocf9910:
	load4! &14 	#X14
	store4! &17
	load8! &8 	#X8
	store8! &7 	#X6
	push! 0
	store8! &4 	#X3
	push! 0
	store8! &3 	#X2
	push! 16207
	load8! &6 	#X5
	add! 8
	store4
	#
	jump! .L143.l_ocf9910
.L198.l_ocf9910:
	load8! &5 	#X5
	add! 16
	load4
	#
	and! 0x4
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_not_zero! .L200.l_ocf9910
	# END CBRANCH
	load8! &5 	#X5
	add! 24
	load4
	#
	store8! &12 	#X11
	load8! &11 	#X11
	and! 0x400
	store8! &1 	#AR
	push! 0
	store8! &4 	#X3
	push! 0
	store8! &3 	#X2
	push! 16185
	load8! &6 	#X5
	add! 8
	store4
	#
	jump! .L151.l_ocf9910
.L162.l_ocf9910:
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	load4! &1 	#X1
	store8! &4 	#X3
	push! 0
	store8! &5 	#X4
	load8! &8 	#X8
	store8! &7 	#X6
	push! 0
	store8! &11 	#X10
	jump! .L154.l_ocf9910
.L406.l_ocf9910:
	load8! &0 	#AR
	store8! &7 	#X6
.L270.l_ocf9910:
	load4! &8 	#X8
	store8! &1 	#AR
	load8! &2 	#X2
	load8! &1 	#AR
	shift_ru
	store8! &2 	#X1
	load8! &9 	#X9
	sub! -7
	neg
	store8! &9 	#X8
	load4! &1 	#X1
	and! 0x7f
	add! 11
	store8! &1 	#AR
	load8! &1 	#X1
	shift_ru! 7
	store8! &3 	#X2
	load8! &3 	#X3
	load8! &9 	#X8
	add
	store8! &4 	#X3
	push! 0
	store8! &9 	#X8
	load8! &12 	#X12
	load8! &1 	#AR
	add
	store8! &2 	#X1
	# CBRANCH
	load4! &18
	load4! &2 	#X1
	lt_u
	not
	jump_zero! .L667.l_ocf9910
	# END CBRANCH
.L276.l_ocf9910:
	load4! &12 	#X12
	add! 76
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	load8! &6 	#X5
	add
	store8! &1 	#AR
	load2! &8 	#X8
	load8! &1 	#AR
	store2
	#
	load8! &12 	#X12
	add! 1
	store8! &13 	#X12
	# CBRANCH
	load4! &1 	#X1
	load4! &13 	#X12
	xor
	push! 1
	lt_u
	jump_zero! .L276.l_ocf9910
	# END CBRANCH
	load4! &12 	#X12
	load8! &6 	#X5
	add! 140
	store4
	#
	jump! .L278.l_ocf9910
.L667.l_ocf9910:
	push! .LC9.l_ocf9910
	load8! &8 	#X7
	add! 48
	store8
	#
	push! 16209
	load8! &6 	#X5
	add! 8
	store4
	#
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	push! -3
	store8! &11 	#X10
	jump! .L154.l_ocf9910
.L269.l_ocf9910:
	load8! &8 	#X8
	add! 3
	store8! &2 	#X1
	# CBRANCH
	load4! &3 	#X3
	load4! &2 	#X1
	lt_u
	jump_zero! .L407.l_ocf9910
	# END CBRANCH
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_zero! .L668.l_ocf9910
	# END CBRANCH
.L273.l_ocf9910:
	load8! &4 	#X4
	add! -1
	store8! &5 	#X4
	load8! &0 	#AR
	add! 1
	store8! &7 	#X6
	load8! &0 	#AR
	load1
	#
	store8! &11 	#X10
	load4! &3 	#X3
	pow2
	load8! &11 	#X10
	mult
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &3 	#X3
	add! 8
	store8! &4 	#X3
	# CBRANCH
	load4! &3 	#X3
	load4! &2 	#X1
	lt_u
	jump_zero! .L272.l_ocf9910
	# END CBRANCH
	load8! &6 	#X6
	store8! &1 	#AR
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_not_zero! .L273.l_ocf9910
	# END CBRANCH
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	push! 0
	store8! &11 	#X10
	jump! .L154.l_ocf9910
.L668.l_ocf9910:
	load8! &14 	#X14
	store8! &2 	#X1
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	load8! &0 	#AR
	store8! &7 	#X6
	push! 0
	store8! &11 	#X10
	jump! .L154.l_ocf9910
.L665.l_ocf9910:
	load8! &21
	store8! &14 	#X13
	load4! &8 	#X8
	store8! &2 	#X1
	load8! &2 	#X2
	load8! &2 	#X1
	shift_ru
	store8! &3 	#X2
	load1! &20
	store8! &2 	#X1
	load8! &3 	#X3
	load8! &2 	#X1
	sub
	store8! &4 	#X3
	load8! &5 	#X5
	add! 12924
	load4
	#
	load8! &9 	#X8
	add
	store8! &11 	#X10
	load1! &12 	#X12
	store8! &9 	#X8
	load1! &0 	#AR
	store8! &13 	#X12
	load8! &6 	#X6
	store8! &2 	#X1
	jump! .L307.l_ocf9910
.L403.l_ocf9910:
	load8! &6 	#X6
	store8! &2 	#X1
	jump! .L251.l_ocf9910
.L628.l_ocf9910:
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	push! 0
	store8! &11 	#X10
	jump! .L154.l_ocf9910
.L233.l_ocf9910:
	push! .LC5.l_ocf9910
	load8! &8 	#X7
	add! 48
	store8
	#
	push! 16209
	load8! &6 	#X5
	add! 8
	store4
	#
	load8! &2 	#X2
	shift_ru! 3
	store8! &3 	#X2
	load8! &3 	#X3
	add! -3
	store8! &4 	#X3
	load8! &1 	#X1
	store8! &7 	#X6
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	push! -3
	store8! &11 	#X10
	jump! .L154.l_ocf9910
.L424.l_ocf9910:
	load8! &2 	#X2
	store8! &2 	#X1
	jump! .L332.l_ocf9910
.L167.l_ocf9910:
	push! .LC0.l_ocf9910
	load8! &8 	#X7
	add! 48
	store8
	#
	push! 16209
	load8! &6 	#X5
	add! 8
	store4
	#
	load8! &8 	#X8
	store8! &7 	#X6
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	push! -3
	store8! &11 	#X10
	jump! .L154.l_ocf9910
.L425.l_ocf9910:
	load8! &6 	#X6
	store8! &9 	#X8
	jump! .L335.l_ocf9910
.L432.l_ocf9910:
	load8! &8 	#X8
	store8! &7 	#X6
	push! 0
	store8! &4 	#X3
	push! 0
	store8! &3 	#X2
.L334.l_ocf9910:
	push! 16208
	load8! &6 	#X5
	add! 8
	store4
	#
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	push! 1
	store8! &11 	#X10
	jump! .L154.l_ocf9910
.L641.l_ocf9910:
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	push! 0
	store8! &11 	#X10
	jump! .L154.l_ocf9910
.L382.l_ocf9910:
	load8! &6 	#X6
	store8! &2 	#X1
	jump! .L223.l_ocf9910
.L291.l_ocf9910:
	load8! &0 	#AR
	shift_ru! 16
	and! 0xffff
	store4! &20
	load8! &0 	#AR
	shift_ru! 8
	store1! &21
	load1! &20
	store8! &10 	#X9
	load1! &0 	#AR
	load8! &10 	#X9
	add
	and! 0xffffffff
	store8! &1 	#AR
	push! -1
	load8! &1 	#AR
	shift_l
	not
	store4! &19
	load4! &18
	load8! &11 	#X10
	and
	and! 0xffffffff
	store8! &7 	#X6
	load4! &9 	#X9
	store8! &1 	#AR
	load8! &6 	#X6
	load8! &1 	#AR
	shift_ru
	store8! &7 	#X6
	load4! &19
	load8! &7 	#X6
	add
	and! 0xffffffff
	shift_l! 3
	load8! &9 	#X8
	add
	load8
	store8! &1 	#AR
	load8! &0 	#AR
	shift_ru! 8
	store8! &13 	#X12
	load1! &12 	#X12
	store8! &12 	#X11
	load8! &11 	#X11
	load8! &10 	#X9
	add
	store8! &11 	#X10
	# CBRANCH
	load4! &3 	#X3
	load4! &11 	#X10
	lt_u
	jump_zero! .L293.l_ocf9910
	# END CBRANCH
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_zero! .L669.l_ocf9910
	# END CBRANCH
	load8! &13 	#X13
	store8! &22
	load4! &18
	store8! &14 	#X13
	load8! &1 	#X1
	store8! &1 	#AR
	load4! &19
	store8! &2 	#X1
.L294.l_ocf9910:
	load8! &4 	#X4
	add! -1
	store8! &5 	#X4
	load8! &0 	#AR
	add! 1
	store8! &7 	#X6
	load8! &0 	#AR
	load1
	#
	store8! &11 	#X10
	load4! &3 	#X3
	pow2
	load8! &11 	#X10
	mult
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &3 	#X3
	add! 8
	store8! &4 	#X3
	load4! &2 	#X2
	load8! &14 	#X13
	and
	and! 0xffffffff
	store8! &11 	#X10
	load4! &9 	#X9
	store8! &1 	#AR
	load8! &10 	#X10
	load8! &1 	#AR
	shift_ru
	load8! &2 	#X1
	add
	and! 0xffffffff
	shift_l! 3
	load8! &9 	#X8
	add
	load8
	store8! &1 	#AR
	load8! &0 	#AR
	shift_ru! 8
	store8! &13 	#X12
	load1! &12 	#X12
	store8! &12 	#X11
	load8! &9 	#X9
	load8! &12 	#X11
	add
	store8! &11 	#X10
	# CBRANCH
	load4! &3 	#X3
	load4! &11 	#X10
	lt_u
	jump_zero! .L670.l_ocf9910
	# END CBRANCH
	load8! &6 	#X6
	store8! &1 	#AR
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_not_zero! .L294.l_ocf9910
	# END CBRANCH
	load8! &21
	store8! &14 	#X13
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	push! 0
	store8! &11 	#X10
	jump! .L154.l_ocf9910
.L426.l_ocf9910:
	load4! &0 	#AR
	store8! &4 	#X3
	load4! &1 	#X1
	store8! &5 	#X4
	jump! .L335.l_ocf9910
.L636.l_ocf9910:
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	push! 0
	store8! &11 	#X10
	jump! .L154.l_ocf9910
.L383.l_ocf9910:
	load4! &0 	#AR
	store8! &4 	#X3
	load4! &8 	#X8
	store8! &5 	#X4
	jump! .L223.l_ocf9910
.L427.l_ocf9910:
	load4! &0 	#AR
	store8! &4 	#X3
	load8! &8 	#X8
	store8! &7 	#X6
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	push! 0
	store8! &11 	#X10
	push! 0
	store8! &5 	#X4
	jump! .L154.l_ocf9910
.L428.l_ocf9910:
	load4! &0 	#AR
	store8! &4 	#X3
	load4! &1 	#X1
	store8! &5 	#X4
	jump! .L335.l_ocf9910
.L659.l_ocf9910:
	load8! &8 	#X8
	add! 2
	store8! &2 	#X1
	# CBRANCH
	load4! &3 	#X3
	load4! &2 	#X1
	lt_u
	jump_zero! .L405.l_ocf9910
	# END CBRANCH
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_zero! .L671.l_ocf9910
	# END CBRANCH
.L264.l_ocf9910:
	load8! &4 	#X4
	add! -1
	store8! &5 	#X4
	load8! &0 	#AR
	add! 1
	store8! &7 	#X6
	load8! &0 	#AR
	load1
	#
	store8! &11 	#X10
	load4! &3 	#X3
	pow2
	load8! &11 	#X10
	mult
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load8! &3 	#X3
	add! 8
	store8! &4 	#X3
	# CBRANCH
	load4! &3 	#X3
	load4! &2 	#X1
	lt_u
	jump_zero! .L263.l_ocf9910
	# END CBRANCH
	load8! &6 	#X6
	store8! &1 	#AR
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_not_zero! .L264.l_ocf9910
	# END CBRANCH
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	push! 0
	store8! &11 	#X10
	jump! .L154.l_ocf9910
.L671.l_ocf9910:
	load8! &14 	#X14
	store8! &2 	#X1
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	load8! &0 	#AR
	store8! &7 	#X6
	push! 0
	store8! &11 	#X10
	jump! .L154.l_ocf9910
.L429.l_ocf9910:
	load4! &0 	#AR
	store8! &4 	#X3
	load8! &8 	#X8
	store8! &7 	#X6
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	push! 0
	store8! &11 	#X10
	push! 0
	store8! &5 	#X4
	jump! .L154.l_ocf9910
.L367.l_ocf9910:
	push! -2
	store8! &11 	#X10
	load4! &10 	#X10
	store4! &25
	jump! .L615.l_ocf9910
.L340.l_ocf9910:
	push! 16210
	load8! &6 	#X5
	add! 8
	store4
	#
	push! -4
	store8! &11 	#X10
	load4! &10 	#X10
	store4! &25
	jump! .L615.l_ocf9910
.L407.l_ocf9910:
	load8! &0 	#AR
	store8! &7 	#X6
.L272.l_ocf9910:
	load4! &8 	#X8
	store8! &1 	#AR
	load8! &2 	#X2
	load8! &1 	#AR
	shift_ru
	store8! &2 	#X1
	load8! &9 	#X9
	sub! -3
	neg
	store8! &9 	#X8
	load4! &1 	#X1
	and! 0x7
	add! 3
	store8! &1 	#AR
	load8! &1 	#X1
	shift_ru! 3
	store8! &3 	#X2
	load8! &3 	#X3
	load8! &9 	#X8
	add
	store8! &4 	#X3
	push! 0
	store8! &9 	#X8
	load8! &12 	#X12
	load8! &1 	#AR
	add
	store8! &2 	#X1
	# CBRANCH
	load4! &18
	load4! &2 	#X1
	lt_u
	jump_zero! .L276.l_ocf9910
	# END CBRANCH
	jump! .L667.l_ocf9910
.L670.l_ocf9910:
	load8! &21
	store8! &14 	#X13
	load8! &6 	#X6
	store8! &2 	#X1
.L293.l_ocf9910:
	load4! &9 	#X9
	store8! &7 	#X6
	load8! &2 	#X2
	load8! &7 	#X6
	shift_ru
	store8! &3 	#X2
	load1! &20
	store8! &7 	#X6
	load8! &3 	#X3
	load8! &7 	#X6
	sub
	store8! &9 	#X8
	load1! &12 	#X12
	store8! &4 	#X3
	load1! &0 	#AR
	store8! &7 	#X6
	load4! &11 	#X11
	store8! &10 	#X9
	load8! &2 	#X2
	load8! &10 	#X9
	shift_ru
	store8! &3 	#X2
	load8! &8 	#X8
	load8! &4 	#X3
	sub
	store8! &4 	#X3
	load4! &10 	#X10
	load8! &6 	#X5
	add! 12924
	store4
	#
	load8! &0 	#AR
	shift_ru! 16
	and! 0xffff
	load8! &6 	#X5
	add! 92
	store4
	#
	# CBRANCH EQ0
	load1! &0 	#AR
	jump_not_zero! .L292.l_ocf9910
	# END CBRANCH
	push! 16205
	load8! &6 	#X5
	add! 8
	store4
	#
	load8! &13 	#X13
	store8! &9 	#X8
	load8! &1 	#X1
	store8! &7 	#X6
	jump! .L117.l_ocf9910
.L430.l_ocf9910:
	load4! &0 	#AR
	store8! &4 	#X3
	load4! &9 	#X9
	store8! &5 	#X4
	jump! .L335.l_ocf9910
.L431.l_ocf9910:
	load4! &0 	#AR
	store8! &4 	#X3
	load8! &8 	#X8
	store8! &7 	#X6
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	push! 0
	store8! &11 	#X10
	push! 0
	store8! &5 	#X4
	jump! .L154.l_ocf9910
.L371.l_ocf9910:
	load8! &6 	#X6
	store8! &2 	#X1
	jump! .L152.l_ocf9910
.L393.l_ocf9910:
	load8! &6 	#X6
	store8! &2 	#X1
	jump! .L236.l_ocf9910
.L647.l_ocf9910:
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	push! 0
	store8! &11 	#X10
	jump! .L154.l_ocf9910
.L644.l_ocf9910:
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	push! 0
	store8! &11 	#X10
	jump! .L154.l_ocf9910
.L645.l_ocf9910:
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	push! 0
	store8! &11 	#X10
	jump! .L154.l_ocf9910
.L624.l_ocf9910:
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	push! 0
	store8! &11 	#X10
	jump! .L154.l_ocf9910
.L392.l_ocf9910:
	load8! &6 	#X6
	store8! &2 	#X1
	jump! .L230.l_ocf9910
.L387.l_ocf9910:
	load4! &1 	#X1
	store8! &4 	#X3
	load8! &0 	#AR
	store8! &7 	#X6
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	push! 0
	store8! &11 	#X10
	push! 0
	store8! &5 	#X4
	jump! .L154.l_ocf9910
.L386.l_ocf9910:
	load4! &8 	#X8
	store8! &5 	#X4
	load8! &2 	#X2
	shift_ru! 24
	and! 0xff
	store8! &4 	#X3
	load8! &2 	#X2
	shift_ru! 8
	and! 0xff00
	load8! &4 	#X3
	or
	store8! &4 	#X3
	load8! &2 	#X2
	shift_l! 8
	and! 0xff0000
	store8! &7 	#X6
	load8! &2 	#X2
	shift_l! 24
	and! 0xffffffff
	load8! &7 	#X6
	add
	load8! &4 	#X3
	add
	store8! &2 	#X1
	load8! &1 	#X1
	load8! &6 	#X5
	add! 32
	store8
	#
	load8! &1 	#X1
	load8! &8 	#X7
	add! 96
	store8
	#
	push! 16190
	load8! &6 	#X5
	add! 8
	store4
	#
	load8! &0 	#AR
	store8! &7 	#X6
	push! 0
	store8! &4 	#X3
	push! 0
	store8! &3 	#X2
	jump! .L132.l_ocf9910
.L376.l_ocf9910:
	load4! &0 	#AR
	store8! &4 	#X3
	load4! &1 	#X1
	store8! &5 	#X4
	jump! .L157.l_ocf9910
.L401.l_ocf9910:
	load4! &0 	#AR
	store8! &4 	#X3
	load4! &8 	#X8
	store8! &5 	#X4
	jump! .L152.l_ocf9910
.L177.l_ocf9910:
	load8! &5 	#X5
	add! 48
	load8
	#
	store8! &2 	#X1
	# CBRANCH EQ0
	load8! &1 	#X1
	jump_zero! .L178.l_ocf9910
	# END CBRANCH
	load8! &2 	#X2
	shift_ru! 8
	and! 0x1
	load8! &2 	#X1
	store4
	#
.L178.l_ocf9910:
	load8! &0 	#AR
	and! 0x200
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L179.l_ocf9910
	# END CBRANCH
	load8! &5 	#X5
	add! 16
	load4
	#
	and! 0x4
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_not_zero! .L672.l_ocf9910
	# END CBRANCH
.L179.l_ocf9910:
	push! 16182
	load8! &6 	#X5
	add! 8
	store4
	#
	load8! &8 	#X8
	store8! &7 	#X6
	push! 0
	store8! &3 	#X2
	push! 0
	store8! &4 	#X3
.L673.l_ocf9910:
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_not_zero! .L181.l_ocf9910
	# END CBRANCH
	jump! .L632.l_ocf9910
.L672.l_ocf9910:
	load2! &2 	#X2
	store2! &23
	load8! &5 	#X5
	add! 32
	load8
	#
	store8! &1 	#AR
	push! 2
	push! &0
	add! 184
	#peep - pop(deadreg)+pusharg
	load8! &2 	#AR
	call! crc32
	store8! &3

	set_sp! &2
	load8! &0 	#AR
	load8! &6 	#X5
	add! 32
	store8
	#
	push! 16182
	load8! &6 	#X5
	add! 8
	store4
	#
	load8! &8 	#X8
	store8! &7 	#X6
	push! 0
	store8! &3 	#X2
	push! 0
	store8! &4 	#X3
	jump! .L673.l_ocf9910
.L395.l_ocf9910:
	load4! &0 	#AR
	store8! &4 	#X3
	load8! &1 	#X1
	store8! &7 	#X6
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	push! 0
	store8! &11 	#X10
	push! 0
	store8! &5 	#X4
	jump! .L154.l_ocf9910
.L394.l_ocf9910:
	load4! &0 	#AR
	store8! &4 	#X3
	load4! &8 	#X8
	store8! &5 	#X4
	jump! .L236.l_ocf9910
.L646.l_ocf9910:
	load4! &0 	#AR
	store8! &11 	#X10
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	jump! .L154.l_ocf9910
.L413.l_ocf9910:
	load4! &16
	store8! &10 	#X9
	push! 0
	store8! &11 	#X10
	jump! .L154.l_ocf9910
.L396.l_ocf9910:
	load4! &0 	#AR
	store8! &4 	#X3
	load4! &8 	#X8
	store8! &5 	#X4
	jump! .L236.l_ocf9910
.L388.l_ocf9910:
	load4! &8 	#X8
	store8! &5 	#X4
	load8! &2 	#X2
	shift_ru! 24
	and! 0xff
	store8! &4 	#X3
	load8! &2 	#X2
	shift_ru! 8
	and! 0xff00
	load8! &4 	#X3
	or
	store8! &4 	#X3
	load8! &2 	#X2
	shift_l! 8
	and! 0xff0000
	store8! &7 	#X6
	load8! &2 	#X2
	shift_l! 24
	and! 0xffffffff
	load8! &7 	#X6
	add
	load8! &4 	#X3
	add
	store8! &2 	#X1
	load8! &1 	#X1
	load8! &6 	#X5
	add! 32
	store8
	#
	load8! &1 	#X1
	load8! &8 	#X7
	add! 96
	store8
	#
	push! 16190
	load8! &6 	#X5
	add! 8
	store4
	#
	load8! &0 	#AR
	store8! &7 	#X6
	push! 0
	store8! &4 	#X3
	push! 0
	store8! &3 	#X2
	jump! .L132.l_ocf9910
.L389.l_ocf9910:
	load4! &1 	#X1
	store8! &4 	#X3
	load8! &0 	#AR
	store8! &7 	#X6
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	push! 0
	store8! &11 	#X10
	push! 0
	store8! &5 	#X4
	jump! .L154.l_ocf9910
.L200.l_ocf9910:
	load2! &2 	#X2
	store2! &23
	load8! &5 	#X5
	add! 32
	load8
	#
	store8! &1 	#AR
	push! 2
	push! &0
	add! 184
	#peep - pop(deadreg)+pusharg
	load8! &2 	#AR
	call! crc32
	store8! &3

	set_sp! &2
	load8! &0 	#AR
	load8! &6 	#X5
	add! 32
	store8
	#
	load8! &5 	#X5
	add! 24
	load4
	#
	store8! &12 	#X11
	load8! &11 	#X11
	and! 0x400
	store8! &1 	#AR
	push! 0
	store8! &4 	#X3
	push! 0
	store8! &3 	#X2
	push! 16185
	load8! &6 	#X5
	add! 8
	store4
	#
	jump! .L151.l_ocf9910
.L397.l_ocf9910:
	load4! &0 	#AR
	store8! &4 	#X3
	load8! &1 	#X1
	store8! &7 	#X6
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	push! 0
	store8! &11 	#X10
	push! 0
	store8! &5 	#X4
	jump! .L154.l_ocf9910
.L349.l_ocf9910:
	load8! &5 	#X5
	add! 16
	load4
	#
	and! 0x4
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_not_zero! .L355.l_ocf9910
	# END CBRANCH
	load4! &1 	#X1
	store8! &5 	#X4
	load8! &8 	#X8
	store8! &7 	#X6
	push! 16188
	load8! &6 	#X5
	add! 8
	store4
	#
	jump! .L148.l_ocf9910
.L355.l_ocf9910:
	load8! &5 	#X5
	add! 32
	load8
	#
	store8! &1 	#AR
	load4! &9 	#X9
	load8! &7 	#X6
	load8! &2 	#AR
	call! crc32
	store8! &3

	set_sp! &2
	load8! &0 	#AR
	load8! &6 	#X5
	add! 32
	store8
	#
	load8! &9 	#X9
	load8! &5 	#X4
	sub
	neg
	store8! &5 	#X4
	load8! &5 	#X5
	add! 24
	load4
	#
	store8! &12 	#X11
	load8! &11 	#X11
	and! 0x200
	store8! &1 	#AR
	load8! &8 	#X8
	store8! &7 	#X6
	push! 16188
	load8! &6 	#X5
	add! 8
	store4
	#
	jump! .L148.l_ocf9910
.L399.l_ocf9910:
	load4! &0 	#AR
	store8! &4 	#X3
	load8! &1 	#X1
	store8! &7 	#X6
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	push! 0
	store8! &11 	#X10
	push! 0
	store8! &5 	#X4
	jump! .L154.l_ocf9910
.L398.l_ocf9910:
	load4! &0 	#AR
	store8! &4 	#X3
	load4! &8 	#X8
	store8! &5 	#X4
	jump! .L236.l_ocf9910
.L391.l_ocf9910:
	load8! &0 	#AR
	store8! &7 	#X6
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	push! 0
	store8! &11 	#X10
	push! 0
	store8! &5 	#X4
	jump! .L154.l_ocf9910
.L390.l_ocf9910:
	load4! &8 	#X8
	store8! &5 	#X4
	load8! &2 	#X2
	shift_ru! 24
	and! 0xff
	store8! &4 	#X3
	load8! &2 	#X2
	shift_ru! 8
	and! 0xff00
	load8! &4 	#X3
	or
	store8! &4 	#X3
	load8! &2 	#X2
	shift_l! 8
	and! 0xff0000
	store8! &7 	#X6
	load8! &2 	#X2
	shift_l! 24
	and! 0xffffffff
	load8! &7 	#X6
	add
	load8! &4 	#X3
	add
	store8! &2 	#X1
	load8! &1 	#X1
	load8! &6 	#X5
	add! 32
	store8
	#
	load8! &1 	#X1
	load8! &8 	#X7
	add! 96
	store8
	#
	push! 16190
	load8! &6 	#X5
	add! 8
	store4
	#
	load8! &0 	#AR
	store8! &7 	#X6
	push! 0
	store8! &4 	#X3
	push! 0
	store8! &3 	#X2
	jump! .L132.l_ocf9910
.L405.l_ocf9910:
	load8! &0 	#AR
	store8! &7 	#X6
.L263.l_ocf9910:
	load4! &8 	#X8
	store8! &1 	#AR
	load8! &2 	#X2
	load8! &1 	#AR
	shift_ru
	store8! &3 	#X2
	load8! &9 	#X9
	load8! &4 	#X3
	sub
	neg
	store8! &4 	#X3
	# CBRANCH EQ0
	load4! &12 	#X12
	jump_zero! .L674.l_ocf9910
	# END CBRANCH
	load8! &12 	#X12
	add! -1
	and! 0xffffffff
	add! 76
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	load8! &6 	#X5
	add
	load2
	store8! &9 	#X8
	load4! &2 	#X2
	and! 0x3
	add! 3
	store8! &1 	#AR
	load8! &2 	#X2
	shift_ru! 2
	store8! &3 	#X2
	load8! &3 	#X3
	add! -2
	store8! &4 	#X3
	load8! &12 	#X12
	load8! &1 	#AR
	add
	store8! &2 	#X1
	# CBRANCH
	load4! &18
	load4! &2 	#X1
	lt_u
	jump_zero! .L276.l_ocf9910
	# END CBRANCH
	jump! .L667.l_ocf9910
.L255.l_ocf9910:
	push! 0
	load8! &6 	#X5
	add! 140
	store4
	#
	push! 16198
	load8! &6 	#X5
	add! 8
	store4
	#
	push! 0
	store8! &13 	#X12
	load8! &5 	#X5
	add! 132
	load4
	#
	store4! &20
	load8! &5 	#X5
	add! 136
	load4
	#
	store4! &21
	jump! .L278.l_ocf9910
.L330.l_ocf9910:
	load4! &9 	#X9
	load8! &7 	#X6
	load8! &2 	#AR
	call! adler32
	store8! &3

	set_sp! &2
	jump! .L331.l_ocf9910
.L630.l_ocf9910:
	load8! &5 	#X5
	add! 8
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ
	push! 16209
	xor
	jump_zero! .L113.l_ocf9910
	# END CBRANCH
	load8! &5 	#X5
	add! 664
	load2
	#
	# CBRANCH - peep (modesize=2)
	and! 65535
	# - EQ0
	jump_not_zero! .L280.l_ocf9910
	# END CBRANCH
	push! .LC10.l_ocf9910
	load8! &8 	#X7
	add! 48
	store8
	#
	push! 16209
	load8! &6 	#X5
	add! 8
	store4
	#
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	push! -3
	store8! &11 	#X10
	jump! .L154.l_ocf9910
.L352.l_ocf9910:
	load8! &5 	#X5
	add! 16
	load4
	#
	and! 0x4
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_not_zero! .L358.l_ocf9910
	# END CBRANCH
	load4! &0 	#AR
	store8! &5 	#X4
	load8! &8 	#X8
	store8! &7 	#X6
	push! 0
	load8! &6 	#X5
	add! 92
	store4
	#
	push! 16187
	load8! &6 	#X5
	add! 8
	store4
	#
	jump! .L149.l_ocf9910
.L358.l_ocf9910:
	load8! &5 	#X5
	add! 32
	load8
	#
	store8! &1 	#AR
	load4! &9 	#X9
	load8! &7 	#X6
	load8! &2 	#AR
	call! crc32
	store8! &3

	set_sp! &2
	load8! &0 	#AR
	load8! &6 	#X5
	add! 32
	store8
	#
	load8! &9 	#X9
	load8! &5 	#X4
	sub
	neg
	store8! &5 	#X4
	load8! &5 	#X5
	add! 24
	load4
	#
	store8! &12 	#X11
	load8! &8 	#X8
	store8! &7 	#X6
	push! 0
	load8! &6 	#X5
	add! 92
	store4
	#
	push! 16187
	load8! &6 	#X5
	add! 8
	store4
	#
	jump! .L149.l_ocf9910
.L625.l_ocf9910:
	load8! &13 	#X13
	load8! &8 	#X7
	add! 24
	store8
	#
	load4! &14 	#X14
	load8! &8 	#X7
	add! 32
	store4
	#
	load8! &6 	#X6
	load8! &8 	#X7
	store8
	#
	load4! &4 	#X4
	load8! &8 	#X7
	add! 8
	store4
	#
	load8! &2 	#X2
	load8! &6 	#X5
	add! 80
	store8
	#
	load4! &3 	#X3
	load8! &6 	#X5
	add! 88
	store4
	#
	push! 2
	store8! &11 	#X10
	load4! &10 	#X10
	store4! &25
	jump! .L615.l_ocf9910
.L408.l_ocf9910:
	load8! &6 	#X6
	store8! &2 	#X1
	jump! .L285.l_ocf9910
.L415.l_ocf9910:
	load8! &6 	#X6
	store8! &9 	#X8
	jump! .L326.l_ocf9910
.L639.l_ocf9910:
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	push! 0
	store8! &11 	#X10
	jump! .L154.l_ocf9910
.L652.l_ocf9910:
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	push! 0
	store8! &11 	#X10
	jump! .L154.l_ocf9910
.L416.l_ocf9910:
	load4! &0 	#AR
	store8! &4 	#X3
	load4! &9 	#X9
	store8! &5 	#X4
	jump! .L326.l_ocf9910
.L620.l_ocf9910:
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	push! 0
	store8! &11 	#X10
	jump! .L154.l_ocf9910
.L653.l_ocf9910:
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	load8! &8 	#X8
	store8! &7 	#X6
	push! 0
	store8! &5 	#X4
	jump! .L154.l_ocf9910
.L418.l_ocf9910:
	load4! &0 	#AR
	store8! &4 	#X3
	load4! &9 	#X9
	store8! &5 	#X4
	jump! .L326.l_ocf9910
.L417.l_ocf9910:
	load4! &0 	#AR
	store8! &4 	#X3
	load8! &8 	#X8
	store8! &7 	#X6
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	push! 0
	store8! &11 	#X10
	push! 0
	store8! &5 	#X4
	jump! .L154.l_ocf9910
.L627.l_ocf9910:
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	push! 0
	store8! &11 	#X10
	jump! .L154.l_ocf9910
.L414.l_ocf9910:
	load4! &16
	store8! &10 	#X9
	push! 0
	store8! &11 	#X10
	jump! .L154.l_ocf9910
.L656.l_ocf9910:
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	load8! &8 	#X8
	store8! &7 	#X6
	push! 0
	store8! &5 	#X4
	jump! .L154.l_ocf9910
.L420.l_ocf9910:
	load4! &0 	#AR
	store8! &4 	#X3
	load4! &9 	#X9
	store8! &5 	#X4
	jump! .L326.l_ocf9910
.L419.l_ocf9910:
	load4! &0 	#AR
	store8! &4 	#X3
	load8! &8 	#X8
	store8! &7 	#X6
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	push! 0
	store8! &11 	#X10
	push! 0
	store8! &5 	#X4
	jump! .L154.l_ocf9910
.L421.l_ocf9910:
	load4! &0 	#AR
	store8! &4 	#X3
	load8! &8 	#X8
	store8! &7 	#X6
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	push! 0
	store8! &11 	#X10
	push! 0
	store8! &5 	#X4
	jump! .L154.l_ocf9910
.L655.l_ocf9910:
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	push! 0
	store8! &11 	#X10
	jump! .L154.l_ocf9910
.L374.l_ocf9910:
	load8! &6 	#X6
	store8! &9 	#X8
	jump! .L160.l_ocf9910
.L375.l_ocf9910:
	load4! &1 	#X1
	store8! &4 	#X3
	load4! &9 	#X9
	store8! &5 	#X4
	jump! .L160.l_ocf9910
.L662.l_ocf9910:
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	push! 0
	store8! &11 	#X10
	jump! .L154.l_ocf9910
.L664.l_ocf9910:
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	load8! &1 	#X1
	store8! &7 	#X6
	push! 0
	store8! &11 	#X10
	jump! .L154.l_ocf9910
.L411.l_ocf9910:
	load8! &1 	#X1
	store8! &7 	#X6
	load4! &8 	#X8
	store8! &2 	#X1
	load8! &2 	#X2
	load8! &2 	#X1
	shift_ru
	store8! &3 	#X2
	load1! &20
	store8! &2 	#X1
	load8! &3 	#X3
	load8! &2 	#X1
	sub
	store8! &4 	#X3
	load8! &5 	#X5
	add! 12924
	load4
	#
	load8! &9 	#X8
	add
	store8! &11 	#X10
	load1! &12 	#X12
	store8! &9 	#X8
	load1! &0 	#AR
	store8! &13 	#X12
	load8! &6 	#X6
	store8! &2 	#X1
	jump! .L307.l_ocf9910
.L280.l_ocf9910:
	load8! &5 	#X5
	add! 1368
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &6 	#X5
	add! 144
	store8
	#
	load8! &0 	#AR
	load8! &6 	#X5
	add! 104
	store8
	#
	push! 9
	load8! &6 	#X5
	add! 120
	store4
	#
	load8! &5 	#X5
	add! 792
	store8! &10 	#X9
	load8! &5 	#X5
	add! 120
	store8! &1 	#AR
	load8! &5 	#X5
	add! 144
	store8! &9 	#X8
	load8! &5 	#X5
	add! 152
	store8! &11 	#X10
	load8! &9 	#X9
	load8! &1 	#AR
	load8! &10 	#X8
	load4! &22
	load8! &14 	#X10
	push! 1
	call! inflate_table
	store8! &6

	set_sp! &5
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_zero! .L281.l_ocf9910
	# END CBRANCH
	push! .LC11.l_ocf9910
	load8! &8 	#X7
	add! 48
	store8
	#
	push! 16209
	load8! &6 	#X5
	add! 8
	store4
	#
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	push! -3
	store8! &11 	#X10
	jump! .L154.l_ocf9910
.L169.l_ocf9910:
	load8! &2 	#X2
	shift_ru! 4
	store8! &7 	#X6
	load8! &6 	#X6
	store8! &3 	#X2
	load8! &3 	#X3
	add! -4
	store8! &4 	#X3
	load4! &6 	#X6
	and! 0xf
	add! 8
	store8! &1 	#AR
	load8! &5 	#X5
	add! 56
	load4
	#
	store8! &2 	#X1
	# CBRANCH EQ0
	load4! &1 	#X1
	jump_not_zero! .L170.l_ocf9910
	# END CBRANCH
	load4! &0 	#AR
	load8! &6 	#X5
	add! 56
	store4
	#
	# CBRANCH
	push! 15
	load4! &1 	#AR
	lt_u
	jump_zero! .L171.l_ocf9910
	# END CBRANCH
.L172.l_ocf9910:
	push! .LC2.l_ocf9910
	load8! &8 	#X7
	add! 48
	store8
	#
	push! 16209
	load8! &6 	#X5
	add! 8
	store4
	#
	load8! &8 	#X8
	store8! &7 	#X6
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	push! -3
	store8! &11 	#X10
	jump! .L154.l_ocf9910
.L170.l_ocf9910:
	# CBRANCH
	push! 15
	load4! &1 	#AR
	lt_u
	not
	jump_zero! .L172.l_ocf9910
	# END CBRANCH
	# CBRANCH
	load4! &1 	#X1
	load4! &1 	#AR
	lt_u
	not
	jump_zero! .L172.l_ocf9910
	# END CBRANCH
.L171.l_ocf9910:
	load4! &0 	#AR
	store8! &1 	#AR
	push! 1
	load8! &1 	#AR
	shift_l
	load8! &6 	#X5
	add! 28
	store4
	#
	push! 0
	push! 0
	push! 0
	call! adler32
	store8! &3

	set_sp! &2
	load8! &0 	#AR
	load8! &6 	#X5
	add! 32
	store8
	#
	load8! &0 	#AR
	load8! &8 	#X7
	add! 96
	store8
	#
	load8! &6 	#X6
	and! 0x200
	store8! &3 	#X2
	# CBRANCH EQ0
	load8! &2 	#X2
	jump_not_zero! .L173.l_ocf9910
	# END CBRANCH
	push! 16191
	load8! &6 	#X5
	add! 8
	store4
	#
	load8! &8 	#X8
	store8! &7 	#X6
	push! 0
	store8! &4 	#X3
	# CBRANCH
	push! 1
	load4! &18
	lt_u
	not
	jump_zero! .L130.l_ocf9910
	# END CBRANCH
	jump! .L626.l_ocf9910
.L666.l_ocf9910:
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	load8! &1 	#X1
	store8! &7 	#X6
	push! 0
	store8! &11 	#X10
	push! 0
	store8! &4 	#X3
	push! 0
	store8! &3 	#X2
	jump! .L154.l_ocf9910
.L235.l_ocf9910:
	load4! &0 	#AR
	store8! &11 	#X10
	load8! &2 	#X2
	shift_ru! 3
	store8! &3 	#X2
	load8! &3 	#X3
	add! -3
	store8! &4 	#X3
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	load8! &1 	#X1
	store8! &7 	#X6
	jump! .L154.l_ocf9910
.L669.l_ocf9910:
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	load8! &1 	#X1
	store8! &7 	#X6
	push! 0
	store8! &11 	#X10
	jump! .L154.l_ocf9910
.L281.l_ocf9910:
	load8! &5 	#X5
	add! 144
	load8
	#
	load8! &6 	#X5
	add! 112
	store8
	#
	push! 6
	load8! &6 	#X5
	add! 124
	store4
	#
	load8! &5 	#X5
	add! 124
	store8! &12 	#X11
	load8! &5 	#X5
	add! 136
	load4
	#
	store8! &2 	#X1
	load8! &5 	#X5
	add! 132
	load4
	#
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	load8! &11 	#X10
	add
	store8! &1 	#AR
	load8! &9 	#X9
	load8! &12 	#X11
	load8! &10 	#X8
	load4! &4 	#X1
	load8! &4 	#AR
	push! 2
	call! inflate_table
	store8! &6

	set_sp! &5
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_zero! .L282.l_ocf9910
	# END CBRANCH
	push! .LC12.l_ocf9910
	load8! &8 	#X7
	add! 48
	store8
	#
	push! 16209
	load8! &6 	#X5
	add! 8
	store4
	#
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	push! -3
	store8! &11 	#X10
	jump! .L154.l_ocf9910
.L423.l_ocf9910:
	load4! &14 	#X14
	store4! &17
	load8! &8 	#X8
	store8! &7 	#X6
	push! 0
	store8! &4 	#X3
	push! 0
	store8! &3 	#X2
	push! 16207
	load8! &6 	#X5
	add! 8
	store4
	#
	jump! .L143.l_ocf9910
.L282.l_ocf9910:
	push! 16199
	load8! &6 	#X5
	add! 8
	store4
	#
	# CBRANCH
	load4! &25
	push! 6
	xor
	push! 1
	lt_u
	jump_zero! .L123.l_ocf9910
	# END CBRANCH
	load4! &0 	#AR
	store8! &11 	#X10
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	jump! .L154.l_ocf9910
.L674.l_ocf9910:
	push! .LC9.l_ocf9910
	load8! &8 	#X7
	add! 48
	store8
	#
	push! 16209
	load8! &6 	#X5
	add! 8
	store4
	#
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	push! -3
	store8! &11 	#X10
	jump! .L154.l_ocf9910
.L654.l_ocf9910:
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	load8! &8 	#X8
	store8! &7 	#X6
	push! 0
	store8! &5 	#X4
	jump! .L154.l_ocf9910
.L657.l_ocf9910:
	load8! &14 	#X14
	store8! &1 	#AR
	load4! &16
	load8! &15 	#X14
	sub
	store8! &10 	#X9
	load8! &8 	#X8
	store8! &7 	#X6
	push! 0
	store8! &5 	#X4
	jump! .L154.l_ocf9910
.L111.l_ocf9910:
	push! -2
	store8! &11 	#X10
	load4! &10 	#X10
	store4! &25
.L615.l_ocf9910:

	# epilogue
	set_sp! &23
	return

# FUNCTION ENDS:inflate

	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole pop+cmprev
	#peephole pop+cmp
	#peephole redundant blockage insn
	#peephole pop+block+cmp

# FUNCTION BEGINS:inflateEnd
	EXPORT	inflateEnd
inflateEnd:
	# prologue (5 GPRs)

	set_sp! &-5

	load8! &6
	store8! &3 	#X2
	# CBRANCH EQ0
	load8! &2 	#X2
	jump_zero! .L678.l_ocf9910
	# END CBRANCH
	load8! &2 	#X2
	add! 64
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L679.l_ocf9910
	# END CBRANCH
	load8! &2 	#X2
	add! 72
	load8
	#
	store8! &2 	#X1
	# CBRANCH EQ0
	load8! &1 	#X1
	jump_zero! .L680.l_ocf9910
	# END CBRANCH
	load8! &2 	#X2
	add! 56
	load8
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L681.l_ocf9910
	# END CBRANCH
	load8! &0 	#AR
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ
	load8! &3 	#X2
	xor
	jump_zero! .L689.l_ocf9910
	# END CBRANCH
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &7
	jump! .L690.l_ocf9910
.L689.l_ocf9910:
	load8! &0 	#AR
	add! 8
	load4
	#
	add! -16180
	store8! &4 	#X3
	# CBRANCH
	push! 31
	load4! &4 	#X3
	lt_u
	not
	jump_zero! .L683.l_ocf9910
	# END CBRANCH
	load8! &0 	#AR
	add! 72
	load8
	#
	store8! &5 	#X4
	load8! &2 	#X2
	add! 80
	load8
	#
	store8! &4 	#X3
	# CBRANCH EQ0
	load8! &4 	#X4
	jump_zero! .L677.l_ocf9910
	# END CBRANCH
	load8! &4 	#X4
	load8! &4 	#X3
	load8! &3 	#X1
	call
	set_sp! (+ &0 16)
	

	load8! &2 	#X2
	add! 72
	load8
	#
	store8! &2 	#X1
	load8! &2 	#X2
	add! 56
	load8
	#
	store8! &1 	#AR
	load8! &2 	#X2
	add! 80
	load8
	#
	store8! &4 	#X3
.L677.l_ocf9910:
	load8! &0 	#AR
	load8! &4 	#X3
	load8! &3 	#X1
	call
	set_sp! (+ &0 16)
	

	push! 0
	load8! &3 	#X2
	add! 56
	store8
	#
	push! 0
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &7
	jump! .L690.l_ocf9910
.L681.l_ocf9910:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &7
	jump! .L690.l_ocf9910
.L683.l_ocf9910:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &7
	jump! .L690.l_ocf9910
.L678.l_ocf9910:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &7
	jump! .L690.l_ocf9910
.L679.l_ocf9910:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &7
	jump! .L690.l_ocf9910
.L680.l_ocf9910:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &7
.L690.l_ocf9910:

	# epilogue
	set_sp! &5
	return

# FUNCTION ENDS:inflateEnd

	#peephole pop(deadreg)+push
	#peephole nop+set
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole zero_extend
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole pop+cmprev
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole nop+set
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole pop+push+commut(si)
	#peephole zero_extend
	#peephole popdi(deadreg)+push
	#peephole redundant blockage insn

# FUNCTION BEGINS:inflateGetDictionary
	EXPORT	inflateGetDictionary
inflateGetDictionary:
	# prologue (5 GPRs)

	set_sp! &-5

	load8! &6
	store8! &1 	#AR
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L694.l_ocf9910
	# END CBRANCH
	load8! &0 	#AR
	add! 64
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L695.l_ocf9910
	# END CBRANCH
	load8! &0 	#AR
	add! 72
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L696.l_ocf9910
	# END CBRANCH
	load8! &0 	#AR
	add! 56
	load8
	#
	store8! &3 	#X2
	# CBRANCH EQ0
	load8! &2 	#X2
	jump_zero! .L697.l_ocf9910
	# END CBRANCH
	load8! &2 	#X2
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ
	load8! &1 	#AR
	xor
	jump_zero! .L709.l_ocf9910
	# END CBRANCH
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &7
	jump! .L710.l_ocf9910
.L709.l_ocf9910:
	load8! &2 	#X2
	add! 8
	load4
	#
	add! -16180
	store8! &1 	#AR
	# CBRANCH
	push! 31
	load4! &1 	#AR
	lt_u
	not
	jump_zero! .L699.l_ocf9910
	# END CBRANCH
	load8! &2 	#X2
	add! 64
	load4
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_zero! .L693.l_ocf9910
	# END CBRANCH
	# CBRANCH EQ0
	load8! &7
	jump_zero! .L693.l_ocf9910
	# END CBRANCH
	load8! &2 	#X2
	add! 68
	load4
	#
	store8! &2 	#X1
	load8! &1 	#X1
	load8! &1 	#AR
	sub
	neg
	and! 0xffffffff
	store8! &4 	#X3
	load8! &2 	#X2
	add! 72
	load8
	#
	load4! &2 	#X1
	add
	store8! &1 	#AR
	load8! &3 	#X3
	load8! &1 	#AR
	load8! &9
	call! memcpy
	store8! &3

	set_sp! &2
	load8! &2 	#X2
	add! 68
	load4
	#
	store8! &1 	#AR
	load8! &2 	#X2
	add! 72
	load8
	#
	store8! &4 	#X3
	load8! &2 	#X2
	add! 64
	load4
	#
	and! 0x0ffffffff
	load8! &1 	#AR
	sub
	load8! &8
	add
	store8! &2 	#X1
	load8! &0 	#AR
	load8! &4 	#X3
	load8! &3 	#X1
	call! memcpy
	store8! &3

	set_sp! &2
.L693.l_ocf9910:
	# CBRANCH EQ0
	load8! &8
	jump_zero! .L700.l_ocf9910
	# END CBRANCH
	load8! &2 	#X2
	add! 64
	load4
	#
	load8! &9
	store8! &2 	#AR
	load8! &1 	#AR
	store4
	#
	push! 0
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &7
	jump! .L710.l_ocf9910
.L697.l_ocf9910:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &7
	jump! .L710.l_ocf9910
.L699.l_ocf9910:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &7
	jump! .L710.l_ocf9910
.L694.l_ocf9910:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &7
	jump! .L710.l_ocf9910
.L700.l_ocf9910:
	push! 0
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &7
	jump! .L710.l_ocf9910
.L695.l_ocf9910:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &7
	jump! .L710.l_ocf9910
.L696.l_ocf9910:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &7
.L710.l_ocf9910:

	# epilogue
	set_sp! &5
	return

# FUNCTION ENDS:inflateGetDictionary

	#peephole pop+cmp
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole pop+cmp
	#peephole 1
	#peephole pop+cmprev
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole redundant blockage insn
	#peephole pop+block+cmp

# FUNCTION BEGINS:inflateSetDictionary
	EXPORT	inflateSetDictionary
inflateSetDictionary:
	# prologue (4 GPRs)
	push! 0
	push! 0
	push! 0
	push! 0

	load8! &5
	store8! &3 	#X2
	# CBRANCH EQ0
	load8! &2 	#X2
	jump_zero! .L718.l_ocf9910
	# END CBRANCH
	load8! &2 	#X2
	add! 64
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L719.l_ocf9910
	# END CBRANCH
	load8! &2 	#X2
	add! 72
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L720.l_ocf9910
	# END CBRANCH
	load8! &2 	#X2
	add! 56
	load8
	#
	store8! &4 	#X3
	# CBRANCH EQ0
	load8! &3 	#X3
	jump_zero! .L721.l_ocf9910
	# END CBRANCH
	load8! &3 	#X3
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ
	load8! &3 	#X2
	xor
	jump_zero! .L733.l_ocf9910
	# END CBRANCH
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &6
	jump! .L734.l_ocf9910
.L733.l_ocf9910:
	load8! &3 	#X3
	add! 8
	load4
	#
	store8! &2 	#X1
	load8! &1 	#X1
	add! -16180
	store8! &1 	#AR
	# CBRANCH
	push! 31
	load4! &1 	#AR
	lt_u
	not
	jump_zero! .L723.l_ocf9910
	# END CBRANCH
	load8! &3 	#X3
	add! 16
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L713.l_ocf9910
	# END CBRANCH
	# CBRANCH
	load4! &1 	#X1
	push! 16190
	xor
	push! 1
	lt_u
	jump_zero! .L735.l_ocf9910
	# END CBRANCH
	push! 0
	push! 0
	push! 0
	call! adler32
	store8! &3

	set_sp! &2
	load4! &7
	load8! &7
	load8! &2 	#AR
	call! adler32
	store8! &3

	set_sp! &2
	load8! &3 	#X3
	add! 32
	load8
	#
	# CBRANCH - peep (modesize=8)
	load8! &1 	#AR
	xor
	push! 1
	lt_u
	jump_zero! .L736.l_ocf9910
	# END CBRANCH
.L717.l_ocf9910:
	load4! &7
	load8! &7
	add
	store8! &1 	#AR
	load4! &7
	load8! &1 	#AR
	load8! &4 	#X2
	call! updatewindow.s_ocf9910
	store8! &3

	set_sp! &2
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_not_zero! .L737.l_ocf9910
	# END CBRANCH
	push! 1
	load8! &4 	#X3
	add! 20
	store4
	#
	load4! &0 	#AR
	store4! &6
	jump! .L734.l_ocf9910
.L713.l_ocf9910:
	# CBRANCH
	load4! &1 	#X1
	push! 16190
	xor
	push! 1
	lt_u
	jump_zero! .L717.l_ocf9910
	# END CBRANCH
	push! 0
	push! 0
	push! 0
	call! adler32
	store8! &3

	set_sp! &2
	load4! &7
	load8! &7
	load8! &2 	#AR
	call! adler32
	store8! &3

	set_sp! &2
	load8! &3 	#X3
	add! 32
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ
	load8! &1 	#AR
	xor
	jump_zero! .L717.l_ocf9910
	# END CBRANCH
	jump! .L736.l_ocf9910
.L721.l_ocf9910:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &6
	jump! .L734.l_ocf9910
.L723.l_ocf9910:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &6
	jump! .L734.l_ocf9910
.L718.l_ocf9910:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &6
	jump! .L734.l_ocf9910
.L719.l_ocf9910:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &6
	jump! .L734.l_ocf9910
.L720.l_ocf9910:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &6
	jump! .L734.l_ocf9910
.L735.l_ocf9910:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &6
	jump! .L734.l_ocf9910
.L736.l_ocf9910:
	push! -3
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &6
	jump! .L734.l_ocf9910
.L737.l_ocf9910:
	push! 16210
	load8! &4 	#X3
	add! 8
	store4
	#
	push! -4
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &6
.L734.l_ocf9910:

	# epilogue
	set_sp! &4
	return

# FUNCTION ENDS:inflateSetDictionary

	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole pop+cmprev
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole redundant blockage insn
	#peephole pop+block+cmp

# FUNCTION BEGINS:inflateGetHeader
	EXPORT	inflateGetHeader
inflateGetHeader:
	# prologue (3 GPRs)
	push! 0
	push! 0
	push! 0

	load8! &4
	store8! &1 	#AR
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L740.l_ocf9910
	# END CBRANCH
	load8! &0 	#AR
	add! 64
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L741.l_ocf9910
	# END CBRANCH
	load8! &0 	#AR
	add! 72
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L742.l_ocf9910
	# END CBRANCH
	load8! &0 	#AR
	add! 56
	load8
	#
	store8! &2 	#X1
	# CBRANCH EQ0
	load8! &1 	#X1
	jump_zero! .L743.l_ocf9910
	# END CBRANCH
	load8! &1 	#X1
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ
	load8! &1 	#AR
	xor
	jump_zero! .L749.l_ocf9910
	# END CBRANCH
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
	jump! .L750.l_ocf9910
.L749.l_ocf9910:
	load8! &1 	#X1
	add! 8
	load4
	#
	add! -16180
	store8! &1 	#AR
	# CBRANCH
	push! 31
	load4! &1 	#AR
	lt_u
	not
	jump_zero! .L745.l_ocf9910
	# END CBRANCH
	load8! &1 	#X1
	add! 16
	load4
	#
	and! 0x2
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L746.l_ocf9910
	# END CBRANCH
	load8! &5
	load8! &2 	#X1
	add! 48
	store8
	#
	push! 0
	load8! &6
	add! 72
	store4
	#
	push! 0
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
	jump! .L750.l_ocf9910
.L743.l_ocf9910:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
	jump! .L750.l_ocf9910
.L745.l_ocf9910:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
	jump! .L750.l_ocf9910
.L740.l_ocf9910:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
	jump! .L750.l_ocf9910
.L741.l_ocf9910:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
	jump! .L750.l_ocf9910
.L742.l_ocf9910:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
	jump! .L750.l_ocf9910
.L746.l_ocf9910:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
.L750.l_ocf9910:

	# epilogue
	set_sp! &3
	return

# FUNCTION ENDS:inflateGetHeader

	#peephole move_dead
	#peephole move+push+sub
	#peephole 1
	#peephole pop+push+commut(di)
	#peephole 1
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move+push+sub
	#peephole 1
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole zero_extend
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+ind push
	#peephole zero_extend
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+ind push
	#peephole zero_extend
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole nop+set
	#peephole 1
	#peephole nop+set
	#peephole 1
	#peephole 1
	#peephole nop+set
	#peephole 1
	#peephole move
	#peephole move+move(allmodes x allmodes)
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole move_dead
	#peephole 1
	#peephole pop+cmprev
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+pushdi
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+pushsp+plus+plus
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole pop+pushsp+plus+plus
	#peephole pop+block+cmp
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole pop+block+cmp
	#peephole move
	#peephole pop+block+cmp
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push

# FUNCTION BEGINS:inflateSync
	EXPORT	inflateSync
inflateSync:
	# prologue (11 GPRs)

	set_sp! &-12

	load8! &13
	store8! &4 	#X3
	# CBRANCH EQ0
	load8! &3 	#X3
	jump_zero! .L782.l_ocf9910
	# END CBRANCH
	load8! &3 	#X3
	add! 64
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L783.l_ocf9910
	# END CBRANCH
	load8! &3 	#X3
	add! 72
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L784.l_ocf9910
	# END CBRANCH
	load8! &3 	#X3
	add! 56
	load8
	#
	store8! &11 	#X10
	# CBRANCH EQ0
	load8! &10 	#X10
	jump_zero! .L785.l_ocf9910
	# END CBRANCH
	load8! &10 	#X10
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ
	load8! &4 	#X3
	xor
	jump_zero! .L804.l_ocf9910
	# END CBRANCH
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &14
	jump! .L805.l_ocf9910
.L804.l_ocf9910:
	load8! &10 	#X10
	add! 8
	load4
	#
	store8! &1 	#AR
	load8! &0 	#AR
	add! -16180
	store8! &2 	#X1
	# CBRANCH
	push! 31
	load4! &2 	#X1
	lt_u
	not
	jump_zero! .L787.l_ocf9910
	# END CBRANCH
	load8! &3 	#X3
	add! 8
	load4
	#
	store8! &10 	#X9
	# CBRANCH EQ0
	load4! &9 	#X9
	jump_not_zero! .L753.l_ocf9910
	# END CBRANCH
	load8! &10 	#X10
	add! 88
	load4
	#
	store8! &2 	#X1
	# CBRANCH
	push! 7
	load4! &2 	#X1
	lt_u
	jump_zero! .L806.l_ocf9910
	# END CBRANCH
	load8! &3 	#X3
	load8
	#
	store8! &8 	#X7
	# CBRANCH EQ
	load4! &0 	#AR
	push! 16211
	xor
	jump_zero! .L807.l_ocf9910
	# END CBRANCH
	push! 16211
	load8! &11 	#X10
	add! 8
	store4
	#
	load8! &10 	#X10
	add! 80
	load8
	#
	store8! &3 	#X2
	load8! &1 	#X1
	and! 0x7
	and! 0xffffffff
	pow2
	load8! &3 	#X2
	mult
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &11 	#X10
	add! 80
	store8
	#
	load8! &1 	#X1
	and! 0xfffffffffffffff8
	store8! &3 	#X2
	load4! &2 	#X2
	load8! &11 	#X10
	add! 88
	store4
	#
.L755.l_ocf9910:
	load1! &0 	#AR
	store1! &12
	load8! &0 	#AR
	shift_ru! 8
	store8! &2 	#X1
	load8! &2 	#X2
	add! -8
	store8! &5 	#X4
	# CBRANCH
	push! 7
	load4! &5 	#X4
	lt_u
	jump_zero! .L758.l_ocf9910
	# END CBRANCH
	load1! &1 	#X1
	store1! (+ &0 97)
	load8! &0 	#AR
	shift_ru! 16
	store8! &2 	#X1
	load8! &2 	#X2
	add! -16
	store8! &6 	#X5
	# CBRANCH
	push! 7
	load4! &6 	#X5
	lt_u
	jump_zero! .L758.l_ocf9910
	# END CBRANCH
	load1! &1 	#X1
	store1! (+ &0 98)
	load8! &0 	#AR
	shift_ru! 24
	store8! &2 	#X1
	load8! &2 	#X2
	add! -24
	store8! &3 	#X2
	# CBRANCH
	push! 7
	load4! &3 	#X2
	lt_u
	jump_zero! .L758.l_ocf9910
	# END CBRANCH
	load1! &1 	#X1
	store1! (+ &0 99)
	load8! &0 	#AR
	shift_ru! 32
	store8! &2 	#X1
.L758.l_ocf9910:
	load4! &4 	#X4
	shift_ru! 3
	add! 1
	store8! &7 	#X6
	load8! &1 	#X1
	load8! &11 	#X10
	add! 80
	store8
	#
	push! 0
	load8! &11 	#X10
	add! 88
	store4
	#
	push! 0
	store8! &1 	#AR
	push! 0
	store8! &2 	#X1
.L766.l_ocf9910:
	load4! &1 	#X1
	# debug msg:pop+pushsp+plus+plus---
	push! &0
	add! 96
	add
	load1
	store8! &3 	#X2
	load1! &2 	#X2
	store8! &5 	#X4
	# CBRANCH
	push! 1
	load4! &1 	#AR
	lt_u
	jump_zero! .L764.l_ocf9910
	# END CBRANCH
	push! 255
	store8! &6 	#X5
	load8! &1 	#X1
	add! 1
	store8! &2 	#X1
	# CBRANCH EQ
	load4! &5 	#X5
	load4! &5 	#X4
	xor
	jump_zero! .L808.l_ocf9910
	# END CBRANCH
.L760.l_ocf9910:
	# CBRANCH EQ0
	load1! &2 	#X2
	jump_zero! .L762.l_ocf9910
	# END CBRANCH
	# CBRANCH
	load4! &1 	#X1
	load4! &7 	#X6
	lt_u
	jump_zero! .L763.l_ocf9910
	# END CBRANCH
	load4! &1 	#X1
	# debug msg:pop+pushsp+plus+plus---
	push! &0
	add! 96
	add
	load1
	store8! &3 	#X2
	load1! &2 	#X2
	store8! &5 	#X4
	push! 0
	store8! &1 	#AR
.L764.l_ocf9910:
	push! 0
	store8! &6 	#X5
	load8! &1 	#X1
	add! 1
	store8! &2 	#X1
	# CBRANCH
	load4! &5 	#X5
	load4! &5 	#X4
	xor
	push! 1
	lt_u
	jump_zero! .L760.l_ocf9910
	# END CBRANCH
.L808.l_ocf9910:
	load8! &0 	#AR
	add! 1
	store8! &1 	#AR
.L761.l_ocf9910:
	# CBRANCH
	load4! &1 	#X1
	load4! &7 	#X6
	lt_u
	jump_zero! .L765.l_ocf9910
	# END CBRANCH
	# CBRANCH
	load4! &0 	#AR
	push! 4
	xor
	push! 1
	lt_u
	jump_zero! .L766.l_ocf9910
	# END CBRANCH
.L765.l_ocf9910:
	load4! &0 	#AR
	load8! &11 	#X10
	add! 140
	store4
	#
	load8! &3 	#X3
	add! 8
	load4
	#
	store8! &10 	#X9
	# CBRANCH EQ0
	load4! &9 	#X9
	jump_zero! .L791.l_ocf9910
	# END CBRANCH
	# CBRANCH
	push! 3
	load4! &1 	#AR
	lt_u
	not
	jump_zero! .L792.l_ocf9910
	# END CBRANCH
.L756.l_ocf9910:
	push! 0
	store8! &2 	#X1
.L774.l_ocf9910:
	load4! &1 	#X1
	load8! &8 	#X7
	add
	load1
	store8! &3 	#X2
	load1! &2 	#X2
	store8! &6 	#X5
	# CBRANCH
	push! 1
	load4! &1 	#AR
	lt_u
	jump_zero! .L773.l_ocf9910
	# END CBRANCH
	push! 255
	store8! &7 	#X6
	load8! &1 	#X1
	add! 1
	store8! &2 	#X1
	load4! &1 	#X1
	store8! &5 	#X4
	load8! &7 	#X7
	load8! &5 	#X4
	add
	store8! &9 	#X8
	# CBRANCH EQ
	load4! &6 	#X6
	load4! &6 	#X5
	xor
	jump_zero! .L809.l_ocf9910
	# END CBRANCH
.L769.l_ocf9910:
	# CBRANCH EQ0
	load1! &2 	#X2
	jump_zero! .L771.l_ocf9910
	# END CBRANCH
	# CBRANCH
	load4! &1 	#X1
	load4! &10 	#X9
	lt_u
	jump_zero! .L772.l_ocf9910
	# END CBRANCH
	load8! &8 	#X8
	load1
	#
	store8! &3 	#X2
	load1! &2 	#X2
	store8! &6 	#X5
	push! 0
	store8! &1 	#AR
.L773.l_ocf9910:
	push! 0
	store8! &7 	#X6
	load8! &1 	#X1
	add! 1
	store8! &2 	#X1
	load4! &1 	#X1
	store8! &5 	#X4
	load8! &7 	#X7
	load8! &5 	#X4
	add
	store8! &9 	#X8
	# CBRANCH
	load4! &6 	#X6
	load4! &6 	#X5
	xor
	push! 1
	lt_u
	jump_zero! .L769.l_ocf9910
	# END CBRANCH
.L809.l_ocf9910:
	load8! &0 	#AR
	add! 1
	store8! &1 	#AR
	# CBRANCH
	load4! &1 	#X1
	load4! &10 	#X9
	lt_u
	jump_zero! .L767.l_ocf9910
	# END CBRANCH
.L810.l_ocf9910:
	# CBRANCH
	load4! &0 	#AR
	push! 4
	xor
	push! 1
	lt_u
	jump_zero! .L774.l_ocf9910
	# END CBRANCH
	push! 4
	load8! &11 	#X10
	add! 140
	store4
	#
	load8! &3 	#X3
	add! 8
	load4
	#
	store8! &3 	#X2
	load8! &1 	#X1
	load8! &3 	#X2
	sub
	neg
	load8! &4 	#X3
	add! 8
	store4
	#
	load8! &8 	#X8
	load8! &4 	#X3
	store8
	#
	load8! &3 	#X3
	add! 16
	load8
	#
	load8! &5 	#X4
	add
	store8! &3 	#X2
	load8! &2 	#X2
	load8! &4 	#X3
	add! 16
	store8
	#
.L781.l_ocf9910:
	load8! &3 	#X3
	add! 40
	load8
	#
	store8! &5 	#X4
	load8! &3 	#X3
	call! inflateReset
	store8! &1

	load8! &2 	#X2
	load8! &4 	#X3
	add! 16
	store8
	#
	load8! &4 	#X4
	load8! &4 	#X3
	add! 40
	store8
	#
	push! 16191
	load8! &11 	#X10
	add! 8
	store4
	#
	push! 0
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &14
	jump! .L805.l_ocf9910
.L771.l_ocf9910:
	push! 4
	load8! &1 	#AR
	sub
	store8! &1 	#AR
	# CBRANCH
	load4! &1 	#X1
	load4! &10 	#X9
	lt_u
	not
	jump_zero! .L810.l_ocf9910
	# END CBRANCH
.L767.l_ocf9910:
	load4! &0 	#AR
	load8! &11 	#X10
	add! 140
	store4
	#
	load8! &3 	#X3
	add! 8
	load4
	#
	load8! &2 	#X1
	sub
	load8! &4 	#X3
	add! 8
	store4
	#
	load8! &8 	#X8
	load8! &4 	#X3
	store8
	#
	load8! &3 	#X3
	add! 16
	load8
	#
	load8! &5 	#X4
	add
	store8! &3 	#X2
	load8! &2 	#X2
	load8! &4 	#X3
	add! 16
	store8
	#
	# CBRANCH EQ
	load4! &0 	#AR
	push! 4
	xor
	jump_zero! .L781.l_ocf9910
	# END CBRANCH
.L794.l_ocf9910:
	push! -3
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &14
	jump! .L805.l_ocf9910
.L762.l_ocf9910:
	push! 4
	load8! &1 	#AR
	sub
	store8! &1 	#AR
	jump! .L761.l_ocf9910
.L753.l_ocf9910:
	load8! &3 	#X3
	load8
	#
	store8! &8 	#X7
	# CBRANCH
	load4! &0 	#AR
	push! 16211
	xor
	push! 1
	lt_u
	jump_zero! .L811.l_ocf9910
	# END CBRANCH
	load8! &10 	#X10
	add! 140
	load4
	#
	store8! &1 	#AR
	# CBRANCH
	push! 3
	load4! &1 	#AR
	lt_u
	jump_zero! .L756.l_ocf9910
	# END CBRANCH
	jump! .L792.l_ocf9910
.L811.l_ocf9910:
	load8! &10 	#X10
	add! 88
	load4
	#
	store8! &2 	#X1
	push! 16211
	load8! &11 	#X10
	add! 8
	store4
	#
	load8! &10 	#X10
	add! 80
	load8
	#
	store8! &3 	#X2
	load8! &1 	#X1
	and! 0x7
	and! 0xffffffff
	pow2
	load8! &3 	#X2
	mult
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &11 	#X10
	add! 80
	store8
	#
	load8! &1 	#X1
	and! 0xfffffffffffffff8
	store8! &3 	#X2
	load4! &2 	#X2
	load8! &11 	#X10
	add! 88
	store4
	#
	# CBRANCH
	push! 7
	load4! &3 	#X2
	lt_u
	not
	jump_zero! .L755.l_ocf9910
	# END CBRANCH
.L763.l_ocf9910:
	push! 0
	load8! &11 	#X10
	add! 140
	store4
	#
	load8! &3 	#X3
	add! 8
	load4
	#
	store8! &10 	#X9
	push! 0
	store8! &1 	#AR
	# CBRANCH EQ0
	load4! &9 	#X9
	jump_not_zero! .L756.l_ocf9910
	# END CBRANCH
	push! 0
	load8! &11 	#X10
	add! 140
	store4
	#
	load8! &3 	#X3
	add! 8
	load4
	#
	load8! &4 	#X3
	add! 8
	store4
	#
	load8! &7 	#X7
	load8! &4 	#X3
	store8
	#
	load8! &3 	#X3
	add! 16
	load8
	#
	load8! &4 	#X3
	add! 16
	store8
	#
	push! -3
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &14
	jump! .L805.l_ocf9910
.L785.l_ocf9910:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &14
	jump! .L805.l_ocf9910
.L787.l_ocf9910:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &14
	jump! .L805.l_ocf9910
.L792.l_ocf9910:
	load8! &7 	#X7
	store8! &9 	#X8
	push! 0
	store8! &5 	#X4
	push! 0
	store8! &2 	#X1
	load4! &0 	#AR
	load8! &11 	#X10
	add! 140
	store4
	#
	load8! &3 	#X3
	add! 8
	load4
	#
	load8! &2 	#X1
	sub
	load8! &4 	#X3
	add! 8
	store4
	#
	load8! &8 	#X8
	load8! &4 	#X3
	store8
	#
	load8! &3 	#X3
	add! 16
	load8
	#
	load8! &5 	#X4
	add
	store8! &3 	#X2
	load8! &2 	#X2
	load8! &4 	#X3
	add! 16
	store8
	#
	# CBRANCH EQ
	load4! &0 	#AR
	push! 4
	xor
	jump_zero! .L781.l_ocf9910
	# END CBRANCH
	jump! .L794.l_ocf9910
.L782.l_ocf9910:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &14
	jump! .L805.l_ocf9910
.L783.l_ocf9910:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &14
	jump! .L805.l_ocf9910
.L784.l_ocf9910:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &14
	jump! .L805.l_ocf9910
.L807.l_ocf9910:
	load8! &10 	#X10
	add! 140
	load4
	#
	store8! &1 	#AR
	load8! &7 	#X7
	store8! &9 	#X8
	push! 0
	store8! &2 	#X1
	push! 0
	store8! &5 	#X4
	load4! &0 	#AR
	load8! &11 	#X10
	add! 140
	store4
	#
	load8! &3 	#X3
	add! 8
	load4
	#
	load8! &2 	#X1
	sub
	load8! &4 	#X3
	add! 8
	store4
	#
	load8! &8 	#X8
	load8! &4 	#X3
	store8
	#
	load8! &3 	#X3
	add! 16
	load8
	#
	load8! &5 	#X4
	add
	store8! &3 	#X2
	load8! &2 	#X2
	load8! &4 	#X3
	add! 16
	store8
	#
	# CBRANCH EQ
	load4! &0 	#AR
	push! 4
	xor
	jump_zero! .L781.l_ocf9910
	# END CBRANCH
	jump! .L794.l_ocf9910
.L772.l_ocf9910:
	push! 0
	load8! &11 	#X10
	add! 140
	store4
	#
	load8! &3 	#X3
	add! 8
	load4
	#
	store8! &3 	#X2
	load8! &1 	#X1
	load8! &3 	#X2
	sub
	neg
	load8! &4 	#X3
	add! 8
	store4
	#
	load8! &8 	#X8
	load8! &4 	#X3
	store8
	#
	load8! &3 	#X3
	add! 16
	load8
	#
	load8! &5 	#X4
	add
	load8! &4 	#X3
	add! 16
	store8
	#
	push! -3
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &14
	jump! .L805.l_ocf9910
.L806.l_ocf9910:
	push! -5
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &14
	jump! .L805.l_ocf9910
.L791.l_ocf9910:
	load8! &7 	#X7
	store8! &9 	#X8
	push! 0
	store8! &2 	#X1
	push! 0
	store8! &5 	#X4
	load4! &0 	#AR
	load8! &11 	#X10
	add! 140
	store4
	#
	load8! &3 	#X3
	add! 8
	load4
	#
	load8! &2 	#X1
	sub
	load8! &4 	#X3
	add! 8
	store4
	#
	load8! &8 	#X8
	load8! &4 	#X3
	store8
	#
	load8! &3 	#X3
	add! 16
	load8
	#
	load8! &5 	#X4
	add
	store8! &3 	#X2
	load8! &2 	#X2
	load8! &4 	#X3
	add! 16
	store8
	#
	# CBRANCH EQ
	load4! &0 	#AR
	push! 4
	xor
	jump_zero! .L781.l_ocf9910
	# END CBRANCH
	jump! .L794.l_ocf9910
.L805.l_ocf9910:

	# epilogue
	set_sp! &12
	return

# FUNCTION ENDS:inflateSync

	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole pop+cmprev
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole popdi(deadreg)+push

# FUNCTION BEGINS:inflateSyncPoint
	EXPORT	inflateSyncPoint
inflateSyncPoint:
	# prologue (3 GPRs)
	push! 0
	push! 0
	push! 0

	load8! &4
	store8! &1 	#AR
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L814.l_ocf9910
	# END CBRANCH
	load8! &0 	#AR
	add! 64
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L815.l_ocf9910
	# END CBRANCH
	load8! &0 	#AR
	add! 72
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L816.l_ocf9910
	# END CBRANCH
	load8! &0 	#AR
	add! 56
	load8
	#
	store8! &2 	#X1
	# CBRANCH EQ0
	load8! &1 	#X1
	jump_zero! .L817.l_ocf9910
	# END CBRANCH
	load8! &1 	#X1
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ
	load8! &1 	#AR
	xor
	jump_zero! .L823.l_ocf9910
	# END CBRANCH
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
	jump! .L824.l_ocf9910
.L823.l_ocf9910:
	load8! &1 	#X1
	add! 8
	load4
	#
	store8! &1 	#AR
	load8! &0 	#AR
	add! -16180
	store8! &3 	#X2
	# CBRANCH
	push! 31
	load4! &3 	#X2
	lt_u
	not
	jump_zero! .L819.l_ocf9910
	# END CBRANCH
	# CBRANCH EQ
	load4! &0 	#AR
	push! 16193
	xor
	jump_zero! .L825.l_ocf9910
	# END CBRANCH
	push! 0
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
	jump! .L824.l_ocf9910
.L817.l_ocf9910:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
	jump! .L824.l_ocf9910
.L819.l_ocf9910:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
	jump! .L824.l_ocf9910
.L825.l_ocf9910:
	load8! &1 	#X1
	add! 88
	load4
	#
	and! 0x0ffffffff
	add! -1
	shift_ru! 63
	and! 0xff
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
	jump! .L824.l_ocf9910
.L814.l_ocf9910:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
	jump! .L824.l_ocf9910
.L815.l_ocf9910:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
	jump! .L824.l_ocf9910
.L816.l_ocf9910:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
.L824.l_ocf9910:

	# epilogue
	set_sp! &3
	return

# FUNCTION ENDS:inflateSyncPoint

	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop+cmp
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole pop+cmprev
	#peephole pop+cmp
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole zero_extend
	#peephole zero_extend
	#peephole popdi(deadreg)+push

# FUNCTION BEGINS:inflateCopy
	EXPORT	inflateCopy
inflateCopy:
	# prologue (8 GPRs)

	set_sp! &-8

	load8! &9
	store8! &6 	#X5
	load8! &10
	store8! &3 	#X2
	# CBRANCH EQ0
	load8! &2 	#X2
	jump_zero! .L836.l_ocf9910
	# END CBRANCH
	load8! &2 	#X2
	add! 64
	load8
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L837.l_ocf9910
	# END CBRANCH
	load8! &2 	#X2
	add! 72
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L838.l_ocf9910
	# END CBRANCH
	load8! &2 	#X2
	add! 56
	load8
	#
	store8! &4 	#X3
	# CBRANCH EQ0
	load8! &3 	#X3
	jump_zero! .L839.l_ocf9910
	# END CBRANCH
	load8! &3 	#X3
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ
	load8! &3 	#X2
	xor
	jump_zero! .L852.l_ocf9910
	# END CBRANCH
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &10
	jump! .L853.l_ocf9910
.L852.l_ocf9910:
	load8! &3 	#X3
	add! 8
	load4
	#
	add! -16180
	store8! &2 	#X1
	# CBRANCH
	push! 31
	load4! &2 	#X1
	lt_u
	not
	jump_zero! .L841.l_ocf9910
	# END CBRANCH
	# CBRANCH EQ0
	load8! &5 	#X5
	jump_zero! .L842.l_ocf9910
	# END CBRANCH
	load8! &2 	#X2
	add! 80
	load8
	#
	store8! &2 	#X1
	push! 12936
	push! 1
	load8! &3 	#X1
	load8! &3 	#AR
	call
	store8! &3

	set_sp! &2
	load8! &0 	#AR
	store8! &5 	#X4
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L843.l_ocf9910
	# END CBRANCH
	load8! &3 	#X3
	add! 72
	load8
	#
	store8! &7 	#X6
	# CBRANCH EQ0
	load8! &6 	#X6
	jump_zero! .L828.l_ocf9910
	# END CBRANCH
	load8! &2 	#X2
	add! 64
	load8
	#
	store8! &1 	#AR
	load8! &3 	#X3
	add! 56
	load4
	#
	store8! &2 	#X1
	push! 1
	load8! &2 	#X1
	shift_l
	store8! &7 	#X6
	load8! &2 	#X2
	add! 80
	load8
	#
	store8! &2 	#X1
	push! 1
	load4! &7 	#X6
	load8! &3 	#X1
	load8! &3 	#AR
	call
	store8! &3

	set_sp! &2
	load8! &0 	#AR
	store8! &7 	#X6
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L854.l_ocf9910
	# END CBRANCH
	push! 112
	load8! &3 	#X2
	load8! &7 	#X5
	call! memcpy
	store8! &3

	set_sp! &2
	push! 12936
	load8! &4 	#X3
	load8! &6 	#X4
	call! memcpy
	store8! &3

	set_sp! &2
	load8! &5 	#X5
	load8! &5 	#X4
	store8
	#
	load8! &3 	#X3
	add! 104
	load8
	#
	store8! &2 	#X1
	load8! &3 	#X3
	add! 1368
	store8! &1 	#AR
	load8! &4 	#X4
	add! 1368
	store8! &3 	#X2
	# CBRANCH
	load8! &1 	#X1
	load8! &1 	#AR
	lt_u
	jump_zero! .L833.l_ocf9910
	# END CBRANCH
	load8! &3 	#X3
	add! 144
	load8
	#
	load8! &1 	#AR
	sub
	load8! &3 	#X2
	add
	load8! &5 	#X4
	add! 144
	store8
	#
.L832.l_ocf9910:
	load8! &3 	#X3
	add! 56
	load4
	#
	store8! &1 	#AR
	push! 1
	load8! &1 	#AR
	shift_l
	and! 0xffffffff
	store8! &2 	#X1
	load8! &3 	#X3
	add! 72
	load8
	#
	store8! &1 	#AR
	load8! &1 	#X1
	load8! &1 	#AR
	load8! &8 	#X6
	call! memcpy
	store8! &3

	set_sp! &2
	load8! &6 	#X6
	load8! &5 	#X4
	add! 72
	store8
	#
	load8! &4 	#X4
	load8! &6 	#X5
	add! 56
	store8
	#
	push! 0
	store8! &1 	#AR
.L855.l_ocf9910:
	load4! &0 	#AR
	store4! &10
	jump! .L853.l_ocf9910
.L828.l_ocf9910:
	push! 112
	load8! &3 	#X2
	load8! &7 	#X5
	call! memcpy
	store8! &3

	set_sp! &2
	push! 12936
	load8! &4 	#X3
	load8! &6 	#X4
	call! memcpy
	store8! &3

	set_sp! &2
	load8! &5 	#X5
	load8! &5 	#X4
	store8
	#
	load8! &3 	#X3
	add! 104
	load8
	#
	store8! &2 	#X1
	load8! &3 	#X3
	add! 1368
	store8! &1 	#AR
	load8! &4 	#X4
	add! 1368
	store8! &3 	#X2
	# CBRANCH
	load8! &1 	#X1
	load8! &1 	#AR
	lt_u
	not
	jump_zero! .L848.l_ocf9910
	# END CBRANCH
.L833.l_ocf9910:
	load8! &3 	#X3
	add! 12912
	# CBRANCH - peep (modesize=8)
	load8! &2 	#X1
	lt_u
	not
	jump_zero! .L830.l_ocf9910
	# END CBRANCH
	load8! &1 	#X1
	load8! &1 	#AR
	sub
	load8! &3 	#X2
	add
	load8! &5 	#X4
	add! 104
	store8
	#
	load8! &3 	#X3
	add! 112
	load8
	#
	load8! &1 	#AR
	sub
	load8! &3 	#X2
	add
	load8! &5 	#X4
	add! 112
	store8
	#
.L830.l_ocf9910:
	load8! &3 	#X3
	add! 144
	load8
	#
	load8! &1 	#AR
	sub
	load8! &3 	#X2
	add
	load8! &5 	#X4
	add! 144
	store8
	#
	# CBRANCH EQ0
	load8! &6 	#X6
	jump_not_zero! .L832.l_ocf9910
	# END CBRANCH
	load8! &6 	#X6
	load8! &5 	#X4
	add! 72
	store8
	#
	load8! &4 	#X4
	load8! &6 	#X5
	add! 56
	store8
	#
	push! 0
	store8! &1 	#AR
	jump! .L855.l_ocf9910
.L839.l_ocf9910:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &10
	jump! .L853.l_ocf9910
.L841.l_ocf9910:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &10
	jump! .L853.l_ocf9910
.L836.l_ocf9910:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &10
	jump! .L853.l_ocf9910
.L837.l_ocf9910:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &10
	jump! .L853.l_ocf9910
.L838.l_ocf9910:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &10
	jump! .L853.l_ocf9910
.L848.l_ocf9910:
	load8! &3 	#X3
	add! 144
	load8
	#
	load8! &1 	#AR
	sub
	load8! &3 	#X2
	add
	load8! &5 	#X4
	add! 144
	store8
	#
	load8! &6 	#X6
	load8! &5 	#X4
	add! 72
	store8
	#
	load8! &4 	#X4
	load8! &6 	#X5
	add! 56
	store8
	#
	push! 0
	store8! &1 	#AR
	jump! .L855.l_ocf9910
.L842.l_ocf9910:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &10
	jump! .L853.l_ocf9910
.L843.l_ocf9910:
	push! -4
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &10
	jump! .L853.l_ocf9910
.L854.l_ocf9910:
	load8! &2 	#X2
	add! 72
	load8
	#
	store8! &1 	#AR
	load8! &2 	#X2
	add! 80
	load8
	#
	store8! &2 	#X1
	load8! &4 	#X4
	load8! &2 	#X1
	load8! &2 	#AR
	call
	set_sp! (+ &0 16)
	

	push! -4
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &10
.L853.l_ocf9910:

	# epilogue
	set_sp! &8
	return

# FUNCTION ENDS:inflateCopy

	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole pop+cmprev
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole redundant blockage insn
	#peephole pop+block+cmp

# FUNCTION BEGINS:inflateUndermine
	EXPORT	inflateUndermine
inflateUndermine:
	# prologue (3 GPRs)
	push! 0
	push! 0
	push! 0

	load8! &4
	store8! &1 	#AR
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L858.l_ocf9910
	# END CBRANCH
	load8! &0 	#AR
	add! 64
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L859.l_ocf9910
	# END CBRANCH
	load8! &0 	#AR
	add! 72
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L860.l_ocf9910
	# END CBRANCH
	load8! &0 	#AR
	add! 56
	load8
	#
	store8! &2 	#X1
	# CBRANCH EQ0
	load8! &1 	#X1
	jump_zero! .L861.l_ocf9910
	# END CBRANCH
	load8! &1 	#X1
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ
	load8! &1 	#AR
	xor
	jump_zero! .L866.l_ocf9910
	# END CBRANCH
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
	jump! .L867.l_ocf9910
.L866.l_ocf9910:
	load8! &1 	#X1
	add! 8
	load4
	#
	add! -16180
	store8! &1 	#AR
	# CBRANCH
	push! 31
	load4! &1 	#AR
	lt_u
	not
	jump_zero! .L863.l_ocf9910
	# END CBRANCH
	push! 1
	load8! &2 	#X1
	add! 12920
	store4
	#
	push! -3
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
	jump! .L867.l_ocf9910
.L861.l_ocf9910:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
	jump! .L867.l_ocf9910
.L863.l_ocf9910:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
	jump! .L867.l_ocf9910
.L858.l_ocf9910:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
	jump! .L867.l_ocf9910
.L859.l_ocf9910:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
	jump! .L867.l_ocf9910
.L860.l_ocf9910:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
.L867.l_ocf9910:

	# epilogue
	set_sp! &3
	return

# FUNCTION ENDS:inflateUndermine

	#peephole 1
	#peephole 1
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole pop+cmprev
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole and+popsi

# FUNCTION BEGINS:inflateValidate
	EXPORT	inflateValidate
inflateValidate:
	# prologue (3 GPRs)
	push! 0
	push! 0
	push! 0

	load8! &4
	store8! &1 	#AR
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L871.l_ocf9910
	# END CBRANCH
	load8! &0 	#AR
	add! 64
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L872.l_ocf9910
	# END CBRANCH
	load8! &0 	#AR
	add! 72
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L873.l_ocf9910
	# END CBRANCH
	load8! &0 	#AR
	add! 56
	load8
	#
	store8! &2 	#X1
	# CBRANCH EQ0
	load8! &1 	#X1
	jump_zero! .L874.l_ocf9910
	# END CBRANCH
	load8! &1 	#X1
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ
	load8! &1 	#AR
	xor
	jump_zero! .L879.l_ocf9910
	# END CBRANCH
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
	jump! .L880.l_ocf9910
.L879.l_ocf9910:
	load8! &1 	#X1
	add! 8
	load4
	#
	add! -16180
	store8! &1 	#AR
	# CBRANCH
	push! 31
	load4! &1 	#AR
	lt_u
	not
	jump_zero! .L876.l_ocf9910
	# END CBRANCH
	load8! &1 	#X1
	add! 16
	load4
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load4! &5
	jump_zero! .L870.l_ocf9910
	# END CBRANCH
	load8! &0 	#AR
	or! 0x4
	load8! &2 	#X1
	add! 16
	store4
	#
	push! 0
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
	jump! .L880.l_ocf9910
.L870.l_ocf9910:
	load8! &0 	#AR
	and! 0xfffffffffffffffb
	load8! &2 	#X1
	add! 16
	store4
	#
	push! 0
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
	jump! .L880.l_ocf9910
.L874.l_ocf9910:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
	jump! .L880.l_ocf9910
.L876.l_ocf9910:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
	jump! .L880.l_ocf9910
.L871.l_ocf9910:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
	jump! .L880.l_ocf9910
.L872.l_ocf9910:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
	jump! .L880.l_ocf9910
.L873.l_ocf9910:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
.L880.l_ocf9910:

	# epilogue
	set_sp! &3
	return

# FUNCTION ENDS:inflateValidate

	#peephole pop(deadreg)+pushdi
	#peephole pop+push+sub
	#peephole 1
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole pop+cmprev
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole popdi(deadreg)+push

# FUNCTION BEGINS:inflateMark
	EXPORT	inflateMark
inflateMark:
	# prologue (3 GPRs)
	push! 0
	push! 0
	push! 0

	load8! &4
	store8! &1 	#AR
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L885.l_ocf9910
	# END CBRANCH
	load8! &0 	#AR
	add! 64
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L886.l_ocf9910
	# END CBRANCH
	load8! &0 	#AR
	add! 72
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L887.l_ocf9910
	# END CBRANCH
	load8! &0 	#AR
	add! 56
	load8
	#
	store8! &2 	#X1
	# CBRANCH EQ0
	load8! &1 	#X1
	jump_zero! .L888.l_ocf9910
	# END CBRANCH
	load8! &1 	#X1
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ
	load8! &1 	#AR
	xor
	jump_zero! .L893.l_ocf9910
	# END CBRANCH
	push! -65536
	store8! &1 	#AR
.L881.l_ocf9910:
	load8! &0 	#AR
	store8! &5
	jump! .L894.l_ocf9910
.L893.l_ocf9910:
	load8! &1 	#X1
	add! 8
	load4
	#
	store8! &3 	#X2
	load8! &2 	#X2
	add! -16180
	store8! &1 	#AR
	# CBRANCH
	push! 31
	load4! &1 	#AR
	lt_u
	not
	jump_zero! .L890.l_ocf9910
	# END CBRANCH
	load8! &1 	#X1
	add! 12924
	load4
	#
	sigx4
	shift_l! 16
	store8! &1 	#AR
	# CBRANCH EQ
	load4! &2 	#X2
	push! 16195
	xor
	jump_zero! .L895.l_ocf9910
	# END CBRANCH
	# CBRANCH
	load4! &2 	#X2
	push! 16204
	xor
	push! 1
	lt_u
	jump_zero! .L881.l_ocf9910
	# END CBRANCH
	load8! &1 	#X1
	add! 12928
	load4
	#
	store8! &3 	#X2
	load8! &1 	#X1
	add! 92
	load4
	#
	load8! &3 	#X2
	sub
	neg
	and! 0xffffffff
	load8! &1 	#AR
	add
	store8! &1 	#AR
	load8! &0 	#AR
	store8! &5
	jump! .L894.l_ocf9910
.L888.l_ocf9910:
	push! -65536
	store8! &1 	#AR
	load8! &0 	#AR
	store8! &5
	jump! .L894.l_ocf9910
.L890.l_ocf9910:
	push! -65536
	store8! &1 	#AR
	load8! &0 	#AR
	store8! &5
	jump! .L894.l_ocf9910
.L895.l_ocf9910:
	load8! &1 	#X1
	add! 92
	load4
	#
	and! 0x0ffffffff
	load8! &1 	#AR
	add
	store8! &1 	#AR
	load8! &0 	#AR
	store8! &5
	jump! .L894.l_ocf9910
.L885.l_ocf9910:
	push! -65536
	store8! &1 	#AR
	load8! &0 	#AR
	store8! &5
	jump! .L894.l_ocf9910
.L886.l_ocf9910:
	push! -65536
	store8! &1 	#AR
	load8! &0 	#AR
	store8! &5
	jump! .L894.l_ocf9910
.L887.l_ocf9910:
	push! -65536
	store8! &1 	#AR
	load8! &0 	#AR
	store8! &5
.L894.l_ocf9910:

	# epilogue
	set_sp! &3
	return

# FUNCTION ENDS:inflateMark

	#peephole pop+push+sub
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole pop+cmprev
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole redundant blockage insn
	#peephole pop+block+cmp

# FUNCTION BEGINS:inflateCodesUsed
	EXPORT	inflateCodesUsed
inflateCodesUsed:
	# prologue (3 GPRs)
	push! 0
	push! 0
	push! 0

	load8! &4
	store8! &1 	#AR
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L898.l_ocf9910
	# END CBRANCH
	load8! &0 	#AR
	add! 64
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L899.l_ocf9910
	# END CBRANCH
	load8! &0 	#AR
	add! 72
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L900.l_ocf9910
	# END CBRANCH
	load8! &0 	#AR
	add! 56
	load8
	#
	store8! &2 	#X1
	# CBRANCH EQ0
	load8! &1 	#X1
	jump_zero! .L901.l_ocf9910
	# END CBRANCH
	load8! &1 	#X1
	load8
	#
	# CBRANCH - peep (modesize=8)
	# - EQ
	load8! &1 	#AR
	xor
	jump_zero! .L906.l_ocf9910
	# END CBRANCH
	push! -1
	store8! &1 	#AR
	load8! &0 	#AR
	store8! &5
	jump! .L907.l_ocf9910
.L906.l_ocf9910:
	load8! &1 	#X1
	add! 8
	load4
	#
	add! -16180
	store8! &1 	#AR
	# CBRANCH
	push! 31
	load4! &1 	#AR
	lt_u
	not
	jump_zero! .L903.l_ocf9910
	# END CBRANCH
	load8! &1 	#X1
	add! 144
	load8
	#
	store8! &3 	#X2
	load8! &1 	#X1
	add! 1368
	load8! &3 	#X2
	sub
	neg
	shift_rs! 3
	store8! &1 	#AR
	load8! &0 	#AR
	store8! &5
	jump! .L907.l_ocf9910
.L901.l_ocf9910:
	push! -1
	store8! &1 	#AR
	load8! &0 	#AR
	store8! &5
	jump! .L907.l_ocf9910
.L903.l_ocf9910:
	push! -1
	store8! &1 	#AR
	load8! &0 	#AR
	store8! &5
	jump! .L907.l_ocf9910
.L898.l_ocf9910:
	push! -1
	store8! &1 	#AR
	load8! &0 	#AR
	store8! &5
	jump! .L907.l_ocf9910
.L899.l_ocf9910:
	push! -1
	store8! &1 	#AR
	load8! &0 	#AR
	store8! &5
	jump! .L907.l_ocf9910
.L900.l_ocf9910:
	push! -1
	store8! &1 	#AR
	load8! &0 	#AR
	store8! &5
.L907.l_ocf9910:

	# epilogue
	set_sp! &3
	return

# FUNCTION ENDS:inflateCodesUsed

.Li_distfix_3221.l_ocf9910:
	data1 [16]
	data1 [5]
	data2 [1]
	data4 [0]

	data1 [23]
	data1 [5]
	data2 [257]
	data4 [0]

	data1 [19]
	data1 [5]
	data2 [17]
	data4 [0]

	data1 [27]
	data1 [5]
	data2 [4097]
	data4 [0]

	data1 [17]
	data1 [5]
	data2 [5]
	data4 [0]

	data1 [25]
	data1 [5]
	data2 [1025]
	data4 [0]

	data1 [21]
	data1 [5]
	data2 [65]
	data4 [0]

	data1 [29]
	data1 [5]
	data2 [16385]
	data4 [0]

	data1 [16]
	data1 [5]
	data2 [3]
	data4 [0]

	data1 [24]
	data1 [5]
	data2 [513]
	data4 [0]

	data1 [20]
	data1 [5]
	data2 [33]
	data4 [0]

	data1 [28]
	data1 [5]
	data2 [8193]
	data4 [0]

	data1 [18]
	data1 [5]
	data2 [9]
	data4 [0]

	data1 [26]
	data1 [5]
	data2 [2049]
	data4 [0]

	data1 [22]
	data1 [5]
	data2 [129]
	data4 [0]

	data1 [64]
	data1 [5]
	data2 [0]
	data4 [0]

	data1 [16]
	data1 [5]
	data2 [2]
	data4 [0]

	data1 [23]
	data1 [5]
	data2 [385]
	data4 [0]

	data1 [19]
	data1 [5]
	data2 [25]
	data4 [0]

	data1 [27]
	data1 [5]
	data2 [6145]
	data4 [0]

	data1 [17]
	data1 [5]
	data2 [7]
	data4 [0]

	data1 [25]
	data1 [5]
	data2 [1537]
	data4 [0]

	data1 [21]
	data1 [5]
	data2 [97]
	data4 [0]

	data1 [29]
	data1 [5]
	data2 [24577]
	data4 [0]

	data1 [16]
	data1 [5]
	data2 [4]
	data4 [0]

	data1 [24]
	data1 [5]
	data2 [769]
	data4 [0]

	data1 [20]
	data1 [5]
	data2 [49]
	data4 [0]

	data1 [28]
	data1 [5]
	data2 [12289]
	data4 [0]

	data1 [18]
	data1 [5]
	data2 [13]
	data4 [0]

	data1 [26]
	data1 [5]
	data2 [3073]
	data4 [0]

	data1 [22]
	data1 [5]
	data2 [193]
	data4 [0]

	data1 [64]
	data1 [5]
	data2 [0]
	data4 [0]

.Li_lenfix_3220.l_ocf9910:
	data1 [96]
	data1 [7]
	data2 [0]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [80]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [16]
	data4 [0]

	data1 [20]
	data1 [8]
	data2 [115]
	data4 [0]

	data1 [18]
	data1 [7]
	data2 [31]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [112]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [48]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [192]
	data4 [0]

	data1 [16]
	data1 [7]
	data2 [10]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [96]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [32]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [160]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [0]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [128]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [64]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [224]
	data4 [0]

	data1 [16]
	data1 [7]
	data2 [6]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [88]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [24]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [144]
	data4 [0]

	data1 [19]
	data1 [7]
	data2 [59]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [120]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [56]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [208]
	data4 [0]

	data1 [17]
	data1 [7]
	data2 [17]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [104]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [40]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [176]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [8]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [136]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [72]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [240]
	data4 [0]

	data1 [16]
	data1 [7]
	data2 [4]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [84]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [20]
	data4 [0]

	data1 [21]
	data1 [8]
	data2 [227]
	data4 [0]

	data1 [19]
	data1 [7]
	data2 [43]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [116]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [52]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [200]
	data4 [0]

	data1 [17]
	data1 [7]
	data2 [13]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [100]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [36]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [168]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [4]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [132]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [68]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [232]
	data4 [0]

	data1 [16]
	data1 [7]
	data2 [8]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [92]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [28]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [152]
	data4 [0]

	data1 [20]
	data1 [7]
	data2 [83]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [124]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [60]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [216]
	data4 [0]

	data1 [18]
	data1 [7]
	data2 [23]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [108]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [44]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [184]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [12]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [140]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [76]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [248]
	data4 [0]

	data1 [16]
	data1 [7]
	data2 [3]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [82]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [18]
	data4 [0]

	data1 [21]
	data1 [8]
	data2 [163]
	data4 [0]

	data1 [19]
	data1 [7]
	data2 [35]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [114]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [50]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [196]
	data4 [0]

	data1 [17]
	data1 [7]
	data2 [11]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [98]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [34]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [164]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [2]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [130]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [66]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [228]
	data4 [0]

	data1 [16]
	data1 [7]
	data2 [7]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [90]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [26]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [148]
	data4 [0]

	data1 [20]
	data1 [7]
	data2 [67]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [122]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [58]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [212]
	data4 [0]

	data1 [18]
	data1 [7]
	data2 [19]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [106]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [42]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [180]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [10]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [138]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [74]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [244]
	data4 [0]

	data1 [16]
	data1 [7]
	data2 [5]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [86]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [22]
	data4 [0]

	data1 [64]
	data1 [8]
	data2 [0]
	data4 [0]

	data1 [19]
	data1 [7]
	data2 [51]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [118]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [54]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [204]
	data4 [0]

	data1 [17]
	data1 [7]
	data2 [15]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [102]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [38]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [172]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [6]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [134]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [70]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [236]
	data4 [0]

	data1 [16]
	data1 [7]
	data2 [9]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [94]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [30]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [156]
	data4 [0]

	data1 [20]
	data1 [7]
	data2 [99]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [126]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [62]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [220]
	data4 [0]

	data1 [18]
	data1 [7]
	data2 [27]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [110]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [46]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [188]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [14]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [142]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [78]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [252]
	data4 [0]

	data1 [96]
	data1 [7]
	data2 [0]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [81]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [17]
	data4 [0]

	data1 [21]
	data1 [8]
	data2 [131]
	data4 [0]

	data1 [18]
	data1 [7]
	data2 [31]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [113]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [49]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [194]
	data4 [0]

	data1 [16]
	data1 [7]
	data2 [10]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [97]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [33]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [162]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [1]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [129]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [65]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [226]
	data4 [0]

	data1 [16]
	data1 [7]
	data2 [6]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [89]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [25]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [146]
	data4 [0]

	data1 [19]
	data1 [7]
	data2 [59]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [121]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [57]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [210]
	data4 [0]

	data1 [17]
	data1 [7]
	data2 [17]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [105]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [41]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [178]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [9]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [137]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [73]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [242]
	data4 [0]

	data1 [16]
	data1 [7]
	data2 [4]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [85]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [21]
	data4 [0]

	data1 [16]
	data1 [8]
	data2 [258]
	data4 [0]

	data1 [19]
	data1 [7]
	data2 [43]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [117]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [53]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [202]
	data4 [0]

	data1 [17]
	data1 [7]
	data2 [13]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [101]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [37]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [170]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [5]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [133]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [69]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [234]
	data4 [0]

	data1 [16]
	data1 [7]
	data2 [8]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [93]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [29]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [154]
	data4 [0]

	data1 [20]
	data1 [7]
	data2 [83]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [125]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [61]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [218]
	data4 [0]

	data1 [18]
	data1 [7]
	data2 [23]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [109]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [45]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [186]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [13]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [141]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [77]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [250]
	data4 [0]

	data1 [16]
	data1 [7]
	data2 [3]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [83]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [19]
	data4 [0]

	data1 [21]
	data1 [8]
	data2 [195]
	data4 [0]

	data1 [19]
	data1 [7]
	data2 [35]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [115]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [51]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [198]
	data4 [0]

	data1 [17]
	data1 [7]
	data2 [11]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [99]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [35]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [166]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [3]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [131]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [67]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [230]
	data4 [0]

	data1 [16]
	data1 [7]
	data2 [7]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [91]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [27]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [150]
	data4 [0]

	data1 [20]
	data1 [7]
	data2 [67]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [123]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [59]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [214]
	data4 [0]

	data1 [18]
	data1 [7]
	data2 [19]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [107]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [43]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [182]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [11]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [139]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [75]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [246]
	data4 [0]

	data1 [16]
	data1 [7]
	data2 [5]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [87]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [23]
	data4 [0]

	data1 [64]
	data1 [8]
	data2 [0]
	data4 [0]

	data1 [19]
	data1 [7]
	data2 [51]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [119]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [55]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [206]
	data4 [0]

	data1 [17]
	data1 [7]
	data2 [15]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [103]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [39]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [174]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [7]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [135]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [71]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [238]
	data4 [0]

	data1 [16]
	data1 [7]
	data2 [9]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [95]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [31]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [158]
	data4 [0]

	data1 [20]
	data1 [7]
	data2 [99]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [127]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [63]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [222]
	data4 [0]

	data1 [18]
	data1 [7]
	data2 [27]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [111]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [47]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [190]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [15]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [143]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [79]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [254]
	data4 [0]

	data1 [96]
	data1 [7]
	data2 [0]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [80]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [16]
	data4 [0]

	data1 [20]
	data1 [8]
	data2 [115]
	data4 [0]

	data1 [18]
	data1 [7]
	data2 [31]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [112]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [48]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [193]
	data4 [0]

	data1 [16]
	data1 [7]
	data2 [10]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [96]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [32]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [161]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [0]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [128]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [64]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [225]
	data4 [0]

	data1 [16]
	data1 [7]
	data2 [6]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [88]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [24]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [145]
	data4 [0]

	data1 [19]
	data1 [7]
	data2 [59]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [120]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [56]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [209]
	data4 [0]

	data1 [17]
	data1 [7]
	data2 [17]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [104]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [40]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [177]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [8]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [136]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [72]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [241]
	data4 [0]

	data1 [16]
	data1 [7]
	data2 [4]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [84]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [20]
	data4 [0]

	data1 [21]
	data1 [8]
	data2 [227]
	data4 [0]

	data1 [19]
	data1 [7]
	data2 [43]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [116]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [52]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [201]
	data4 [0]

	data1 [17]
	data1 [7]
	data2 [13]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [100]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [36]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [169]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [4]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [132]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [68]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [233]
	data4 [0]

	data1 [16]
	data1 [7]
	data2 [8]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [92]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [28]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [153]
	data4 [0]

	data1 [20]
	data1 [7]
	data2 [83]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [124]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [60]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [217]
	data4 [0]

	data1 [18]
	data1 [7]
	data2 [23]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [108]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [44]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [185]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [12]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [140]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [76]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [249]
	data4 [0]

	data1 [16]
	data1 [7]
	data2 [3]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [82]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [18]
	data4 [0]

	data1 [21]
	data1 [8]
	data2 [163]
	data4 [0]

	data1 [19]
	data1 [7]
	data2 [35]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [114]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [50]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [197]
	data4 [0]

	data1 [17]
	data1 [7]
	data2 [11]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [98]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [34]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [165]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [2]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [130]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [66]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [229]
	data4 [0]

	data1 [16]
	data1 [7]
	data2 [7]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [90]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [26]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [149]
	data4 [0]

	data1 [20]
	data1 [7]
	data2 [67]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [122]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [58]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [213]
	data4 [0]

	data1 [18]
	data1 [7]
	data2 [19]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [106]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [42]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [181]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [10]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [138]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [74]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [245]
	data4 [0]

	data1 [16]
	data1 [7]
	data2 [5]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [86]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [22]
	data4 [0]

	data1 [64]
	data1 [8]
	data2 [0]
	data4 [0]

	data1 [19]
	data1 [7]
	data2 [51]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [118]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [54]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [205]
	data4 [0]

	data1 [17]
	data1 [7]
	data2 [15]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [102]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [38]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [173]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [6]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [134]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [70]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [237]
	data4 [0]

	data1 [16]
	data1 [7]
	data2 [9]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [94]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [30]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [157]
	data4 [0]

	data1 [20]
	data1 [7]
	data2 [99]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [126]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [62]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [221]
	data4 [0]

	data1 [18]
	data1 [7]
	data2 [27]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [110]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [46]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [189]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [14]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [142]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [78]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [253]
	data4 [0]

	data1 [96]
	data1 [7]
	data2 [0]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [81]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [17]
	data4 [0]

	data1 [21]
	data1 [8]
	data2 [131]
	data4 [0]

	data1 [18]
	data1 [7]
	data2 [31]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [113]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [49]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [195]
	data4 [0]

	data1 [16]
	data1 [7]
	data2 [10]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [97]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [33]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [163]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [1]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [129]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [65]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [227]
	data4 [0]

	data1 [16]
	data1 [7]
	data2 [6]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [89]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [25]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [147]
	data4 [0]

	data1 [19]
	data1 [7]
	data2 [59]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [121]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [57]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [211]
	data4 [0]

	data1 [17]
	data1 [7]
	data2 [17]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [105]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [41]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [179]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [9]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [137]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [73]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [243]
	data4 [0]

	data1 [16]
	data1 [7]
	data2 [4]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [85]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [21]
	data4 [0]

	data1 [16]
	data1 [8]
	data2 [258]
	data4 [0]

	data1 [19]
	data1 [7]
	data2 [43]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [117]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [53]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [203]
	data4 [0]

	data1 [17]
	data1 [7]
	data2 [13]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [101]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [37]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [171]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [5]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [133]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [69]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [235]
	data4 [0]

	data1 [16]
	data1 [7]
	data2 [8]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [93]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [29]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [155]
	data4 [0]

	data1 [20]
	data1 [7]
	data2 [83]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [125]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [61]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [219]
	data4 [0]

	data1 [18]
	data1 [7]
	data2 [23]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [109]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [45]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [187]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [13]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [141]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [77]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [251]
	data4 [0]

	data1 [16]
	data1 [7]
	data2 [3]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [83]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [19]
	data4 [0]

	data1 [21]
	data1 [8]
	data2 [195]
	data4 [0]

	data1 [19]
	data1 [7]
	data2 [35]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [115]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [51]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [199]
	data4 [0]

	data1 [17]
	data1 [7]
	data2 [11]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [99]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [35]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [167]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [3]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [131]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [67]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [231]
	data4 [0]

	data1 [16]
	data1 [7]
	data2 [7]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [91]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [27]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [151]
	data4 [0]

	data1 [20]
	data1 [7]
	data2 [67]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [123]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [59]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [215]
	data4 [0]

	data1 [18]
	data1 [7]
	data2 [19]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [107]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [43]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [183]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [11]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [139]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [75]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [247]
	data4 [0]

	data1 [16]
	data1 [7]
	data2 [5]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [87]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [23]
	data4 [0]

	data1 [64]
	data1 [8]
	data2 [0]
	data4 [0]

	data1 [19]
	data1 [7]
	data2 [51]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [119]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [55]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [207]
	data4 [0]

	data1 [17]
	data1 [7]
	data2 [15]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [103]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [39]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [175]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [7]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [135]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [71]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [239]
	data4 [0]

	data1 [16]
	data1 [7]
	data2 [9]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [95]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [31]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [159]
	data4 [0]

	data1 [20]
	data1 [7]
	data2 [99]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [127]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [63]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [223]
	data4 [0]

	data1 [18]
	data1 [7]
	data2 [27]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [111]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [47]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [191]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [15]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [143]
	data4 [0]

	data1 [0]
	data1 [8]
	data2 [79]
	data4 [0]

	data1 [0]
	data1 [9]
	data2 [255]
	data4 [0]

.Li_order_3249.l_ocf9910:
	data2 [16]
	data2 [17]
	data2 [18]
	data2 [0]
	data2 [8]
	data2 [7]
	data2 [9]
	data2 [6]
	data2 [10]
	data2 [5]
	data2 [11]
	data2 [4]
	data2 [12]
	data2 [3]
	data2 [13]
	data2 [2]
	data2 [14]
	data2 [1]
	data2 [15]
#	IMPORT inflate_table
#	IMPORT adler32
#	IMPORT inflate_fast
#	IMPORT crc32
#	IMPORT zcalloc
#	IMPORT zcfree
#	IMPORT memcpy
#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: o4158f7
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"inftrees.c"
#	.text
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole nop+set
	#peephole nop+set
	#peephole binop1+2+3
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole move
	#peephole move+push(pushable)
	#peephole move
	#peephole move+push(pushable)
	#peephole binop1+2
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole nop+set
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole 1
	#peephole zero_extend
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move
	#peephole move+binop
	#peephole move_dead
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole zero_extend
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole nop+set
	#peephole move+push(pushable)
	#peephole 1
	#peephole move_dead
	#peephole move
	#peephole move+binop
	#peephole move_dead
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole zero_extend
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move
	#peephole move+binop
	#peephole move_dead
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole zero_extend
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole nop+set
	#peephole move+push(pushable)
	#peephole 1
	#peephole move_dead
	#peephole move
	#peephole move+binop
	#peephole move_dead
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole zero_extend
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole nop+set
	#peephole move+push(pushable)
	#peephole 1
	#peephole move_dead
	#peephole move
	#peephole move+binop
	#peephole move_dead
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole zero_extend
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move
	#peephole move+binop
	#peephole move_dead
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole zero_extend
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move
	#peephole move+binop
	#peephole move_dead
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole zero_extend
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move
	#peephole move+binop
	#peephole move_dead
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole zero_extend
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move
	#peephole move+binop
	#peephole move_dead
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole zero_extend
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move
	#peephole move+binop
	#peephole move_dead
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole zero_extend
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole nop+set
	#peephole move+push(pushable)
	#peephole 1
	#peephole move_dead
	#peephole move
	#peephole move+binop
	#peephole move_dead
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole zero_extend
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move
	#peephole move+binop
	#peephole move_dead
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole zero_extend
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move
	#peephole move+binop
	#peephole 1
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole zero_extend
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move
	#peephole move+binop
	#peephole 1
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole zero_extend
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move
	#peephole move+binop
	#peephole 1
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole zero_extend
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole 1
	#peephole move
	#peephole move+push(pushable)
	#peephole 1
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole zero_extend
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole zero_extend
	#peephole move_dead
	#peephole zero_extend
	#peephole zero_extend
	#peephole move_dead
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole zero_extend
	#peephole pop(deadreg)+ind push
	#peephole 1
	#peephole zero_extend
	#peephole binop1+2
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole binop1+2
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole binop1+2
	#peephole move
	#peephole move
	#peephole move+push(pushable)
	#peephole pop+push+sub
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole binop1+2
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+ind push
	#peephole 1
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole move
	#peephole move+push(pushable)
	#peephole zero_extend
	#peephole move_dead
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole nop+set
	#peephole 1
	#peephole 1
	#peephole nop+set
	#peephole 1
	#peephole 1
	#peephole nop+set
	#peephole 1
	#peephole 1
	#peephole nop+set
	#peephole 1
	#peephole 1
	#peephole nop+set
	#peephole 1
	#peephole 1
	#peephole nop+set
	#peephole 1
	#peephole 1
	#peephole nop+set
	#peephole 1
	#peephole nop+set
	#peephole move+push(pushable)
	#peephole 1
	#peephole nop+set
	#peephole 1
	#peephole nop+set
	#peephole move+push(pushable)
	#peephole 1
	#peephole nop+set
	#peephole 1
	#peephole nop+set
	#peephole move+push(pushable)
	#peephole 1
	#peephole nop+set
	#peephole 1
	#peephole nop+set
	#peephole move+push(pushable)
	#peephole 1
	#peephole nop+set
	#peephole 1
	#peephole nop+set
	#peephole move+push(pushable)
	#peephole 1
	#peephole nop+set
	#peephole 1
	#peephole nop+set
	#peephole move+push(pushable)
	#peephole 1
	#peephole nop+set
	#peephole move
	#peephole move+binop
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move
	#peephole move+binop
	#peephole move_dead
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move
	#peephole move+binop
	#peephole move_dead
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move
	#peephole move+binop
	#peephole move_dead
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move
	#peephole move+binop
	#peephole move_dead
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move
	#peephole move+binop
	#peephole move_dead
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move
	#peephole move+binop
	#peephole move_dead
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move
	#peephole move+binop
	#peephole move_dead
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move
	#peephole move+binop
	#peephole move_dead
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move
	#peephole move+binop
	#peephole move_dead
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move
	#peephole move+binop
	#peephole move_dead
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move
	#peephole move+binop
	#peephole move_dead
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move
	#peephole move+binop
	#peephole move_dead
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move
	#peephole move+binop
	#peephole move_dead
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole binop1+deadreg+binop2
	#peephole pop(deadreg)+push
	#peephole nop+set
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole zero_extend
	#peephole binop1+deadreg+binop2
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+block+push+block
	#peephole pop+block+push+commut(si)
	#peephole pop+move2(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole pop+move2(deadreg)
	#peephole pop+block+cmp
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole pop+move2(deadreg)
	#peephole pop+block+cmp
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole pop+move2(deadreg)
	#peephole pop+block+cmp
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole pop+move2(deadreg)
	#peephole pop+block+cmp
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole pop+block+cmp
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+move2(deadreg)
	#peephole pop+move2(deadreg)
	#peephole set+nop
	#peephole set+nop
	#peephole set+nop
	#peephole set+nop
	#peephole set+nop
	#peephole set+nop
	#peephole set+nop
	#peephole pop+move2(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+push+sub
	#peephole pop+block+push+block
	#peephole pop+push+sub
	#peephole pop+block+push+block
	#peephole pop+push+sub
	#peephole pop+block+push+block
	#peephole pop+push+sub
	#peephole pop+block+push+block
	#peephole pop+push+sub
	#peephole pop+block+push+block
	#peephole pop+push+sub
	#peephole pop+block+push+block
	#peephole pop+push+sub
	#peephole pop+block+push+block
	#peephole pop+push+sub
	#peephole pop+block+push+block
	#peephole pop+push+sub
	#peephole pop+block+push+block
	#peephole pop+push+sub
	#peephole pop+block+push+block
	#peephole pop+push+sub
	#peephole pop+block+push+block
	#peephole pop+push+sub
	#peephole pop+block+push+commut(di)
	#peephole pop+block+push+commut(di)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+push+sub
	#peephole pop+block+push+block
	#peephole pop+push+sub
	#peephole pop+block+push+block
	#peephole pop+push+sub
	#peephole pop+block+push+block
	#peephole pop+push+sub
	#peephole pop+block+push+block
	#peephole pop+push+sub
	#peephole pop+block+push+block
	#peephole pop+push+sub
	#peephole pop+block+push+block
	#peephole pop+push+sub
	#peephole pop+block+push+block
	#peephole pop+push+sub
	#peephole pop+block+push+block
	#peephole pop+push+sub
	#peephole pop+block+push+block
	#peephole pop+push+sub
	#peephole pop+block+push+block
	#peephole pop+push+sub
	#peephole pop+block+push+block
	#peephole pop+push+sub
	#peephole pop+block+push+block
	#peephole pop+push+sub
	#peephole pop+block+push+block
	#peephole pop+push+sub
	#peephole pop+block+push+block
	#peephole zero_extend
	#peephole popdi(deadreg)+push
	#peephole and+pophi
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole popdi(deadreg)+push

# FUNCTION BEGINS:inflate_table
	EXPORT	inflate_table
inflate_table:
	# prologue (16 GPRs)

	set_sp! &-32

	load4! &35
	store8! &5 	#X4
	load8! &38
	store8! &10 	#X9
	push! &0
	add! 192
	store8! &1 	#AR
	push! 32
	push! 0
	load8! &2 	#AR
	call! memset
	store8! &3

	set_sp! &2
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_zero! .L20.l_o4158f7
	# END CBRANCH
	load8! &34
	store8! &1 	#AR
	load8! &4 	#X4
	add! -1
	and! 0xffffffff
	store8! &2 	#X1
	load8! &1 	#X1
	load8! &2 	#X1
	add
	store8! &2 	#X1
	load8! &0 	#AR
	add! 2
	load8! &2 	#X1
	add
	store8! &6 	#X5
.L19.l_o4158f7:
	load8! &0 	#AR
	load2
	#
	store8! &2 	#X1
	load4! &1 	#X1
	sigx4
	store8! &4 	#X3
	load8! &3 	#X3
	load8! &4 	#X3
	add
	store8! &4 	#X3
	push! &0
	add! 256
	load8! &4 	#X3
	add
	add! -64
	load2
	add! 1
	store8! &4 	#X3
	load4! &1 	#X1
	sigx4
	store8! &2 	#X1
	load8! &1 	#X1
	load8! &2 	#X1
	add
	store8! &2 	#X1
	push! &0
	add! 256
	load8! &2 	#X1
	add
	add! -64
	store8! &2 	#X1
	load2! &3 	#X3
	load8! &2 	#X1
	store2
	#
	load8! &0 	#AR
	add! 2
	store8! &1 	#AR
	# CBRANCH
	load8! &5 	#X5
	load8! &1 	#AR
	xor
	push! 1
	lt_u
	jump_zero! .L19.l_o4158f7
	# END CBRANCH
.L20.l_o4158f7:
	load2! (+ &0 222)
	store8! &6 	#X5
	# CBRANCH EQ0
	load2! &5 	#X5
	jump_not_zero! .L3.l_o4158f7
	# END CBRANCH
	# CBRANCH EQ0
	load2! (+ &0 220)
	jump_not_zero! .L4.l_o4158f7
	# END CBRANCH
	# CBRANCH EQ0
	load2! (+ &0 218)
	jump_not_zero! .L5.l_o4158f7
	# END CBRANCH
	# CBRANCH EQ0
	load2! &27
	jump_not_zero! .L6.l_o4158f7
	# END CBRANCH
	# CBRANCH EQ0
	load2! (+ &0 214)
	jump_not_zero! .L7.l_o4158f7
	# END CBRANCH
	# CBRANCH EQ0
	load2! (+ &0 212)
	jump_not_zero! .L8.l_o4158f7
	# END CBRANCH
	# CBRANCH EQ0
	load2! (+ &0 210)
	jump_not_zero! .L9.l_o4158f7
	# END CBRANCH
	# CBRANCH EQ0
	load2! &26
	jump_not_zero! .L10.l_o4158f7
	# END CBRANCH
	# CBRANCH EQ0
	load2! (+ &0 206)
	jump_not_zero! .L11.l_o4158f7
	# END CBRANCH
	# CBRANCH EQ0
	load2! (+ &0 204)
	jump_not_zero! .L12.l_o4158f7
	# END CBRANCH
	# CBRANCH EQ0
	load2! (+ &0 202)
	jump_not_zero! .L13.l_o4158f7
	# END CBRANCH
	# CBRANCH EQ0
	load2! &25
	jump_not_zero! .L14.l_o4158f7
	# END CBRANCH
	# CBRANCH EQ0
	load2! (+ &0 198)
	jump_not_zero! .L15.l_o4158f7
	# END CBRANCH
	load2! (+ &0 196)
	store8! &2 	#X1
	# CBRANCH EQ0
	load2! &1 	#X1
	jump_not_zero! .L16.l_o4158f7
	# END CBRANCH
	load2! (+ &0 194)
	store8! &1 	#AR
	# CBRANCH EQ0
	load2! &0 	#AR
	jump_not_zero! .L180.l_o4158f7
	# END CBRANCH
	push! 0
	and! 0xffffffff00000000
	or! 0x140
	store8! &3 	#X2
	load8! &36
	store8! &12 	#X11
	load8! &11 	#X11
	load8
	#
	store8! &1 	#AR
	load8! &2 	#X2
	load8! &1 	#AR
	store8
	#
	load8! &0 	#AR
	add! 16
	load8! &12 	#X11
	store8
	#
	load8! &2 	#X2
	load8! &1 	#AR
	add! 8
	store8
	#
	push! 1
	load8! &38
	store8! &14 	#X12
	load8! &13 	#X12
	store4
	#
	push! 0
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &34
	jump! .L181.l_o4158f7
.L3.l_o4158f7:
	load2! (+ &0 194)
	store8! &1 	#AR
	# CBRANCH EQ0
	load2! &0 	#AR
	jump_not_zero! .L63.l_o4158f7
	# END CBRANCH
	push! 15
	store8! &4 	#X3
.L23.l_o4158f7:
	load2! (+ &0 196)
	store8! &2 	#X1
	# CBRANCH EQ0
	load2! &1 	#X1
	jump_not_zero! .L182.l_o4158f7
	# END CBRANCH
	# CBRANCH EQ0
	load2! (+ &0 198)
	jump_not_zero! .L77.l_o4158f7
	# END CBRANCH
	# CBRANCH EQ
	load4! &3 	#X3
	push! 4
	xor
	jump_zero! .L78.l_o4158f7
	# END CBRANCH
.L61.l_o4158f7:
	# CBRANCH EQ0
	load2! &25
	jump_not_zero! .L79.l_o4158f7
	# END CBRANCH
	# CBRANCH EQ
	load4! &3 	#X3
	push! 5
	xor
	jump_zero! .L80.l_o4158f7
	# END CBRANCH
	# CBRANCH EQ0
	load2! (+ &0 202)
	jump_not_zero! .L81.l_o4158f7
	# END CBRANCH
	# CBRANCH EQ
	load4! &3 	#X3
	push! 6
	xor
	jump_zero! .L82.l_o4158f7
	# END CBRANCH
	# CBRANCH EQ0
	load2! (+ &0 204)
	jump_not_zero! .L83.l_o4158f7
	# END CBRANCH
	# CBRANCH EQ
	load4! &3 	#X3
	push! 7
	xor
	jump_zero! .L84.l_o4158f7
	# END CBRANCH
	# CBRANCH EQ0
	load2! (+ &0 206)
	jump_not_zero! .L85.l_o4158f7
	# END CBRANCH
	# CBRANCH EQ
	load4! &3 	#X3
	push! 8
	xor
	jump_zero! .L86.l_o4158f7
	# END CBRANCH
	# CBRANCH EQ0
	load2! &26
	jump_not_zero! .L87.l_o4158f7
	# END CBRANCH
	# CBRANCH EQ
	load4! &3 	#X3
	push! 9
	xor
	jump_zero! .L88.l_o4158f7
	# END CBRANCH
	# CBRANCH EQ0
	load2! (+ &0 210)
	jump_not_zero! .L89.l_o4158f7
	# END CBRANCH
	# CBRANCH EQ
	load4! &3 	#X3
	push! 10
	xor
	jump_zero! .L90.l_o4158f7
	# END CBRANCH
	# CBRANCH EQ0
	load2! (+ &0 212)
	jump_not_zero! .L91.l_o4158f7
	# END CBRANCH
	# CBRANCH EQ
	load4! &3 	#X3
	push! 11
	xor
	jump_zero! .L92.l_o4158f7
	# END CBRANCH
	# CBRANCH EQ0
	load2! (+ &0 214)
	jump_not_zero! .L93.l_o4158f7
	# END CBRANCH
	# CBRANCH EQ
	load4! &3 	#X3
	push! 12
	xor
	jump_zero! .L94.l_o4158f7
	# END CBRANCH
	# CBRANCH EQ0
	load2! &27
	jump_not_zero! .L95.l_o4158f7
	# END CBRANCH
	# CBRANCH EQ
	load4! &3 	#X3
	push! 13
	xor
	jump_zero! .L96.l_o4158f7
	# END CBRANCH
	# CBRANCH EQ0
	load2! (+ &0 218)
	jump_not_zero! .L97.l_o4158f7
	# END CBRANCH
	# CBRANCH
	load4! &3 	#X3
	push! 15
	xor
	push! 1
	lt_u
	jump_zero! .L98.l_o4158f7
	# END CBRANCH
	push! 15
	store8! &8 	#X7
	push! 14
	store8! &1 	#AR
	# CBRANCH EQ0
	load2! (+ &0 220)
	jump_not_zero! .L27.l_o4158f7
	# END CBRANCH
	push! 0
	store8! &1 	#AR
	push! 2
	store8! &7 	#X6
.L60.l_o4158f7:
	load8! &6 	#X6
	load8! &7 	#X6
	add
	store8! &9 	#X8
	load2! &1 	#X1
	load8! &9 	#X8
	sub
	neg
	store8! &7 	#X6
	# CBRANCH
	load4! &6 	#X6
	add! -2147483648
	push! 0
	add! -2147483648
	lt_u
	not
	jump_zero! .L101.l_o4158f7
	# END CBRANCH
	load2! (+ &0 198)
	store8! &11 	#X10
	load8! &6 	#X6
	load8! &7 	#X6
	add
	store8! &9 	#X8
	load2! &10 	#X10
	load8! &9 	#X8
	sub
	neg
	store8! &7 	#X6
	# CBRANCH
	load4! &6 	#X6
	add! -2147483648
	push! 0
	add! -2147483648
	lt_u
	not
	jump_zero! .L102.l_o4158f7
	# END CBRANCH
	load2! &25
	store8! &9 	#X8
	load8! &6 	#X6
	load8! &7 	#X6
	add
	store8! &12 	#X11
	load2! &8 	#X8
	load8! &12 	#X11
	sub
	neg
	store8! &7 	#X6
	# CBRANCH
	load4! &6 	#X6
	add! -2147483648
	push! 0
	add! -2147483648
	lt_u
	not
	jump_zero! .L103.l_o4158f7
	# END CBRANCH
	load2! (+ &0 202)
	store8! &13 	#X12
	load8! &6 	#X6
	load8! &7 	#X6
	add
	store8! &12 	#X11
	load2! &12 	#X12
	load8! &12 	#X11
	sub
	neg
	store8! &7 	#X6
	# CBRANCH
	load4! &6 	#X6
	add! -2147483648
	push! 0
	add! -2147483648
	lt_u
	not
	jump_zero! .L104.l_o4158f7
	# END CBRANCH
	load2! (+ &0 204)
	store8! &12 	#X11
	load8! &6 	#X6
	load8! &7 	#X6
	add
	store8! &14 	#X13
	load2! &11 	#X11
	load8! &14 	#X13
	sub
	neg
	store8! &7 	#X6
	# CBRANCH
	load4! &6 	#X6
	add! -2147483648
	push! 0
	add! -2147483648
	lt_u
	not
	jump_zero! .L105.l_o4158f7
	# END CBRANCH
	load2! (+ &0 206)
	store8! &15 	#X14
	load8! &6 	#X6
	load8! &7 	#X6
	add
	store8! &14 	#X13
	load2! &14 	#X14
	load8! &14 	#X13
	sub
	neg
	store8! &7 	#X6
	# CBRANCH
	load4! &6 	#X6
	add! -2147483648
	push! 0
	add! -2147483648
	lt_u
	not
	jump_zero! .L106.l_o4158f7
	# END CBRANCH
	load2! &26
	store8! &16 	#X15
	load8! &6 	#X6
	load8! &7 	#X6
	add
	store8! &14 	#X13
	load2! &15 	#X15
	load8! &14 	#X13
	sub
	neg
	store8! &7 	#X6
	# CBRANCH
	load4! &6 	#X6
	add! -2147483648
	push! 0
	add! -2147483648
	lt_u
	not
	jump_zero! .L107.l_o4158f7
	# END CBRANCH
	load2! (+ &0 210)
	store2! &18
	load8! &6 	#X6
	load8! &7 	#X6
	add
	store8! &14 	#X13
	load2! &17
	load8! &14 	#X13
	sub
	neg
	store8! &7 	#X6
	# CBRANCH
	load4! &6 	#X6
	add! -2147483648
	push! 0
	add! -2147483648
	lt_u
	not
	jump_zero! .L108.l_o4158f7
	# END CBRANCH
	load2! (+ &0 212)
	store2! &19
	load8! &6 	#X6
	load8! &7 	#X6
	add
	store8! &14 	#X13
	load2! &18
	load8! &14 	#X13
	sub
	neg
	store8! &7 	#X6
	# CBRANCH
	load4! &6 	#X6
	add! -2147483648
	push! 0
	add! -2147483648
	lt_u
	not
	jump_zero! .L109.l_o4158f7
	# END CBRANCH
	load2! (+ &0 214)
	store2! &20
	load8! &6 	#X6
	load8! &7 	#X6
	add
	store8! &14 	#X13
	load2! &19
	load8! &14 	#X13
	sub
	neg
	store8! &7 	#X6
	# CBRANCH
	load4! &6 	#X6
	add! -2147483648
	push! 0
	add! -2147483648
	lt_u
	not
	jump_zero! .L110.l_o4158f7
	# END CBRANCH
	load2! &27
	store2! &21
	load8! &6 	#X6
	load8! &7 	#X6
	add
	store8! &14 	#X13
	load2! &20
	load8! &14 	#X13
	sub
	neg
	store8! &7 	#X6
	# CBRANCH
	load4! &6 	#X6
	add! -2147483648
	push! 0
	add! -2147483648
	lt_u
	not
	jump_zero! .L111.l_o4158f7
	# END CBRANCH
	load2! (+ &0 218)
	store2! &22
	load8! &6 	#X6
	load8! &7 	#X6
	add
	store8! &14 	#X13
	load2! &21
	load8! &14 	#X13
	sub
	neg
	store8! &7 	#X6
	# CBRANCH
	load4! &6 	#X6
	add! -2147483648
	push! 0
	add! -2147483648
	lt_u
	not
	jump_zero! .L112.l_o4158f7
	# END CBRANCH
	load2! (+ &0 220)
	store2! &23
	load8! &6 	#X6
	load8! &7 	#X6
	add
	store8! &14 	#X13
	load2! &22
	load8! &14 	#X13
	sub
	neg
	store8! &7 	#X6
	# CBRANCH
	load4! &6 	#X6
	add! -2147483648
	push! 0
	add! -2147483648
	lt_u
	not
	jump_zero! .L113.l_o4158f7
	# END CBRANCH
	load8! &6 	#X6
	load8! &7 	#X6
	add
	store8! &7 	#X6
	load2! &5 	#X5
	load8! &7 	#X6
	sub
	neg
	store8! &6 	#X5
	# CBRANCH
	load4! &5 	#X5
	add! -2147483648
	push! 0
	add! -2147483648
	lt_u
	not
	jump_zero! .L114.l_o4158f7
	# END CBRANCH
	# CBRANCH EQ0
	load4! &5 	#X5
	jump_zero! .L29.l_o4158f7
	# END CBRANCH
	# CBRANCH EQ0
	load4! &33
	jump_zero! .L115.l_o4158f7
	# END CBRANCH
	# CBRANCH EQ
	load4! &7 	#X7
	push! 1
	xor
	jump_zero! .L29.l_o4158f7
	# END CBRANCH
	push! -1
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &34
	jump! .L181.l_o4158f7
.L93.l_o4158f7:
	push! 11
	store8! &1 	#AR
.L27.l_o4158f7:
	load4! &3 	#X3
	store8! &8 	#X7
	load4! &0 	#AR
	store8! &4 	#X3
.L193.l_o4158f7:
	push! 0
	store8! &1 	#AR
	push! 2
	store8! &7 	#X6
	jump! .L60.l_o4158f7
.L29.l_o4158f7:
	load8! &37
	store8! &14 	#X13
	load8! &13 	#X13
	load4
	#
	store8! &6 	#X5
	push! 0
	store2! (+ &0 234)
	load2! &0 	#AR
	store2! (+ &0 236)
	load8! &0 	#AR
	load8! &2 	#X1
	add
	store8! &1 	#AR
	load2! &0 	#AR
	store2! (+ &0 238)
	load8! &10 	#X10
	load8! &1 	#AR
	add
	store8! &1 	#AR
	load2! &0 	#AR
	store2! &30
	load8! &8 	#X8
	load8! &1 	#AR
	add
	store8! &1 	#AR
	load2! &0 	#AR
	store2! (+ &0 242)
	load8! &12 	#X12
	load8! &1 	#AR
	add
	store8! &1 	#AR
	load2! &0 	#AR
	store2! (+ &0 244)
	load8! &11 	#X11
	load8! &1 	#AR
	add
	store8! &1 	#AR
	load2! &0 	#AR
	store2! (+ &0 246)
	load8! &14 	#X14
	load8! &1 	#AR
	add
	store8! &1 	#AR
	load2! &0 	#AR
	store2! &31
	load8! &15 	#X15
	load8! &1 	#AR
	add
	store8! &1 	#AR
	load2! &0 	#AR
	store2! (+ &0 250)
	load2! &17
	load8! &1 	#AR
	add
	store8! &1 	#AR
	load2! &0 	#AR
	store2! (+ &0 252)
	load2! &18
	load8! &1 	#AR
	add
	store8! &1 	#AR
	load2! &0 	#AR
	store2! (+ &0 254)
	load2! &19
	load8! &1 	#AR
	add
	store8! &1 	#AR
	load2! &0 	#AR
	store2! &32
	load2! &20
	load8! &1 	#AR
	add
	store8! &1 	#AR
	load2! &0 	#AR
	store2! (+ &0 258)
	load2! &21
	load8! &1 	#AR
	add
	store8! &1 	#AR
	load2! &0 	#AR
	store2! (+ &0 260)
	load2! &22
	load8! &1 	#AR
	add
	store2! (+ &0 262)
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_zero! .L38.l_o4158f7
	# END CBRANCH
	load8! &34
	store8! &1 	#AR
	push! 0
	store8! &2 	#X1
.L37.l_o4158f7:
	load8! &0 	#AR
	load2
	#
	store8! &7 	#X6
	# CBRANCH EQ0
	load2! &6 	#X6
	jump_zero! .L36.l_o4158f7
	# END CBRANCH
	load2! &6 	#X6
	store8! &9 	#X8
	load4! &8 	#X8
	sigx4
	store8! &7 	#X6
	load8! &6 	#X6
	load8! &7 	#X6
	add
	store8! &7 	#X6
	push! &0
	add! 256
	load8! &7 	#X6
	add
	add! -32
	load2
	store8! &7 	#X6
	load8! &6 	#X6
	add! 1
	store8! &11 	#X10
	load4! &8 	#X8
	sigx4
	store8! &9 	#X8
	load8! &8 	#X8
	load8! &9 	#X8
	add
	store8! &9 	#X8
	push! &0
	add! 256
	load8! &9 	#X8
	add
	add! -32
	store8! &9 	#X8
	load2! &10 	#X10
	load8! &9 	#X8
	store2
	#
	load2! &6 	#X6
	store8! &7 	#X6
	load8! &6 	#X6
	load8! &7 	#X6
	add
	load8! &10 	#X9
	add
	store8! &7 	#X6
	load2! &1 	#X1
	load8! &7 	#X6
	store2
	#
.L36.l_o4158f7:
	load8! &1 	#X1
	add! 1
	store8! &2 	#X1
	load8! &0 	#AR
	add! 2
	store8! &1 	#AR
	# CBRANCH
	load4! &4 	#X4
	load4! &2 	#X1
	xor
	push! 1
	lt_u
	jump_zero! .L37.l_o4158f7
	# END CBRANCH
.L38.l_o4158f7:
	# CBRANCH
	load4! &7 	#X7
	load4! &6 	#X5
	lt_u
	jump_zero! .L31.l_o4158f7
	# END CBRANCH
	load4! &7 	#X7
	store8! &6 	#X5
.L31.l_o4158f7:
	load4! &5 	#X5
	store4! &24
	# CBRANCH
	load4! &5 	#X5
	load4! &4 	#X3
	lt_u
	jump_zero! .L32.l_o4158f7
	# END CBRANCH
	load4! &3 	#X3
	store4! &24
.L32.l_o4158f7:
	load4! &23
	store8! &1 	#AR
	push! 1
	load8! &1 	#AR
	shift_l
	store4! &19
	load4! &18
	add! -1
	store4! &20
	# CBRANCH EQ0
	load4! &33
	jump_zero! .L117.l_o4158f7
	# END CBRANCH
	# CBRANCH EQ
	load4! &33
	push! 1
	xor
	jump_zero! .L34.l_o4158f7
	# END CBRANCH
	# CBRANCH
	load4! &33
	push! 2
	xor
	push! 1
	lt_u
	jump_zero! .L183.l_o4158f7
	# END CBRANCH
	# CBRANCH
	push! 592
	load4! &19
	lt_u
	not
	jump_zero! .L56.l_o4158f7
	# END CBRANCH
	push! 0
	store8! &9 	#X8
	push! .Li_dext_3128.l_o4158f7
	store8! &23
	push! .Li_dbase_3127.l_o4158f7
	store8! &22
	load8! &36
	store8! &13 	#X12
	load8! &12 	#X12
	load8
	#
	store8! &21
	load8! &20
	store8! &2 	#X1
	load4! &23
	store8! &7 	#X6
	push! -1
	store8! &16 	#X15
	push! 0
	store8! &12 	#X11
	push! 0
	store8! &5 	#X4
	push! 0
	store8! &6 	#X5
	load4! &15 	#X15
	store4! &18
	load4! &6 	#X6
	store8! &16 	#X15
.L39.l_o4158f7:
	load1! &3 	#X3
	store8! &11 	#X10
	load1! &4 	#X4
	load8! &11 	#X10
	sub
	neg
	and! 0xff
	shift_l! 8
	store8! &1 	#AR
	load8! &2 	#X2
	and! 0xffffffffffff00ff
	load8! &1 	#AR
	or
	store8! &3 	#X2
	load4! &5 	#X5
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	load8! &10 	#X9
	add
	load2
	store8! &11 	#X10
	load2! &10 	#X10
	store8! &1 	#AR
	load8! &0 	#AR
	add! 1
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	load4! &9 	#X8
	lt_u
	jump_zero! .L40.l_o4158f7
	# END CBRANCH
.L185.l_o4158f7:
	load8! &2 	#X2
	and! 0xffffffffffffff00
	store8! &3 	#X2
	load2! &10 	#X10
	shift_l! 16
	store8! &1 	#AR
	load8! &2 	#X2
	and! 0xffffffff0000ffff
	load8! &1 	#AR
	or
	store8! &3 	#X2
	load8! &4 	#X4
	load8! &4 	#X3
	sub
	neg
	and! 0xffffffff
	store8! &1 	#AR
	push! 1
	load8! &1 	#AR
	shift_l
	store8! &14 	#X13
	load4! &6 	#X6
	store8! &1 	#AR
	push! 1
	load8! &1 	#AR
	shift_l
	store8! &15 	#X14
	load4! &11 	#X11
	store8! &11 	#X10
	load4! &4 	#X4
	store8! &1 	#AR
	load8! &10 	#X10
	load8! &1 	#AR
	shift_ru
	store8! &13 	#X12
	load4! &14 	#X14
	store8! &1 	#AR
.L43.l_o4158f7:
	load8! &13 	#X13
	load8! &1 	#AR
	sub
	neg
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &13 	#X12
	add
	and! 0xffffffff
	shift_l! 3
	load8! &2 	#X1
	add
	store8! &11 	#X10
	load8! &2 	#X2
	load8! &11 	#X10
	store8
	#
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_not_zero! .L43.l_o4158f7
	# END CBRANCH
	load8! &3 	#X3
	add! -1
	and! 0xffffffff
	store8! &1 	#AR
	push! 1
	load8! &1 	#AR
	shift_l
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &12 	#X11
	and
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L44.l_o4158f7
	# END CBRANCH
.L45.l_o4158f7:
	load4! &0 	#AR
	shift_ru! 1
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &12 	#X11
	and
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_not_zero! .L45.l_o4158f7
	# END CBRANCH
.L44.l_o4158f7:
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_zero! .L46.l_o4158f7
	# END CBRANCH
	load8! &0 	#AR
	add! -1
	load8! &12 	#X11
	and
	load8! &1 	#AR
	add
	store8! &1 	#AR
.L46.l_o4158f7:
	load8! &5 	#X5
	add! 1
	store8! &6 	#X5
	load4! &3 	#X3
	store8! &11 	#X10
	load8! &10 	#X10
	load8! &11 	#X10
	add
	store8! &11 	#X10
	push! &0
	add! 256
	load8! &11 	#X10
	add
	add! -64
	load2
	add! -1
	store8! &11 	#X10
	load4! &3 	#X3
	store8! &12 	#X11
	load8! &11 	#X11
	load8! &12 	#X11
	add
	store8! &12 	#X11
	push! &0
	add! 256
	load8! &12 	#X11
	add
	add! -64
	store8! &12 	#X11
	load2! &10 	#X10
	load8! &12 	#X11
	store2
	#
	# CBRANCH EQ0
	load2! &10 	#X10
	jump_not_zero! .L47.l_o4158f7
	# END CBRANCH
	# CBRANCH EQ
	load4! &3 	#X3
	load4! &8 	#X7
	xor
	jump_zero! .L48.l_o4158f7
	# END CBRANCH
	load4! &5 	#X5
	store8! &4 	#X3
	load8! &3 	#X3
	load8! &4 	#X3
	add
	load8! &10 	#X9
	add
	load2
	and! 0x0ffff
	store8! &4 	#X3
	load8! &3 	#X3
	load8! &4 	#X3
	add
	load8! &35
	add
	load2
	and! 0x0ffff
	store8! &4 	#X3
.L47.l_o4158f7:
	# CBRANCH
	load4! &15 	#X15
	load4! &4 	#X3
	lt_u
	jump_zero! .L49.l_o4158f7
	# END CBRANCH
	load8! &0 	#AR
	store8! &11 	#X10
	load4! &19
	load8! &1 	#AR
	and
	store8! &11 	#X10
	# CBRANCH
	load4! &10 	#X10
	load4! &18
	xor
	push! 1
	lt_u
	jump_zero! .L184.l_o4158f7
	# END CBRANCH
.L49.l_o4158f7:
	load4! &0 	#AR
	store8! &12 	#X11
.L189.l_o4158f7:
	load1! &3 	#X3
	store8! &11 	#X10
	load1! &4 	#X4
	load8! &11 	#X10
	sub
	neg
	and! 0xff
	shift_l! 8
	store8! &1 	#AR
	load8! &2 	#X2
	and! 0xffffffffffff00ff
	load8! &1 	#AR
	or
	store8! &3 	#X2
	load4! &5 	#X5
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	load8! &10 	#X9
	add
	load2
	store8! &11 	#X10
	load2! &10 	#X10
	store8! &1 	#AR
	load8! &0 	#AR
	add! 1
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	load4! &9 	#X8
	lt_u
	not
	jump_zero! .L185.l_o4158f7
	# END CBRANCH
.L40.l_o4158f7:
	# CBRANCH
	load4! &0 	#AR
	load4! &9 	#X8
	lt_u
	not
	jump_zero! .L42.l_o4158f7
	# END CBRANCH
	load8! &8 	#X8
	load8! &1 	#AR
	sub
	neg
	and! 0xffffffff
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	store8! &1 	#AR
	load8! &22
	load8! &1 	#AR
	add
	load2
	store8! &11 	#X10
	load1! &10 	#X10
	store8! &11 	#X10
	load8! &2 	#X2
	and! 0xffffffffffffff00
	load8! &11 	#X10
	or
	store8! &3 	#X2
	load8! &21
	load8! &1 	#AR
	add
	load2
	and! 0x0ffff
	shift_l! 16
	store8! &1 	#AR
	load8! &2 	#X2
	and! 0xffffffff0000ffff
	load8! &1 	#AR
	or
	store8! &3 	#X2
	load8! &4 	#X4
	load8! &4 	#X3
	sub
	neg
	and! 0xffffffff
	store8! &1 	#AR
	push! 1
	load8! &1 	#AR
	shift_l
	store8! &14 	#X13
	load4! &6 	#X6
	store8! &1 	#AR
	push! 1
	load8! &1 	#AR
	shift_l
	store8! &15 	#X14
	load4! &11 	#X11
	store8! &11 	#X10
	load4! &4 	#X4
	store8! &1 	#AR
	load8! &10 	#X10
	load8! &1 	#AR
	shift_ru
	store8! &13 	#X12
	load4! &14 	#X14
	store8! &1 	#AR
	jump! .L43.l_o4158f7
.L34.l_o4158f7:
	# CBRANCH
	push! 852
	load4! &19
	lt_u
	jump_zero! .L186.l_o4158f7
	# END CBRANCH
.L56.l_o4158f7:
	push! 1
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &34
	jump! .L181.l_o4158f7
.L117.l_o4158f7:
	load8! &9 	#X9
	store8! &23
	load8! &9 	#X9
	store8! &22
	push! 20
	store8! &9 	#X8
	load8! &36
	store8! &13 	#X12
	load8! &12 	#X12
	load8
	#
	store8! &21
	load8! &20
	store8! &2 	#X1
	load4! &23
	store8! &7 	#X6
	push! -1
	store8! &16 	#X15
	push! 0
	store8! &12 	#X11
	push! 0
	store8! &5 	#X4
	push! 0
	store8! &6 	#X5
	load4! &15 	#X15
	store4! &18
	load4! &6 	#X6
	store8! &16 	#X15
	jump! .L39.l_o4158f7
.L184.l_o4158f7:
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_not_zero! .L50.l_o4158f7
	# END CBRANCH
	load4! &15 	#X15
	store8! &5 	#X4
.L50.l_o4158f7:
	load4! &14 	#X14
	shift_l! 3
	load8! &2 	#X1
	add
	store8! &12 	#X11
	load8! &11 	#X11
	store8! &2 	#X1
	load8! &4 	#X4
	load8! &4 	#X3
	sub
	neg
	store8! &7 	#X6
	load4! &6 	#X6
	sigx4
	store8! &13 	#X12
	push! 1
	load8! &13 	#X12
	shift_l
	store8! &13 	#X12
	# CBRANCH
	load4! &3 	#X3
	load4! &8 	#X7
	lt_u
	jump_zero! .L51.l_o4158f7
	# END CBRANCH
	load4! &3 	#X3
	store8! &14 	#X13
	load8! &13 	#X13
	load8! &14 	#X13
	add
	store8! &14 	#X13
	push! &0
	add! 256
	load8! &14 	#X13
	add
	add! -64
	load2
	and! 0x0ffff
	load8! &13 	#X12
	sub
	neg
	store8! &13 	#X12
	# CBRANCH
	push! 0
	add! -2147483648
	load4! &13 	#X12
	add! -2147483648
	lt_u
	jump_zero! .L51.l_o4158f7
	# END CBRANCH
	load8! &6 	#X6
	add! 1
	store8! &15 	#X14
	load8! &12 	#X12
	load8! &13 	#X12
	add
	store8! &13 	#X12
	load8! &14 	#X14
	load8! &5 	#X4
	add
	store8! &14 	#X13
	# CBRANCH
	load4! &13 	#X13
	load4! &8 	#X7
	lt_u
	jump_zero! .L119.l_o4158f7
	# END CBRANCH
	load4! &13 	#X13
	store8! &14 	#X13
	load8! &13 	#X13
	load8! &14 	#X13
	add
	store8! &17
	push! &0
	add! 256
	load8! &17
	add
	add! -64
	load2
	and! 0x0ffff
	load8! &13 	#X12
	sub
	neg
	store8! &13 	#X12
	# CBRANCH
	push! 0
	add! -2147483648
	load4! &13 	#X12
	add! -2147483648
	lt_u
	jump_zero! .L120.l_o4158f7
	# END CBRANCH
	load8! &6 	#X6
	add! 2
	store8! &15 	#X14
	load8! &12 	#X12
	load8! &13 	#X12
	add
	store8! &13 	#X12
	load8! &14 	#X14
	load8! &5 	#X4
	add
	store8! &14 	#X13
	# CBRANCH
	load4! &13 	#X13
	load4! &8 	#X7
	lt_u
	jump_zero! .L121.l_o4158f7
	# END CBRANCH
	load4! &13 	#X13
	store8! &14 	#X13
	load8! &13 	#X13
	load8! &14 	#X13
	add
	store8! &17
	push! &0
	add! 256
	load8! &17
	add
	add! -64
	load2
	and! 0x0ffff
	load8! &13 	#X12
	sub
	neg
	store8! &13 	#X12
	# CBRANCH
	push! 0
	add! -2147483648
	load4! &13 	#X12
	add! -2147483648
	lt_u
	jump_zero! .L122.l_o4158f7
	# END CBRANCH
	load8! &6 	#X6
	add! 3
	store8! &15 	#X14
	load8! &12 	#X12
	load8! &13 	#X12
	add
	store8! &13 	#X12
	load8! &14 	#X14
	load8! &5 	#X4
	add
	store8! &14 	#X13
	# CBRANCH
	load4! &13 	#X13
	load4! &8 	#X7
	lt_u
	jump_zero! .L123.l_o4158f7
	# END CBRANCH
	load4! &13 	#X13
	store8! &14 	#X13
	load8! &13 	#X13
	load8! &14 	#X13
	add
	store8! &17
	push! &0
	add! 256
	load8! &17
	add
	add! -64
	load2
	and! 0x0ffff
	load8! &13 	#X12
	sub
	neg
	store8! &13 	#X12
	# CBRANCH
	push! 0
	add! -2147483648
	load4! &13 	#X12
	add! -2147483648
	lt_u
	jump_zero! .L124.l_o4158f7
	# END CBRANCH
	load8! &6 	#X6
	add! 4
	store8! &15 	#X14
	load8! &12 	#X12
	load8! &13 	#X12
	add
	store8! &14 	#X13
	load8! &14 	#X14
	load8! &5 	#X4
	add
	store8! &13 	#X12
	# CBRANCH
	load4! &12 	#X12
	load4! &8 	#X7
	lt_u
	jump_zero! .L125.l_o4158f7
	# END CBRANCH
	load4! &12 	#X12
	store8! &13 	#X12
	load8! &12 	#X12
	load8! &13 	#X12
	add
	store8! &17
	push! &0
	add! 256
	load8! &17
	add
	add! -64
	load2
	and! 0x0ffff
	load8! &14 	#X13
	sub
	neg
	store8! &13 	#X12
	# CBRANCH
	push! 0
	add! -2147483648
	load4! &13 	#X12
	add! -2147483648
	lt_u
	jump_zero! .L126.l_o4158f7
	# END CBRANCH
	load8! &6 	#X6
	add! 5
	store8! &15 	#X14
	load8! &12 	#X12
	load8! &13 	#X12
	add
	store4! &18
	load8! &14 	#X14
	load8! &5 	#X4
	add
	store8! &13 	#X12
	# CBRANCH
	load4! &12 	#X12
	load4! &8 	#X7
	lt_u
	jump_zero! .L127.l_o4158f7
	# END CBRANCH
	load4! &12 	#X12
	store8! &13 	#X12
	load8! &12 	#X12
	load8! &13 	#X12
	add
	store8! &13 	#X12
	push! &0
	add! 256
	load8! &13 	#X12
	add
	add! -64
	load2
	and! 0x0ffff
	store8! &13 	#X12
	load4! &17
	load8! &13 	#X12
	sub
	store8! &13 	#X12
	# CBRANCH
	push! 0
	add! -2147483648
	load4! &13 	#X12
	add! -2147483648
	lt_u
	jump_zero! .L128.l_o4158f7
	# END CBRANCH
	load8! &6 	#X6
	add! 6
	store8! &15 	#X14
	load8! &12 	#X12
	load8! &13 	#X12
	add
	store8! &14 	#X13
	load8! &14 	#X14
	load8! &5 	#X4
	add
	store8! &13 	#X12
	# CBRANCH
	load4! &12 	#X12
	load4! &8 	#X7
	lt_u
	jump_zero! .L129.l_o4158f7
	# END CBRANCH
	load4! &12 	#X12
	store8! &13 	#X12
	load8! &12 	#X12
	load8! &13 	#X12
	add
	store8! &17
	push! &0
	add! 256
	load8! &17
	add
	add! -64
	load2
	and! 0x0ffff
	load8! &14 	#X13
	sub
	neg
	store8! &13 	#X12
	# CBRANCH
	push! 0
	add! -2147483648
	load4! &13 	#X12
	add! -2147483648
	lt_u
	jump_zero! .L130.l_o4158f7
	# END CBRANCH
	load8! &6 	#X6
	add! 7
	store8! &15 	#X14
	load8! &12 	#X12
	load8! &13 	#X12
	add
	store8! &14 	#X13
	load8! &14 	#X14
	load8! &5 	#X4
	add
	store8! &13 	#X12
	# CBRANCH
	load4! &12 	#X12
	load4! &8 	#X7
	lt_u
	jump_zero! .L131.l_o4158f7
	# END CBRANCH
	load4! &12 	#X12
	store8! &13 	#X12
	load8! &12 	#X12
	load8! &13 	#X12
	add
	store8! &17
	push! &0
	add! 256
	load8! &17
	add
	add! -64
	load2
	and! 0x0ffff
	load8! &14 	#X13
	sub
	neg
	store8! &13 	#X12
	# CBRANCH
	push! 0
	add! -2147483648
	load4! &13 	#X12
	add! -2147483648
	lt_u
	jump_zero! .L132.l_o4158f7
	# END CBRANCH
	load8! &6 	#X6
	add! 8
	store8! &15 	#X14
	load8! &12 	#X12
	load8! &13 	#X12
	add
	store8! &14 	#X13
	load8! &14 	#X14
	load8! &5 	#X4
	add
	store8! &13 	#X12
	# CBRANCH
	load4! &12 	#X12
	load4! &8 	#X7
	lt_u
	jump_zero! .L133.l_o4158f7
	# END CBRANCH
	load4! &12 	#X12
	store8! &13 	#X12
	load8! &12 	#X12
	load8! &13 	#X12
	add
	store8! &17
	push! &0
	add! 256
	load8! &17
	add
	add! -64
	load2
	and! 0x0ffff
	load8! &14 	#X13
	sub
	neg
	store8! &13 	#X12
	# CBRANCH
	push! 0
	add! -2147483648
	load4! &13 	#X12
	add! -2147483648
	lt_u
	jump_zero! .L134.l_o4158f7
	# END CBRANCH
	load8! &6 	#X6
	add! 9
	store8! &15 	#X14
	load8! &12 	#X12
	load8! &13 	#X12
	add
	store8! &14 	#X13
	load8! &14 	#X14
	load8! &5 	#X4
	add
	store8! &13 	#X12
	# CBRANCH
	load4! &12 	#X12
	load4! &8 	#X7
	lt_u
	jump_zero! .L135.l_o4158f7
	# END CBRANCH
	load4! &12 	#X12
	store8! &13 	#X12
	load8! &12 	#X12
	load8! &13 	#X12
	add
	store8! &17
	push! &0
	add! 256
	load8! &17
	add
	add! -64
	load2
	and! 0x0ffff
	load8! &14 	#X13
	sub
	neg
	store8! &13 	#X12
	# CBRANCH
	push! 0
	add! -2147483648
	load4! &13 	#X12
	add! -2147483648
	lt_u
	jump_zero! .L136.l_o4158f7
	# END CBRANCH
	load8! &6 	#X6
	add! 10
	store8! &15 	#X14
	load8! &12 	#X12
	load8! &13 	#X12
	add
	store8! &14 	#X13
	load8! &14 	#X14
	load8! &5 	#X4
	add
	store8! &13 	#X12
	# CBRANCH
	load4! &12 	#X12
	load4! &8 	#X7
	lt_u
	jump_zero! .L137.l_o4158f7
	# END CBRANCH
	load4! &12 	#X12
	store8! &13 	#X12
	load8! &12 	#X12
	load8! &13 	#X12
	add
	store8! &17
	push! &0
	add! 256
	load8! &17
	add
	add! -64
	load2
	and! 0x0ffff
	load8! &14 	#X13
	sub
	neg
	store8! &13 	#X12
	# CBRANCH
	push! 0
	add! -2147483648
	load4! &13 	#X12
	add! -2147483648
	lt_u
	jump_zero! .L138.l_o4158f7
	# END CBRANCH
	load8! &6 	#X6
	add! 11
	store8! &15 	#X14
	load8! &12 	#X12
	load8! &13 	#X12
	add
	store4! &18
	load8! &14 	#X14
	load8! &5 	#X4
	add
	store8! &13 	#X12
	# CBRANCH
	load4! &12 	#X12
	load4! &8 	#X7
	lt_u
	jump_zero! .L139.l_o4158f7
	# END CBRANCH
	load4! &12 	#X12
	store8! &13 	#X12
	load8! &12 	#X12
	load8! &13 	#X12
	add
	store8! &13 	#X12
	push! &0
	add! 256
	load8! &13 	#X12
	add
	add! -64
	load2
	and! 0x0ffff
	store8! &13 	#X12
	load4! &17
	load8! &13 	#X12
	sub
	store8! &13 	#X12
	# CBRANCH
	push! 0
	add! -2147483648
	load4! &13 	#X12
	add! -2147483648
	lt_u
	jump_zero! .L140.l_o4158f7
	# END CBRANCH
	load8! &6 	#X6
	add! 12
	store8! &15 	#X14
	load8! &12 	#X12
	load8! &13 	#X12
	add
	store4! &18
	load8! &14 	#X14
	load8! &5 	#X4
	add
	store8! &13 	#X12
	# CBRANCH
	load4! &12 	#X12
	load4! &8 	#X7
	lt_u
	jump_zero! .L141.l_o4158f7
	# END CBRANCH
	load4! &12 	#X12
	store8! &13 	#X12
	load8! &12 	#X12
	load8! &13 	#X12
	add
	store8! &13 	#X12
	push! &0
	add! 256
	load8! &13 	#X12
	add
	add! -64
	load2
	and! 0x0ffff
	store8! &13 	#X12
	load4! &17
	load8! &13 	#X12
	sub
	store8! &13 	#X12
	# CBRANCH
	push! 0
	add! -2147483648
	load4! &13 	#X12
	add! -2147483648
	lt_u
	jump_zero! .L142.l_o4158f7
	# END CBRANCH
	load8! &6 	#X6
	add! 13
	store8! &15 	#X14
	load8! &12 	#X12
	load8! &13 	#X12
	add
	store8! &14 	#X13
	load8! &14 	#X14
	load8! &5 	#X4
	add
	store8! &13 	#X12
	# CBRANCH
	load4! &12 	#X12
	load4! &8 	#X7
	lt_u
	jump_zero! .L143.l_o4158f7
	# END CBRANCH
	load4! &12 	#X12
	store8! &13 	#X12
	load8! &12 	#X12
	load8! &13 	#X12
	add
	store8! &17
	push! &0
	add! 256
	load8! &17
	add
	add! -64
	load2
	and! 0x0ffff
	load8! &14 	#X13
	sub
	neg
	store8! &13 	#X12
	# CBRANCH
	push! 0
	add! -2147483648
	load4! &13 	#X12
	add! -2147483648
	lt_u
	jump_zero! .L144.l_o4158f7
	# END CBRANCH
	load8! &6 	#X6
	add! 14
	store8! &15 	#X14
	load8! &12 	#X12
	load8! &13 	#X12
	add
	store4! &18
	load8! &14 	#X14
	load8! &5 	#X4
	add
	store8! &13 	#X12
	# CBRANCH
	load4! &12 	#X12
	load4! &8 	#X7
	lt_u
	jump_zero! .L145.l_o4158f7
	# END CBRANCH
	load4! &12 	#X12
	store8! &13 	#X12
	load8! &12 	#X12
	load8! &13 	#X12
	add
	store8! &13 	#X12
	push! &0
	add! 256
	load8! &13 	#X12
	add
	add! -64
	load2
	and! 0x0ffff
	store8! &13 	#X12
	load4! &17
	load8! &13 	#X12
	sub
	store8! &13 	#X12
	# CBRANCH
	push! 0
	add! -2147483648
	load4! &13 	#X12
	add! -2147483648
	lt_u
	jump_zero! .L146.l_o4158f7
	# END CBRANCH
	load8! &6 	#X6
	add! 15
	store8! &15 	#X14
	load8! &12 	#X12
	load8! &13 	#X12
	add
	store8! &14 	#X13
	load8! &14 	#X14
	load8! &5 	#X4
	add
	store8! &13 	#X12
	# CBRANCH
	load4! &12 	#X12
	load4! &8 	#X7
	lt_u
	jump_zero! .L147.l_o4158f7
	# END CBRANCH
	load4! &12 	#X12
	store8! &13 	#X12
	load8! &12 	#X12
	load8! &13 	#X12
	add
	store8! &17
	push! &0
	add! 256
	load8! &17
	add
	add! -64
	load2
	and! 0x0ffff
	load8! &14 	#X13
	sub
	neg
	store8! &13 	#X12
	# CBRANCH
	push! 0
	add! -2147483648
	load4! &13 	#X12
	add! -2147483648
	lt_u
	jump_zero! .L187.l_o4158f7
	# END CBRANCH
	load8! &6 	#X6
	add! 16
	store8! &7 	#X6
.L51.l_o4158f7:
	load4! &6 	#X6
	store8! &13 	#X12
	push! 1
	load8! &13 	#X12
	shift_l
	load4! &19
	add
	store4! &19
	# CBRANCH EQ
	load4! &33
	push! 1
	xor
	jump_zero! .L188.l_o4158f7
	# END CBRANCH
	# CBRANCH
	load4! &33
	push! 2
	xor
	push! 1
	lt_u
	jump_zero! .L57.l_o4158f7
	# END CBRANCH
	# CBRANCH
	push! 592
	load4! &19
	lt_u
	not
	jump_zero! .L56.l_o4158f7
	# END CBRANCH
.L57.l_o4158f7:
	load4! &10 	#X10
	shift_l! 3
	load8! &21
	add
	store8! &13 	#X12
	load1! &6 	#X6
	load8! &13 	#X12
	store1
	#
	load1! &15 	#X15
	load8! &13 	#X12
	add! 1
	store1
	#
	load8! &11 	#X11
	load8! &21
	sub
	shift_rs! 3
	load8! &13 	#X12
	add! 2
	store2
	#
	load4! &10 	#X10
	store4! &18
.L190.l_o4158f7:
	load4! &0 	#AR
	store8! &12 	#X11
	jump! .L189.l_o4158f7
.L42.l_o4158f7:
	load8! &2 	#X2
	and! 0xffffffffffffff00
	or! 0x60
	and! 0xffffffff0000ffff
	store8! &3 	#X2
	load8! &4 	#X4
	load8! &4 	#X3
	sub
	neg
	and! 0xffffffff
	store8! &1 	#AR
	push! 1
	load8! &1 	#AR
	shift_l
	store8! &14 	#X13
	load4! &6 	#X6
	store8! &1 	#AR
	push! 1
	load8! &1 	#AR
	shift_l
	store8! &15 	#X14
	load4! &11 	#X11
	store8! &11 	#X10
	load4! &4 	#X4
	store8! &1 	#AR
	load8! &10 	#X10
	load8! &1 	#AR
	shift_ru
	store8! &13 	#X12
	load4! &14 	#X14
	store8! &1 	#AR
	jump! .L43.l_o4158f7
.L188.l_o4158f7:
	# CBRANCH
	push! 852
	load4! &19
	lt_u
	not
	jump_zero! .L56.l_o4158f7
	# END CBRANCH
	load4! &10 	#X10
	shift_l! 3
	load8! &21
	add
	store8! &13 	#X12
	load1! &6 	#X6
	load8! &13 	#X12
	store1
	#
	load1! &15 	#X15
	load8! &13 	#X12
	add! 1
	store1
	#
	load8! &11 	#X11
	load8! &21
	sub
	shift_rs! 3
	load8! &13 	#X12
	add! 2
	store2
	#
	load4! &10 	#X10
	store4! &18
	jump! .L190.l_o4158f7
.L48.l_o4158f7:
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_zero! .L58.l_o4158f7
	# END CBRANCH
	load8! &2 	#X2
	and! 0xffffffffffffff00
	or! 0x40
	and! 0xffffffff0000ffff
	store8! &3 	#X2
	load4! &0 	#AR
	shift_l! 3
	load8! &2 	#X1
	add
	store8! &1 	#AR
	load8! &2 	#X2
	load8! &1 	#AR
	store8
	#
.L58.l_o4158f7:
	load4! &18
	shift_l! 3
	load8! &21
	add
	load8! &37
	store8! &16 	#X14
	load8! &15 	#X14
	store8
	#
	load4! &23
	load8! &38
	store8! &2 	#AR
	load8! &1 	#AR
	store4
	#
	push! 0
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &34
	jump! .L181.l_o4158f7
.L115.l_o4158f7:
	push! -1
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &34
	jump! .L181.l_o4158f7
.L119.l_o4158f7:
	load4! &14 	#X14
	store8! &7 	#X6
	jump! .L51.l_o4158f7
.L120.l_o4158f7:
	load4! &14 	#X14
	store8! &7 	#X6
	jump! .L51.l_o4158f7
.L121.l_o4158f7:
	load4! &14 	#X14
	store8! &7 	#X6
	jump! .L51.l_o4158f7
.L122.l_o4158f7:
	load4! &14 	#X14
	store8! &7 	#X6
	jump! .L51.l_o4158f7
.L123.l_o4158f7:
	load4! &14 	#X14
	store8! &7 	#X6
	jump! .L51.l_o4158f7
.L124.l_o4158f7:
	load4! &14 	#X14
	store8! &7 	#X6
	jump! .L51.l_o4158f7
.L125.l_o4158f7:
	load4! &14 	#X14
	store8! &7 	#X6
	jump! .L51.l_o4158f7
.L4.l_o4158f7:
	load2! (+ &0 194)
	store8! &1 	#AR
	# CBRANCH EQ0
	load2! &0 	#AR
	jump_not_zero! .L191.l_o4158f7
	# END CBRANCH
	load2! (+ &0 196)
	store8! &2 	#X1
	# CBRANCH EQ0
	load2! &1 	#X1
	jump_not_zero! .L148.l_o4158f7
	# END CBRANCH
	# CBRANCH EQ0
	load2! (+ &0 198)
	jump_not_zero! .L149.l_o4158f7
	# END CBRANCH
	push! 14
	store8! &4 	#X3
	jump! .L61.l_o4158f7
.L186.l_o4158f7:
	push! 257
	store8! &9 	#X8
	push! .Li_lext_3126.l_o4158f7
	store8! &23
	push! .Li_lbase_3125.l_o4158f7
	store8! &22
	load8! &36
	store8! &13 	#X12
	load8! &12 	#X12
	load8
	#
	store8! &21
	load8! &20
	store8! &2 	#X1
	load4! &23
	store8! &7 	#X6
	push! -1
	store8! &16 	#X15
	push! 0
	store8! &12 	#X11
	push! 0
	store8! &5 	#X4
	push! 0
	store8! &6 	#X5
	load4! &15 	#X15
	store4! &18
	load4! &6 	#X6
	store8! &16 	#X15
	jump! .L39.l_o4158f7
.L78.l_o4158f7:
	push! 4
	store8! &8 	#X7
	push! 0
	store8! &1 	#AR
	push! 2
	store8! &7 	#X6
	jump! .L60.l_o4158f7
.L15.l_o4158f7:
	load2! (+ &0 194)
	store8! &1 	#AR
	# CBRANCH EQ0
	load2! &0 	#AR
	jump_not_zero! .L192.l_o4158f7
	# END CBRANCH
	load2! (+ &0 196)
	store8! &2 	#X1
	# CBRANCH EQ0
	load2! &1 	#X1
	jump_not_zero! .L150.l_o4158f7
	# END CBRANCH
	push! 3
	store8! &8 	#X7
	push! 3
	store8! &4 	#X3
	push! 0
	store8! &1 	#AR
	push! 2
	store8! &7 	#X6
	jump! .L60.l_o4158f7
.L7.l_o4158f7:
	load2! (+ &0 194)
	store8! &1 	#AR
	# CBRANCH EQ0
	load2! &0 	#AR
	jump_not_zero! .L72.l_o4158f7
	# END CBRANCH
	push! 11
	store8! &4 	#X3
	jump! .L23.l_o4158f7
.L128.l_o4158f7:
	load4! &14 	#X14
	store8! &7 	#X6
	jump! .L51.l_o4158f7
.L6.l_o4158f7:
	load2! (+ &0 194)
	store8! &1 	#AR
	# CBRANCH EQ0
	load2! &0 	#AR
	jump_not_zero! .L73.l_o4158f7
	# END CBRANCH
	push! 12
	store8! &4 	#X3
	jump! .L23.l_o4158f7
.L5.l_o4158f7:
	load2! (+ &0 194)
	store8! &1 	#AR
	# CBRANCH EQ0
	load2! &0 	#AR
	jump_not_zero! .L74.l_o4158f7
	# END CBRANCH
	push! 13
	store8! &4 	#X3
	jump! .L23.l_o4158f7
.L127.l_o4158f7:
	load4! &14 	#X14
	store8! &7 	#X6
	jump! .L51.l_o4158f7
.L126.l_o4158f7:
	load4! &14 	#X14
	store8! &7 	#X6
	jump! .L51.l_o4158f7
.L131.l_o4158f7:
	load4! &14 	#X14
	store8! &7 	#X6
	jump! .L51.l_o4158f7
.L130.l_o4158f7:
	load4! &14 	#X14
	store8! &7 	#X6
	jump! .L51.l_o4158f7
.L129.l_o4158f7:
	load4! &14 	#X14
	store8! &7 	#X6
	jump! .L51.l_o4158f7
.L10.l_o4158f7:
	load2! (+ &0 194)
	store8! &1 	#AR
	# CBRANCH EQ0
	load2! &0 	#AR
	jump_not_zero! .L69.l_o4158f7
	# END CBRANCH
	push! 8
	store8! &4 	#X3
	jump! .L23.l_o4158f7
.L9.l_o4158f7:
	load2! (+ &0 194)
	store8! &1 	#AR
	# CBRANCH EQ0
	load2! &0 	#AR
	jump_not_zero! .L70.l_o4158f7
	# END CBRANCH
	push! 9
	store8! &4 	#X3
	jump! .L23.l_o4158f7
.L8.l_o4158f7:
	load2! (+ &0 194)
	store8! &1 	#AR
	# CBRANCH EQ0
	load2! &0 	#AR
	jump_not_zero! .L71.l_o4158f7
	# END CBRANCH
	push! 10
	store8! &4 	#X3
	jump! .L23.l_o4158f7
.L12.l_o4158f7:
	load2! (+ &0 194)
	store8! &1 	#AR
	# CBRANCH EQ0
	load2! &0 	#AR
	jump_not_zero! .L67.l_o4158f7
	# END CBRANCH
	push! 6
	store8! &4 	#X3
	jump! .L23.l_o4158f7
.L11.l_o4158f7:
	load2! (+ &0 194)
	store8! &1 	#AR
	# CBRANCH EQ0
	load2! &0 	#AR
	jump_not_zero! .L68.l_o4158f7
	# END CBRANCH
	push! 7
	store8! &4 	#X3
	jump! .L23.l_o4158f7
.L13.l_o4158f7:
	load2! (+ &0 194)
	store8! &1 	#AR
	# CBRANCH EQ0
	load2! &0 	#AR
	jump_not_zero! .L66.l_o4158f7
	# END CBRANCH
	push! 5
	store8! &4 	#X3
	jump! .L23.l_o4158f7
.L134.l_o4158f7:
	load4! &14 	#X14
	store8! &7 	#X6
	jump! .L51.l_o4158f7
.L103.l_o4158f7:
	push! -1
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &34
	jump! .L181.l_o4158f7
.L102.l_o4158f7:
	push! -1
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &34
	jump! .L181.l_o4158f7
.L101.l_o4158f7:
	push! -1
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &34
	jump! .L181.l_o4158f7
.L133.l_o4158f7:
	load4! &14 	#X14
	store8! &7 	#X6
	jump! .L51.l_o4158f7
.L132.l_o4158f7:
	load4! &14 	#X14
	store8! &7 	#X6
	jump! .L51.l_o4158f7
.L135.l_o4158f7:
	load4! &14 	#X14
	store8! &7 	#X6
	jump! .L51.l_o4158f7
.L107.l_o4158f7:
	push! -1
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &34
	jump! .L181.l_o4158f7
.L106.l_o4158f7:
	push! -1
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &34
	jump! .L181.l_o4158f7
.L105.l_o4158f7:
	push! -1
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &34
	jump! .L181.l_o4158f7
.L104.l_o4158f7:
	push! -1
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &34
	jump! .L181.l_o4158f7
.L139.l_o4158f7:
	load4! &14 	#X14
	store8! &7 	#X6
	jump! .L51.l_o4158f7
.L138.l_o4158f7:
	load4! &14 	#X14
	store8! &7 	#X6
	jump! .L51.l_o4158f7
.L137.l_o4158f7:
	load4! &14 	#X14
	store8! &7 	#X6
	jump! .L51.l_o4158f7
.L136.l_o4158f7:
	load4! &14 	#X14
	store8! &7 	#X6
	jump! .L51.l_o4158f7
.L79.l_o4158f7:
	push! 4
	store8! &1 	#AR
	load4! &3 	#X3
	store8! &8 	#X7
	load4! &0 	#AR
	store8! &4 	#X3
	jump! .L193.l_o4158f7
.L77.l_o4158f7:
	push! 3
	store8! &1 	#AR
	load4! &3 	#X3
	store8! &8 	#X7
	load4! &0 	#AR
	store8! &4 	#X3
	jump! .L193.l_o4158f7
.L16.l_o4158f7:
	load2! (+ &0 194)
	store8! &1 	#AR
	# CBRANCH EQ0
	load2! &0 	#AR
	jump_not_zero! .L76.l_o4158f7
	# END CBRANCH
	push! 2
	store8! &8 	#X7
	push! 2
	store8! &4 	#X3
	push! 0
	store8! &1 	#AR
	push! 2
	store8! &7 	#X6
	jump! .L60.l_o4158f7
.L180.l_o4158f7:
	push! 1
	store8! &8 	#X7
.L22.l_o4158f7:
	load2! &0 	#AR
	store8! &2 	#X1
	push! 2
	load8! &2 	#X1
	sub
	store8! &7 	#X6
	# CBRANCH
	load4! &6 	#X6
	add! -2147483648
	push! 0
	add! -2147483648
	lt_u
	not
	jump_zero! .L100.l_o4158f7
	# END CBRANCH
	push! 1
	store8! &4 	#X3
	load2! (+ &0 196)
	store8! &2 	#X1
	jump! .L60.l_o4158f7
.L100.l_o4158f7:
	push! -1
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &34
	jump! .L181.l_o4158f7
.L14.l_o4158f7:
	load2! (+ &0 194)
	store8! &1 	#AR
	# CBRANCH EQ0
	load2! &0 	#AR
	jump_not_zero! .L65.l_o4158f7
	# END CBRANCH
	push! 4
	store8! &4 	#X3
	jump! .L23.l_o4158f7
.L145.l_o4158f7:
	load4! &14 	#X14
	store8! &7 	#X6
	jump! .L51.l_o4158f7
.L113.l_o4158f7:
	push! -1
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &34
	jump! .L181.l_o4158f7
.L112.l_o4158f7:
	push! -1
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &34
	jump! .L181.l_o4158f7
.L144.l_o4158f7:
	load4! &14 	#X14
	store8! &7 	#X6
	jump! .L51.l_o4158f7
.L111.l_o4158f7:
	push! -1
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &34
	jump! .L181.l_o4158f7
.L110.l_o4158f7:
	push! -1
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &34
	jump! .L181.l_o4158f7
.L109.l_o4158f7:
	push! -1
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &34
	jump! .L181.l_o4158f7
.L108.l_o4158f7:
	push! -1
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &34
	jump! .L181.l_o4158f7
.L143.l_o4158f7:
	load4! &14 	#X14
	store8! &7 	#X6
	jump! .L51.l_o4158f7
.L142.l_o4158f7:
	load4! &14 	#X14
	store8! &7 	#X6
	jump! .L51.l_o4158f7
.L141.l_o4158f7:
	load4! &14 	#X14
	store8! &7 	#X6
	jump! .L51.l_o4158f7
.L140.l_o4158f7:
	load4! &14 	#X14
	store8! &7 	#X6
	jump! .L51.l_o4158f7
.L81.l_o4158f7:
	push! 5
	store8! &1 	#AR
	load4! &3 	#X3
	store8! &8 	#X7
	load4! &0 	#AR
	store8! &4 	#X3
	jump! .L193.l_o4158f7
.L80.l_o4158f7:
	push! 5
	store8! &8 	#X7
	push! 0
	store8! &1 	#AR
	push! 2
	store8! &7 	#X6
	jump! .L60.l_o4158f7
.L85.l_o4158f7:
	push! 7
	store8! &1 	#AR
	load4! &3 	#X3
	store8! &8 	#X7
	load4! &0 	#AR
	store8! &4 	#X3
	jump! .L193.l_o4158f7
.L84.l_o4158f7:
	push! 7
	store8! &8 	#X7
	push! 0
	store8! &1 	#AR
	push! 2
	store8! &7 	#X6
	jump! .L60.l_o4158f7
.L83.l_o4158f7:
	push! 6
	store8! &1 	#AR
	load4! &3 	#X3
	store8! &8 	#X7
	load4! &0 	#AR
	store8! &4 	#X3
	jump! .L193.l_o4158f7
.L82.l_o4158f7:
	push! 6
	store8! &8 	#X7
	push! 0
	store8! &1 	#AR
	push! 2
	store8! &7 	#X6
	jump! .L60.l_o4158f7
.L114.l_o4158f7:
	push! -1
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &34
	jump! .L181.l_o4158f7
.L187.l_o4158f7:
	load4! &14 	#X14
	store8! &7 	#X6
	jump! .L51.l_o4158f7
.L94.l_o4158f7:
	push! 12
	store8! &8 	#X7
	push! 0
	store8! &1 	#AR
	push! 2
	store8! &7 	#X6
	jump! .L60.l_o4158f7
.L92.l_o4158f7:
	push! 11
	store8! &8 	#X7
	push! 0
	store8! &1 	#AR
	push! 2
	store8! &7 	#X6
	jump! .L60.l_o4158f7
.L91.l_o4158f7:
	push! 10
	store8! &1 	#AR
	load4! &3 	#X3
	store8! &8 	#X7
	load4! &0 	#AR
	store8! &4 	#X3
	jump! .L193.l_o4158f7
.L90.l_o4158f7:
	push! 10
	store8! &8 	#X7
	push! 0
	store8! &1 	#AR
	push! 2
	store8! &7 	#X6
	jump! .L60.l_o4158f7
.L89.l_o4158f7:
	push! 9
	store8! &1 	#AR
	load4! &3 	#X3
	store8! &8 	#X7
	load4! &0 	#AR
	store8! &4 	#X3
	jump! .L193.l_o4158f7
.L88.l_o4158f7:
	push! 9
	store8! &8 	#X7
	push! 0
	store8! &1 	#AR
	push! 2
	store8! &7 	#X6
	jump! .L60.l_o4158f7
.L87.l_o4158f7:
	push! 8
	store8! &1 	#AR
	load4! &3 	#X3
	store8! &8 	#X7
	load4! &0 	#AR
	store8! &4 	#X3
	jump! .L193.l_o4158f7
.L86.l_o4158f7:
	push! 8
	store8! &8 	#X7
	push! 0
	store8! &1 	#AR
	push! 2
	store8! &7 	#X6
	jump! .L60.l_o4158f7
.L147.l_o4158f7:
	load4! &14 	#X14
	store8! &7 	#X6
	jump! .L51.l_o4158f7
.L146.l_o4158f7:
	load4! &14 	#X14
	store8! &7 	#X6
	jump! .L51.l_o4158f7
.L95.l_o4158f7:
	push! 12
	store8! &1 	#AR
	load4! &3 	#X3
	store8! &8 	#X7
	load4! &0 	#AR
	store8! &4 	#X3
	jump! .L193.l_o4158f7
.L183.l_o4158f7:
	push! 0
	store8! &9 	#X8
	push! .Li_dext_3128.l_o4158f7
	store8! &23
	push! .Li_dbase_3127.l_o4158f7
	store8! &22
	load8! &36
	store8! &13 	#X12
	load8! &12 	#X12
	load8
	#
	store8! &21
	load8! &20
	store8! &2 	#X1
	load4! &23
	store8! &7 	#X6
	push! -1
	store8! &16 	#X15
	push! 0
	store8! &12 	#X11
	push! 0
	store8! &5 	#X4
	push! 0
	store8! &6 	#X5
	load4! &15 	#X15
	store4! &18
	load4! &6 	#X6
	store8! &16 	#X15
	jump! .L39.l_o4158f7
.L97.l_o4158f7:
	push! 13
	store8! &1 	#AR
	load4! &3 	#X3
	store8! &8 	#X7
	load4! &0 	#AR
	store8! &4 	#X3
	jump! .L193.l_o4158f7
.L96.l_o4158f7:
	push! 13
	store8! &8 	#X7
	push! 0
	store8! &1 	#AR
	push! 2
	store8! &7 	#X6
	jump! .L60.l_o4158f7
.L98.l_o4158f7:
	push! 14
	store8! &8 	#X7
	push! 14
	store8! &4 	#X3
	push! 0
	store8! &1 	#AR
	push! 2
	store8! &7 	#X6
	jump! .L60.l_o4158f7
.L68.l_o4158f7:
	push! 7
	store8! &8 	#X7
	jump! .L22.l_o4158f7
.L65.l_o4158f7:
	push! 4
	store8! &8 	#X7
	jump! .L22.l_o4158f7
.L191.l_o4158f7:
	push! 14
	store8! &8 	#X7
	jump! .L22.l_o4158f7
.L69.l_o4158f7:
	push! 8
	store8! &8 	#X7
	jump! .L22.l_o4158f7
.L71.l_o4158f7:
	push! 10
	store8! &8 	#X7
	jump! .L22.l_o4158f7
.L67.l_o4158f7:
	push! 6
	store8! &8 	#X7
	jump! .L22.l_o4158f7
.L66.l_o4158f7:
	push! 5
	store8! &8 	#X7
	jump! .L22.l_o4158f7
.L63.l_o4158f7:
	push! 15
	store8! &8 	#X7
	jump! .L22.l_o4158f7
.L182.l_o4158f7:
	push! 2
	store8! &1 	#AR
	load4! &3 	#X3
	store8! &8 	#X7
	load4! &0 	#AR
	store8! &4 	#X3
	jump! .L193.l_o4158f7
.L76.l_o4158f7:
	push! 2
	store8! &8 	#X7
	jump! .L22.l_o4158f7
.L150.l_o4158f7:
	push! 3
	store8! &4 	#X3
	push! 2
	store8! &1 	#AR
	load4! &3 	#X3
	store8! &8 	#X7
	load4! &0 	#AR
	store8! &4 	#X3
	jump! .L193.l_o4158f7
.L192.l_o4158f7:
	push! 3
	store8! &8 	#X7
	jump! .L22.l_o4158f7
.L73.l_o4158f7:
	push! 12
	store8! &8 	#X7
	jump! .L22.l_o4158f7
.L70.l_o4158f7:
	push! 9
	store8! &8 	#X7
	jump! .L22.l_o4158f7
.L74.l_o4158f7:
	push! 13
	store8! &8 	#X7
	jump! .L22.l_o4158f7
.L72.l_o4158f7:
	push! 11
	store8! &8 	#X7
	jump! .L22.l_o4158f7
.L149.l_o4158f7:
	push! 14
	store8! &4 	#X3
	push! 3
	store8! &1 	#AR
	load4! &3 	#X3
	store8! &8 	#X7
	load4! &0 	#AR
	store8! &4 	#X3
	jump! .L193.l_o4158f7
.L148.l_o4158f7:
	push! 14
	store8! &4 	#X3
	push! 2
	store8! &1 	#AR
	load4! &3 	#X3
	store8! &8 	#X7
	load4! &0 	#AR
	store8! &4 	#X3
	jump! .L193.l_o4158f7
.L181.l_o4158f7:

	# epilogue
	set_sp! &32
	return

# FUNCTION ENDS:inflate_table

.Li_dext_3128.l_o4158f7:
	data2 [16]
	data2 [16]
	data2 [16]
	data2 [16]
	data2 [17]
	data2 [17]
	data2 [18]
	data2 [18]
	data2 [19]
	data2 [19]
	data2 [20]
	data2 [20]
	data2 [21]
	data2 [21]
	data2 [22]
	data2 [22]
	data2 [23]
	data2 [23]
	data2 [24]
	data2 [24]
	data2 [25]
	data2 [25]
	data2 [26]
	data2 [26]
	data2 [27]
	data2 [27]
	data2 [28]
	data2 [28]
	data2 [29]
	data2 [29]
	data2 [64]
	data2 [64]
.Li_dbase_3127.l_o4158f7:
	data2 [1]
	data2 [2]
	data2 [3]
	data2 [4]
	data2 [5]
	data2 [7]
	data2 [9]
	data2 [13]
	data2 [17]
	data2 [25]
	data2 [33]
	data2 [49]
	data2 [65]
	data2 [97]
	data2 [129]
	data2 [193]
	data2 [257]
	data2 [385]
	data2 [513]
	data2 [769]
	data2 [1025]
	data2 [1537]
	data2 [2049]
	data2 [3073]
	data2 [4097]
	data2 [6145]
	data2 [8193]
	data2 [12289]
	data2 [16385]
	data2 [24577]
	data2 [0]
	data2 [0]
.Li_lext_3126.l_o4158f7:
	data2 [16]
	data2 [16]
	data2 [16]
	data2 [16]
	data2 [16]
	data2 [16]
	data2 [16]
	data2 [16]
	data2 [17]
	data2 [17]
	data2 [17]
	data2 [17]
	data2 [18]
	data2 [18]
	data2 [18]
	data2 [18]
	data2 [19]
	data2 [19]
	data2 [19]
	data2 [19]
	data2 [20]
	data2 [20]
	data2 [20]
	data2 [20]
	data2 [21]
	data2 [21]
	data2 [21]
	data2 [21]
	data2 [16]
	data2 [77]
	data2 [202]
.Li_lbase_3125.l_o4158f7:
	data2 [3]
	data2 [4]
	data2 [5]
	data2 [6]
	data2 [7]
	data2 [8]
	data2 [9]
	data2 [10]
	data2 [11]
	data2 [13]
	data2 [15]
	data2 [17]
	data2 [19]
	data2 [23]
	data2 [27]
	data2 [31]
	data2 [35]
	data2 [43]
	data2 [51]
	data2 [59]
	data2 [67]
	data2 [83]
	data2 [99]
	data2 [115]
	data2 [131]
	data2 [163]
	data2 [195]
	data2 [227]
	data2 [258]
	data2 [0]
	data2 [0]
	EXPORT	inflate_copyright
inflate_copyright:
#	.string " inflate 1.2.11 Copyright 1995-2017 Mark Adler "
	data1 [ 32 105 110 102 108 97 116 101 32 49 46 50 46 49 49 32 67 111 112 121 114 105 103 104 116 32 49 57 57 53 45 50 48 49 55 32 77 97 114 107 32 65 100 108 101 114 32 0 ]
#	IMPORT memset
#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: oc26bd2
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"trees.c"
#	.text
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+pushdi
	#peephole move_dead
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+ind push
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole unary+deadreg+binop
	#peephole unary1+binop2+deadreg+binop3
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole move+push(pushable)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole zero_extend
	#peephole popdi(deadreg)+push
	#peephole and+pophi
	#peephole popdi(deadreg)+push
	#peephole and+pophi
	#peephole popdi(deadreg)+push
	#peephole and+pophi

# FUNCTION BEGINS:scan_tree
scan_tree.s_oc26bd2:
	# prologue (9 GPRs)

	set_sp! &-9

	load8! &10
	store8! &6 	#X5
	load8! &11
	store8! &2 	#X1
	load4! &12
	store8! &3 	#X2
	load8! &1 	#X1
	add! 8
	load2
	#
	and! 0x0ffff
	store8! &5 	#X4
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_not_zero! .L11.l_oc26bd2
	# END CBRANCH
	push! 3
	store8! &7 	#X6
	push! 138
	store8! &4 	#X3
.L2.l_oc26bd2:
	load4! &2 	#X2
	sigx4
	add! 1
	shift_l! 4
	load8! &2 	#X1
	add
	store8! &1 	#AR
	push! -1
	load8! &1 	#AR
	add! 8
	store2
	#
	# CBRANCH
	load4! &2 	#X2
	add! -2147483648
	push! 0
	add! -2147483648
	lt_u
	not
	jump_zero! .L1.l_oc26bd2
	# END CBRANCH
	load8! &1 	#X1
	add! 24
	store8! &1 	#AR
	load4! &2 	#X2
	sigx4
	shift_l! 4
	store8! &3 	#X2
	load8! &1 	#X1
	add! 40
	load8! &3 	#X2
	add
	store8! &9 	#X8
	push! 0
	store8! &2 	#X1
	push! -1
	store8! &8 	#X7
.L10.l_oc26bd2:
	load8! &0 	#AR
	load2
	#
	store8! &3 	#X2
	load8! &1 	#X1
	add! 1
	store8! &2 	#X1
	# CBRANCH
	load4! &1 	#X1
	add! -2147483648
	load4! &4 	#X3
	add! -2147483648
	lt_u
	jump_zero! .L4.l_oc26bd2
	# END CBRANCH
	# CBRANCH EQ
	load4! &2 	#X2
	load4! &5 	#X4
	xor
	jump_zero! .L5.l_oc26bd2
	# END CBRANCH
	# CBRANCH
	load4! &1 	#X1
	add! -2147483648
	load4! &7 	#X6
	add! -2147483648
	lt_u
	jump_zero! .L4.l_oc26bd2
	# END CBRANCH
	load4! &4 	#X4
	sigx4
	shift_l! 4
	load8! &6 	#X5
	add
	add! 10360
	load2
	store8! &7 	#X6
	load2! &1 	#X1
	load8! &7 	#X6
	add
	store8! &4 	#X3
	load4! &4 	#X4
	sigx4
	shift_l! 4
	load8! &6 	#X5
	add
	add! 10360
	store8! &2 	#X1
	load2! &3 	#X3
	load8! &2 	#X1
	store2
	#
	# CBRANCH EQ0
	load4! &2 	#X2
	jump_not_zero! .L12.l_oc26bd2
	# END CBRANCH
	push! 0
	store8! &2 	#X1
	load4! &4 	#X4
	store8! &8 	#X7
	push! 3
	store8! &7 	#X6
	push! 138
	store8! &4 	#X3
.L5.l_oc26bd2:
	load8! &0 	#AR
	add! 16
	store8! &1 	#AR
	load4! &2 	#X2
	store8! &5 	#X4
	# CBRANCH
	load8! &8 	#X8
	load8! &1 	#AR
	xor
	push! 1
	lt_u
	jump_zero! .L10.l_oc26bd2
	# END CBRANCH
	jump! .L1.l_oc26bd2
.L4.l_oc26bd2:
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_zero! .L6.l_oc26bd2
	# END CBRANCH
	# CBRANCH EQ
	load4! &4 	#X4
	load4! &8 	#X7
	xor
	jump_zero! .L7.l_oc26bd2
	# END CBRANCH
	load4! &4 	#X4
	sigx4
	shift_l! 4
	load8! &6 	#X5
	add
	add! 10360
	load2
	add! 1
	store8! &4 	#X3
	load4! &4 	#X4
	sigx4
	shift_l! 4
	load8! &6 	#X5
	add
	add! 10360
	store8! &2 	#X1
	load2! &3 	#X3
	load8! &2 	#X1
	store2
	#
.L7.l_oc26bd2:
	load8! &5 	#X5
	add! 10616
	load2
	#
	add! 1
	load8! &6 	#X5
	add! 10616
	store2
	#
.L8.l_oc26bd2:
	# CBRANCH EQ0
	load4! &2 	#X2
	jump_zero! .L13.l_oc26bd2
	# END CBRANCH
.L19.l_oc26bd2:
	# CBRANCH
	load4! &2 	#X2
	load4! &5 	#X4
	xor
	push! 1
	lt_u
	jump_zero! .L18.l_oc26bd2
	# END CBRANCH
	load4! &2 	#X2
	store8! &8 	#X7
	push! 3
	store8! &7 	#X6
	push! 6
	store8! &4 	#X3
	push! 0
	store8! &2 	#X1
	load8! &0 	#AR
	add! 16
	store8! &1 	#AR
	load4! &2 	#X2
	store8! &5 	#X4
	# CBRANCH
	load8! &8 	#X8
	load8! &1 	#AR
	xor
	push! 1
	lt_u
	jump_zero! .L10.l_oc26bd2
	# END CBRANCH
	jump! .L1.l_oc26bd2
.L12.l_oc26bd2:
	load4! &4 	#X4
	store8! &8 	#X7
	push! 4
	store8! &7 	#X6
	push! 7
	store8! &4 	#X3
	push! 0
	store8! &2 	#X1
	load8! &0 	#AR
	add! 16
	store8! &1 	#AR
	load4! &2 	#X2
	store8! &5 	#X4
	# CBRANCH
	load8! &8 	#X8
	load8! &1 	#AR
	xor
	push! 1
	lt_u
	jump_zero! .L10.l_oc26bd2
	# END CBRANCH
	jump! .L1.l_oc26bd2
.L6.l_oc26bd2:
	# CBRANCH
	push! 10
	add! -2147483648
	load4! &2 	#X1
	add! -2147483648
	lt_u
	not
	jump_zero! .L9.l_oc26bd2
	# END CBRANCH
	load8! &5 	#X5
	add! 10632
	load2
	#
	add! 1
	load8! &6 	#X5
	add! 10632
	store2
	#
	# CBRANCH EQ0
	load4! &2 	#X2
	jump_not_zero! .L19.l_oc26bd2
	# END CBRANCH
.L13.l_oc26bd2:
	push! 0
	store8! &2 	#X1
	load4! &4 	#X4
	store8! &8 	#X7
	push! 3
	store8! &7 	#X6
	push! 138
	store8! &4 	#X3
	load8! &0 	#AR
	add! 16
	store8! &1 	#AR
	load4! &2 	#X2
	store8! &5 	#X4
	# CBRANCH
	load8! &8 	#X8
	load8! &1 	#AR
	xor
	push! 1
	lt_u
	jump_zero! .L10.l_oc26bd2
	# END CBRANCH
	jump! .L1.l_oc26bd2
.L9.l_oc26bd2:
	load8! &5 	#X5
	add! 10648
	load2
	#
	add! 1
	load8! &6 	#X5
	add! 10648
	store2
	#
	jump! .L8.l_oc26bd2
.L18.l_oc26bd2:
	load4! &4 	#X4
	store8! &8 	#X7
	push! 4
	store8! &7 	#X6
	push! 7
	store8! &4 	#X3
	push! 0
	store8! &2 	#X1
	load8! &0 	#AR
	add! 16
	store8! &1 	#AR
	load4! &2 	#X2
	store8! &5 	#X4
	# CBRANCH
	load8! &8 	#X8
	load8! &1 	#AR
	xor
	push! 1
	lt_u
	jump_zero! .L10.l_oc26bd2
	# END CBRANCH
	jump! .L1.l_oc26bd2
.L11.l_oc26bd2:
	push! 4
	store8! &7 	#X6
	push! 7
	store8! &4 	#X3
	jump! .L2.l_oc26bd2
.L1.l_oc26bd2:

	# epilogue
	set_sp! &9
	return

# FUNCTION ENDS:scan_tree

	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole pop+push(deadreg)+shiftl
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole move
	#peephole move+push+sub
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole 1
	#peephole move
	#peephole move+push(pushable)
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole move
	#peephole move+push+sub
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole pop+push(deadreg)+shiftl
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole move
	#peephole move+push+sub
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole 1
	#peephole move
	#peephole move+push(pushable)
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole move
	#peephole move+push+sub
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole pop+push(deadreg)+shiftl
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole move
	#peephole move+push+sub
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole 1
	#peephole move
	#peephole move+push(pushable)
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move
	#peephole move+push+sub
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole 1
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole move
	#peephole move+push+sub
	#peephole move_dead
	#peephole 1
	#peephole move
	#peephole move+push(pushable)
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole unary+deadreg+binop
	#peephole unary1+binop2+deadreg+binop3
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole move
	#peephole move+push+sub
	#peephole move_dead
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole move
	#peephole move+push+sub
	#peephole move_dead
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move
	#peephole move+push+sub
	#peephole move_dead
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move
	#peephole move+push+sub
	#peephole move_dead
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole nop+set
	#peephole move+push(pushable)
	#peephole pop+block+cmp
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+commut(di)
	#peephole pop+block+push+commut(di)
	#peephole push+add+pop+push+ind pop
	#peephole push+add+pop+push+ind pop
	#peephole pop+block+push+block
	#peephole push+add+pop+push+ind pop
	#peephole push+add+pop+push+ind pop
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole zero_extend
	#peephole pop+block+push+commut(di)
	#peephole redundant blockage insn
	#peephole pop+block+push+commut(di)
	#peephole pop+block+push+commut(di)
	#peephole push+add+pop+push+ind pop
	#peephole push+add+pop+push+ind pop
	#peephole pop+block+push+block
	#peephole push+add+pop+push+ind pop
	#peephole push+add+pop+push+ind pop
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole zero_extend
	#peephole pop+block+push+commut(di)
	#peephole redundant blockage insn
	#peephole pop+block+push+commut(di)
	#peephole pop+block+push+commut(di)
	#peephole push+add+pop+push+ind pop
	#peephole push+add+pop+push+ind pop
	#peephole pop+block+push+block
	#peephole push+add+pop+push+ind pop
	#peephole push+add+pop+push+ind pop
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole push+add+pop+push+ind pop
	#peephole push+add+pop+push+ind pop
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+commut(di)
	#peephole push+add+pop+push+ind pop
	#peephole push+add+pop+push+ind pop
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole push+add+pop+push+ind pop
	#peephole push+add+pop+push+ind pop
	#peephole pop+block+push+block
	#peephole pop+block+push+commut(di)
	#peephole pop+block+push+commut(di)
	#peephole push+add+pop+push+ind pop
	#peephole push+add+pop+push+ind pop
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+commut(di)
	#peephole zero_extend
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole and+pophi
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole and+pophi
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole and+pophi
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole and+pophi
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole and+pophi
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole and+pophi
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole and+pophi
	#peephole popdi(deadreg)+push
	#peephole and+popsi

# FUNCTION BEGINS:send_tree
send_tree.s_oc26bd2:
	# prologue (13 GPRs)

	set_sp! &-13

	load8! &14
	store8! &1 	#AR
	load8! &15
	store8! &4 	#X3
	load8! &3 	#X3
	add! 8
	load2
	#
	and! 0x0ffff
	store8! &8 	#X7
	# CBRANCH EQ0
	load4! &7 	#X7
	jump_not_zero! .L49.l_oc26bd2
	# END CBRANCH
	push! 3
	store8! &9 	#X8
	push! 138
	store8! &3 	#X2
.L21.l_oc26bd2:
	# CBRANCH
	load4! &16
	add! -2147483648
	push! 0
	add! -2147483648
	lt_u
	not
	jump_zero! .L20.l_oc26bd2
	# END CBRANCH
	load8! &3 	#X3
	add! 24
	store8! &2 	#X1
	load4! &16
	sigx4
	shift_l! 4
	store8! &5 	#X4
	load8! &3 	#X3
	add! 40
	load8! &5 	#X4
	add
	store8! &10 	#X9
	push! 0
	store8! &6 	#X5
	push! -1
	store8! &11 	#X10
.L47.l_oc26bd2:
	load8! &1 	#X1
	load2
	#
	store8! &4 	#X3
	load8! &5 	#X5
	add! 1
	store8! &5 	#X4
	# CBRANCH
	load4! &4 	#X4
	add! -2147483648
	load4! &3 	#X2
	add! -2147483648
	lt_u
	jump_zero! .L23.l_oc26bd2
	# END CBRANCH
	# CBRANCH EQ
	load4! &3 	#X3
	load4! &8 	#X7
	xor
	jump_zero! .L50.l_oc26bd2
	# END CBRANCH
	load8! &0 	#AR
	add! 14020
	load4
	#
	store8! &3 	#X2
	load8! &0 	#AR
	add! 14016
	load2
	#
	store8! &7 	#X6
	# CBRANCH
	load4! &4 	#X4
	add! -2147483648
	load4! &9 	#X8
	add! -2147483648
	lt_u
	jump_zero! .L25.l_oc26bd2
	# END CBRANCH
	load4! &7 	#X7
	sigx4
	shift_l! 4
	load8! &1 	#AR
	add
	store8! &9 	#X8
	load8! &8 	#X8
	add! 10368
	load2
	#
	and! 0x0ffff
	store8! &11 	#X10
	load8! &10 	#X10
	sub! 16
	neg
	store8! &13 	#X12
	load4! &7 	#X7
	sigx4
	shift_l! 4
	load8! &1 	#AR
	add
	add! 10360
	load2
	and! 0x0ffff
	store8! &12 	#X11
	load4! &2 	#X2
	sigx4
	store8! &5 	#X4
	load8! &11 	#X11
	load8! &5 	#X4
	shift_l
	load8! &7 	#X6
	or
	store8! &5 	#X4
	# CBRANCH
	load4! &12 	#X12
	add! -2147483648
	load4! &3 	#X2
	add! -2147483648
	lt_u
	not
	jump_zero! .L26.l_oc26bd2
	# END CBRANCH
	load2! &4 	#X4
	load8! &1 	#AR
	add! 14016
	store2
	#
	load8! &2 	#X2
	load8! &11 	#X10
	add
	store8! &7 	#X6
	load4! &6 	#X6
	load8! &1 	#AR
	add! 14020
	store4
	#
.L27.l_oc26bd2:
	# CBRANCH EQ0
	load4! &5 	#X5
	jump_zero! .L28.l_oc26bd2
	# END CBRANCH
	load8! &8 	#X8
	add! 10368
	load2
	#
	and! 0x0ffff
	store8! &11 	#X10
	load8! &10 	#X10
	sub! 16
	neg
	store8! &13 	#X12
	load4! &7 	#X7
	sigx4
	shift_l! 4
	load8! &1 	#AR
	add
	add! 10360
	load2
	and! 0x0ffff
	store8! &12 	#X11
	load4! &6 	#X6
	sigx4
	store8! &3 	#X2
	load8! &11 	#X11
	load8! &3 	#X2
	shift_l
	load8! &5 	#X4
	or
	store8! &3 	#X2
	# CBRANCH
	load4! &12 	#X12
	add! -2147483648
	load4! &7 	#X6
	add! -2147483648
	lt_u
	not
	jump_zero! .L29.l_oc26bd2
	# END CBRANCH
	load2! &2 	#X2
	load8! &1 	#AR
	add! 14016
	store2
	#
	load8! &6 	#X6
	load8! &11 	#X10
	add
	store8! &5 	#X4
	load4! &4 	#X4
	load8! &1 	#AR
	add! 14020
	store4
	#
.L30.l_oc26bd2:
	# CBRANCH EQ
	load4! &5 	#X5
	push! 1
	xor
	jump_zero! .L28.l_oc26bd2
	# END CBRANCH
	load8! &8 	#X8
	add! 10368
	load2
	#
	store8! &6 	#X5
	load8! &5 	#X5
	sub! 16
	neg
	store8! &9 	#X8
	load4! &7 	#X7
	sigx4
	shift_l! 4
	load8! &1 	#AR
	add
	add! 10360
	load2
	and! 0x0ffff
	store8! &7 	#X6
	load4! &4 	#X4
	sigx4
	store8! &11 	#X10
	load8! &6 	#X6
	load8! &11 	#X10
	shift_l
	load8! &3 	#X2
	or
	store8! &3 	#X2
	# CBRANCH
	load4! &8 	#X8
	add! -2147483648
	load4! &5 	#X4
	add! -2147483648
	lt_u
	jump_zero! .L31.l_oc26bd2
	# END CBRANCH
	load2! &2 	#X2
	load8! &1 	#AR
	add! 14016
	store2
	#
	load8! &0 	#AR
	add! 16
	load8
	#
	store8! &9 	#X8
	load8! &0 	#AR
	add! 40
	load8
	#
	store8! &5 	#X4
	load8! &4 	#X4
	add! 1
	load8! &1 	#AR
	add! 40
	store8
	#
	load1! &2 	#X2
	load8! &9 	#X8
	load8! &6 	#X4
	add
	store1
	load8! &0 	#AR
	add! 14016
	load2
	#
	and! 0x0ffff
	shift_ru! 8
	store8! &5 	#X4
	load8! &0 	#AR
	add! 16
	load8
	#
	store8! &9 	#X8
	load8! &0 	#AR
	add! 40
	load8
	#
	store8! &3 	#X2
	load8! &2 	#X2
	add! 1
	load8! &1 	#AR
	add! 40
	store8
	#
	load1! &4 	#X4
	load8! &9 	#X8
	load8! &4 	#X2
	add
	store1
	load8! &0 	#AR
	add! 14020
	load4
	#
	store8! &3 	#X2
	load8! &2 	#X2
	sub! 16
	neg
	store8! &5 	#X4
	load4! &6 	#X6
	sigx4
	store8! &7 	#X6
	load4! &4 	#X4
	sigx4
	store8! &5 	#X4
	load8! &6 	#X6
	load8! &5 	#X4
	shift_rs
	load8! &1 	#AR
	add! 14016
	store2
	#
	load8! &5 	#X5
	add! -16
	load8! &3 	#X2
	add
	load8! &1 	#AR
	add! 14020
	store4
	#
.L28.l_oc26bd2:
	# CBRANCH EQ0
	load4! &3 	#X3
	jump_not_zero! .L53.l_oc26bd2
	# END CBRANCH
	push! 0
	store8! &6 	#X5
	load4! &7 	#X7
	store8! &11 	#X10
	push! 3
	store8! &9 	#X8
	push! 138
	store8! &3 	#X2
	load8! &1 	#X1
	add! 16
	store8! &2 	#X1
	load4! &3 	#X3
	store8! &8 	#X7
	# CBRANCH
	load8! &9 	#X9
	load8! &2 	#X1
	xor
	push! 1
	lt_u
	jump_zero! .L47.l_oc26bd2
	# END CBRANCH
	jump! .L20.l_oc26bd2
.L23.l_oc26bd2:
	load8! &0 	#AR
	add! 14020
	load4
	#
	store8! &3 	#X2
	load8! &0 	#AR
	add! 14016
	load2
	#
	store8! &7 	#X6
.L25.l_oc26bd2:
	load2! &6 	#X6
	store8! &9 	#X8
	# CBRANCH EQ0
	load4! &7 	#X7
	jump_zero! .L33.l_oc26bd2
	# END CBRANCH
	# CBRANCH EQ
	load4! &7 	#X7
	load4! &11 	#X10
	xor
	jump_zero! .L34.l_oc26bd2
	# END CBRANCH
	load4! &7 	#X7
	sigx4
	add! 648
	shift_l! 4
	load8! &1 	#AR
	add
	load2
	and! 0x0ffff
	store8! &5 	#X4
	load8! &4 	#X4
	sub! 16
	neg
	store8! &11 	#X10
	load4! &7 	#X7
	sigx4
	shift_l! 4
	load8! &1 	#AR
	add
	add! 10360
	load2
	and! 0x0ffff
	store8! &7 	#X6
	load4! &2 	#X2
	sigx4
	store8! &12 	#X11
	load8! &6 	#X6
	load8! &12 	#X11
	shift_l
	load8! &9 	#X8
	or
	store8! &9 	#X8
	# CBRANCH
	load4! &10 	#X10
	add! -2147483648
	load4! &3 	#X2
	add! -2147483648
	lt_u
	jump_zero! .L35.l_oc26bd2
	# END CBRANCH
	load2! &8 	#X8
	load8! &1 	#AR
	add! 14016
	store2
	#
	load8! &0 	#AR
	add! 16
	load8
	#
	store8! &11 	#X10
	load8! &0 	#AR
	add! 40
	load8
	#
	store8! &3 	#X2
	load8! &2 	#X2
	add! 1
	load8! &1 	#AR
	add! 40
	store8
	#
	load1! &8 	#X8
	load8! &11 	#X10
	load8! &4 	#X2
	add
	store1
	load8! &0 	#AR
	add! 14016
	load2
	#
	and! 0x0ffff
	shift_ru! 8
	store8! &9 	#X8
	load8! &0 	#AR
	add! 16
	load8
	#
	store8! &11 	#X10
	load8! &0 	#AR
	add! 40
	load8
	#
	store8! &3 	#X2
	load8! &2 	#X2
	add! 1
	load8! &1 	#AR
	add! 40
	store8
	#
	load1! &8 	#X8
	load8! &11 	#X10
	load8! &4 	#X2
	add
	store1
	load8! &0 	#AR
	add! 14020
	load4
	#
	store8! &3 	#X2
	load8! &2 	#X2
	sub! 16
	neg
	store8! &11 	#X10
	load4! &6 	#X6
	sigx4
	store8! &9 	#X8
	load4! &10 	#X10
	sigx4
	store8! &7 	#X6
	load8! &8 	#X8
	load8! &7 	#X6
	shift_rs
	store8! &7 	#X6
	load2! &6 	#X6
	load8! &1 	#AR
	add! 14016
	store2
	#
	load8! &4 	#X4
	add! -16
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load4! &2 	#X2
	load8! &1 	#AR
	add! 14020
	store4
	#
	load2! &6 	#X6
	store8! &9 	#X8
	load4! &5 	#X5
	store8! &5 	#X4
.L34.l_oc26bd2:
	load8! &0 	#AR
	add! 10624
	load2
	#
	and! 0x0ffff
	store8! &7 	#X6
	load8! &6 	#X6
	sub! 16
	neg
	store8! &12 	#X11
	load8! &0 	#AR
	add! 10616
	load2
	#
	and! 0x0ffff
	store8! &11 	#X10
	load4! &2 	#X2
	sigx4
	store8! &6 	#X5
	load8! &10 	#X10
	load8! &6 	#X5
	shift_l
	and! 0xffff
	load8! &9 	#X8
	or
	store8! &6 	#X5
	# CBRANCH
	load4! &11 	#X11
	add! -2147483648
	load4! &3 	#X2
	add! -2147483648
	lt_u
	jump_zero! .L36.l_oc26bd2
	# END CBRANCH
	load2! &5 	#X5
	load8! &1 	#AR
	add! 14016
	store2
	#
	load8! &0 	#AR
	add! 16
	load8
	#
	store8! &9 	#X8
	load8! &0 	#AR
	add! 40
	load8
	#
	store8! &3 	#X2
	load8! &2 	#X2
	add! 1
	load8! &1 	#AR
	add! 40
	store8
	#
	load1! &5 	#X5
	load8! &9 	#X8
	load8! &4 	#X2
	add
	store1
	load8! &0 	#AR
	add! 14016
	load2
	#
	and! 0x0ffff
	shift_ru! 8
	store8! &6 	#X5
	load8! &0 	#AR
	add! 16
	load8
	#
	store8! &9 	#X8
	load8! &0 	#AR
	add! 40
	load8
	#
	store8! &3 	#X2
	load8! &2 	#X2
	add! 1
	load8! &1 	#AR
	add! 40
	store8
	#
	load1! &5 	#X5
	load8! &9 	#X8
	load8! &4 	#X2
	add
	store1
	load8! &0 	#AR
	add! 14020
	load4
	#
	store8! &3 	#X2
	load8! &2 	#X2
	sub! 16
	neg
	store8! &6 	#X5
	load4! &10 	#X10
	sigx4
	store8! &9 	#X8
	load4! &5 	#X5
	sigx4
	store8! &6 	#X5
	load8! &8 	#X8
	load8! &6 	#X5
	shift_rs
	store8! &6 	#X5
	load2! &5 	#X5
	load8! &1 	#AR
	add! 14016
	store2
	#
	load8! &6 	#X6
	add! -16
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load4! &2 	#X2
	load8! &1 	#AR
	add! 14020
	store4
	#
	# CBRANCH
	push! 14
	add! -2147483648
	load4! &3 	#X2
	add! -2147483648
	lt_u
	jump_zero! .L38.l_oc26bd2
	# END CBRANCH
.L64.l_oc26bd2:
	load8! &4 	#X4
	add! -3
	and! 0xffff
	store8! &5 	#X4
	load4! &2 	#X2
	sigx4
	store8! &3 	#X2
	load8! &4 	#X4
	load8! &3 	#X2
	shift_l
	load8! &6 	#X5
	or
	store8! &3 	#X2
	load2! &2 	#X2
	load8! &1 	#AR
	add! 14016
	store2
	#
	load8! &0 	#AR
	add! 16
	load8
	#
	store8! &7 	#X6
	load8! &0 	#AR
	add! 40
	load8
	#
	store8! &6 	#X5
	load8! &5 	#X5
	add! 1
	load8! &1 	#AR
	add! 40
	store8
	#
	load1! &2 	#X2
	load8! &7 	#X6
	load8! &7 	#X5
	add
	store1
	load8! &0 	#AR
	add! 14016
	load2
	#
	and! 0x0ffff
	shift_ru! 8
	store8! &6 	#X5
	load8! &0 	#AR
	add! 16
	load8
	#
	store8! &7 	#X6
	load8! &0 	#AR
	add! 40
	load8
	#
	store8! &3 	#X2
	load8! &2 	#X2
	add! 1
	load8! &1 	#AR
	add! 40
	store8
	#
	load1! &5 	#X5
	load8! &7 	#X6
	load8! &4 	#X2
	add
	store1
	load8! &0 	#AR
	add! 14020
	load4
	#
	store8! &3 	#X2
	load8! &2 	#X2
	sub! 16
	neg
	store8! &7 	#X6
	load4! &4 	#X4
	sigx4
	store8! &6 	#X5
	load4! &6 	#X6
	sigx4
	store8! &5 	#X4
	load8! &5 	#X5
	load8! &5 	#X4
	shift_rs
	load8! &1 	#AR
	add! 14016
	store2
	#
	load8! &2 	#X2
	add! -14
	load8! &1 	#AR
	add! 14020
	store4
	#
.L39.l_oc26bd2:
	# CBRANCH EQ0
	load4! &3 	#X3
	jump_zero! .L51.l_oc26bd2
	# END CBRANCH
.L63.l_oc26bd2:
	# CBRANCH EQ
	load4! &3 	#X3
	load4! &8 	#X7
	xor
	jump_zero! .L52.l_oc26bd2
	# END CBRANCH
	load4! &7 	#X7
	store8! &11 	#X10
	push! 4
	store8! &9 	#X8
	push! 7
	store8! &3 	#X2
	push! 0
	store8! &6 	#X5
	load8! &1 	#X1
	add! 16
	store8! &2 	#X1
	load4! &3 	#X3
	store8! &8 	#X7
	# CBRANCH
	load8! &9 	#X9
	load8! &2 	#X1
	xor
	push! 1
	lt_u
	jump_zero! .L47.l_oc26bd2
	# END CBRANCH
	jump! .L20.l_oc26bd2
.L33.l_oc26bd2:
	# CBRANCH
	push! 10
	add! -2147483648
	load4! &5 	#X4
	add! -2147483648
	lt_u
	not
	jump_zero! .L40.l_oc26bd2
	# END CBRANCH
	load8! &0 	#AR
	add! 10640
	load2
	#
	store8! &9 	#X8
	load8! &8 	#X8
	sub! 16
	neg
	store8! &12 	#X11
	load8! &0 	#AR
	add! 10632
	load2
	#
	store8! &11 	#X10
	load4! &2 	#X2
	sigx4
	store8! &13 	#X12
	load8! &10 	#X10
	load8! &13 	#X12
	shift_l
	load8! &7 	#X6
	or
	store8! &7 	#X6
	# CBRANCH
	load4! &11 	#X11
	add! -2147483648
	load4! &3 	#X2
	add! -2147483648
	lt_u
	jump_zero! .L41.l_oc26bd2
	# END CBRANCH
	load2! &6 	#X6
	load8! &1 	#AR
	add! 14016
	store2
	#
	load8! &0 	#AR
	add! 16
	load8
	#
	store8! &12 	#X11
	load8! &0 	#AR
	add! 40
	load8
	#
	store8! &3 	#X2
	load8! &2 	#X2
	add! 1
	load8! &1 	#AR
	add! 40
	store8
	#
	load1! &6 	#X6
	load8! &12 	#X11
	load8! &4 	#X2
	add
	store1
	load8! &0 	#AR
	add! 14016
	load2
	#
	and! 0x0ffff
	shift_ru! 8
	store8! &7 	#X6
	load8! &0 	#AR
	add! 16
	load8
	#
	store8! &12 	#X11
	load8! &0 	#AR
	add! 40
	load8
	#
	store8! &3 	#X2
	load8! &2 	#X2
	add! 1
	load8! &1 	#AR
	add! 40
	store8
	#
	load1! &6 	#X6
	load8! &12 	#X11
	load8! &4 	#X2
	add
	store1
	load8! &0 	#AR
	add! 14020
	load4
	#
	store8! &3 	#X2
	load8! &2 	#X2
	sub! 16
	neg
	store8! &7 	#X6
	load4! &10 	#X10
	sigx4
	store8! &11 	#X10
	load4! &6 	#X6
	sigx4
	store8! &7 	#X6
	load8! &10 	#X10
	load8! &7 	#X6
	shift_rs
	store8! &7 	#X6
	load2! &6 	#X6
	load8! &1 	#AR
	add! 14016
	store2
	#
	load8! &8 	#X8
	add! -16
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load4! &2 	#X2
	load8! &1 	#AR
	add! 14020
	store4
	#
.L42.l_oc26bd2:
	# CBRANCH
	push! 13
	add! -2147483648
	load4! &3 	#X2
	add! -2147483648
	lt_u
	jump_zero! .L43.l_oc26bd2
	# END CBRANCH
	load8! &5 	#X5
	add! -2
	and! 0xffff
	store8! &5 	#X4
	load4! &2 	#X2
	sigx4
	store8! &3 	#X2
	load8! &4 	#X4
	load8! &3 	#X2
	shift_l
	load8! &7 	#X6
	or
	store8! &3 	#X2
	load2! &2 	#X2
	load8! &1 	#AR
	add! 14016
	store2
	#
	load8! &0 	#AR
	add! 16
	load8
	#
	store8! &7 	#X6
	load8! &0 	#AR
	add! 40
	load8
	#
	store8! &6 	#X5
	load8! &5 	#X5
	add! 1
	load8! &1 	#AR
	add! 40
	store8
	#
	load1! &2 	#X2
	load8! &7 	#X6
	load8! &7 	#X5
	add
	store1
	load8! &0 	#AR
	add! 14016
	load2
	#
	and! 0x0ffff
	shift_ru! 8
	store8! &6 	#X5
	load8! &0 	#AR
	add! 16
	load8
	#
	store8! &7 	#X6
	load8! &0 	#AR
	add! 40
	load8
	#
	store8! &3 	#X2
	load8! &2 	#X2
	add! 1
	load8! &1 	#AR
	add! 40
	store8
	#
	load1! &5 	#X5
	load8! &7 	#X6
	load8! &4 	#X2
	add
	store1
	load8! &0 	#AR
	add! 14020
	load4
	#
	store8! &3 	#X2
	load8! &2 	#X2
	sub! 16
	neg
	store8! &7 	#X6
	load4! &4 	#X4
	sigx4
	store8! &6 	#X5
	load4! &6 	#X6
	sigx4
	store8! &5 	#X4
	load8! &5 	#X5
	load8! &5 	#X4
	shift_rs
	load8! &1 	#AR
	add! 14016
	store2
	#
	load8! &2 	#X2
	add! -13
	load8! &1 	#AR
	add! 14020
	store4
	#
	# CBRANCH EQ0
	load4! &3 	#X3
	jump_not_zero! .L63.l_oc26bd2
	# END CBRANCH
.L51.l_oc26bd2:
	push! 0
	store8! &6 	#X5
	load4! &7 	#X7
	store8! &11 	#X10
	push! 3
	store8! &9 	#X8
	push! 138
	store8! &3 	#X2
	load8! &1 	#X1
	add! 16
	store8! &2 	#X1
	load4! &3 	#X3
	store8! &8 	#X7
	# CBRANCH
	load8! &9 	#X9
	load8! &2 	#X1
	xor
	push! 1
	lt_u
	jump_zero! .L47.l_oc26bd2
	# END CBRANCH
	jump! .L20.l_oc26bd2
.L40.l_oc26bd2:
	load8! &0 	#AR
	add! 10656
	load2
	#
	store8! &9 	#X8
	load8! &8 	#X8
	sub! 16
	neg
	store8! &12 	#X11
	load8! &0 	#AR
	add! 10648
	load2
	#
	store8! &11 	#X10
	load4! &2 	#X2
	sigx4
	store8! &13 	#X12
	load8! &10 	#X10
	load8! &13 	#X12
	shift_l
	load8! &7 	#X6
	or
	store8! &7 	#X6
	# CBRANCH
	load4! &11 	#X11
	add! -2147483648
	load4! &3 	#X2
	add! -2147483648
	lt_u
	jump_zero! .L44.l_oc26bd2
	# END CBRANCH
	load2! &6 	#X6
	load8! &1 	#AR
	add! 14016
	store2
	#
	load8! &0 	#AR
	add! 16
	load8
	#
	store8! &12 	#X11
	load8! &0 	#AR
	add! 40
	load8
	#
	store8! &3 	#X2
	load8! &2 	#X2
	add! 1
	load8! &1 	#AR
	add! 40
	store8
	#
	load1! &6 	#X6
	load8! &12 	#X11
	load8! &4 	#X2
	add
	store1
	load8! &0 	#AR
	add! 14016
	load2
	#
	and! 0x0ffff
	shift_ru! 8
	store8! &7 	#X6
	load8! &0 	#AR
	add! 16
	load8
	#
	store8! &12 	#X11
	load8! &0 	#AR
	add! 40
	load8
	#
	store8! &3 	#X2
	load8! &2 	#X2
	add! 1
	load8! &1 	#AR
	add! 40
	store8
	#
	load1! &6 	#X6
	load8! &12 	#X11
	load8! &4 	#X2
	add
	store1
	load8! &0 	#AR
	add! 14020
	load4
	#
	store8! &3 	#X2
	load8! &2 	#X2
	sub! 16
	neg
	store8! &7 	#X6
	load4! &10 	#X10
	sigx4
	store8! &11 	#X10
	load4! &6 	#X6
	sigx4
	store8! &7 	#X6
	load8! &10 	#X10
	load8! &7 	#X6
	shift_rs
	store8! &7 	#X6
	load2! &6 	#X6
	load8! &1 	#AR
	add! 14016
	store2
	#
	load8! &8 	#X8
	add! -16
	load8! &3 	#X2
	add
	store8! &3 	#X2
	load4! &2 	#X2
	load8! &1 	#AR
	add! 14020
	store4
	#
	# CBRANCH
	push! 9
	add! -2147483648
	load4! &3 	#X2
	add! -2147483648
	lt_u
	jump_zero! .L46.l_oc26bd2
	# END CBRANCH
.L65.l_oc26bd2:
	load8! &5 	#X5
	add! -10
	and! 0xffff
	store8! &5 	#X4
	load4! &2 	#X2
	sigx4
	store8! &3 	#X2
	load8! &4 	#X4
	load8! &3 	#X2
	shift_l
	load8! &7 	#X6
	or
	store8! &3 	#X2
	load2! &2 	#X2
	load8! &1 	#AR
	add! 14016
	store2
	#
	load8! &0 	#AR
	add! 16
	load8
	#
	store8! &7 	#X6
	load8! &0 	#AR
	add! 40
	load8
	#
	store8! &6 	#X5
	load8! &5 	#X5
	add! 1
	load8! &1 	#AR
	add! 40
	store8
	#
	load1! &2 	#X2
	load8! &7 	#X6
	load8! &7 	#X5
	add
	store1
	load8! &0 	#AR
	add! 14016
	load2
	#
	and! 0x0ffff
	shift_ru! 8
	store8! &6 	#X5
	load8! &0 	#AR
	add! 16
	load8
	#
	store8! &7 	#X6
	load8! &0 	#AR
	add! 40
	load8
	#
	store8! &3 	#X2
	load8! &2 	#X2
	add! 1
	load8! &1 	#AR
	add! 40
	store8
	#
	load1! &5 	#X5
	load8! &7 	#X6
	load8! &4 	#X2
	add
	store1
	load8! &0 	#AR
	add! 14020
	load4
	#
	store8! &3 	#X2
	load8! &2 	#X2
	sub! 16
	neg
	store8! &7 	#X6
	load4! &4 	#X4
	sigx4
	store8! &6 	#X5
	load4! &6 	#X6
	sigx4
	store8! &5 	#X4
	load8! &5 	#X5
	load8! &5 	#X4
	shift_rs
	load8! &1 	#AR
	add! 14016
	store2
	#
	load8! &2 	#X2
	add! -9
	load8! &1 	#AR
	add! 14020
	store4
	#
	jump! .L39.l_oc26bd2
.L36.l_oc26bd2:
	load2! &5 	#X5
	load8! &1 	#AR
	add! 14016
	store2
	#
	load8! &2 	#X2
	load8! &7 	#X6
	add
	store8! &3 	#X2
	load4! &2 	#X2
	load8! &1 	#AR
	add! 14020
	store4
	#
	# CBRANCH
	push! 14
	add! -2147483648
	load4! &3 	#X2
	add! -2147483648
	lt_u
	not
	jump_zero! .L64.l_oc26bd2
	# END CBRANCH
.L38.l_oc26bd2:
	load8! &4 	#X4
	add! -3
	and! 0xffff
	store8! &7 	#X6
	load4! &2 	#X2
	sigx4
	pow2
	load8! &7 	#X6
	mult
	load8! &6 	#X5
	or
	load8! &1 	#AR
	add! 14016
	store2
	#
	load8! &2 	#X2
	add! 2
	load8! &1 	#AR
	add! 14020
	store4
	#
	jump! .L39.l_oc26bd2
.L52.l_oc26bd2:
	load4! &3 	#X3
	store8! &11 	#X10
	push! 3
	store8! &9 	#X8
	push! 6
	store8! &3 	#X2
	push! 0
	store8! &6 	#X5
	load8! &1 	#X1
	add! 16
	store8! &2 	#X1
	load4! &3 	#X3
	store8! &8 	#X7
	# CBRANCH
	load8! &9 	#X9
	load8! &2 	#X1
	xor
	push! 1
	lt_u
	jump_zero! .L47.l_oc26bd2
	# END CBRANCH
	jump! .L20.l_oc26bd2
.L26.l_oc26bd2:
	load2! &4 	#X4
	load8! &1 	#AR
	add! 14016
	store2
	#
	load8! &0 	#AR
	add! 16
	load8
	#
	store8! &7 	#X6
	load8! &0 	#AR
	add! 40
	load8
	#
	store8! &3 	#X2
	load8! &2 	#X2
	add! 1
	load8! &1 	#AR
	add! 40
	store8
	#
	load1! &4 	#X4
	load8! &7 	#X6
	load8! &4 	#X2
	add
	store1
	load8! &0 	#AR
	add! 14016
	load2
	#
	and! 0x0ffff
	shift_ru! 8
	store8! &5 	#X4
	load8! &0 	#AR
	add! 16
	load8
	#
	store8! &7 	#X6
	load8! &0 	#AR
	add! 40
	load8
	#
	store8! &3 	#X2
	load8! &2 	#X2
	add! 1
	load8! &1 	#AR
	add! 40
	store8
	#
	load1! &4 	#X4
	load8! &7 	#X6
	load8! &4 	#X2
	add
	store1
	load8! &0 	#AR
	add! 14020
	load4
	#
	store8! &3 	#X2
	load8! &2 	#X2
	sub! 16
	neg
	store8! &5 	#X4
	load4! &11 	#X11
	sigx4
	store8! &7 	#X6
	load4! &4 	#X4
	sigx4
	store8! &5 	#X4
	load8! &6 	#X6
	load8! &5 	#X4
	shift_rs
	store8! &5 	#X4
	load2! &4 	#X4
	load8! &1 	#AR
	add! 14016
	store2
	#
	load8! &10 	#X10
	add! -16
	store8! &7 	#X6
	load8! &2 	#X2
	load8! &7 	#X6
	add
	store8! &7 	#X6
	load4! &6 	#X6
	load8! &1 	#AR
	add! 14020
	store4
	#
	jump! .L27.l_oc26bd2
.L53.l_oc26bd2:
	load4! &7 	#X7
	store8! &11 	#X10
	push! 4
	store8! &9 	#X8
	push! 7
	store8! &3 	#X2
	push! 0
	store8! &6 	#X5
	load8! &1 	#X1
	add! 16
	store8! &2 	#X1
	load4! &3 	#X3
	store8! &8 	#X7
	# CBRANCH
	load8! &9 	#X9
	load8! &2 	#X1
	xor
	push! 1
	lt_u
	jump_zero! .L47.l_oc26bd2
	# END CBRANCH
	jump! .L20.l_oc26bd2
.L35.l_oc26bd2:
	load2! &8 	#X8
	load8! &1 	#AR
	add! 14016
	store2
	#
	load8! &2 	#X2
	load8! &5 	#X4
	add
	store8! &3 	#X2
	load4! &2 	#X2
	load8! &1 	#AR
	add! 14020
	store4
	#
	load4! &5 	#X5
	store8! &5 	#X4
	jump! .L34.l_oc26bd2
.L29.l_oc26bd2:
	load2! &2 	#X2
	load8! &1 	#AR
	add! 14016
	store2
	#
	load8! &0 	#AR
	add! 16
	load8
	#
	store8! &7 	#X6
	load8! &0 	#AR
	add! 40
	load8
	#
	store8! &5 	#X4
	load8! &4 	#X4
	add! 1
	load8! &1 	#AR
	add! 40
	store8
	#
	load1! &2 	#X2
	load8! &7 	#X6
	load8! &6 	#X4
	add
	store1
	load8! &0 	#AR
	add! 14016
	load2
	#
	and! 0x0ffff
	shift_ru! 8
	store8! &5 	#X4
	load8! &0 	#AR
	add! 16
	load8
	#
	store8! &7 	#X6
	load8! &0 	#AR
	add! 40
	load8
	#
	store8! &3 	#X2
	load8! &2 	#X2
	add! 1
	load8! &1 	#AR
	add! 40
	store8
	#
	load1! &4 	#X4
	load8! &7 	#X6
	load8! &4 	#X2
	add
	store1
	load8! &0 	#AR
	add! 14020
	load4
	#
	store8! &5 	#X4
	load8! &4 	#X4
	sub! 16
	neg
	store8! &3 	#X2
	load4! &11 	#X11
	sigx4
	store8! &7 	#X6
	load4! &2 	#X2
	sigx4
	store8! &3 	#X2
	load8! &6 	#X6
	load8! &3 	#X2
	shift_rs
	store8! &3 	#X2
	load2! &2 	#X2
	load8! &1 	#AR
	add! 14016
	store2
	#
	load8! &10 	#X10
	add! -16
	load8! &5 	#X4
	add
	store8! &5 	#X4
	load4! &4 	#X4
	load8! &1 	#AR
	add! 14020
	store4
	#
	jump! .L30.l_oc26bd2
.L50.l_oc26bd2:
	load4! &4 	#X4
	store8! &6 	#X5
	load8! &1 	#X1
	add! 16
	store8! &2 	#X1
	load4! &3 	#X3
	store8! &8 	#X7
	# CBRANCH
	load8! &9 	#X9
	load8! &2 	#X1
	xor
	push! 1
	lt_u
	jump_zero! .L47.l_oc26bd2
	# END CBRANCH
	jump! .L20.l_oc26bd2
.L31.l_oc26bd2:
	load2! &2 	#X2
	load8! &1 	#AR
	add! 14016
	store2
	#
	load8! &4 	#X4
	load8! &6 	#X5
	add
	load8! &1 	#AR
	add! 14020
	store4
	#
	jump! .L28.l_oc26bd2
.L44.l_oc26bd2:
	load2! &6 	#X6
	load8! &1 	#AR
	add! 14016
	store2
	#
	load8! &2 	#X2
	load8! &9 	#X8
	add
	store8! &3 	#X2
	load4! &2 	#X2
	load8! &1 	#AR
	add! 14020
	store4
	#
	# CBRANCH
	push! 9
	add! -2147483648
	load4! &3 	#X2
	add! -2147483648
	lt_u
	not
	jump_zero! .L65.l_oc26bd2
	# END CBRANCH
.L46.l_oc26bd2:
	load8! &4 	#X4
	add! -11
	and! 0xffff
	store8! &6 	#X5
	load4! &2 	#X2
	sigx4
	pow2
	load8! &6 	#X5
	mult
	load8! &7 	#X6
	or
	load8! &1 	#AR
	add! 14016
	store2
	#
	load8! &2 	#X2
	add! 7
	load8! &1 	#AR
	add! 14020
	store4
	#
	jump! .L39.l_oc26bd2
.L43.l_oc26bd2:
	load8! &4 	#X4
	add! -3
	and! 0xffff
	store8! &6 	#X5
	load4! &2 	#X2
	sigx4
	pow2
	load8! &6 	#X5
	mult
	load8! &7 	#X6
	or
	load8! &1 	#AR
	add! 14016
	store2
	#
	load8! &2 	#X2
	add! 3
	load8! &1 	#AR
	add! 14020
	store4
	#
	jump! .L39.l_oc26bd2
.L41.l_oc26bd2:
	load2! &6 	#X6
	load8! &1 	#AR
	add! 14016
	store2
	#
	load8! &2 	#X2
	load8! &9 	#X8
	add
	store8! &3 	#X2
	load4! &2 	#X2
	load8! &1 	#AR
	add! 14020
	store4
	#
	jump! .L42.l_oc26bd2
.L49.l_oc26bd2:
	push! 4
	store8! &9 	#X8
	push! 7
	store8! &3 	#X2
	jump! .L21.l_oc26bd2
.L20.l_oc26bd2:

	# epilogue
	set_sp! &13
	return

# FUNCTION ENDS:send_tree

	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole move
	#peephole move+push+sub
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole 1
	#peephole move
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+pushdi
	#peephole pop+push+sub
	#peephole 1
	#peephole move
	#peephole move+push+sub
	#peephole move_dead
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole nop+set
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole 1
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole 1
	#peephole move
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole move
	#peephole move+push+sub
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole nop+set
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole 1
	#peephole move
	#peephole move+push(pushable)
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+pushdi
	#peephole pop+push+sub
	#peephole 1
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole 1
	#peephole move
	#peephole move+push(pushable)
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole move
	#peephole move+push+sub
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move+push(pushable)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole 1
	#peephole move
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole move
	#peephole move+push+sub
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole nop+set
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole pop(deadreg)+ind push
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole nop+set
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole nop+set
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole pop+block+push+block
	#peephole push+add+pop+push+ind pop
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole nop+set
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole push+add+pop+push+ind pop
	#peephole push+add+pop+push+ind pop
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole zero_extend
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole push+add+pop+push+ind pop
	#peephole push+add+pop+push+ind pop
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole push+add+pop+push+ind pop
	#peephole push+add+pop+push+ind pop
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole push+add+pop+push+ind pop
	#peephole push+add+pop+push+ind pop
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole push+add+pop+push+ind pop
	#peephole push+add+pop+push+ind pop
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole redundant blockage insn
	#peephole zero_extend
	#peephole pop+block+push+commut(di)
	#peephole push+add+pop+push+ind pop
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+block+push+commut(di)
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole and+pophi
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push

# FUNCTION BEGINS:compress_block
compress_block.s_oc26bd2:
	# prologue (12 GPRs)

	set_sp! &-12

	load8! &13
	store8! &1 	#AR
	load8! &14
	store8! &8 	#X7
	load8! &0 	#AR
	add! 13980
	load4
	#
	store8! &3 	#X2
	load8! &0 	#AR
	add! 14020
	load4
	#
	store8! &2 	#X1
	load8! &0 	#AR
	add! 14016
	load2
	#
	store8! &4 	#X3
	# CBRANCH EQ0
	load4! &2 	#X2
	jump_zero! .L67.l_oc26bd2
	# END CBRANCH
	push! 0
	store8! &5 	#X4
.L80.l_oc26bd2:
	load8! &0 	#AR
	add! 13984
	load8
	#
	store8! &7 	#X6
	load4! &4 	#X4
	store8! &3 	#X2
	load8! &2 	#X2
	load8! &3 	#X2
	add
	load8! &7 	#X6
	add
	load2
	and! 0x0ffff
	store8! &6 	#X5
	load8! &0 	#AR
	add! 13968
	load8
	#
	store8! &7 	#X6
	load8! &4 	#X4
	add! 1
	store8! &5 	#X4
	load8! &6 	#X6
	load8! &3 	#X2
	add
	load1
	store8! &3 	#X2
	# CBRANCH EQ0
	load4! &5 	#X5
	jump_not_zero! .L68.l_oc26bd2
	# END CBRANCH
	load1! &2 	#X2
	shift_l! 4
	load8! &8 	#X7
	add
	store8! &3 	#X2
	load8! &2 	#X2
	add! 8
	load2
	#
	store8! &6 	#X5
	load8! &5 	#X5
	sub! 16
	neg
	store8! &9 	#X8
	load8! &2 	#X2
	load2
	#
	and! 0x0ffff
	store8! &7 	#X6
	load4! &1 	#X1
	sigx4
	store8! &3 	#X2
	load8! &6 	#X6
	load8! &3 	#X2
	shift_l
	load8! &4 	#X3
	or
	store8! &3 	#X2
	load2! &2 	#X2
	store8! &4 	#X3
	# CBRANCH
	load4! &8 	#X8
	add! -2147483648
	load4! &2 	#X1
	add! -2147483648
	lt_u
	jump_zero! .L69.l_oc26bd2
	# END CBRANCH
	load2! &2 	#X2
	load8! &1 	#AR
	add! 14016
	store2
	#
	load8! &0 	#AR
	add! 16
	load8
	#
	store8! &3 	#X2
	load8! &0 	#AR
	add! 40
	load8
	#
	store8! &2 	#X1
	load8! &1 	#X1
	add! 1
	load8! &1 	#AR
	add! 40
	store8
	#
	load1! &3 	#X3
	load8! &3 	#X2
	load8! &3 	#X1
	add
	store1
	load8! &0 	#AR
	add! 14016
	load2
	#
	and! 0x0ffff
	shift_ru! 8
	store8! &3 	#X2
	load8! &0 	#AR
	add! 16
	load8
	#
	store8! &4 	#X3
	load8! &0 	#AR
	add! 40
	load8
	#
	store8! &2 	#X1
	load8! &1 	#X1
	add! 1
	load8! &1 	#AR
	add! 40
	store8
	#
	load1! &2 	#X2
	load8! &4 	#X3
	load8! &3 	#X1
	add
	store1
	load8! &0 	#AR
	add! 14020
	load4
	#
	store8! &2 	#X1
	load8! &1 	#X1
	sub! 16
	neg
	store8! &3 	#X2
	load4! &6 	#X6
	sigx4
	store8! &4 	#X3
	load4! &2 	#X2
	sigx4
	store8! &3 	#X2
	load8! &3 	#X3
	load8! &3 	#X2
	shift_rs
	store8! &3 	#X2
	load2! &2 	#X2
	store8! &4 	#X3
	load2! &2 	#X2
	load8! &1 	#AR
	add! 14016
	store2
	#
	load8! &5 	#X5
	add! -16
	load8! &2 	#X1
	add
	store8! &2 	#X1
	load4! &1 	#X1
	load8! &1 	#AR
	add! 14020
	store4
	#
.L70.l_oc26bd2:
	load8! &0 	#AR
	add! 13980
	load4
	#
	store8! &6 	#X5
	# CBRANCH
	load4! &4 	#X4
	load4! &6 	#X5
	lt_u
	not
	jump_zero! .L80.l_oc26bd2
	# END CBRANCH
.L81.l_oc26bd2:
	load8! &7 	#X7
	add! 4104
	load2
	#
	store8! &4 	#X3
	load8! &3 	#X3
	sub! 16
	neg
	store8! &6 	#X5
	load8! &7 	#X7
	add! 4096
	load2
	#
	store8! &5 	#X4
	load4! &1 	#X1
	sigx4
	store8! &7 	#X6
	load8! &4 	#X4
	load8! &7 	#X6
	shift_l
	load8! &3 	#X2
	or
	store8! &3 	#X2
	# CBRANCH
	load4! &5 	#X5
	add! -2147483648
	load4! &2 	#X1
	add! -2147483648
	lt_u
	jump_zero! .L82.l_oc26bd2
	# END CBRANCH
.L94.l_oc26bd2:
	load2! &2 	#X2
	load8! &1 	#AR
	add! 14016
	store2
	#
	load8! &0 	#AR
	add! 16
	load8
	#
	store8! &6 	#X5
	load8! &0 	#AR
	add! 40
	load8
	#
	store8! &2 	#X1
	load8! &1 	#X1
	add! 1
	load8! &1 	#AR
	add! 40
	store8
	#
	load1! &2 	#X2
	load8! &6 	#X5
	load8! &3 	#X1
	add
	store1
	load8! &0 	#AR
	add! 14016
	load2
	#
	and! 0x0ffff
	shift_ru! 8
	store8! &3 	#X2
	load8! &0 	#AR
	add! 16
	load8
	#
	store8! &6 	#X5
	load8! &0 	#AR
	add! 40
	load8
	#
	store8! &2 	#X1
	load8! &1 	#X1
	add! 1
	load8! &1 	#AR
	add! 40
	store8
	#
	load1! &2 	#X2
	load8! &6 	#X5
	load8! &3 	#X1
	add
	store1
	load8! &0 	#AR
	add! 14020
	load4
	#
	store8! &2 	#X1
	load8! &1 	#X1
	sub! 16
	neg
	store8! &3 	#X2
	load4! &4 	#X4
	sigx4
	store8! &5 	#X4
	load4! &2 	#X2
	sigx4
	store8! &3 	#X2
	load8! &4 	#X4
	load8! &3 	#X2
	shift_rs
	load8! &1 	#AR
	add! 14016
	store2
	#
	load8! &3 	#X3
	add! -16
	load8! &2 	#X1
	add
	load8! &1 	#AR
	add! 14020
	store4
	#
	jump! .L93.l_oc26bd2
.L68.l_oc26bd2:
	load1! &2 	#X2
	store8! &10 	#X9
	load4! &9 	#X9
	sigx4
	add! _length_code
	load1
	and! 0x0ff
	store8! &7 	#X6
	load8! &6 	#X6
	add! 257
	and! 0xffffffff
	shift_l! 4
	load8! &8 	#X7
	add
	store8! &3 	#X2
	load8! &2 	#X2
	add! 8
	load2
	#
	store8! &9 	#X8
	load8! &8 	#X8
	sub! 16
	neg
	store8! &12 	#X11
	load8! &2 	#X2
	load2
	#
	and! 0x0ffff
	store8! &11 	#X10
	load4! &1 	#X1
	sigx4
	store8! &3 	#X2
	load8! &10 	#X10
	load8! &3 	#X2
	shift_l
	load8! &4 	#X3
	or
	store8! &3 	#X2
	# CBRANCH
	load4! &11 	#X11
	add! -2147483648
	load4! &2 	#X1
	add! -2147483648
	lt_u
	jump_zero! .L71.l_oc26bd2
	# END CBRANCH
	load2! &2 	#X2
	load8! &1 	#AR
	add! 14016
	store2
	#
	load8! &0 	#AR
	add! 16
	load8
	#
	store8! &4 	#X3
	load8! &0 	#AR
	add! 40
	load8
	#
	store8! &2 	#X1
	load8! &1 	#X1
	add! 1
	load8! &1 	#AR
	add! 40
	store8
	#
	load1! &2 	#X2
	load8! &4 	#X3
	load8! &3 	#X1
	add
	store1
	load8! &0 	#AR
	add! 14016
	load2
	#
	and! 0x0ffff
	shift_ru! 8
	store8! &3 	#X2
	load8! &0 	#AR
	add! 16
	load8
	#
	store8! &4 	#X3
	load8! &0 	#AR
	add! 40
	load8
	#
	store8! &2 	#X1
	load8! &1 	#X1
	add! 1
	load8! &1 	#AR
	add! 40
	store8
	#
	load1! &2 	#X2
	load8! &4 	#X3
	load8! &3 	#X1
	add
	store1
	load8! &0 	#AR
	add! 14020
	load4
	#
	store8! &2 	#X1
	load8! &1 	#X1
	sub! 16
	neg
	store8! &3 	#X2
	load4! &10 	#X10
	sigx4
	store8! &4 	#X3
	load4! &2 	#X2
	sigx4
	store8! &3 	#X2
	load8! &3 	#X3
	load8! &3 	#X2
	shift_rs
	store8! &3 	#X2
	load2! &2 	#X2
	load8! &1 	#AR
	add! 14016
	store2
	#
	load8! &8 	#X8
	add! -16
	load8! &2 	#X1
	add
	store8! &2 	#X1
	load4! &1 	#X1
	load8! &1 	#AR
	add! 14020
	store4
	#
.L72.l_oc26bd2:
	load4! &6 	#X6
	shift_l! 2
	add! extra_lbits.s_oc26bd2
	load4
	store8! &4 	#X3
	# CBRANCH EQ0
	load4! &3 	#X3
	jump_zero! .L73.l_oc26bd2
	# END CBRANCH
	load4! &6 	#X6
	shift_l! 2
	add! base_length.s_oc26bd2
	load4
	load8! &10 	#X9
	sub
	neg
	store8! &7 	#X6
	load8! &3 	#X3
	sub! 16
	neg
	store8! &9 	#X8
	load8! &6 	#X6
	and! 0xffff
	store8! &7 	#X6
	load4! &1 	#X1
	sigx4
	store8! &10 	#X9
	load8! &6 	#X6
	load8! &10 	#X9
	shift_l
	load8! &3 	#X2
	or
	store8! &3 	#X2
	# CBRANCH
	load4! &8 	#X8
	add! -2147483648
	load4! &2 	#X1
	add! -2147483648
	lt_u
	jump_zero! .L74.l_oc26bd2
	# END CBRANCH
	load2! &2 	#X2
	load8! &1 	#AR
	add! 14016
	store2
	#
	load8! &0 	#AR
	add! 16
	load8
	#
	store8! &9 	#X8
	load8! &0 	#AR
	add! 40
	load8
	#
	store8! &2 	#X1
	load8! &1 	#X1
	add! 1
	load8! &1 	#AR
	add! 40
	store8
	#
	load1! &2 	#X2
	load8! &9 	#X8
	load8! &3 	#X1
	add
	store1
	load8! &0 	#AR
	add! 14016
	load2
	#
	and! 0x0ffff
	shift_ru! 8
	store8! &3 	#X2
	load8! &0 	#AR
	add! 16
	load8
	#
	store8! &9 	#X8
	load8! &0 	#AR
	add! 40
	load8
	#
	store8! &2 	#X1
	load8! &1 	#X1
	add! 1
	load8! &1 	#AR
	add! 40
	store8
	#
	load1! &2 	#X2
	load8! &9 	#X8
	load8! &3 	#X1
	add
	store1
	load8! &0 	#AR
	add! 14020
	load4
	#
	store8! &2 	#X1
	load8! &1 	#X1
	sub! 16
	neg
	store8! &3 	#X2
	load4! &6 	#X6
	sigx4
	store8! &7 	#X6
	load4! &2 	#X2
	sigx4
	store8! &3 	#X2
	load8! &6 	#X6
	load8! &3 	#X2
	shift_rs
	store8! &3 	#X2
	load2! &2 	#X2
	load8! &1 	#AR
	add! 14016
	store2
	#
	load8! &3 	#X3
	add! -16
	load8! &2 	#X1
	add
	store8! &2 	#X1
	load4! &1 	#X1
	load8! &1 	#AR
	add! 14020
	store4
	#
.L73.l_oc26bd2:
	load8! &5 	#X5
	add! -1
	store8! &6 	#X5
	# CBRANCH
	push! 255
	load4! &6 	#X5
	lt_u
	not
	jump_zero! .L75.l_oc26bd2
	# END CBRANCH
	load4! &5 	#X5
	add! _dist_code
	load1
	and! 0x0ff
	store8! &7 	#X6
.L76.l_oc26bd2:
	load4! &6 	#X6
	shift_l! 4
	load8! &16
	add
	store8! &4 	#X3
	load8! &3 	#X3
	add! 8
	load2
	#
	store8! &9 	#X8
	load8! &8 	#X8
	sub! 16
	neg
	store8! &11 	#X10
	load8! &3 	#X3
	load2
	#
	and! 0x0ffff
	store8! &10 	#X9
	load4! &1 	#X1
	sigx4
	store8! &4 	#X3
	load8! &9 	#X9
	load8! &4 	#X3
	shift_l
	load8! &3 	#X2
	or
	store8! &3 	#X2
	load2! &2 	#X2
	store8! &4 	#X3
	# CBRANCH
	load4! &10 	#X10
	add! -2147483648
	load4! &2 	#X1
	add! -2147483648
	lt_u
	jump_zero! .L77.l_oc26bd2
	# END CBRANCH
	load2! &2 	#X2
	load8! &1 	#AR
	add! 14016
	store2
	#
	load8! &0 	#AR
	add! 16
	load8
	#
	store8! &4 	#X3
	load8! &0 	#AR
	add! 40
	load8
	#
	store8! &2 	#X1
	load8! &1 	#X1
	add! 1
	load8! &1 	#AR
	add! 40
	store8
	#
	load1! &2 	#X2
	load8! &4 	#X3
	load8! &3 	#X1
	add
	store1
	load8! &0 	#AR
	add! 14016
	load2
	#
	and! 0x0ffff
	shift_ru! 8
	store8! &3 	#X2
	load8! &0 	#AR
	add! 16
	load8
	#
	store8! &4 	#X3
	load8! &0 	#AR
	add! 40
	load8
	#
	store8! &2 	#X1
	load8! &1 	#X1
	add! 1
	load8! &1 	#AR
	add! 40
	store8
	#
	load1! &2 	#X2
	load8! &4 	#X3
	load8! &3 	#X1
	add
	store1
	load8! &0 	#AR
	add! 14020
	load4
	#
	store8! &2 	#X1
	load8! &1 	#X1
	sub! 16
	neg
	store8! &3 	#X2
	load4! &9 	#X9
	sigx4
	store8! &4 	#X3
	load4! &2 	#X2
	sigx4
	store8! &3 	#X2
	load8! &3 	#X3
	load8! &3 	#X2
	shift_rs
	store8! &3 	#X2
	load2! &2 	#X2
	store8! &4 	#X3
	load2! &2 	#X2
	load8! &1 	#AR
	add! 14016
	store2
	#
	load8! &8 	#X8
	add! -16
	load8! &2 	#X1
	add
	store8! &2 	#X1
	load4! &1 	#X1
	load8! &1 	#AR
	add! 14020
	store4
	#
.L78.l_oc26bd2:
	load4! &6 	#X6
	shift_l! 2
	add! extra_dbits.s_oc26bd2
	load4
	store8! &9 	#X8
	# CBRANCH EQ0
	load4! &8 	#X8
	jump_zero! .L70.l_oc26bd2
	# END CBRANCH
	load4! &6 	#X6
	shift_l! 2
	add! base_dist.s_oc26bd2
	load4
	load8! &6 	#X5
	sub
	neg
	store8! &4 	#X3
	load8! &8 	#X8
	sub! 16
	neg
	store8! &7 	#X6
	load8! &3 	#X3
	and! 0xffff
	store8! &6 	#X5
	load4! &1 	#X1
	sigx4
	store8! &4 	#X3
	load8! &5 	#X5
	load8! &4 	#X3
	shift_l
	load8! &3 	#X2
	or
	store8! &3 	#X2
	load2! &2 	#X2
	store8! &4 	#X3
	# CBRANCH
	load4! &6 	#X6
	add! -2147483648
	load4! &2 	#X1
	add! -2147483648
	lt_u
	jump_zero! .L79.l_oc26bd2
	# END CBRANCH
	load2! &2 	#X2
	load8! &1 	#AR
	add! 14016
	store2
	#
	load8! &0 	#AR
	add! 16
	load8
	#
	store8! &4 	#X3
	load8! &0 	#AR
	add! 40
	load8
	#
	store8! &2 	#X1
	load8! &1 	#X1
	add! 1
	load8! &1 	#AR
	add! 40
	store8
	#
	load1! &2 	#X2
	load8! &4 	#X3
	load8! &3 	#X1
	add
	store1
	load8! &0 	#AR
	add! 14016
	load2
	#
	and! 0x0ffff
	shift_ru! 8
	store8! &3 	#X2
	load8! &0 	#AR
	add! 16
	load8
	#
	store8! &4 	#X3
	load8! &0 	#AR
	add! 40
	load8
	#
	store8! &2 	#X1
	load8! &1 	#X1
	add! 1
	load8! &1 	#AR
	add! 40
	store8
	#
	load1! &2 	#X2
	load8! &4 	#X3
	load8! &3 	#X1
	add
	store1
	load8! &0 	#AR
	add! 14020
	load4
	#
	store8! &2 	#X1
	load8! &1 	#X1
	sub! 16
	neg
	store8! &3 	#X2
	load4! &5 	#X5
	sigx4
	store8! &4 	#X3
	load4! &2 	#X2
	sigx4
	store8! &3 	#X2
	load8! &3 	#X3
	load8! &3 	#X2
	shift_rs
	store8! &3 	#X2
	load2! &2 	#X2
	store8! &4 	#X3
	load2! &2 	#X2
	load8! &1 	#AR
	add! 14016
	store2
	#
	load8! &8 	#X8
	add! -16
	load8! &2 	#X1
	add
	store8! &2 	#X1
	load4! &1 	#X1
	load8! &1 	#AR
	add! 14020
	store4
	#
	load8! &0 	#AR
	add! 13980
	load4
	#
	store8! &6 	#X5
	# CBRANCH
	load4! &4 	#X4
	load4! &6 	#X5
	lt_u
	not
	jump_zero! .L80.l_oc26bd2
	# END CBRANCH
	jump! .L81.l_oc26bd2
.L77.l_oc26bd2:
	load2! &2 	#X2
	load8! &1 	#AR
	add! 14016
	store2
	#
	load8! &1 	#X1
	load8! &9 	#X8
	add
	store8! &2 	#X1
	load4! &1 	#X1
	load8! &1 	#AR
	add! 14020
	store4
	#
	jump! .L78.l_oc26bd2
.L75.l_oc26bd2:
	load4! &5 	#X5
	shift_ru! 7
	add! 256
	and! 0xffffffff
	add! _dist_code
	load1
	and! 0x0ff
	store8! &7 	#X6
	jump! .L76.l_oc26bd2
.L71.l_oc26bd2:
	load2! &2 	#X2
	load8! &1 	#AR
	add! 14016
	store2
	#
	load8! &1 	#X1
	load8! &9 	#X8
	add
	store8! &2 	#X1
	load4! &1 	#X1
	load8! &1 	#AR
	add! 14020
	store4
	#
	jump! .L72.l_oc26bd2
.L69.l_oc26bd2:
	load2! &2 	#X2
	load8! &1 	#AR
	add! 14016
	store2
	#
	load8! &1 	#X1
	load8! &6 	#X5
	add
	store8! &2 	#X1
	load4! &1 	#X1
	load8! &1 	#AR
	add! 14020
	store4
	#
	load8! &0 	#AR
	add! 13980
	load4
	#
	store8! &6 	#X5
	# CBRANCH
	load4! &4 	#X4
	load4! &6 	#X5
	lt_u
	not
	jump_zero! .L80.l_oc26bd2
	# END CBRANCH
	jump! .L81.l_oc26bd2
.L79.l_oc26bd2:
	load2! &2 	#X2
	load8! &1 	#AR
	add! 14016
	store2
	#
	load8! &1 	#X1
	load8! &9 	#X8
	add
	store8! &2 	#X1
	load4! &1 	#X1
	load8! &1 	#AR
	add! 14020
	store4
	#
	load8! &0 	#AR
	add! 13980
	load4
	#
	store8! &6 	#X5
	# CBRANCH
	load4! &4 	#X4
	load4! &6 	#X5
	lt_u
	not
	jump_zero! .L80.l_oc26bd2
	# END CBRANCH
	jump! .L81.l_oc26bd2
.L74.l_oc26bd2:
	load2! &2 	#X2
	load8! &1 	#AR
	add! 14016
	store2
	#
	load8! &1 	#X1
	load8! &4 	#X3
	add
	store8! &2 	#X1
	load4! &1 	#X1
	load8! &1 	#AR
	add! 14020
	store4
	#
	jump! .L73.l_oc26bd2
.L67.l_oc26bd2:
	load2! &3 	#X3
	store8! &3 	#X2
	load8! &7 	#X7
	add! 4104
	load2
	#
	store8! &4 	#X3
	load8! &3 	#X3
	sub! 16
	neg
	store8! &6 	#X5
	load8! &7 	#X7
	add! 4096
	load2
	#
	store8! &5 	#X4
	load4! &1 	#X1
	sigx4
	store8! &7 	#X6
	load8! &4 	#X4
	load8! &7 	#X6
	shift_l
	load8! &3 	#X2
	or
	store8! &3 	#X2
	# CBRANCH
	load4! &5 	#X5
	add! -2147483648
	load4! &2 	#X1
	add! -2147483648
	lt_u
	not
	jump_zero! .L94.l_oc26bd2
	# END CBRANCH
.L82.l_oc26bd2:
	load2! &2 	#X2
	load8! &1 	#AR
	add! 14016
	store2
	#
	load8! &1 	#X1
	load8! &4 	#X3
	add
	load8! &1 	#AR
	add! 14020
	store4
	#
.L93.l_oc26bd2:

	# epilogue
	set_sp! &12
	return

# FUNCTION ENDS:compress_block

	#peephole unary+deadreg+binop
	#peephole unary1+binop2+deadreg+binop3
	#peephole pop+push+commut(di)
	#peephole unary+deadreg+binop
	#peephole unary1+binop2+deadreg+binop3
	#peephole pop+push+commut(di)
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole nop+set
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+ind push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+ind push
	#peephole pop+cmprev
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+ind push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+ind push
	#peephole pop+cmprev
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push

# FUNCTION BEGINS:pqdownheap.constprop
.Li_pqdownheap.constprop_1.l_oc26bd2:
	# prologue (13 GPRs)

	set_sp! &-13

	load8! &14
	store8! &5 	#X4
	load8! &15
	store8! &10 	#X9
	load8! &4 	#X4
	add! 11092
	load4
	#
	store8! &11 	#X10
	load8! &4 	#X4
	add! 13380
	load4
	#
	store8! &7 	#X6
	# CBRANCH
	push! 1
	add! -2147483648
	load4! &7 	#X6
	add! -2147483648
	lt_u
	jump_zero! .L100.l_oc26bd2
	# END CBRANCH
	load4! &10 	#X10
	sigx4
	shift_l! 4
	load8! &10 	#X9
	add
	load2
	store8! &9 	#X8
	push! 1
	store8! &8 	#X7
	push! 2
	store8! &1 	#AR
.L99.l_oc26bd2:
	load4! &0 	#AR
	sigx4
	shift_l! 2
	load8! &5 	#X4
	add
	store8! &6 	#X5
	load8! &5 	#X5
	add! 11088
	load4
	#
	store8! &4 	#X3
	load4! &3 	#X3
	sigx4
	shift_l! 4
	load8! &10 	#X9
	add
	load2
	store8! &3 	#X2
	# CBRANCH
	load4! &0 	#AR
	add! -2147483648
	load4! &7 	#X6
	add! -2147483648
	lt_u
	jump_zero! .L101.l_oc26bd2
	# END CBRANCH
	load8! &0 	#AR
	add! 1
	store8! &2 	#X1
	load8! &5 	#X5
	add! 11092
	load4
	#
	store8! &12 	#X11
	load4! &11 	#X11
	sigx4
	shift_l! 4
	load8! &10 	#X9
	add
	load2
	store8! &6 	#X5
	# CBRANCH
	load2! &5 	#X5
	load2! &3 	#X2
	lt_u
	not
	jump_zero! .L102.l_oc26bd2
	# END CBRANCH
	# CBRANCH EQ
	load2! &5 	#X5
	load2! &3 	#X2
	xor
	jump_zero! .L108.l_oc26bd2
	# END CBRANCH
	load4! &0 	#AR
	store8! &2 	#X1
.L97.l_oc26bd2:
	# CBRANCH
	load2! &8 	#X8
	load2! &3 	#X2
	lt_u
	not
	jump_zero! .L96.l_oc26bd2
	# END CBRANCH
	# CBRANCH EQ
	load2! &8 	#X8
	load2! &3 	#X2
	xor
	jump_zero! .L109.l_oc26bd2
	# END CBRANCH
	load4! &7 	#X7
	sigx4
	add! 2772
	shift_l! 2
	load8! &5 	#X4
	add
	store8! &1 	#AR
	load4! &3 	#X3
	load8! &1 	#AR
	store4
	#
	load8! &1 	#X1
	load8! &2 	#X1
	add
	store8! &1 	#AR
	load4! &1 	#X1
	store8! &8 	#X7
	# CBRANCH
	load4! &6 	#X6
	add! -2147483648
	load4! &1 	#AR
	add! -2147483648
	lt_u
	jump_zero! .L99.l_oc26bd2
	# END CBRANCH
.L96.l_oc26bd2:
	load4! &7 	#X7
	sigx4
	add! 2772
	shift_l! 2
	load8! &5 	#X4
	add
	store8! &1 	#AR
	load4! &10 	#X10
	load8! &1 	#AR
	store4
	#
	jump! .L110.l_oc26bd2
.L109.l_oc26bd2:
	load4! &10 	#X10
	sigx4
	load8! &5 	#X4
	add
	add! 13388
	load1
	store8! &3 	#X2
	load4! &3 	#X3
	sigx4
	load8! &5 	#X4
	add
	add! 13388
	load1
	# CBRANCH - peep (modesize=1)
	and! 255
	# - reverse 
	load1! &3 	#X2
	lt_u
	jump_zero! .L96.l_oc26bd2
	# END CBRANCH
	load4! &7 	#X7
	sigx4
	add! 2772
	shift_l! 2
	load8! &5 	#X4
	add
	store8! &1 	#AR
	load4! &3 	#X3
	load8! &1 	#AR
	store4
	#
	load8! &1 	#X1
	load8! &2 	#X1
	add
	store8! &1 	#AR
	load4! &1 	#X1
	store8! &8 	#X7
	# CBRANCH
	load4! &6 	#X6
	add! -2147483648
	load4! &1 	#AR
	add! -2147483648
	lt_u
	jump_zero! .L99.l_oc26bd2
	# END CBRANCH
	jump! .L96.l_oc26bd2
.L101.l_oc26bd2:
	load4! &0 	#AR
	store8! &2 	#X1
	jump! .L97.l_oc26bd2
.L102.l_oc26bd2:
	load2! &5 	#X5
	store8! &3 	#X2
	load4! &11 	#X11
	store8! &4 	#X3
	jump! .L97.l_oc26bd2
.L108.l_oc26bd2:
	load4! &11 	#X11
	sigx4
	load8! &5 	#X4
	add
	add! 13388
	load1
	store8! &13 	#X12
	load4! &3 	#X3
	sigx4
	load8! &5 	#X4
	add
	add! 13388
	load1
	# CBRANCH - peep (modesize=1)
	and! 255
	# - reverse 
	load1! &13 	#X12
	lt_u
	not
	jump_zero! .L104.l_oc26bd2
	# END CBRANCH
	load4! &11 	#X11
	store8! &4 	#X3
	jump! .L97.l_oc26bd2
.L104.l_oc26bd2:
	load4! &0 	#AR
	store8! &2 	#X1
	jump! .L97.l_oc26bd2
.L100.l_oc26bd2:
	push! 1
	store8! &8 	#X7
	load4! &7 	#X7
	sigx4
	add! 2772
	shift_l! 2
	load8! &5 	#X4
	add
	store8! &1 	#AR
	load4! &10 	#X10
	load8! &1 	#AR
	store4
	#
.L110.l_oc26bd2:

	# epilogue
	set_sp! &13
	return

# FUNCTION ENDS:pqdownheap.constprop

	#peephole 1
	#peephole move_dead
	#peephole push+add+pop+push+ind pop
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole 1
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+ind push
	#peephole move_dead
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole binop1+deadreg+binop2
	#peephole move_dead
	#peephole move_dead
	#peephole zero_extend
	#peephole pop+push+sub
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole move
	#peephole move+push(pushable)
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole zero_extend
	#peephole 1
	#peephole move_dead
	#peephole unary+deadreg+binop
	#peephole unary1+binop2+deadreg+binop3
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole pop+push+commut(di)
	#peephole move_dead
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole move_dead
	#peephole move_dead
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole move_dead
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole move_dead
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole move_dead
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole move_dead
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole move_dead
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole move_dead
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole move_dead
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole move_dead
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole move_dead
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole move_dead
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole move_dead
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole move_dead
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole move_dead
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole move_dead
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole move_dead
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole pop+push+commut(di)
	#peephole move_dead
	#peephole zero_extend
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+ind push offset
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole 1
	#peephole 1
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole move
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole unary+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push offset
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole binop1+deadreg+binop2
	#peephole pop+push+commut(di)
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole binop1+deadreg+binop2
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+pushdi
	#peephole pop+push+commut(di)
	#peephole 1
	#peephole zero_extend
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole move
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push offset
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole binop1+deadreg+binop2
	#peephole pop+push+commut(di)
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole binop1+deadreg+binop2
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole move
	#peephole move+binop
	#peephole 1
	#peephole move
	#peephole move+move(allmodes x allmodes)
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move
	#peephole move+binop
	#peephole 1
	#peephole move
	#peephole move+move(allmodes x allmodes)
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move
	#peephole move+binop
	#peephole 1
	#peephole move
	#peephole move+move(allmodes x allmodes)
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move
	#peephole move+binop
	#peephole 1
	#peephole move
	#peephole move+move(allmodes x allmodes)
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move
	#peephole move+binop
	#peephole 1
	#peephole move
	#peephole move+move(allmodes x allmodes)
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move
	#peephole move+binop
	#peephole 1
	#peephole move
	#peephole move+move(allmodes x allmodes)
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move
	#peephole move+binop
	#peephole 1
	#peephole move
	#peephole move+move(allmodes x allmodes)
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move
	#peephole move+binop
	#peephole 1
	#peephole move
	#peephole move+move(allmodes x allmodes)
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move
	#peephole move+binop
	#peephole 1
	#peephole move
	#peephole move+move(allmodes x allmodes)
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move
	#peephole move+binop
	#peephole 1
	#peephole move
	#peephole move+move(allmodes x allmodes)
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move
	#peephole move+binop
	#peephole 1
	#peephole move
	#peephole move+move(allmodes x allmodes)
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move
	#peephole move+binop
	#peephole 1
	#peephole move
	#peephole move+move(allmodes x allmodes)
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move
	#peephole move+binop
	#peephole 1
	#peephole move
	#peephole move+move(allmodes x allmodes)
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move
	#peephole move+binop
	#peephole 1
	#peephole move
	#peephole move+move(allmodes x allmodes)
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move
	#peephole move+binop
	#peephole 1
	#peephole 1
	#peephole nop+set
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole unary1+binop2+deadreg+binop3
	#peephole pop+push+commut(di)
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole move
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole unary1+binop2+deadreg+binop3
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+push
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole 1
	#peephole 1
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+ind push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+ind push
	#peephole pop+push+commut(di)
	#peephole pop+push+commut(di)
	#peephole unary+deadreg+binop
	#peephole unary1+binop2+deadreg+binop3
	#peephole pop+push+commut(di)
	#peephole move_dead
	#peephole move_dead
	#peephole unary+deadreg+binop
	#peephole unary1+binop2+deadreg+binop3
	#peephole pop+push+commut(di)
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole nop+set
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+ind push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+ind push
	#peephole pop+cmprev
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+ind push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+ind push
	#peephole pop+cmprev
	#peephole move_dead
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole unary+deadreg+binop
	#peephole move_dead
	#peephole unary+deadreg+binop
	#peephole unary1+binop2+deadreg+binop3
	#peephole pop+push+commut(di)
	#peephole pop+move(deadreg)
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole 1
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+ind push offset
	#peephole pop(deadreg)+push
	#peephole pop+push+sub
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole unary+deadreg+binop
	#peephole 1
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole unary+deadreg+binop
	#peephole unary1+binop2+deadreg+binop3
	#peephole pop+push+commut(di)
	#peephole unary+deadreg+binop
	#peephole unary1+binop2+deadreg+binop3
	#peephole pop+push+commut(di)
	#peephole move
	#peephole set+cmprev
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole unary1+binop2+deadreg+binop3
	#peephole pop+push+commut(di)
	#peephole push+add+pop+push+ind pop offset
	#peephole move
	#peephole pop+cmp
	#peephole nop+set
	#peephole move+push(pushable)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole popdi+cmp rev
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+push(deadreg)+sign_extend
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+cmp
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+push(deadreg)+sign_extend
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+cmp
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole move
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole move
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole move
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole move
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole move
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole move
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole move
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole move
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole move
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole move
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole move
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole move
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole move
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole move
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole nop+set
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+pushdi
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+commut(di)
	#peephole redundant blockage insn
	#peephole zero_extend
	#peephole zero_extend
	#peephole zero_extend
	#peephole pop+block+push+commut(di)
	#peephole zero_extend
	#peephole pop+block+push+commut(di)
	#peephole zero_extend
	#peephole pop+block+push+commut(di)
	#peephole zero_extend
	#peephole pop+block+push+commut(di)
	#peephole zero_extend
	#peephole pop+block+push+commut(di)
	#peephole zero_extend
	#peephole pop+block+push+commut(di)
	#peephole zero_extend
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+block+push+commut(di)
	#peephole zero_extend
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+block+push+commut(di)
	#peephole pop+move2(deadreg)
	#peephole redundant blockage insn
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole and+pophi
	#peephole popdi(deadreg)+push
	#peephole and+pophi
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole and+pophi
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole and+pophi
	#peephole popdi(deadreg)+push
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole and+pophi

# FUNCTION BEGINS:build_tree
build_tree.s_oc26bd2:
	# prologue (16 GPRs)

	set_sp! &-23

	load8! &24
	store8! &3 	#X2
	load8! &25
	store8! &1 	#AR
	load8! &0 	#AR
	load8
	#
	store8! &4 	#X3
	load8! &25
	add! 16
	load8
	#
	store8! &1 	#AR
	load8! &0 	#AR
	load8
	#
	store8! &9 	#X8
	load8! &0 	#AR
	add! 20
	load4
	#
	store8! &7 	#X6
	push! 0
	load8! &3 	#X2
	add! 13380
	store4
	#
	push! 573
	load8! &3 	#X2
	add! 13384
	store4
	#
	# CBRANCH
	push! 0
	add! -2147483648
	load4! &7 	#X6
	add! -2147483648
	lt_u
	jump_zero! .L158.l_oc26bd2
	# END CBRANCH
	load8! &3 	#X3
	store8! &6 	#X5
	push! 0
	store8! &1 	#AR
	push! 0
	store8! &2 	#X1
	push! -1
	store8! &16 	#X15
.L115.l_oc26bd2:
	load4! &0 	#AR
	store8! &5 	#X4
	load8! &5 	#X5
	load2
	#
	# CBRANCH - peep (modesize=2)
	and! 65535
	# - EQ0
	jump_zero! .L113.l_oc26bd2
	# END CBRANCH
	load8! &1 	#X1
	add! 1
	store8! &2 	#X1
	load4! &1 	#X1
	load8! &3 	#X2
	add! 13380
	store4
	#
	load4! &1 	#X1
	sigx4
	add! 2772
	shift_l! 2
	load8! &3 	#X2
	add
	store8! &8 	#X7
	load4! &0 	#AR
	load8! &8 	#X7
	store4
	#
	push! 0
	load8! &3 	#X2
	load8! &2 	#AR
	add
	add! 13388
	store1
	load4! &0 	#AR
	store8! &16 	#X15
	load8! &0 	#AR
	add! 1
	store8! &1 	#AR
	load8! &5 	#X5
	add! 16
	store8! &6 	#X5
	# CBRANCH
	load4! &0 	#AR
	add! -2147483648
	load4! &7 	#X6
	add! -2147483648
	lt_u
	not
	jump_zero! .L115.l_oc26bd2
	# END CBRANCH
.L112.l_oc26bd2:
	# CBRANCH EQ0
	load8! &8 	#X8
	jump_zero! .L116.l_oc26bd2
	# END CBRANCH
	load4! &1 	#X1
	sigx4
	add! 2773
	shift_l! 2
	load8! &3 	#X2
	add
	store8! &5 	#X4
	# CBRANCH
	push! 1
	add! -2147483648
	load4! &2 	#X1
	add! -2147483648
	lt_u
	not
	jump_zero! .L118.l_oc26bd2
	# END CBRANCH
.L122.l_oc26bd2:
	# CBRANCH
	push! 1
	add! -2147483648
	load4! &16 	#X15
	add! -2147483648
	lt_u
	jump_zero! .L201.l_oc26bd2
	# END CBRANCH
	load8! &3 	#X3
	store8! &8 	#X7
	push! 0
	store8! &6 	#X5
	push! 0
	store8! &1 	#AR
	load8! &1 	#X1
	add! 1
	store8! &2 	#X1
	load4! &1 	#X1
	load8! &3 	#X2
	add! 13380
	store4
	#
	load4! &0 	#AR
	load8! &5 	#X4
	store4
	#
	push! 1
	load8! &8 	#X7
	store2
	#
	load4! &0 	#AR
	sigx4
	load8! &3 	#X2
	add
	add! 13388
	store8! &1 	#AR
	push! 0
	load8! &1 	#AR
	store1
	#
	load8! &2 	#X2
	add! 13992
	load8
	#
	add! -1
	load8! &3 	#X2
	add! 13992
	store8
	#
	load8! &2 	#X2
	add! 14000
	load8
	#
	store8! &8 	#X7
	load8! &8 	#X8
	load8! &6 	#X5
	add
	add! 8
	load2
	and! 0x0ffff
	load8! &8 	#X7
	sub
	neg
	load8! &3 	#X2
	add! 14000
	store8
	#
	load8! &4 	#X4
	add! 4
	store8! &5 	#X4
.L204.l_oc26bd2:
	# CBRANCH
	push! 1
	add! -2147483648
	load4! &2 	#X1
	add! -2147483648
	lt_u
	jump_zero! .L122.l_oc26bd2
	# END CBRANCH
.L118.l_oc26bd2:
	load4! &15 	#X15
	load8! &26
	add! 8
	store4
	#
	load4! &1 	#X1
	sigx4
	shift_rs! 1
	store8! &9 	#X8
	load4! &8 	#X8
	sigx4
	add! 2772
	shift_l! 2
	load8! &3 	#X2
	add
	store8! &13 	#X12
	load8! &8 	#X8
	load8! &9 	#X8
	add
	store8! &11 	#X10
	load4! &15 	#X15
	store4! &18
	load4! &6 	#X6
	store4! &19
.L127.l_oc26bd2:
	load8! &12 	#X12
	load4
	#
	store8! &10 	#X9
	load4! &10 	#X10
	store8! &1 	#AR
	# CBRANCH
	load4! &1 	#X1
	add! -2147483648
	load4! &11 	#X10
	add! -2147483648
	lt_u
	not
	jump_zero! .L161.l_oc26bd2
	# END CBRANCH
	load4! &9 	#X9
	sigx4
	shift_l! 4
	load8! &4 	#X3
	add
	load2
	store8! &12 	#X11
	load4! &8 	#X8
	store8! &8 	#X7
.L126.l_oc26bd2:
	load4! &0 	#AR
	sigx4
	shift_l! 2
	load8! &3 	#X2
	add
	store8! &7 	#X6
	load8! &6 	#X6
	add! 11088
	load4
	#
	store8! &5 	#X4
	load4! &4 	#X4
	sigx4
	shift_l! 4
	load8! &4 	#X3
	add
	load2
	store8! &6 	#X5
	# CBRANCH
	load4! &0 	#AR
	add! -2147483648
	load4! &2 	#X1
	add! -2147483648
	lt_u
	jump_zero! .L124.l_oc26bd2
	# END CBRANCH
	load8! &0 	#AR
	add! 1
	store8! &15 	#X14
	load8! &6 	#X6
	add! 11092
	load4
	#
	store8! &7 	#X6
	load4! &6 	#X6
	sigx4
	shift_l! 4
	load8! &4 	#X3
	add
	load2
	store8! &14 	#X13
	# CBRANCH
	load2! &13 	#X13
	load2! &6 	#X5
	lt_u
	not
	jump_zero! .L162.l_oc26bd2
	# END CBRANCH
	# CBRANCH EQ
	load2! &13 	#X13
	load2! &6 	#X5
	xor
	jump_zero! .L202.l_oc26bd2
	# END CBRANCH
.L124.l_oc26bd2:
	# CBRANCH
	load2! &11 	#X11
	load2! &6 	#X5
	lt_u
	not
	jump_zero! .L123.l_oc26bd2
	# END CBRANCH
	# CBRANCH EQ
	load2! &11 	#X11
	load2! &6 	#X5
	xor
	jump_zero! .L203.l_oc26bd2
	# END CBRANCH
.L125.l_oc26bd2:
	load4! &7 	#X7
	sigx4
	add! 2772
	shift_l! 2
	load8! &3 	#X2
	add
	store8! &6 	#X5
	load4! &4 	#X4
	load8! &6 	#X5
	store4
	#
	load8! &0 	#AR
	load8! &1 	#AR
	add
	store8! &5 	#X4
	load4! &0 	#AR
	store8! &8 	#X7
	# CBRANCH
	load4! &1 	#X1
	add! -2147483648
	load4! &5 	#X4
	add! -2147483648
	lt_u
	not
	jump_zero! .L123.l_oc26bd2
	# END CBRANCH
	load4! &4 	#X4
	store8! &1 	#AR
	jump! .L126.l_oc26bd2
.L113.l_oc26bd2:
	push! 0
	load8! &6 	#X5
	add! 8
	store2
	#
	load8! &0 	#AR
	add! 1
	store8! &1 	#AR
	load8! &5 	#X5
	add! 16
	store8! &6 	#X5
	# CBRANCH
	load4! &0 	#AR
	add! -2147483648
	load4! &7 	#X6
	add! -2147483648
	lt_u
	not
	jump_zero! .L115.l_oc26bd2
	# END CBRANCH
	jump! .L112.l_oc26bd2
.L201.l_oc26bd2:
	load8! &15 	#X15
	add! 1
	store8! &16 	#X15
	load4! &15 	#X15
	sigx4
	shift_l! 4
	store8! &6 	#X5
	load8! &3 	#X3
	load8! &6 	#X5
	add
	store8! &8 	#X7
	load4! &15 	#X15
	store8! &1 	#AR
	load8! &1 	#X1
	add! 1
	store8! &2 	#X1
	load4! &1 	#X1
	load8! &3 	#X2
	add! 13380
	store4
	#
	load4! &0 	#AR
	load8! &5 	#X4
	store4
	#
	push! 1
	load8! &8 	#X7
	store2
	#
	load4! &0 	#AR
	sigx4
	load8! &3 	#X2
	add
	add! 13388
	store8! &1 	#AR
	push! 0
	load8! &1 	#AR
	store1
	#
	load8! &2 	#X2
	add! 13992
	load8
	#
	add! -1
	load8! &3 	#X2
	add! 13992
	store8
	#
	load8! &2 	#X2
	add! 14000
	load8
	#
	store8! &8 	#X7
	load8! &8 	#X8
	load8! &6 	#X5
	add
	add! 8
	load2
	and! 0x0ffff
	load8! &8 	#X7
	sub
	neg
	load8! &3 	#X2
	add! 14000
	store8
	#
	load8! &4 	#X4
	add! 4
	store8! &5 	#X4
	jump! .L204.l_oc26bd2
.L203.l_oc26bd2:
	load4! &9 	#X9
	sigx4
	load8! &3 	#X2
	add
	add! 13388
	load1
	store8! &7 	#X6
	load4! &4 	#X4
	sigx4
	load8! &3 	#X2
	add
	add! 13388
	load1
	# CBRANCH - peep (modesize=1)
	and! 255
	# - reverse 
	load1! &7 	#X6
	lt_u
	not
	jump_zero! .L125.l_oc26bd2
	# END CBRANCH
.L123.l_oc26bd2:
	load4! &7 	#X7
	sigx4
	add! 2772
	shift_l! 2
	load8! &3 	#X2
	add
	store8! &1 	#AR
	load4! &9 	#X9
	load8! &1 	#AR
	store4
	#
	load8! &8 	#X8
	add! -1
	store8! &9 	#X8
	load8! &12 	#X12
	add! -4
	store8! &13 	#X12
	load8! &10 	#X10
	add! -2
	store8! &11 	#X10
	# CBRANCH EQ0
	load4! &8 	#X8
	jump_not_zero! .L127.l_oc26bd2
	# END CBRANCH
.L211.l_oc26bd2:
	load4! &17
	store8! &16 	#X15
	load4! &18
	store8! &7 	#X6
	load8! &2 	#X2
	add! 13380
	load4
	#
	store8! &1 	#AR
	load4! &6 	#X6
	sigx4
	store8! &2 	#X1
	load8! &1 	#X1
	shift_l! 4
	load8! &4 	#X3
	add
	store8! &6 	#X5
	load8! &1 	#X1
	add! 13388
	load8! &3 	#X2
	add
	store8! &5 	#X4
	load8! &2 	#X2
	add! 11092
	load4
	#
	store8! &8 	#X7
	load8! &0 	#AR
	add! -1
	load8! &3 	#X2
	add! 13380
	store4
	#
	load4! &0 	#AR
	sigx4
	add! 2772
	shift_l! 2
	load8! &3 	#X2
	add
	load4
	load8! &3 	#X2
	add! 11092
	store4
	#
	load8! &3 	#X3
	load8! &3 	#X2
	call! .Li_pqdownheap.constprop_1.l_oc26bd2
	set_sp! (+ &0 16)
	

	load8! &2 	#X2
	add! 11092
	load4
	#
	store8! &1 	#AR
	load8! &2 	#X2
	add! 13384
	load4
	#
	store8! &9 	#X8
	load4! &8 	#X8
	sigx4
	shift_l! 2
	load8! &3 	#X2
	add
	store8! &2 	#X1
	load4! &7 	#X7
	load8! &2 	#X1
	add! 11084
	store4
	#
	load8! &8 	#X8
	add! -2
	load8! &3 	#X2
	add! 13384
	store4
	#
	load4! &0 	#AR
	load8! &2 	#X1
	add! 11080
	store4
	#
	load4! &7 	#X7
	sigx4
	shift_l! 4
	load8! &4 	#X3
	add
	store8! &2 	#X1
	load8! &1 	#X1
	load2
	#
	store8! &10 	#X9
	load4! &0 	#AR
	sigx4
	shift_l! 4
	load8! &4 	#X3
	add
	store8! &9 	#X8
	load8! &8 	#X8
	load2
	#
	load8! &10 	#X9
	add
	load8! &6 	#X5
	store2
	#
	load4! &7 	#X7
	sigx4
	load8! &3 	#X2
	add
	add! 13388
	load1
	store8! &8 	#X7
	load4! &0 	#AR
	sigx4
	load8! &3 	#X2
	add
	add! 13388
	load1
	store8! &1 	#AR
	# CBRANCH
	load1! &7 	#X7
	load1! &1 	#AR
	lt_u
	not
	jump_zero! .L128.l_oc26bd2
	# END CBRANCH
.L206.l_oc26bd2:
	load8! &7 	#X7
	add! 1
	store8! &1 	#AR
	load1! &0 	#AR
	load8! &5 	#X4
	store1
	#
	load2! &6 	#X6
	store8! &1 	#AR
	load2! &6 	#X6
	load8! &9 	#X8
	add! 8
	store2
	#
	load2! &6 	#X6
	load8! &2 	#X1
	add! 8
	store2
	#
	load8! &6 	#X6
	add! 1
	store8! &8 	#X7
	load4! &6 	#X6
	load8! &3 	#X2
	add! 11092
	store4
	#
	load8! &3 	#X3
	load8! &3 	#X2
	call! .Li_pqdownheap.constprop_1.l_oc26bd2
	set_sp! (+ &0 16)
	

	load8! &2 	#X2
	add! 13380
	load4
	#
	store8! &1 	#AR
	load8! &5 	#X5
	add! 16
	store8! &6 	#X5
	load8! &4 	#X4
	add! 1
	store8! &5 	#X4
	# CBRANCH
	push! 1
	add! -2147483648
	load4! &1 	#AR
	add! -2147483648
	lt_u
	jump_zero! .L205.l_oc26bd2
	# END CBRANCH
.L164.l_oc26bd2:
	load4! &7 	#X7
	store8! &7 	#X6
	load8! &2 	#X2
	add! 11092
	load4
	#
	store8! &8 	#X7
	load8! &0 	#AR
	add! -1
	load8! &3 	#X2
	add! 13380
	store4
	#
	load4! &0 	#AR
	sigx4
	add! 2772
	shift_l! 2
	load8! &3 	#X2
	add
	load4
	load8! &3 	#X2
	add! 11092
	store4
	#
	load8! &3 	#X3
	load8! &3 	#X2
	call! .Li_pqdownheap.constprop_1.l_oc26bd2
	set_sp! (+ &0 16)
	

	load8! &2 	#X2
	add! 11092
	load4
	#
	store8! &1 	#AR
	load8! &2 	#X2
	add! 13384
	load4
	#
	store8! &9 	#X8
	load4! &8 	#X8
	sigx4
	shift_l! 2
	load8! &3 	#X2
	add
	store8! &2 	#X1
	load4! &7 	#X7
	load8! &2 	#X1
	add! 11084
	store4
	#
	load8! &8 	#X8
	add! -2
	load8! &3 	#X2
	add! 13384
	store4
	#
	load4! &0 	#AR
	load8! &2 	#X1
	add! 11080
	store4
	#
	load4! &7 	#X7
	sigx4
	shift_l! 4
	load8! &4 	#X3
	add
	store8! &2 	#X1
	load8! &1 	#X1
	load2
	#
	store8! &10 	#X9
	load4! &0 	#AR
	sigx4
	shift_l! 4
	load8! &4 	#X3
	add
	store8! &9 	#X8
	load8! &8 	#X8
	load2
	#
	load8! &10 	#X9
	add
	load8! &6 	#X5
	store2
	#
	load4! &7 	#X7
	sigx4
	load8! &3 	#X2
	add
	add! 13388
	load1
	store8! &8 	#X7
	load4! &0 	#AR
	sigx4
	load8! &3 	#X2
	add
	add! 13388
	load1
	store8! &1 	#AR
	# CBRANCH
	load1! &7 	#X7
	load1! &1 	#AR
	lt_u
	jump_zero! .L206.l_oc26bd2
	# END CBRANCH
.L128.l_oc26bd2:
	load8! &0 	#AR
	add! 1
	store8! &1 	#AR
	load1! &0 	#AR
	load8! &5 	#X4
	store1
	#
	load2! &6 	#X6
	store8! &1 	#AR
	load2! &6 	#X6
	load8! &9 	#X8
	add! 8
	store2
	#
	load2! &6 	#X6
	load8! &2 	#X1
	add! 8
	store2
	#
	load8! &6 	#X6
	add! 1
	store8! &8 	#X7
	load4! &6 	#X6
	load8! &3 	#X2
	add! 11092
	store4
	#
	load8! &3 	#X3
	load8! &3 	#X2
	call! .Li_pqdownheap.constprop_1.l_oc26bd2
	set_sp! (+ &0 16)
	

	load8! &2 	#X2
	add! 13380
	load4
	#
	store8! &1 	#AR
	load8! &5 	#X5
	add! 16
	store8! &6 	#X5
	load8! &4 	#X4
	add! 1
	store8! &5 	#X4
	# CBRANCH
	push! 1
	add! -2147483648
	load4! &1 	#AR
	add! -2147483648
	lt_u
	not
	jump_zero! .L164.l_oc26bd2
	# END CBRANCH
.L205.l_oc26bd2:
	load8! &2 	#X2
	add! 13384
	load4
	#
	store8! &6 	#X5
	load8! &5 	#X5
	add! -1
	store8! &1 	#AR
	load4! &0 	#AR
	load8! &3 	#X2
	add! 13384
	store4
	#
	load8! &2 	#X2
	add! 11092
	load4
	#
	store8! &8 	#X7
	load4! &0 	#AR
	sigx4
	add! 2772
	shift_l! 2
	load8! &3 	#X2
	add
	store8! &1 	#AR
	load4! &7 	#X7
	load8! &1 	#AR
	store4
	#
	load8! &25
	store8! &7 	#X6
	load8! &6 	#X6
	load8
	#
	store8! &7 	#X6
	load8! &25
	add! 8
	load4
	#
	store8! &10 	#X9
	load8! &25
	add! 16
	load8
	#
	store8! &1 	#AR
	load8! &0 	#AR
	load8
	#
	store8! &14 	#X13
	load8! &0 	#AR
	add! 8
	load8
	#
	store8! &17
	load8! &0 	#AR
	add! 16
	load4
	#
	store8! &13 	#X12
	load8! &0 	#AR
	add! 24
	load4
	#
	store8! &5 	#X4
	load8! &2 	#X2
	add! 11056
	store8! &1 	#AR
	push! 32
	push! 0
	load8! &2 	#AR
	call! memset
	store8! &3

	set_sp! &2
	load4! &7 	#X7
	sigx4
	shift_l! 4
	load8! &7 	#X6
	add
	store8! &1 	#AR
	push! 0
	load8! &1 	#AR
	add! 8
	store2
	#
	# CBRANCH
	push! 572
	add! -2147483648
	load4! &6 	#X5
	add! -2147483648
	lt_u
	not
	jump_zero! .L145.l_oc26bd2
	# END CBRANCH
	# CBRANCH EQ0
	load8! &13 	#X13
	jump_zero! .L207.l_oc26bd2
	# END CBRANCH
	load4! &5 	#X5
	sigx4
	store8! &2 	#X1
	load8! &1 	#X1
	add! 2772
	shift_l! 2
	load8! &3 	#X2
	add
	store8! &1 	#AR
	push! 572
	load8! &6 	#X5
	sub
	and! 0xffffffff
	load8! &2 	#X1
	add
	shift_l! 2
	store8! &2 	#X1
	load8! &2 	#X2
	add! 11092
	load8! &2 	#X1
	add
	store8! &2 	#X1
	push! 0
	store8! &6 	#X5
	load4! &15 	#X15
	store4! &18
	load8! &1 	#X1
	store8! &16 	#X15
.L144.l_oc26bd2:
	load8! &0 	#AR
	load4
	#
	store8! &8 	#X7
	load4! &7 	#X7
	sigx4
	shift_l! 4
	store8! &11 	#X10
	load8! &6 	#X6
	load8! &11 	#X10
	add
	store8! &9 	#X8
	load8! &8 	#X8
	add! 8
	load2
	#
	and! 0x0ffff
	shift_l! 4
	load8! &7 	#X6
	add
	add! 8
	load2
	and! 0x0ffff
	add! 1
	store8! &2 	#X1
	# CBRANCH
	load4! &4 	#X4
	add! -2147483648
	load4! &2 	#X1
	add! -2147483648
	lt_u
	jump_zero! .L141.l_oc26bd2
	# END CBRANCH
	load8! &5 	#X5
	add! 1
	store8! &6 	#X5
	load4! &4 	#X4
	store8! &2 	#X1
.L141.l_oc26bd2:
	load2! &1 	#X1
	load8! &9 	#X8
	add! 8
	store2
	#
	# CBRANCH
	load4! &9 	#X9
	add! -2147483648
	load4! &8 	#X7
	add! -2147483648
	lt_u
	not
	jump_zero! .L142.l_oc26bd2
	# END CBRANCH
	load4! &1 	#X1
	sigx4
	store8! &12 	#X11
	load8! &11 	#X11
	load8! &12 	#X11
	add
	load8! &3 	#X2
	add
	store8! &12 	#X11
	load8! &11 	#X11
	add! 11056
	load2
	#
	add! 1
	load8! &12 	#X11
	add! 11056
	store2
	#
	# CBRANCH
	load4! &7 	#X7
	add! -2147483648
	load4! &13 	#X12
	add! -2147483648
	lt_u
	not
	jump_zero! .L165.l_oc26bd2
	# END CBRANCH
	load8! &12 	#X12
	load8! &8 	#X7
	sub
	neg
	sigx4
	shift_l! 2
	load8! &17
	add
	load4
	store8! &12 	#X11
	load8! &11 	#X11
	load8! &2 	#X1
	add
	store8! &2 	#X1
	load8! &8 	#X8
	load2
	#
	store8! &8 	#X7
	load8! &2 	#X2
	add! 13992
	load8
	#
	store8! &9 	#X8
	load2! &7 	#X7
	store8! &8 	#X7
	load4! &1 	#X1
	load8! &8 	#X7
	mult
	load8! &9 	#X8
	add
	load8! &3 	#X2
	add! 13992
	store8
	#
	load8! &2 	#X2
	add! 14000
	load8
	#
	store8! &2 	#X1
	load8! &13 	#X13
	load8! &11 	#X10
	add
	add! 8
	load2
	and! 0x0ffff
	load8! &12 	#X11
	add
	and! 0xffffffff
	load8! &8 	#X7
	mult
	load8! &2 	#X1
	add
	load8! &3 	#X2
	add! 14000
	store8
	#
.L142.l_oc26bd2:
	load8! &0 	#AR
	add! 4
	store8! &1 	#AR
	# CBRANCH
	load8! &0 	#AR
	load8! &16 	#X15
	xor
	push! 1
	lt_u
	jump_zero! .L144.l_oc26bd2
	# END CBRANCH
	load4! &17
	store8! &16 	#X15
.L140.l_oc26bd2:
	# CBRANCH EQ0
	load4! &5 	#X5
	jump_zero! .L145.l_oc26bd2
	# END CBRANCH
	load8! &4 	#X4
	add! -1
	store8! &12 	#X11
.L148.l_oc26bd2:
	load4! &4 	#X4
	sigx4
	store8! &8 	#X7
	load8! &7 	#X7
	load8! &8 	#X7
	add
	load8! &3 	#X2
	add
	store8! &11 	#X10
	load8! &10 	#X10
	add! 11054
	load2
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load2! &0 	#AR
	jump_not_zero! .L166.l_oc26bd2
	# END CBRANCH
	load8! &4 	#X4
	add! -2
	store8! &2 	#X1
	load4! &1 	#X1
	sigx4
	add! 5528
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	load8! &3 	#X2
	add
	load2
	store8! &1 	#AR
	# CBRANCH EQ0
	load2! &0 	#AR
	jump_not_zero! .L167.l_oc26bd2
	# END CBRANCH
	load8! &4 	#X4
	add! -3
	store8! &9 	#X8
	load4! &8 	#X8
	sigx4
	add! 5528
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	load8! &3 	#X2
	add
	load2
	store8! &1 	#AR
	# CBRANCH EQ0
	load2! &0 	#AR
	jump_not_zero! .L168.l_oc26bd2
	# END CBRANCH
	load8! &4 	#X4
	add! -4
	store8! &2 	#X1
	load4! &1 	#X1
	sigx4
	add! 5528
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	load8! &3 	#X2
	add
	load2
	store8! &1 	#AR
	# CBRANCH EQ0
	load2! &0 	#AR
	jump_not_zero! .L146.l_oc26bd2
	# END CBRANCH
	load8! &4 	#X4
	add! -5
	store8! &9 	#X8
	load4! &8 	#X8
	sigx4
	add! 5528
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	load8! &3 	#X2
	add
	load2
	store8! &1 	#AR
	# CBRANCH EQ0
	load2! &0 	#AR
	jump_not_zero! .L169.l_oc26bd2
	# END CBRANCH
	load8! &4 	#X4
	add! -6
	store8! &2 	#X1
	load4! &1 	#X1
	sigx4
	add! 5528
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	load8! &3 	#X2
	add
	load2
	store8! &1 	#AR
	# CBRANCH EQ0
	load2! &0 	#AR
	jump_not_zero! .L146.l_oc26bd2
	# END CBRANCH
	load8! &4 	#X4
	add! -7
	store8! &9 	#X8
	load4! &8 	#X8
	sigx4
	add! 5528
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	load8! &3 	#X2
	add
	load2
	store8! &1 	#AR
	# CBRANCH EQ0
	load2! &0 	#AR
	jump_not_zero! .L170.l_oc26bd2
	# END CBRANCH
	load8! &4 	#X4
	add! -8
	store8! &2 	#X1
	load4! &1 	#X1
	sigx4
	add! 5528
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	load8! &3 	#X2
	add
	load2
	store8! &1 	#AR
	# CBRANCH EQ0
	load2! &0 	#AR
	jump_not_zero! .L146.l_oc26bd2
	# END CBRANCH
	load8! &4 	#X4
	add! -9
	store8! &9 	#X8
	load4! &8 	#X8
	sigx4
	add! 5528
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	load8! &3 	#X2
	add
	load2
	store8! &1 	#AR
	# CBRANCH EQ0
	load2! &0 	#AR
	jump_not_zero! .L171.l_oc26bd2
	# END CBRANCH
	load8! &4 	#X4
	add! -10
	store8! &2 	#X1
	load4! &1 	#X1
	sigx4
	add! 5528
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	load8! &3 	#X2
	add
	load2
	store8! &1 	#AR
	# CBRANCH EQ0
	load2! &0 	#AR
	jump_not_zero! .L146.l_oc26bd2
	# END CBRANCH
	load8! &4 	#X4
	add! -11
	store8! &9 	#X8
	load4! &8 	#X8
	sigx4
	add! 5528
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	load8! &3 	#X2
	add
	load2
	store8! &1 	#AR
	# CBRANCH EQ0
	load2! &0 	#AR
	jump_not_zero! .L172.l_oc26bd2
	# END CBRANCH
	load8! &4 	#X4
	add! -12
	store8! &2 	#X1
	load4! &1 	#X1
	sigx4
	add! 5528
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	load8! &3 	#X2
	add
	load2
	store8! &1 	#AR
	# CBRANCH EQ0
	load2! &0 	#AR
	jump_not_zero! .L146.l_oc26bd2
	# END CBRANCH
	load8! &4 	#X4
	add! -13
	store8! &9 	#X8
	load4! &8 	#X8
	sigx4
	add! 5528
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	load8! &3 	#X2
	add
	load2
	store8! &1 	#AR
	# CBRANCH EQ0
	load2! &0 	#AR
	jump_not_zero! .L173.l_oc26bd2
	# END CBRANCH
	load8! &4 	#X4
	add! -14
	store8! &2 	#X1
	load4! &1 	#X1
	sigx4
	add! 5528
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	load8! &3 	#X2
	add
	load2
	store8! &1 	#AR
	# CBRANCH EQ0
	load2! &0 	#AR
	jump_not_zero! .L146.l_oc26bd2
	# END CBRANCH
	load8! &4 	#X4
	add! -15
	store8! &13 	#X12
	load4! &12 	#X12
	sigx4
	add! 5528
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	load8! &3 	#X2
	add
	load2
	store8! &1 	#AR
	# CBRANCH EQ0
	load2! &0 	#AR
	jump_not_zero! .L174.l_oc26bd2
	# END CBRANCH
	load8! &4 	#X4
	add! -16
	store8! &9 	#X8
	load4! &8 	#X8
	sigx4
	add! 5528
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	load8! &3 	#X2
	add
	load2
	store8! &1 	#AR
	# CBRANCH EQ0
	load2! &0 	#AR
	jump_not_zero! .L175.l_oc26bd2
	# END CBRANCH
	load8! &4 	#X4
	add! -17
	store8! &2 	#X1
	load4! &1 	#X1
	sigx4
	add! 5528
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	load8! &3 	#X2
	add
	load2
	store8! &1 	#AR
.L146.l_oc26bd2:
	load8! &0 	#AR
	add! -1
	store8! &13 	#X12
	load4! &1 	#X1
	sigx4
	add! 5528
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	load8! &3 	#X2
	add
	store8! &1 	#AR
	load2! &12 	#X12
	load8! &1 	#AR
	store2
	#
	load4! &8 	#X8
	sigx4
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	load8! &3 	#X2
	add
	store8! &1 	#AR
	load8! &0 	#AR
	add! 11056
	load2
	#
	add! 2
	load8! &1 	#AR
	add! 11056
	store2
	#
	load8! &10 	#X10
	add! 11056
	load2
	#
	add! -1
	load8! &11 	#X10
	add! 11056
	store2
	#
	load8! &5 	#X5
	add! -2
	store8! &6 	#X5
	# CBRANCH
	push! 0
	add! -2147483648
	load4! &6 	#X5
	add! -2147483648
	lt_u
	not
	jump_zero! .L148.l_oc26bd2
	# END CBRANCH
.L209.l_oc26bd2:
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_zero! .L145.l_oc26bd2
	# END CBRANCH
	load8! &7 	#X7
	add! 5528
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	load8! &3 	#X2
	add
	store8! &11 	#X10
	push! 573
	store8! &12 	#X11
.L154.l_oc26bd2:
	load8! &10 	#X10
	load2
	#
	and! 0x0ffff
	store8! &9 	#X8
	# CBRANCH EQ0
	load4! &8 	#X8
	jump_zero! .L149.l_oc26bd2
	# END CBRANCH
	load4! &11 	#X11
	sigx4
	add! 2771
	shift_l! 2
	load8! &3 	#X2
	add
	store8! &1 	#AR
.L150.l_oc26bd2:
	load8! &11 	#X11
	add! -1
	store8! &12 	#X11
	load8! &0 	#AR
	load4
	#
	store8! &2 	#X1
	# CBRANCH
	load4! &9 	#X9
	add! -2147483648
	load4! &2 	#X1
	add! -2147483648
	lt_u
	not
	jump_zero! .L151.l_oc26bd2
	# END CBRANCH
	load4! &1 	#X1
	sigx4
	shift_l! 4
	load8! &7 	#X6
	add
	store8! &2 	#X1
	load8! &1 	#X1
	add! 8
	load2
	#
	store8! &6 	#X5
	load2! &5 	#X5
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ
	load4! &5 	#X4
	xor
	jump_zero! .L152.l_oc26bd2
	# END CBRANCH
	load8! &2 	#X2
	add! 13992
	load8
	#
	store8! &13 	#X12
	load2! &5 	#X5
	load8! &8 	#X7
	sub
	neg
	store8! &14 	#X13
	load8! &1 	#X1
	load2
	#
	and! 0x0ffff
	load8! &14 	#X13
	mult
	load8! &13 	#X12
	add
	load8! &3 	#X2
	add! 13992
	store8
	#
	load2! &4 	#X4
	load8! &2 	#X1
	add! 8
	store2
	#
.L152.l_oc26bd2:
	load8! &8 	#X8
	add! -1
	store8! &9 	#X8
	load8! &0 	#AR
	add! -4
	store8! &1 	#AR
	# CBRANCH EQ0
	load4! &8 	#X8
	jump_not_zero! .L150.l_oc26bd2
	# END CBRANCH
.L149.l_oc26bd2:
	load8! &4 	#X4
	add! -1
	store8! &5 	#X4
	load8! &7 	#X7
	add! -1
	store8! &8 	#X7
	load8! &10 	#X10
	add! -2
	store8! &11 	#X10
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_not_zero! .L154.l_oc26bd2
	# END CBRANCH
.L145.l_oc26bd2:
	load8! &2 	#X2
	add! 11056
	load2
	#
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	store8! &1 	#AR
	load2! &0 	#AR
	store2! (+ &0 162)
	load8! &2 	#X2
	add! 11058
	load2
	#
	load8! &1 	#AR
	add
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	store8! &1 	#AR
	load2! &0 	#AR
	store2! (+ &0 164)
	load8! &2 	#X2
	add! 11060
	load2
	#
	load8! &1 	#AR
	add
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	store8! &1 	#AR
	load2! &0 	#AR
	store2! (+ &0 166)
	load8! &2 	#X2
	add! 11062
	load2
	#
	load8! &1 	#AR
	add
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	store8! &1 	#AR
	load2! &0 	#AR
	store2! &21
	load8! &2 	#X2
	add! 11064
	load2
	#
	load8! &1 	#AR
	add
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	store8! &1 	#AR
	load2! &0 	#AR
	store2! (+ &0 170)
	load8! &2 	#X2
	add! 11066
	load2
	#
	load8! &1 	#AR
	add
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	store8! &1 	#AR
	load2! &0 	#AR
	store2! (+ &0 172)
	load8! &2 	#X2
	add! 11068
	load2
	#
	load8! &1 	#AR
	add
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	store8! &1 	#AR
	load2! &0 	#AR
	store2! (+ &0 174)
	load8! &2 	#X2
	add! 11070
	load2
	#
	load8! &1 	#AR
	add
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	store8! &1 	#AR
	load2! &0 	#AR
	store2! &22
	load8! &2 	#X2
	add! 11072
	load2
	#
	load8! &1 	#AR
	add
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	store8! &1 	#AR
	load2! &0 	#AR
	store2! (+ &0 178)
	load8! &2 	#X2
	add! 11074
	load2
	#
	load8! &1 	#AR
	add
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	store8! &1 	#AR
	load2! &0 	#AR
	store2! (+ &0 180)
	load8! &2 	#X2
	add! 11076
	load2
	#
	load8! &1 	#AR
	add
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	store8! &1 	#AR
	load2! &0 	#AR
	store2! (+ &0 182)
	load8! &2 	#X2
	add! 11078
	load2
	#
	load8! &1 	#AR
	add
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	store8! &1 	#AR
	load2! &0 	#AR
	store2! &23
	load8! &2 	#X2
	add! 11080
	load2
	#
	load8! &1 	#AR
	add
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	store8! &1 	#AR
	load2! &0 	#AR
	store2! (+ &0 186)
	load8! &2 	#X2
	add! 11082
	load2
	#
	load8! &1 	#AR
	add
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	store8! &1 	#AR
	load2! &0 	#AR
	store2! (+ &0 188)
	load8! &2 	#X2
	add! 11084
	load2
	#
	load8! &1 	#AR
	add
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	store2! (+ &0 190)
	# CBRANCH EQ
	load4! &15 	#X15
	push! 4294967295
	xor
	jump_zero! .L111.l_oc26bd2
	# END CBRANCH
	load8! &3 	#X3
	add! 8
	store8! &1 	#AR
	load4! &15 	#X15
	sigx4
	shift_l! 4
	store8! &2 	#X1
	load8! &3 	#X3
	add! 24
	load8! &2 	#X1
	add
	store8! &6 	#X5
.L157.l_oc26bd2:
	load8! &0 	#AR
	load2
	#
	store8! &2 	#X1
	# CBRANCH EQ0
	load4! &1 	#X1
	jump_not_zero! .L208.l_oc26bd2
	# END CBRANCH
	load8! &0 	#AR
	add! 16
	store8! &1 	#AR
	# CBRANCH
	load8! &0 	#AR
	load8! &6 	#X5
	xor
	push! 1
	lt_u
	jump_zero! .L157.l_oc26bd2
	# END CBRANCH
	jump! .L111.l_oc26bd2
.L202.l_oc26bd2:
	load4! &6 	#X6
	sigx4
	load8! &3 	#X2
	add
	add! 13388
	load1
	store8! &16 	#X15
	load4! &4 	#X4
	sigx4
	load8! &3 	#X2
	add
	add! 13388
	load1
	# CBRANCH - peep (modesize=1)
	and! 255
	# - reverse 
	load1! &16 	#X15
	lt_u
	not
	jump_zero! .L124.l_oc26bd2
	# END CBRANCH
	load4! &6 	#X6
	store8! &5 	#X4
	load4! &14 	#X14
	store8! &1 	#AR
	jump! .L124.l_oc26bd2
.L162.l_oc26bd2:
	load2! &13 	#X13
	store8! &6 	#X5
	load4! &6 	#X6
	store8! &5 	#X4
	load4! &14 	#X14
	store8! &1 	#AR
	jump! .L124.l_oc26bd2
.L208.l_oc26bd2:
	load4! &1 	#X1
	sigx4
	store8! &3 	#X2
	load8! &2 	#X2
	load8! &3 	#X2
	add
	store8! &3 	#X2
	push! &0
	add! 184
	load8! &3 	#X2
	add
	add! -32
	load2
	store8! &3 	#X2
	load8! &2 	#X2
	add! 1
	store8! &5 	#X4
	load4! &1 	#X1
	sigx4
	store8! &4 	#X3
	load8! &3 	#X3
	load8! &4 	#X3
	add
	store8! &4 	#X3
	push! &0
	add! 184
	load8! &4 	#X3
	add
	add! -32
	store8! &4 	#X3
	load2! &4 	#X4
	load8! &4 	#X3
	store2
	#
	load2! &2 	#X2
	store8! &4 	#X3
	push! 0
	store8! &5 	#X4
.L156.l_oc26bd2:
	load8! &3 	#X3
	and! 0x1
	load8! &5 	#X4
	or
	store8! &3 	#X2
	load4! &3 	#X3
	shift_ru! 1
	store8! &4 	#X3
	load8! &2 	#X2
	load8! &3 	#X2
	add
	store8! &5 	#X4
	load8! &1 	#X1
	add! -1
	store8! &2 	#X1
	# CBRANCH EQ0
	load4! &1 	#X1
	jump_not_zero! .L156.l_oc26bd2
	# END CBRANCH
	load8! &2 	#X2
	and! 0x7fffffff
	and! 0xffff
	load8! &1 	#AR
	add! -8
	store2
	load8! &0 	#AR
	add! 16
	store8! &1 	#AR
	# CBRANCH
	load8! &0 	#AR
	load8! &6 	#X5
	xor
	push! 1
	lt_u
	jump_zero! .L157.l_oc26bd2
	# END CBRANCH
	jump! .L111.l_oc26bd2
.L151.l_oc26bd2:
	load8! &0 	#AR
	add! -4
	store8! &1 	#AR
	jump! .L150.l_oc26bd2
.L165.l_oc26bd2:
	push! 0
	store8! &12 	#X11
	load8! &8 	#X8
	load2
	#
	store8! &8 	#X7
	load8! &2 	#X2
	add! 13992
	load8
	#
	store8! &9 	#X8
	load2! &7 	#X7
	store8! &8 	#X7
	load4! &1 	#X1
	load8! &8 	#X7
	mult
	load8! &9 	#X8
	add
	load8! &3 	#X2
	add! 13992
	store8
	#
	load8! &2 	#X2
	add! 14000
	load8
	#
	store8! &2 	#X1
	load8! &13 	#X13
	load8! &11 	#X10
	add
	add! 8
	load2
	and! 0x0ffff
	load8! &12 	#X11
	add
	and! 0xffffffff
	load8! &8 	#X7
	mult
	load8! &2 	#X1
	add
	load8! &3 	#X2
	add! 14000
	store8
	#
	jump! .L142.l_oc26bd2
.L166.l_oc26bd2:
	load4! &4 	#X4
	store8! &9 	#X8
	load4! &11 	#X11
	store8! &2 	#X1
	load8! &0 	#AR
	add! -1
	store8! &13 	#X12
	load4! &1 	#X1
	sigx4
	add! 5528
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	load8! &3 	#X2
	add
	store8! &1 	#AR
	load2! &12 	#X12
	load8! &1 	#AR
	store2
	#
	load4! &8 	#X8
	sigx4
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	load8! &3 	#X2
	add
	store8! &1 	#AR
	load8! &0 	#AR
	add! 11056
	load2
	#
	add! 2
	load8! &1 	#AR
	add! 11056
	store2
	#
	load8! &10 	#X10
	add! 11056
	load2
	#
	add! -1
	load8! &11 	#X10
	add! 11056
	store2
	#
	load8! &5 	#X5
	add! -2
	store8! &6 	#X5
	# CBRANCH
	push! 0
	add! -2147483648
	load4! &6 	#X5
	add! -2147483648
	lt_u
	not
	jump_zero! .L148.l_oc26bd2
	# END CBRANCH
	jump! .L209.l_oc26bd2
.L167.l_oc26bd2:
	load4! &11 	#X11
	store8! &9 	#X8
	load8! &0 	#AR
	add! -1
	store8! &13 	#X12
	load4! &1 	#X1
	sigx4
	add! 5528
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	load8! &3 	#X2
	add
	store8! &1 	#AR
	load2! &12 	#X12
	load8! &1 	#AR
	store2
	#
	load4! &8 	#X8
	sigx4
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	load8! &3 	#X2
	add
	store8! &1 	#AR
	load8! &0 	#AR
	add! 11056
	load2
	#
	add! 2
	load8! &1 	#AR
	add! 11056
	store2
	#
	load8! &10 	#X10
	add! 11056
	load2
	#
	add! -1
	load8! &11 	#X10
	add! 11056
	store2
	#
	load8! &5 	#X5
	add! -2
	store8! &6 	#X5
	# CBRANCH
	push! 0
	add! -2147483648
	load4! &6 	#X5
	add! -2147483648
	lt_u
	not
	jump_zero! .L148.l_oc26bd2
	# END CBRANCH
	jump! .L209.l_oc26bd2
.L168.l_oc26bd2:
	load4! &1 	#X1
	store8! &13 	#X12
	load4! &8 	#X8
	store8! &2 	#X1
	load4! &12 	#X12
	store8! &9 	#X8
	load8! &0 	#AR
	add! -1
	store8! &13 	#X12
	load4! &1 	#X1
	sigx4
	add! 5528
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	load8! &3 	#X2
	add
	store8! &1 	#AR
	load2! &12 	#X12
	load8! &1 	#AR
	store2
	#
	load4! &8 	#X8
	sigx4
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	load8! &3 	#X2
	add
	store8! &1 	#AR
	load8! &0 	#AR
	add! 11056
	load2
	#
	add! 2
	load8! &1 	#AR
	add! 11056
	store2
	#
	load8! &10 	#X10
	add! 11056
	load2
	#
	add! -1
	load8! &11 	#X10
	add! 11056
	store2
	#
	load8! &5 	#X5
	add! -2
	store8! &6 	#X5
	# CBRANCH
	push! 0
	add! -2147483648
	load4! &6 	#X5
	add! -2147483648
	lt_u
	not
	jump_zero! .L148.l_oc26bd2
	# END CBRANCH
	jump! .L209.l_oc26bd2
.L169.l_oc26bd2:
	load4! &1 	#X1
	store8! &13 	#X12
	load4! &8 	#X8
	store8! &2 	#X1
	load4! &12 	#X12
	store8! &9 	#X8
	load8! &0 	#AR
	add! -1
	store8! &13 	#X12
	load4! &1 	#X1
	sigx4
	add! 5528
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	load8! &3 	#X2
	add
	store8! &1 	#AR
	load2! &12 	#X12
	load8! &1 	#AR
	store2
	#
	load4! &8 	#X8
	sigx4
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	load8! &3 	#X2
	add
	store8! &1 	#AR
	load8! &0 	#AR
	add! 11056
	load2
	#
	add! 2
	load8! &1 	#AR
	add! 11056
	store2
	#
	load8! &10 	#X10
	add! 11056
	load2
	#
	add! -1
	load8! &11 	#X10
	add! 11056
	store2
	#
	load8! &5 	#X5
	add! -2
	store8! &6 	#X5
	# CBRANCH
	push! 0
	add! -2147483648
	load4! &6 	#X5
	add! -2147483648
	lt_u
	not
	jump_zero! .L148.l_oc26bd2
	# END CBRANCH
	jump! .L209.l_oc26bd2
.L170.l_oc26bd2:
	load4! &1 	#X1
	store8! &13 	#X12
	load4! &8 	#X8
	store8! &2 	#X1
	load4! &12 	#X12
	store8! &9 	#X8
	load8! &0 	#AR
	add! -1
	store8! &13 	#X12
	load4! &1 	#X1
	sigx4
	add! 5528
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	load8! &3 	#X2
	add
	store8! &1 	#AR
	load2! &12 	#X12
	load8! &1 	#AR
	store2
	#
	load4! &8 	#X8
	sigx4
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	load8! &3 	#X2
	add
	store8! &1 	#AR
	load8! &0 	#AR
	add! 11056
	load2
	#
	add! 2
	load8! &1 	#AR
	add! 11056
	store2
	#
	load8! &10 	#X10
	add! 11056
	load2
	#
	add! -1
	load8! &11 	#X10
	add! 11056
	store2
	#
	load8! &5 	#X5
	add! -2
	store8! &6 	#X5
	# CBRANCH
	push! 0
	add! -2147483648
	load4! &6 	#X5
	add! -2147483648
	lt_u
	not
	jump_zero! .L148.l_oc26bd2
	# END CBRANCH
	jump! .L209.l_oc26bd2
.L116.l_oc26bd2:
	load4! &1 	#X1
	sigx4
	add! 2773
	shift_l! 2
	load8! &3 	#X2
	add
	store8! &1 	#AR
.L120.l_oc26bd2:
	# CBRANCH
	push! 1
	add! -2147483648
	load4! &2 	#X1
	add! -2147483648
	lt_u
	not
	jump_zero! .L118.l_oc26bd2
	# END CBRANCH
	# CBRANCH
	push! 1
	add! -2147483648
	load4! &16 	#X15
	add! -2147483648
	lt_u
	jump_zero! .L210.l_oc26bd2
	# END CBRANCH
	load8! &3 	#X3
	store8! &6 	#X5
	push! 0
	store8! &5 	#X4
	load8! &1 	#X1
	add! 1
	store8! &2 	#X1
	load4! &1 	#X1
	load8! &3 	#X2
	add! 13380
	store4
	#
	load4! &4 	#X4
	load8! &1 	#AR
	store4
	#
	push! 1
	load8! &6 	#X5
	store2
	#
	load4! &4 	#X4
	sigx4
	load8! &3 	#X2
	add
	add! 13388
	store8! &5 	#X4
	push! 0
	load8! &5 	#X4
	store1
	#
	load8! &2 	#X2
	add! 13992
	load8
	#
	add! -1
	load8! &3 	#X2
	add! 13992
	store8
	#
	load8! &0 	#AR
	add! 4
	store8! &1 	#AR
	jump! .L120.l_oc26bd2
.L210.l_oc26bd2:
	load8! &15 	#X15
	add! 1
	store8! &16 	#X15
	load4! &15 	#X15
	sigx4
	shift_l! 4
	load8! &4 	#X3
	add
	store8! &6 	#X5
	load4! &15 	#X15
	store8! &5 	#X4
	load8! &1 	#X1
	add! 1
	store8! &2 	#X1
	load4! &1 	#X1
	load8! &3 	#X2
	add! 13380
	store4
	#
	load4! &4 	#X4
	load8! &1 	#AR
	store4
	#
	push! 1
	load8! &6 	#X5
	store2
	#
	load4! &4 	#X4
	sigx4
	load8! &3 	#X2
	add
	add! 13388
	store8! &5 	#X4
	push! 0
	load8! &5 	#X4
	store1
	#
	load8! &2 	#X2
	add! 13992
	load8
	#
	add! -1
	load8! &3 	#X2
	add! 13992
	store8
	#
	load8! &0 	#AR
	add! 4
	store8! &1 	#AR
	jump! .L120.l_oc26bd2
.L161.l_oc26bd2:
	load4! &8 	#X8
	store8! &8 	#X7
	load4! &7 	#X7
	sigx4
	add! 2772
	shift_l! 2
	load8! &3 	#X2
	add
	store8! &1 	#AR
	load4! &9 	#X9
	load8! &1 	#AR
	store4
	#
	load8! &8 	#X8
	add! -1
	store8! &9 	#X8
	load8! &12 	#X12
	add! -4
	store8! &13 	#X12
	load8! &10 	#X10
	add! -2
	store8! &11 	#X10
	# CBRANCH EQ0
	load4! &8 	#X8
	jump_not_zero! .L127.l_oc26bd2
	# END CBRANCH
	jump! .L211.l_oc26bd2
.L207.l_oc26bd2:
	load4! &5 	#X5
	sigx4
	store8! &2 	#X1
	load8! &1 	#X1
	add! 2772
	shift_l! 2
	load8! &3 	#X2
	add
	store8! &1 	#AR
	push! 572
	load8! &6 	#X5
	sub
	and! 0xffffffff
	load8! &2 	#X1
	add
	shift_l! 2
	store8! &2 	#X1
	load8! &2 	#X2
	add! 11092
	load8! &2 	#X1
	add
	store8! &12 	#X11
	push! 0
	store8! &6 	#X5
	load8! &16
	store8! &14 	#X13
.L139.l_oc26bd2:
	load8! &0 	#AR
	load4
	#
	store8! &8 	#X7
	load4! &7 	#X7
	sigx4
	shift_l! 4
	load8! &7 	#X6
	add
	store8! &9 	#X8
	load8! &8 	#X8
	add! 8
	load2
	#
	and! 0x0ffff
	shift_l! 4
	load8! &7 	#X6
	add
	add! 8
	load2
	and! 0x0ffff
	add! 1
	store8! &2 	#X1
	# CBRANCH
	load4! &4 	#X4
	add! -2147483648
	load4! &2 	#X1
	add! -2147483648
	lt_u
	jump_zero! .L135.l_oc26bd2
	# END CBRANCH
	load8! &5 	#X5
	add! 1
	store8! &6 	#X5
	load4! &4 	#X4
	store8! &2 	#X1
.L135.l_oc26bd2:
	load2! &1 	#X1
	load8! &9 	#X8
	add! 8
	store2
	#
	# CBRANCH
	load4! &9 	#X9
	add! -2147483648
	load4! &8 	#X7
	add! -2147483648
	lt_u
	not
	jump_zero! .L136.l_oc26bd2
	# END CBRANCH
	load4! &1 	#X1
	sigx4
	store8! &11 	#X10
	load8! &10 	#X10
	load8! &11 	#X10
	add
	load8! &3 	#X2
	add
	store8! &11 	#X10
	load8! &10 	#X10
	add! 11056
	load2
	#
	add! 1
	load8! &11 	#X10
	add! 11056
	store2
	#
	# CBRANCH
	load4! &7 	#X7
	add! -2147483648
	load4! &13 	#X12
	add! -2147483648
	lt_u
	not
	jump_zero! .L138.l_oc26bd2
	# END CBRANCH
	load8! &12 	#X12
	load8! &8 	#X7
	sub
	neg
	sigx4
	shift_l! 2
	load8! &14 	#X13
	add
	load4
	load8! &2 	#X1
	add
	store8! &2 	#X1
.L138.l_oc26bd2:
	load8! &8 	#X8
	load2
	#
	store8! &9 	#X8
	load8! &2 	#X2
	add! 13992
	load8
	#
	store8! &8 	#X7
	load2! &8 	#X8
	store8! &9 	#X8
	load4! &1 	#X1
	load8! &9 	#X8
	mult
	load8! &8 	#X7
	add
	load8! &3 	#X2
	add! 13992
	store8
	#
.L136.l_oc26bd2:
	load8! &0 	#AR
	add! 4
	store8! &1 	#AR
	# CBRANCH
	load8! &0 	#AR
	load8! &12 	#X11
	xor
	push! 1
	lt_u
	jump_zero! .L139.l_oc26bd2
	# END CBRANCH
	jump! .L140.l_oc26bd2
.L171.l_oc26bd2:
	load4! &1 	#X1
	store8! &13 	#X12
	load4! &8 	#X8
	store8! &2 	#X1
	load4! &12 	#X12
	store8! &9 	#X8
	load8! &0 	#AR
	add! -1
	store8! &13 	#X12
	load4! &1 	#X1
	sigx4
	add! 5528
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	load8! &3 	#X2
	add
	store8! &1 	#AR
	load2! &12 	#X12
	load8! &1 	#AR
	store2
	#
	load4! &8 	#X8
	sigx4
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	load8! &3 	#X2
	add
	store8! &1 	#AR
	load8! &0 	#AR
	add! 11056
	load2
	#
	add! 2
	load8! &1 	#AR
	add! 11056
	store2
	#
	load8! &10 	#X10
	add! 11056
	load2
	#
	add! -1
	load8! &11 	#X10
	add! 11056
	store2
	#
	load8! &5 	#X5
	add! -2
	store8! &6 	#X5
	# CBRANCH
	push! 0
	add! -2147483648
	load4! &6 	#X5
	add! -2147483648
	lt_u
	not
	jump_zero! .L148.l_oc26bd2
	# END CBRANCH
	jump! .L209.l_oc26bd2
.L172.l_oc26bd2:
	load4! &1 	#X1
	store8! &13 	#X12
	load4! &8 	#X8
	store8! &2 	#X1
	load4! &12 	#X12
	store8! &9 	#X8
	load8! &0 	#AR
	add! -1
	store8! &13 	#X12
	load4! &1 	#X1
	sigx4
	add! 5528
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	load8! &3 	#X2
	add
	store8! &1 	#AR
	load2! &12 	#X12
	load8! &1 	#AR
	store2
	#
	load4! &8 	#X8
	sigx4
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	load8! &3 	#X2
	add
	store8! &1 	#AR
	load8! &0 	#AR
	add! 11056
	load2
	#
	add! 2
	load8! &1 	#AR
	add! 11056
	store2
	#
	load8! &10 	#X10
	add! 11056
	load2
	#
	add! -1
	load8! &11 	#X10
	add! 11056
	store2
	#
	load8! &5 	#X5
	add! -2
	store8! &6 	#X5
	# CBRANCH
	push! 0
	add! -2147483648
	load4! &6 	#X5
	add! -2147483648
	lt_u
	not
	jump_zero! .L148.l_oc26bd2
	# END CBRANCH
	jump! .L209.l_oc26bd2
.L173.l_oc26bd2:
	load4! &1 	#X1
	store8! &13 	#X12
	load4! &8 	#X8
	store8! &2 	#X1
	load4! &12 	#X12
	store8! &9 	#X8
	load8! &0 	#AR
	add! -1
	store8! &13 	#X12
	load4! &1 	#X1
	sigx4
	add! 5528
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	load8! &3 	#X2
	add
	store8! &1 	#AR
	load2! &12 	#X12
	load8! &1 	#AR
	store2
	#
	load4! &8 	#X8
	sigx4
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	load8! &3 	#X2
	add
	store8! &1 	#AR
	load8! &0 	#AR
	add! 11056
	load2
	#
	add! 2
	load8! &1 	#AR
	add! 11056
	store2
	#
	load8! &10 	#X10
	add! 11056
	load2
	#
	add! -1
	load8! &11 	#X10
	add! 11056
	store2
	#
	load8! &5 	#X5
	add! -2
	store8! &6 	#X5
	# CBRANCH
	push! 0
	add! -2147483648
	load4! &6 	#X5
	add! -2147483648
	lt_u
	not
	jump_zero! .L148.l_oc26bd2
	# END CBRANCH
	jump! .L209.l_oc26bd2
.L174.l_oc26bd2:
	load4! &1 	#X1
	store8! &9 	#X8
	load4! &12 	#X12
	store8! &2 	#X1
	load8! &0 	#AR
	add! -1
	store8! &13 	#X12
	load4! &1 	#X1
	sigx4
	add! 5528
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	load8! &3 	#X2
	add
	store8! &1 	#AR
	load2! &12 	#X12
	load8! &1 	#AR
	store2
	#
	load4! &8 	#X8
	sigx4
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	load8! &3 	#X2
	add
	store8! &1 	#AR
	load8! &0 	#AR
	add! 11056
	load2
	#
	add! 2
	load8! &1 	#AR
	add! 11056
	store2
	#
	load8! &10 	#X10
	add! 11056
	load2
	#
	add! -1
	load8! &11 	#X10
	add! 11056
	store2
	#
	load8! &5 	#X5
	add! -2
	store8! &6 	#X5
	# CBRANCH
	push! 0
	add! -2147483648
	load4! &6 	#X5
	add! -2147483648
	lt_u
	not
	jump_zero! .L148.l_oc26bd2
	# END CBRANCH
	jump! .L209.l_oc26bd2
.L175.l_oc26bd2:
	load4! &8 	#X8
	store8! &2 	#X1
	load4! &12 	#X12
	store8! &9 	#X8
	load8! &0 	#AR
	add! -1
	store8! &13 	#X12
	load4! &1 	#X1
	sigx4
	add! 5528
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	load8! &3 	#X2
	add
	store8! &1 	#AR
	load2! &12 	#X12
	load8! &1 	#AR
	store2
	#
	load4! &8 	#X8
	sigx4
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	load8! &3 	#X2
	add
	store8! &1 	#AR
	load8! &0 	#AR
	add! 11056
	load2
	#
	add! 2
	load8! &1 	#AR
	add! 11056
	store2
	#
	load8! &10 	#X10
	add! 11056
	load2
	#
	add! -1
	load8! &11 	#X10
	add! 11056
	store2
	#
	load8! &5 	#X5
	add! -2
	store8! &6 	#X5
	# CBRANCH
	push! 0
	add! -2147483648
	load4! &6 	#X5
	add! -2147483648
	lt_u
	not
	jump_zero! .L148.l_oc26bd2
	# END CBRANCH
	jump! .L209.l_oc26bd2
.L158.l_oc26bd2:
	push! 0
	store8! &2 	#X1
	push! -1
	store8! &16 	#X15
	jump! .L112.l_oc26bd2
.L111.l_oc26bd2:

	# epilogue
	set_sp! &23
	return

# FUNCTION ENDS:build_tree

	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push

# FUNCTION BEGINS:_tr_init
	EXPORT	_tr_init
_tr_init:
	# prologue (3 GPRs)
	push! 0
	push! 0
	push! 0

	load8! &4
	store8! &3 	#X2
	load8! &2 	#X2
	add! 216
	load8! &3 	#X2
	add! 10984
	store8
	#
	push! static_l_desc.s_oc26bd2
	load8! &3 	#X2
	add! 11000
	store8
	#
	load8! &2 	#X2
	add! 9384
	load8! &3 	#X2
	add! 11008
	store8
	#
	push! static_d_desc.s_oc26bd2
	load8! &3 	#X2
	add! 11024
	store8
	#
	load8! &2 	#X2
	add! 10360
	load8! &3 	#X2
	add! 11032
	store8
	#
	push! static_bl_desc.s_oc26bd2
	load8! &3 	#X2
	add! 11048
	store8
	#
	push! 0
	load8! &3 	#X2
	add! 14016
	store2
	#
	push! 0
	load8! &3 	#X2
	add! 14020
	store4
	#
	load8! &2 	#X2
	add! 216
	store8! &1 	#AR
	load8! &2 	#X2
	add! 4792
	store8! &2 	#X1
.L213.l_oc26bd2:
	push! 0
	load8! &1 	#AR
	store2
	#
	load8! &0 	#AR
	add! 16
	store8! &1 	#AR
	# CBRANCH
	load8! &0 	#AR
	load8! &2 	#X1
	xor
	push! 1
	lt_u
	jump_zero! .L213.l_oc26bd2
	# END CBRANCH
	load8! &2 	#X2
	add! 9384
	store8! &1 	#AR
	load8! &2 	#X2
	add! 9864
	store8! &2 	#X1
.L214.l_oc26bd2:
	push! 0
	load8! &1 	#AR
	store2
	#
	load8! &0 	#AR
	add! 16
	store8! &1 	#AR
	# CBRANCH
	load8! &0 	#AR
	load8! &2 	#X1
	xor
	push! 1
	lt_u
	jump_zero! .L214.l_oc26bd2
	# END CBRANCH
	load8! &2 	#X2
	add! 10360
	store8! &1 	#AR
	load8! &2 	#X2
	add! 10664
	store8! &2 	#X1
.L215.l_oc26bd2:
	push! 0
	load8! &1 	#AR
	store2
	#
	load8! &0 	#AR
	add! 16
	store8! &1 	#AR
	# CBRANCH
	load8! &1 	#X1
	load8! &1 	#AR
	xor
	push! 1
	lt_u
	jump_zero! .L215.l_oc26bd2
	# END CBRANCH
	push! 1
	load8! &3 	#X2
	add! 4312
	store2
	#
	push! 0
	load8! &3 	#X2
	add! 14000
	store8
	#
	push! 0
	load8! &3 	#X2
	add! 13992
	store8
	#
	push! 0
	load8! &3 	#X2
	add! 14008
	store4
	#
	push! 0
	load8! &3 	#X2
	add! 13980
	store4
	#

	# epilogue
	set_sp! &3
	return

# FUNCTION ENDS:_tr_init

	#peephole move
	#peephole move
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole pop+push+commut(di)
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move+push(pushable)
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole push+add+pop+push+ind pop
	#peephole push+add+pop+push+ind pop
	#peephole push+add+pop+push+ind pop
	#peephole push+add+pop+push+ind pop
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole and+popqi
	#peephole popdi(deadreg)+push

# FUNCTION BEGINS:_tr_stored_block
	EXPORT	_tr_stored_block
_tr_stored_block:
	# prologue (8 GPRs)

	set_sp! &-8

	load8! &9
	store8! &3 	#X2
	load8! &11
	store8! &4 	#X3
	load8! &2 	#X2
	add! 14020
	load4
	#
	store8! &6 	#X5
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &2 	#X1
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &1 	#AR
	load8! &0 	#AR
	add! 1
	store8! &5 	#X4
	load8! &1 	#X1
	load8! &1 	#AR
	add
	store8! &2 	#X1
	load8! &2 	#X2
	add! 14016
	load2
	#
	store8! &1 	#AR
	load4! &12
	and! 0xffff
	store8! &7 	#X6
	load4! &5 	#X5
	sigx4
	store8! &8 	#X7
	load8! &6 	#X6
	load8! &8 	#X7
	shift_l
	load8! &1 	#AR
	or
	store8! &1 	#AR
	# CBRANCH
	push! 13
	add! -2147483648
	load4! &6 	#X5
	add! -2147483648
	lt_u
	jump_zero! .L222.l_oc26bd2
	# END CBRANCH
	load2! &0 	#AR
	load8! &3 	#X2
	add! 14016
	store2
	#
	load8! &4 	#X4
	load8! &3 	#X2
	add! 40
	store8
	#
	load1! &0 	#AR
	load8! &2 	#X1
	store1
	#
	load8! &2 	#X2
	add! 14016
	load2
	#
	and! 0x0ffff
	shift_ru! 8
	store8! &2 	#X1
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &5 	#X4
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &1 	#AR
	load8! &0 	#AR
	add! 1
	load8! &3 	#X2
	add! 40
	store8
	#
	load1! &1 	#X1
	load8! &5 	#X4
	load8! &2 	#AR
	add
	store1
	load8! &2 	#X2
	add! 14020
	load4
	#
	store8! &2 	#X1
	load8! &1 	#X1
	sub! 16
	neg
	store8! &1 	#AR
	load4! &6 	#X6
	sigx4
	store8! &5 	#X4
	load4! &0 	#AR
	sigx4
	store8! &1 	#AR
	load8! &4 	#X4
	load8! &1 	#AR
	shift_rs
	store8! &1 	#AR
	load2! &0 	#AR
	load8! &3 	#X2
	add! 14016
	store2
	#
	load8! &1 	#X1
	add! -13
	store8! &6 	#X5
	load4! &5 	#X5
	load8! &3 	#X2
	add! 14020
	store4
	#
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &7 	#X6
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &2 	#X1
	load8! &1 	#X1
	add! 1
	store8! &5 	#X4
	load8! &6 	#X6
	load8! &2 	#X1
	add
	store8! &2 	#X1
.L223.l_oc26bd2:
	# CBRANCH
	push! 8
	add! -2147483648
	load4! &6 	#X5
	add! -2147483648
	lt_u
	jump_zero! .L224.l_oc26bd2
	# END CBRANCH
	load8! &4 	#X4
	load8! &3 	#X2
	add! 40
	store8
	#
	load1! &0 	#AR
	load8! &2 	#X1
	store1
	#
	load8! &2 	#X2
	add! 14016
	load2
	#
	and! 0x0ffff
	shift_ru! 8
	store8! &2 	#X1
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &5 	#X4
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &1 	#AR
	load8! &0 	#AR
	add! 1
	load8! &3 	#X2
	add! 40
	store8
	#
	load1! &1 	#X1
	load8! &5 	#X4
	load8! &2 	#AR
	add
	store1
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &2 	#X1
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &1 	#AR
	load8! &0 	#AR
	add! 1
	store8! &5 	#X4
	load8! &1 	#X1
	load8! &1 	#AR
	add
	store8! &2 	#X1
.L225.l_oc26bd2:
	push! 0
	load8! &3 	#X2
	add! 14016
	store2
	#
	push! 0
	load8! &3 	#X2
	add! 14020
	store4
	#
	load8! &4 	#X4
	load8! &3 	#X2
	add! 40
	store8
	#
	load1! &3 	#X3
	store8! &5 	#X4
	load1! &3 	#X3
	load8! &2 	#X1
	store1
	#
	load2! &3 	#X3
	store8! &1 	#AR
	load2! &0 	#AR
	shift_ru! 8
	store8! &6 	#X5
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &7 	#X6
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &2 	#X1
	load8! &1 	#X1
	add! 1
	load8! &3 	#X2
	add! 40
	store8
	#
	load1! &5 	#X5
	load8! &7 	#X6
	load8! &3 	#X1
	add
	store1
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &6 	#X5
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &2 	#X1
	load8! &1 	#X1
	add! 1
	load8! &3 	#X2
	add! 40
	store8
	#
	load8! &5 	#X5
	load8! &2 	#X1
	add
	store8! &2 	#X1
	load8! &4 	#X4
	not
	load8! &2 	#X1
	store1
	#
	load8! &0 	#AR
	not
	and! 0xffff
	shift_ru! 8
	store8! &2 	#X1
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &5 	#X4
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &1 	#AR
	load8! &0 	#AR
	add! 1
	load8! &3 	#X2
	add! 40
	store8
	#
	load1! &1 	#X1
	load8! &5 	#X4
	load8! &2 	#AR
	add
	store1
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &2 	#X1
	load8! &2 	#X2
	add! 40
	load8
	#
	load8! &2 	#X1
	add
	store8! &1 	#AR
	load8! &3 	#X3
	load8! &11
	load8! &2 	#AR
	call! memcpy
	store8! &3

	set_sp! &2
	load8! &2 	#X2
	add! 40
	load8
	#
	load8! &4 	#X3
	add
	load8! &3 	#X2
	add! 40
	store8
	#
	jump! .L228.l_oc26bd2
.L224.l_oc26bd2:
	# CBRANCH
	push! 0
	add! -2147483648
	load4! &6 	#X5
	add! -2147483648
	lt_u
	jump_zero! .L225.l_oc26bd2
	# END CBRANCH
	load8! &4 	#X4
	load8! &3 	#X2
	add! 40
	store8
	#
	load1! &0 	#AR
	load8! &2 	#X1
	store1
	#
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &2 	#X1
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &1 	#AR
	load8! &0 	#AR
	add! 1
	store8! &5 	#X4
	load8! &1 	#X1
	load8! &1 	#AR
	add
	store8! &2 	#X1
	push! 0
	load8! &3 	#X2
	add! 14016
	store2
	#
	push! 0
	load8! &3 	#X2
	add! 14020
	store4
	#
	load8! &4 	#X4
	load8! &3 	#X2
	add! 40
	store8
	#
	load1! &3 	#X3
	store8! &5 	#X4
	load1! &3 	#X3
	load8! &2 	#X1
	store1
	#
	load2! &3 	#X3
	store8! &1 	#AR
	load2! &0 	#AR
	shift_ru! 8
	store8! &6 	#X5
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &7 	#X6
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &2 	#X1
	load8! &1 	#X1
	add! 1
	load8! &3 	#X2
	add! 40
	store8
	#
	load1! &5 	#X5
	load8! &7 	#X6
	load8! &3 	#X1
	add
	store1
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &6 	#X5
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &2 	#X1
	load8! &1 	#X1
	add! 1
	load8! &3 	#X2
	add! 40
	store8
	#
	load8! &5 	#X5
	load8! &2 	#X1
	add
	store8! &2 	#X1
	load8! &4 	#X4
	not
	load8! &2 	#X1
	store1
	#
	load8! &0 	#AR
	not
	and! 0xffff
	shift_ru! 8
	store8! &2 	#X1
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &5 	#X4
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &1 	#AR
	load8! &0 	#AR
	add! 1
	load8! &3 	#X2
	add! 40
	store8
	#
	load1! &1 	#X1
	load8! &5 	#X4
	load8! &2 	#AR
	add
	store1
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &2 	#X1
	load8! &2 	#X2
	add! 40
	load8
	#
	load8! &2 	#X1
	add
	store8! &1 	#AR
	load8! &3 	#X3
	load8! &11
	load8! &2 	#AR
	call! memcpy
	store8! &3

	set_sp! &2
	load8! &2 	#X2
	add! 40
	load8
	#
	load8! &4 	#X3
	add
	load8! &3 	#X2
	add! 40
	store8
	#
	jump! .L228.l_oc26bd2
.L222.l_oc26bd2:
	load2! &0 	#AR
	load8! &3 	#X2
	add! 14016
	store2
	#
	load8! &5 	#X5
	add! 3
	store8! &6 	#X5
	load4! &5 	#X5
	load8! &3 	#X2
	add! 14020
	store4
	#
	jump! .L223.l_oc26bd2
.L228.l_oc26bd2:

	# epilogue
	set_sp! &8
	return

# FUNCTION ENDS:_tr_stored_block

	#peephole pop(deadreg)+push
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole push+add+pop+push+ind pop
	#peephole push+add+pop+push+ind pop
	#peephole push+add+pop+push+ind pop
	#peephole popdi(deadreg)+push
	#peephole and+pophi
	#peephole popdi(deadreg)+push
	#peephole and+popsi

# FUNCTION BEGINS:_tr_flush_bits
	EXPORT	_tr_flush_bits
_tr_flush_bits:
	# prologue (5 GPRs)

	set_sp! &-5

	load8! &6
	store8! &1 	#AR
	load8! &0 	#AR
	add! 14020
	load4
	#
	store8! &2 	#X1
	# CBRANCH EQ
	load4! &1 	#X1
	push! 16
	xor
	jump_zero! .L234.l_oc26bd2
	# END CBRANCH
	# CBRANCH
	push! 7
	add! -2147483648
	load4! &2 	#X1
	add! -2147483648
	lt_u
	jump_zero! .L229.l_oc26bd2
	# END CBRANCH
	load8! &0 	#AR
	add! 14016
	load2
	#
	store8! &3 	#X2
	load8! &0 	#AR
	add! 16
	load8
	#
	store8! &4 	#X3
	load8! &0 	#AR
	add! 40
	load8
	#
	store8! &2 	#X1
	load8! &1 	#X1
	add! 1
	load8! &1 	#AR
	add! 40
	store8
	#
	load1! &2 	#X2
	load8! &4 	#X3
	load8! &3 	#X1
	add
	store1
	load8! &0 	#AR
	add! 14016
	load2
	#
	and! 0x0ffff
	shift_ru! 8
	load8! &1 	#AR
	add! 14016
	store2
	#
	load8! &0 	#AR
	add! 14020
	load4
	#
	add! -8
	load8! &1 	#AR
	add! 14020
	store4
	#
.L229.l_oc26bd2:
	jump! .L235.l_oc26bd2
.L234.l_oc26bd2:
	load8! &0 	#AR
	add! 14016
	load2
	#
	store8! &3 	#X2
	load8! &0 	#AR
	add! 16
	load8
	#
	store8! &4 	#X3
	load8! &0 	#AR
	add! 40
	load8
	#
	store8! &2 	#X1
	load8! &1 	#X1
	add! 1
	load8! &1 	#AR
	add! 40
	store8
	#
	load1! &2 	#X2
	load8! &4 	#X3
	load8! &3 	#X1
	add
	store1
	load8! &0 	#AR
	add! 14016
	load2
	#
	and! 0x0ffff
	shift_ru! 8
	store8! &3 	#X2
	load8! &0 	#AR
	add! 16
	load8
	#
	store8! &4 	#X3
	load8! &0 	#AR
	add! 40
	load8
	#
	store8! &2 	#X1
	load8! &1 	#X1
	add! 1
	load8! &1 	#AR
	add! 40
	store8
	#
	load1! &2 	#X2
	load8! &4 	#X3
	load8! &3 	#X1
	add
	store1
	push! 0
	load8! &1 	#AR
	add! 14016
	store2
	#
	push! 0
	load8! &1 	#AR
	add! 14020
	store4
	#
.L235.l_oc26bd2:

	# epilogue
	set_sp! &5
	return

# FUNCTION ENDS:_tr_flush_bits

	#peephole pop(deadreg)+push
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+push(deadreg)+sign_extend
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole push+add+pop+push+ind pop
	#peephole push+add+pop+push+ind pop
	#peephole push+add+pop+push+ind pop
	#peephole push+add+pop+push+ind pop
	#peephole push+add+pop+push+ind pop
	#peephole push+add+pop+push+ind pop
	#peephole push+add+pop+push+ind pop
	#peephole pop+block+push+block
	#peephole pop+block+push+commut(di)
	#peephole popdi(deadreg)+push
	#peephole and+pophi
	#peephole popdi(deadreg)+push
	#peephole and+popsi

# FUNCTION BEGINS:_tr_align
	EXPORT	_tr_align
_tr_align:
	# prologue (5 GPRs)

	set_sp! &-5

	load8! &6
	store8! &1 	#AR
	load8! &0 	#AR
	add! 14020
	load4
	#
	store8! &3 	#X2
	load8! &0 	#AR
	add! 14016
	load2
	#
	store8! &4 	#X3
	load4! &2 	#X2
	sigx4
	store8! &2 	#X1
	push! 2
	load8! &2 	#X1
	shift_l
	load8! &4 	#X3
	or
	store8! &2 	#X1
	# CBRANCH
	push! 13
	add! -2147483648
	load4! &3 	#X2
	add! -2147483648
	lt_u
	jump_zero! .L237.l_oc26bd2
	# END CBRANCH
	load2! &1 	#X1
	load8! &1 	#AR
	add! 14016
	store2
	#
	load8! &0 	#AR
	add! 16
	load8
	#
	store8! &4 	#X3
	load8! &0 	#AR
	add! 40
	load8
	#
	store8! &3 	#X2
	load8! &2 	#X2
	add! 1
	load8! &1 	#AR
	add! 40
	store8
	#
	load1! &1 	#X1
	load8! &4 	#X3
	load8! &4 	#X2
	add
	store1
	load8! &0 	#AR
	add! 14016
	load2
	#
	and! 0x0ffff
	shift_ru! 8
	store8! &3 	#X2
	load8! &0 	#AR
	add! 16
	load8
	#
	store8! &4 	#X3
	load8! &0 	#AR
	add! 40
	load8
	#
	store8! &2 	#X1
	load8! &1 	#X1
	add! 1
	load8! &1 	#AR
	add! 40
	store8
	#
	load1! &2 	#X2
	load8! &4 	#X3
	load8! &3 	#X1
	add
	store1
	load8! &0 	#AR
	add! 14020
	load4
	#
	store8! &3 	#X2
	load8! &2 	#X2
	sub! 16
	neg
	sigx4
	store8! &2 	#X1
	push! 2
	load8! &2 	#X1
	shift_rs
	store8! &2 	#X1
	load2! &1 	#X1
	load8! &1 	#AR
	add! 14016
	store2
	#
	load8! &2 	#X2
	add! -13
	store8! &3 	#X2
	load4! &2 	#X2
	load8! &1 	#AR
	add! 14020
	store4
	#
	# CBRANCH
	push! 9
	add! -2147483648
	load4! &3 	#X2
	add! -2147483648
	lt_u
	jump_zero! .L239.l_oc26bd2
	# END CBRANCH
.L247.l_oc26bd2:
	load8! &0 	#AR
	add! 16
	load8
	#
	store8! &4 	#X3
	load8! &0 	#AR
	add! 40
	load8
	#
	store8! &3 	#X2
	load8! &2 	#X2
	add! 1
	load8! &1 	#AR
	add! 40
	store8
	#
	load1! &1 	#X1
	load8! &4 	#X3
	load8! &4 	#X2
	add
	store1
	load8! &0 	#AR
	add! 14016
	load2
	#
	and! 0x0ffff
	shift_ru! 8
	store8! &3 	#X2
	load8! &0 	#AR
	add! 16
	load8
	#
	store8! &4 	#X3
	load8! &0 	#AR
	add! 40
	load8
	#
	store8! &2 	#X1
	load8! &1 	#X1
	add! 1
	load8! &1 	#AR
	add! 40
	store8
	#
	load1! &2 	#X2
	load8! &4 	#X3
	load8! &3 	#X1
	add
	store1
	load8! &0 	#AR
	add! 14020
	load4
	#
	store8! &2 	#X1
	push! 0
	load8! &1 	#AR
	add! 14016
	store2
	#
	load8! &1 	#X1
	add! -9
	store8! &3 	#X2
	load4! &2 	#X2
	load8! &1 	#AR
	add! 14020
	store4
	#
	push! 0
	store8! &2 	#X1
	# CBRANCH EQ
	load4! &2 	#X2
	push! 16
	xor
	jump_zero! .L245.l_oc26bd2
	# END CBRANCH
.L241.l_oc26bd2:
	# CBRANCH
	push! 7
	add! -2147483648
	load4! &3 	#X2
	add! -2147483648
	lt_u
	jump_zero! .L236.l_oc26bd2
	# END CBRANCH
	load8! &0 	#AR
	add! 16
	load8
	#
	store8! &4 	#X3
	load8! &0 	#AR
	add! 40
	load8
	#
	store8! &3 	#X2
	load8! &2 	#X2
	add! 1
	load8! &1 	#AR
	add! 40
	store8
	#
	load1! &1 	#X1
	load8! &4 	#X3
	load8! &4 	#X2
	add
	store1
	load8! &0 	#AR
	add! 14016
	load2
	#
	and! 0x0ffff
	shift_ru! 8
	load8! &1 	#AR
	add! 14016
	store2
	#
	load8! &0 	#AR
	add! 14020
	load4
	#
	add! -8
	load8! &1 	#AR
	add! 14020
	store4
	#
.L236.l_oc26bd2:
	jump! .L246.l_oc26bd2
.L237.l_oc26bd2:
	load2! &1 	#X1
	load8! &1 	#AR
	add! 14016
	store2
	#
	load8! &2 	#X2
	add! 3
	store8! &3 	#X2
	load4! &2 	#X2
	load8! &1 	#AR
	add! 14020
	store4
	#
	# CBRANCH
	push! 9
	add! -2147483648
	load4! &3 	#X2
	add! -2147483648
	lt_u
	not
	jump_zero! .L247.l_oc26bd2
	# END CBRANCH
.L239.l_oc26bd2:
	load8! &2 	#X2
	add! 7
	store8! &3 	#X2
	load4! &2 	#X2
	load8! &1 	#AR
	add! 14020
	store4
	#
	# CBRANCH
	load4! &2 	#X2
	push! 16
	xor
	push! 1
	lt_u
	jump_zero! .L241.l_oc26bd2
	# END CBRANCH
.L245.l_oc26bd2:
	load8! &0 	#AR
	add! 16
	load8
	#
	store8! &4 	#X3
	load8! &0 	#AR
	add! 40
	load8
	#
	store8! &3 	#X2
	load8! &2 	#X2
	add! 1
	load8! &1 	#AR
	add! 40
	store8
	#
	load1! &1 	#X1
	load8! &4 	#X3
	load8! &4 	#X2
	add
	store1
	load8! &0 	#AR
	add! 14016
	load2
	#
	and! 0x0ffff
	shift_ru! 8
	store8! &3 	#X2
	load8! &0 	#AR
	add! 16
	load8
	#
	store8! &4 	#X3
	load8! &0 	#AR
	add! 40
	load8
	#
	store8! &2 	#X1
	load8! &1 	#X1
	add! 1
	load8! &1 	#AR
	add! 40
	store8
	#
	load1! &2 	#X2
	load8! &4 	#X3
	load8! &3 	#X1
	add
	store1
	push! 0
	load8! &1 	#AR
	add! 14016
	store2
	#
	push! 0
	load8! &1 	#AR
	add! 14020
	store4
	#
.L246.l_oc26bd2:

	# epilogue
	set_sp! &5
	return

# FUNCTION ENDS:_tr_align

	#peephole pop(deadreg)+push
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole unary1+binop2+deadreg+binop3
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole pop+push+commut(di)
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole pop+push(deadreg)+shiftl
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole move
	#peephole move+push+sub
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole pop+push(deadreg)+shiftl
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole 1
	#peephole move
	#peephole move+push(pushable)
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole pop+push(deadreg)+shiftl
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole move
	#peephole move+push+sub
	#peephole move_dead
	#peephole 1
	#peephole move
	#peephole move+push(pushable)
	#peephole 1
	#peephole 1
	#peephole move+push(pushable)
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole pop+push(deadreg)+shiftl
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole move+push(pushable)
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole 1
	#peephole move
	#peephole move+push(pushable)
	#peephole 1
	#peephole move_dead
	#peephole move+push(pushable)
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole pop+push(deadreg)+shiftl
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move+push(pushable)
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole move
	#peephole move+push+sub
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole push+pop+deadreg+binop
	#peephole binop1+deadreg+binop2
	#peephole binop1+2
	#peephole push+pop+deadreg+binop
	#peephole binop1+deadreg+binop2
	#peephole unary+deadreg+binop
	#peephole unary1+binop2+deadreg+binop3
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole pop+pusharg
	#peephole pop+pusharg
	#peephole pop+pusharg
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+push(deadreg)+sign_extend
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole push+add+pop+push+ind pop
	#peephole push+add+pop+push+ind pop
	#peephole push+add+pop+push+ind pop
	#peephole push+add+pop+push+ind pop
	#peephole push+add+pop+push+ind pop
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole redundant blockage insn
	#peephole pop+block+push+commut(di)
	#peephole pop+block+push+commut(di)
	#peephole push+add+pop+push+ind pop
	#peephole push+add+pop+push+ind pop
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+commut(di)
	#peephole push+add+pop+push+ind pop
	#peephole push+add+pop+push+ind pop
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole redundant blockage insn
	#peephole pop+block+push+commut(di)
	#peephole pop+block+push+commut(di)
	#peephole push+add+pop+push+ind pop
	#peephole push+add+pop+push+ind pop
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+commut(di)
	#peephole push+add+pop+push+ind pop
	#peephole push+add+pop+push+ind pop
	#peephole redundant blockage insn
	#peephole pop+block+push+commut(di)
	#peephole pop+block+push+commut(di)
	#peephole push+add+pop+push+ind pop
	#peephole push+add+pop+push+ind pop
	#peephole pop+block+push+block
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole and+pophi
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole and+pophi
	#peephole popdi(deadreg)+push
	#peephole and+popsi

# FUNCTION BEGINS:_tr_flush_block
	EXPORT	_tr_flush_block
_tr_flush_block:
	# prologue (10 GPRs)

	set_sp! &-10

	load8! &11
	store8! &3 	#X2
	load8! &2 	#X2
	add! 196
	load4
	#
	store8! &1 	#AR
	# CBRANCH
	push! 0
	add! -2147483648
	load4! &1 	#AR
	add! -2147483648
	lt_u
	jump_zero! .L249.l_oc26bd2
	# END CBRANCH
	load8! &2 	#X2
	load8
	#
	store8! &6 	#X5
	load8! &5 	#X5
	add! 88
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ
	push! 2
	xor
	jump_zero! .L323.l_oc26bd2
	# END CBRANCH
.L250.l_oc26bd2:
	load8! &2 	#X2
	add! 10984
	#peep - pop(deadreg)+pusharg
	load8! &3 	#X2
	call! build_tree.s_oc26bd2
	set_sp! (+ &0 16)
	

	load8! &2 	#X2
	add! 11008
	#peep - pop(deadreg)+pusharg
	load8! &3 	#X2
	call! build_tree.s_oc26bd2
	set_sp! (+ &0 16)
	

	load8! &2 	#X2
	add! 10992
	load4
	#
	store8! &2 	#X1
	load8! &2 	#X2
	add! 216
	store8! &1 	#AR
	load4! &1 	#X1
	load8! &1 	#AR
	load8! &4 	#X2
	call! scan_tree.s_oc26bd2
	set_sp! (+ &0 24)
	

	load8! &2 	#X2
	add! 11016
	load4
	#
	store8! &2 	#X1
	load8! &2 	#X2
	add! 9384
	store8! &1 	#AR
	load4! &1 	#X1
	load8! &1 	#AR
	load8! &4 	#X2
	call! scan_tree.s_oc26bd2
	set_sp! (+ &0 24)
	

	load8! &2 	#X2
	add! 11032
	#peep - pop(deadreg)+pusharg
	load8! &3 	#X2
	call! build_tree.s_oc26bd2
	set_sp! (+ &0 16)
	

	load8! &2 	#X2
	add! 10608
	load2
	#
	# CBRANCH - peep (modesize=2)
	and! 65535
	# - EQ0
	jump_not_zero! .L288.l_oc26bd2
	# END CBRANCH
	load8! &2 	#X2
	add! 10384
	load2
	#
	# CBRANCH - peep (modesize=2)
	and! 65535
	# - EQ0
	jump_not_zero! .L289.l_oc26bd2
	# END CBRANCH
	load8! &2 	#X2
	add! 10592
	load2
	#
	# CBRANCH - peep (modesize=2)
	and! 65535
	# - EQ0
	jump_not_zero! .L290.l_oc26bd2
	# END CBRANCH
	load8! &2 	#X2
	add! 10400
	load2
	#
	# CBRANCH - peep (modesize=2)
	and! 65535
	# - EQ0
	jump_not_zero! .L291.l_oc26bd2
	# END CBRANCH
	load8! &2 	#X2
	add! 10576
	load2
	#
	# CBRANCH - peep (modesize=2)
	and! 65535
	# - EQ0
	jump_not_zero! .L292.l_oc26bd2
	# END CBRANCH
	load8! &2 	#X2
	add! 10416
	load2
	#
	# CBRANCH - peep (modesize=2)
	and! 65535
	# - EQ0
	jump_not_zero! .L293.l_oc26bd2
	# END CBRANCH
	load8! &2 	#X2
	add! 10560
	load2
	#
	# CBRANCH - peep (modesize=2)
	and! 65535
	# - EQ0
	jump_not_zero! .L294.l_oc26bd2
	# END CBRANCH
	load8! &2 	#X2
	add! 10432
	load2
	#
	# CBRANCH - peep (modesize=2)
	and! 65535
	# - EQ0
	jump_not_zero! .L295.l_oc26bd2
	# END CBRANCH
	load8! &2 	#X2
	add! 10544
	load2
	#
	# CBRANCH - peep (modesize=2)
	and! 65535
	# - EQ0
	jump_not_zero! .L296.l_oc26bd2
	# END CBRANCH
	load8! &2 	#X2
	add! 10448
	load2
	#
	# CBRANCH - peep (modesize=2)
	and! 65535
	# - EQ0
	jump_not_zero! .L297.l_oc26bd2
	# END CBRANCH
	load8! &2 	#X2
	add! 10528
	load2
	#
	# CBRANCH - peep (modesize=2)
	and! 65535
	# - EQ0
	jump_not_zero! .L298.l_oc26bd2
	# END CBRANCH
	load8! &2 	#X2
	add! 10464
	load2
	#
	# CBRANCH - peep (modesize=2)
	and! 65535
	# - EQ0
	jump_not_zero! .L299.l_oc26bd2
	# END CBRANCH
	load8! &2 	#X2
	add! 10512
	load2
	#
	# CBRANCH - peep (modesize=2)
	and! 65535
	# - EQ0
	jump_not_zero! .L300.l_oc26bd2
	# END CBRANCH
	load8! &2 	#X2
	add! 10480
	load2
	#
	# CBRANCH - peep (modesize=2)
	and! 65535
	# - EQ0
	jump_not_zero! .L301.l_oc26bd2
	# END CBRANCH
	load8! &2 	#X2
	add! 10496
	load2
	#
	# CBRANCH - peep (modesize=2)
	and! 65535
	# - EQ0
	jump_not_zero! .L302.l_oc26bd2
	# END CBRANCH
	load8! &2 	#X2
	add! 10368
	load2
	#
	# CBRANCH - peep (modesize=2)
	and! 65535
	# - EQ0
	jump_not_zero! .L324.l_oc26bd2
	# END CBRANCH
	push! 9
	store8! &4 	#X3
	push! 2
	store8! &2 	#X1
.L256.l_oc26bd2:
	load8! &2 	#X2
	add! 13992
	load8
	#
	add! 14
	load8! &4 	#X3
	add
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &3 	#X2
	add! 13992
	store8
	#
	load8! &0 	#AR
	add! 10
	shift_ru! 3
	store8! &1 	#AR
	load8! &2 	#X2
	add! 14000
	load8
	#
	add! 10
	shift_ru! 3
	store8! &5 	#X4
	# CBRANCH
	load8! &4 	#X4
	load8! &1 	#AR
	lt_u
	jump_zero! .L258.l_oc26bd2
	# END CBRANCH
	load8! &4 	#X4
	store8! &1 	#AR
.L258.l_oc26bd2:
	load8! &13
	add! 4
	store8! &4 	#X3
	# CBRANCH
	load8! &0 	#AR
	load8! &4 	#X3
	lt_u
	not
	jump_zero! .L259.l_oc26bd2
	# END CBRANCH
	# CBRANCH EQ0
	load8! &12
	jump_zero! .L259.l_oc26bd2
	# END CBRANCH
	load4! &14
	load8! &14
	load8! &14
	load8! &5 	#X2
	call! _tr_stored_block
	set_sp! (+ &0 32)
	

	load8! &2 	#X2
	add! 216
	store8! &1 	#AR
	load8! &2 	#X2
	add! 4792
	store8! &2 	#X1
.L277.l_oc26bd2:
	push! 0
	load8! &1 	#AR
	store2
	#
	load8! &0 	#AR
	add! 16
	store8! &1 	#AR
	# CBRANCH
	load8! &0 	#AR
	load8! &2 	#X1
	xor
	push! 1
	lt_u
	jump_zero! .L277.l_oc26bd2
	# END CBRANCH
	load8! &2 	#X2
	add! 9384
	store8! &1 	#AR
	load8! &2 	#X2
	add! 9864
	store8! &2 	#X1
.L278.l_oc26bd2:
	push! 0
	load8! &1 	#AR
	store2
	#
	load8! &0 	#AR
	add! 16
	store8! &1 	#AR
	# CBRANCH
	load8! &1 	#X1
	load8! &1 	#AR
	xor
	push! 1
	lt_u
	jump_zero! .L278.l_oc26bd2
	# END CBRANCH
	load8! &2 	#X2
	add! 10360
	store8! &1 	#AR
	load8! &2 	#X2
	add! 10664
	store8! &2 	#X1
.L279.l_oc26bd2:
	push! 0
	load8! &1 	#AR
	store2
	#
	load8! &0 	#AR
	add! 16
	store8! &1 	#AR
	# CBRANCH
	load8! &1 	#X1
	load8! &1 	#AR
	xor
	push! 1
	lt_u
	jump_zero! .L279.l_oc26bd2
	# END CBRANCH
	push! 1
	load8! &3 	#X2
	add! 4312
	store2
	#
	push! 0
	load8! &3 	#X2
	add! 14000
	store8
	#
	push! 0
	load8! &3 	#X2
	add! 13992
	store8
	#
	push! 0
	load8! &3 	#X2
	add! 14008
	store4
	#
	push! 0
	load8! &3 	#X2
	add! 13980
	store4
	#
	# CBRANCH EQ0
	load4! &14
	jump_not_zero! .L325.l_oc26bd2
	# END CBRANCH
	jump! .L326.l_oc26bd2
.L325.l_oc26bd2:
	load8! &2 	#X2
	add! 14020
	load4
	#
	store8! &1 	#AR
	# CBRANCH
	push! 8
	add! -2147483648
	load4! &1 	#AR
	add! -2147483648
	lt_u
	not
	jump_zero! .L327.l_oc26bd2
	# END CBRANCH
	# CBRANCH
	push! 0
	add! -2147483648
	load4! &1 	#AR
	add! -2147483648
	lt_u
	jump_zero! .L282.l_oc26bd2
	# END CBRANCH
	load8! &2 	#X2
	add! 14016
	load2
	#
	store8! &2 	#X1
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &4 	#X3
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &1 	#AR
	load8! &0 	#AR
	add! 1
	load8! &3 	#X2
	add! 40
	store8
	#
	load1! &1 	#X1
	load8! &4 	#X3
	load8! &2 	#AR
	add
	store1
.L282.l_oc26bd2:
	push! 0
	load8! &3 	#X2
	add! 14016
	store2
	#
	push! 0
	load8! &3 	#X2
	add! 14020
	store4
	#
.L334.l_oc26bd2:
	jump! .L326.l_oc26bd2
.L323.l_oc26bd2:
	load8! &2 	#X2
	add! 216
	store8! &1 	#AR
	load8! &2 	#X2
	add! 728
	store8! &5 	#X4
	push! 4093624447
	store8! &2 	#X1
.L253.l_oc26bd2:
	load8! &1 	#X1
	and! 0x1
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L251.l_oc26bd2
	# END CBRANCH
	load8! &0 	#AR
	load2
	#
	# CBRANCH - peep (modesize=2)
	and! 65535
	# - EQ0
	jump_not_zero! .L283.l_oc26bd2
	# END CBRANCH
.L251.l_oc26bd2:
	load8! &1 	#X1
	shift_ru! 1
	store8! &2 	#X1
	load8! &0 	#AR
	add! 16
	store8! &1 	#AR
	# CBRANCH
	load8! &0 	#AR
	load8! &5 	#X4
	xor
	push! 1
	lt_u
	jump_zero! .L253.l_oc26bd2
	# END CBRANCH
	load8! &2 	#X2
	add! 360
	load2
	#
	# CBRANCH - peep (modesize=2)
	and! 65535
	# - EQ0
	jump_not_zero! .L284.l_oc26bd2
	# END CBRANCH
	load8! &2 	#X2
	add! 376
	load2
	#
	# CBRANCH - peep (modesize=2)
	and! 65535
	# - EQ0
	jump_not_zero! .L285.l_oc26bd2
	# END CBRANCH
	load8! &2 	#X2
	add! 424
	load2
	#
	# CBRANCH - peep (modesize=2)
	and! 65535
	# - EQ0
	jump_not_zero! .L286.l_oc26bd2
	# END CBRANCH
	load8! &2 	#X2
	add! 728
	store8! &1 	#AR
	load8! &2 	#X2
	add! 4312
	store8! &4 	#X3
.L254.l_oc26bd2:
	load8! &0 	#AR
	load2
	#
	# CBRANCH - peep (modesize=2)
	and! 65535
	# - EQ0
	jump_not_zero! .L287.l_oc26bd2
	# END CBRANCH
	load8! &0 	#AR
	add! 16
	store8! &1 	#AR
	# CBRANCH
	load8! &0 	#AR
	load8! &4 	#X3
	xor
	push! 1
	lt_u
	jump_zero! .L254.l_oc26bd2
	# END CBRANCH
	push! 0
	store8! &1 	#AR
	load4! &0 	#AR
	load8! &6 	#X5
	add! 88
	store4
	#
	jump! .L250.l_oc26bd2
.L259.l_oc26bd2:
	load8! &2 	#X2
	add! 200
	load4
	#
	store8! &6 	#X5
	load8! &2 	#X2
	add! 14020
	load4
	#
	store8! &4 	#X3
	load8! &2 	#X2
	add! 14016
	load2
	#
	store8! &7 	#X6
	# CBRANCH EQ
	load4! &5 	#X5
	push! 4
	xor
	jump_zero! .L261.l_oc26bd2
	# END CBRANCH
	# CBRANCH EQ
	load8! &0 	#AR
	load8! &5 	#X4
	xor
	jump_zero! .L261.l_oc26bd2
	# END CBRANCH
	# CBRANCH
	push! 13
	add! -2147483648
	load4! &4 	#X3
	add! -2147483648
	lt_u
	jump_zero! .L265.l_oc26bd2
	# END CBRANCH
	load4! &14
	add! 4
	and! 0xffff
	store8! &5 	#X4
	load4! &3 	#X3
	sigx4
	store8! &1 	#AR
	load8! &4 	#X4
	load8! &1 	#AR
	shift_l
	load8! &7 	#X6
	or
	store8! &1 	#AR
	load2! &0 	#AR
	load8! &3 	#X2
	add! 14016
	store2
	#
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &6 	#X5
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &4 	#X3
	load8! &3 	#X3
	add! 1
	load8! &3 	#X2
	add! 40
	store8
	#
	load1! &0 	#AR
	load8! &6 	#X5
	load8! &5 	#X3
	add
	store1
	load8! &2 	#X2
	add! 14016
	load2
	#
	and! 0x0ffff
	shift_ru! 8
	store8! &4 	#X3
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &6 	#X5
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &1 	#AR
	load8! &0 	#AR
	add! 1
	load8! &3 	#X2
	add! 40
	store8
	#
	load1! &3 	#X3
	load8! &6 	#X5
	load8! &2 	#AR
	add
	store1
	load8! &2 	#X2
	add! 14020
	load4
	#
	store8! &1 	#AR
	load8! &0 	#AR
	sub! 16
	neg
	store8! &4 	#X3
	load4! &4 	#X4
	sigx4
	store8! &5 	#X4
	load4! &3 	#X3
	sigx4
	store8! &4 	#X3
	load8! &4 	#X4
	load8! &4 	#X3
	shift_rs
	store8! &4 	#X3
	load2! &3 	#X3
	load8! &3 	#X2
	add! 14016
	store2
	#
	load8! &0 	#AR
	add! -13
	store8! &1 	#AR
	load4! &0 	#AR
	load8! &3 	#X2
	add! 14020
	store4
	#
	load2! &3 	#X3
	store8! &5 	#X4
	load8! &2 	#X2
	add! 11016
	load4
	#
	store8! &8 	#X7
	load8! &2 	#X2
	add! 10992
	load4
	#
	store8! &9 	#X8
	# CBRANCH
	push! 11
	add! -2147483648
	load4! &1 	#AR
	add! -2147483648
	lt_u
	jump_zero! .L267.l_oc26bd2
	# END CBRANCH
.L331.l_oc26bd2:
	load8! &8 	#X8
	add! -256
	and! 0xffff
	store8! &4 	#X3
	load4! &0 	#AR
	sigx4
	store8! &1 	#AR
	load8! &3 	#X3
	load8! &1 	#AR
	shift_l
	load8! &5 	#X4
	or
	store8! &1 	#AR
	load2! &0 	#AR
	load8! &3 	#X2
	add! 14016
	store2
	#
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &6 	#X5
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &5 	#X4
	load8! &4 	#X4
	add! 1
	load8! &3 	#X2
	add! 40
	store8
	#
	load1! &0 	#AR
	load8! &6 	#X5
	load8! &6 	#X4
	add
	store1
	load8! &2 	#X2
	add! 14016
	load2
	#
	and! 0x0ffff
	shift_ru! 8
	store8! &5 	#X4
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &6 	#X5
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &1 	#AR
	load8! &0 	#AR
	add! 1
	load8! &3 	#X2
	add! 40
	store8
	#
	load1! &4 	#X4
	load8! &6 	#X5
	load8! &2 	#AR
	add
	store1
	load8! &2 	#X2
	add! 14020
	load4
	#
	store8! &1 	#AR
	load8! &0 	#AR
	sub! 16
	neg
	store8! &6 	#X5
	load4! &3 	#X3
	sigx4
	store8! &5 	#X4
	load4! &5 	#X5
	sigx4
	store8! &4 	#X3
	load8! &4 	#X4
	load8! &4 	#X3
	shift_rs
	store8! &4 	#X3
	load2! &3 	#X3
	load8! &3 	#X2
	add! 14016
	store2
	#
	load8! &0 	#AR
	add! -11
	store8! &1 	#AR
	load4! &0 	#AR
	load8! &3 	#X2
	add! 14020
	store4
	#
	# CBRANCH
	push! 11
	add! -2147483648
	load4! &1 	#AR
	add! -2147483648
	lt_u
	jump_zero! .L269.l_oc26bd2
	# END CBRANCH
.L332.l_oc26bd2:
	load8! &7 	#X7
	and! 0xffff
	store8! &5 	#X4
	load4! &0 	#AR
	sigx4
	store8! &1 	#AR
	load8! &4 	#X4
	load8! &1 	#AR
	shift_l
	load8! &4 	#X3
	or
	store8! &1 	#AR
	load2! &0 	#AR
	load8! &3 	#X2
	add! 14016
	store2
	#
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &6 	#X5
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &4 	#X3
	load8! &3 	#X3
	add! 1
	load8! &3 	#X2
	add! 40
	store8
	#
	load1! &0 	#AR
	load8! &6 	#X5
	load8! &5 	#X3
	add
	store1
	load8! &2 	#X2
	add! 14016
	load2
	#
	and! 0x0ffff
	shift_ru! 8
	store8! &4 	#X3
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &6 	#X5
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &1 	#AR
	load8! &0 	#AR
	add! 1
	load8! &3 	#X2
	add! 40
	store8
	#
	load1! &3 	#X3
	load8! &6 	#X5
	load8! &2 	#AR
	add
	store1
	load8! &2 	#X2
	add! 14020
	load4
	#
	store8! &4 	#X3
	load8! &3 	#X3
	sub! 16
	neg
	store8! &1 	#AR
	load4! &4 	#X4
	sigx4
	store8! &5 	#X4
	load4! &0 	#AR
	sigx4
	store8! &1 	#AR
	load8! &4 	#X4
	load8! &1 	#AR
	shift_rs
	store8! &1 	#AR
	load2! &0 	#AR
	load8! &3 	#X2
	add! 14016
	store2
	#
	load8! &3 	#X3
	add! -11
	store8! &4 	#X3
	load4! &3 	#X3
	load8! &3 	#X2
	add! 14020
	store4
	#
	load2! &0 	#AR
	store8! &5 	#X4
	# CBRANCH
	push! 12
	add! -2147483648
	load4! &4 	#X3
	add! -2147483648
	lt_u
	jump_zero! .L271.l_oc26bd2
	# END CBRANCH
.L333.l_oc26bd2:
	load8! &1 	#X1
	add! -3
	and! 0xffff
	store8! &1 	#AR
	load4! &3 	#X3
	sigx4
	store8! &4 	#X3
	load8! &0 	#AR
	load8! &4 	#X3
	shift_l
	load8! &5 	#X4
	or
	store8! &4 	#X3
	load2! &3 	#X3
	load8! &3 	#X2
	add! 14016
	store2
	#
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &6 	#X5
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &5 	#X4
	load8! &4 	#X4
	add! 1
	load8! &3 	#X2
	add! 40
	store8
	#
	load1! &3 	#X3
	load8! &6 	#X5
	load8! &6 	#X4
	add
	store1
	load8! &2 	#X2
	add! 14016
	load2
	#
	and! 0x0ffff
	shift_ru! 8
	store8! &5 	#X4
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &6 	#X5
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &4 	#X3
	load8! &3 	#X3
	add! 1
	load8! &3 	#X2
	add! 40
	store8
	#
	load1! &4 	#X4
	load8! &6 	#X5
	load8! &5 	#X3
	add
	store1
	load8! &2 	#X2
	add! 14020
	load4
	#
	store8! &4 	#X3
	load8! &3 	#X3
	sub! 16
	neg
	store8! &6 	#X5
	load4! &0 	#AR
	sigx4
	store8! &5 	#X4
	load4! &5 	#X5
	sigx4
	store8! &1 	#AR
	load8! &4 	#X4
	load8! &1 	#AR
	shift_rs
	store8! &1 	#AR
	load2! &0 	#AR
	load8! &3 	#X2
	add! 14016
	store2
	#
	load8! &3 	#X3
	add! -12
	store8! &5 	#X4
	load4! &4 	#X4
	load8! &3 	#X2
	add! 14020
	store4
	#
	push! (+ bl_order.s_oc26bd2 1)
	store8! &4 	#X3
	load4! &1 	#X1
	sigx4
	store8! &6 	#X5
	push! bl_order.s_oc26bd2
	add! 1
	load8! &6 	#X5
	add
	store8! &7 	#X6
	push! 16
	store8! &2 	#X1
.L276.l_oc26bd2:
	load1! &1 	#X1
	sigx4
	add! 648
	shift_l! 4
	load8! &3 	#X2
	add
	load2
	and! 0x0ffff
	store8! &2 	#X1
	load4! &4 	#X4
	sigx4
	store8! &6 	#X5
	load8! &1 	#X1
	load8! &6 	#X5
	shift_l
	load8! &1 	#AR
	or
	store8! &1 	#AR
	# CBRANCH
	push! 13
	add! -2147483648
	load4! &5 	#X4
	add! -2147483648
	lt_u
	jump_zero! .L273.l_oc26bd2
	# END CBRANCH
.L328.l_oc26bd2:
	load2! &0 	#AR
	load8! &3 	#X2
	add! 14016
	store2
	#
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &6 	#X5
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &5 	#X4
	load8! &4 	#X4
	add! 1
	load8! &3 	#X2
	add! 40
	store8
	#
	load1! &0 	#AR
	load8! &6 	#X5
	load8! &6 	#X4
	add
	store1
	load8! &2 	#X2
	add! 14016
	load2
	#
	and! 0x0ffff
	shift_ru! 8
	store8! &5 	#X4
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &6 	#X5
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &1 	#AR
	load8! &0 	#AR
	add! 1
	load8! &3 	#X2
	add! 40
	store8
	#
	load1! &4 	#X4
	load8! &6 	#X5
	load8! &2 	#AR
	add
	store1
	load8! &2 	#X2
	add! 14020
	load4
	#
	store8! &5 	#X4
	load8! &4 	#X4
	sub! 16
	neg
	store8! &1 	#AR
	load4! &1 	#X1
	sigx4
	store8! &2 	#X1
	load4! &0 	#AR
	sigx4
	store8! &1 	#AR
	load8! &1 	#X1
	load8! &1 	#AR
	shift_rs
	store8! &1 	#AR
	load2! &0 	#AR
	load8! &3 	#X2
	add! 14016
	store2
	#
	load8! &4 	#X4
	add! -13
	store8! &5 	#X4
	load4! &4 	#X4
	load8! &3 	#X2
	add! 14020
	store4
	#
	# CBRANCH EQ
	load8! &3 	#X3
	load8! &7 	#X6
	xor
	jump_zero! .L275.l_oc26bd2
	# END CBRANCH
.L329.l_oc26bd2:
	load8! &3 	#X3
	load1
	#
	store8! &2 	#X1
	load8! &3 	#X3
	add! 1
	store8! &4 	#X3
	load1! &1 	#X1
	sigx4
	add! 648
	shift_l! 4
	load8! &3 	#X2
	add
	load2
	and! 0x0ffff
	store8! &2 	#X1
	load4! &4 	#X4
	sigx4
	store8! &6 	#X5
	load8! &1 	#X1
	load8! &6 	#X5
	shift_l
	load8! &1 	#AR
	or
	store8! &1 	#AR
	# CBRANCH
	push! 13
	add! -2147483648
	load4! &5 	#X4
	add! -2147483648
	lt_u
	not
	jump_zero! .L328.l_oc26bd2
	# END CBRANCH
.L273.l_oc26bd2:
	load2! &0 	#AR
	load8! &3 	#X2
	add! 14016
	store2
	#
	load8! &4 	#X4
	add! 3
	store8! &5 	#X4
	load4! &4 	#X4
	load8! &3 	#X2
	add! 14020
	store4
	#
	# CBRANCH
	load8! &3 	#X3
	load8! &7 	#X6
	xor
	push! 1
	lt_u
	jump_zero! .L329.l_oc26bd2
	# END CBRANCH
.L275.l_oc26bd2:
	load8! &2 	#X2
	add! 216
	store8! &4 	#X3
	load4! &8 	#X8
	load8! &4 	#X3
	load8! &4 	#X2
	call! send_tree.s_oc26bd2
	set_sp! (+ &0 24)
	

	load8! &2 	#X2
	add! 9384
	store8! &5 	#X4
	load4! &7 	#X7
	load8! &5 	#X4
	load8! &4 	#X2
	call! send_tree.s_oc26bd2
	set_sp! (+ &0 24)
	

	load8! &4 	#X4
	load8! &4 	#X3
	load8! &4 	#X2
	call! compress_block.s_oc26bd2
	set_sp! (+ &0 24)
	

	load8! &2 	#X2
	add! 216
	store8! &1 	#AR
	load8! &2 	#X2
	add! 4792
	store8! &2 	#X1
	jump! .L277.l_oc26bd2
.L249.l_oc26bd2:
	load8! &13
	add! 5
	store8! &1 	#AR
	load8! &0 	#AR
	store8! &5 	#X4
	push! 0
	store8! &2 	#X1
	jump! .L258.l_oc26bd2
.L261.l_oc26bd2:
	# CBRANCH
	push! 13
	add! -2147483648
	load4! &4 	#X3
	add! -2147483648
	lt_u
	jump_zero! .L263.l_oc26bd2
	# END CBRANCH
	load4! &14
	add! 2
	and! 0xffff
	store8! &2 	#X1
	load4! &3 	#X3
	sigx4
	store8! &1 	#AR
	load8! &1 	#X1
	load8! &1 	#AR
	shift_l
	load8! &7 	#X6
	or
	store8! &1 	#AR
	load2! &0 	#AR
	load8! &3 	#X2
	add! 14016
	store2
	#
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &5 	#X4
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &4 	#X3
	load8! &3 	#X3
	add! 1
	load8! &3 	#X2
	add! 40
	store8
	#
	load1! &0 	#AR
	load8! &5 	#X4
	load8! &5 	#X3
	add
	store1
	load8! &2 	#X2
	add! 14016
	load2
	#
	and! 0x0ffff
	shift_ru! 8
	store8! &4 	#X3
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &5 	#X4
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &1 	#AR
	load8! &0 	#AR
	add! 1
	load8! &3 	#X2
	add! 40
	store8
	#
	load1! &3 	#X3
	load8! &5 	#X4
	load8! &2 	#AR
	add
	store1
	load8! &2 	#X2
	add! 14020
	load4
	#
	store8! &1 	#AR
	load8! &0 	#AR
	sub! 16
	neg
	store8! &5 	#X4
	load4! &1 	#X1
	sigx4
	store8! &4 	#X3
	load4! &4 	#X4
	sigx4
	store8! &2 	#X1
	load8! &3 	#X3
	load8! &2 	#X1
	shift_rs
	load8! &3 	#X2
	add! 14016
	store2
	#
	load8! &0 	#AR
	add! -13
	load8! &3 	#X2
	add! 14020
	store4
	#
	push! static_dtree.s_oc26bd2
	push! static_ltree.s_oc26bd2
	load8! &4 	#X2
	call! compress_block.s_oc26bd2
	set_sp! (+ &0 24)
	

.L330.l_oc26bd2:
	load8! &2 	#X2
	add! 216
	store8! &1 	#AR
	load8! &2 	#X2
	add! 4792
	store8! &2 	#X1
	jump! .L277.l_oc26bd2
.L263.l_oc26bd2:
	load4! &14
	add! 2
	and! 0xffff
	store8! &2 	#X1
	load4! &3 	#X3
	sigx4
	pow2
	load8! &2 	#X1
	mult
	load8! &7 	#X6
	or
	load8! &3 	#X2
	add! 14016
	store2
	#
	load8! &3 	#X3
	add! 3
	load8! &3 	#X2
	add! 14020
	store4
	#
	push! static_dtree.s_oc26bd2
	push! static_ltree.s_oc26bd2
	load8! &4 	#X2
	call! compress_block.s_oc26bd2
	set_sp! (+ &0 24)
	

	jump! .L330.l_oc26bd2
.L265.l_oc26bd2:
	load4! &14
	add! 4
	and! 0xffff
	store8! &5 	#X4
	load4! &3 	#X3
	sigx4
	pow2
	load8! &5 	#X4
	mult
	store8! &1 	#AR
	load8! &6 	#X6
	load8! &1 	#AR
	or
	store8! &5 	#X4
	load2! &4 	#X4
	load8! &3 	#X2
	add! 14016
	store2
	#
	load8! &3 	#X3
	add! 3
	store8! &1 	#AR
	load4! &0 	#AR
	load8! &3 	#X2
	add! 14020
	store4
	#
	load8! &2 	#X2
	add! 11016
	load4
	#
	store8! &8 	#X7
	load8! &2 	#X2
	add! 10992
	load4
	#
	store8! &9 	#X8
	# CBRANCH
	push! 11
	add! -2147483648
	load4! &1 	#AR
	add! -2147483648
	lt_u
	not
	jump_zero! .L331.l_oc26bd2
	# END CBRANCH
.L267.l_oc26bd2:
	load8! &8 	#X8
	add! 1
	add! -257
	and! 0xffff
	store8! &6 	#X5
	load4! &0 	#AR
	sigx4
	pow2
	load8! &6 	#X5
	mult
	load8! &5 	#X4
	or
	store8! &4 	#X3
	load2! &3 	#X3
	load8! &3 	#X2
	add! 14016
	store2
	#
	load8! &0 	#AR
	add! 5
	store8! &1 	#AR
	load4! &0 	#AR
	load8! &3 	#X2
	add! 14020
	store4
	#
	# CBRANCH
	push! 11
	add! -2147483648
	load4! &1 	#AR
	add! -2147483648
	lt_u
	not
	jump_zero! .L332.l_oc26bd2
	# END CBRANCH
.L269.l_oc26bd2:
	load8! &7 	#X7
	add! 1
	add! -1
	and! 0xffff
	store8! &6 	#X5
	load4! &0 	#AR
	sigx4
	pow2
	load8! &6 	#X5
	mult
	store8! &5 	#X4
	load8! &3 	#X3
	load8! &5 	#X4
	or
	store8! &5 	#X4
	load2! &4 	#X4
	load8! &3 	#X2
	add! 14016
	store2
	#
	load8! &0 	#AR
	add! 5
	store8! &4 	#X3
	load4! &3 	#X3
	load8! &3 	#X2
	add! 14020
	store4
	#
	# CBRANCH
	push! 12
	add! -2147483648
	load4! &4 	#X3
	add! -2147483648
	lt_u
	not
	jump_zero! .L333.l_oc26bd2
	# END CBRANCH
.L271.l_oc26bd2:
	load8! &1 	#X1
	add! 1
	add! -4
	and! 0xffff
	store8! &6 	#X5
	load4! &3 	#X3
	sigx4
	pow2
	load8! &6 	#X5
	mult
	load8! &5 	#X4
	or
	store8! &1 	#AR
	load2! &0 	#AR
	load8! &3 	#X2
	add! 14016
	store2
	#
	load8! &3 	#X3
	add! 4
	store8! &5 	#X4
	load4! &4 	#X4
	load8! &3 	#X2
	add! 14020
	store4
	#
	push! (+ bl_order.s_oc26bd2 1)
	store8! &4 	#X3
	load4! &1 	#X1
	sigx4
	store8! &6 	#X5
	push! bl_order.s_oc26bd2
	add! 1
	load8! &6 	#X5
	add
	store8! &7 	#X6
	push! 16
	store8! &2 	#X1
	jump! .L276.l_oc26bd2
.L327.l_oc26bd2:
	load8! &2 	#X2
	add! 14016
	load2
	#
	store8! &2 	#X1
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &4 	#X3
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &1 	#AR
	load8! &0 	#AR
	add! 1
	load8! &3 	#X2
	add! 40
	store8
	#
	load1! &1 	#X1
	load8! &4 	#X3
	load8! &2 	#AR
	add
	store1
	load8! &2 	#X2
	add! 14016
	load2
	#
	and! 0x0ffff
	shift_ru! 8
	store8! &2 	#X1
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &4 	#X3
	load8! &2 	#X2
	add! 40
	load8
	#
	store8! &1 	#AR
	load8! &0 	#AR
	add! 1
	load8! &3 	#X2
	add! 40
	store8
	#
	load1! &1 	#X1
	load8! &4 	#X3
	load8! &2 	#AR
	add
	store1
	push! 0
	load8! &3 	#X2
	add! 14016
	store2
	#
	push! 0
	load8! &3 	#X2
	add! 14020
	store4
	#
	jump! .L334.l_oc26bd2
.L283.l_oc26bd2:
	push! 0
	store8! &1 	#AR
	load4! &0 	#AR
	load8! &6 	#X5
	add! 88
	store4
	#
	jump! .L250.l_oc26bd2
.L290.l_oc26bd2:
	push! 16
	store8! &2 	#X1
	load4! &1 	#X1
	sigx4
	add! 1
	mult! 3
	store8! &4 	#X3
	jump! .L256.l_oc26bd2
.L285.l_oc26bd2:
	push! 1
	store8! &1 	#AR
	load4! &0 	#AR
	load8! &6 	#X5
	add! 88
	store4
	#
	jump! .L250.l_oc26bd2
.L284.l_oc26bd2:
	push! 1
	store8! &1 	#AR
	load4! &0 	#AR
	load8! &6 	#X5
	add! 88
	store4
	#
	jump! .L250.l_oc26bd2
.L292.l_oc26bd2:
	push! 14
	store8! &2 	#X1
	load4! &1 	#X1
	sigx4
	add! 1
	mult! 3
	store8! &4 	#X3
	jump! .L256.l_oc26bd2
.L289.l_oc26bd2:
	push! 17
	store8! &2 	#X1
	load4! &1 	#X1
	sigx4
	add! 1
	mult! 3
	store8! &4 	#X3
	jump! .L256.l_oc26bd2
.L288.l_oc26bd2:
	push! 18
	store8! &2 	#X1
	load4! &1 	#X1
	sigx4
	add! 1
	mult! 3
	store8! &4 	#X3
	jump! .L256.l_oc26bd2
.L291.l_oc26bd2:
	push! 15
	store8! &2 	#X1
	load4! &1 	#X1
	sigx4
	add! 1
	mult! 3
	store8! &4 	#X3
	jump! .L256.l_oc26bd2
.L287.l_oc26bd2:
	push! 1
	store8! &1 	#AR
	load4! &0 	#AR
	load8! &6 	#X5
	add! 88
	store4
	#
	jump! .L250.l_oc26bd2
.L286.l_oc26bd2:
	push! 1
	store8! &1 	#AR
	load4! &0 	#AR
	load8! &6 	#X5
	add! 88
	store4
	#
	jump! .L250.l_oc26bd2
.L301.l_oc26bd2:
	push! 5
	store8! &2 	#X1
	load4! &1 	#X1
	sigx4
	add! 1
	mult! 3
	store8! &4 	#X3
	jump! .L256.l_oc26bd2
.L299.l_oc26bd2:
	push! 7
	store8! &2 	#X1
	load4! &1 	#X1
	sigx4
	add! 1
	mult! 3
	store8! &4 	#X3
	jump! .L256.l_oc26bd2
.L300.l_oc26bd2:
	push! 6
	store8! &2 	#X1
	load4! &1 	#X1
	sigx4
	add! 1
	mult! 3
	store8! &4 	#X3
	jump! .L256.l_oc26bd2
.L293.l_oc26bd2:
	push! 13
	store8! &2 	#X1
	load4! &1 	#X1
	sigx4
	add! 1
	mult! 3
	store8! &4 	#X3
	jump! .L256.l_oc26bd2
.L294.l_oc26bd2:
	push! 12
	store8! &2 	#X1
	load4! &1 	#X1
	sigx4
	add! 1
	mult! 3
	store8! &4 	#X3
	jump! .L256.l_oc26bd2
.L295.l_oc26bd2:
	push! 11
	store8! &2 	#X1
	load4! &1 	#X1
	sigx4
	add! 1
	mult! 3
	store8! &4 	#X3
	jump! .L256.l_oc26bd2
.L296.l_oc26bd2:
	push! 10
	store8! &2 	#X1
	load4! &1 	#X1
	sigx4
	add! 1
	mult! 3
	store8! &4 	#X3
	jump! .L256.l_oc26bd2
.L297.l_oc26bd2:
	push! 9
	store8! &2 	#X1
	load4! &1 	#X1
	sigx4
	add! 1
	mult! 3
	store8! &4 	#X3
	jump! .L256.l_oc26bd2
.L298.l_oc26bd2:
	push! 8
	store8! &2 	#X1
	load4! &1 	#X1
	sigx4
	add! 1
	mult! 3
	store8! &4 	#X3
	jump! .L256.l_oc26bd2
.L302.l_oc26bd2:
	push! 4
	store8! &2 	#X1
	load4! &1 	#X1
	sigx4
	add! 1
	mult! 3
	store8! &4 	#X3
	jump! .L256.l_oc26bd2
.L324.l_oc26bd2:
	push! 3
	store8! &2 	#X1
	load4! &1 	#X1
	sigx4
	add! 1
	mult! 3
	store8! &4 	#X3
	jump! .L256.l_oc26bd2
.L326.l_oc26bd2:

	# epilogue
	set_sp! &10
	return

# FUNCTION ENDS:_tr_flush_block

	#peephole pop(deadreg)+pushdi
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole nop+set
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+pushdi
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole move
	#peephole move+push(pushable)
	#peephole 1
	#peephole move+push(pushable)
	#peephole pop(deadreg)+push
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+block+push+block
	#peephole pop+move2(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole and+popsi

# FUNCTION BEGINS:_tr_tally
	EXPORT	_tr_tally
_tr_tally:
	# prologue (6 GPRs)

	set_sp! &-6

	load8! &7
	store8! &1 	#AR
	load4! &8
	store8! &3 	#X2
	load8! &0 	#AR
	add! 13984
	load8
	#
	store8! &6 	#X5
	load8! &0 	#AR
	add! 13980
	load4
	#
	store8! &4 	#X3
	load4! &3 	#X3
	store8! &2 	#X1
	load8! &1 	#X1
	load8! &2 	#X1
	add
	load8! &6 	#X5
	add
	store8! &5 	#X4
	load2! &2 	#X2
	load8! &5 	#X4
	store2
	#
	load8! &0 	#AR
	add! 13968
	load8
	#
	store8! &5 	#X4
	load8! &3 	#X3
	add! 1
	load8! &1 	#AR
	add! 13980
	store4
	#
	load8! &4 	#X4
	load8! &2 	#X1
	add
	store8! &2 	#X1
	load4! &9
	load8! &2 	#X1
	store1
	#
	# CBRANCH EQ0
	load4! &2 	#X2
	jump_not_zero! .L336.l_oc26bd2
	# END CBRANCH
	load4! &9
	shift_l! 4
	load8! &1 	#AR
	add
	add! 216
	load2
	add! 1
	store8! &3 	#X2
	load4! &9
	shift_l! 4
	load8! &1 	#AR
	add
	add! 216
	store8! &2 	#X1
	load2! &2 	#X2
	load8! &2 	#X1
	store2
	#
	load8! &0 	#AR
	add! 13980
	load4
	#
	store8! &3 	#X2
	load8! &0 	#AR
	add! 13976
	load4
	#
	add! -1
	load8! &3 	#X2
	xor
	and! 0xffffffff
	add! -1
	shift_ru! 63
	and! 0xff
	store4! &8
	jump! .L342.l_oc26bd2
.L336.l_oc26bd2:
	load8! &0 	#AR
	add! 14008
	load4
	#
	add! 1
	load8! &1 	#AR
	add! 14008
	store4
	#
	load8! &2 	#X2
	add! -1
	store8! &2 	#X1
	load4! &9
	add! _length_code
	load1
	and! 0x0ff
	add! 257
	store8! &3 	#X2
	load4! &2 	#X2
	sigx4
	shift_l! 4
	load8! &1 	#AR
	add
	add! 216
	load2
	add! 1
	store8! &4 	#X3
	load4! &2 	#X2
	sigx4
	shift_l! 4
	load8! &1 	#AR
	add
	add! 216
	store8! &3 	#X2
	load2! &3 	#X3
	load8! &3 	#X2
	store2
	#
	# CBRANCH
	push! 255
	load4! &2 	#X1
	lt_u
	not
	jump_zero! .L338.l_oc26bd2
	# END CBRANCH
	load4! &1 	#X1
	add! _dist_code
	load1
	and! 0x0ff
	store8! &2 	#X1
	load4! &1 	#X1
	sigx4
	shift_l! 4
	load8! &1 	#AR
	add
	add! 9384
	load2
	add! 1
	store8! &3 	#X2
	load4! &1 	#X1
	sigx4
	shift_l! 4
	load8! &1 	#AR
	add
	add! 9384
	store8! &2 	#X1
	load2! &2 	#X2
	load8! &2 	#X1
	store2
	#
.L343.l_oc26bd2:
	load8! &0 	#AR
	add! 13980
	load4
	#
	store8! &3 	#X2
	load8! &0 	#AR
	add! 13976
	load4
	#
	add! -1
	load8! &3 	#X2
	xor
	and! 0xffffffff
	add! -1
	shift_ru! 63
	and! 0xff
	store4! &8
	jump! .L342.l_oc26bd2
.L338.l_oc26bd2:
	load4! &1 	#X1
	shift_ru! 7
	add! 256
	and! 0xffffffff
	add! _dist_code
	load1
	and! 0x0ff
	store8! &2 	#X1
	load4! &1 	#X1
	sigx4
	shift_l! 4
	load8! &1 	#AR
	add
	add! 9384
	load2
	add! 1
	store8! &3 	#X2
	load4! &1 	#X1
	sigx4
	shift_l! 4
	load8! &1 	#AR
	add
	add! 9384
	store8! &2 	#X1
	load2! &2 	#X2
	load8! &2 	#X1
	store2
	#
	jump! .L343.l_oc26bd2
.L342.l_oc26bd2:

	# epilogue
	set_sp! &6
	return

# FUNCTION ENDS:_tr_tally

#	.data
static_bl_desc.s_oc26bd2:
	data8 [0]
	data8 [extra_blbits.s_oc26bd2]
	data4 [0]
	data4 [19]
	data4 [7]
	data4 [0]

static_d_desc.s_oc26bd2:
	data8 [static_dtree.s_oc26bd2]
	data8 [extra_dbits.s_oc26bd2]
	data4 [0]
	data4 [30]
	data4 [15]
	data4 [0]

static_l_desc.s_oc26bd2:
	data8 [static_ltree.s_oc26bd2]
	data8 [extra_lbits.s_oc26bd2]
	data4 [257]
	data4 [286]
	data4 [15]
	data4 [0]

#	.text
base_dist.s_oc26bd2:
	data4 [0]
	data4 [1]
	data4 [2]
	data4 [3]
	data4 [4]
	data4 [6]
	data4 [8]
	data4 [12]
	data4 [16]
	data4 [24]
	data4 [32]
	data4 [48]
	data4 [64]
	data4 [96]
	data4 [128]
	data4 [192]
	data4 [256]
	data4 [384]
	data4 [512]
	data4 [768]
	data4 [1024]
	data4 [1536]
	data4 [2048]
	data4 [3072]
	data4 [4096]
	data4 [6144]
	data4 [8192]
	data4 [12288]
	data4 [16384]
	data4 [24576]
base_length.s_oc26bd2:
	data4 [0]
	data4 [1]
	data4 [2]
	data4 [3]
	data4 [4]
	data4 [5]
	data4 [6]
	data4 [7]
	data4 [8]
	data4 [10]
	data4 [12]
	data4 [14]
	data4 [16]
	data4 [20]
	data4 [24]
	data4 [28]
	data4 [32]
	data4 [40]
	data4 [48]
	data4 [56]
	data4 [64]
	data4 [80]
	data4 [96]
	data4 [112]
	data4 [128]
	data4 [160]
	data4 [192]
	data4 [224]
	data4 [0]
	EXPORT	_length_code
_length_code:
	data1 [0]
	data1 [1]
	data1 [2]
	data1 [3]
	data1 [4]
	data1 [5]
	data1 [6]
	data1 [7]
	data1 [8]
	data1 [8]
	data1 [9]
	data1 [9]
	data1 [10]
	data1 [10]
	data1 [11]
	data1 [11]
	data1 [12]
	data1 [12]
	data1 [12]
	data1 [12]
	data1 [13]
	data1 [13]
	data1 [13]
	data1 [13]
	data1 [14]
	data1 [14]
	data1 [14]
	data1 [14]
	data1 [15]
	data1 [15]
	data1 [15]
	data1 [15]
	data1 [16]
	data1 [16]
	data1 [16]
	data1 [16]
	data1 [16]
	data1 [16]
	data1 [16]
	data1 [16]
	data1 [17]
	data1 [17]
	data1 [17]
	data1 [17]
	data1 [17]
	data1 [17]
	data1 [17]
	data1 [17]
	data1 [18]
	data1 [18]
	data1 [18]
	data1 [18]
	data1 [18]
	data1 [18]
	data1 [18]
	data1 [18]
	data1 [19]
	data1 [19]
	data1 [19]
	data1 [19]
	data1 [19]
	data1 [19]
	data1 [19]
	data1 [19]
	data1 [20]
	data1 [20]
	data1 [20]
	data1 [20]
	data1 [20]
	data1 [20]
	data1 [20]
	data1 [20]
	data1 [20]
	data1 [20]
	data1 [20]
	data1 [20]
	data1 [20]
	data1 [20]
	data1 [20]
	data1 [20]
	data1 [21]
	data1 [21]
	data1 [21]
	data1 [21]
	data1 [21]
	data1 [21]
	data1 [21]
	data1 [21]
	data1 [21]
	data1 [21]
	data1 [21]
	data1 [21]
	data1 [21]
	data1 [21]
	data1 [21]
	data1 [21]
	data1 [22]
	data1 [22]
	data1 [22]
	data1 [22]
	data1 [22]
	data1 [22]
	data1 [22]
	data1 [22]
	data1 [22]
	data1 [22]
	data1 [22]
	data1 [22]
	data1 [22]
	data1 [22]
	data1 [22]
	data1 [22]
	data1 [23]
	data1 [23]
	data1 [23]
	data1 [23]
	data1 [23]
	data1 [23]
	data1 [23]
	data1 [23]
	data1 [23]
	data1 [23]
	data1 [23]
	data1 [23]
	data1 [23]
	data1 [23]
	data1 [23]
	data1 [23]
	data1 [24]
	data1 [24]
	data1 [24]
	data1 [24]
	data1 [24]
	data1 [24]
	data1 [24]
	data1 [24]
	data1 [24]
	data1 [24]
	data1 [24]
	data1 [24]
	data1 [24]
	data1 [24]
	data1 [24]
	data1 [24]
	data1 [24]
	data1 [24]
	data1 [24]
	data1 [24]
	data1 [24]
	data1 [24]
	data1 [24]
	data1 [24]
	data1 [24]
	data1 [24]
	data1 [24]
	data1 [24]
	data1 [24]
	data1 [24]
	data1 [24]
	data1 [24]
	data1 [25]
	data1 [25]
	data1 [25]
	data1 [25]
	data1 [25]
	data1 [25]
	data1 [25]
	data1 [25]
	data1 [25]
	data1 [25]
	data1 [25]
	data1 [25]
	data1 [25]
	data1 [25]
	data1 [25]
	data1 [25]
	data1 [25]
	data1 [25]
	data1 [25]
	data1 [25]
	data1 [25]
	data1 [25]
	data1 [25]
	data1 [25]
	data1 [25]
	data1 [25]
	data1 [25]
	data1 [25]
	data1 [25]
	data1 [25]
	data1 [25]
	data1 [25]
	data1 [26]
	data1 [26]
	data1 [26]
	data1 [26]
	data1 [26]
	data1 [26]
	data1 [26]
	data1 [26]
	data1 [26]
	data1 [26]
	data1 [26]
	data1 [26]
	data1 [26]
	data1 [26]
	data1 [26]
	data1 [26]
	data1 [26]
	data1 [26]
	data1 [26]
	data1 [26]
	data1 [26]
	data1 [26]
	data1 [26]
	data1 [26]
	data1 [26]
	data1 [26]
	data1 [26]
	data1 [26]
	data1 [26]
	data1 [26]
	data1 [26]
	data1 [26]
	data1 [27]
	data1 [27]
	data1 [27]
	data1 [27]
	data1 [27]
	data1 [27]
	data1 [27]
	data1 [27]
	data1 [27]
	data1 [27]
	data1 [27]
	data1 [27]
	data1 [27]
	data1 [27]
	data1 [27]
	data1 [27]
	data1 [27]
	data1 [27]
	data1 [27]
	data1 [27]
	data1 [27]
	data1 [27]
	data1 [27]
	data1 [27]
	data1 [27]
	data1 [27]
	data1 [27]
	data1 [27]
	data1 [27]
	data1 [27]
	data1 [27]
	data1 [28]
	EXPORT	_dist_code
_dist_code:
	data1 [0]
	data1 [1]
	data1 [2]
	data1 [3]
	data1 [4]
	data1 [4]
	data1 [5]
	data1 [5]
	data1 [6]
	data1 [6]
	data1 [6]
	data1 [6]
	data1 [7]
	data1 [7]
	data1 [7]
	data1 [7]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [9]
	data1 [9]
	data1 [9]
	data1 [9]
	data1 [9]
	data1 [9]
	data1 [9]
	data1 [9]
	data1 [10]
	data1 [10]
	data1 [10]
	data1 [10]
	data1 [10]
	data1 [10]
	data1 [10]
	data1 [10]
	data1 [10]
	data1 [10]
	data1 [10]
	data1 [10]
	data1 [10]
	data1 [10]
	data1 [10]
	data1 [10]
	data1 [11]
	data1 [11]
	data1 [11]
	data1 [11]
	data1 [11]
	data1 [11]
	data1 [11]
	data1 [11]
	data1 [11]
	data1 [11]
	data1 [11]
	data1 [11]
	data1 [11]
	data1 [11]
	data1 [11]
	data1 [11]
	data1 [12]
	data1 [12]
	data1 [12]
	data1 [12]
	data1 [12]
	data1 [12]
	data1 [12]
	data1 [12]
	data1 [12]
	data1 [12]
	data1 [12]
	data1 [12]
	data1 [12]
	data1 [12]
	data1 [12]
	data1 [12]
	data1 [12]
	data1 [12]
	data1 [12]
	data1 [12]
	data1 [12]
	data1 [12]
	data1 [12]
	data1 [12]
	data1 [12]
	data1 [12]
	data1 [12]
	data1 [12]
	data1 [12]
	data1 [12]
	data1 [12]
	data1 [12]
	data1 [13]
	data1 [13]
	data1 [13]
	data1 [13]
	data1 [13]
	data1 [13]
	data1 [13]
	data1 [13]
	data1 [13]
	data1 [13]
	data1 [13]
	data1 [13]
	data1 [13]
	data1 [13]
	data1 [13]
	data1 [13]
	data1 [13]
	data1 [13]
	data1 [13]
	data1 [13]
	data1 [13]
	data1 [13]
	data1 [13]
	data1 [13]
	data1 [13]
	data1 [13]
	data1 [13]
	data1 [13]
	data1 [13]
	data1 [13]
	data1 [13]
	data1 [13]
	data1 [14]
	data1 [14]
	data1 [14]
	data1 [14]
	data1 [14]
	data1 [14]
	data1 [14]
	data1 [14]
	data1 [14]
	data1 [14]
	data1 [14]
	data1 [14]
	data1 [14]
	data1 [14]
	data1 [14]
	data1 [14]
	data1 [14]
	data1 [14]
	data1 [14]
	data1 [14]
	data1 [14]
	data1 [14]
	data1 [14]
	data1 [14]
	data1 [14]
	data1 [14]
	data1 [14]
	data1 [14]
	data1 [14]
	data1 [14]
	data1 [14]
	data1 [14]
	data1 [14]
	data1 [14]
	data1 [14]
	data1 [14]
	data1 [14]
	data1 [14]
	data1 [14]
	data1 [14]
	data1 [14]
	data1 [14]
	data1 [14]
	data1 [14]
	data1 [14]
	data1 [14]
	data1 [14]
	data1 [14]
	data1 [14]
	data1 [14]
	data1 [14]
	data1 [14]
	data1 [14]
	data1 [14]
	data1 [14]
	data1 [14]
	data1 [14]
	data1 [14]
	data1 [14]
	data1 [14]
	data1 [14]
	data1 [14]
	data1 [14]
	data1 [14]
	data1 [15]
	data1 [15]
	data1 [15]
	data1 [15]
	data1 [15]
	data1 [15]
	data1 [15]
	data1 [15]
	data1 [15]
	data1 [15]
	data1 [15]
	data1 [15]
	data1 [15]
	data1 [15]
	data1 [15]
	data1 [15]
	data1 [15]
	data1 [15]
	data1 [15]
	data1 [15]
	data1 [15]
	data1 [15]
	data1 [15]
	data1 [15]
	data1 [15]
	data1 [15]
	data1 [15]
	data1 [15]
	data1 [15]
	data1 [15]
	data1 [15]
	data1 [15]
	data1 [15]
	data1 [15]
	data1 [15]
	data1 [15]
	data1 [15]
	data1 [15]
	data1 [15]
	data1 [15]
	data1 [15]
	data1 [15]
	data1 [15]
	data1 [15]
	data1 [15]
	data1 [15]
	data1 [15]
	data1 [15]
	data1 [15]
	data1 [15]
	data1 [15]
	data1 [15]
	data1 [15]
	data1 [15]
	data1 [15]
	data1 [15]
	data1 [15]
	data1 [15]
	data1 [15]
	data1 [15]
	data1 [15]
	data1 [15]
	data1 [15]
	data1 [15]
	data1 [0]
	data1 [0]
	data1 [16]
	data1 [17]
	data1 [18]
	data1 [18]
	data1 [19]
	data1 [19]
	data1 [20]
	data1 [20]
	data1 [20]
	data1 [20]
	data1 [21]
	data1 [21]
	data1 [21]
	data1 [21]
	data1 [22]
	data1 [22]
	data1 [22]
	data1 [22]
	data1 [22]
	data1 [22]
	data1 [22]
	data1 [22]
	data1 [23]
	data1 [23]
	data1 [23]
	data1 [23]
	data1 [23]
	data1 [23]
	data1 [23]
	data1 [23]
	data1 [24]
	data1 [24]
	data1 [24]
	data1 [24]
	data1 [24]
	data1 [24]
	data1 [24]
	data1 [24]
	data1 [24]
	data1 [24]
	data1 [24]
	data1 [24]
	data1 [24]
	data1 [24]
	data1 [24]
	data1 [24]
	data1 [25]
	data1 [25]
	data1 [25]
	data1 [25]
	data1 [25]
	data1 [25]
	data1 [25]
	data1 [25]
	data1 [25]
	data1 [25]
	data1 [25]
	data1 [25]
	data1 [25]
	data1 [25]
	data1 [25]
	data1 [25]
	data1 [26]
	data1 [26]
	data1 [26]
	data1 [26]
	data1 [26]
	data1 [26]
	data1 [26]
	data1 [26]
	data1 [26]
	data1 [26]
	data1 [26]
	data1 [26]
	data1 [26]
	data1 [26]
	data1 [26]
	data1 [26]
	data1 [26]
	data1 [26]
	data1 [26]
	data1 [26]
	data1 [26]
	data1 [26]
	data1 [26]
	data1 [26]
	data1 [26]
	data1 [26]
	data1 [26]
	data1 [26]
	data1 [26]
	data1 [26]
	data1 [26]
	data1 [26]
	data1 [27]
	data1 [27]
	data1 [27]
	data1 [27]
	data1 [27]
	data1 [27]
	data1 [27]
	data1 [27]
	data1 [27]
	data1 [27]
	data1 [27]
	data1 [27]
	data1 [27]
	data1 [27]
	data1 [27]
	data1 [27]
	data1 [27]
	data1 [27]
	data1 [27]
	data1 [27]
	data1 [27]
	data1 [27]
	data1 [27]
	data1 [27]
	data1 [27]
	data1 [27]
	data1 [27]
	data1 [27]
	data1 [27]
	data1 [27]
	data1 [27]
	data1 [27]
	data1 [28]
	data1 [28]
	data1 [28]
	data1 [28]
	data1 [28]
	data1 [28]
	data1 [28]
	data1 [28]
	data1 [28]
	data1 [28]
	data1 [28]
	data1 [28]
	data1 [28]
	data1 [28]
	data1 [28]
	data1 [28]
	data1 [28]
	data1 [28]
	data1 [28]
	data1 [28]
	data1 [28]
	data1 [28]
	data1 [28]
	data1 [28]
	data1 [28]
	data1 [28]
	data1 [28]
	data1 [28]
	data1 [28]
	data1 [28]
	data1 [28]
	data1 [28]
	data1 [28]
	data1 [28]
	data1 [28]
	data1 [28]
	data1 [28]
	data1 [28]
	data1 [28]
	data1 [28]
	data1 [28]
	data1 [28]
	data1 [28]
	data1 [28]
	data1 [28]
	data1 [28]
	data1 [28]
	data1 [28]
	data1 [28]
	data1 [28]
	data1 [28]
	data1 [28]
	data1 [28]
	data1 [28]
	data1 [28]
	data1 [28]
	data1 [28]
	data1 [28]
	data1 [28]
	data1 [28]
	data1 [28]
	data1 [28]
	data1 [28]
	data1 [28]
	data1 [29]
	data1 [29]
	data1 [29]
	data1 [29]
	data1 [29]
	data1 [29]
	data1 [29]
	data1 [29]
	data1 [29]
	data1 [29]
	data1 [29]
	data1 [29]
	data1 [29]
	data1 [29]
	data1 [29]
	data1 [29]
	data1 [29]
	data1 [29]
	data1 [29]
	data1 [29]
	data1 [29]
	data1 [29]
	data1 [29]
	data1 [29]
	data1 [29]
	data1 [29]
	data1 [29]
	data1 [29]
	data1 [29]
	data1 [29]
	data1 [29]
	data1 [29]
	data1 [29]
	data1 [29]
	data1 [29]
	data1 [29]
	data1 [29]
	data1 [29]
	data1 [29]
	data1 [29]
	data1 [29]
	data1 [29]
	data1 [29]
	data1 [29]
	data1 [29]
	data1 [29]
	data1 [29]
	data1 [29]
	data1 [29]
	data1 [29]
	data1 [29]
	data1 [29]
	data1 [29]
	data1 [29]
	data1 [29]
	data1 [29]
	data1 [29]
	data1 [29]
	data1 [29]
	data1 [29]
	data1 [29]
	data1 [29]
	data1 [29]
	data1 [29]
static_dtree.s_oc26bd2:
	data2 [0]
	data4 [0]
	data2 [0]

	data2 [5]
	data4 [0]
	data2 [0]

	data2 [16]
	data4 [0]
	data2 [0]

	data2 [5]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [5]
	data4 [0]
	data2 [0]

	data2 [24]
	data4 [0]
	data2 [0]

	data2 [5]
	data4 [0]
	data2 [0]

	data2 [4]
	data4 [0]
	data2 [0]

	data2 [5]
	data4 [0]
	data2 [0]

	data2 [20]
	data4 [0]
	data2 [0]

	data2 [5]
	data4 [0]
	data2 [0]

	data2 [12]
	data4 [0]
	data2 [0]

	data2 [5]
	data4 [0]
	data2 [0]

	data2 [28]
	data4 [0]
	data2 [0]

	data2 [5]
	data4 [0]
	data2 [0]

	data2 [2]
	data4 [0]
	data2 [0]

	data2 [5]
	data4 [0]
	data2 [0]

	data2 [18]
	data4 [0]
	data2 [0]

	data2 [5]
	data4 [0]
	data2 [0]

	data2 [10]
	data4 [0]
	data2 [0]

	data2 [5]
	data4 [0]
	data2 [0]

	data2 [26]
	data4 [0]
	data2 [0]

	data2 [5]
	data4 [0]
	data2 [0]

	data2 [6]
	data4 [0]
	data2 [0]

	data2 [5]
	data4 [0]
	data2 [0]

	data2 [22]
	data4 [0]
	data2 [0]

	data2 [5]
	data4 [0]
	data2 [0]

	data2 [14]
	data4 [0]
	data2 [0]

	data2 [5]
	data4 [0]
	data2 [0]

	data2 [30]
	data4 [0]
	data2 [0]

	data2 [5]
	data4 [0]
	data2 [0]

	data2 [1]
	data4 [0]
	data2 [0]

	data2 [5]
	data4 [0]
	data2 [0]

	data2 [17]
	data4 [0]
	data2 [0]

	data2 [5]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [5]
	data4 [0]
	data2 [0]

	data2 [25]
	data4 [0]
	data2 [0]

	data2 [5]
	data4 [0]
	data2 [0]

	data2 [5]
	data4 [0]
	data2 [0]

	data2 [5]
	data4 [0]
	data2 [0]

	data2 [21]
	data4 [0]
	data2 [0]

	data2 [5]
	data4 [0]
	data2 [0]

	data2 [13]
	data4 [0]
	data2 [0]

	data2 [5]
	data4 [0]
	data2 [0]

	data2 [29]
	data4 [0]
	data2 [0]

	data2 [5]
	data4 [0]
	data2 [0]

	data2 [3]
	data4 [0]
	data2 [0]

	data2 [5]
	data4 [0]
	data2 [0]

	data2 [19]
	data4 [0]
	data2 [0]

	data2 [5]
	data4 [0]
	data2 [0]

	data2 [11]
	data4 [0]
	data2 [0]

	data2 [5]
	data4 [0]
	data2 [0]

	data2 [27]
	data4 [0]
	data2 [0]

	data2 [5]
	data4 [0]
	data2 [0]

	data2 [7]
	data4 [0]
	data2 [0]

	data2 [5]
	data4 [0]
	data2 [0]

	data2 [23]
	data4 [0]
	data2 [0]

	data2 [5]
	data4 [0]
	data2 [0]

static_ltree.s_oc26bd2:
	data2 [12]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [140]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [76]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [204]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [44]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [172]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [108]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [236]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [28]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [156]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [92]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [220]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [60]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [188]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [124]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [252]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [2]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [130]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [66]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [194]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [34]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [162]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [98]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [226]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [18]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [146]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [82]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [210]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [50]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [178]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [114]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [242]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [10]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [138]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [74]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [202]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [42]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [170]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [106]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [234]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [26]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [154]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [90]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [218]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [58]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [186]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [122]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [250]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [6]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [134]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [70]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [198]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [38]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [166]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [102]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [230]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [22]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [150]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [86]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [214]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [54]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [182]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [118]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [246]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [14]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [142]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [78]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [206]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [46]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [174]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [110]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [238]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [30]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [158]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [94]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [222]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [62]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [190]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [126]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [254]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [1]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [129]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [65]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [193]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [33]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [161]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [97]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [225]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [17]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [145]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [81]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [209]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [49]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [177]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [113]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [241]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [137]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [73]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [201]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [41]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [169]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [105]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [233]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [25]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [153]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [89]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [217]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [57]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [185]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [121]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [249]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [5]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [133]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [69]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [197]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [37]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [165]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [101]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [229]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [21]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [149]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [85]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [213]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [53]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [181]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [117]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [245]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [13]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [141]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [77]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [205]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [45]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [173]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [109]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [237]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [29]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [157]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [93]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [221]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [61]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [189]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [125]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [253]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [19]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [275]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [147]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [403]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [83]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [339]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [211]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [467]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [51]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [307]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [179]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [435]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [115]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [371]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [243]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [499]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [11]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [267]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [139]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [395]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [75]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [331]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [203]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [459]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [43]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [299]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [171]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [427]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [107]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [363]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [235]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [491]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [27]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [283]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [155]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [411]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [91]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [347]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [219]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [475]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [59]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [315]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [187]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [443]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [123]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [379]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [251]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [507]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [7]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [263]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [135]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [391]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [71]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [327]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [199]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [455]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [39]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [295]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [167]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [423]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [103]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [359]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [231]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [487]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [23]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [279]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [151]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [407]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [87]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [343]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [215]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [471]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [55]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [311]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [183]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [439]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [119]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [375]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [247]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [503]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [15]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [271]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [143]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [399]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [79]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [335]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [207]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [463]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [47]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [303]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [175]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [431]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [111]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [367]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [239]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [495]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [31]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [287]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [159]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [415]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [95]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [351]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [223]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [479]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [63]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [319]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [191]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [447]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [127]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [383]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [255]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [511]
	data4 [0]
	data2 [0]

	data2 [9]
	data4 [0]
	data2 [0]

	data2 [0]
	data4 [0]
	data2 [0]

	data2 [7]
	data4 [0]
	data2 [0]

	data2 [64]
	data4 [0]
	data2 [0]

	data2 [7]
	data4 [0]
	data2 [0]

	data2 [32]
	data4 [0]
	data2 [0]

	data2 [7]
	data4 [0]
	data2 [0]

	data2 [96]
	data4 [0]
	data2 [0]

	data2 [7]
	data4 [0]
	data2 [0]

	data2 [16]
	data4 [0]
	data2 [0]

	data2 [7]
	data4 [0]
	data2 [0]

	data2 [80]
	data4 [0]
	data2 [0]

	data2 [7]
	data4 [0]
	data2 [0]

	data2 [48]
	data4 [0]
	data2 [0]

	data2 [7]
	data4 [0]
	data2 [0]

	data2 [112]
	data4 [0]
	data2 [0]

	data2 [7]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [7]
	data4 [0]
	data2 [0]

	data2 [72]
	data4 [0]
	data2 [0]

	data2 [7]
	data4 [0]
	data2 [0]

	data2 [40]
	data4 [0]
	data2 [0]

	data2 [7]
	data4 [0]
	data2 [0]

	data2 [104]
	data4 [0]
	data2 [0]

	data2 [7]
	data4 [0]
	data2 [0]

	data2 [24]
	data4 [0]
	data2 [0]

	data2 [7]
	data4 [0]
	data2 [0]

	data2 [88]
	data4 [0]
	data2 [0]

	data2 [7]
	data4 [0]
	data2 [0]

	data2 [56]
	data4 [0]
	data2 [0]

	data2 [7]
	data4 [0]
	data2 [0]

	data2 [120]
	data4 [0]
	data2 [0]

	data2 [7]
	data4 [0]
	data2 [0]

	data2 [4]
	data4 [0]
	data2 [0]

	data2 [7]
	data4 [0]
	data2 [0]

	data2 [68]
	data4 [0]
	data2 [0]

	data2 [7]
	data4 [0]
	data2 [0]

	data2 [36]
	data4 [0]
	data2 [0]

	data2 [7]
	data4 [0]
	data2 [0]

	data2 [100]
	data4 [0]
	data2 [0]

	data2 [7]
	data4 [0]
	data2 [0]

	data2 [20]
	data4 [0]
	data2 [0]

	data2 [7]
	data4 [0]
	data2 [0]

	data2 [84]
	data4 [0]
	data2 [0]

	data2 [7]
	data4 [0]
	data2 [0]

	data2 [52]
	data4 [0]
	data2 [0]

	data2 [7]
	data4 [0]
	data2 [0]

	data2 [116]
	data4 [0]
	data2 [0]

	data2 [7]
	data4 [0]
	data2 [0]

	data2 [3]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [131]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [67]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [195]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [35]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [163]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [99]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

	data2 [227]
	data4 [0]
	data2 [0]

	data2 [8]
	data4 [0]
	data2 [0]

bl_order.s_oc26bd2:
	data1 [16]
	data1 [17]
	data1 [18]
	data1 [0]
	data1 [8]
	data1 [7]
	data1 [9]
	data1 [6]
	data1 [10]
	data1 [5]
	data1 [11]
	data1 [4]
	data1 [12]
	data1 [3]
	data1 [13]
	data1 [2]
	data1 [14]
	data1 [1]
	data1 [15]
extra_blbits.s_oc26bd2:
	data4 [0]
	data4 [0]
	data4 [0]
	data4 [0]
	data4 [0]
	data4 [0]
	data4 [0]
	data4 [0]
	data4 [0]
	data4 [0]
	data4 [0]
	data4 [0]
	data4 [0]
	data4 [0]
	data4 [0]
	data4 [0]
	data4 [2]
	data4 [3]
	data4 [7]
extra_dbits.s_oc26bd2:
	data4 [0]
	data4 [0]
	data4 [0]
	data4 [0]
	data4 [1]
	data4 [1]
	data4 [2]
	data4 [2]
	data4 [3]
	data4 [3]
	data4 [4]
	data4 [4]
	data4 [5]
	data4 [5]
	data4 [6]
	data4 [6]
	data4 [7]
	data4 [7]
	data4 [8]
	data4 [8]
	data4 [9]
	data4 [9]
	data4 [10]
	data4 [10]
	data4 [11]
	data4 [11]
	data4 [12]
	data4 [12]
	data4 [13]
	data4 [13]
extra_lbits.s_oc26bd2:
	data4 [0]
	data4 [0]
	data4 [0]
	data4 [0]
	data4 [0]
	data4 [0]
	data4 [0]
	data4 [0]
	data4 [1]
	data4 [1]
	data4 [1]
	data4 [1]
	data4 [2]
	data4 [2]
	data4 [2]
	data4 [2]
	data4 [3]
	data4 [3]
	data4 [3]
	data4 [3]
	data4 [4]
	data4 [4]
	data4 [4]
	data4 [4]
	data4 [5]
	data4 [5]
	data4 [5]
	data4 [5]
	data4 [0]
#	IMPORT memcpy
#	IMPORT memset
#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: o3f3d03
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"zutil.c"
#	.text
.LC0.l_o3f3d03:
#	.string "1.2.11"
	data1 [ 49 46 50 46 49 49 0 ]

# FUNCTION BEGINS:zlibVersion
	EXPORT	zlibVersion
zlibVersion:
	# prologue (0 GPRs)

	push! .LC0.l_o3f3d03
	store8! &2

	# epilogue
	return

# FUNCTION ENDS:zlibVersion


# FUNCTION BEGINS:zlibCompileFlags
	EXPORT	zlibCompileFlags
zlibCompileFlags:
	# prologue (0 GPRs)

	push! 169
	store8! &2

	# epilogue
	return

# FUNCTION ENDS:zlibCompileFlags

	#peephole move+push(pushable)
	#peephole pop+push+sub
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole pop+move2(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+push(deadreg)+sign_extend

# FUNCTION BEGINS:zError
	EXPORT	zError
zError:
	# prologue (1 GPRs)
	push! 0

	load4! &2
	sub! 2
	neg
	sigx4
	shift_l! 3
	add! z_errmsg
	load8
	store8! &3

	# epilogue
	store8! &0 #set_sp! &1
	return

# FUNCTION ENDS:zError

	#peephole move+push(pushable)
	#peephole move+push(pushable)
	#peephole 1
	#peephole zero_extend
	#peephole pop+pusharg
	#peephole pop+push+commut(si)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole popdi(deadreg)+push

# FUNCTION BEGINS:zcalloc
	EXPORT	zcalloc
zcalloc:
	# prologue (2 GPRs)
	push! 0
	push! 0

	load4! &4
	load4! &6
	mult
	and! 0xffffffff
	#peep - pop(deadreg)+pusharg
	call! malloc
	store8! &1

	load8! &0 	#AR
	store8! &4

	# epilogue
	set_sp! &2
	return

# FUNCTION ENDS:zcalloc


# FUNCTION BEGINS:zcfree
	EXPORT	zcfree
zcfree:
	# prologue (0 GPRs)

	load8! &2
	call! free
	set_sp! (+ &0 8)
	


	# epilogue
	return

# FUNCTION ENDS:zcfree

	EXPORT	z_errmsg
.LC1.l_o3f3d03:
#	.string "need dictionary"
	data1 [ 110 101 101 100 32 100 105 99 116 105 111 110 97 114 121 0 ]
.LC2.l_o3f3d03:
#	.string "stream end"
	data1 [ 115 116 114 101 97 109 32 101 110 100 0 ]
.LC3.l_o3f3d03:
#	.string ""
	data1 [ 0 ]
.LC4.l_o3f3d03:
#	.string "file error"
	data1 [ 102 105 108 101 32 101 114 114 111 114 0 ]
.LC5.l_o3f3d03:
#	.string "stream error"
	data1 [ 115 116 114 101 97 109 32 101 114 114 111 114 0 ]
.LC6.l_o3f3d03:
#	.string "data error"
	data1 [ 100 97 116 97 32 101 114 114 111 114 0 ]
.LC7.l_o3f3d03:
#	.string "insufficient memory"
	data1 [ 105 110 115 117 102 102 105 99 105 101 110 116 32 109 101 109 111 114 121 0 ]
.LC8.l_o3f3d03:
#	.string "buffer error"
	data1 [ 98 117 102 102 101 114 32 101 114 114 111 114 0 ]
.LC9.l_o3f3d03:
#	.string "incompatible version"
	data1 [ 105 110 99 111 109 112 97 116 105 98 108 101 32 118 101 114 115 105 111 110 0 ]
#	.data
z_errmsg:
	data8 [.LC1.l_o3f3d03]
	data8 [.LC2.l_o3f3d03]
	data8 [.LC3.l_o3f3d03]
	data8 [.LC4.l_o3f3d03]
	data8 [.LC5.l_o3f3d03]
	data8 [.LC6.l_o3f3d03]
	data8 [.LC7.l_o3f3d03]
	data8 [.LC8.l_o3f3d03]
	data8 [.LC9.l_o3f3d03]
	data8 [.LC3.l_o3f3d03]
#	IMPORT free
#	IMPORT malloc
#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: o53a99f
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"compress.c"
#	.text
.LC0.l_o53a99f:
#	.string "1.2.11"
	data1 [ 49 46 50 46 49 49 0 ]
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole move
	#peephole move+move(allmodes x allmodes)
	#peephole move
	#peephole move
	#peephole move+move(allmodes x allmodes)
	#peephole move
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg

# FUNCTION BEGINS:compress2
	EXPORT	compress2
compress2:
	# prologue (7 GPRs)

	set_sp! &-21

	load8! &23
	store8! &6 	#X5
	load8! &25
	store8! &3 	#X2
	load8! &5 	#X5
	load8
	#
	store8! &5 	#X4
	push! 0
	load8! &6 	#X5
	store8
	#
	push! 0
	store8! &16
	push! 0
	store8! &17
	push! 0
	store8! &18
	push! 112
	push! .LC0.l_o53a99f
	load4! &28
	push! &0
	add! 80
	#peep - pop(deadreg)+pusharg
	call! deflateInit_
	store8! &4

	set_sp! &3
	load4! &0 	#AR
	store8! &7 	#X6
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_not_zero! .L1.l_o53a99f
	# END CBRANCH
	load8! &22
	store8! &11
	push! 0
	store4! &12
	load8! &24
	store8! &8
	push! 0
	store4! &9
	push! 0
	store8! &2 	#X1
	push! 0
	store8! &1 	#AR
.L10.l_o53a99f:
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_not_zero! .L3.l_o53a99f
	# END CBRANCH
	load8! &4 	#X4
	store8! &1 	#AR
	# CBRANCH
	push! 4294967295
	load8! &5 	#X4
	lt_u
	jump_zero! .L4.l_o53a99f
	# END CBRANCH
	push! 4294967295
	store8! &1 	#AR
.L4.l_o53a99f:
	load4! &0 	#AR
	store4! &12
	load8! &4 	#X4
	load8! &1 	#AR
	sub
	store8! &5 	#X4
.L3.l_o53a99f:
	# CBRANCH EQ0
	load4! &1 	#X1
	jump_not_zero! .L5.l_o53a99f
	# END CBRANCH
	load8! &2 	#X2
	store8! &1 	#AR
	# CBRANCH
	push! 4294967295
	load8! &3 	#X2
	lt_u
	jump_zero! .L6.l_o53a99f
	# END CBRANCH
	push! 4294967295
	store8! &1 	#AR
.L6.l_o53a99f:
	load4! &0 	#AR
	store4! &9
	load8! &2 	#X2
	load8! &1 	#AR
	sub
	store8! &3 	#X2
.L5.l_o53a99f:
	# CBRANCH EQ0
	load8! &2 	#X2
	jump_not_zero! .L7.l_o53a99f
	# END CBRANCH
	push! 4
	push! &0
	add! 64
	#peep - pop(deadreg)+pusharg
	call! deflate
	store8! &2

	store8! &0 #set_sp! &1
	load4! &0 	#AR
	store8! &4 	#X3
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_not_zero! .L9.l_o53a99f
	# END CBRANCH
.L8.l_o53a99f:
	load4! &11
	store8! &1 	#AR
	load4! &8
	store8! &2 	#X1
	jump! .L10.l_o53a99f
.L7.l_o53a99f:
	push! 0
	push! &0
	add! 64
	#peep - pop(deadreg)+pusharg
	call! deflate
	store8! &2

	store8! &0 #set_sp! &1
	load4! &0 	#AR
	store8! &4 	#X3
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_zero! .L8.l_o53a99f
	# END CBRANCH
.L9.l_o53a99f:
	load8! &12
	load8! &6 	#X5
	store8
	#
	push! &0
	add! 56
	#peep - pop(deadreg)+pusharg
	call! deflateEnd
	store8! &1

	# CBRANCH EQ
	load4! &3 	#X3
	push! 1
	xor
	jump_zero! .L1.l_o53a99f
	# END CBRANCH
	load4! &3 	#X3
	store8! &7 	#X6
.L1.l_o53a99f:
	load4! &6 	#X6
	store4! &23

	# epilogue
	set_sp! &21
	return

# FUNCTION ENDS:compress2


# FUNCTION BEGINS:compress
	EXPORT	compress
compress:
	# prologue (1 GPRs)
	push! 0

	push! -1
	load8! &6
	load8! &6
	load8! &6
	load8! &6
	call! compress2
	store8! &5

	set_sp! &4
	load4! &0 	#AR
	store4! &3

	# epilogue
	store8! &0 #set_sp! &1
	return

# FUNCTION ENDS:compress

	#peephole pop+push+commut(di)
	#peephole pop+move2(deadreg)

# FUNCTION BEGINS:compressBound
	EXPORT	compressBound
compressBound:
	# prologue (4 GPRs)
	push! 0
	push! 0
	push! 0
	push! 0

	load8! &5
	store8! &1 	#AR
	load8! &0 	#AR
	shift_ru! 12
	store8! &3 	#X2
	load8! &0 	#AR
	add! 13
	store8! &2 	#X1
	load8! &0 	#AR
	shift_ru! 14
	store8! &4 	#X3
	load8! &2 	#X2
	load8! &2 	#X1
	add
	store8! &3 	#X2
	load8! &0 	#AR
	shift_ru! 25
	store8! &2 	#X1
	load8! &3 	#X3
	load8! &3 	#X2
	add
	load8! &2 	#X1
	add
	store8! &6

	# epilogue
	set_sp! &4
	return

# FUNCTION ENDS:compressBound

#	IMPORT deflateEnd
#	IMPORT deflate
#	IMPORT deflateInit_
#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: of769c0
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"uncompr.c"
#	.text
.LC0.l_of769c0:
#	.string "1.2.11"
	data1 [ 49 46 50 46 49 49 0 ]
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop+cmp
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole zero_extend
	#peephole pop+push+sub
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+cmprev
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole move
	#peephole move+move(allmodes x allmodes)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole move
	#peephole move+move(allmodes x allmodes)
	#peephole move
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole redundant blockage insn
	#peephole move

# FUNCTION BEGINS:uncompress2
	EXPORT	uncompress2
uncompress2:
	# prologue (9 GPRs)

	set_sp! &-24

	load8! &25
	store8! &9 	#X8
	load8! &26
	store8! &8 	#X7
	load8! &28
	store8! &7 	#X6
	load8! &6 	#X6
	load8
	#
	store8! &4 	#X3
	load8! &7 	#X7
	load8
	#
	store8! &3 	#X2
	# CBRANCH EQ0
	load8! &2 	#X2
	jump_zero! .L16.l_of769c0
	# END CBRANCH
	push! 0
	load8! &8 	#X7
	store8
	#
.L2.l_of769c0:
	load8! &27
	store8! &11
	push! 0
	store4! &12
	push! 0
	store8! &19
	push! 0
	store8! &20
	push! 0
	store8! &21
	push! 112
	push! .LC0.l_of769c0
	push! &0
	add! 96
	#peep - pop(deadreg)+pusharg
	call! inflateInit_
	store8! &3

	set_sp! &2
	load4! &0 	#AR
	store8! &6 	#X5
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_not_zero! .L1.l_of769c0
	# END CBRANCH
	load8! &8 	#X8
	store8! &14
	push! 0
	store4! &15
	push! 0
	store8! &1 	#AR
.L10.l_of769c0:
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_not_zero! .L4.l_of769c0
	# END CBRANCH
	load8! &2 	#X2
	store8! &1 	#AR
	# CBRANCH
	push! 4294967295
	load8! &3 	#X2
	lt_u
	jump_zero! .L5.l_of769c0
	# END CBRANCH
	push! 4294967295
	store8! &1 	#AR
.L5.l_of769c0:
	load4! &0 	#AR
	store4! &15
	load8! &2 	#X2
	load8! &1 	#AR
	sub
	store8! &3 	#X2
.L4.l_of769c0:
	# CBRANCH EQ0
	load4! &11
	jump_not_zero! .L6.l_of769c0
	# END CBRANCH
	load8! &3 	#X3
	store8! &1 	#AR
	# CBRANCH
	push! 4294967295
	load8! &4 	#X3
	lt_u
	jump_zero! .L7.l_of769c0
	# END CBRANCH
	push! 4294967295
	store8! &1 	#AR
.L7.l_of769c0:
	load4! &0 	#AR
	store4! &12
	load8! &3 	#X3
	load8! &1 	#AR
	sub
	store8! &4 	#X3
	push! 0
	push! &0
	add! 88
	#peep - pop(deadreg)+pusharg
	call! inflate
	store8! &2

	store8! &0 #set_sp! &1
	load4! &0 	#AR
	store8! &5 	#X4
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_not_zero! .L9.l_of769c0
	# END CBRANCH
.L8.l_of769c0:
	load4! &14
	store8! &1 	#AR
	jump! .L10.l_of769c0
.L6.l_of769c0:
	push! 0
	push! &0
	add! 88
	#peep - pop(deadreg)+pusharg
	call! inflate
	store8! &2

	store8! &0 #set_sp! &1
	load4! &0 	#AR
	store8! &5 	#X4
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_zero! .L8.l_of769c0
	# END CBRANCH
.L9.l_of769c0:
	load8! &6 	#X6
	load8
	#
	store8! &2 	#X1
	load4! &11
	load8! &2 	#X1
	sub
	neg
	load8! &4 	#X3
	sub
	load8! &7 	#X6
	store8
	#
	load8! &15
	store8! &1 	#AR
	push! &0
	add! 72
	# CBRANCH - peep (modesize=8)
	# - EQ
	load8! &9 	#X8
	xor
	jump_zero! .L11.l_of769c0
	# END CBRANCH
	load8! &0 	#AR
	load8! &8 	#X7
	store8
	#
.L12.l_of769c0:
	push! &0
	add! 80
	#peep - pop(deadreg)+pusharg
	call! inflateEnd
	store8! &1

	# CBRANCH EQ
	load4! &4 	#X4
	push! 1
	xor
	jump_zero! .L1.l_of769c0
	# END CBRANCH
	# CBRANCH EQ
	load4! &4 	#X4
	push! 2
	xor
	jump_zero! .L15.l_of769c0
	# END CBRANCH
	# CBRANCH EQ
	load4! &4 	#X4
	push! 4294967291
	xor
	jump_zero! .L29.l_of769c0
	# END CBRANCH
	load4! &4 	#X4
	store8! &6 	#X5
.L1.l_of769c0:
	load4! &5 	#X5
	store4! &26
	jump! .L30.l_of769c0
.L16.l_of769c0:
	push! 1
	store8! &3 	#X2
	push! &0
	add! 72
	store8! &9 	#X8
	jump! .L2.l_of769c0
.L11.l_of769c0:
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L12.l_of769c0
	# END CBRANCH
	# CBRANCH
	load4! &4 	#X4
	push! 4294967291
	xor
	push! 1
	lt_u
	jump_zero! .L12.l_of769c0
	# END CBRANCH
	push! &0
	add! 80
	#peep - pop(deadreg)+pusharg
	call! inflateEnd
	store8! &1

.L15.l_of769c0:
	push! -3
	store8! &6 	#X5
	load4! &5 	#X5
	store4! &26
	jump! .L30.l_of769c0
.L29.l_of769c0:
	load4! &14
	load8! &3 	#X2
	add
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_not_zero! .L15.l_of769c0
	# END CBRANCH
	push! -5
	store8! &6 	#X5
	load4! &5 	#X5
	store4! &26
.L30.l_of769c0:

	# epilogue
	set_sp! &24
	return

# FUNCTION ENDS:uncompress2

	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg

# FUNCTION BEGINS:uncompress
	EXPORT	uncompress
uncompress:
	# prologue (1 GPRs)
	push! 0

	push! &0
	add! 40
	#peep - pop(deadreg)+pusharg
	load8! &5
	load8! &5
	load8! &5
	call! uncompress2
	store8! &4

	set_sp! &3
	load4! &0 	#AR
	store4! &3

	# epilogue
	store8! &0 #set_sp! &1
	return

# FUNCTION ENDS:uncompress

#	IMPORT inflateEnd
#	IMPORT inflate
#	IMPORT inflateInit_
#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: o0c6f06
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"gzclose.c"
#	.text
	#peephole pop+cmp

# FUNCTION BEGINS:gzclose
	EXPORT	gzclose
gzclose:
	# prologue (2 GPRs)
	push! 0
	push! 0

	load8! &3
	store8! &1 	#AR
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L4.l_o0c6f06
	# END CBRANCH
	load8! &0 	#AR
	add! 24
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ
	push! 7247
	xor
	jump_zero! .L7.l_o0c6f06
	# END CBRANCH
	load8! &0 	#AR
	call! gzclose_w
	store8! &1

	load4! &0 	#AR
	store4! &4
	jump! .L8.l_o0c6f06
.L7.l_o0c6f06:
	load8! &0 	#AR
	call! gzclose_r
	store8! &1

	load4! &0 	#AR
	store4! &4
	jump! .L8.l_o0c6f06
.L4.l_o0c6f06:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &4
.L8.l_o0c6f06:

	# epilogue
	set_sp! &2
	return

# FUNCTION ENDS:gzclose

#	IMPORT gzclose_r
#	IMPORT gzclose_w
#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: o5ad0d9
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"gzlib.c"
#	.text
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole pop+cmp
	#peephole pop+block+cmp
	#peephole popdi+cmp

# FUNCTION BEGINS:gzbuffer
	EXPORT	gzbuffer
gzbuffer:
	# prologue (3 GPRs)
	push! 0
	push! 0
	push! 0

	load8! &4
	store8! &2 	#X1
	load4! &5
	store8! &1 	#AR
	# CBRANCH EQ0
	load8! &1 	#X1
	jump_zero! .L5.l_o5ad0d9
	# END CBRANCH
	load8! &1 	#X1
	add! 24
	load4
	#
	store8! &3 	#X2
	# CBRANCH EQ
	load4! &2 	#X2
	push! 7247
	xor
	jump_zero! .L3.l_o5ad0d9
	# END CBRANCH
	# CBRANCH
	load4! &2 	#X2
	push! 31153
	xor
	push! 1
	lt_u
	jump_zero! .L6.l_o5ad0d9
	# END CBRANCH
.L3.l_o5ad0d9:
	load8! &1 	#X1
	add! 40
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_not_zero! .L7.l_o5ad0d9
	# END CBRANCH
	load8! &0 	#AR
	load8! &1 	#AR
	add
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	load4! &1 	#AR
	lt_u
	not
	jump_zero! .L8.l_o5ad0d9
	# END CBRANCH
	# CBRANCH
	load4! &0 	#AR
	push! 2
	lt_u
	not
	jump_zero! .L14.l_o5ad0d9
	# END CBRANCH
	load4! &0 	#AR
	load8! &2 	#X1
	add! 44
	store4
	#
	push! 0
	store8! &1 	#AR
.L1.l_o5ad0d9:
	load4! &0 	#AR
	store4! &5
	jump! .L15.l_o5ad0d9
.L14.l_o5ad0d9:
	push! 2
	store8! &1 	#AR
	load4! &0 	#AR
	load8! &2 	#X1
	add! 44
	store4
	#
	push! 0
	store8! &1 	#AR
	jump! .L1.l_o5ad0d9
.L6.l_o5ad0d9:
	push! -1
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
	jump! .L15.l_o5ad0d9
.L7.l_o5ad0d9:
	push! -1
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
	jump! .L15.l_o5ad0d9
.L8.l_o5ad0d9:
	push! -1
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
	jump! .L15.l_o5ad0d9
.L5.l_o5ad0d9:
	push! -1
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
.L15.l_o5ad0d9:

	# epilogue
	set_sp! &3
	return

# FUNCTION ENDS:gzbuffer

	#peephole pop+push+commut(di)
	#peephole pop+cmp
	#peephole redundant blockage insn

# FUNCTION BEGINS:gztell64
	EXPORT	gztell64
gztell64:
	# prologue (3 GPRs)
	push! 0
	push! 0
	push! 0

	load8! &4
	store8! &1 	#AR
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L20.l_o5ad0d9
	# END CBRANCH
	load8! &0 	#AR
	add! 24
	load4
	#
	store8! &2 	#X1
	# CBRANCH EQ
	load4! &1 	#X1
	push! 7247
	xor
	jump_zero! .L18.l_o5ad0d9
	# END CBRANCH
	# CBRANCH
	load4! &1 	#X1
	push! 31153
	xor
	push! 1
	lt_u
	jump_zero! .L21.l_o5ad0d9
	# END CBRANCH
.L18.l_o5ad0d9:
	load8! &0 	#AR
	add! 16
	load8
	#
	store8! &2 	#X1
	load8! &0 	#AR
	add! 104
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L16.l_o5ad0d9
	# END CBRANCH
	load8! &0 	#AR
	add! 96
	load8
	#
	load8! &2 	#X1
	add
	store8! &2 	#X1
.L16.l_o5ad0d9:
	load8! &1 	#X1
	store8! &5
	jump! .L30.l_o5ad0d9
.L21.l_o5ad0d9:
	push! -1
	store8! &2 	#X1
	load8! &1 	#X1
	store8! &5
	jump! .L30.l_o5ad0d9
.L20.l_o5ad0d9:
	push! -1
	store8! &2 	#X1
	load8! &1 	#X1
	store8! &5
.L30.l_o5ad0d9:

	# epilogue
	set_sp! &3
	return

# FUNCTION ENDS:gztell64


# FUNCTION BEGINS:gztell
	EXPORT	gztell
gztell:
	# prologue (1 GPRs)
	push! 0

	load8! &2
	call! gztell64
	store8! &1

	load8! &0 	#AR
	store8! &3

	# epilogue
	store8! &0 #set_sp! &1
	return

# FUNCTION ENDS:gztell

	#peephole pop(deadreg)+push
	#peephole pop+push+sub
	#peephole pop+cmp
	#peephole redundant blockage insn

# FUNCTION BEGINS:gzoffset64
	EXPORT	gzoffset64
gzoffset64:
	# prologue (3 GPRs)
	push! 0
	push! 0
	push! 0

	load8! &4
	store8! &3 	#X2
	# CBRANCH EQ0
	load8! &2 	#X2
	jump_zero! .L37.l_o5ad0d9
	# END CBRANCH
	load8! &2 	#X2
	add! 24
	load4
	#
	store8! &1 	#AR
	# CBRANCH EQ
	load4! &0 	#AR
	push! 7247
	xor
	jump_zero! .L36.l_o5ad0d9
	# END CBRANCH
	# CBRANCH
	load4! &0 	#AR
	push! 31153
	xor
	push! 1
	lt_u
	jump_zero! .L37.l_o5ad0d9
	# END CBRANCH
.L36.l_o5ad0d9:
	load8! &2 	#X2
	add! 28
	load4
	#
	store8! &1 	#AR
	push! 1
	push! 0
	load4! &2 	#AR
	call! lseek
	store8! &3

	set_sp! &2
	# CBRANCH EQ
	load8! &0 	#AR
	push! -1
	xor
	jump_zero! .L37.l_o5ad0d9
	# END CBRANCH
	load8! &2 	#X2
	add! 24
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ
	push! 7247
	xor
	jump_zero! .L46.l_o5ad0d9
	# END CBRANCH
	load8! &0 	#AR
	store8! &5
	jump! .L47.l_o5ad0d9
.L46.l_o5ad0d9:
	load8! &2 	#X2
	add! 128
	load4
	#
	and! 0x0ffffffff
	load8! &1 	#AR
	sub
	neg
	store8! &1 	#AR
	load8! &0 	#AR
	store8! &5
	jump! .L47.l_o5ad0d9
.L37.l_o5ad0d9:
	push! -1
	store8! &1 	#AR
	load8! &0 	#AR
	store8! &5
.L47.l_o5ad0d9:

	# epilogue
	set_sp! &3
	return

# FUNCTION ENDS:gzoffset64


# FUNCTION BEGINS:gzoffset
	EXPORT	gzoffset
gzoffset:
	# prologue (1 GPRs)
	push! 0

	load8! &2
	call! gzoffset64
	store8! &1

	load8! &0 	#AR
	store8! &3

	# epilogue
	store8! &0 #set_sp! &1
	return

# FUNCTION ENDS:gzoffset

	#peephole pop+cmp

# FUNCTION BEGINS:gzeof
	EXPORT	gzeof
gzeof:
	# prologue (2 GPRs)
	push! 0
	push! 0

	load8! &3
	store8! &1 	#AR
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L52.l_o5ad0d9
	# END CBRANCH
	load8! &0 	#AR
	add! 24
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ
	push! 7247
	xor
	jump_zero! .L56.l_o5ad0d9
	# END CBRANCH
	push! 0
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &4
	jump! .L57.l_o5ad0d9
.L56.l_o5ad0d9:
	load8! &0 	#AR
	add! 84
	load4
	#
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &4
	jump! .L57.l_o5ad0d9
.L52.l_o5ad0d9:
	push! 0
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &4
.L57.l_o5ad0d9:

	# epilogue
	set_sp! &2
	return

# FUNCTION ENDS:gzeof

.LC0.l_o5ad0d9:
#	.string ""
	data1 [ 0 ]
.LC1.l_o5ad0d9:
#	.string "out of memory"
	data1 [ 111 117 116 32 111 102 32 109 101 109 111 114 121 0 ]

# FUNCTION BEGINS:gzerror
	EXPORT	gzerror
gzerror:
	# prologue (3 GPRs)
	push! 0
	push! 0
	push! 0

	load8! &4
	store8! &1 	#AR
	load8! &5
	store8! &3 	#X2
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L62.l_o5ad0d9
	# END CBRANCH
	load8! &0 	#AR
	add! 24
	load4
	#
	store8! &2 	#X1
	# CBRANCH EQ
	load4! &1 	#X1
	push! 7247
	xor
	jump_zero! .L60.l_o5ad0d9
	# END CBRANCH
	# CBRANCH
	load4! &1 	#X1
	push! 31153
	xor
	push! 1
	lt_u
	jump_zero! .L63.l_o5ad0d9
	# END CBRANCH
.L60.l_o5ad0d9:
	load8! &0 	#AR
	add! 108
	load4
	#
	store8! &2 	#X1
	# CBRANCH EQ0
	load8! &2 	#X2
	jump_zero! .L61.l_o5ad0d9
	# END CBRANCH
	load4! &1 	#X1
	load8! &3 	#X2
	store4
	#
	load8! &0 	#AR
	add! 108
	load4
	#
	store8! &2 	#X1
.L61.l_o5ad0d9:
	# CBRANCH EQ
	load4! &1 	#X1
	push! 4294967292
	xor
	jump_zero! .L64.l_o5ad0d9
	# END CBRANCH
	load8! &0 	#AR
	add! 112
	load8
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L74.l_o5ad0d9
	# END CBRANCH
	load8! &0 	#AR
	store8! &5
	jump! .L75.l_o5ad0d9
.L64.l_o5ad0d9:
	push! .LC1.l_o5ad0d9
	store8! &1 	#AR
	load8! &0 	#AR
	store8! &5
	jump! .L75.l_o5ad0d9
.L63.l_o5ad0d9:
	push! 0
	store8! &1 	#AR
	load8! &0 	#AR
	store8! &5
	jump! .L75.l_o5ad0d9
.L74.l_o5ad0d9:
	push! .LC0.l_o5ad0d9
	store8! &1 	#AR
	load8! &0 	#AR
	store8! &5
	jump! .L75.l_o5ad0d9
.L62.l_o5ad0d9:
	push! 0
	store8! &1 	#AR
	load8! &0 	#AR
	store8! &5
.L75.l_o5ad0d9:

	# epilogue
	set_sp! &3
	return

# FUNCTION ENDS:gzerror

.LC2.l_o5ad0d9:
#	.string ":"
	data1 [ 58 32 0 ]
.LC3.l_o5ad0d9:
#	.string "%s%s%s"
	data1 [ 37 115 37 115 37 115 0 ]
	#peephole binop1+deadreg+binop2
	#peephole binop1+deadreg+binop2
	#peephole pop+pusharg
	#peephole pop+cmp

# FUNCTION BEGINS:gz_error
	EXPORT	gz_error
gz_error:
	# prologue (6 GPRs)

	set_sp! &-6

	load8! &7
	store8! &3 	#X2
	load4! &8
	store8! &4 	#X3
	load8! &9
	store8! &5 	#X4
	load8! &2 	#X2
	add! 112
	load8
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L77.l_o5ad0d9
	# END CBRANCH
	load8! &2 	#X2
	add! 108
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	push! 4294967292
	xor
	push! 1
	lt_u
	jump_zero! .L105.l_o5ad0d9
	# END CBRANCH
	push! 0
	load8! &3 	#X2
	add! 112
	store8
	#
.L77.l_o5ad0d9:
	# CBRANCH EQ0
	load4! &3 	#X3
	jump_zero! .L79.l_o5ad0d9
	# END CBRANCH
	# CBRANCH EQ
	load4! &3 	#X3
	push! 4294967291
	xor
	jump_zero! .L79.l_o5ad0d9
	# END CBRANCH
	push! 0
	load8! &3 	#X2
	store4
	#
	load4! &3 	#X3
	load8! &3 	#X2
	add! 108
	store4
	#
	# CBRANCH EQ0
	load8! &4 	#X4
	jump_zero! .L76.l_o5ad0d9
	# END CBRANCH
	# CBRANCH
	load4! &3 	#X3
	push! 4294967292
	xor
	push! 1
	lt_u
	jump_zero! .L84.l_o5ad0d9
	# END CBRANCH
.L76.l_o5ad0d9:
	jump! .L106.l_o5ad0d9
.L79.l_o5ad0d9:
	load4! &3 	#X3
	load8! &3 	#X2
	add! 108
	store4
	#
	# CBRANCH EQ0
	load8! &4 	#X4
	jump_zero! .L76.l_o5ad0d9
	# END CBRANCH
.L84.l_o5ad0d9:
	load8! &2 	#X2
	add! 32
	load8
	#
	store8! &6 	#X5
	load8! &5 	#X5
	call! strlen
	store8! &1

	load8! &0 	#AR
	store8! &4 	#X3
	load8! &4 	#X4
	call! strlen
	store8! &1

	load8! &3 	#X3
	load8! &1 	#AR
	add
	add! 3
	#peep - pop(deadreg)+pusharg
	call! malloc
	store8! &1

	load8! &0 	#AR
	store8! &4 	#X3
	load8! &0 	#AR
	load8! &3 	#X2
	add! 112
	store8
	#
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L107.l_o5ad0d9
	# END CBRANCH
	load8! &5 	#X5
	call! strlen
	store8! &1

	load8! &0 	#AR
	store8! &3 	#X2
	load8! &4 	#X4
	call! strlen
	store8! &1

	load8! &2 	#X2
	load8! &1 	#AR
	add
	add! 3
	store8! &1 	#AR
	load8! &4 	#X4
	push! .LC2.l_o5ad0d9
	load8! &7 	#X5
	push! .LC3.l_o5ad0d9
	load8! &4 	#AR
	load8! &8 	#X3
	call! snprintf
	store8! &6

	set_sp! &5
	jump! .L106.l_o5ad0d9
.L105.l_o5ad0d9:
	load8! &0 	#AR
	call! free
	set_sp! (+ &0 8)
	

	push! 0
	load8! &3 	#X2
	add! 112
	store8
	#
	jump! .L77.l_o5ad0d9
.L107.l_o5ad0d9:
	push! -4
	load8! &3 	#X2
	add! 108
	store4
	#
.L106.l_o5ad0d9:

	# epilogue
	set_sp! &6
	return

# FUNCTION ENDS:gz_error

.LC4.l_o5ad0d9:
#	.string "%s"
	data1 [ 37 115 0 ]
	#peephole pop+pusharg
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole pop+cmp
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole popdi(deadreg)+push
	#peephole and+popsi

# FUNCTION BEGINS:gz_open
gz_open.s_o5ad0d9:
	# prologue (6 GPRs)

	set_sp! &-6

	load8! &9
	store8! &3 	#X2
	# CBRANCH EQ0
	load8! &7
	jump_zero! .L111.l_o5ad0d9
	# END CBRANCH
	push! 232
	call! malloc
	store8! &1

	load8! &0 	#AR
	store8! &4 	#X3
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L111.l_o5ad0d9
	# END CBRANCH
	push! 35184372088832
	load8! &1 	#AR
	add! 40
	store8
	#
	push! 0
	load8! &1 	#AR
	add! 112
	store8
	#
	push! 0
	load8! &1 	#AR
	add! 24
	store4
	#
	push! 4294967295
	load8! &1 	#AR
	add! 88
	store8
	#
	push! 0
	load8! &1 	#AR
	add! 64
	store4
	#
	load8! &2 	#X2
	load1
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load1! &0 	#AR
	jump_zero! .L127.l_o5ad0d9
	# END CBRANCH
	push! 0
	store8! &6 	#X5
	push! 0
	store8! &5 	#X4
.L112.l_o5ad0d9:
	load8! &0 	#AR
	add! -48
	store8! &2 	#X1
	# CBRANCH
	push! 9
	load1! &2 	#X1
	lt_u
	not
	jump_zero! .L113.l_o5ad0d9
	# END CBRANCH
	load1! &0 	#AR
	sigx1
	add! -48
	load8! &4 	#X3
	add! 88
	store4
	#
.L114.l_o5ad0d9:
	load8! &2 	#X2
	add! 1
	store8! &3 	#X2
	load8! &2 	#X2
	load1
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load1! &0 	#AR
	jump_not_zero! .L112.l_o5ad0d9
	# END CBRANCH
.L167.l_o5ad0d9:
	load8! &3 	#X3
	add! 24
	load4
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_zero! .L127.l_o5ad0d9
	# END CBRANCH
	# CBRANCH
	load4! &0 	#AR
	push! 7247
	xor
	push! 1
	lt_u
	jump_zero! .L128.l_o5ad0d9
	# END CBRANCH
	load8! &3 	#X3
	add! 64
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_not_zero! .L158.l_o5ad0d9
	# END CBRANCH
	push! 1
	load8! &4 	#X3
	add! 64
	store4
	#
.L128.l_o5ad0d9:
	load8! &7
	call! strlen
	store8! &1

	load8! &0 	#AR
	add! 1
	store8! &3 	#X2
	load8! &2 	#X2
	call! malloc
	store8! &1

	load8! &0 	#AR
	load8! &4 	#X3
	add! 32
	store8
	#
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L159.l_o5ad0d9
	# END CBRANCH
	load8! &7
	push! .LC4.l_o5ad0d9
	load8! &4 	#X2
	load8! &3 	#AR
	call! snprintf
	store8! &4

	set_sp! &3
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_not_zero! .L160.l_o5ad0d9
	# END CBRANCH
.L131.l_o5ad0d9:
	load8! &3 	#X3
	add! 24
	load4
	#
	store8! &1 	#AR
	# CBRANCH EQ
	load4! &0 	#AR
	push! 7247
	xor
	jump_zero! .L132.l_o5ad0d9
	# END CBRANCH
	# CBRANCH EQ0
	load4! &5 	#X5
	jump_zero! .L161.l_o5ad0d9
	# END CBRANCH
	push! 2569
	store8! &2 	#X1
	push! 3585
	store8! &3 	#X2
	# CBRANCH EQ
	load4! &0 	#AR
	push! 31153
	xor
	jump_zero! .L162.l_o5ad0d9
	# END CBRANCH
.L134.l_o5ad0d9:
	load8! &1 	#X1
	load8! &5 	#X4
	or
	store8! &5 	#X4
.L132.l_o5ad0d9:
	# CBRANCH
	load4! &8
	add! -2147483648
	push! 0
	add! -2147483648
	lt_u
	not
	jump_zero! .L163.l_o5ad0d9
	# END CBRANCH
	load4! &8
	load8! &4 	#X3
	add! 28
	store4
	#
.L142.l_o5ad0d9:
	# CBRANCH EQ
	load4! &0 	#AR
	push! 1
	xor
	jump_zero! .L164.l_o5ad0d9
	# END CBRANCH
	# CBRANCH EQ
	load4! &0 	#AR
	push! 7247
	xor
	jump_zero! .L165.l_o5ad0d9
	# END CBRANCH
	push! 0
	load8! &4 	#X3
	store4
	#
.L138.l_o5ad0d9:
	push! 0
	load8! &4 	#X3
	add! 104
	store4
	#
	push! 0
	push! 0
	load8! &5 	#X3
	call! gz_error
	set_sp! (+ &0 24)
	

	push! 0
	load8! &4 	#X3
	add! 16
	store8
	#
	push! 0
	load8! &4 	#X3
	add! 128
	store4
	#
.L108.l_o5ad0d9:
	load8! &3 	#X3
	store8! &8
	jump! .L166.l_o5ad0d9
.L113.l_o5ad0d9:
	load1! &0 	#AR
	sigx1
	store8! &1 	#AR
	#CASESI
	push! 77
	load4! &1 	#AR
	sigx4
	add! -43
	lt_u
	not
	jump_zero! .L114.l_o5ad0d9
	load4! &0 	#AR
	sigx4
	add! -43
	mult! 8
	add! .L116.l_o5ad0d9
	load8
	add! .L116.l_o5ad0d9
	jump
	##
.L116.l_o5ad0d9:
	data8 [(+ .L126.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L114.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L114.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L114.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L114.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L114.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L114.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L114.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L114.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L114.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L114.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L114.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L114.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L114.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L114.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L114.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L114.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L114.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L114.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L114.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L114.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L114.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L114.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L114.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L114.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L114.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L114.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L125.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L114.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L114.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L114.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L114.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L114.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L114.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L114.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L114.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L114.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L114.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L114.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L124.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L114.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L123.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L114.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L114.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L114.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L114.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L114.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L114.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L114.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L114.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L114.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L114.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L114.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L114.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L122.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L114.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L114.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L114.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L121.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L120.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L114.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L119.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L114.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L114.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L114.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L114.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L114.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L114.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L114.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L114.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L114.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L118.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L114.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L114.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L114.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L114.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L117.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
	data8 [(+ .L115.l_o5ad0d9 -.L116.l_o5ad0d9)]#rel casesi entry
.L117.l_o5ad0d9:
	push! 31153
	load8! &4 	#X3
	add! 24
	store4
	#
	load8! &2 	#X2
	add! 1
	store8! &3 	#X2
	load8! &2 	#X2
	load1
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load1! &0 	#AR
	jump_not_zero! .L112.l_o5ad0d9
	# END CBRANCH
	jump! .L167.l_o5ad0d9
.L118.l_o5ad0d9:
	push! 7247
	load8! &4 	#X3
	add! 24
	store4
	#
	load8! &2 	#X2
	add! 1
	store8! &3 	#X2
	load8! &2 	#X2
	load1
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load1! &0 	#AR
	jump_not_zero! .L112.l_o5ad0d9
	# END CBRANCH
	jump! .L167.l_o5ad0d9
.L119.l_o5ad0d9:
	push! 2
	load8! &4 	#X3
	add! 92
	store4
	#
	load8! &2 	#X2
	add! 1
	store8! &3 	#X2
	load8! &2 	#X2
	load1
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load1! &0 	#AR
	jump_not_zero! .L112.l_o5ad0d9
	# END CBRANCH
	jump! .L167.l_o5ad0d9
.L120.l_o5ad0d9:
	push! 1
	load8! &4 	#X3
	add! 92
	store4
	#
	load8! &2 	#X2
	add! 1
	store8! &3 	#X2
	load8! &2 	#X2
	load1
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load1! &0 	#AR
	jump_not_zero! .L112.l_o5ad0d9
	# END CBRANCH
	jump! .L167.l_o5ad0d9
.L121.l_o5ad0d9:
	push! 1
	store8! &5 	#X4
	load8! &2 	#X2
	add! 1
	store8! &3 	#X2
	load8! &2 	#X2
	load1
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load1! &0 	#AR
	jump_not_zero! .L112.l_o5ad0d9
	# END CBRANCH
	jump! .L167.l_o5ad0d9
.L115.l_o5ad0d9:
	push! 1
	store8! &6 	#X5
	load8! &2 	#X2
	add! 1
	store8! &3 	#X2
	load8! &2 	#X2
	load1
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load1! &0 	#AR
	jump_not_zero! .L112.l_o5ad0d9
	# END CBRANCH
	jump! .L167.l_o5ad0d9
.L122.l_o5ad0d9:
	push! 1
	load8! &4 	#X3
	add! 24
	store4
	#
	load8! &2 	#X2
	add! 1
	store8! &3 	#X2
	load8! &2 	#X2
	load1
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load1! &0 	#AR
	jump_not_zero! .L112.l_o5ad0d9
	# END CBRANCH
	jump! .L167.l_o5ad0d9
.L123.l_o5ad0d9:
	push! 1
	load8! &4 	#X3
	add! 64
	store4
	#
	load8! &2 	#X2
	add! 1
	store8! &3 	#X2
	load8! &2 	#X2
	load1
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load1! &0 	#AR
	jump_not_zero! .L112.l_o5ad0d9
	# END CBRANCH
	jump! .L167.l_o5ad0d9
.L124.l_o5ad0d9:
	push! 3
	load8! &4 	#X3
	add! 92
	store4
	#
	load8! &2 	#X2
	add! 1
	store8! &3 	#X2
	load8! &2 	#X2
	load1
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load1! &0 	#AR
	jump_not_zero! .L112.l_o5ad0d9
	# END CBRANCH
	jump! .L167.l_o5ad0d9
.L125.l_o5ad0d9:
	push! 4
	load8! &4 	#X3
	add! 92
	store4
	#
	load8! &2 	#X2
	add! 1
	store8! &3 	#X2
	load8! &2 	#X2
	load1
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load1! &0 	#AR
	jump_not_zero! .L112.l_o5ad0d9
	# END CBRANCH
	jump! .L167.l_o5ad0d9
.L126.l_o5ad0d9:
	load8! &3 	#X3
	call! free
	set_sp! (+ &0 8)
	

	push! 0
	store8! &4 	#X3
	load8! &3 	#X3
	store8! &8
	jump! .L166.l_o5ad0d9
.L111.l_o5ad0d9:
	push! 0
	store8! &4 	#X3
	load8! &3 	#X3
	store8! &8
	jump! .L166.l_o5ad0d9
.L160.l_o5ad0d9:
	push! 262144
	store8! &5 	#X4
	jump! .L131.l_o5ad0d9
.L161.l_o5ad0d9:
	push! 521
	store8! &2 	#X1
	push! 1537
	store8! &3 	#X2
	# CBRANCH
	load4! &0 	#AR
	push! 31153
	xor
	push! 1
	lt_u
	jump_zero! .L134.l_o5ad0d9
	# END CBRANCH
.L162.l_o5ad0d9:
	load4! &2 	#X2
	store8! &2 	#X1
	load8! &1 	#X1
	load8! &5 	#X4
	or
	store8! &5 	#X4
	jump! .L132.l_o5ad0d9
.L163.l_o5ad0d9:
	push! 438
	load4! &5 	#X4
	load8! &9
	call! open
	store8! &3

	set_sp! &2
	load4! &0 	#AR
	store4! &9
	load4! &0 	#AR
	load8! &4 	#X3
	add! 28
	store4
	#
	# CBRANCH EQ
	load4! &0 	#AR
	push! 4294967295
	xor
	jump_zero! .L168.l_o5ad0d9
	# END CBRANCH
	load8! &3 	#X3
	add! 24
	load4
	#
	store8! &1 	#AR
	jump! .L142.l_o5ad0d9
.L164.l_o5ad0d9:
	push! 2
	push! 0
	load4! &10
	call! lseek
	store8! &3

	set_sp! &2
	push! 31153
	load8! &4 	#X3
	add! 24
	store4
	#
	push! 0
	load8! &4 	#X3
	store4
	#
	push! 0
	load8! &4 	#X3
	add! 104
	store4
	#
	push! 0
	push! 0
	load8! &5 	#X3
	call! gz_error
	set_sp! (+ &0 24)
	

	push! 0
	load8! &4 	#X3
	add! 16
	store8
	#
	push! 0
	load8! &4 	#X3
	add! 128
	store4
	#
	jump! .L108.l_o5ad0d9
.L165.l_o5ad0d9:
	push! 1
	push! 0
	load4! &10
	call! lseek
	store8! &3

	set_sp! &2
	load8! &0 	#AR
	load8! &4 	#X3
	add! 72
	store8
	#
	# CBRANCH EQ
	load8! &0 	#AR
	push! -1
	xor
	jump_zero! .L140.l_o5ad0d9
	# END CBRANCH
	load8! &3 	#X3
	add! 24
	load4
	#
	store8! &1 	#AR
.L141.l_o5ad0d9:
	push! 0
	load8! &4 	#X3
	store4
	#
	# CBRANCH
	load4! &0 	#AR
	push! 7247
	xor
	push! 1
	lt_u
	jump_zero! .L138.l_o5ad0d9
	# END CBRANCH
	push! 0
	load8! &4 	#X3
	add! 80
	store8
	#
	push! 0
	load8! &4 	#X3
	add! 68
	store4
	#
	push! 0
	load8! &4 	#X3
	add! 104
	store4
	#
	push! 0
	push! 0
	load8! &5 	#X3
	call! gz_error
	set_sp! (+ &0 24)
	

	push! 0
	load8! &4 	#X3
	add! 16
	store8
	#
	push! 0
	load8! &4 	#X3
	add! 128
	store4
	#
	jump! .L108.l_o5ad0d9
.L140.l_o5ad0d9:
	push! 0
	load8! &4 	#X3
	add! 72
	store8
	#
	load8! &3 	#X3
	add! 24
	load4
	#
	store8! &1 	#AR
	jump! .L141.l_o5ad0d9
.L158.l_o5ad0d9:
	load8! &3 	#X3
	call! free
	set_sp! (+ &0 8)
	

	push! 0
	store8! &4 	#X3
	load8! &3 	#X3
	store8! &8
	jump! .L166.l_o5ad0d9
.L127.l_o5ad0d9:
	load8! &3 	#X3
	call! free
	set_sp! (+ &0 8)
	

	push! 0
	store8! &4 	#X3
	load8! &3 	#X3
	store8! &8
	jump! .L166.l_o5ad0d9
.L159.l_o5ad0d9:
	load8! &3 	#X3
	call! free
	set_sp! (+ &0 8)
	

	push! 0
	store8! &4 	#X3
	load8! &3 	#X3
	store8! &8
	jump! .L166.l_o5ad0d9
.L168.l_o5ad0d9:
	load8! &3 	#X3
	add! 32
	load8
	#
	#peep - pop(deadreg)+pusharg
	call! free
	set_sp! (+ &0 8)
	

	load8! &3 	#X3
	call! free
	set_sp! (+ &0 8)
	

	push! 0
	store8! &4 	#X3
	load8! &3 	#X3
	store8! &8
.L166.l_o5ad0d9:

	# epilogue
	set_sp! &6
	return

# FUNCTION ENDS:gz_open


# FUNCTION BEGINS:gzopen
	EXPORT	gzopen
gzopen:
	# prologue (1 GPRs)
	push! 0

	load8! &3
	push! -1
	load8! &4
	call! gz_open.s_o5ad0d9
	store8! &3

	set_sp! &2
	load8! &0 	#AR
	store8! &3

	# epilogue
	store8! &0 #set_sp! &1
	return

# FUNCTION ENDS:gzopen

.LC5.l_o5ad0d9:
#	.string "<fd:%d>"
	data1 [ 60 102 100 58 37 100 62 0 ]

# FUNCTION BEGINS:gzdopen
	EXPORT	gzdopen
gzdopen:
	# prologue (4 GPRs)
	push! 0
	push! 0
	push! 0
	push! 0

	load4! &5
	store8! &4 	#X3
	# CBRANCH EQ
	load4! &3 	#X3
	push! 4294967295
	xor
	jump_zero! .L174.l_o5ad0d9
	# END CBRANCH
	push! 19
	call! malloc
	store8! &1

	load8! &0 	#AR
	store8! &3 	#X2
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L174.l_o5ad0d9
	# END CBRANCH
	load4! &3 	#X3
	push! .LC5.l_o5ad0d9
	push! 19
	load8! &3 	#AR
	call! snprintf
	store8! &4

	set_sp! &3
	load8! &6
	load4! &4 	#X3
	load8! &4 	#X2
	call! gz_open.s_o5ad0d9
	store8! &3

	set_sp! &2
	load8! &0 	#AR
	store8! &4 	#X3
	load8! &2 	#X2
	call! free
	set_sp! (+ &0 8)
	

	load8! &3 	#X3
	store8! &6
	jump! .L180.l_o5ad0d9
.L174.l_o5ad0d9:
	push! 0
	store8! &4 	#X3
	load8! &3 	#X3
	store8! &6
.L180.l_o5ad0d9:

	# epilogue
	set_sp! &4
	return

# FUNCTION ENDS:gzdopen


# FUNCTION BEGINS:gzopen64
	EXPORT	gzopen64
gzopen64:
	# prologue (1 GPRs)
	push! 0

	load8! &3
	push! -1
	load8! &4
	call! gz_open.s_o5ad0d9
	store8! &3

	set_sp! &2
	load8! &0 	#AR
	store8! &3

	# epilogue
	store8! &0 #set_sp! &1
	return

# FUNCTION ENDS:gzopen64


# FUNCTION BEGINS:gzclearerr
	EXPORT	gzclearerr
gzclearerr:
	# prologue (2 GPRs)
	push! 0
	push! 0

	load8! &3
	store8! &1 	#AR
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L183.l_o5ad0d9
	# END CBRANCH
	load8! &0 	#AR
	add! 24
	load4
	#
	store8! &2 	#X1
	# CBRANCH EQ
	load4! &1 	#X1
	push! 7247
	xor
	jump_zero! .L185.l_o5ad0d9
	# END CBRANCH
	# CBRANCH EQ
	load4! &1 	#X1
	push! 31153
	xor
	jump_zero! .L186.l_o5ad0d9
	# END CBRANCH
.L183.l_o5ad0d9:
	jump! .L192.l_o5ad0d9
.L185.l_o5ad0d9:
	push! 0
	load8! &1 	#AR
	add! 80
	store8
	#
.L186.l_o5ad0d9:
	push! 0
	push! 0
	load8! &2 	#AR
	call! gz_error
	set_sp! (+ &0 24)
	

.L192.l_o5ad0d9:

	# epilogue
	set_sp! &2
	return

# FUNCTION ENDS:gzclearerr

	#peephole pop+cmp
	#peephole pop+cmp

# FUNCTION BEGINS:gzrewind
	EXPORT	gzrewind
gzrewind:
	# prologue (3 GPRs)
	push! 0
	push! 0
	push! 0

	load8! &4
	store8! &3 	#X2
	# CBRANCH EQ0
	load8! &2 	#X2
	jump_zero! .L196.l_o5ad0d9
	# END CBRANCH
	load8! &2 	#X2
	add! 24
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	push! 7247
	xor
	push! 1
	lt_u
	jump_zero! .L196.l_o5ad0d9
	# END CBRANCH
	load8! &2 	#X2
	add! 108
	load4
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_zero! .L197.l_o5ad0d9
	# END CBRANCH
	# CBRANCH
	load4! &0 	#AR
	push! 4294967291
	xor
	push! 1
	lt_u
	jump_zero! .L196.l_o5ad0d9
	# END CBRANCH
.L197.l_o5ad0d9:
	load8! &2 	#X2
	add! 72
	load8
	#
	store8! &2 	#X1
	load8! &2 	#X2
	add! 28
	load4
	#
	store8! &1 	#AR
	push! 0
	load8! &2 	#X1
	load4! &2 	#AR
	call! lseek
	store8! &3

	set_sp! &2
	# CBRANCH EQ
	load8! &0 	#AR
	push! -1
	xor
	jump_zero! .L196.l_o5ad0d9
	# END CBRANCH
	push! 0
	load8! &3 	#X2
	store4
	#
	load8! &2 	#X2
	add! 24
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ
	push! 7247
	xor
	jump_zero! .L207.l_o5ad0d9
	# END CBRANCH
	push! 0
	load8! &3 	#X2
	add! 104
	store4
	#
	push! 0
	push! 0
	load8! &4 	#X2
	call! gz_error
	set_sp! (+ &0 24)
	

	push! 0
	load8! &3 	#X2
	add! 16
	store8
	#
	push! 0
	load8! &3 	#X2
	add! 128
	store4
	#
	push! 0
	store8! &1 	#AR
.L193.l_o5ad0d9:
	load4! &0 	#AR
	store4! &5
	jump! .L208.l_o5ad0d9
.L207.l_o5ad0d9:
	push! 0
	load8! &3 	#X2
	add! 80
	store8
	#
	push! 0
	load8! &3 	#X2
	add! 68
	store4
	#
	push! 0
	load8! &3 	#X2
	add! 104
	store4
	#
	push! 0
	push! 0
	load8! &4 	#X2
	call! gz_error
	set_sp! (+ &0 24)
	

	push! 0
	load8! &3 	#X2
	add! 16
	store8
	#
	push! 0
	load8! &3 	#X2
	add! 128
	store4
	#
	push! 0
	store8! &1 	#AR
	jump! .L193.l_o5ad0d9
.L196.l_o5ad0d9:
	push! -1
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
.L208.l_o5ad0d9:

	# epilogue
	set_sp! &3
	return

# FUNCTION ENDS:gzrewind

	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole move
	#peephole move
	#peephole move+push+sub
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+sub
	#peephole pop+cmp
	#peephole push+pop+deadreg+binop
	#peephole pop+cmp
	#peephole pop+push+sub
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn

# FUNCTION BEGINS:gzseek64
	EXPORT	gzseek64
gzseek64:
	# prologue (7 GPRs)

	set_sp! &-7

	load8! &8
	store8! &3 	#X2
	load8! &9
	store8! &4 	#X3
	load4! &10
	store8! &2 	#X1
	# CBRANCH EQ0
	load8! &2 	#X2
	jump_zero! .L213.l_o5ad0d9
	# END CBRANCH
	load8! &2 	#X2
	add! 24
	load4
	#
	store8! &1 	#AR
	# CBRANCH EQ
	load4! &0 	#AR
	push! 7247
	xor
	jump_zero! .L212.l_o5ad0d9
	# END CBRANCH
	# CBRANCH
	load4! &0 	#AR
	push! 31153
	xor
	push! 1
	lt_u
	jump_zero! .L213.l_o5ad0d9
	# END CBRANCH
.L212.l_o5ad0d9:
	load8! &2 	#X2
	add! 108
	load4
	#
	store8! &5 	#X4
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_not_zero! .L246.l_o5ad0d9
	# END CBRANCH
.L214.l_o5ad0d9:
	# CBRANCH
	push! 1
	load4! &2 	#X1
	lt_u
	not
	jump_zero! .L213.l_o5ad0d9
	# END CBRANCH
	# CBRANCH EQ0
	load4! &1 	#X1
	jump_zero! .L247.l_o5ad0d9
	# END CBRANCH
	load8! &2 	#X2
	add! 104
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L216.l_o5ad0d9
	# END CBRANCH
	load8! &2 	#X2
	add! 96
	load8
	#
	load8! &4 	#X3
	add
	store8! &4 	#X3
.L216.l_o5ad0d9:
	push! 0
	load8! &3 	#X2
	add! 104
	store4
	#
	# CBRANCH EQ
	load4! &0 	#AR
	push! 7247
	xor
	jump_zero! .L248.l_o5ad0d9
	# END CBRANCH
.L217.l_o5ad0d9:
	# CBRANCH
	load8! &3 	#X3
	add! -9223372036854775808
	push! 0
	add! -9223372036854775808
	lt_u
	not
	jump_zero! .L213.l_o5ad0d9
	# END CBRANCH
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &1 	#AR
.L220.l_o5ad0d9:
	# CBRANCH EQ0
	load8! &3 	#X3
	jump_zero! .L222.l_o5ad0d9
	# END CBRANCH
	push! 1
	load8! &3 	#X2
	add! 104
	store4
	#
	load8! &3 	#X3
	load8! &3 	#X2
	add! 96
	store8
	#
.L222.l_o5ad0d9:
	load8! &3 	#X3
	load8! &1 	#AR
	add
	store8! &1 	#AR
	load8! &0 	#AR
	store8! &9
	jump! .L249.l_o5ad0d9
.L246.l_o5ad0d9:
	# CBRANCH EQ
	load4! &4 	#X4
	push! 4294967291
	xor
	jump_zero! .L214.l_o5ad0d9
	# END CBRANCH
.L213.l_o5ad0d9:
	push! -1
	store8! &1 	#AR
.L252.l_o5ad0d9:
	load8! &0 	#AR
	store8! &9
	jump! .L249.l_o5ad0d9
.L247.l_o5ad0d9:
	load8! &2 	#X2
	add! 16
	load8
	#
	load8! &4 	#X3
	sub
	neg
	store8! &4 	#X3
	push! 0
	load8! &3 	#X2
	add! 104
	store4
	#
	# CBRANCH
	load4! &0 	#AR
	push! 7247
	xor
	push! 1
	lt_u
	jump_zero! .L217.l_o5ad0d9
	# END CBRANCH
.L248.l_o5ad0d9:
	load8! &2 	#X2
	add! 68
	load4
	#
	store8! &2 	#X1
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &1 	#AR
	# CBRANCH EQ
	load4! &1 	#X1
	push! 1
	xor
	jump_zero! .L250.l_o5ad0d9
	# END CBRANCH
	# CBRANCH
	load8! &3 	#X3
	add! -9223372036854775808
	push! 0
	add! -9223372036854775808
	lt_u
	jump_zero! .L224.l_o5ad0d9
	# END CBRANCH
	load8! &3 	#X3
	load8! &1 	#AR
	add
	store8! &4 	#X3
	# CBRANCH
	load8! &3 	#X3
	add! -9223372036854775808
	push! 0
	add! -9223372036854775808
	lt_u
	not
	jump_zero! .L213.l_o5ad0d9
	# END CBRANCH
	load8! &2 	#X2
	call! gzrewind
	store8! &1

	# CBRANCH EQ
	load4! &0 	#AR
	push! 4294967295
	xor
	jump_zero! .L213.l_o5ad0d9
	# END CBRANCH
	load8! &2 	#X2
	add! 24
	load4
	#
	store8! &2 	#X1
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &1 	#AR
	# CBRANCH
	load4! &1 	#X1
	push! 7247
	xor
	push! 1
	lt_u
	jump_zero! .L220.l_o5ad0d9
	# END CBRANCH
.L224.l_o5ad0d9:
	load8! &2 	#X2
	load4
	#
	store8! &5 	#X4
	load4! &4 	#X4
	store8! &2 	#X1
	# CBRANCH
	load8! &3 	#X3
	add! -9223372036854775808
	load8! &2 	#X1
	add! -9223372036854775808
	lt_u
	jump_zero! .L225.l_o5ad0d9
	# END CBRANCH
	load4! &3 	#X3
	store8! &7 	#X6
	load8! &6 	#X6
	load8! &5 	#X4
	sub
	neg
	store8! &6 	#X5
	load8! &3 	#X3
	store8! &2 	#X1
	load4! &3 	#X3
	store8! &5 	#X4
	load4! &5 	#X5
	load8! &3 	#X2
	store4
	#
	load8! &2 	#X2
	add! 8
	load8
	#
	store8! &6 	#X5
	load4! &4 	#X4
	load8! &6 	#X5
	add
	load8! &3 	#X2
	add! 8
	store8
	#
	load8! &0 	#AR
	load8! &2 	#X1
	add
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &3 	#X2
	add! 16
	store8
	#
	load8! &3 	#X3
	load8! &2 	#X1
	sub
	store8! &4 	#X3
	jump! .L220.l_o5ad0d9
.L225.l_o5ad0d9:
	push! 0
	store8! &6 	#X5
	load4! &5 	#X5
	load8! &3 	#X2
	store4
	#
	load8! &2 	#X2
	add! 8
	load8
	#
	store8! &6 	#X5
	load4! &4 	#X4
	load8! &6 	#X5
	add
	load8! &3 	#X2
	add! 8
	store8
	#
	load8! &0 	#AR
	load8! &2 	#X1
	add
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &3 	#X2
	add! 16
	store8
	#
	load8! &3 	#X3
	load8! &2 	#X1
	sub
	store8! &4 	#X3
	jump! .L220.l_o5ad0d9
.L250.l_o5ad0d9:
	load8! &3 	#X3
	load8! &1 	#AR
	add
	# CBRANCH - peep (modesize=8)
	add! -9223372036854775808
	push! 0
	add! -9223372036854775808
	lt_u
	jump_zero! .L251.l_o5ad0d9
	# END CBRANCH
	# CBRANCH
	load8! &3 	#X3
	add! -9223372036854775808
	push! 0
	add! -9223372036854775808
	lt_u
	jump_zero! .L224.l_o5ad0d9
	# END CBRANCH
	push! -1
	store8! &1 	#AR
	jump! .L252.l_o5ad0d9
.L251.l_o5ad0d9:
	load8! &2 	#X2
	load4
	#
	and! 0x0ffffffff
	load8! &4 	#X3
	sub
	neg
	store8! &2 	#X1
	load8! &2 	#X2
	add! 28
	load4
	#
	store8! &1 	#AR
	push! 1
	load8! &2 	#X1
	load4! &2 	#AR
	call! lseek
	store8! &3

	set_sp! &2
	# CBRANCH EQ
	load8! &0 	#AR
	push! -1
	xor
	jump_zero! .L213.l_o5ad0d9
	# END CBRANCH
	push! 0
	load8! &3 	#X2
	store4
	#
	push! 0
	load8! &3 	#X2
	add! 80
	store8
	#
	push! 0
	load8! &3 	#X2
	add! 104
	store4
	#
	push! 0
	push! 0
	load8! &4 	#X2
	call! gz_error
	set_sp! (+ &0 24)
	

	push! 0
	load8! &3 	#X2
	add! 128
	store4
	#
	load8! &2 	#X2
	add! 16
	load8
	#
	load8! &4 	#X3
	add
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &3 	#X2
	add! 16
	store8
	#
	load8! &0 	#AR
	store8! &9
.L249.l_o5ad0d9:

	# epilogue
	set_sp! &7
	return

# FUNCTION ENDS:gzseek64


# FUNCTION BEGINS:gzseek
	EXPORT	gzseek
gzseek:
	# prologue (1 GPRs)
	push! 0

	load4! &4
	load8! &4
	load8! &4
	call! gzseek64
	store8! &3

	set_sp! &2
	load8! &0 	#AR
	store8! &3

	# epilogue
	store8! &0 #set_sp! &1
	return

# FUNCTION ENDS:gzseek

#	IMPORT open
#	IMPORT free
#	IMPORT snprintf
#	IMPORT malloc
#	IMPORT strlen
#	IMPORT lseek
#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: oc660a9
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"gzread.c"
#	.text
.LC0.l_oc660a9:
#	.string "compressed data error"
	data1 [ 99 111 109 112 114 101 115 115 101 100 32 100 97 116 97 32 101 114 114 111 114 0 ]
.LC1.l_oc660a9:
#	.string "unexpected end of file"
	data1 [ 117 110 101 120 112 101 99 116 101 100 32 101 110 100 32 111 102 32 102 105 108 101 0 ]
.LC2.l_oc660a9:
#	.string "internal error:inflate stream corrupt"
	data1 [ 105 110 116 101 114 110 97 108 32 101 114 114 111 114 58 32 105 110 102 108 97 116 101 32 115 116 114 101 97 109 32 99 111 114 114 117 112 116 0 ]
.LC3.l_oc660a9:
#	.string "out of memory"
	data1 [ 111 117 116 32 111 102 32 109 101 109 111 114 121 0 ]
	#peephole move_dead
	#peephole move+push+sub
	#peephole 1
	#peephole zero_extend
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+pushdi
	#peephole pop+push+commut(di)
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole pop+pusharg
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole pop(deadreg)+pushdi
	#peephole pop+push+sub
	#peephole 1
	#peephole zero_extend
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop+cmp
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn

# FUNCTION BEGINS:gz_decomp
gz_decomp.s_oc660a9:
	# prologue (9 GPRs)

	set_sp! &-9

	load8! &10
	store8! &4 	#X3
	load8! &3 	#X3
	add! 120
	store8! &7 	#X6
	load8! &3 	#X3
	add! 152
	load4
	#
	store8! &8 	#X7
.L18.l_oc660a9:
	load8! &3 	#X3
	add! 128
	load4
	#
	store8! &3 	#X2
	# CBRANCH EQ0
	load4! &2 	#X2
	jump_zero! .L39.l_oc660a9
	# END CBRANCH
.L2.l_oc660a9:
	push! 0
	load8! &7 	#X6
	call! inflate
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH EQ
	load4! &0 	#AR
	push! 4294967294
	xor
	jump_zero! .L12.l_oc660a9
	# END CBRANCH
	# CBRANCH EQ
	load4! &0 	#AR
	push! 2
	xor
	jump_zero! .L12.l_oc660a9
	# END CBRANCH
	# CBRANCH EQ
	load4! &0 	#AR
	push! 4294967292
	xor
	jump_zero! .L40.l_oc660a9
	# END CBRANCH
	# CBRANCH EQ
	load4! &0 	#AR
	push! 4294967293
	xor
	jump_zero! .L41.l_oc660a9
	# END CBRANCH
	load8! &3 	#X3
	add! 152
	load4
	#
	store8! &2 	#X1
	# CBRANCH EQ0
	load4! &1 	#X1
	jump_zero! .L17.l_oc660a9
	# END CBRANCH
	# CBRANCH
	load4! &0 	#AR
	push! 1
	xor
	push! 1
	lt_u
	jump_zero! .L18.l_oc660a9
	# END CBRANCH
	load8! &1 	#X1
	load8! &8 	#X7
	sub
	neg
	store8! &1 	#AR
	load4! &0 	#AR
	load8! &4 	#X3
	store4
	#
	load8! &3 	#X3
	add! 144
	load8
	#
	store8! &2 	#X1
	load4! &0 	#AR
	neg
	load8! &2 	#X1
	add
	load8! &4 	#X3
	add! 8
	store8
	#
.L20.l_oc660a9:
	push! 0
	load8! &4 	#X3
	add! 68
	store4
	#
	push! 0
	store8! &2 	#X1
	load4! &1 	#X1
	store4! &11
	jump! .L42.l_oc660a9
.L39.l_oc660a9:
	load8! &3 	#X3
	add! 108
	load4
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_zero! .L3.l_oc660a9
	# END CBRANCH
	# CBRANCH
	load4! &0 	#AR
	push! 4294967291
	xor
	push! 1
	lt_u
	jump_zero! .L21.l_oc660a9
	# END CBRANCH
.L3.l_oc660a9:
	load8! &3 	#X3
	add! 80
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_not_zero! .L11.l_oc660a9
	# END CBRANCH
	load8! &3 	#X3
	add! 40
	load4
	#
	store8! &5 	#X4
	load8! &3 	#X3
	add! 48
	load8
	#
	store8! &9 	#X8
.L8.l_oc660a9:
	load8! &2 	#X2
	load8! &5 	#X4
	sub
	neg
	store8! &1 	#AR
	# CBRANCH
	push! 1073741824
	load4! &1 	#AR
	lt_u
	jump_zero! .L6.l_oc660a9
	# END CBRANCH
	push! 1073741824
	store8! &1 	#AR
.L6.l_oc660a9:
	load4! &0 	#AR
	store8! &6 	#X5
	load4! &2 	#X2
	load8! &9 	#X8
	add
	store8! &2 	#X1
	load8! &3 	#X3
	add! 28
	load4
	#
	store8! &1 	#AR
	load8! &5 	#X5
	load8! &2 	#X1
	load4! &2 	#AR
	call! read
	store8! &3

	set_sp! &2
	# CBRANCH
	push! 0
	add! -2147483648
	load4! &1 	#AR
	add! -2147483648
	lt_u
	jump_zero! .L7.l_oc660a9
	# END CBRANCH
	load8! &2 	#X2
	load8! &1 	#AR
	add
	store8! &3 	#X2
	# CBRANCH
	load4! &2 	#X2
	load4! &5 	#X4
	lt_u
	not
	jump_zero! .L8.l_oc660a9
	# END CBRANCH
	load8! &3 	#X3
	add! 128
	load4
	#
	load8! &3 	#X2
	add
	store8! &1 	#AR
	load4! &0 	#AR
	load8! &4 	#X3
	add! 128
	store4
	#
	load8! &3 	#X3
	add! 48
	load8
	#
	load8! &4 	#X3
	add! 120
	store8
	#
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_not_zero! .L2.l_oc660a9
	# END CBRANCH
.L11.l_oc660a9:
	push! .LC1.l_oc660a9
	push! -5
	load8! &5 	#X3
	call! gz_error
	set_sp! (+ &0 24)
	

	load8! &3 	#X3
	add! 152
	load4
	#
	load8! &8 	#X7
	sub
	neg
	store8! &1 	#AR
	load4! &0 	#AR
	load8! &4 	#X3
	store4
	#
	load8! &3 	#X3
	add! 144
	load8
	#
	store8! &2 	#X1
	load4! &0 	#AR
	neg
	load8! &2 	#X1
	add
	load8! &4 	#X3
	add! 8
	store8
	#
	push! 0
	store8! &2 	#X1
	load4! &1 	#X1
	store4! &11
	jump! .L42.l_oc660a9
.L7.l_oc660a9:
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_not_zero! .L43.l_oc660a9
	# END CBRANCH
	push! 1
	load8! &4 	#X3
	add! 80
	store4
	#
	load8! &3 	#X3
	add! 128
	load4
	#
	load8! &3 	#X2
	add
	store8! &1 	#AR
	load4! &0 	#AR
	load8! &4 	#X3
	add! 128
	store4
	#
	load8! &3 	#X3
	add! 48
	load8
	#
	load8! &4 	#X3
	add! 120
	store8
	#
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_not_zero! .L2.l_oc660a9
	# END CBRANCH
	jump! .L11.l_oc660a9
.L12.l_oc660a9:
	push! .LC2.l_oc660a9
	push! -2
	load8! &5 	#X3
	call! gz_error
	set_sp! (+ &0 24)
	

	push! -1
	store8! &2 	#X1
	load4! &1 	#X1
	store4! &11
	jump! .L42.l_oc660a9
.L40.l_oc660a9:
	push! .LC3.l_oc660a9
	push! -4
	load8! &5 	#X3
	call! gz_error
	set_sp! (+ &0 24)
	

	push! -1
	store8! &2 	#X1
	load4! &1 	#X1
	store4! &11
	jump! .L42.l_oc660a9
.L41.l_oc660a9:
	load8! &3 	#X3
	add! 168
	load8
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L44.l_oc660a9
	# END CBRANCH
	load8! &0 	#AR
	push! -3
	load8! &5 	#X3
	call! gz_error
	set_sp! (+ &0 24)
	

	push! -1
	store8! &2 	#X1
.L45.l_oc660a9:
	load4! &1 	#X1
	store4! &11
	jump! .L42.l_oc660a9
.L17.l_oc660a9:
	load4! &7 	#X7
	load8! &4 	#X3
	store4
	#
	load8! &3 	#X3
	add! 144
	load8
	#
	store8! &3 	#X2
	load4! &7 	#X7
	neg
	load8! &3 	#X2
	add
	load8! &4 	#X3
	add! 8
	store8
	#
	push! 0
	store8! &2 	#X1
	# CBRANCH EQ
	load4! &0 	#AR
	push! 1
	xor
	jump_zero! .L20.l_oc660a9
	# END CBRANCH
	load4! &1 	#X1
	store4! &11
	jump! .L42.l_oc660a9
.L44.l_oc660a9:
	push! .LC0.l_oc660a9
	store8! &1 	#AR
	load8! &0 	#AR
	push! -3
	load8! &5 	#X3
	call! gz_error
	set_sp! (+ &0 24)
	

	push! -1
	store8! &2 	#X1
	jump! .L45.l_oc660a9
.L21.l_oc660a9:
	push! -1
	store8! &2 	#X1
	load4! &1 	#X1
	store4! &11
	jump! .L42.l_oc660a9
.L43.l_oc660a9:
	# variadic *call_value
	call! __errno

	load8! &0 	#AR
	load4
	#
	and! 0x0ffffffff
	#peep - pop(deadreg)+pusharg
	call! strerror
	store8! &1

	load8! &0 	#AR
	push! -1
	load8! &5 	#X3
	call! gz_error
	set_sp! (+ &0 24)
	

	push! -1
	store8! &2 	#X1
	load4! &1 	#X1
	store4! &11
.L42.l_oc660a9:

	# epilogue
	set_sp! &9
	return

# FUNCTION ENDS:gz_decomp

.LC4.l_oc660a9:
#	.string "1.2.11"
	data1 [ 49 46 50 46 49 49 0 ]
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole zero_extend
	#peephole pop+pusharg
	#peephole pop(deadreg)+push
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole pop(deadreg)+pushdi
	#peephole pop+push+commut(di)
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole pop+pusharg
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole pop+push+commut(di)
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole move
	#peephole move+push+sub
	#peephole move_dead
	#peephole zero_extend
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+push
	#peephole pop+cmp
	#peephole pop+pusharg
	#peephole pop+pusharg
	#peephole zero_extend
	#peephole pop+pusharg
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole zero_extend
	#peephole pop+pusharg
	#peephole pop+cmp
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole popdi(deadreg)+push

# FUNCTION BEGINS:gz_look
gz_look.s_oc660a9:
	# prologue (9 GPRs)

	set_sp! &-9

	load8! &10
	store8! &3 	#X2
	load8! &2 	#X2
	add! 120
	store8! &7 	#X6
	load8! &2 	#X2
	add! 40
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L98.l_oc660a9
	# END CBRANCH
.L47.l_oc660a9:
	load8! &2 	#X2
	add! 128
	load4
	#
	store8! &1 	#AR
	# CBRANCH
	push! 1
	load4! &1 	#AR
	lt_u
	jump_zero! .L99.l_oc660a9
	# END CBRANCH
.L51.l_oc660a9:
	load8! &2 	#X2
	add! 120
	load8
	#
	store8! &2 	#X1
	load8! &1 	#X1
	load1
	#
	# CBRANCH - peep (modesize=1)
	and! 255
	# - EQ
	push! 31
	xor
	jump_zero! .L100.l_oc660a9
	# END CBRANCH
.L62.l_oc660a9:
	load8! &2 	#X2
	add! 64
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_not_zero! .L101.l_oc660a9
	# END CBRANCH
.L64.l_oc660a9:
	push! 0
	load8! &3 	#X2
	add! 128
	store4
	#
	push! 1
	load8! &3 	#X2
	add! 80
	store4
	#
	push! 0
	load8! &3 	#X2
	store4
	#
	push! 0
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &11
	jump! .L102.l_oc660a9
.L98.l_oc660a9:
	load8! &2 	#X2
	add! 44
	load4
	#
	store8! &4 	#X3
	load4! &3 	#X3
	#peep - pop(deadreg)+pusharg
	call! malloc
	store8! &1

	load8! &0 	#AR
	store8! &5 	#X4
	load8! &0 	#AR
	load8! &3 	#X2
	add! 48
	store8
	#
	load8! &3 	#X3
	load8! &4 	#X3
	add
	and! 0xffffffff
	#peep - pop(deadreg)+pusharg
	call! malloc
	store8! &1

	load8! &0 	#AR
	load8! &3 	#X2
	add! 56
	store8
	#
	# CBRANCH EQ0
	load8! &4 	#X4
	jump_zero! .L48.l_oc660a9
	# END CBRANCH
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L48.l_oc660a9
	# END CBRANCH
	load4! &3 	#X3
	load8! &3 	#X2
	add! 40
	store4
	#
	push! 0
	load8! &3 	#X2
	add! 184
	store8
	#
	push! 0
	load8! &3 	#X2
	add! 192
	store8
	#
	push! 0
	load8! &3 	#X2
	add! 200
	store8
	#
	push! 0
	load8! &3 	#X2
	add! 128
	store4
	#
	push! 0
	load8! &3 	#X2
	add! 120
	store8
	#
	push! 112
	push! .LC4.l_oc660a9
	push! 31
	load8! &9 	#X6
	call! inflateInit2_
	store8! &4

	set_sp! &3
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_zero! .L47.l_oc660a9
	# END CBRANCH
	load8! &2 	#X2
	add! 56
	load8
	#
	#peep - pop(deadreg)+pusharg
	call! free
	set_sp! (+ &0 8)
	

	load8! &2 	#X2
	add! 48
	load8
	#
	#peep - pop(deadreg)+pusharg
	call! free
	set_sp! (+ &0 8)
	

	push! 0
	load8! &3 	#X2
	add! 40
	store4
	#
	push! .LC3.l_oc660a9
	push! -4
	load8! &4 	#X2
	call! gz_error
	set_sp! (+ &0 24)
	

	push! -1
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &11
	jump! .L102.l_oc660a9
.L99.l_oc660a9:
	load8! &2 	#X2
	add! 108
	load4
	#
	store8! &2 	#X1
	# CBRANCH EQ0
	load4! &1 	#X1
	jump_zero! .L52.l_oc660a9
	# END CBRANCH
	# CBRANCH
	load4! &1 	#X1
	push! 4294967291
	xor
	push! 1
	lt_u
	jump_zero! .L68.l_oc660a9
	# END CBRANCH
.L52.l_oc660a9:
	load8! &2 	#X2
	add! 80
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_not_zero! .L53.l_oc660a9
	# END CBRANCH
	load8! &2 	#X2
	add! 48
	load8
	#
	store8! &8 	#X7
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_zero! .L54.l_oc660a9
	# END CBRANCH
	load8! &2 	#X2
	add! 120
	load8
	#
	load1
	load8! &8 	#X7
	store1
	#
	load8! &2 	#X2
	add! 128
	load4
	#
	store8! &1 	#AR
	load8! &2 	#X2
	add! 48
	load8
	#
	store8! &8 	#X7
.L54.l_oc660a9:
	load8! &2 	#X2
	add! 40
	load4
	#
	store8! &4 	#X3
	load8! &0 	#AR
	load8! &4 	#X3
	sub
	neg
	store8! &5 	#X4
	load4! &0 	#AR
	store8! &9 	#X8
	push! 0
	store8! &4 	#X3
.L57.l_oc660a9:
	load8! &3 	#X3
	load8! &5 	#X4
	sub
	neg
	store8! &1 	#AR
	# CBRANCH
	push! 1073741824
	load4! &1 	#AR
	lt_u
	jump_zero! .L55.l_oc660a9
	# END CBRANCH
	push! 1073741824
	store8! &1 	#AR
.L55.l_oc660a9:
	load4! &0 	#AR
	store8! &6 	#X5
	load4! &3 	#X3
	load8! &9 	#X8
	add
	load8! &8 	#X7
	add
	store8! &2 	#X1
	load8! &2 	#X2
	add! 28
	load4
	#
	store8! &1 	#AR
	load8! &5 	#X5
	load8! &2 	#X1
	load4! &2 	#AR
	call! read
	store8! &3

	set_sp! &2
	# CBRANCH
	push! 0
	add! -2147483648
	load4! &1 	#AR
	add! -2147483648
	lt_u
	jump_zero! .L56.l_oc660a9
	# END CBRANCH
	load8! &3 	#X3
	load8! &1 	#AR
	add
	store8! &4 	#X3
	# CBRANCH
	load4! &3 	#X3
	load4! &5 	#X4
	lt_u
	not
	jump_zero! .L57.l_oc660a9
	# END CBRANCH
.L58.l_oc660a9:
	load8! &2 	#X2
	add! 128
	load4
	#
	load8! &4 	#X3
	add
	store8! &1 	#AR
	load4! &0 	#AR
	load8! &3 	#X2
	add! 128
	store4
	#
	load8! &2 	#X2
	add! 48
	load8
	#
	load8! &3 	#X2
	add! 120
	store8
	#
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_zero! .L66.l_oc660a9
	# END CBRANCH
	# CBRANCH
	load4! &0 	#AR
	push! 1
	xor
	push! 1
	lt_u
	jump_zero! .L51.l_oc660a9
	# END CBRANCH
.L61.l_oc660a9:
	load8! &2 	#X2
	add! 64
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L64.l_oc660a9
	# END CBRANCH
	load8! &2 	#X2
	add! 56
	load8
	#
	store8! &4 	#X3
	load8! &3 	#X3
	load8! &3 	#X2
	add! 8
	store8
	#
	load8! &2 	#X2
	add! 120
	load8
	#
	store8! &2 	#X1
	push! 1
	store8! &1 	#AR
	load4! &0 	#AR
	#peep - pop(deadreg)+pusharg
	load8! &2 	#X1
	load8! &5 	#X3
	call! memcpy
	store8! &3

	set_sp! &2
	load8! &2 	#X2
	add! 128
	load4
	#
	load8! &3 	#X2
	store4
	#
	push! 0
	load8! &3 	#X2
	add! 128
	store4
	#
	push! 4294967297
	load8! &3 	#X2
	add! 64
	store8
	#
	push! 0
	store8! &1 	#AR
.L103.l_oc660a9:
	load4! &0 	#AR
	store4! &11
	jump! .L102.l_oc660a9
.L101.l_oc660a9:
	load8! &2 	#X2
	add! 56
	load8
	#
	store8! &4 	#X3
	load8! &3 	#X3
	load8! &3 	#X2
	add! 8
	store8
	#
	load4! &0 	#AR
	#peep - pop(deadreg)+pusharg
	load8! &2 	#X1
	load8! &5 	#X3
	call! memcpy
	store8! &3

	set_sp! &2
	load8! &2 	#X2
	add! 128
	load4
	#
	load8! &3 	#X2
	store4
	#
	push! 0
	load8! &3 	#X2
	add! 128
	store4
	#
	push! 4294967297
	load8! &3 	#X2
	add! 64
	store8
	#
	push! 0
	store8! &1 	#AR
	jump! .L103.l_oc660a9
.L100.l_oc660a9:
	load8! &1 	#X1
	add! 1
	load1
	#
	# CBRANCH - peep (modesize=1)
	and! 255
	push! 139
	xor
	push! 1
	lt_u
	jump_zero! .L62.l_oc660a9
	# END CBRANCH
	load8! &6 	#X6
	call! inflateReset
	store8! &1

	push! 8589934592
	load8! &3 	#X2
	add! 64
	store8
	#
	push! 0
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &11
	jump! .L102.l_oc660a9
.L53.l_oc660a9:
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_not_zero! .L61.l_oc660a9
	# END CBRANCH
.L66.l_oc660a9:
	push! 0
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &11
	jump! .L102.l_oc660a9
.L56.l_oc660a9:
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_not_zero! .L104.l_oc660a9
	# END CBRANCH
	push! 1
	load8! &3 	#X2
	add! 80
	store4
	#
	jump! .L58.l_oc660a9
.L68.l_oc660a9:
	push! -1
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &11
	jump! .L102.l_oc660a9
.L48.l_oc660a9:
	load8! &0 	#AR
	call! free
	set_sp! (+ &0 8)
	

	load8! &4 	#X4
	call! free
	set_sp! (+ &0 8)
	

	push! .LC3.l_oc660a9
	push! -4
	load8! &4 	#X2
	call! gz_error
	set_sp! (+ &0 24)
	

	push! -1
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &11
	jump! .L102.l_oc660a9
.L104.l_oc660a9:
	# variadic *call_value
	call! __errno

	load8! &0 	#AR
	load4
	#
	and! 0x0ffffffff
	#peep - pop(deadreg)+pusharg
	call! strerror
	store8! &1

	load8! &0 	#AR
	push! -1
	load8! &4 	#X2
	call! gz_error
	set_sp! (+ &0 24)
	

	push! -1
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &11
.L102.l_oc660a9:

	# epilogue
	set_sp! &9
	return

# FUNCTION ENDS:gz_look

	#peephole pop+cmp
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole move
	#peephole move+binop
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop+pusharg
	#peephole pop(deadreg)+pushdi
	#peephole pop+push+commut(di)
	#peephole move_dead
	#peephole zero_extend
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole move
	#peephole move+binop
	#peephole move_dead
	#peephole pop+cmp
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole popdi(deadreg)+push
	#peephole and+popsi

# FUNCTION BEGINS:gz_fetch
gz_fetch.s_oc660a9:
	# prologue (6 GPRs)

	set_sp! &-6

	load8! &7
	store8! &3 	#X2
.L126.l_oc660a9:
	load8! &2 	#X2
	add! 68
	load4
	#
	store8! &1 	#AR
	# CBRANCH EQ
	load4! &0 	#AR
	push! 1
	xor
	jump_zero! .L106.l_oc660a9
	# END CBRANCH
	# CBRANCH EQ
	load4! &0 	#AR
	push! 2
	xor
	jump_zero! .L107.l_oc660a9
	# END CBRANCH
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_zero! .L132.l_oc660a9
	# END CBRANCH
.L108.l_oc660a9:
	load8! &2 	#X2
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_not_zero! .L111.l_oc660a9
	# END CBRANCH
	load8! &2 	#X2
	add! 80
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L126.l_oc660a9
	# END CBRANCH
	load8! &2 	#X2
	add! 128
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_not_zero! .L126.l_oc660a9
	# END CBRANCH
.L111.l_oc660a9:
	push! 0
	store8! &1 	#AR
.L105.l_oc660a9:
	load4! &0 	#AR
	store4! &8
	jump! .L133.l_oc660a9
.L132.l_oc660a9:
	load8! &2 	#X2
	call! gz_look.s_oc660a9
	store8! &1

	# CBRANCH EQ
	load4! &0 	#AR
	push! 4294967295
	xor
	jump_zero! .L117.l_oc660a9
	# END CBRANCH
	load8! &2 	#X2
	add! 68
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_not_zero! .L108.l_oc660a9
	# END CBRANCH
	push! 0
	store8! &1 	#AR
	jump! .L105.l_oc660a9
.L107.l_oc660a9:
	load8! &2 	#X2
	add! 40
	load4
	#
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	load8! &3 	#X2
	add! 152
	store4
	#
	load8! &2 	#X2
	add! 56
	load8
	#
	load8! &3 	#X2
	add! 144
	store8
	#
	load8! &2 	#X2
	call! gz_decomp.s_oc660a9
	store8! &1

	# CBRANCH
	load4! &0 	#AR
	push! 4294967295
	xor
	push! 1
	lt_u
	jump_zero! .L108.l_oc660a9
	# END CBRANCH
.L117.l_oc660a9:
	push! -1
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &8
	jump! .L133.l_oc660a9
.L106.l_oc660a9:
	load8! &2 	#X2
	add! 40
	load4
	#
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	store8! &4 	#X3
	load8! &2 	#X2
	add! 56
	load8
	#
	store8! &6 	#X5
	push! 0
	load8! &3 	#X2
	store4
	#
	push! 0
	store8! &2 	#X1
.L114.l_oc660a9:
	load8! &1 	#X1
	load8! &4 	#X3
	sub
	neg
	store8! &1 	#AR
	# CBRANCH
	push! 1073741824
	load4! &1 	#AR
	lt_u
	jump_zero! .L112.l_oc660a9
	# END CBRANCH
	push! 1073741824
	store8! &1 	#AR
.L112.l_oc660a9:
	load4! &0 	#AR
	store8! &5 	#X4
	load4! &1 	#X1
	load8! &6 	#X5
	add
	store8! &2 	#X1
	load8! &2 	#X2
	add! 28
	load4
	#
	store8! &1 	#AR
	load8! &4 	#X4
	load8! &2 	#X1
	load4! &2 	#AR
	call! read
	store8! &3

	set_sp! &2
	# CBRANCH
	push! 0
	add! -2147483648
	load4! &1 	#AR
	add! -2147483648
	lt_u
	jump_zero! .L113.l_oc660a9
	# END CBRANCH
	load8! &2 	#X2
	load4
	#
	load8! &1 	#AR
	add
	store8! &2 	#X1
	load4! &1 	#X1
	load8! &3 	#X2
	store4
	#
	# CBRANCH
	load4! &1 	#X1
	load4! &4 	#X3
	lt_u
	not
	jump_zero! .L114.l_oc660a9
	# END CBRANCH
	load8! &2 	#X2
	add! 56
	load8
	#
	load8! &3 	#X2
	add! 8
	store8
	#
	push! 0
	store8! &1 	#AR
.L135.l_oc660a9:
	load4! &0 	#AR
	store4! &8
	jump! .L133.l_oc660a9
.L113.l_oc660a9:
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_not_zero! .L134.l_oc660a9
	# END CBRANCH
	push! 1
	load8! &3 	#X2
	add! 80
	store4
	#
	load8! &2 	#X2
	add! 56
	load8
	#
	load8! &3 	#X2
	add! 8
	store8
	#
	push! 0
	store8! &1 	#AR
	jump! .L135.l_oc660a9
.L134.l_oc660a9:
	# variadic *call_value
	call! __errno

	load8! &0 	#AR
	load4
	#
	and! 0x0ffffffff
	#peep - pop(deadreg)+pusharg
	call! strerror
	store8! &1

	load8! &0 	#AR
	push! -1
	load8! &4 	#X2
	call! gz_error
	set_sp! (+ &0 24)
	

	push! -1
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &8
.L133.l_oc660a9:

	# epilogue
	set_sp! &6
	return

# FUNCTION ENDS:gz_fetch

	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+pusharg
	#peephole zero_extend
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole zero_extend
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole move
	#peephole move+binop
	#peephole 1
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole move_dead
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole pop+block+cmp
	#peephole pop+block+push+block
	#peephole popdi(deadreg)+push
	#peephole and+popsi

# FUNCTION BEGINS:.Li_gz_read.part_2.l_oc660a9
.Li_gz_read.part_2.l_oc660a9:
	# prologue (10 GPRs)

	set_sp! &-10

	load8! &11
	store8! &3 	#X2
	load8! &12
	store8! &7 	#X6
	load8! &13
	store8! &5 	#X4
	push! 0
	store8! &9 	#X8
.L152.l_oc660a9:
	# CBRANCH
	push! 4294967294
	load8! &5 	#X4
	lt_u
	jump_zero! .L153.l_oc660a9
	# END CBRANCH
	push! 4294967295
	store8! &1 	#AR
.L137.l_oc660a9:
	load4! &0 	#AR
	store8! &8 	#X7
	load8! &2 	#X2
	load4
	#
	store8! &4 	#X3
	# CBRANCH EQ0
	load4! &3 	#X3
	jump_zero! .L138.l_oc660a9
	# END CBRANCH
	# CBRANCH
	load4! &0 	#AR
	load4! &4 	#X3
	lt_u
	jump_zero! .L139.l_oc660a9
	# END CBRANCH
	load4! &0 	#AR
	store8! &4 	#X3
.L139.l_oc660a9:
	load4! &3 	#X3
	store8! &6 	#X5
	load8! &2 	#X2
	add! 8
	load8
	#
	store8! &1 	#AR
	load8! &5 	#X5
	load8! &1 	#AR
	load8! &8 	#X6
	call! memcpy
	store8! &3

	set_sp! &2
	load8! &2 	#X2
	add! 8
	load8
	#
	load8! &6 	#X5
	add
	load8! &3 	#X2
	add! 8
	store8
	#
	load8! &2 	#X2
	load4
	#
	store8! &2 	#X1
	load8! &3 	#X3
	load8! &2 	#X1
	sub
	neg
	load8! &3 	#X2
	store4
	#
	load8! &6 	#X6
	load8! &6 	#X5
	add
	store8! &7 	#X6
	load8! &4 	#X4
	load8! &6 	#X5
	sub
	store8! &5 	#X4
	load8! &5 	#X5
	load8! &9 	#X8
	add
	store8! &9 	#X8
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &2 	#X1
	load4! &3 	#X3
	load8! &2 	#X1
	add
	load8! &3 	#X2
	add! 16
	store8
	#
.L145.l_oc660a9:
	# CBRANCH EQ0
	load8! &4 	#X4
	jump_not_zero! .L152.l_oc660a9
	# END CBRANCH
	load8! &8 	#X8
	store8! &12
	jump! .L167.l_oc660a9
.L138.l_oc660a9:
	load8! &2 	#X2
	add! 80
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L141.l_oc660a9
	# END CBRANCH
	load8! &2 	#X2
	add! 128
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L168.l_oc660a9
	# END CBRANCH
.L141.l_oc660a9:
	load8! &2 	#X2
	add! 68
	load4
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_zero! .L143.l_oc660a9
	# END CBRANCH
	load8! &2 	#X2
	add! 40
	load4
	#
	store8! &2 	#X1
	load8! &1 	#X1
	load8! &2 	#X1
	add
	store8! &2 	#X1
	# CBRANCH
	load4! &7 	#X7
	load4! &2 	#X1
	lt_u
	not
	jump_zero! .L143.l_oc660a9
	# END CBRANCH
	# CBRANCH EQ
	load4! &0 	#AR
	push! 1
	xor
	jump_zero! .L149.l_oc660a9
	# END CBRANCH
	load4! &7 	#X7
	load8! &3 	#X2
	add! 152
	store4
	#
	load8! &6 	#X6
	load8! &3 	#X2
	add! 144
	store8
	#
	load8! &2 	#X2
	call! gz_decomp.s_oc660a9
	store8! &1

	# CBRANCH EQ
	load4! &0 	#AR
	push! 4294967295
	xor
	jump_zero! .L151.l_oc660a9
	# END CBRANCH
	load8! &2 	#X2
	load4
	#
	store8! &4 	#X3
	push! 0
	load8! &3 	#X2
	store4
	#
	load4! &3 	#X3
	store8! &6 	#X5
	load8! &6 	#X6
	load8! &6 	#X5
	add
	store8! &7 	#X6
	load8! &4 	#X4
	load8! &6 	#X5
	sub
	store8! &5 	#X4
	load8! &5 	#X5
	load8! &9 	#X8
	add
	store8! &9 	#X8
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &2 	#X1
	load4! &3 	#X3
	load8! &2 	#X1
	add
	load8! &3 	#X2
	add! 16
	store8
	#
	jump! .L145.l_oc660a9
.L147.l_oc660a9:
	load4! &0 	#AR
	store8! &2 	#X1
	load4! &3 	#X3
	store8! &6 	#X5
	load8! &6 	#X6
	load8! &6 	#X5
	add
	store8! &10 	#X9
	load8! &2 	#X2
	add! 28
	load4
	#
	store8! &1 	#AR
	load8! &1 	#X1
	load8! &10 	#X9
	load4! &2 	#AR
	call! read
	store8! &3

	set_sp! &2
	# CBRANCH
	push! 0
	add! -2147483648
	load4! &1 	#AR
	add! -2147483648
	lt_u
	jump_zero! .L148.l_oc660a9
	# END CBRANCH
.L170.l_oc660a9:
	load8! &3 	#X3
	load8! &1 	#AR
	add
	store8! &4 	#X3
	# CBRANCH
	load4! &3 	#X3
	load4! &8 	#X7
	lt_u
	jump_zero! .L169.l_oc660a9
	# END CBRANCH
.L149.l_oc660a9:
	load8! &3 	#X3
	load8! &8 	#X7
	sub
	neg
	store8! &1 	#AR
	# CBRANCH
	push! 1073741824
	load4! &1 	#AR
	lt_u
	jump_zero! .L147.l_oc660a9
	# END CBRANCH
	push! 1073741824
	store8! &1 	#AR
	load4! &0 	#AR
	store8! &2 	#X1
	load4! &3 	#X3
	store8! &6 	#X5
	load8! &6 	#X6
	load8! &6 	#X5
	add
	store8! &10 	#X9
	load8! &2 	#X2
	add! 28
	load4
	#
	store8! &1 	#AR
	load8! &1 	#X1
	load8! &10 	#X9
	load4! &2 	#AR
	call! read
	store8! &3

	set_sp! &2
	# CBRANCH
	push! 0
	add! -2147483648
	load4! &1 	#AR
	add! -2147483648
	lt_u
	not
	jump_zero! .L170.l_oc660a9
	# END CBRANCH
.L148.l_oc660a9:
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_not_zero! .L171.l_oc660a9
	# END CBRANCH
	push! 1
	load8! &3 	#X2
	add! 80
	store4
	#
	load8! &9 	#X9
	store8! &7 	#X6
	load8! &4 	#X4
	load8! &6 	#X5
	sub
	store8! &5 	#X4
	load8! &5 	#X5
	load8! &9 	#X8
	add
	store8! &9 	#X8
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &2 	#X1
	load4! &3 	#X3
	load8! &2 	#X1
	add
	load8! &3 	#X2
	add! 16
	store8
	#
	jump! .L145.l_oc660a9
.L153.l_oc660a9:
	load8! &4 	#X4
	store8! &1 	#AR
	jump! .L137.l_oc660a9
.L143.l_oc660a9:
	load8! &2 	#X2
	call! gz_fetch.s_oc660a9
	store8! &1

	# CBRANCH
	load4! &0 	#AR
	push! 4294967295
	xor
	push! 1
	lt_u
	jump_zero! .L145.l_oc660a9
	# END CBRANCH
.L151.l_oc660a9:
	push! 0
	store8! &9 	#X8
	load8! &8 	#X8
	store8! &12
	jump! .L167.l_oc660a9
.L169.l_oc660a9:
	load4! &3 	#X3
	store8! &6 	#X5
	load8! &6 	#X6
	load8! &6 	#X5
	add
	store8! &7 	#X6
	load8! &4 	#X4
	load8! &6 	#X5
	sub
	store8! &5 	#X4
	load8! &5 	#X5
	load8! &9 	#X8
	add
	store8! &9 	#X8
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &2 	#X1
	load4! &3 	#X3
	load8! &2 	#X1
	add
	load8! &3 	#X2
	add! 16
	store8
	#
	jump! .L145.l_oc660a9
.L168.l_oc660a9:
	push! 1
	load8! &3 	#X2
	add! 84
	store4
	#
	load8! &8 	#X8
	store8! &12
	jump! .L167.l_oc660a9
.L171.l_oc660a9:
	# variadic *call_value
	call! __errno

	load8! &0 	#AR
	load4
	#
	and! 0x0ffffffff
	#peep - pop(deadreg)+pusharg
	call! strerror
	store8! &1

	load8! &0 	#AR
	push! -1
	load8! &4 	#X2
	call! gz_error
	set_sp! (+ &0 24)
	

	push! 0
	store8! &9 	#X8
	load8! &8 	#X8
	store8! &12
.L167.l_oc660a9:

	# epilogue
	set_sp! &10
	return

# FUNCTION ENDS:.Li_gz_read.part_2.l_oc660a9

.LC5.l_oc660a9:
#	.string "request does not fit in an int"
	data1 [ 114 101 113 117 101 115 116 32 100 111 101 115 32 110 111 116 32 102 105 116 32 105 110 32 97 110 32 105 110 116 0 ]
	#peephole 1
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole move
	#peephole move
	#peephole move+push+sub
	#peephole move_dead
	#peephole zero_extend
	#peephole zero_extend
	#peephole pop+pusharg
	#peephole move
	#peephole set+cmp
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)

# FUNCTION BEGINS:gzread
	EXPORT	gzread
gzread:
	# prologue (7 GPRs)

	set_sp! &-7

	load8! &8
	store8! &3 	#X2
	load4! &10
	store8! &7 	#X6
	# CBRANCH EQ0
	load8! &2 	#X2
	jump_zero! .L175.l_oc660a9
	# END CBRANCH
	load8! &2 	#X2
	add! 24
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	push! 7247
	xor
	push! 1
	lt_u
	jump_zero! .L175.l_oc660a9
	# END CBRANCH
	load8! &2 	#X2
	add! 108
	load4
	#
	store8! &2 	#X1
	# CBRANCH EQ0
	load4! &1 	#X1
	jump_not_zero! .L206.l_oc660a9
	# END CBRANCH
.L176.l_oc660a9:
	# CBRANCH
	load4! &6 	#X6
	add! -2147483648
	push! 0
	add! -2147483648
	lt_u
	not
	jump_zero! .L207.l_oc660a9
	# END CBRANCH
	# CBRANCH EQ0
	load4! &6 	#X6
	jump_zero! .L188.l_oc660a9
	# END CBRANCH
	load8! &2 	#X2
	add! 104
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_not_zero! .L179.l_oc660a9
	# END CBRANCH
.L183.l_oc660a9:
	load4! &6 	#X6
	#peep - pop(deadreg)+pusharg
	load8! &10
	load8! &4 	#X2
	call! .Li_gz_read.part_2.l_oc660a9
	store8! &3

	set_sp! &2
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_zero! .L208.l_oc660a9
	# END CBRANCH
.L181.l_oc660a9:
.L172.l_oc660a9:
	load4! &0 	#AR
	store4! &9
	jump! .L209.l_oc660a9
.L206.l_oc660a9:
	# CBRANCH EQ
	load4! &1 	#X1
	push! 4294967291
	xor
	jump_zero! .L176.l_oc660a9
	# END CBRANCH
.L175.l_oc660a9:
	push! -1
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &9
	jump! .L209.l_oc660a9
.L179.l_oc660a9:
	push! 0
	load8! &3 	#X2
	add! 104
	store4
	#
	load8! &2 	#X2
	add! 96
	load8
	#
	store8! &4 	#X3
	# CBRANCH EQ0
	load8! &3 	#X3
	jump_zero! .L183.l_oc660a9
	# END CBRANCH
.L182.l_oc660a9:
	load8! &2 	#X2
	load4
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_zero! .L184.l_oc660a9
	# END CBRANCH
.L210.l_oc660a9:
	load4! &0 	#AR
	store8! &2 	#X1
	# CBRANCH
	load8! &3 	#X3
	add! -9223372036854775808
	load8! &2 	#X1
	add! -9223372036854775808
	lt_u
	jump_zero! .L189.l_oc660a9
	# END CBRANCH
	load4! &3 	#X3
	store8! &6 	#X5
	load8! &5 	#X5
	load8! &1 	#AR
	sub
	neg
	store8! &5 	#X4
	load8! &3 	#X3
	and! 0xffffffff
	store8! &2 	#X1
	load4! &3 	#X3
	store8! &1 	#AR
	load4! &4 	#X4
	load8! &3 	#X2
	store4
	#
	load8! &2 	#X2
	add! 8
	load8
	#
	store8! &5 	#X4
	load4! &0 	#AR
	load8! &5 	#X4
	add
	load8! &3 	#X2
	add! 8
	store8
	#
	load8! &2 	#X2
	add! 16
	load8
	#
	load8! &2 	#X1
	add
	load8! &3 	#X2
	add! 16
	store8
	#
	load8! &3 	#X3
	load8! &2 	#X1
	sub
	store8! &4 	#X3
	# CBRANCH EQ0
	load8! &3 	#X3
	jump_zero! .L183.l_oc660a9
	# END CBRANCH
.L205.l_oc660a9:
	load8! &2 	#X2
	load4
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_not_zero! .L210.l_oc660a9
	# END CBRANCH
.L184.l_oc660a9:
	load8! &2 	#X2
	add! 80
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L187.l_oc660a9
	# END CBRANCH
	load8! &2 	#X2
	add! 128
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L183.l_oc660a9
	# END CBRANCH
.L187.l_oc660a9:
	load8! &2 	#X2
	call! gz_fetch.s_oc660a9
	store8! &1

	# CBRANCH
	load4! &0 	#AR
	push! 4294967295
	xor
	push! 1
	lt_u
	jump_zero! .L182.l_oc660a9
	# END CBRANCH
	load8! &2 	#X2
	add! 108
	load4
	#
	store8! &2 	#X1
	push! 0
	store8! &1 	#AR
.L178.l_oc660a9:
	# CBRANCH EQ0
	load4! &1 	#X1
	jump_zero! .L181.l_oc660a9
	# END CBRANCH
	# CBRANCH
	load4! &1 	#X1
	push! 4294967291
	xor
	push! 1
	lt_u
	jump_zero! .L175.l_oc660a9
	# END CBRANCH
	jump! .L172.l_oc660a9
.L189.l_oc660a9:
	push! 0
	store8! &5 	#X4
	load4! &4 	#X4
	load8! &3 	#X2
	store4
	#
	load8! &2 	#X2
	add! 8
	load8
	#
	store8! &5 	#X4
	load4! &0 	#AR
	load8! &5 	#X4
	add
	load8! &3 	#X2
	add! 8
	store8
	#
	load8! &2 	#X2
	add! 16
	load8
	#
	load8! &2 	#X1
	add
	load8! &3 	#X2
	add! 16
	store8
	#
	load8! &3 	#X3
	load8! &2 	#X1
	sub
	store8! &4 	#X3
	# CBRANCH EQ0
	load8! &3 	#X3
	jump_not_zero! .L205.l_oc660a9
	# END CBRANCH
	jump! .L183.l_oc660a9
.L188.l_oc660a9:
	push! 0
	store8! &1 	#AR
	jump! .L178.l_oc660a9
.L208.l_oc660a9:
	load8! &2 	#X2
	add! 108
	load4
	#
	store8! &2 	#X1
	jump! .L178.l_oc660a9
.L207.l_oc660a9:
	push! .LC5.l_oc660a9
	push! -2
	load8! &4 	#X2
	call! gz_error
	set_sp! (+ &0 24)
	

	push! -1
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &9
.L209.l_oc660a9:

	# epilogue
	set_sp! &7
	return

# FUNCTION ENDS:gzread

.LC6.l_oc660a9:
#	.string "request does not fit in a size_t"
	data1 [ 114 101 113 117 101 115 116 32 100 111 101 115 32 110 111 116 32 102 105 116 32 105 110 32 97 32 115 105 122 101 95 116 0 ]
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole move
	#peephole move
	#peephole move+push+sub
	#peephole move_dead
	#peephole zero_extend
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)

# FUNCTION BEGINS:gzfread
	EXPORT	gzfread
gzfread:
	# prologue (7 GPRs)

	set_sp! &-7

	load8! &11
	store8! &3 	#X2
	# CBRANCH EQ0
	load8! &2 	#X2
	jump_zero! .L223.l_oc660a9
	# END CBRANCH
	load8! &2 	#X2
	add! 24
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	push! 7247
	xor
	push! 1
	lt_u
	jump_zero! .L224.l_oc660a9
	# END CBRANCH
	load8! &2 	#X2
	add! 108
	load4
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_zero! .L213.l_oc660a9
	# END CBRANCH
	# CBRANCH EQ
	load4! &0 	#AR
	push! 4294967291
	xor
	jump_zero! .L213.l_oc660a9
	# END CBRANCH
	push! 0
	store8! &4 	#X3
.L211.l_oc660a9:
	load8! &3 	#X3
	store8! &9
	jump! .L244.l_oc660a9
.L224.l_oc660a9:
	push! 0
	store8! &4 	#X3
	load8! &3 	#X3
	store8! &9
	jump! .L244.l_oc660a9
.L213.l_oc660a9:
	# CBRANCH EQ0
	load8! &9
	jump_zero! .L226.l_oc660a9
	# END CBRANCH
	load8! &10
	load8! &10
	mult
	store8! &4 	#X3
	load8! &3 	#X3
	load8! &10
	div_u
	# CBRANCH - peep (modesize=8)
	load8! &11
	xor
	push! 1
	lt_u
	jump_zero! .L245.l_oc660a9
	# END CBRANCH
	# CBRANCH EQ0
	load8! &3 	#X3
	jump_zero! .L211.l_oc660a9
	# END CBRANCH
	load8! &2 	#X2
	add! 104
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_not_zero! .L215.l_oc660a9
	# END CBRANCH
.L218.l_oc660a9:
	load8! &3 	#X3
	load8! &9
	load8! &4 	#X2
	call! .Li_gz_read.part_2.l_oc660a9
	store8! &3

	set_sp! &2
	load8! &0 	#AR
	load8! &10
	div_u
	store8! &4 	#X3
	load8! &3 	#X3
	store8! &9
	jump! .L244.l_oc660a9
.L226.l_oc660a9:
	push! 0
	store8! &4 	#X3
	load8! &3 	#X3
	store8! &9
	jump! .L244.l_oc660a9
.L223.l_oc660a9:
	push! 0
	store8! &4 	#X3
	load8! &3 	#X3
	store8! &9
	jump! .L244.l_oc660a9
.L245.l_oc660a9:
	push! .LC6.l_oc660a9
	push! -2
	load8! &4 	#X2
	call! gz_error
	set_sp! (+ &0 24)
	

	push! 0
	store8! &4 	#X3
	load8! &3 	#X3
	store8! &9
	jump! .L244.l_oc660a9
.L215.l_oc660a9:
	push! 0
	load8! &3 	#X2
	add! 104
	store4
	#
	load8! &2 	#X2
	add! 96
	load8
	#
	store8! &5 	#X4
	# CBRANCH EQ0
	load8! &4 	#X4
	jump_zero! .L218.l_oc660a9
	# END CBRANCH
.L217.l_oc660a9:
	load8! &2 	#X2
	load4
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_zero! .L219.l_oc660a9
	# END CBRANCH
.L246.l_oc660a9:
	load4! &0 	#AR
	store8! &2 	#X1
	# CBRANCH
	load8! &4 	#X4
	add! -9223372036854775808
	load8! &2 	#X1
	add! -9223372036854775808
	lt_u
	jump_zero! .L227.l_oc660a9
	# END CBRANCH
	load4! &4 	#X4
	store8! &7 	#X6
	load8! &6 	#X6
	load8! &1 	#AR
	sub
	neg
	store8! &6 	#X5
	load8! &4 	#X4
	and! 0xffffffff
	store8! &2 	#X1
	load4! &4 	#X4
	store8! &1 	#AR
	load4! &5 	#X5
	load8! &3 	#X2
	store4
	#
	load8! &2 	#X2
	add! 8
	load8
	#
	store8! &6 	#X5
	load4! &0 	#AR
	load8! &6 	#X5
	add
	load8! &3 	#X2
	add! 8
	store8
	#
	load8! &2 	#X2
	add! 16
	load8
	#
	load8! &2 	#X1
	add
	load8! &3 	#X2
	add! 16
	store8
	#
	load8! &4 	#X4
	load8! &2 	#X1
	sub
	store8! &5 	#X4
	# CBRANCH EQ0
	load8! &4 	#X4
	jump_zero! .L218.l_oc660a9
	# END CBRANCH
.L243.l_oc660a9:
	load8! &2 	#X2
	load4
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_not_zero! .L246.l_oc660a9
	# END CBRANCH
.L219.l_oc660a9:
	load8! &2 	#X2
	add! 80
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L222.l_oc660a9
	# END CBRANCH
	load8! &2 	#X2
	add! 128
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L218.l_oc660a9
	# END CBRANCH
.L222.l_oc660a9:
	load8! &2 	#X2
	call! gz_fetch.s_oc660a9
	store8! &1

	# CBRANCH
	load4! &0 	#AR
	push! 4294967295
	xor
	push! 1
	lt_u
	jump_zero! .L217.l_oc660a9
	# END CBRANCH
	push! 0
	store8! &4 	#X3
	load8! &3 	#X3
	store8! &9
	jump! .L244.l_oc660a9
.L227.l_oc660a9:
	push! 0
	store8! &6 	#X5
	load4! &5 	#X5
	load8! &3 	#X2
	store4
	#
	load8! &2 	#X2
	add! 8
	load8
	#
	store8! &6 	#X5
	load4! &0 	#AR
	load8! &6 	#X5
	add
	load8! &3 	#X2
	add! 8
	store8
	#
	load8! &2 	#X2
	add! 16
	load8
	#
	load8! &2 	#X1
	add
	load8! &3 	#X2
	add! 16
	store8
	#
	load8! &4 	#X4
	load8! &2 	#X1
	sub
	store8! &5 	#X4
	# CBRANCH EQ0
	load8! &4 	#X4
	jump_not_zero! .L243.l_oc660a9
	# END CBRANCH
	jump! .L218.l_oc660a9
.L244.l_oc660a9:

	# epilogue
	set_sp! &7
	return

# FUNCTION ENDS:gzfread

	#peephole zero_extend
	#peephole 1
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole 1
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole move
	#peephole move
	#peephole move+push+sub
	#peephole move_dead
	#peephole zero_extend
	#peephole pop+cmp
	#peephole 1
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole pop+cmp
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole zero_extend
	#peephole popdi(deadreg)+push
	#peephole and+popsi

# FUNCTION BEGINS:gzgetc
	EXPORT	gzgetc
gzgetc:
	# prologue (6 GPRs)

	set_sp! &-7

	load8! &8
	store8! &3 	#X2
	# CBRANCH EQ0
	load8! &2 	#X2
	jump_zero! .L259.l_oc660a9
	# END CBRANCH
	load8! &2 	#X2
	add! 24
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	push! 7247
	xor
	push! 1
	lt_u
	jump_zero! .L260.l_oc660a9
	# END CBRANCH
	load8! &2 	#X2
	add! 108
	load4
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_zero! .L249.l_oc660a9
	# END CBRANCH
	# CBRANCH
	load4! &0 	#AR
	push! 4294967291
	xor
	push! 1
	lt_u
	jump_zero! .L261.l_oc660a9
	# END CBRANCH
.L249.l_oc660a9:
	load8! &2 	#X2
	load4
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_zero! .L250.l_oc660a9
	# END CBRANCH
	load8! &0 	#AR
	add! -1
	load8! &3 	#X2
	store4
	#
	load8! &2 	#X2
	add! 16
	load8
	#
	add! 1
	load8! &3 	#X2
	add! 16
	store8
	#
	load8! &2 	#X2
	add! 8
	load8
	#
	store8! &1 	#AR
	load8! &0 	#AR
	add! 1
	load8! &3 	#X2
	add! 8
	store8
	#
	load8! &0 	#AR
	load1
	#
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &9
	jump! .L280.l_oc660a9
.L250.l_oc660a9:
	load8! &2 	#X2
	add! 104
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_not_zero! .L281.l_oc660a9
	# END CBRANCH
.L251.l_oc660a9:
	push! 1
	push! &0
	add! 56
	#peep - pop(deadreg)+pusharg
	load8! &4 	#X2
	call! .Li_gz_read.part_2.l_oc660a9
	store8! &3

	set_sp! &2
	# CBRANCH
	push! 0
	add! -2147483648
	load4! &1 	#AR
	add! -2147483648
	lt_u
	jump_zero! .L258.l_oc660a9
	# END CBRANCH
	load1! &6
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &9
	jump! .L280.l_oc660a9
.L281.l_oc660a9:
	push! 0
	load8! &3 	#X2
	add! 104
	store4
	#
	load8! &2 	#X2
	add! 96
	load8
	#
	store8! &4 	#X3
	# CBRANCH EQ0
	load8! &3 	#X3
	jump_zero! .L251.l_oc660a9
	# END CBRANCH
	push! 0
	store8! &1 	#AR
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_zero! .L252.l_oc660a9
	# END CBRANCH
.L282.l_oc660a9:
	load4! &0 	#AR
	store8! &2 	#X1
	# CBRANCH
	load8! &3 	#X3
	add! -9223372036854775808
	load8! &2 	#X1
	add! -9223372036854775808
	lt_u
	jump_zero! .L262.l_oc660a9
	# END CBRANCH
	load4! &3 	#X3
	store8! &6 	#X5
	load8! &5 	#X5
	load8! &1 	#AR
	sub
	neg
	store8! &5 	#X4
	load8! &3 	#X3
	and! 0xffffffff
	store8! &2 	#X1
	load4! &3 	#X3
	store8! &1 	#AR
	load4! &4 	#X4
	load8! &3 	#X2
	store4
	#
	load8! &2 	#X2
	add! 8
	load8
	#
	store8! &5 	#X4
	load4! &0 	#AR
	load8! &5 	#X4
	add
	load8! &3 	#X2
	add! 8
	store8
	#
	load8! &2 	#X2
	add! 16
	load8
	#
	load8! &2 	#X1
	add
	load8! &3 	#X2
	add! 16
	store8
	#
	load8! &3 	#X3
	load8! &2 	#X1
	sub
	store8! &4 	#X3
	# CBRANCH EQ0
	load8! &3 	#X3
	jump_zero! .L251.l_oc660a9
	# END CBRANCH
.L254.l_oc660a9:
	load8! &2 	#X2
	load4
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_not_zero! .L282.l_oc660a9
	# END CBRANCH
.L252.l_oc660a9:
	load8! &2 	#X2
	add! 80
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L255.l_oc660a9
	# END CBRANCH
	load8! &2 	#X2
	add! 128
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L251.l_oc660a9
	# END CBRANCH
.L255.l_oc660a9:
	load8! &2 	#X2
	call! gz_fetch.s_oc660a9
	store8! &1

	# CBRANCH
	load4! &0 	#AR
	push! 4294967295
	xor
	push! 1
	lt_u
	jump_zero! .L254.l_oc660a9
	# END CBRANCH
.L258.l_oc660a9:
	push! -1
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &9
	jump! .L280.l_oc660a9
.L262.l_oc660a9:
	push! 0
	store8! &5 	#X4
	load4! &4 	#X4
	load8! &3 	#X2
	store4
	#
	load8! &2 	#X2
	add! 8
	load8
	#
	store8! &5 	#X4
	load4! &0 	#AR
	load8! &5 	#X4
	add
	load8! &3 	#X2
	add! 8
	store8
	#
	load8! &2 	#X2
	add! 16
	load8
	#
	load8! &2 	#X1
	add
	load8! &3 	#X2
	add! 16
	store8
	#
	load8! &3 	#X3
	load8! &2 	#X1
	sub
	store8! &4 	#X3
	# CBRANCH EQ0
	load8! &3 	#X3
	jump_not_zero! .L254.l_oc660a9
	# END CBRANCH
	jump! .L251.l_oc660a9
.L261.l_oc660a9:
	push! -1
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &9
	jump! .L280.l_oc660a9
.L260.l_oc660a9:
	push! -1
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &9
	jump! .L280.l_oc660a9
.L259.l_oc660a9:
	push! -1
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &9
.L280.l_oc660a9:

	# epilogue
	set_sp! &7
	return

# FUNCTION ENDS:gzgetc


# FUNCTION BEGINS:gzgetc_
	EXPORT	gzgetc_
gzgetc_:
	# prologue (1 GPRs)
	push! 0

	load8! &2
	call! gzgetc
	store8! &1

	load4! &0 	#AR
	store4! &3

	# epilogue
	store8! &0 #set_sp! &1
	return

# FUNCTION ENDS:gzgetc_

.LC7.l_oc660a9:
#	.string "out of room to push characters"
	data1 [ 111 117 116 32 111 102 32 114 111 111 109 32 116 111 32 112 117 115 104 32 99 104 97 114 97 99 116 101 114 115 0 ]
	#peephole move
	#peephole move+binop
	#peephole move_dead
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole move
	#peephole push+add+pop+push+ind pop
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop+cmp
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole move
	#peephole move+push(pushable)
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole move
	#peephole move+binop
	#peephole move_dead
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole move
	#peephole move
	#peephole move+push+sub
	#peephole move_dead
	#peephole zero_extend
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole move+push(pushable)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole popdi(deadreg)+push
	#peephole and+popsi

# FUNCTION BEGINS:gzungetc
	EXPORT	gzungetc
gzungetc:
	# prologue (7 GPRs)

	set_sp! &-7

	load4! &8
	store8! &7 	#X6
	load8! &9
	store8! &3 	#X2
	# CBRANCH EQ0
	load8! &2 	#X2
	jump_zero! .L288.l_oc660a9
	# END CBRANCH
	load8! &2 	#X2
	add! 24
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	push! 7247
	xor
	push! 1
	lt_u
	jump_zero! .L288.l_oc660a9
	# END CBRANCH
	load8! &2 	#X2
	add! 108
	load4
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_zero! .L289.l_oc660a9
	# END CBRANCH
	# CBRANCH
	load4! &0 	#AR
	push! 4294967291
	xor
	push! 1
	lt_u
	jump_zero! .L288.l_oc660a9
	# END CBRANCH
.L289.l_oc660a9:
	load8! &2 	#X2
	add! 104
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_not_zero! .L290.l_oc660a9
	# END CBRANCH
.L293.l_oc660a9:
	# CBRANCH
	load4! &6 	#X6
	add! -2147483648
	push! 0
	add! -2147483648
	lt_u
	not
	jump_zero! .L288.l_oc660a9
	# END CBRANCH
	load8! &2 	#X2
	load4
	#
	store8! &4 	#X3
	load8! &2 	#X2
	add! 40
	load4
	#
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	store8! &5 	#X4
	# CBRANCH EQ0
	load4! &3 	#X3
	jump_zero! .L304.l_oc660a9
	# END CBRANCH
	# CBRANCH EQ
	load4! &3 	#X3
	load4! &5 	#X4
	xor
	jump_zero! .L321.l_oc660a9
	# END CBRANCH
	load8! &2 	#X2
	add! 8
	load8
	#
	store8! &1 	#AR
	load8! &2 	#X2
	add! 56
	load8
	#
	store8! &6 	#X5
	# CBRANCH EQ
	load8! &0 	#AR
	load8! &6 	#X5
	xor
	jump_zero! .L322.l_oc660a9
	# END CBRANCH
.L301.l_oc660a9:
	load8! &3 	#X3
	add! 1
	load8! &3 	#X2
	store4
	#
	load8! &0 	#AR
	add! -1
	load8! &3 	#X2
	add! 8
	store8
	#
	load1! &6 	#X6
	load8! &1 	#AR
	add! -1
	store1
	load8! &2 	#X2
	add! 16
	load8
	#
	add! -1
	load8! &3 	#X2
	add! 16
	store8
	#
	push! 0
	load8! &3 	#X2
	add! 84
	store4
	#
	load4! &6 	#X6
	store8! &1 	#AR
.L285.l_oc660a9:
	load4! &0 	#AR
	store4! &9
	jump! .L323.l_oc660a9
.L290.l_oc660a9:
	push! 0
	load8! &3 	#X2
	add! 104
	store4
	#
	load8! &2 	#X2
	add! 96
	load8
	#
	store8! &4 	#X3
	# CBRANCH EQ0
	load8! &3 	#X3
	jump_zero! .L293.l_oc660a9
	# END CBRANCH
.L292.l_oc660a9:
	load8! &2 	#X2
	load4
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_zero! .L294.l_oc660a9
	# END CBRANCH
.L324.l_oc660a9:
	load4! &0 	#AR
	store8! &2 	#X1
	# CBRANCH
	load8! &3 	#X3
	add! -9223372036854775808
	load8! &2 	#X1
	add! -9223372036854775808
	lt_u
	jump_zero! .L305.l_oc660a9
	# END CBRANCH
	load4! &3 	#X3
	store8! &6 	#X5
	load8! &5 	#X5
	load8! &1 	#AR
	sub
	neg
	store8! &5 	#X4
	load8! &3 	#X3
	and! 0xffffffff
	store8! &2 	#X1
	load4! &3 	#X3
	store8! &1 	#AR
	load4! &4 	#X4
	load8! &3 	#X2
	store4
	#
	load8! &2 	#X2
	add! 8
	load8
	#
	store8! &5 	#X4
	load4! &0 	#AR
	load8! &5 	#X4
	add
	load8! &3 	#X2
	add! 8
	store8
	#
	load8! &2 	#X2
	add! 16
	load8
	#
	load8! &2 	#X1
	add
	load8! &3 	#X2
	add! 16
	store8
	#
	load8! &3 	#X3
	load8! &2 	#X1
	sub
	store8! &4 	#X3
	# CBRANCH EQ0
	load8! &3 	#X3
	jump_zero! .L293.l_oc660a9
	# END CBRANCH
.L320.l_oc660a9:
	load8! &2 	#X2
	load4
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_not_zero! .L324.l_oc660a9
	# END CBRANCH
.L294.l_oc660a9:
	load8! &2 	#X2
	add! 80
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L297.l_oc660a9
	# END CBRANCH
	load8! &2 	#X2
	add! 128
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L298.l_oc660a9
	# END CBRANCH
.L297.l_oc660a9:
	load8! &2 	#X2
	call! gz_fetch.s_oc660a9
	store8! &1

	# CBRANCH
	load4! &0 	#AR
	push! 4294967295
	xor
	push! 1
	lt_u
	jump_zero! .L292.l_oc660a9
	# END CBRANCH
.L288.l_oc660a9:
	push! -1
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &9
	jump! .L323.l_oc660a9
.L305.l_oc660a9:
	push! 0
	store8! &5 	#X4
	load4! &4 	#X4
	load8! &3 	#X2
	store4
	#
	load8! &2 	#X2
	add! 8
	load8
	#
	store8! &5 	#X4
	load4! &0 	#AR
	load8! &5 	#X4
	add
	load8! &3 	#X2
	add! 8
	store8
	#
	load8! &2 	#X2
	add! 16
	load8
	#
	load8! &2 	#X1
	add
	load8! &3 	#X2
	add! 16
	store8
	#
	load8! &3 	#X3
	load8! &2 	#X1
	sub
	store8! &4 	#X3
	# CBRANCH EQ0
	load8! &3 	#X3
	jump_not_zero! .L320.l_oc660a9
	# END CBRANCH
	jump! .L293.l_oc660a9
.L298.l_oc660a9:
	# CBRANCH
	load4! &6 	#X6
	add! -2147483648
	push! 0
	add! -2147483648
	lt_u
	not
	jump_zero! .L288.l_oc660a9
	# END CBRANCH
	load8! &2 	#X2
	add! 40
	load4
	#
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &1 	#AR
	add
	store8! &5 	#X4
.L304.l_oc660a9:
	push! 1
	load8! &3 	#X2
	store4
	#
	load8! &2 	#X2
	add! 56
	load8
	#
	store8! &2 	#X1
	load4! &4 	#X4
	add! -1
	load8! &2 	#X1
	add
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &3 	#X2
	add! 8
	store8
	#
	load1! &6 	#X6
	load8! &1 	#AR
	store1
	#
	load8! &2 	#X2
	add! 16
	load8
	#
	add! -1
	load8! &3 	#X2
	add! 16
	store8
	#
	push! 0
	load8! &3 	#X2
	add! 84
	store4
	#
	load4! &6 	#X6
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &9
	jump! .L323.l_oc660a9
.L322.l_oc660a9:
	load4! &3 	#X3
	load8! &1 	#AR
	add
	store8! &2 	#X1
	load4! &4 	#X4
	load8! &1 	#AR
	add
	store8! &1 	#AR
	# CBRANCH
	load8! &5 	#X5
	load8! &2 	#X1
	lt_u
	jump_zero! .L301.l_oc660a9
	# END CBRANCH
.L303.l_oc660a9:
	load8! &1 	#X1
	add! -1
	store8! &2 	#X1
	load8! &0 	#AR
	add! -1
	store8! &1 	#AR
	load8! &1 	#X1
	load1
	#
	load8! &1 	#AR
	store1
	#
	load8! &2 	#X2
	add! 56
	load8
	#
	# CBRANCH - peep (modesize=8)
	load8! &2 	#X1
	lt_u
	not
	jump_zero! .L303.l_oc660a9
	# END CBRANCH
	load8! &2 	#X2
	load4
	#
	store8! &4 	#X3
	load8! &3 	#X3
	add! 1
	load8! &3 	#X2
	store4
	#
	load8! &0 	#AR
	add! -1
	load8! &3 	#X2
	add! 8
	store8
	#
	load1! &6 	#X6
	load8! &1 	#AR
	add! -1
	store1
	load8! &2 	#X2
	add! 16
	load8
	#
	add! -1
	load8! &3 	#X2
	add! 16
	store8
	#
	push! 0
	load8! &3 	#X2
	add! 84
	store4
	#
	load4! &6 	#X6
	store8! &1 	#AR
	jump! .L285.l_oc660a9
.L321.l_oc660a9:
	push! .LC7.l_oc660a9
	push! -3
	load8! &4 	#X2
	call! gz_error
	set_sp! (+ &0 24)
	

	push! -1
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &9
.L323.l_oc660a9:

	# epilogue
	set_sp! &7
	return

# FUNCTION ENDS:gzungetc

	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move+push+sub
	#peephole move_dead
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole move
	#peephole move
	#peephole move+push+sub
	#peephole move_dead
	#peephole zero_extend
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole popdi(deadreg)+push
	#peephole and+popsi

# FUNCTION BEGINS:gzgets
	EXPORT	gzgets
gzgets:
	# prologue (9 GPRs)

	set_sp! &-9

	load8! &10
	store8! &3 	#X2
	load8! &11
	store8! &8 	#X7
	# CBRANCH EQ0
	load8! &2 	#X2
	jump_zero! .L328.l_oc660a9
	# END CBRANCH
	# CBRANCH EQ0
	load8! &7 	#X7
	jump_zero! .L328.l_oc660a9
	# END CBRANCH
	# CBRANCH
	push! 0
	add! -2147483648
	load4! &13
	add! -2147483648
	lt_u
	jump_zero! .L328.l_oc660a9
	# END CBRANCH
	load8! &2 	#X2
	add! 24
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	push! 7247
	xor
	push! 1
	lt_u
	jump_zero! .L328.l_oc660a9
	# END CBRANCH
	load8! &2 	#X2
	add! 108
	load4
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_zero! .L329.l_oc660a9
	# END CBRANCH
	# CBRANCH
	load4! &0 	#AR
	push! 4294967291
	xor
	push! 1
	lt_u
	jump_zero! .L328.l_oc660a9
	# END CBRANCH
.L329.l_oc660a9:
	load8! &2 	#X2
	add! 104
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_not_zero! .L330.l_oc660a9
	# END CBRANCH
.L333.l_oc660a9:
	load4! &12
	add! -1
	store8! &7 	#X6
	# CBRANCH EQ0
	load4! &6 	#X6
	jump_zero! .L328.l_oc660a9
	# END CBRANCH
	load8! &2 	#X2
	load4
	#
	store8! &1 	#AR
	load8! &7 	#X7
	store8! &4 	#X3
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_zero! .L367.l_oc660a9
	# END CBRANCH
.L338.l_oc660a9:
	load4! &6 	#X6
	store8! &6 	#X5
	# CBRANCH
	load4! &0 	#AR
	load4! &7 	#X6
	lt_u
	jump_zero! .L340.l_oc660a9
	# END CBRANCH
	load4! &0 	#AR
	store8! &6 	#X5
.L340.l_oc660a9:
	load4! &5 	#X5
	store8! &9 	#X8
	load8! &2 	#X2
	add! 8
	load8
	#
	store8! &5 	#X4
	load8! &8 	#X8
	push! 10
	load8! &6 	#X4
	call! memchr
	store8! &3

	set_sp! &2
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L341.l_oc660a9
	# END CBRANCH
	load8! &0 	#AR
	load8! &5 	#X4
	sub
	add! 1
	store8! &7 	#X6
	load4! &6 	#X6
	store8! &6 	#X5
	load8! &5 	#X5
	load8! &5 	#X4
	load8! &5 	#X3
	call! memcpy
	store8! &3

	set_sp! &2
	load8! &2 	#X2
	load4
	#
	store8! &2 	#X1
	load8! &6 	#X6
	load8! &2 	#X1
	sub
	neg
	load8! &3 	#X2
	store4
	#
	load8! &2 	#X2
	add! 8
	load8
	#
	load8! &6 	#X5
	add
	load8! &3 	#X2
	add! 8
	store8
	#
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &1 	#AR
	load4! &6 	#X6
	load8! &1 	#AR
	add
	load8! &3 	#X2
	add! 16
	store8
	#
	load8! &3 	#X3
	load8! &6 	#X5
	add
	store8! &4 	#X3
.L339.l_oc660a9:
	# CBRANCH EQ
	load8! &3 	#X3
	load8! &8 	#X7
	xor
	jump_zero! .L328.l_oc660a9
	# END CBRANCH
	push! 0
	load8! &4 	#X3
	store1
	#
	load8! &7 	#X7
	store8! &1 	#AR
	load8! &0 	#AR
	store8! &11
	jump! .L368.l_oc660a9
.L334.l_oc660a9:
	load8! &2 	#X2
	add! 80
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L337.l_oc660a9
	# END CBRANCH
	load8! &2 	#X2
	add! 128
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L333.l_oc660a9
	# END CBRANCH
.L337.l_oc660a9:
	load8! &2 	#X2
	call! gz_fetch.s_oc660a9
	store8! &1

	# CBRANCH
	load4! &0 	#AR
	push! 4294967295
	xor
	push! 1
	lt_u
	jump_zero! .L332.l_oc660a9
	# END CBRANCH
.L328.l_oc660a9:
	push! 0
	store8! &1 	#AR
	load8! &0 	#AR
	store8! &11
	jump! .L368.l_oc660a9
.L367.l_oc660a9:
	load8! &2 	#X2
	call! gz_fetch.s_oc660a9
	store8! &1

	# CBRANCH EQ
	load4! &0 	#AR
	push! 4294967295
	xor
	jump_zero! .L328.l_oc660a9
	# END CBRANCH
	load8! &2 	#X2
	load4
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_not_zero! .L338.l_oc660a9
	# END CBRANCH
	push! 1
	load8! &3 	#X2
	add! 84
	store4
	#
	jump! .L339.l_oc660a9
.L341.l_oc660a9:
	load8! &8 	#X8
	load8! &5 	#X4
	load8! &5 	#X3
	call! memcpy
	store8! &3

	set_sp! &2
	load8! &2 	#X2
	load4
	#
	store8! &2 	#X1
	load8! &5 	#X5
	load8! &2 	#X1
	sub
	neg
	store8! &1 	#AR
	load4! &0 	#AR
	load8! &3 	#X2
	store4
	#
	load8! &2 	#X2
	add! 8
	load8
	#
	load8! &9 	#X8
	add
	load8! &3 	#X2
	add! 8
	store8
	#
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &2 	#X1
	load4! &5 	#X5
	load8! &2 	#X1
	add
	load8! &3 	#X2
	add! 16
	store8
	#
	load8! &5 	#X5
	load8! &7 	#X6
	sub
	neg
	store8! &7 	#X6
	load8! &3 	#X3
	load8! &9 	#X8
	add
	store8! &4 	#X3
	# CBRANCH EQ0
	load4! &6 	#X6
	jump_zero! .L339.l_oc660a9
	# END CBRANCH
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_not_zero! .L338.l_oc660a9
	# END CBRANCH
	jump! .L367.l_oc660a9
.L330.l_oc660a9:
	push! 0
	load8! &3 	#X2
	add! 104
	store4
	#
	load8! &2 	#X2
	add! 96
	load8
	#
	store8! &4 	#X3
	# CBRANCH EQ0
	load8! &3 	#X3
	jump_zero! .L333.l_oc660a9
	# END CBRANCH
.L332.l_oc660a9:
	load8! &2 	#X2
	load4
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_zero! .L334.l_oc660a9
	# END CBRANCH
	load4! &0 	#AR
	store8! &2 	#X1
	# CBRANCH
	load8! &3 	#X3
	add! -9223372036854775808
	load8! &2 	#X1
	add! -9223372036854775808
	lt_u
	jump_zero! .L343.l_oc660a9
	# END CBRANCH
	load4! &3 	#X3
	store8! &6 	#X5
	load8! &5 	#X5
	load8! &1 	#AR
	sub
	neg
	store8! &5 	#X4
	load8! &3 	#X3
	and! 0xffffffff
	store8! &2 	#X1
	load4! &3 	#X3
	store8! &1 	#AR
	load4! &4 	#X4
	load8! &3 	#X2
	store4
	#
	load8! &2 	#X2
	add! 8
	load8
	#
	store8! &5 	#X4
	load4! &0 	#AR
	load8! &5 	#X4
	add
	load8! &3 	#X2
	add! 8
	store8
	#
	load8! &2 	#X2
	add! 16
	load8
	#
	load8! &2 	#X1
	add
	load8! &3 	#X2
	add! 16
	store8
	#
	load8! &3 	#X3
	load8! &2 	#X1
	sub
	store8! &4 	#X3
	# CBRANCH EQ0
	load8! &3 	#X3
	jump_not_zero! .L332.l_oc660a9
	# END CBRANCH
	jump! .L333.l_oc660a9
.L343.l_oc660a9:
	push! 0
	store8! &5 	#X4
	load4! &4 	#X4
	load8! &3 	#X2
	store4
	#
	load8! &2 	#X2
	add! 8
	load8
	#
	store8! &5 	#X4
	load4! &0 	#AR
	load8! &5 	#X4
	add
	load8! &3 	#X2
	add! 8
	store8
	#
	load8! &2 	#X2
	add! 16
	load8
	#
	load8! &2 	#X1
	add
	load8! &3 	#X2
	add! 16
	store8
	#
	load8! &3 	#X3
	load8! &2 	#X1
	sub
	store8! &4 	#X3
	# CBRANCH EQ0
	load8! &3 	#X3
	jump_not_zero! .L332.l_oc660a9
	# END CBRANCH
	jump! .L333.l_oc660a9
.L368.l_oc660a9:

	# epilogue
	set_sp! &9
	return

# FUNCTION ENDS:gzgets

	#peephole pop+cmp
	#peephole pop+cmp
	#peephole pop+cmp

# FUNCTION BEGINS:gzdirect
	EXPORT	gzdirect
gzdirect:
	# prologue (3 GPRs)
	push! 0
	push! 0
	push! 0

	load8! &4
	store8! &3 	#X2
	# CBRANCH EQ0
	load8! &2 	#X2
	jump_zero! .L372.l_oc660a9
	# END CBRANCH
	load8! &2 	#X2
	add! 24
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ
	push! 7247
	xor
	jump_zero! .L375.l_oc660a9
	# END CBRANCH
.L371.l_oc660a9:
	load8! &2 	#X2
	add! 64
	load4
	#
	store8! &1 	#AR
.L369.l_oc660a9:
	load4! &0 	#AR
	store4! &5
	jump! .L376.l_oc660a9
.L375.l_oc660a9:
	load8! &2 	#X2
	add! 68
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_not_zero! .L371.l_oc660a9
	# END CBRANCH
	load8! &2 	#X2
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_not_zero! .L371.l_oc660a9
	# END CBRANCH
	load8! &2 	#X2
	call! gz_look.s_oc660a9
	store8! &1

	load8! &2 	#X2
	add! 64
	load4
	#
	store8! &1 	#AR
	jump! .L369.l_oc660a9
.L372.l_oc660a9:
	push! 0
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &5
.L376.l_oc660a9:

	# epilogue
	set_sp! &3
	return

# FUNCTION ENDS:gzdirect

	#peephole pop+pusharg
	#peephole pop+pusharg
	#peephole pop+pusharg
	#peephole pop+pusharg
	#peephole pop+pusharg
	#peephole pop+cmp
	#peephole pop+cmp

# FUNCTION BEGINS:gzclose_r
	EXPORT	gzclose_r
gzclose_r:
	# prologue (5 GPRs)

	set_sp! &-5

	load8! &6
	store8! &3 	#X2
	# CBRANCH EQ0
	load8! &2 	#X2
	jump_zero! .L381.l_oc660a9
	# END CBRANCH
	load8! &2 	#X2
	add! 24
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	push! 7247
	xor
	push! 1
	lt_u
	jump_zero! .L382.l_oc660a9
	# END CBRANCH
	load8! &2 	#X2
	add! 40
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_not_zero! .L392.l_oc660a9
	# END CBRANCH
.L379.l_oc660a9:
	load8! &2 	#X2
	add! 108
	load4
	#
	store8! &4 	#X3
	# CBRANCH EQ
	load4! &3 	#X3
	push! 4294967291
	xor
	jump_zero! .L380.l_oc660a9
	# END CBRANCH
	push! 0
	store8! &4 	#X3
.L380.l_oc660a9:
	push! 0
	push! 0
	load8! &4 	#X2
	call! gz_error
	set_sp! (+ &0 24)
	

	load8! &2 	#X2
	add! 32
	load8
	#
	#peep - pop(deadreg)+pusharg
	call! free
	set_sp! (+ &0 8)
	

	load8! &2 	#X2
	add! 28
	load4
	#
	and! 0x0ffffffff
	#peep - pop(deadreg)+pusharg
	call! close
	store8! &1

	load4! &0 	#AR
	store8! &5 	#X4
	load8! &2 	#X2
	call! free
	set_sp! (+ &0 8)
	

	# CBRANCH EQ0
	load4! &4 	#X4
	jump_not_zero! .L393.l_oc660a9
	# END CBRANCH
	load4! &3 	#X3
	store4! &7
	jump! .L394.l_oc660a9
.L392.l_oc660a9:
	load8! &2 	#X2
	add! 120
	#peep - pop(deadreg)+pusharg
	call! inflateEnd
	store8! &1

	load8! &2 	#X2
	add! 56
	load8
	#
	#peep - pop(deadreg)+pusharg
	call! free
	set_sp! (+ &0 8)
	

	load8! &2 	#X2
	add! 48
	load8
	#
	#peep - pop(deadreg)+pusharg
	call! free
	set_sp! (+ &0 8)
	

	jump! .L379.l_oc660a9
.L393.l_oc660a9:
	push! -1
	store8! &4 	#X3
	load4! &3 	#X3
	store4! &7
	jump! .L394.l_oc660a9
.L382.l_oc660a9:
	push! -2
	store8! &4 	#X3
	load4! &3 	#X3
	store4! &7
	jump! .L394.l_oc660a9
.L381.l_oc660a9:
	push! -2
	store8! &4 	#X3
	load4! &3 	#X3
	store4! &7
.L394.l_oc660a9:

	# epilogue
	set_sp! &5
	return

# FUNCTION ENDS:gzclose_r

#	IMPORT inflateEnd
#	IMPORT close
#	IMPORT memchr
#	IMPORT inflateReset
#	IMPORT memcpy
#	IMPORT free
#	IMPORT inflateInit2_
#	IMPORT malloc
#	IMPORT strerror
#	IMPORT __errno
#	IMPORT gz_error
#	IMPORT read
#	IMPORT inflate
#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: o0fadd4
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"gzwrite.c"
#	.text
.LC0.l_o0fadd4:
#	.string "out of memory"
	data1 [ 111 117 116 32 111 102 32 109 101 109 111 114 121 0 ]
.LC1.l_o0fadd4:
#	.string "1.2.11"
	data1 [ 49 46 50 46 49 49 0 ]
	#peephole pop+pusharg
	#peephole pop+pusharg
	#peephole zero_extend
	#peephole pop+pusharg
	#peephole pop+cmp
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole zero_extend
	#peephole pop+pusharg
	#peephole pop+block+push+block
	#peephole popdi(deadreg)+push

# FUNCTION BEGINS:gz_init
gz_init.s_o0fadd4:
	# prologue (5 GPRs)

	set_sp! &-5

	load8! &6
	store8! &3 	#X2
	load8! &2 	#X2
	add! 44
	load4
	#
	store8! &4 	#X3
	load8! &3 	#X3
	load8! &4 	#X3
	add
	and! 0xffffffff
	#peep - pop(deadreg)+pusharg
	call! malloc
	store8! &1

	load8! &0 	#AR
	store8! &5 	#X4
	load8! &0 	#AR
	load8! &3 	#X2
	add! 48
	store8
	#
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L10.l_o0fadd4
	# END CBRANCH
	load8! &2 	#X2
	add! 64
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L11.l_o0fadd4
	# END CBRANCH
	load4! &3 	#X3
	load8! &3 	#X2
	add! 40
	store4
	#
	push! 0
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &7
	jump! .L12.l_o0fadd4
.L11.l_o0fadd4:
	load4! &3 	#X3
	#peep - pop(deadreg)+pusharg
	call! malloc
	store8! &1

	load8! &0 	#AR
	load8! &3 	#X2
	add! 56
	store8
	#
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L13.l_o0fadd4
	# END CBRANCH
	push! 0
	load8! &3 	#X2
	add! 184
	store8
	#
	push! 0
	load8! &3 	#X2
	add! 192
	store8
	#
	push! 0
	load8! &3 	#X2
	add! 200
	store8
	#
	load8! &2 	#X2
	add! 92
	load4
	#
	store8! &4 	#X3
	load8! &2 	#X2
	add! 88
	load4
	#
	store8! &2 	#X1
	load8! &2 	#X2
	add! 120
	store8! &1 	#AR
	push! 112
	push! .LC1.l_o0fadd4
	load4! &5 	#X3
	push! 8
	push! 31
	push! 8
	load4! &7 	#X1
	load8! &7 	#AR
	call! deflateInit2_
	store8! &8

	set_sp! &7
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_not_zero! .L14.l_o0fadd4
	# END CBRANCH
	push! 0
	load8! &3 	#X2
	add! 120
	store8
	#
	load8! &2 	#X2
	add! 44
	load4
	#
	store8! &2 	#X1
	load8! &2 	#X2
	add! 64
	load4
	#
	store8! &1 	#AR
	load4! &1 	#X1
	load8! &3 	#X2
	add! 40
	store4
	#
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_not_zero! .L7.l_o0fadd4
	# END CBRANCH
	load4! &1 	#X1
	load8! &3 	#X2
	add! 152
	store4
	#
	load8! &2 	#X2
	add! 56
	load8
	#
	store8! &2 	#X1
	load8! &1 	#X1
	load8! &3 	#X2
	add! 144
	store8
	#
	load8! &1 	#X1
	load8! &3 	#X2
	add! 8
	store8
	#
	load4! &0 	#AR
	store4! &7
	jump! .L12.l_o0fadd4
.L10.l_o0fadd4:
	push! .LC0.l_o0fadd4
	push! -4
	load8! &4 	#X2
	call! gz_error
	set_sp! (+ &0 24)
	

	push! -1
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &7
	jump! .L12.l_o0fadd4
.L14.l_o0fadd4:
	load8! &2 	#X2
	add! 56
	load8
	#
	#peep - pop(deadreg)+pusharg
	call! free
	set_sp! (+ &0 8)
	

	load8! &2 	#X2
	add! 48
	load8
	#
	#peep - pop(deadreg)+pusharg
	call! free
	set_sp! (+ &0 8)
	

	push! .LC0.l_o0fadd4
	push! -4
	load8! &4 	#X2
	call! gz_error
	set_sp! (+ &0 24)
	

	push! -1
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &7
	jump! .L12.l_o0fadd4
.L13.l_o0fadd4:
	load8! &4 	#X4
	call! free
	set_sp! (+ &0 8)
	

	push! .LC0.l_o0fadd4
	push! -4
	load8! &4 	#X2
	call! gz_error
	set_sp! (+ &0 24)
	

	push! -1
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &7
	jump! .L12.l_o0fadd4
.L7.l_o0fadd4:
	push! 0
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &7
.L12.l_o0fadd4:

	# epilogue
	set_sp! &5
	return

# FUNCTION ENDS:gz_init

.LC2.l_o0fadd4:
#	.string "internal error:deflate stream corrupt"
	data1 [ 105 110 116 101 114 110 97 108 32 101 114 114 111 114 58 32 100 101 102 108 97 116 101 32 115 116 114 101 97 109 32 99 111 114 114 117 112 116 0 ]
	#peephole pop+push+commut(di)
	#peephole pop+pusharg
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole pop+push+commut(di)
	#peephole pop+pusharg
	#peephole zero_extend
	#peephole pop+cmp
	#peephole pop+block+push+block

# FUNCTION BEGINS:gz_comp
gz_comp.s_o0fadd4:
	# prologue (8 GPRs)

	set_sp! &-8

	load8! &9
	store8! &3 	#X2
	load4! &10
	store8! &6 	#X5
	load8! &2 	#X2
	add! 40
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L16.l_o0fadd4
	# END CBRANCH
	load8! &2 	#X2
	add! 64
	load4
	#
	store8! &5 	#X4
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_zero! .L50.l_o0fadd4
	# END CBRANCH
.L17.l_o0fadd4:
	load8! &2 	#X2
	add! 128
	load4
	#
	store8! &2 	#X1
	# CBRANCH EQ0
	load4! &1 	#X1
	jump_zero! .L25.l_o0fadd4
	# END CBRANCH
	load8! &2 	#X2
	add! 120
	load8
	#
	store8! &1 	#AR
.L24.l_o0fadd4:
	# CBRANCH
	push! 1073741824
	load4! &2 	#X1
	lt_u
	jump_zero! .L22.l_o0fadd4
	# END CBRANCH
	push! 1073741824
	store8! &2 	#X1
.L22.l_o0fadd4:
	load4! &1 	#X1
	store8! &4 	#X3
	load8! &2 	#X2
	add! 28
	load4
	#
	store8! &2 	#X1
	load8! &3 	#X3
	load8! &1 	#AR
	load4! &3 	#X1
	call! write
	store8! &3

	set_sp! &2
	# CBRANCH
	load4! &0 	#AR
	add! -2147483648
	push! 0
	add! -2147483648
	lt_u
	not
	jump_zero! .L51.l_o0fadd4
	# END CBRANCH
	load8! &2 	#X2
	add! 128
	load4
	#
	store8! &4 	#X3
	load8! &0 	#AR
	load8! &4 	#X3
	sub
	neg
	store8! &2 	#X1
	load4! &1 	#X1
	load8! &3 	#X2
	add! 128
	store4
	#
	load8! &2 	#X2
	add! 120
	load8
	#
	store8! &4 	#X3
	load4! &0 	#AR
	sigx4
	load8! &4 	#X3
	add
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &3 	#X2
	add! 120
	store8
	#
	# CBRANCH EQ0
	load4! &1 	#X1
	jump_not_zero! .L24.l_o0fadd4
	# END CBRANCH
.L25.l_o0fadd4:
	push! 0
	store8! &5 	#X4
.L15.l_o0fadd4:
	load4! &4 	#X4
	store4! &10
	jump! .L52.l_o0fadd4
.L50.l_o0fadd4:
	load8! &2 	#X2
	add! 120
	store8! &7 	#X6
	load8! &2 	#X2
	add! 152
	load4
	#
	store8! &4 	#X3
	push! 0
	store8! &1 	#AR
.L33.l_o0fadd4:
	# CBRANCH EQ0
	load4! &3 	#X3
	jump_zero! .L26.l_o0fadd4
	# END CBRANCH
	# CBRANCH EQ0
	load4! &5 	#X5
	jump_zero! .L36.l_o0fadd4
	# END CBRANCH
	# CBRANCH
	load4! &5 	#X5
	push! 4
	xor
	push! 1
	lt_u
	jump_zero! .L28.l_o0fadd4
	# END CBRANCH
	# CBRANCH EQ
	load4! &0 	#AR
	push! 1
	xor
	jump_zero! .L28.l_o0fadd4
	# END CBRANCH
	load4! &3 	#X3
	store8! &8 	#X7
.L27.l_o0fadd4:
	load4! &5 	#X5
	load8! &7 	#X6
	call! deflate
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH EQ
	load4! &0 	#AR
	push! 4294967294
	xor
	jump_zero! .L53.l_o0fadd4
	# END CBRANCH
	load8! &2 	#X2
	add! 152
	load4
	#
	store8! &4 	#X3
	# CBRANCH
	load4! &3 	#X3
	load4! &8 	#X7
	xor
	push! 1
	lt_u
	jump_zero! .L33.l_o0fadd4
	# END CBRANCH
	# CBRANCH
	load4! &5 	#X5
	push! 4
	xor
	push! 1
	lt_u
	jump_zero! .L25.l_o0fadd4
	# END CBRANCH
	load8! &6 	#X6
	call! deflateReset
	store8! &1

	load4! &4 	#X4
	store4! &10
	jump! .L52.l_o0fadd4
.L16.l_o0fadd4:
	load8! &2 	#X2
	call! gz_init.s_o0fadd4
	store8! &1

	load4! &0 	#AR
	store8! &5 	#X4
	# CBRANCH EQ
	load4! &0 	#AR
	push! 4294967295
	xor
	jump_zero! .L15.l_o0fadd4
	# END CBRANCH
	load8! &2 	#X2
	add! 64
	load4
	#
	store8! &5 	#X4
	# CBRANCH EQ0
	load4! &4 	#X4
	jump_not_zero! .L17.l_o0fadd4
	# END CBRANCH
	jump! .L50.l_o0fadd4
.L36.l_o0fadd4:
	load4! &3 	#X3
	store8! &8 	#X7
	jump! .L27.l_o0fadd4
.L26.l_o0fadd4:
	load8! &2 	#X2
	add! 144
	load8
	#
	store8! &1 	#AR
	load8! &2 	#X2
	add! 8
	load8
	#
	store8! &2 	#X1
	# CBRANCH
	load8! &1 	#X1
	load8! &1 	#AR
	lt_u
	jump_zero! .L35.l_o0fadd4
	# END CBRANCH
.L31.l_o0fadd4:
	load8! &0 	#AR
	load8! &2 	#X1
	sub
	store8! &1 	#AR
	# CBRANCH
	push! 1073741824
	add! -9223372036854775808
	load8! &1 	#AR
	add! -9223372036854775808
	lt_u
	jump_zero! .L29.l_o0fadd4
	# END CBRANCH
	push! 1073741824
	store8! &1 	#AR
.L29.l_o0fadd4:
	load8! &0 	#AR
	and! 0xffffffff
	store8! &4 	#X3
	load8! &2 	#X2
	add! 28
	load4
	#
	store8! &1 	#AR
	load8! &3 	#X3
	load8! &2 	#X1
	load4! &2 	#AR
	call! write
	store8! &3

	set_sp! &2
	# CBRANCH
	load4! &0 	#AR
	add! -2147483648
	push! 0
	add! -2147483648
	lt_u
	not
	jump_zero! .L54.l_o0fadd4
	# END CBRANCH
	load8! &2 	#X2
	add! 8
	load8
	#
	store8! &2 	#X1
	load4! &0 	#AR
	sigx4
	load8! &2 	#X1
	add
	store8! &2 	#X1
	load8! &1 	#X1
	load8! &3 	#X2
	add! 8
	store8
	#
	load8! &2 	#X2
	add! 144
	load8
	#
	store8! &1 	#AR
	# CBRANCH
	load8! &1 	#X1
	load8! &1 	#AR
	lt_u
	not
	jump_zero! .L31.l_o0fadd4
	# END CBRANCH
	load8! &2 	#X2
	add! 152
	load4
	#
	store8! &8 	#X7
	# CBRANCH EQ0
	load4! &7 	#X7
	jump_not_zero! .L27.l_o0fadd4
	# END CBRANCH
.L35.l_o0fadd4:
	load8! &2 	#X2
	add! 40
	load4
	#
	store8! &8 	#X7
	load4! &7 	#X7
	load8! &3 	#X2
	add! 152
	store4
	#
	load8! &2 	#X2
	add! 56
	load8
	#
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &3 	#X2
	add! 144
	store8
	#
	load8! &0 	#AR
	load8! &3 	#X2
	add! 8
	store8
	#
	jump! .L27.l_o0fadd4
.L54.l_o0fadd4:
	# variadic *call_value
	call! __errno

	load8! &0 	#AR
	load4
	#
	and! 0x0ffffffff
	#peep - pop(deadreg)+pusharg
	call! strerror
	store8! &1

	load8! &0 	#AR
	push! -1
	load8! &4 	#X2
	call! gz_error
	set_sp! (+ &0 24)
	

	push! -1
	store8! &5 	#X4
	load4! &4 	#X4
	store4! &10
	jump! .L52.l_o0fadd4
.L28.l_o0fadd4:
	load8! &2 	#X2
	add! 144
	load8
	#
	store8! &1 	#AR
	load8! &2 	#X2
	add! 8
	load8
	#
	store8! &2 	#X1
	load4! &3 	#X3
	store8! &8 	#X7
	# CBRANCH
	load8! &1 	#X1
	load8! &1 	#AR
	lt_u
	not
	jump_zero! .L31.l_o0fadd4
	# END CBRANCH
	jump! .L27.l_o0fadd4
.L51.l_o0fadd4:
	# variadic *call_value
	call! __errno

	load8! &0 	#AR
	load4
	#
	and! 0x0ffffffff
	#peep - pop(deadreg)+pusharg
	call! strerror
	store8! &1

	load8! &0 	#AR
	push! -1
	load8! &4 	#X2
	call! gz_error
	set_sp! (+ &0 24)
	

	push! -1
	store8! &5 	#X4
	load4! &4 	#X4
	store4! &10
	jump! .L52.l_o0fadd4
.L53.l_o0fadd4:
	push! .LC2.l_o0fadd4
	push! -2
	load8! &4 	#X2
	call! gz_error
	set_sp! (+ &0 24)
	

	push! -1
	store8! &5 	#X4
	load4! &4 	#X4
	store4! &10
.L52.l_o0fadd4:

	# epilogue
	set_sp! &8
	return

# FUNCTION ENDS:gz_comp

	#peephole pop+push+commut(di)
	#peephole pop+pusharg
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole pop+push+commut(di)
	#peephole pop+pusharg
	#peephole zero_extend
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole pop+block+push+block

# FUNCTION BEGINS:gz_comp.constprop
.Li_gz_comp.constprop_1.l_o0fadd4:
	# prologue (4 GPRs)
	push! 0
	push! 0
	push! 0
	push! 0

	load8! &5
	store8! &3 	#X2
	load8! &2 	#X2
	add! 40
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L56.l_o0fadd4
	# END CBRANCH
	load8! &2 	#X2
	add! 64
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L87.l_o0fadd4
	# END CBRANCH
.L57.l_o0fadd4:
	load8! &2 	#X2
	add! 128
	load4
	#
	store8! &2 	#X1
	# CBRANCH EQ0
	load4! &1 	#X1
	jump_zero! .L65.l_o0fadd4
	# END CBRANCH
	load8! &2 	#X2
	add! 120
	load8
	#
	store8! &1 	#AR
.L64.l_o0fadd4:
	# CBRANCH
	push! 1073741824
	load4! &2 	#X1
	lt_u
	jump_zero! .L62.l_o0fadd4
	# END CBRANCH
	push! 1073741824
	store8! &2 	#X1
.L62.l_o0fadd4:
	load4! &1 	#X1
	store8! &4 	#X3
	load8! &2 	#X2
	add! 28
	load4
	#
	store8! &2 	#X1
	load8! &3 	#X3
	load8! &1 	#AR
	load4! &3 	#X1
	call! write
	store8! &3

	set_sp! &2
	# CBRANCH
	load4! &0 	#AR
	add! -2147483648
	push! 0
	add! -2147483648
	lt_u
	not
	jump_zero! .L88.l_o0fadd4
	# END CBRANCH
	load8! &2 	#X2
	add! 128
	load4
	#
	store8! &4 	#X3
	load8! &0 	#AR
	load8! &4 	#X3
	sub
	neg
	store8! &2 	#X1
	load4! &1 	#X1
	load8! &3 	#X2
	add! 128
	store4
	#
	load8! &2 	#X2
	add! 120
	load8
	#
	store8! &4 	#X3
	load4! &0 	#AR
	sigx4
	load8! &4 	#X3
	add
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &3 	#X2
	add! 120
	store8
	#
	# CBRANCH EQ0
	load4! &1 	#X1
	jump_not_zero! .L64.l_o0fadd4
	# END CBRANCH
.L65.l_o0fadd4:
	push! 0
	store8! &1 	#AR
.L55.l_o0fadd4:
	load4! &0 	#AR
	store4! &6
	jump! .L89.l_o0fadd4
.L87.l_o0fadd4:
	load8! &2 	#X2
	add! 152
	load4
	#
	store8! &4 	#X3
	# CBRANCH EQ0
	load4! &3 	#X3
	jump_zero! .L90.l_o0fadd4
	# END CBRANCH
.L66.l_o0fadd4:
	load8! &2 	#X2
	add! 120
	store8! &1 	#AR
	push! 0
	load8! &1 	#AR
	call! deflate
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH EQ
	load4! &0 	#AR
	push! 4294967294
	xor
	jump_zero! .L91.l_o0fadd4
	# END CBRANCH
	load8! &2 	#X2
	add! 152
	load4
	#
	store8! &1 	#AR
	# CBRANCH EQ
	load4! &0 	#AR
	load4! &4 	#X3
	xor
	jump_zero! .L65.l_o0fadd4
	# END CBRANCH
	load4! &0 	#AR
	store8! &4 	#X3
	# CBRANCH EQ0
	load4! &3 	#X3
	jump_not_zero! .L66.l_o0fadd4
	# END CBRANCH
.L90.l_o0fadd4:
	load8! &2 	#X2
	add! 144
	load8
	#
	store8! &1 	#AR
	load8! &2 	#X2
	add! 8
	load8
	#
	store8! &2 	#X1
	# CBRANCH
	load8! &1 	#X1
	load8! &1 	#AR
	lt_u
	jump_zero! .L70.l_o0fadd4
	# END CBRANCH
.L67.l_o0fadd4:
	load8! &0 	#AR
	load8! &2 	#X1
	sub
	store8! &1 	#AR
	# CBRANCH
	push! 1073741824
	add! -9223372036854775808
	load8! &1 	#AR
	add! -9223372036854775808
	lt_u
	jump_zero! .L68.l_o0fadd4
	# END CBRANCH
	push! 1073741824
	store8! &1 	#AR
.L68.l_o0fadd4:
	load8! &0 	#AR
	and! 0xffffffff
	store8! &4 	#X3
	load8! &2 	#X2
	add! 28
	load4
	#
	store8! &1 	#AR
	load8! &3 	#X3
	load8! &2 	#X1
	load4! &2 	#AR
	call! write
	store8! &3

	set_sp! &2
	# CBRANCH
	load4! &0 	#AR
	add! -2147483648
	push! 0
	add! -2147483648
	lt_u
	not
	jump_zero! .L92.l_o0fadd4
	# END CBRANCH
	load8! &2 	#X2
	add! 8
	load8
	#
	store8! &2 	#X1
	load4! &0 	#AR
	sigx4
	load8! &2 	#X1
	add
	store8! &2 	#X1
	load8! &1 	#X1
	load8! &3 	#X2
	add! 8
	store8
	#
	load8! &2 	#X2
	add! 144
	load8
	#
	store8! &1 	#AR
	# CBRANCH
	load8! &1 	#X1
	load8! &1 	#AR
	lt_u
	not
	jump_zero! .L67.l_o0fadd4
	# END CBRANCH
	load8! &2 	#X2
	add! 152
	load4
	#
	store8! &4 	#X3
	# CBRANCH EQ0
	load4! &3 	#X3
	jump_not_zero! .L66.l_o0fadd4
	# END CBRANCH
.L70.l_o0fadd4:
	load8! &2 	#X2
	add! 40
	load4
	#
	store8! &4 	#X3
	load4! &3 	#X3
	load8! &3 	#X2
	add! 152
	store4
	#
	load8! &2 	#X2
	add! 56
	load8
	#
	store8! &1 	#AR
	load8! &0 	#AR
	load8! &3 	#X2
	add! 144
	store8
	#
	load8! &0 	#AR
	load8! &3 	#X2
	add! 8
	store8
	#
	jump! .L66.l_o0fadd4
.L56.l_o0fadd4:
	load8! &2 	#X2
	call! gz_init.s_o0fadd4
	store8! &1

	# CBRANCH EQ
	load4! &0 	#AR
	push! 4294967295
	xor
	jump_zero! .L55.l_o0fadd4
	# END CBRANCH
	load8! &2 	#X2
	add! 64
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_not_zero! .L57.l_o0fadd4
	# END CBRANCH
	jump! .L87.l_o0fadd4
.L92.l_o0fadd4:
	# variadic *call_value
	call! __errno

	load8! &0 	#AR
	load4
	#
	and! 0x0ffffffff
	#peep - pop(deadreg)+pusharg
	call! strerror
	store8! &1

	load8! &0 	#AR
	push! -1
	load8! &4 	#X2
	call! gz_error
	set_sp! (+ &0 24)
	

	push! -1
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &6
	jump! .L89.l_o0fadd4
.L88.l_o0fadd4:
	# variadic *call_value
	call! __errno

	load8! &0 	#AR
	load4
	#
	and! 0x0ffffffff
	#peep - pop(deadreg)+pusharg
	call! strerror
	store8! &1

	load8! &0 	#AR
	push! -1
	load8! &4 	#X2
	call! gz_error
	set_sp! (+ &0 24)
	

	push! -1
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &6
	jump! .L89.l_o0fadd4
.L91.l_o0fadd4:
	push! .LC2.l_o0fadd4
	push! -2
	load8! &4 	#X2
	call! gz_error
	set_sp! (+ &0 24)
	

	push! -1
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &6
.L89.l_o0fadd4:

	# epilogue
	set_sp! &4
	return

# FUNCTION ENDS:gz_comp.constprop

	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole move
	#peephole pop+push+commut(di)
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole move
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole move
	#peephole move+push(pushable)
	#peephole pop+push+sub
	#peephole 1
	#peephole zero_extend
	#peephole zero_extend
	#peephole pop(deadreg)+pushdi
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole popdi(deadreg)+push
	#peephole and+popsi

# FUNCTION BEGINS:.Li_gz_write.part_0.l_o0fadd4
.Li_gz_write.part_0.l_o0fadd4:
	# prologue (8 GPRs)

	set_sp! &-8

	load8! &9
	store8! &3 	#X2
	load8! &10
	store8! &7 	#X6
	load8! &11
	store8! &8 	#X7
	load8! &2 	#X2
	add! 40
	load4
	#
	store8! &6 	#X5
	load4! &5 	#X5
	store8! &1 	#AR
	load8! &2 	#X2
	add! 128
	load4
	#
	store8! &2 	#X1
	# CBRANCH
	load8! &7 	#X7
	load8! &1 	#AR
	lt_u
	jump_zero! .L94.l_o0fadd4
	# END CBRANCH
	load8! &7 	#X7
	store8! &4 	#X3
	load8! &2 	#X2
	add! 48
	load8
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load4! &1 	#X1
	jump_zero! .L95.l_o0fadd4
	# END CBRANCH
.L122.l_o0fadd4:
	load8! &2 	#X2
	add! 120
	load8
	#
	store8! &5 	#X4
.L96.l_o0fadd4:
	load4! &1 	#X1
	load8! &5 	#X4
	add
	load8! &1 	#AR
	sub
	store8! &2 	#X1
	load4! &1 	#X1
	load8! &6 	#X5
	sub
	neg
	store8! &5 	#X4
	load4! &4 	#X4
	store8! &6 	#X5
	# CBRANCH
	load8! &3 	#X3
	load8! &6 	#X5
	lt_u
	jump_zero! .L97.l_o0fadd4
	# END CBRANCH
	load4! &3 	#X3
	store8! &5 	#X4
	load8! &3 	#X3
	and! 0xffffffff
	store8! &6 	#X5
.L97.l_o0fadd4:
	load8! &1 	#X1
	and! 0xffffffff
	load8! &1 	#AR
	add
	store8! &1 	#AR
	load8! &5 	#X5
	load8! &7 	#X6
	load8! &2 	#AR
	call! memcpy
	store8! &3

	set_sp! &2
	load8! &2 	#X2
	add! 128
	load4
	#
	load8! &5 	#X4
	add
	load8! &3 	#X2
	add! 128
	store4
	#
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &2 	#X1
	load4! &4 	#X4
	load8! &2 	#X1
	add
	load8! &3 	#X2
	add! 16
	store8
	#
	load8! &3 	#X3
	load8! &6 	#X5
	sub
	store8! &4 	#X3
	# CBRANCH EQ0
	load8! &3 	#X3
	jump_not_zero! .L120.l_o0fadd4
	# END CBRANCH
.L99.l_o0fadd4:
	load8! &7 	#X7
	store8! &10
	jump! .L121.l_o0fadd4
.L120.l_o0fadd4:
	load8! &2 	#X2
	call! .Li_gz_comp.constprop_1.l_o0fadd4
	store8! &1

	# CBRANCH EQ
	load4! &0 	#AR
	push! 4294967295
	xor
	jump_zero! .L104.l_o0fadd4
	# END CBRANCH
	load8! &6 	#X6
	load8! &6 	#X5
	add
	store8! &7 	#X6
	load8! &2 	#X2
	add! 128
	load4
	#
	store8! &2 	#X1
	load8! &2 	#X2
	add! 40
	load4
	#
	store8! &6 	#X5
	load8! &2 	#X2
	add! 48
	load8
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load4! &1 	#X1
	jump_not_zero! .L122.l_o0fadd4
	# END CBRANCH
.L95.l_o0fadd4:
	load8! &0 	#AR
	load8! &3 	#X2
	add! 120
	store8
	#
	load8! &0 	#AR
	store8! &5 	#X4
	jump! .L96.l_o0fadd4
.L94.l_o0fadd4:
	# CBRANCH EQ0
	load4! &1 	#X1
	jump_not_zero! .L102.l_o0fadd4
	# END CBRANCH
	load8! &6 	#X6
	load8! &3 	#X2
	add! 120
	store8
	#
	load8! &7 	#X7
	store8! &4 	#X3
.L103.l_o0fadd4:
	# CBRANCH
	push! 4294967294
	load8! &4 	#X3
	lt_u
	not
	jump_zero! .L108.l_o0fadd4
	# END CBRANCH
.L123.l_o0fadd4:
	load4! &3 	#X3
	store8! &1 	#AR
	load8! &3 	#X3
	store8! &2 	#X1
	load8! &3 	#X3
	store8! &5 	#X4
	load4! &0 	#AR
	load8! &3 	#X2
	add! 128
	store4
	#
	load8! &2 	#X2
	add! 16
	load8
	#
	load8! &2 	#X1
	add
	load8! &3 	#X2
	add! 16
	store8
	#
	load8! &2 	#X2
	call! .Li_gz_comp.constprop_1.l_o0fadd4
	store8! &1

	# CBRANCH EQ
	load4! &0 	#AR
	push! 4294967295
	xor
	jump_zero! .L104.l_o0fadd4
	# END CBRANCH
.L124.l_o0fadd4:
	load8! &3 	#X3
	load8! &5 	#X4
	sub
	store8! &4 	#X3
	# CBRANCH EQ0
	load8! &3 	#X3
	jump_zero! .L99.l_o0fadd4
	# END CBRANCH
	# CBRANCH
	push! 4294967294
	load8! &4 	#X3
	lt_u
	jump_zero! .L123.l_o0fadd4
	# END CBRANCH
.L108.l_o0fadd4:
	push! 4294967295
	store8! &5 	#X4
	push! 4294967295
	store8! &2 	#X1
	push! -1
	store8! &1 	#AR
	load4! &0 	#AR
	load8! &3 	#X2
	add! 128
	store4
	#
	load8! &2 	#X2
	add! 16
	load8
	#
	load8! &2 	#X1
	add
	load8! &3 	#X2
	add! 16
	store8
	#
	load8! &2 	#X2
	call! .Li_gz_comp.constprop_1.l_o0fadd4
	store8! &1

	# CBRANCH
	load4! &0 	#AR
	push! 4294967295
	xor
	push! 1
	lt_u
	jump_zero! .L124.l_o0fadd4
	# END CBRANCH
.L104.l_o0fadd4:
	push! 0
	store8! &8 	#X7
	load8! &7 	#X7
	store8! &10
	jump! .L121.l_o0fadd4
.L102.l_o0fadd4:
	load8! &2 	#X2
	call! .Li_gz_comp.constprop_1.l_o0fadd4
	store8! &1

	# CBRANCH EQ
	load4! &0 	#AR
	push! 4294967295
	xor
	jump_zero! .L104.l_o0fadd4
	# END CBRANCH
	load8! &6 	#X6
	load8! &3 	#X2
	add! 120
	store8
	#
	load8! &7 	#X7
	store8! &4 	#X3
	jump! .L103.l_o0fadd4
.L121.l_o0fadd4:

	# epilogue
	set_sp! &8
	return

# FUNCTION ENDS:.Li_gz_write.part_0.l_o0fadd4

.LC3.l_o0fadd4:
#	.string "requested length does not fit in int"
	data1 [ 114 101 113 117 101 115 116 101 100 32 108 101 110 103 116 104 32 100 111 101 115 32 110 111 116 32 102 105 116 32 105 110 32 105 110 116 0 ]
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+pusharg
	#peephole move
	#peephole zero_extend
	#peephole pop+cmp
	#peephole zero_extend
	#peephole pop+pusharg
	#peephole move_dead
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole pop+cmp

# FUNCTION BEGINS:gzwrite
	EXPORT	gzwrite
gzwrite:
	# prologue (7 GPRs)

	set_sp! &-7

	load8! &8
	store8! &3 	#X2
	# CBRANCH EQ0
	load8! &2 	#X2
	jump_zero! .L140.l_o0fadd4
	# END CBRANCH
	load8! &2 	#X2
	add! 24
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	push! 31153
	xor
	push! 1
	lt_u
	jump_zero! .L141.l_o0fadd4
	# END CBRANCH
	load8! &2 	#X2
	add! 108
	load4
	#
	store8! &4 	#X3
	# CBRANCH EQ0
	load4! &3 	#X3
	jump_not_zero! .L142.l_o0fadd4
	# END CBRANCH
	# CBRANCH
	load4! &10
	add! -2147483648
	push! 0
	add! -2147483648
	lt_u
	not
	jump_zero! .L162.l_o0fadd4
	# END CBRANCH
	# CBRANCH EQ0
	load4! &10
	jump_zero! .L125.l_o0fadd4
	# END CBRANCH
	load8! &2 	#X2
	add! 40
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L130.l_o0fadd4
	# END CBRANCH
	load8! &2 	#X2
	add! 104
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_not_zero! .L163.l_o0fadd4
	# END CBRANCH
.L132.l_o0fadd4:
	load4! &10
	#peep - pop(deadreg)+pusharg
	load8! &10
	load8! &4 	#X2
	call! .Li_gz_write.part_0.l_o0fadd4
	store8! &3

	set_sp! &2
	load4! &0 	#AR
	store8! &4 	#X3
.L125.l_o0fadd4:
	load4! &3 	#X3
	store4! &9
	jump! .L164.l_o0fadd4
.L141.l_o0fadd4:
	push! 0
	store8! &4 	#X3
	load4! &3 	#X3
	store4! &9
	jump! .L164.l_o0fadd4
.L162.l_o0fadd4:
	push! .LC3.l_o0fadd4
	push! -3
	load8! &4 	#X2
	call! gz_error
	set_sp! (+ &0 24)
	

	load4! &3 	#X3
	store4! &9
	jump! .L164.l_o0fadd4
.L140.l_o0fadd4:
	push! 0
	store8! &4 	#X3
	load4! &3 	#X3
	store4! &9
	jump! .L164.l_o0fadd4
.L142.l_o0fadd4:
	push! 0
	store8! &4 	#X3
	load4! &3 	#X3
	store4! &9
	jump! .L164.l_o0fadd4
.L130.l_o0fadd4:
	load8! &2 	#X2
	call! gz_init.s_o0fadd4
	store8! &1

	# CBRANCH EQ
	load4! &0 	#AR
	push! 4294967295
	xor
	jump_zero! .L125.l_o0fadd4
	# END CBRANCH
	load8! &2 	#X2
	add! 104
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L132.l_o0fadd4
	# END CBRANCH
.L163.l_o0fadd4:
	push! 0
	load8! &3 	#X2
	add! 104
	store4
	#
	load8! &2 	#X2
	add! 96
	load8
	#
	store8! &5 	#X4
	load8! &2 	#X2
	add! 128
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_not_zero! .L135.l_o0fadd4
	# END CBRANCH
	push! 1
	store8! &2 	#X1
	# CBRANCH EQ0
	load8! &4 	#X4
	jump_zero! .L132.l_o0fadd4
	# END CBRANCH
.L136.l_o0fadd4:
	load8! &2 	#X2
	add! 40
	load4
	#
	store8! &7 	#X6
	load4! &6 	#X6
	store8! &6 	#X5
	# CBRANCH
	load8! &4 	#X4
	add! -9223372036854775808
	load8! &6 	#X5
	add! -9223372036854775808
	lt_u
	jump_zero! .L138.l_o0fadd4
	# END CBRANCH
	load4! &4 	#X4
	store8! &7 	#X6
	load8! &4 	#X4
	and! 0xffffffff
	store8! &6 	#X5
.L138.l_o0fadd4:
	load8! &2 	#X2
	add! 48
	load8
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load4! &1 	#X1
	jump_not_zero! .L165.l_o0fadd4
	# END CBRANCH
.L139.l_o0fadd4:
	load4! &6 	#X6
	load8! &3 	#X2
	add! 128
	store4
	#
	load8! &0 	#AR
	load8! &3 	#X2
	add! 120
	store8
	#
	load8! &2 	#X2
	add! 16
	load8
	#
	load8! &6 	#X5
	add
	load8! &3 	#X2
	add! 16
	store8
	#
	load8! &2 	#X2
	call! .Li_gz_comp.constprop_1.l_o0fadd4
	store8! &1

	# CBRANCH EQ
	load4! &0 	#AR
	push! 4294967295
	xor
	jump_zero! .L125.l_o0fadd4
	# END CBRANCH
	load8! &4 	#X4
	load8! &6 	#X5
	sub
	store8! &5 	#X4
	push! 0
	store8! &2 	#X1
	# CBRANCH EQ0
	load8! &4 	#X4
	jump_not_zero! .L136.l_o0fadd4
	# END CBRANCH
	load4! &10
	#peep - pop(deadreg)+pusharg
	load8! &10
	load8! &4 	#X2
	call! .Li_gz_write.part_0.l_o0fadd4
	store8! &3

	set_sp! &2
	load4! &0 	#AR
	store8! &4 	#X3
	jump! .L125.l_o0fadd4
.L165.l_o0fadd4:
	load4! &6 	#X6
	#peep - pop(deadreg)+pusharg
	push! 0
	load8! &2 	#AR
	call! memset
	store8! &3

	set_sp! &2
	load8! &2 	#X2
	add! 48
	load8
	#
	store8! &1 	#AR
	jump! .L139.l_o0fadd4
.L135.l_o0fadd4:
	load8! &2 	#X2
	call! .Li_gz_comp.constprop_1.l_o0fadd4
	store8! &1

	# CBRANCH EQ
	load4! &0 	#AR
	push! 4294967295
	xor
	jump_zero! .L125.l_o0fadd4
	# END CBRANCH
	push! 1
	store8! &2 	#X1
	# CBRANCH EQ0
	load8! &4 	#X4
	jump_not_zero! .L136.l_o0fadd4
	# END CBRANCH
	jump! .L132.l_o0fadd4
.L164.l_o0fadd4:

	# epilogue
	set_sp! &7
	return

# FUNCTION ENDS:gzwrite

.LC4.l_o0fadd4:
#	.string "request does not fit in a size_t"
	data1 [ 114 101 113 117 101 115 116 32 100 111 101 115 32 110 111 116 32 102 105 116 32 105 110 32 97 32 115 105 122 101 95 116 0 ]
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+pusharg
	#peephole move
	#peephole zero_extend
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole pop+cmp

# FUNCTION BEGINS:gzfwrite
	EXPORT	gzfwrite
gzfwrite:
	# prologue (7 GPRs)

	set_sp! &-7

	load8! &11
	store8! &3 	#X2
	# CBRANCH EQ0
	load8! &2 	#X2
	jump_zero! .L180.l_o0fadd4
	# END CBRANCH
	load8! &2 	#X2
	add! 24
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	push! 31153
	xor
	push! 1
	lt_u
	jump_zero! .L181.l_o0fadd4
	# END CBRANCH
	load8! &2 	#X2
	add! 108
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_not_zero! .L182.l_o0fadd4
	# END CBRANCH
	# CBRANCH EQ0
	load8! &9
	jump_zero! .L183.l_o0fadd4
	# END CBRANCH
	load8! &10
	load8! &10
	mult
	store8! &4 	#X3
	load8! &3 	#X3
	load8! &10
	div_u
	# CBRANCH - peep (modesize=8)
	load8! &11
	xor
	push! 1
	lt_u
	jump_zero! .L202.l_o0fadd4
	# END CBRANCH
	# CBRANCH EQ0
	load8! &3 	#X3
	jump_zero! .L166.l_o0fadd4
	# END CBRANCH
	load8! &2 	#X2
	add! 40
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L169.l_o0fadd4
	# END CBRANCH
.L172.l_o0fadd4:
	load8! &2 	#X2
	add! 104
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_not_zero! .L203.l_o0fadd4
	# END CBRANCH
.L171.l_o0fadd4:
	load8! &3 	#X3
	load8! &9
	load8! &4 	#X2
	call! .Li_gz_write.part_0.l_o0fadd4
	store8! &3

	set_sp! &2
	load8! &0 	#AR
	load8! &10
	div_u
	store8! &4 	#X3
.L166.l_o0fadd4:
	load8! &3 	#X3
	store8! &9
	jump! .L204.l_o0fadd4
.L181.l_o0fadd4:
	push! 0
	store8! &4 	#X3
	load8! &3 	#X3
	store8! &9
	jump! .L204.l_o0fadd4
.L183.l_o0fadd4:
	push! 0
	store8! &4 	#X3
	load8! &3 	#X3
	store8! &9
	jump! .L204.l_o0fadd4
.L180.l_o0fadd4:
	push! 0
	store8! &4 	#X3
	load8! &3 	#X3
	store8! &9
	jump! .L204.l_o0fadd4
.L182.l_o0fadd4:
	push! 0
	store8! &4 	#X3
	load8! &3 	#X3
	store8! &9
	jump! .L204.l_o0fadd4
.L169.l_o0fadd4:
	load8! &2 	#X2
	call! gz_init.s_o0fadd4
	store8! &1

	# CBRANCH
	load4! &0 	#AR
	push! 4294967295
	xor
	push! 1
	lt_u
	jump_zero! .L172.l_o0fadd4
	# END CBRANCH
.L176.l_o0fadd4:
	push! 0
	store8! &4 	#X3
	load8! &3 	#X3
	store8! &9
	jump! .L204.l_o0fadd4
.L203.l_o0fadd4:
	push! 0
	load8! &3 	#X2
	add! 104
	store4
	#
	load8! &2 	#X2
	add! 96
	load8
	#
	store8! &5 	#X4
	load8! &2 	#X2
	add! 128
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_not_zero! .L174.l_o0fadd4
	# END CBRANCH
	push! 1
	store8! &2 	#X1
	# CBRANCH EQ0
	load8! &4 	#X4
	jump_zero! .L171.l_o0fadd4
	# END CBRANCH
.L175.l_o0fadd4:
	load8! &2 	#X2
	add! 40
	load4
	#
	store8! &7 	#X6
	load4! &6 	#X6
	store8! &6 	#X5
	# CBRANCH
	load8! &4 	#X4
	add! -9223372036854775808
	load8! &6 	#X5
	add! -9223372036854775808
	lt_u
	jump_zero! .L178.l_o0fadd4
	# END CBRANCH
	load4! &4 	#X4
	store8! &7 	#X6
	load8! &4 	#X4
	and! 0xffffffff
	store8! &6 	#X5
.L178.l_o0fadd4:
	load8! &2 	#X2
	add! 48
	load8
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load4! &1 	#X1
	jump_not_zero! .L205.l_o0fadd4
	# END CBRANCH
.L179.l_o0fadd4:
	load4! &6 	#X6
	load8! &3 	#X2
	add! 128
	store4
	#
	load8! &0 	#AR
	load8! &3 	#X2
	add! 120
	store8
	#
	load8! &2 	#X2
	add! 16
	load8
	#
	load8! &6 	#X5
	add
	load8! &3 	#X2
	add! 16
	store8
	#
	load8! &2 	#X2
	call! .Li_gz_comp.constprop_1.l_o0fadd4
	store8! &1

	# CBRANCH EQ
	load4! &0 	#AR
	push! 4294967295
	xor
	jump_zero! .L176.l_o0fadd4
	# END CBRANCH
	load8! &4 	#X4
	load8! &6 	#X5
	sub
	store8! &5 	#X4
	push! 0
	store8! &2 	#X1
	# CBRANCH EQ0
	load8! &4 	#X4
	jump_not_zero! .L175.l_o0fadd4
	# END CBRANCH
	load8! &3 	#X3
	load8! &9
	load8! &4 	#X2
	call! .Li_gz_write.part_0.l_o0fadd4
	store8! &3

	set_sp! &2
	load8! &0 	#AR
	load8! &10
	div_u
	store8! &4 	#X3
	jump! .L166.l_o0fadd4
.L205.l_o0fadd4:
	load4! &6 	#X6
	#peep - pop(deadreg)+pusharg
	push! 0
	load8! &2 	#AR
	call! memset
	store8! &3

	set_sp! &2
	load8! &2 	#X2
	add! 48
	load8
	#
	store8! &1 	#AR
	jump! .L179.l_o0fadd4
.L174.l_o0fadd4:
	load8! &2 	#X2
	call! .Li_gz_comp.constprop_1.l_o0fadd4
	store8! &1

	# CBRANCH EQ
	load4! &0 	#AR
	push! 4294967295
	xor
	jump_zero! .L176.l_o0fadd4
	# END CBRANCH
	push! 1
	store8! &2 	#X1
	# CBRANCH EQ0
	load8! &4 	#X4
	jump_not_zero! .L175.l_o0fadd4
	# END CBRANCH
	jump! .L171.l_o0fadd4
.L202.l_o0fadd4:
	push! .LC4.l_o0fadd4
	push! -2
	load8! &4 	#X2
	call! gz_error
	set_sp! (+ &0 24)
	

	push! 0
	store8! &4 	#X3
	load8! &3 	#X3
	store8! &9
.L204.l_o0fadd4:

	# epilogue
	set_sp! &7
	return

# FUNCTION ENDS:gzfwrite

	#peephole move+push(pushable)
	#peephole 1
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+pusharg
	#peephole move
	#peephole zero_extend
	#peephole pop+cmp
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole pop+cmp
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole move+push(pushable)
	#peephole 1
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole move
	#peephole set+cmprev
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+pusharg
	#peephole move
	#peephole zero_extend
	#peephole pop+cmp
	#peephole move+push(pushable)
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole popdi(deadreg)+push
	#peephole and+popsi

# FUNCTION BEGINS:gzputc
	EXPORT	gzputc
gzputc:
	# prologue (6 GPRs)

	set_sp! &-7

	load8! &8
	store8! &3 	#X2
	# CBRANCH EQ0
	load8! &2 	#X2
	jump_zero! .L209.l_o0fadd4
	# END CBRANCH
	load8! &2 	#X2
	add! 24
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	push! 31153
	xor
	push! 1
	lt_u
	jump_zero! .L209.l_o0fadd4
	# END CBRANCH
	load8! &2 	#X2
	add! 108
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_not_zero! .L209.l_o0fadd4
	# END CBRANCH
	load8! &2 	#X2
	add! 104
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_not_zero! .L210.l_o0fadd4
	# END CBRANCH
.L215.l_o0fadd4:
	load8! &2 	#X2
	add! 40
	load4
	#
	store8! &1 	#AR
	load4! &9
	store8! &5 	#X4
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_zero! .L264.l_o0fadd4
	# END CBRANCH
.L211.l_o0fadd4:
	load8! &2 	#X2
	add! 128
	load4
	#
	store8! &4 	#X3
	load8! &2 	#X2
	add! 48
	load8
	#
	store8! &2 	#X1
	# CBRANCH EQ0
	load4! &3 	#X3
	jump_not_zero! .L265.l_o0fadd4
	# END CBRANCH
	load8! &1 	#X1
	load8! &3 	#X2
	add! 120
	store8
	#
	load8! &1 	#X1
	store8! &6 	#X5
	load4! &3 	#X3
	load8! &6 	#X5
	add
	load8! &2 	#X1
	sub
	store8! &4 	#X3
	# CBRANCH
	load4! &3 	#X3
	load4! &1 	#AR
	lt_u
	not
	jump_zero! .L266.l_o0fadd4
	# END CBRANCH
.L221.l_o0fadd4:
	load1! &4 	#X4
	store1! &7
.L230.l_o0fadd4:
	load8! &2 	#X2
	add! 104
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_not_zero! .L222.l_o0fadd4
	# END CBRANCH
.L226.l_o0fadd4:
	push! 1
	push! &0
	add! 56
	#peep - pop(deadreg)+pusharg
	load8! &4 	#X2
	call! .Li_gz_write.part_0.l_o0fadd4
	store8! &3

	set_sp! &2
	# CBRANCH
	load8! &0 	#AR
	push! 1
	xor
	push! 1
	lt_u
	jump_zero! .L209.l_o0fadd4
	# END CBRANCH
	load4! &9
	and! 0xff
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &9
	jump! .L267.l_o0fadd4
.L265.l_o0fadd4:
	load8! &2 	#X2
	add! 120
	load8
	#
	store8! &6 	#X5
	load4! &3 	#X3
	load8! &6 	#X5
	add
	load8! &2 	#X1
	sub
	store8! &4 	#X3
	# CBRANCH
	load4! &3 	#X3
	load4! &1 	#AR
	lt_u
	jump_zero! .L221.l_o0fadd4
	# END CBRANCH
.L266.l_o0fadd4:
	load8! &3 	#X3
	and! 0xffffffff
	load8! &2 	#X1
	add
	store8! &1 	#AR
	load1! &4 	#X4
	load8! &1 	#AR
	store1
	#
	load8! &2 	#X2
	add! 128
	load4
	#
	add! 1
	load8! &3 	#X2
	add! 128
	store4
	#
	load8! &2 	#X2
	add! 16
	load8
	#
	add! 1
	load8! &3 	#X2
	add! 16
	store8
	#
	load4! &9
	and! 0xff
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &9
	jump! .L267.l_o0fadd4
.L210.l_o0fadd4:
	push! 0
	load8! &3 	#X2
	add! 104
	store4
	#
	load8! &2 	#X2
	add! 96
	load8
	#
	store8! &4 	#X3
	load8! &2 	#X2
	add! 128
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_not_zero! .L213.l_o0fadd4
	# END CBRANCH
	push! 1
	store8! &2 	#X1
	# CBRANCH EQ0
	load8! &3 	#X3
	jump_zero! .L215.l_o0fadd4
	# END CBRANCH
.L214.l_o0fadd4:
	load8! &2 	#X2
	add! 40
	load4
	#
	store8! &6 	#X5
	load4! &5 	#X5
	store8! &5 	#X4
	# CBRANCH
	load8! &3 	#X3
	add! -9223372036854775808
	load8! &5 	#X4
	add! -9223372036854775808
	lt_u
	jump_zero! .L217.l_o0fadd4
	# END CBRANCH
	load4! &3 	#X3
	store8! &6 	#X5
	load8! &3 	#X3
	and! 0xffffffff
	store8! &5 	#X4
.L217.l_o0fadd4:
	load8! &2 	#X2
	add! 48
	load8
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load4! &1 	#X1
	jump_not_zero! .L268.l_o0fadd4
	# END CBRANCH
.L218.l_o0fadd4:
	load4! &5 	#X5
	load8! &3 	#X2
	add! 128
	store4
	#
	load8! &0 	#AR
	load8! &3 	#X2
	add! 120
	store8
	#
	load8! &2 	#X2
	add! 16
	load8
	#
	load8! &5 	#X4
	add
	load8! &3 	#X2
	add! 16
	store8
	#
	load8! &2 	#X2
	call! .Li_gz_comp.constprop_1.l_o0fadd4
	store8! &1

	# CBRANCH EQ
	load4! &0 	#AR
	push! 4294967295
	xor
	jump_zero! .L209.l_o0fadd4
	# END CBRANCH
	load8! &3 	#X3
	load8! &5 	#X4
	sub
	store8! &4 	#X3
	push! 0
	store8! &2 	#X1
	# CBRANCH EQ0
	load8! &3 	#X3
	jump_not_zero! .L214.l_o0fadd4
	# END CBRANCH
	load8! &2 	#X2
	add! 40
	load4
	#
	store8! &1 	#AR
	load4! &9
	store8! &5 	#X4
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_not_zero! .L211.l_o0fadd4
	# END CBRANCH
.L264.l_o0fadd4:
	load1! &4 	#X4
	store1! &7
	load8! &2 	#X2
	call! gz_init.s_o0fadd4
	store8! &1

	# CBRANCH
	load4! &0 	#AR
	push! 4294967295
	xor
	push! 1
	lt_u
	jump_zero! .L230.l_o0fadd4
	# END CBRANCH
.L209.l_o0fadd4:
	push! -1
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &9
	jump! .L267.l_o0fadd4
.L222.l_o0fadd4:
	push! 0
	load8! &3 	#X2
	add! 104
	store4
	#
	load8! &2 	#X2
	add! 96
	load8
	#
	store8! &4 	#X3
	load8! &2 	#X2
	add! 128
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_not_zero! .L224.l_o0fadd4
	# END CBRANCH
	push! 1
	store8! &2 	#X1
	# CBRANCH EQ0
	load8! &3 	#X3
	jump_zero! .L226.l_o0fadd4
	# END CBRANCH
.L225.l_o0fadd4:
	load8! &2 	#X2
	add! 40
	load4
	#
	store8! &6 	#X5
	load4! &5 	#X5
	store8! &5 	#X4
	# CBRANCH
	load8! &3 	#X3
	add! -9223372036854775808
	load8! &5 	#X4
	add! -9223372036854775808
	lt_u
	jump_zero! .L228.l_o0fadd4
	# END CBRANCH
	load4! &3 	#X3
	store8! &6 	#X5
	load8! &3 	#X3
	and! 0xffffffff
	store8! &5 	#X4
.L228.l_o0fadd4:
	load8! &2 	#X2
	add! 48
	load8
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load4! &1 	#X1
	jump_not_zero! .L269.l_o0fadd4
	# END CBRANCH
.L229.l_o0fadd4:
	load4! &5 	#X5
	load8! &3 	#X2
	add! 128
	store4
	#
	load8! &0 	#AR
	load8! &3 	#X2
	add! 120
	store8
	#
	load8! &2 	#X2
	add! 16
	load8
	#
	load8! &5 	#X4
	add
	load8! &3 	#X2
	add! 16
	store8
	#
	load8! &2 	#X2
	call! .Li_gz_comp.constprop_1.l_o0fadd4
	store8! &1

	# CBRANCH EQ
	load4! &0 	#AR
	push! 4294967295
	xor
	jump_zero! .L209.l_o0fadd4
	# END CBRANCH
	load8! &3 	#X3
	load8! &5 	#X4
	sub
	store8! &4 	#X3
	push! 0
	store8! &2 	#X1
	# CBRANCH EQ0
	load8! &3 	#X3
	jump_not_zero! .L225.l_o0fadd4
	# END CBRANCH
	jump! .L226.l_o0fadd4
.L268.l_o0fadd4:
	load4! &5 	#X5
	#peep - pop(deadreg)+pusharg
	push! 0
	load8! &2 	#AR
	call! memset
	store8! &3

	set_sp! &2
	load8! &2 	#X2
	add! 48
	load8
	#
	store8! &1 	#AR
	jump! .L218.l_o0fadd4
.L269.l_o0fadd4:
	load4! &5 	#X5
	#peep - pop(deadreg)+pusharg
	push! 0
	load8! &2 	#AR
	call! memset
	store8! &3

	set_sp! &2
	load8! &2 	#X2
	add! 48
	load8
	#
	store8! &1 	#AR
	jump! .L229.l_o0fadd4
.L213.l_o0fadd4:
	load8! &2 	#X2
	call! .Li_gz_comp.constprop_1.l_o0fadd4
	store8! &1

	# CBRANCH EQ
	load4! &0 	#AR
	push! 4294967295
	xor
	jump_zero! .L209.l_o0fadd4
	# END CBRANCH
	push! 1
	store8! &2 	#X1
	# CBRANCH EQ0
	load8! &3 	#X3
	jump_not_zero! .L214.l_o0fadd4
	# END CBRANCH
	jump! .L215.l_o0fadd4
.L224.l_o0fadd4:
	load8! &2 	#X2
	call! .Li_gz_comp.constprop_1.l_o0fadd4
	store8! &1

	# CBRANCH EQ
	load4! &0 	#AR
	push! 4294967295
	xor
	jump_zero! .L209.l_o0fadd4
	# END CBRANCH
	push! 1
	store8! &2 	#X1
	# CBRANCH EQ0
	load8! &3 	#X3
	jump_not_zero! .L225.l_o0fadd4
	# END CBRANCH
	jump! .L226.l_o0fadd4
.L267.l_o0fadd4:

	# epilogue
	set_sp! &7
	return

# FUNCTION ENDS:gzputc

	#peephole unary+deadreg+binop
	#peephole unary1+binop2+deadreg+binop3
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+pusharg
	#peephole move
	#peephole zero_extend
	#peephole pop+cmp
	#peephole 1
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole redundant blockage insn
	#peephole popdi(deadreg)+push

# FUNCTION BEGINS:gzputs
	EXPORT	gzputs
gzputs:
	# prologue (7 GPRs)

	set_sp! &-7

	load8! &8
	store8! &3 	#X2
	# CBRANCH EQ0
	load8! &2 	#X2
	jump_zero! .L273.l_o0fadd4
	# END CBRANCH
	load8! &2 	#X2
	add! 24
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	push! 31153
	xor
	push! 1
	lt_u
	jump_zero! .L273.l_o0fadd4
	# END CBRANCH
	load8! &2 	#X2
	add! 108
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_not_zero! .L273.l_o0fadd4
	# END CBRANCH
	load8! &9
	call! strlen
	store8! &1

	load8! &0 	#AR
	store8! &7 	#X6
	# CBRANCH EQ0
	load8! &0 	#AR
	jump_zero! .L274.l_o0fadd4
	# END CBRANCH
	load8! &2 	#X2
	add! 40
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L275.l_o0fadd4
	# END CBRANCH
.L278.l_o0fadd4:
	load8! &2 	#X2
	add! 104
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_not_zero! .L307.l_o0fadd4
	# END CBRANCH
.L277.l_o0fadd4:
	load8! &6 	#X6
	load8! &10
	load8! &4 	#X2
	call! .Li_gz_write.part_0.l_o0fadd4
	store8! &3

	set_sp! &2
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_zero! .L273.l_o0fadd4
	# END CBRANCH
.L270.l_o0fadd4:
	load4! &0 	#AR
	store4! &9
	jump! .L308.l_o0fadd4
.L275.l_o0fadd4:
	load8! &2 	#X2
	call! gz_init.s_o0fadd4
	store8! &1

	# CBRANCH
	load4! &0 	#AR
	push! 4294967295
	xor
	push! 1
	lt_u
	jump_zero! .L278.l_o0fadd4
	# END CBRANCH
.L274.l_o0fadd4:
	load8! &6 	#X6
	neg
	load8! &7 	#X6
	or
	shift_ru! 63
	and! 0xff
	neg
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &9
	jump! .L308.l_o0fadd4
.L307.l_o0fadd4:
	push! 0
	load8! &3 	#X2
	add! 104
	store4
	#
	load8! &2 	#X2
	add! 96
	load8
	#
	store8! &4 	#X3
	load8! &2 	#X2
	add! 128
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_not_zero! .L309.l_o0fadd4
	# END CBRANCH
	push! 1
	store8! &2 	#X1
	# CBRANCH EQ0
	load8! &3 	#X3
	jump_zero! .L277.l_o0fadd4
	# END CBRANCH
.L282.l_o0fadd4:
	load8! &2 	#X2
	add! 40
	load4
	#
	store8! &6 	#X5
	load4! &5 	#X5
	store8! &5 	#X4
	# CBRANCH
	load8! &3 	#X3
	add! -9223372036854775808
	load8! &5 	#X4
	add! -9223372036854775808
	lt_u
	jump_zero! .L280.l_o0fadd4
	# END CBRANCH
	load4! &3 	#X3
	store8! &6 	#X5
	load8! &3 	#X3
	and! 0xffffffff
	store8! &5 	#X4
.L280.l_o0fadd4:
	load8! &2 	#X2
	add! 48
	load8
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load4! &1 	#X1
	jump_not_zero! .L310.l_o0fadd4
	# END CBRANCH
.L281.l_o0fadd4:
	load4! &5 	#X5
	load8! &3 	#X2
	add! 128
	store4
	#
	load8! &0 	#AR
	load8! &3 	#X2
	add! 120
	store8
	#
	load8! &2 	#X2
	add! 16
	load8
	#
	load8! &5 	#X4
	add
	load8! &3 	#X2
	add! 16
	store8
	#
	load8! &2 	#X2
	call! .Li_gz_comp.constprop_1.l_o0fadd4
	store8! &1

	# CBRANCH EQ
	load4! &0 	#AR
	push! 4294967295
	xor
	jump_zero! .L274.l_o0fadd4
	# END CBRANCH
	load8! &3 	#X3
	load8! &5 	#X4
	sub
	store8! &4 	#X3
	push! 0
	store8! &2 	#X1
	# CBRANCH EQ0
	load8! &3 	#X3
	jump_not_zero! .L282.l_o0fadd4
	# END CBRANCH
	load8! &6 	#X6
	load8! &10
	load8! &4 	#X2
	call! .Li_gz_write.part_0.l_o0fadd4
	store8! &3

	set_sp! &2
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_not_zero! .L270.l_o0fadd4
	# END CBRANCH
	jump! .L273.l_o0fadd4
.L310.l_o0fadd4:
	load4! &5 	#X5
	#peep - pop(deadreg)+pusharg
	push! 0
	load8! &2 	#AR
	call! memset
	store8! &3

	set_sp! &2
	load8! &2 	#X2
	add! 48
	load8
	#
	store8! &1 	#AR
	jump! .L281.l_o0fadd4
.L309.l_o0fadd4:
	load8! &2 	#X2
	call! .Li_gz_comp.constprop_1.l_o0fadd4
	store8! &1

	# CBRANCH EQ
	load4! &0 	#AR
	push! 4294967295
	xor
	jump_zero! .L274.l_o0fadd4
	# END CBRANCH
	push! 1
	store8! &2 	#X1
	# CBRANCH EQ0
	load8! &3 	#X3
	jump_not_zero! .L282.l_o0fadd4
	# END CBRANCH
	jump! .L277.l_o0fadd4
.L273.l_o0fadd4:
	push! -1
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &9
.L308.l_o0fadd4:

	# epilogue
	set_sp! &7
	return

# FUNCTION ENDS:gzputs

	#peephole move_dead
	#peephole move+push+sub
	#peephole move_dead
	#peephole zero_extend
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole pop+cmp
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+pusharg
	#peephole move
	#peephole zero_extend
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop(deadreg)+pushdi
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole zero_extend
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push

# FUNCTION BEGINS:gzvprintf
	EXPORT	gzvprintf
gzvprintf:
	# prologue (6 GPRs)

	set_sp! &-6

	load8! &7
	store8! &3 	#X2
	# CBRANCH EQ0
	load8! &2 	#X2
	jump_zero! .L326.l_o0fadd4
	# END CBRANCH
	load8! &2 	#X2
	add! 24
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	push! 31153
	xor
	push! 1
	lt_u
	jump_zero! .L327.l_o0fadd4
	# END CBRANCH
	load8! &2 	#X2
	add! 108
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_not_zero! .L328.l_o0fadd4
	# END CBRANCH
	load8! &2 	#X2
	add! 40
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L354.l_o0fadd4
	# END CBRANCH
.L313.l_o0fadd4:
	load8! &2 	#X2
	add! 104
	load4
	#
	store8! &2 	#X1
	load8! &2 	#X2
	add! 128
	load4
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load4! &1 	#X1
	jump_not_zero! .L355.l_o0fadd4
	# END CBRANCH
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_zero! .L323.l_o0fadd4
	# END CBRANCH
.L361.l_o0fadd4:
	load8! &2 	#X2
	add! 120
	load8
	#
	store8! &2 	#X1
.L324.l_o0fadd4:
	load4! &0 	#AR
	load8! &2 	#X1
	add
	store8! &5 	#X4
	load8! &2 	#X2
	add! 40
	load4
	#
	add! -1
	and! 0xffffffff
	load8! &5 	#X4
	add
	store8! &1 	#AR
	push! 0
	load8! &1 	#AR
	store1
	#
	load8! &2 	#X2
	add! 40
	load4
	#
	store8! &1 	#AR
	load8! &9
	load8! &9
	load8! &2 	#AR
	load8! &7 	#X4
	call! vsnprintf
	store8! &4

	set_sp! &3
	load4! &0 	#AR
	store8! &4 	#X3
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_zero! .L311.l_o0fadd4
	# END CBRANCH
	load8! &2 	#X2
	add! 40
	load4
	#
	store8! &6 	#X5
	# CBRANCH
	load4! &0 	#AR
	load4! &6 	#X5
	lt_u
	jump_zero! .L329.l_o0fadd4
	# END CBRANCH
	load8! &5 	#X5
	add! -1
	and! 0xffffffff
	load8! &5 	#X4
	add
	load1
	# CBRANCH - peep (modesize=1)
	and! 255
	# - EQ0
	jump_not_zero! .L330.l_o0fadd4
	# END CBRANCH
	load8! &2 	#X2
	add! 128
	load4
	#
	load8! &4 	#X3
	add
	store8! &5 	#X4
	load4! &4 	#X4
	load8! &3 	#X2
	add! 128
	store4
	#
	load8! &2 	#X2
	add! 16
	load8
	#
	store8! &2 	#X1
	load4! &0 	#AR
	sigx4
	load8! &2 	#X1
	add
	load8! &3 	#X2
	add! 16
	store8
	#
	# CBRANCH
	load4! &4 	#X4
	load4! &6 	#X5
	lt_u
	jump_zero! .L356.l_o0fadd4
	# END CBRANCH
.L311.l_o0fadd4:
	load4! &3 	#X3
	store4! &8
	jump! .L357.l_o0fadd4
.L355.l_o0fadd4:
	push! 0
	load8! &3 	#X2
	add! 104
	store4
	#
	load8! &2 	#X2
	add! 96
	load8
	#
	store8! &4 	#X3
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_not_zero! .L358.l_o0fadd4
	# END CBRANCH
	# CBRANCH EQ0
	load8! &3 	#X3
	jump_not_zero! .L317.l_o0fadd4
	# END CBRANCH
.L323.l_o0fadd4:
	load8! &2 	#X2
	add! 48
	load8
	#
	store8! &2 	#X1
	load8! &1 	#X1
	load8! &3 	#X2
	add! 120
	store8
	#
	push! 0
	store8! &1 	#AR
	jump! .L324.l_o0fadd4
.L354.l_o0fadd4:
	load8! &2 	#X2
	call! gz_init.s_o0fadd4
	store8! &1

	# CBRANCH
	load4! &0 	#AR
	push! 4294967295
	xor
	push! 1
	lt_u
	jump_zero! .L313.l_o0fadd4
	# END CBRANCH
	load8! &2 	#X2
	add! 108
	load4
	#
	store8! &4 	#X3
	load4! &3 	#X3
	store4! &8
	jump! .L357.l_o0fadd4
.L358.l_o0fadd4:
	load8! &2 	#X2
	call! .Li_gz_comp.constprop_1.l_o0fadd4
	store8! &1

	# CBRANCH EQ
	load4! &0 	#AR
	push! 4294967295
	xor
	jump_zero! .L318.l_o0fadd4
	# END CBRANCH
	# CBRANCH EQ0
	load8! &3 	#X3
	jump_zero! .L359.l_o0fadd4
	# END CBRANCH
.L317.l_o0fadd4:
	push! 1
	store8! &2 	#X1
.L322.l_o0fadd4:
	load8! &2 	#X2
	add! 40
	load4
	#
	store8! &6 	#X5
	load4! &5 	#X5
	store8! &5 	#X4
	# CBRANCH
	load8! &3 	#X3
	add! -9223372036854775808
	load8! &5 	#X4
	add! -9223372036854775808
	lt_u
	jump_zero! .L320.l_o0fadd4
	# END CBRANCH
	load4! &3 	#X3
	store8! &6 	#X5
	load8! &3 	#X3
	and! 0xffffffff
	store8! &5 	#X4
.L320.l_o0fadd4:
	load8! &2 	#X2
	add! 48
	load8
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load4! &1 	#X1
	jump_not_zero! .L360.l_o0fadd4
	# END CBRANCH
	load4! &5 	#X5
	load8! &3 	#X2
	add! 128
	store4
	#
	load8! &0 	#AR
	load8! &3 	#X2
	add! 120
	store8
	#
	load8! &2 	#X2
	add! 16
	load8
	#
	load8! &5 	#X4
	add
	load8! &3 	#X2
	add! 16
	store8
	#
	load8! &2 	#X2
	call! .Li_gz_comp.constprop_1.l_o0fadd4
	store8! &1

	# CBRANCH EQ
	load4! &0 	#AR
	push! 4294967295
	xor
	jump_zero! .L318.l_o0fadd4
	# END CBRANCH
.L362.l_o0fadd4:
	load8! &3 	#X3
	load8! &5 	#X4
	sub
	store8! &4 	#X3
	push! 0
	store8! &2 	#X1
	# CBRANCH EQ0
	load8! &3 	#X3
	jump_not_zero! .L322.l_o0fadd4
	# END CBRANCH
	load8! &2 	#X2
	add! 128
	load4
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_not_zero! .L361.l_o0fadd4
	# END CBRANCH
	jump! .L323.l_o0fadd4
.L360.l_o0fadd4:
	load4! &5 	#X5
	#peep - pop(deadreg)+pusharg
	push! 0
	load8! &2 	#AR
	call! memset
	store8! &3

	set_sp! &2
	load8! &2 	#X2
	add! 48
	load8
	#
	store8! &1 	#AR
	load4! &5 	#X5
	load8! &3 	#X2
	add! 128
	store4
	#
	load8! &0 	#AR
	load8! &3 	#X2
	add! 120
	store8
	#
	load8! &2 	#X2
	add! 16
	load8
	#
	load8! &5 	#X4
	add
	load8! &3 	#X2
	add! 16
	store8
	#
	load8! &2 	#X2
	call! .Li_gz_comp.constprop_1.l_o0fadd4
	store8! &1

	# CBRANCH
	load4! &0 	#AR
	push! 4294967295
	xor
	push! 1
	lt_u
	jump_zero! .L362.l_o0fadd4
	# END CBRANCH
.L318.l_o0fadd4:
	load8! &2 	#X2
	add! 108
	load4
	#
	store8! &4 	#X3
	load4! &3 	#X3
	store4! &8
	jump! .L357.l_o0fadd4
.L356.l_o0fadd4:
	load4! &5 	#X5
	load8! &3 	#X2
	add! 128
	store4
	#
	load8! &2 	#X2
	call! .Li_gz_comp.constprop_1.l_o0fadd4
	store8! &1

	# CBRANCH EQ
	load4! &0 	#AR
	push! 4294967295
	xor
	jump_zero! .L363.l_o0fadd4
	# END CBRANCH
	load8! &5 	#X5
	load8! &5 	#X4
	sub
	neg
	store8! &5 	#X4
	load4! &4 	#X4
	store8! &6 	#X5
	load8! &2 	#X2
	add! 48
	load8
	#
	store8! &1 	#AR
	load8! &2 	#X2
	add! 40
	load4
	#
	and! 0x0ffffffff
	load8! &1 	#AR
	add
	store8! &2 	#X1
	load8! &5 	#X5
	load8! &2 	#X1
	load8! &2 	#AR
	call! memcpy
	store8! &3

	set_sp! &2
	load8! &2 	#X2
	add! 48
	load8
	#
	load8! &3 	#X2
	add! 120
	store8
	#
	load4! &4 	#X4
	load8! &3 	#X2
	add! 128
	store4
	#
	load4! &3 	#X3
	store4! &8
	jump! .L357.l_o0fadd4
.L329.l_o0fadd4:
	push! 0
	store8! &4 	#X3
	load4! &3 	#X3
	store4! &8
	jump! .L357.l_o0fadd4
.L330.l_o0fadd4:
	push! 0
	store8! &4 	#X3
	load4! &3 	#X3
	store4! &8
	jump! .L357.l_o0fadd4
.L359.l_o0fadd4:
	load8! &2 	#X2
	add! 128
	load4
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load4! &0 	#AR
	jump_not_zero! .L361.l_o0fadd4
	# END CBRANCH
	jump! .L323.l_o0fadd4
.L363.l_o0fadd4:
	load8! &2 	#X2
	add! 108
	load4
	#
	store8! &4 	#X3
	load4! &3 	#X3
	store4! &8
	jump! .L357.l_o0fadd4
.L327.l_o0fadd4:
	push! -2
	store8! &4 	#X3
	load4! &3 	#X3
	store4! &8
	jump! .L357.l_o0fadd4
.L328.l_o0fadd4:
	push! -2
	store8! &4 	#X3
	load4! &3 	#X3
	store4! &8
	jump! .L357.l_o0fadd4
.L326.l_o0fadd4:
	push! -2
	store8! &4 	#X3
	load4! &3 	#X3
	store4! &8
.L357.l_o0fadd4:

	# epilogue
	set_sp! &6
	return

# FUNCTION ENDS:gzvprintf

	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg

# FUNCTION BEGINS:gzprintf
	EXPORT	gzprintf
gzprintf:
	# prologue (1 GPRs)
	push! 0

	push! &0
	add! 32
	#peep - pop(deadreg)+pusharg
	load8! &4
	load8! &4
	call! gzvprintf
	store8! &3

	set_sp! &2
	load4! &0 	#AR
	store4! &3

	# epilogue
	store8! &0 #set_sp! &1
	return

# FUNCTION ENDS:gzprintf

	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+pusharg
	#peephole move
	#peephole zero_extend
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole redundant blockage insn

# FUNCTION BEGINS:gzflush
	EXPORT	gzflush
gzflush:
	# prologue (6 GPRs)

	set_sp! &-6

	load8! &7
	store8! &3 	#X2
	# CBRANCH EQ0
	load8! &2 	#X2
	jump_zero! .L375.l_o0fadd4
	# END CBRANCH
	load8! &2 	#X2
	add! 24
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	push! 31153
	xor
	push! 1
	lt_u
	jump_zero! .L376.l_o0fadd4
	# END CBRANCH
	load8! &2 	#X2
	add! 108
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_not_zero! .L377.l_o0fadd4
	# END CBRANCH
	# CBRANCH
	push! 4
	load4! &9
	lt_u
	not
	jump_zero! .L378.l_o0fadd4
	# END CBRANCH
	load8! &2 	#X2
	add! 104
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L368.l_o0fadd4
	# END CBRANCH
	push! 0
	load8! &3 	#X2
	add! 104
	store4
	#
	load8! &2 	#X2
	add! 96
	load8
	#
	store8! &4 	#X3
	load8! &2 	#X2
	add! 128
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_not_zero! .L369.l_o0fadd4
	# END CBRANCH
	push! 1
	store8! &2 	#X1
	# CBRANCH EQ0
	load8! &3 	#X3
	jump_zero! .L368.l_o0fadd4
	# END CBRANCH
.L370.l_o0fadd4:
	load8! &2 	#X2
	add! 40
	load4
	#
	store8! &6 	#X5
	load4! &5 	#X5
	store8! &5 	#X4
	# CBRANCH
	load8! &3 	#X3
	add! -9223372036854775808
	load8! &5 	#X4
	add! -9223372036854775808
	lt_u
	jump_zero! .L373.l_o0fadd4
	# END CBRANCH
	load4! &3 	#X3
	store8! &6 	#X5
	load8! &3 	#X3
	and! 0xffffffff
	store8! &5 	#X4
.L373.l_o0fadd4:
	load8! &2 	#X2
	add! 48
	load8
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load4! &1 	#X1
	jump_not_zero! .L397.l_o0fadd4
	# END CBRANCH
	load4! &5 	#X5
	load8! &3 	#X2
	add! 128
	store4
	#
	load8! &0 	#AR
	load8! &3 	#X2
	add! 120
	store8
	#
	load8! &2 	#X2
	add! 16
	load8
	#
	load8! &5 	#X4
	add
	load8! &3 	#X2
	add! 16
	store8
	#
	load8! &2 	#X2
	call! .Li_gz_comp.constprop_1.l_o0fadd4
	store8! &1

	# CBRANCH EQ
	load4! &0 	#AR
	push! 4294967295
	xor
	jump_zero! .L371.l_o0fadd4
	# END CBRANCH
.L399.l_o0fadd4:
	load8! &3 	#X3
	load8! &5 	#X4
	sub
	store8! &4 	#X3
	push! 0
	store8! &2 	#X1
	# CBRANCH EQ0
	load8! &3 	#X3
	jump_not_zero! .L370.l_o0fadd4
	# END CBRANCH
.L368.l_o0fadd4:
	load4! &8
	load8! &3 	#X2
	call! gz_comp.s_o0fadd4
	store8! &2

	store8! &0 #set_sp! &1
	load8! &2 	#X2
	add! 108
	load4
	#
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &8
	jump! .L398.l_o0fadd4
.L397.l_o0fadd4:
	load4! &5 	#X5
	#peep - pop(deadreg)+pusharg
	push! 0
	load8! &2 	#AR
	call! memset
	store8! &3

	set_sp! &2
	load8! &2 	#X2
	add! 48
	load8
	#
	store8! &1 	#AR
	load4! &5 	#X5
	load8! &3 	#X2
	add! 128
	store4
	#
	load8! &0 	#AR
	load8! &3 	#X2
	add! 120
	store8
	#
	load8! &2 	#X2
	add! 16
	load8
	#
	load8! &5 	#X4
	add
	load8! &3 	#X2
	add! 16
	store8
	#
	load8! &2 	#X2
	call! .Li_gz_comp.constprop_1.l_o0fadd4
	store8! &1

	# CBRANCH
	load4! &0 	#AR
	push! 4294967295
	xor
	push! 1
	lt_u
	jump_zero! .L399.l_o0fadd4
	# END CBRANCH
.L371.l_o0fadd4:
	load8! &2 	#X2
	add! 108
	load4
	#
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &8
	jump! .L398.l_o0fadd4
.L369.l_o0fadd4:
	load8! &2 	#X2
	call! .Li_gz_comp.constprop_1.l_o0fadd4
	store8! &1

	# CBRANCH EQ
	load4! &0 	#AR
	push! 4294967295
	xor
	jump_zero! .L371.l_o0fadd4
	# END CBRANCH
	push! 1
	store8! &2 	#X1
	# CBRANCH EQ0
	load8! &3 	#X3
	jump_not_zero! .L370.l_o0fadd4
	# END CBRANCH
	jump! .L368.l_o0fadd4
.L376.l_o0fadd4:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &8
	jump! .L398.l_o0fadd4
.L377.l_o0fadd4:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &8
	jump! .L398.l_o0fadd4
.L378.l_o0fadd4:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &8
	jump! .L398.l_o0fadd4
.L375.l_o0fadd4:
	push! -2
	store8! &1 	#AR
	load4! &0 	#AR
	store4! &8
.L398.l_o0fadd4:

	# epilogue
	set_sp! &6
	return

# FUNCTION ENDS:gzflush

	#peephole pop+cmp
	#peephole pop+cmp
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+pusharg
	#peephole move
	#peephole zero_extend
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole redundant blockage insn

# FUNCTION BEGINS:gzsetparams
	EXPORT	gzsetparams
gzsetparams:
	# prologue (8 GPRs)

	set_sp! &-8

	load8! &9
	store8! &3 	#X2
	load4! &10
	store8! &8 	#X7
	# CBRANCH EQ0
	load8! &2 	#X2
	jump_zero! .L412.l_o0fadd4
	# END CBRANCH
	load8! &2 	#X2
	add! 24
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	push! 31153
	xor
	push! 1
	lt_u
	jump_zero! .L413.l_o0fadd4
	# END CBRANCH
	load8! &2 	#X2
	add! 108
	load4
	#
	store8! &7 	#X6
	# CBRANCH EQ0
	load4! &6 	#X6
	jump_not_zero! .L414.l_o0fadd4
	# END CBRANCH
	load8! &2 	#X2
	add! 88
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ
	load4! &8 	#X7
	xor
	jump_zero! .L439.l_o0fadd4
	# END CBRANCH
	load8! &2 	#X2
	add! 104
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_not_zero! .L440.l_o0fadd4
	# END CBRANCH
.L403.l_o0fadd4:
	load8! &2 	#X2
	add! 40
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L410.l_o0fadd4
	# END CBRANCH
.L444.l_o0fadd4:
	load8! &2 	#X2
	add! 128
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L411.l_o0fadd4
	# END CBRANCH
	push! 5
	load8! &3 	#X2
	call! gz_comp.s_o0fadd4
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH EQ
	load4! &0 	#AR
	push! 4294967295
	xor
	jump_zero! .L441.l_o0fadd4
	# END CBRANCH
.L411.l_o0fadd4:
	load8! &2 	#X2
	add! 120
	store8! &1 	#AR
	load4! &11
	load4! &8 	#X7
	load8! &2 	#AR
	call! deflateParams
	store8! &3

	set_sp! &2
.L410.l_o0fadd4:
	load4! &7 	#X7
	load8! &3 	#X2
	add! 88
	store4
	#
	load4! &11
	load8! &3 	#X2
	add! 92
	store4
	#
.L400.l_o0fadd4:
	load4! &6 	#X6
	store4! &10
	jump! .L442.l_o0fadd4
.L439.l_o0fadd4:
	load8! &2 	#X2
	add! 92
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ
	load4! &12
	xor
	jump_zero! .L400.l_o0fadd4
	# END CBRANCH
	load8! &2 	#X2
	add! 104
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L403.l_o0fadd4
	# END CBRANCH
.L440.l_o0fadd4:
	push! 0
	load8! &3 	#X2
	add! 104
	store4
	#
	load8! &2 	#X2
	add! 96
	load8
	#
	store8! &4 	#X3
	load8! &2 	#X2
	add! 128
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_not_zero! .L404.l_o0fadd4
	# END CBRANCH
	push! 1
	store8! &2 	#X1
	# CBRANCH EQ0
	load8! &3 	#X3
	jump_zero! .L403.l_o0fadd4
	# END CBRANCH
.L405.l_o0fadd4:
	load8! &2 	#X2
	add! 40
	load4
	#
	store8! &6 	#X5
	load4! &5 	#X5
	store8! &5 	#X4
	# CBRANCH
	load8! &3 	#X3
	add! -9223372036854775808
	load8! &5 	#X4
	add! -9223372036854775808
	lt_u
	jump_zero! .L408.l_o0fadd4
	# END CBRANCH
	load4! &3 	#X3
	store8! &6 	#X5
	load8! &3 	#X3
	and! 0xffffffff
	store8! &5 	#X4
.L408.l_o0fadd4:
	load8! &2 	#X2
	add! 48
	load8
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load4! &1 	#X1
	jump_not_zero! .L443.l_o0fadd4
	# END CBRANCH
	load4! &5 	#X5
	load8! &3 	#X2
	add! 128
	store4
	#
	load8! &0 	#AR
	load8! &3 	#X2
	add! 120
	store8
	#
	load8! &2 	#X2
	add! 16
	load8
	#
	load8! &5 	#X4
	add
	load8! &3 	#X2
	add! 16
	store8
	#
	load8! &2 	#X2
	call! .Li_gz_comp.constprop_1.l_o0fadd4
	store8! &1

	# CBRANCH EQ
	load4! &0 	#AR
	push! 4294967295
	xor
	jump_zero! .L406.l_o0fadd4
	# END CBRANCH
.L445.l_o0fadd4:
	load8! &3 	#X3
	load8! &5 	#X4
	sub
	store8! &4 	#X3
	push! 0
	store8! &2 	#X1
	# CBRANCH EQ0
	load8! &3 	#X3
	jump_not_zero! .L405.l_o0fadd4
	# END CBRANCH
	load8! &2 	#X2
	add! 40
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L410.l_o0fadd4
	# END CBRANCH
	jump! .L444.l_o0fadd4
.L443.l_o0fadd4:
	load4! &5 	#X5
	#peep - pop(deadreg)+pusharg
	push! 0
	load8! &2 	#AR
	call! memset
	store8! &3

	set_sp! &2
	load8! &2 	#X2
	add! 48
	load8
	#
	store8! &1 	#AR
	load4! &5 	#X5
	load8! &3 	#X2
	add! 128
	store4
	#
	load8! &0 	#AR
	load8! &3 	#X2
	add! 120
	store8
	#
	load8! &2 	#X2
	add! 16
	load8
	#
	load8! &5 	#X4
	add
	load8! &3 	#X2
	add! 16
	store8
	#
	load8! &2 	#X2
	call! .Li_gz_comp.constprop_1.l_o0fadd4
	store8! &1

	# CBRANCH
	load4! &0 	#AR
	push! 4294967295
	xor
	push! 1
	lt_u
	jump_zero! .L445.l_o0fadd4
	# END CBRANCH
.L406.l_o0fadd4:
	load8! &2 	#X2
	add! 108
	load4
	#
	store8! &7 	#X6
	load4! &6 	#X6
	store4! &10
	jump! .L442.l_o0fadd4
.L404.l_o0fadd4:
	load8! &2 	#X2
	call! .Li_gz_comp.constprop_1.l_o0fadd4
	store8! &1

	# CBRANCH EQ
	load4! &0 	#AR
	push! 4294967295
	xor
	jump_zero! .L406.l_o0fadd4
	# END CBRANCH
	push! 1
	store8! &2 	#X1
	# CBRANCH EQ0
	load8! &3 	#X3
	jump_not_zero! .L405.l_o0fadd4
	# END CBRANCH
	jump! .L403.l_o0fadd4
.L441.l_o0fadd4:
	load8! &2 	#X2
	add! 108
	load4
	#
	store8! &7 	#X6
	load4! &6 	#X6
	store4! &10
	jump! .L442.l_o0fadd4
.L413.l_o0fadd4:
	push! -2
	store8! &7 	#X6
	load4! &6 	#X6
	store4! &10
	jump! .L442.l_o0fadd4
.L414.l_o0fadd4:
	push! -2
	store8! &7 	#X6
	load4! &6 	#X6
	store4! &10
	jump! .L442.l_o0fadd4
.L412.l_o0fadd4:
	push! -2
	store8! &7 	#X6
	load4! &6 	#X6
	store4! &10
.L442.l_o0fadd4:

	# epilogue
	set_sp! &8
	return

# FUNCTION ENDS:gzsetparams

	#peephole pop+pusharg
	#peephole pop+pusharg
	#peephole pop+pusharg
	#peephole pop+pusharg
	#peephole pop+pusharg
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+pusharg
	#peephole move
	#peephole zero_extend
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole redundant blockage insn

# FUNCTION BEGINS:gzclose_w
	EXPORT	gzclose_w
gzclose_w:
	# prologue (6 GPRs)

	set_sp! &-6

	load8! &7
	store8! &3 	#X2
	# CBRANCH EQ0
	load8! &2 	#X2
	jump_zero! .L461.l_o0fadd4
	# END CBRANCH
	load8! &2 	#X2
	add! 24
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	push! 31153
	xor
	push! 1
	lt_u
	jump_zero! .L462.l_o0fadd4
	# END CBRANCH
	load8! &2 	#X2
	add! 104
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_not_zero! .L448.l_o0fadd4
	# END CBRANCH
.L452.l_o0fadd4:
	push! 0
	store8! &4 	#X3
.L449.l_o0fadd4:
	push! 4
	load8! &3 	#X2
	call! gz_comp.s_o0fadd4
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH EQ
	load4! &0 	#AR
	push! 4294967295
	xor
	jump_zero! .L481.l_o0fadd4
	# END CBRANCH
.L457.l_o0fadd4:
	load8! &2 	#X2
	add! 40
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L458.l_o0fadd4
	# END CBRANCH
.L485.l_o0fadd4:
	load8! &2 	#X2
	add! 64
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L482.l_o0fadd4
	# END CBRANCH
	load8! &2 	#X2
	add! 48
	load8
	#
	#peep - pop(deadreg)+pusharg
	call! free
	set_sp! (+ &0 8)
	

.L458.l_o0fadd4:
	push! 0
	push! 0
	load8! &4 	#X2
	call! gz_error
	set_sp! (+ &0 24)
	

	load8! &2 	#X2
	add! 32
	load8
	#
	#peep - pop(deadreg)+pusharg
	call! free
	set_sp! (+ &0 8)
	

	load8! &2 	#X2
	add! 28
	load4
	#
	and! 0x0ffffffff
	#peep - pop(deadreg)+pusharg
	call! close
	store8! &1

	# CBRANCH EQ
	load4! &0 	#AR
	push! 4294967295
	xor
	jump_zero! .L483.l_o0fadd4
	# END CBRANCH
	load8! &2 	#X2
	call! free
	set_sp! (+ &0 8)
	

.L446.l_o0fadd4:
	load4! &3 	#X3
	store4! &8
	jump! .L484.l_o0fadd4
.L481.l_o0fadd4:
	load8! &2 	#X2
	add! 108
	load4
	#
	store8! &4 	#X3
	load8! &2 	#X2
	add! 40
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_zero! .L458.l_o0fadd4
	# END CBRANCH
	jump! .L485.l_o0fadd4
.L483.l_o0fadd4:
	push! -1
	store8! &4 	#X3
	load8! &2 	#X2
	call! free
	set_sp! (+ &0 8)
	

	jump! .L446.l_o0fadd4
.L448.l_o0fadd4:
	push! 0
	load8! &3 	#X2
	add! 104
	store4
	#
	load8! &2 	#X2
	add! 96
	load8
	#
	store8! &4 	#X3
	load8! &2 	#X2
	add! 128
	load4
	#
	# CBRANCH - peep (modesize=4)
	and! 4294967295
	# - EQ0
	jump_not_zero! .L450.l_o0fadd4
	# END CBRANCH
	push! 1
	store8! &2 	#X1
	# CBRANCH EQ0
	load8! &3 	#X3
	jump_zero! .L452.l_o0fadd4
	# END CBRANCH
.L451.l_o0fadd4:
	load8! &2 	#X2
	add! 40
	load4
	#
	store8! &6 	#X5
	load4! &5 	#X5
	store8! &5 	#X4
	# CBRANCH
	load8! &3 	#X3
	add! -9223372036854775808
	load8! &5 	#X4
	add! -9223372036854775808
	lt_u
	jump_zero! .L455.l_o0fadd4
	# END CBRANCH
	load4! &3 	#X3
	store8! &6 	#X5
	load8! &3 	#X3
	and! 0xffffffff
	store8! &5 	#X4
.L455.l_o0fadd4:
	load8! &2 	#X2
	add! 48
	load8
	#
	store8! &1 	#AR
	# CBRANCH EQ0
	load4! &1 	#X1
	jump_not_zero! .L486.l_o0fadd4
	# END CBRANCH
	load4! &5 	#X5
	load8! &3 	#X2
	add! 128
	store4
	#
	load8! &0 	#AR
	load8! &3 	#X2
	add! 120
	store8
	#
	load8! &2 	#X2
	add! 16
	load8
	#
	load8! &5 	#X4
	add
	load8! &3 	#X2
	add! 16
	store8
	#
	load8! &2 	#X2
	call! .Li_gz_comp.constprop_1.l_o0fadd4
	store8! &1

	# CBRANCH EQ
	load4! &0 	#AR
	push! 4294967295
	xor
	jump_zero! .L453.l_o0fadd4
	# END CBRANCH
.L487.l_o0fadd4:
	load8! &3 	#X3
	load8! &5 	#X4
	sub
	store8! &4 	#X3
	push! 0
	store8! &2 	#X1
	# CBRANCH EQ0
	load8! &3 	#X3
	jump_not_zero! .L451.l_o0fadd4
	# END CBRANCH
	push! 0
	store8! &4 	#X3
	jump! .L449.l_o0fadd4
.L486.l_o0fadd4:
	load4! &5 	#X5
	#peep - pop(deadreg)+pusharg
	push! 0
	load8! &2 	#AR
	call! memset
	store8! &3

	set_sp! &2
	load8! &2 	#X2
	add! 48
	load8
	#
	store8! &1 	#AR
	load4! &5 	#X5
	load8! &3 	#X2
	add! 128
	store4
	#
	load8! &0 	#AR
	load8! &3 	#X2
	add! 120
	store8
	#
	load8! &2 	#X2
	add! 16
	load8
	#
	load8! &5 	#X4
	add
	load8! &3 	#X2
	add! 16
	store8
	#
	load8! &2 	#X2
	call! .Li_gz_comp.constprop_1.l_o0fadd4
	store8! &1

	# CBRANCH
	load4! &0 	#AR
	push! 4294967295
	xor
	push! 1
	lt_u
	jump_zero! .L487.l_o0fadd4
	# END CBRANCH
.L453.l_o0fadd4:
	load8! &2 	#X2
	add! 108
	load4
	#
	store8! &4 	#X3
	push! 4
	load8! &3 	#X2
	call! gz_comp.s_o0fadd4
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH
	load4! &0 	#AR
	push! 4294967295
	xor
	push! 1
	lt_u
	jump_zero! .L457.l_o0fadd4
	# END CBRANCH
	jump! .L481.l_o0fadd4
.L482.l_o0fadd4:
	load8! &2 	#X2
	add! 120
	#peep - pop(deadreg)+pusharg
	call! deflateEnd
	store8! &1

	load8! &2 	#X2
	add! 56
	load8
	#
	#peep - pop(deadreg)+pusharg
	call! free
	set_sp! (+ &0 8)
	

	load8! &2 	#X2
	add! 48
	load8
	#
	#peep - pop(deadreg)+pusharg
	call! free
	set_sp! (+ &0 8)
	

	jump! .L458.l_o0fadd4
.L450.l_o0fadd4:
	load8! &2 	#X2
	call! .Li_gz_comp.constprop_1.l_o0fadd4
	store8! &1

	# CBRANCH EQ
	load4! &0 	#AR
	push! 4294967295
	xor
	jump_zero! .L453.l_o0fadd4
	# END CBRANCH
	push! 1
	store8! &2 	#X1
	# CBRANCH EQ0
	load8! &3 	#X3
	jump_not_zero! .L451.l_o0fadd4
	# END CBRANCH
	jump! .L452.l_o0fadd4
.L462.l_o0fadd4:
	push! -2
	store8! &4 	#X3
	load4! &3 	#X3
	store4! &8
	jump! .L484.l_o0fadd4
.L461.l_o0fadd4:
	push! -2
	store8! &4 	#X3
	load4! &3 	#X3
	store4! &8
.L484.l_o0fadd4:

	# epilogue
	set_sp! &6
	return

# FUNCTION ENDS:gzclose_w

#	IMPORT deflateEnd
#	IMPORT close
#	IMPORT deflateParams
#	IMPORT vsnprintf
#	IMPORT strlen
#	IMPORT memset
#	IMPORT memcpy
#	IMPORT strerror
#	IMPORT __errno
#	IMPORT deflateReset
#	IMPORT deflate
#	IMPORT write
#	IMPORT free
#	IMPORT gz_error
#	IMPORT deflateInit2_
#	IMPORT malloc
#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: o6c416b
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"libgcc2.c"
#	.text
	EXPORT	__clz_tab
__clz_tab:
	data1 [0]
	data1 [1]
	data1 [2]
	data1 [2]
	data1 [3]
	data1 [3]
	data1 [3]
	data1 [3]
	data1 [4]
	data1 [4]
	data1 [4]
	data1 [4]
	data1 [4]
	data1 [4]
	data1 [4]
	data1 [4]
	data1 [5]
	data1 [5]
	data1 [5]
	data1 [5]
	data1 [5]
	data1 [5]
	data1 [5]
	data1 [5]
	data1 [5]
	data1 [5]
	data1 [5]
	data1 [5]
	data1 [5]
	data1 [5]
	data1 [5]
	data1 [5]
	data1 [6]
	data1 [6]
	data1 [6]
	data1 [6]
	data1 [6]
	data1 [6]
	data1 [6]
	data1 [6]
	data1 [6]
	data1 [6]
	data1 [6]
	data1 [6]
	data1 [6]
	data1 [6]
	data1 [6]
	data1 [6]
	data1 [6]
	data1 [6]
	data1 [6]
	data1 [6]
	data1 [6]
	data1 [6]
	data1 [6]
	data1 [6]
	data1 [6]
	data1 [6]
	data1 [6]
	data1 [6]
	data1 [6]
	data1 [6]
	data1 [6]
	data1 [6]
	data1 [7]
	data1 [7]
	data1 [7]
	data1 [7]
	data1 [7]
	data1 [7]
	data1 [7]
	data1 [7]
	data1 [7]
	data1 [7]
	data1 [7]
	data1 [7]
	data1 [7]
	data1 [7]
	data1 [7]
	data1 [7]
	data1 [7]
	data1 [7]
	data1 [7]
	data1 [7]
	data1 [7]
	data1 [7]
	data1 [7]
	data1 [7]
	data1 [7]
	data1 [7]
	data1 [7]
	data1 [7]
	data1 [7]
	data1 [7]
	data1 [7]
	data1 [7]
	data1 [7]
	data1 [7]
	data1 [7]
	data1 [7]
	data1 [7]
	data1 [7]
	data1 [7]
	data1 [7]
	data1 [7]
	data1 [7]
	data1 [7]
	data1 [7]
	data1 [7]
	data1 [7]
	data1 [7]
	data1 [7]
	data1 [7]
	data1 [7]
	data1 [7]
	data1 [7]
	data1 [7]
	data1 [7]
	data1 [7]
	data1 [7]
	data1 [7]
	data1 [7]
	data1 [7]
	data1 [7]
	data1 [7]
	data1 [7]
	data1 [7]
	data1 [7]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
	data1 [8]
#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: o727c1b
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"libgcc2.c"
#	.text
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+push
	#peephole pop+push+sub
	#peephole 1
	#peephole nop+set
	#peephole move
	#peephole move+push(pushable)
	#peephole zero_extend
	#peephole pop+cmp
	#peephole redundant blockage insn
	#peephole pop+move2(deadreg)

# FUNCTION BEGINS:__clzdi2
	EXPORT	__clzdi2
__clzdi2:
	# prologue (4 GPRs)
	push! 0
	push! 0
	push! 0
	push! 0

	load8! &5	# 2	[c=2]movdi_push_pop
	store8! &4 	#X3
	push! 56		# 4	[c=4]movdi_push_pop
	store8! &1 	#AR
.L3.l_o727c1b:
	load4! &0 	#AR	# 107	[c=5]movsi_to_tr_unspec/1
	store8! &2 	#X1	# 109	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 19	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 21	[c=42]*lshrdi3/2
	shift_ru
	store8! &2 	#X1	# 22	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 24	[c=5]movdi_to_tr_unspec/1
	and! 0xff		# 26	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_not_zero! .L2.l_o727c1b	# 110	[c=12]*peep2_cbranchdi
	# END CBRANCH
	load8! &0 	#AR	# 36	[c=5]movdi_to_tr_unspec/1
	add! -8		# 38	[c=4]*adddi/0
	store8! &1 	#AR	# 39	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 43	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_not_zero! .L3.l_o727c1b
	# END CBRANCH
	push! 64		# 6	[c=4]movdi_push_pop
	store8! &3 	#X2
	push! __clz_tab		# 57	[c=3]movdi_to_tr_unspec/0
	load8! &4 	#X3	# 59	[c=6]*adddi/2
	add
	load1		# 95	[c=4]*peep2_mov_from_mem_tr_to_tr_ind_pushqi_unspec
	and! 0x0ff	# 68	[c=1]*zero_extendqidi2
	load8! &3 	#X2	# 99	[c=14]*subdi3/2
	sub
	neg		# 100	[c=4]*neg_tr
	store4! &6	# 112	[c=4]movsi_from_tr_unspec/0
	jump! .L8.l_o727c1b		# 129	[c=4]jump
.L2.l_o727c1b:
	push! 64		# 49	[c=3]movdi_to_tr_unspec/0
	load8! &1 	#AR	# 51	[c=14]*subdi3/2
	sub
	store8! &3 	#X2	# 52	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 5	[c=4]movdi_push_pop
	store8! &4 	#X3
	push! __clz_tab		# 116	[c=3]movdi_to_tr_unspec/0
	load8! &4 	#X3	# 118	[c=6]*adddi/2
	add
	load1		# 119	[c=4]*peep2_mov_from_mem_tr_to_tr_ind_pushqi_unspec
	and! 0x0ff	# 121	[c=1]*zero_extendqidi2
	load8! &3 	#X2	# 123	[c=14]*subdi3/2
	sub
	neg		# 124	[c=4]*neg_tr
	store4! &6	# 125	[c=4]movsi_from_tr_unspec/0
.L8.l_o727c1b:

	# epilogue
	set_sp! &4
	return

# FUNCTION ENDS:__clzdi2

#	IMPORT __clz_tab
#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: o8fda09
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"_exit.c"
#	.text

# FUNCTION BEGINS:_exit
	EXPORT	_exit
_exit:
	# prologue (1 GPRs)
	push! 0

	load8! __exit_jb_	# 5	[c=1]movdi_push_pop
	store8! &1 	#AR
	# CBRANCH EQ0	# 6	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L2.l_o8fda09
	# END CBRANCH
	load4! &2	# 8	[c=2]movsi_push_pop
	store8! &1 	#AR
	load4! &0 	#AR	# 9	[c=5]movsi_to_tr_unspec/1
	sigx4		# 11	[c=6]*extendsidi2
	store8! &1 	#AR	# 12	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 14	[c=4]movdi_push_pop
	store8! __exit_val_
	load8! __exit_jb_	# 15	[c=1]movdi_push_pop
	store8! &1 	#AR
	push! 1		# 16	[c=4]pushsi1_not_fp/0
	load8! &1 	#AR	# 17	[c=4]pushdi1_not_fp/1
	call! longjmp		# 18	[c=5]*call_pop_0/0
	set_sp! (+ &0 16)
	

	jump! .L4.l_o8fda09		# 30	[c=4]jump
.L2.l_o8fda09:
# Inline assembly starts
# 23 "../../../../libgloss/ivm64/_exit.c" 1
	set_sp! &2
# 0 "" 2
# 24 "../../../../libgloss/ivm64/_exit.c" 1
	sigx4
# 0 "" 2
# 25 "../../../../libgloss/ivm64/_exit.c" 1
	exit
# 0 "" 2
# Inline assembly ends
.L4.l_o8fda09:
	# NOP		# 33	[c=0]nop

	# epilogue
	store8! &0 #set_sp! &1
	return

# FUNCTION ENDS:_exit

	EXPORT	__exit_val_
#	.data
__exit_val_:
	data8 [0]

	EXPORT	__exit_jb_
__exit_jb_:
	data8 [0]

#	IMPORT longjmp
#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: o3fd139
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"adddf3.c"
#	.text
	#peephole zero_extend
	#peephole binop1+deadreg+binop2
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole binop1+2
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole binop1+2
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole binop1+2
	#peephole 1
	#peephole nop+set
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole move_dead
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole move_dead
	#peephole move_dead
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole move_dead
	#peephole move
	#peephole move+push(pushable)
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole nop+set
	#peephole 1
	#peephole nop+set
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole zero_extend
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole 1
	#peephole zero_extend
	#peephole zero_extend
	#peephole 1
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole zero_extend
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole 1
	#peephole zero_extend
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole zero_extend
	#peephole zero_extend
	#peephole 1
	#peephole nop+set
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole 1
	#peephole nop+set
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole 1
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole zero_extend
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole 1
	#peephole zero_extend
	#peephole pop+pusharg
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole 1
	#peephole zero_extend
	#peephole pop+pusharg
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+sub
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+sub
	#peephole move_dead
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole move
	#peephole move+push+sub
	#peephole move_dead
	#peephole move
	#peephole move+push+sub
	#peephole move_dead
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole nop+set
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole nop+set
	#peephole move_dead
	#peephole move+push+sub
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+sub
	#peephole move_dead
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move
	#peephole move+push+sub
	#peephole move_dead
	#peephole move
	#peephole move+push+sub
	#peephole move_dead
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole nop+set
	#peephole move_dead
	#peephole move+push+sub
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole zero_extend
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole zero_extend
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole 1
	#peephole zero_extend
	#peephole zero_extend
	#peephole move_dead
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole zero_extend
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole 1
	#peephole zero_extend
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole zero_extend
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move_dead
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole nop+set
	#peephole move_dead
	#peephole move+push+sub
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+sub
	#peephole move_dead
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move+push+sub
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole zero_extend
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole zero_extend
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole 1
	#peephole zero_extend
	#peephole zero_extend
	#peephole move_dead
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole zero_extend
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole 1
	#peephole zero_extend
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole zero_extend
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move_dead
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole nop+set
	#peephole move_dead
	#peephole move+push+sub
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+sub
	#peephole move_dead
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole nop+set
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole nop+set
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole 1
	#peephole nop+set
	#peephole zero_extend
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole 1
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole nop+set
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole zero_extend
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole zero_extend
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole 1
	#peephole zero_extend
	#peephole zero_extend
	#peephole move_dead
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole zero_extend
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole 1
	#peephole zero_extend
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole zero_extend
	#peephole zero_extend
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole zero_extend
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole zero_extend
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole zero_extend
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole 1
	#peephole zero_extend
	#peephole zero_extend
	#peephole move_dead
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole zero_extend
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole 1
	#peephole zero_extend
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole zero_extend
	#peephole zero_extend
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole zero_extend
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole 1
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole move
	#peephole move
	#peephole move+push(pushable)
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move_dead
	#peephole move
	#peephole move
	#peephole move+push(pushable)
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move_dead
	#peephole pop+move2(deadreg)
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+push+pop+push
	#peephole pop+block+cmp
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+move(deadreg)
	#peephole pop+push+pop+push
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+push+pop+push
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+push+pop+push
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+block+push+block
	#peephole pop+push+pop+push
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+cmp
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+push+pop+push
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+block+push+block
	#peephole pop+push+pop+push
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+push+pop+push
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+block+push+block
	#peephole pop+push+pop+push
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+cmp
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+push+pop+push
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+block+push+block
	#peephole pop+push+pop+push
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+cmp
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+commut(di)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+block+push+commut(di)
	#peephole pop+block+push+commut(di)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+push+sub
	#peephole pop+block+push+block
	#peephole pop+push+sub
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+push+sub
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+push+sub
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+push+sub
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+push+sub
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+commut(di)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+block+push+commut(di)
	#peephole pop+block+push+commut(di)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+block+push+commut(di)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+commut(di)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole redundant blockage insn
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole redundant blockage insn
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push

# FUNCTION BEGINS:__adddf3
	EXPORT	__adddf3
__adddf3:
	# prologue (12 GPRs)

	set_sp! &-12

	load8! &13	# 7001	[c=2]movdi_push_pop
	store8! &1 	#AR
	load8! &13	# 7003	[c=5]movdi_to_tr_unspec/1
	store8! &2 	#X1	# 74	[c=4]movsi_from_tr_unspec/0
	load8! &0 	#AR	# 76	[c=5]movdi_to_tr_unspec/1
	shift_ru! 32	# 78	[c=40]*lshrdi3/0
	and! 0xfffff		# 87	[c=4]*anddi3/0
	store8! &4 	#X3	# 7842	[c=4]movsi_from_tr_unspec/0
	load8! &0 	#AR	# 95	[c=5]movdi_to_tr_unspec/1
	shift_ru! 52	# 97	[c=40]*lshrdi3/0
	and! 0x7ff		# 106	[c=4]*anddi3/0
	and! 0xffff		# 8207	[c=4]*anddi3/0
	store8! &3 	#X2	# 7850	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 7851	[c=5]movdi_to_tr_unspec/1
	shift_ru! 63	# 124	[c=40]*lshrdi3/0
	store8! &5 	#X4	# 7854	[c=4]movqi_from_tr_unspec/0
	load8! &3 	#X3	# 131	[c=5]movdi_to_tr_unspec/1
	shift_l! 3	# 133	[c=8]*ashldi3/0
	store8! &1 	#AR	# 7855	[c=4]movdi_from_tr_unspec/0
	load4! &1 	#X1	# 7856	[c=5]movsi_to_tr_unspec/1
	shift_ru! 29	# 7020	[c=40]*lshrdi3/0
	load8! &1 	#AR	# 160	[c=6]*iordi3/2
	or
	store8! &8 	#X7	# 7860	[c=4]movsi_from_tr_unspec/0
	load8! &1 	#X1	# 167	[c=5]movdi_to_tr_unspec/1
	shift_l! 3	# 169	[c=8]*ashldi3/0
	store8! &9 	#X8	# 7862	[c=4]movsi_from_tr_unspec/0
	load8! &14	# 7026	[c=2]movdi_push_pop
	store8! &1 	#AR
	load8! &14	# 7028	[c=5]movdi_to_tr_unspec/1
	store8! &4 	#X3	# 186	[c=4]movsi_from_tr_unspec/0
	load8! &0 	#AR	# 188	[c=5]movdi_to_tr_unspec/1
	shift_ru! 32	# 190	[c=40]*lshrdi3/0
	and! 0xfffff		# 199	[c=4]*anddi3/0
	store8! &7 	#X6	# 7868	[c=4]movsi_from_tr_unspec/0
	load8! &0 	#AR	# 207	[c=5]movdi_to_tr_unspec/1
	shift_ru! 52	# 209	[c=40]*lshrdi3/0
	and! 0x7ff		# 218	[c=4]*anddi3/0
	and! 0xffff		# 8209	[c=4]*anddi3/0
	store8! &6 	#X5	# 7876	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 7877	[c=5]movdi_to_tr_unspec/1
	shift_ru! 63	# 236	[c=40]*lshrdi3/0
	store8! &11 	#X10	# 7880	[c=4]movqi_from_tr_unspec/0
	load8! &6 	#X6	# 243	[c=5]movdi_to_tr_unspec/1
	shift_l! 3	# 245	[c=8]*ashldi3/0
	store8! &1 	#AR	# 7881	[c=4]movdi_from_tr_unspec/0
	load4! &3 	#X3	# 7882	[c=5]movsi_to_tr_unspec/1
	shift_ru! 29	# 7045	[c=40]*lshrdi3/0
	load8! &1 	#AR	# 272	[c=6]*iordi3/2
	or
	store8! &7 	#X6	# 7886	[c=4]movsi_from_tr_unspec/0
	load8! &3 	#X3	# 279	[c=5]movdi_to_tr_unspec/1
	shift_l! 3	# 281	[c=8]*ashldi3/0
	store8! &10 	#X9	# 7888	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ	# 288	[c=12]cbranchqi4_internal
	load1! &4 	#X4
	load1! &11 	#X10
	xor	
	jump_zero! .L155.l_o3fd139
	# END CBRANCH
	load8! &5 	#X5	# 6472	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 6474	[c=14]*subdi3/2
	sub
	neg		# 6475	[c=4]*neg_tr
	store8! &1 	#AR	# 7527	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 7528	[c=12]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	jump_zero! .L44.l_o3fd139
	# END CBRANCH
	# CBRANCH EQ0	# 2143	[c=12]cbranchsi4_internal
	load4! &5 	#X5
	jump_not_zero! .L45.l_o3fd139
	# END CBRANCH
	load8! &9 	#X9	# 6467	[c=5]movdi_to_tr_unspec/1
	load8! &7 	#X6	# 6469	[c=6]*iordi3/2
	or
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 7526	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L156.l_o3fd139
	# END CBRANCH
	load8! &0 	#AR	# 2209	[c=5]movdi_to_tr_unspec/1
	add! -1		# 2211	[c=4]*adddi/0
	store8! &4 	#X3	# 7515	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 7516	[c=12]cbranchsi4_internal
	load4! &3 	#X3
	jump_zero! .L157.l_o3fd139
	# END CBRANCH
	# CBRANCH EQ	# 2276	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	push! 2047	
	xor	
	jump_zero! .L158.l_o3fd139
	# END CBRANCH
	load4! &3 	#X3	# 10	[c=4]movsi_push_pop
	store8! &1 	#AR
.L50.l_o3fd139:
	# CBRANCH	# 2389	[c=12]cbranchsi4_internal
	push! 56	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L52.l_o3fd139
	# END CBRANCH
.L168.l_o3fd139:
	# CBRANCH	# 2391	[c=12]cbranchsi4_internal
	push! 31	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L53.l_o3fd139
	# END CBRANCH
	load8! &0 	#AR	# 6358	[c=5]movdi_to_tr_unspec/1
	sub! 32		# 6360	[c=12]*subdi3/0
	neg		# 6361	[c=4]*neg_tr
	store8! &2 	#X1	# 7466	[c=4]movdi_from_tr_unspec/0
	load4! &1 	#X1	# 7467	[c=5]movsi_to_tr_unspec/1
	store8! &4 	#X3	# 6366	[c=4]movdi_from_tr_unspec/0
	load8! &6 	#X6	# 2411	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 2413	[c=10]*ashldi3/2
	shift_l
	store8! &4 	#X3	# 7469	[c=4]movdi_from_tr_unspec/0
	load4! &9 	#X9	# 7470	[c=5]movsi_to_tr_unspec/1
	store8! &11 	#X10	# 6370	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 6371	[c=5]movsi_to_tr_unspec/1
	store8! &6 	#X5	# 6373	[c=4]movdi_from_tr_unspec/0
	load8! &10 	#X10	# 2430	[c=5]movdi_to_tr_unspec/1
	load8! &6 	#X5	# 2432	[c=42]*lshrdi3/2
	shift_ru
	load8! &4 	#X3	# 2445	[c=6]*iordi3/2
	or
	store8! &6 	#X5	# 7474	[c=4]movsi_from_tr_unspec/0
	load4! &1 	#X1	# 6377	[c=5]movsi_to_tr_unspec/1
	pow2		# 6380	[c=4]*pow_tr
	load8! &10 	#X9	# 6381	[c=6]*muldi3/2
	mult
	and! 0xffffffff		# 8176	[c=4]*anddi3/0
	neg		# 2473	[c=3]*negdi2
	shift_ru! 63	# 2478	[c=40]*lshrdi3/0
	and! 0xff		# 8178	[c=4]*anddi3/0
	load8! &6 	#X5	# 6396	[c=6]*iordi3/2
	or
	store8! &2 	#X1	# 7485	[c=4]movdi_from_tr_unspec/0
	load4! &6 	#X6	# 7486	[c=5]movsi_to_tr_unspec/1
	load4! &1 	#AR	# 7488	[c=5]movsi_to_tr_unspec/1
	store8! &2 	#AR	# 7490	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#AR	# 2519	[c=42]*lshrdi3/2
	shift_ru
	store8! &1 	#AR	# 8027	[c=4]movdi_from_tr_unspec/0
	load8! &7 	#X7	# 8028	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 2532	[c=14]*subdi3/2
	sub
	store8! &8 	#X7	# 7493	[c=4]movsi_from_tr_unspec/0
.L54.l_o3fd139:
	load8! &1 	#X1	# 6300	[c=5]movdi_to_tr_unspec/1
	load8! &9 	#X8	# 6302	[c=14]*subdi3/2
	sub
	neg		# 6303	[c=4]*neg_tr
	store8! &4 	#X3	# 7431	[c=4]movsi_from_tr_unspec/0
	push! 1		# 2716	[c=4]movqi_push_pop
	store8! &1 	#AR
	# CBRANCH	# 2717	[c=12]cbranchsi4_internal
	load4! &8 	#X8
	load4! &4 	#X3
	lt_u	
	not	
	jump_zero! .L56.l_o3fd139
	# END CBRANCH
	push! 0		# 2718	[c=4]movqi_push_pop
	store8! &1 	#AR
.L56.l_o3fd139:
	load1! &0 	#AR	# 6293	[c=5]movqi_to_tr_unspec/1
	load8! &8 	#X7	# 8014	[c=14]*subdi3/2
	sub
	neg		# 8015	[c=4]*neg_tr
	store8! &1 	#AR	# 8016	[c=4]movdi_from_tr_unspec/0
.L49.l_o3fd139:
	load8! &0 	#AR	# 4072	[c=5]movdi_to_tr_unspec/1
	and! 0x800000		# 4074	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 7219	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L37.l_o3fd139
	# END CBRANCH
.L172.l_o3fd139:
	load8! &0 	#AR	# 4083	[c=5]movdi_to_tr_unspec/1
	and! 0x7fffff		# 4085	[c=4]*anddi3/0
	store8! &12 	#X11	# 7216	[c=4]movsi_from_tr_unspec/0
.L84.l_o3fd139:
	# CBRANCH EQ0	# 4094	[c=12]cbranchsi4_internal
	load4! &11 	#X11
	jump_zero! .L85.l_o3fd139
	# END CBRANCH
	load4! &11 	#X11	# 5897	[c=5]movsi_to_tr_unspec/1
	#peep - pop(deadreg)+pusharg	# 5901	[c=0]*peep2_pop_pusharg
	call! __clzdi2		# 4102	[c=0]*call_value_pop_1/0
	store8! &1

	load4! &0 	#AR	# 5905	[c=5]movsi_to_tr_unspec/1
	add! -32		# 5907	[c=4]*adddi/0
	add! -8		# 4120	[c=4]*adddi/0
	store8! &1 	#AR	# 4121	[c=4]movdi_from_tr_unspec/0
.L86.l_o3fd139:
	load4! &0 	#AR	# 5855	[c=5]movsi_to_tr_unspec/1
	pow2		# 5858	[c=4]*pow_tr
	load8! &12 	#X11	# 5859	[c=6]*muldi3/2
	mult
	store8! &2 	#X1	# 7194	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 7195	[c=5]movdi_to_tr_unspec/1
	sub! 32		# 5864	[c=12]*subdi3/0
	neg		# 5865	[c=4]*neg_tr
	store8! &6 	#X5	# 7197	[c=4]movdi_from_tr_unspec/0
	load4! &3 	#X3	# 7198	[c=5]movsi_to_tr_unspec/1
	load4! &6 	#X5	# 7200	[c=5]movsi_to_tr_unspec/1
	store8! &7 	#X5	# 7202	[c=4]movdi_from_tr_unspec/0
	load8! &6 	#X5	# 4204	[c=42]*lshrdi3/2
	shift_ru
	load8! &2 	#X1	# 4217	[c=6]*iordi3/2
	or
	store8! &2 	#X1	# 7204	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 7205	[c=5]movsi_to_tr_unspec/1
	pow2		# 5880	[c=4]*pow_tr
	load8! &4 	#X3	# 5881	[c=6]*muldi3/2
	mult
	store8! &4 	#X3	# 4232	[c=4]movdi_from_tr_unspec/0
.L88.l_o3fd139:
	# CBRANCH	# 4267	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	add! -2147483648	
	load4! &3 	#X2
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L89.l_o3fd139
	# END CBRANCH
	load8! &0 	#AR	# 4273	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 4275	[c=14]*subdi3/2
	sub
	store8! &3 	#X2	# 7188	[c=4]movsi_from_tr_unspec/0
	load8! &2 	#X2	# 4282	[c=5]movdi_to_tr_unspec/1
	add! 1		# 4284	[c=4]*adddi/0
	store8! &1 	#AR	# 7189	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 7190	[c=12]cbranchsi4_internal
	push! 31	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L90.l_o3fd139
	# END CBRANCH
	load8! &0 	#AR	# 5796	[c=5]movdi_to_tr_unspec/1
	sub! 32		# 5798	[c=12]*subdi3/0
	neg		# 5799	[c=4]*neg_tr
	store8! &3 	#X2	# 7162	[c=4]movdi_from_tr_unspec/0
	load4! &2 	#X2	# 7163	[c=5]movsi_to_tr_unspec/1
	store8! &6 	#X5	# 5804	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 4311	[c=5]movdi_to_tr_unspec/1
	load8! &6 	#X5	# 4313	[c=10]*ashldi3/2
	shift_l
	store8! &6 	#X5	# 7165	[c=4]movdi_from_tr_unspec/0
	load4! &3 	#X3	# 7166	[c=5]movsi_to_tr_unspec/1
	store8! &8 	#X7	# 5808	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 5809	[c=5]movsi_to_tr_unspec/1
	store8! &7 	#X6	# 5811	[c=4]movdi_from_tr_unspec/0
	load8! &7 	#X7	# 4330	[c=5]movdi_to_tr_unspec/1
	load8! &7 	#X6	# 4332	[c=42]*lshrdi3/2
	shift_ru
	load8! &6 	#X5	# 4345	[c=6]*iordi3/2
	or
	store8! &6 	#X5	# 7169	[c=4]movdi_from_tr_unspec/0
	load4! &2 	#X2	# 7170	[c=5]movsi_to_tr_unspec/1
	pow2		# 5818	[c=4]*pow_tr
	load8! &4 	#X3	# 5819	[c=6]*muldi3/2
	mult
	and! 0xffffffff		# 8145	[c=4]*anddi3/0
	neg		# 4373	[c=3]*negdi2
	shift_ru! 63	# 4378	[c=40]*lshrdi3/0
	and! 0xff		# 8147	[c=4]*anddi3/0
	load8! &6 	#X5	# 5834	[c=6]*iordi3/2
	or
	store8! &4 	#X3	# 7183	[c=4]movsi_from_tr_unspec/0
	load4! &1 	#X1	# 5836	[c=5]movsi_to_tr_unspec/1
	load4! &1 	#AR	# 7184	[c=5]movsi_to_tr_unspec/1
	store8! &2 	#AR	# 7186	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#AR	# 4419	[c=42]*lshrdi3/2
	shift_ru
	store8! &1 	#AR	# 4420	[c=4]movdi_from_tr_unspec/0
	push! 0		# 5843	[c=4]movsi_push_pop
	store8! &3 	#X2
.L92.l_o3fd139:
	load8! &3 	#X3	# 4657	[c=5]movdi_to_tr_unspec/1
	and! 0x7		# 4659	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 7123	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L93.l_o3fd139
	# END CBRANCH
.L76.l_o3fd139:
.L98.l_o3fd139:
	load8! &3 	#X3	# 4668	[c=5]movdi_to_tr_unspec/1
	and! 0xf		# 4670	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 7120	[c=12]*peep2_cbranchsi
	# - EQ
	push! 4	
	xor	
	jump_zero! .L93.l_o3fd139
	# END CBRANCH
	load8! &3 	#X3	# 4679	[c=5]movdi_to_tr_unspec/1
	add! 4		# 4681	[c=4]*adddi/0
	store8! &2 	#X1	# 4682	[c=4]movdi_from_tr_unspec/0
	push! 1		# 5730	[c=4]movqi_push_pop
	store8! &6 	#X5
	# CBRANCH	# 4689	[c=12]cbranchsi4_internal
	load4! &1 	#X1
	load4! &4 	#X3
	lt_u	
	not	
	jump_zero! .L94.l_o3fd139
	# END CBRANCH
	push! 0		# 4690	[c=4]movqi_push_pop
	store8! &6 	#X5
.L94.l_o3fd139:
	load1! &5 	#X5	# 5722	[c=5]movqi_to_tr_unspec/1
	load8! &1 	#AR	# 7906	[c=6]*adddi/2
	add
	store8! &1 	#AR	# 7907	[c=4]movdi_from_tr_unspec/0
	load4! &1 	#X1	# 5728	[c=4]movsi_push_pop
	store8! &4 	#X3
.L93.l_o3fd139:
	load8! &0 	#AR	# 4716	[c=5]movdi_to_tr_unspec/1
	and! 0x800000		# 4718	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 7116	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L95.l_o3fd139
	# END CBRANCH
	load8! &2 	#X2	# 4727	[c=5]movdi_to_tr_unspec/1
	add! 1		# 4729	[c=4]*adddi/0
	store8! &3 	#X2	# 7111	[c=4]movsi_from_tr_unspec/0
	load2! &2 	#X2	# 5718	[c=5]movhi_to_tr_unspec/1
	and! 0x7ff		# 4742	[c=4]*anddi3/0
	store8! &2 	#X1	# 7112	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ	# 7113	[c=12]cbranchsi4_internal
	load4! &2 	#X2
	push! 2047	
	xor	
	jump_zero! .L159.l_o3fd139
	# END CBRANCH
	load8! &0 	#AR	# 4968	[c=5]movdi_to_tr_unspec/1
	and! 0xffffffffff7fffff		# 4970	[c=4]*anddi3/0
	store8! &1 	#AR	# 7074	[c=4]movdi_from_tr_unspec/0
	load4! &3 	#X3	# 7075	[c=5]movsi_to_tr_unspec/1
	shift_ru! 3	# 5670	[c=40]*lshrdi3/0
	store8! &3 	#X2	# 7077	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 7078	[c=5]movdi_to_tr_unspec/1
	shift_l! 29	# 4993	[c=8]*ashldi3/0
	load8! &3 	#X2	# 5006	[c=6]*iordi3/2
	or
	store8! &6 	#X5	# 7082	[c=4]movsi_from_tr_unspec/0
	load4! &0 	#AR	# 5679	[c=5]movsi_to_tr_unspec/1
	shift_ru! 3	# 5681	[c=40]*lshrdi3/0
	and! 0xfffff		# 5029	[c=4]*anddi3/0
	store8! &4 	#X3	# 7088	[c=4]movsi_from_tr_unspec/0
	load4! &5 	#X5	# 5583	[c=5]movsi_to_tr_unspec/1
	store8! &3 	#X2	# 5585	[c=4]movdi_from_tr_unspec/0
	push! 0		# 5586	[c=3]movdi_to_tr_unspec/0
	and! 0xffffffff00000000		# 5588	[c=4]*anddi3/0
	load8! &3 	#X2	# 5589	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 5590	[c=4]movdi_from_tr_unspec/0
	load4! &3 	#X3	# 5594	[c=5]movsi_to_tr_unspec/1
	and! 0xfffff		# 5596	[c=4]*anddi3/0
	shift_l! 32	# 4899	[c=8]*ashldi3/0
	store8! &3 	#X2	# 4900	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 5599	[c=5]movdi_to_tr_unspec/1
	and! 0xfff00000ffffffff		# 5601	[c=4]*anddi3/0
	load8! &3 	#X2	# 5602	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 5603	[c=4]movdi_from_tr_unspec/0
	load2! &1 	#X1	# 5607	[c=5]movhi_to_tr_unspec/1
	and! 0x7ff		# 5609	[c=4]*anddi3/0
	shift_l! 52	# 4925	[c=8]*ashldi3/0
	store8! &2 	#X1	# 4926	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 5612	[c=5]movdi_to_tr_unspec/1
	and! 0x800fffffffffffff		# 5614	[c=4]*anddi3/0
	load8! &2 	#X1	# 5615	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 5616	[c=4]movdi_from_tr_unspec/0
	load1! &4 	#X4	# 5620	[c=5]movqi_to_tr_unspec/1
	shift_l! 63	# 5622	[c=8]*ashldi3/0
	store8! &2 	#X1	# 5623	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 5624	[c=5]movdi_to_tr_unspec/1
	and! 0x7fffffffffffffff		# 5626	[c=4]*anddi3/0
	load8! &2 	#X1	# 5627	[c=6]*iordi3/2
	or
	store8! &14	# 7051	[c=4]movdf_from_tr_unspec/0
	jump! .L160.l_o3fd139		# 8734	[c=4]jump
.L44.l_o3fd139:
	# CBRANCH EQ0	# 2746	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L161.l_o3fd139
	# END CBRANCH
	load8! &2 	#X2	# 3364	[c=5]movdi_to_tr_unspec/1
	add! 1		# 3366	[c=4]*adddi/0
	and! 0x7fe		# 3375	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 7327	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L69.l_o3fd139
	# END CBRANCH
	load8! &8 	#X8	# 6096	[c=5]movdi_to_tr_unspec/1
	load8! &8 	#X7	# 6098	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 7316	[c=4]movdi_from_tr_unspec/0
	load8! &9 	#X9	# 7317	[c=5]movdi_to_tr_unspec/1
	load8! &7 	#X6	# 6103	[c=6]*iordi3/2
	or
	store8! &6 	#X5	# 7319	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 7320	[c=12]cbranchsi4_internal
	load4! &2 	#X2
	jump_not_zero! .L70.l_o3fd139
	# END CBRANCH
	# CBRANCH EQ0	# 3412	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_zero! .L162.l_o3fd139
	# END CBRANCH
	# CBRANCH EQ0	# 3465	[c=12]cbranchsi4_internal
	load4! &5 	#X5
	jump_not_zero! .L72.l_o3fd139
	# END CBRANCH
	load8! &1 	#X1	# 3467	[c=5]movdi_to_tr_unspec/1
	and! 0x1fffffff		# 3469	[c=4]*anddi3/0
	store8! &2 	#X1	# 7302	[c=4]movsi_from_tr_unspec/0
	load8! &7 	#X7	# 3476	[c=5]movdi_to_tr_unspec/1
	shift_l! 29	# 3478	[c=8]*ashldi3/0
	store8! &1 	#AR	# 7966	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 7967	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 3491	[c=6]*iordi3/2
	or
	store8! &6 	#X5	# 7305	[c=4]movsi_from_tr_unspec/0
	load4! &7 	#X7	# 6078	[c=5]movsi_to_tr_unspec/1
	shift_ru! 3	# 6080	[c=40]*lshrdi3/0
	store8! &8 	#X7	# 7307	[c=4]movsi_from_tr_unspec/0
.L34.l_o3fd139:
	load8! &7 	#X7	# 4809	[c=5]movdi_to_tr_unspec/1
	and! 0xfffff		# 4811	[c=4]*anddi3/0
	store8! &4 	#X3	# 7099	[c=4]movsi_from_tr_unspec/0
	load2! &2 	#X2	# 5694	[c=5]movhi_to_tr_unspec/1
	and! 0x7ff		# 4824	[c=4]*anddi3/0
	store8! &2 	#X1	# 7101	[c=4]movhi_from_tr_unspec/0
.L177.l_o3fd139:
	load4! &5 	#X5	# 8214	[c=5]movsi_to_tr_unspec/1
	store8! &3 	#X2	# 8216	[c=4]movdi_from_tr_unspec/0
	push! 0		# 8217	[c=3]movdi_to_tr_unspec/0
	and! 0xffffffff00000000		# 8219	[c=4]*anddi3/0
	load8! &3 	#X2	# 8220	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 8221	[c=4]movdi_from_tr_unspec/0
	load4! &3 	#X3	# 8222	[c=5]movsi_to_tr_unspec/1
	and! 0xfffff		# 8224	[c=4]*anddi3/0
	shift_l! 32	# 8226	[c=8]*ashldi3/0
	store8! &3 	#X2	# 8227	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 8228	[c=5]movdi_to_tr_unspec/1
	and! 0xfff00000ffffffff		# 8230	[c=4]*anddi3/0
	load8! &3 	#X2	# 8231	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 8232	[c=4]movdi_from_tr_unspec/0
	load2! &1 	#X1	# 8233	[c=5]movhi_to_tr_unspec/1
	and! 0x7ff		# 8235	[c=4]*anddi3/0
	shift_l! 52	# 8237	[c=8]*ashldi3/0
	store8! &2 	#X1	# 8238	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 8239	[c=5]movdi_to_tr_unspec/1
	and! 0x800fffffffffffff		# 8241	[c=4]*anddi3/0
	load8! &2 	#X1	# 8242	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 8243	[c=4]movdi_from_tr_unspec/0
	load1! &4 	#X4	# 8244	[c=5]movqi_to_tr_unspec/1
	shift_l! 63	# 8246	[c=8]*ashldi3/0
	store8! &2 	#X1	# 8247	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 8248	[c=5]movdi_to_tr_unspec/1
	and! 0x7fffffffffffffff		# 8250	[c=4]*anddi3/0
	load8! &2 	#X1	# 8251	[c=6]*iordi3/2
	or
	store8! &14	# 8252	[c=4]movdf_from_tr_unspec/0
	jump! .L160.l_o3fd139		# 8738	[c=4]jump
.L155.l_o3fd139:
	load8! &5 	#X5	# 6995	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 6997	[c=14]*subdi3/2
	sub
	neg		# 6998	[c=4]*neg_tr
	store8! &1 	#AR	# 7835	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 7836	[c=12]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	jump_zero! .L3.l_o3fd139
	# END CBRANCH
	# CBRANCH EQ0	# 305	[c=12]cbranchsi4_internal
	load4! &5 	#X5
	jump_not_zero! .L4.l_o3fd139
	# END CBRANCH
	load8! &9 	#X9	# 6990	[c=5]movdi_to_tr_unspec/1
	load8! &7 	#X6	# 6992	[c=6]*iordi3/2
	or
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 7834	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L5.l_o3fd139
	# END CBRANCH
	load8! &0 	#AR	# 322	[c=5]movdi_to_tr_unspec/1
	add! -1		# 324	[c=4]*adddi/0
	store8! &4 	#X3	# 7830	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 7831	[c=12]cbranchsi4_internal
	load4! &3 	#X3
	jump_zero! .L163.l_o3fd139
	# END CBRANCH
	# CBRANCH EQ	# 389	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	push! 2047	
	xor	
	jump_zero! .L164.l_o3fd139
	# END CBRANCH
	load4! &3 	#X3	# 5	[c=4]movsi_push_pop
	store8! &1 	#AR
.L9.l_o3fd139:
	# CBRANCH	# 502	[c=12]cbranchsi4_internal
	push! 56	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L12.l_o3fd139
	# END CBRANCH
	# CBRANCH	# 504	[c=12]cbranchsi4_internal
	push! 31	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	jump_zero! .L165.l_o3fd139
	# END CBRANCH
	load8! &0 	#AR	# 656	[c=5]movdi_to_tr_unspec/1
	add! -32		# 658	[c=4]*adddi/0
	store8! &2 	#X1	# 7767	[c=4]movdi_from_tr_unspec/0
	load4! &6 	#X6	# 7768	[c=5]movsi_to_tr_unspec/1
	load4! &2 	#X1	# 7770	[c=5]movsi_to_tr_unspec/1
	store8! &3 	#X1	# 7772	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X1	# 677	[c=42]*lshrdi3/2
	shift_ru
	store8! &4 	#X3	# 7774	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ	# 684	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	push! 32	
	xor	
	jump_zero! .L15.l_o3fd139
	# END CBRANCH
	push! 64		# 690	[c=3]movdi_to_tr_unspec/0
	load8! &1 	#AR	# 692	[c=14]*subdi3/2
	sub
	and! 0xffffffff		# 8201	[c=4]*anddi3/0
	pow2		# 6875	[c=4]*pow_tr
	load8! &7 	#X6	# 6876	[c=6]*muldi3/2
	mult
	load8! &10 	#X9	# 6881	[c=6]*iordi3/2
	or
	store8! &10 	#X9	# 7766	[c=4]movsi_from_tr_unspec/0
.L15.l_o3fd139:
	load4! &9 	#X9	# 6855	[c=5]movsi_to_tr_unspec/1
	neg		# 735	[c=3]*negdi2
	shift_ru! 63	# 740	[c=40]*lshrdi3/0
	and! 0xff		# 8199	[c=4]*anddi3/0
	load8! &4 	#X3	# 6868	[c=6]*iordi3/2
	or
	store8! &2 	#X1	# 7758	[c=4]movsi_from_tr_unspec/0
.L14.l_o3fd139:
	load8! &8 	#X8	# 6836	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 6838	[c=6]*adddi/2
	add
	store8! &4 	#X3	# 7740	[c=4]movsi_from_tr_unspec/0
	push! 1		# 829	[c=4]movqi_push_pop
	store8! &1 	#AR
	# CBRANCH	# 830	[c=12]cbranchsi4_internal
	load4! &3 	#X3
	load4! &9 	#X8
	lt_u	
	not	
	jump_zero! .L16.l_o3fd139
	# END CBRANCH
	push! 0		# 831	[c=4]movqi_push_pop
	store8! &1 	#AR
.L16.l_o3fd139:
	load1! &0 	#AR	# 6829	[c=5]movqi_to_tr_unspec/1
	load8! &8 	#X7	# 8109	[c=6]*adddi/2
	add
	store8! &1 	#AR	# 8110	[c=4]movdi_from_tr_unspec/0
.L17.l_o3fd139:
	load8! &0 	#AR	# 2102	[c=5]movdi_to_tr_unspec/1
	and! 0x800000		# 2104	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 7533	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L37.l_o3fd139
	# END CBRANCH
	load8! &2 	#X2	# 2113	[c=5]movdi_to_tr_unspec/1
	add! 1		# 2115	[c=4]*adddi/0
	store8! &3 	#X2	# 7530	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ	# 2122	[c=12]cbranchsi4_internal
	load4! &2 	#X2
	push! 2047	
	xor	
	jump_zero! .L166.l_o3fd139
	# END CBRANCH
	load8! &0 	#AR	# 4573	[c=5]movdi_to_tr_unspec/1
	and! 0xffffffffff7fffff		# 4575	[c=4]*anddi3/0
	store8! &1 	#AR	# 7124	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 7125	[c=5]movdi_to_tr_unspec/1
	and! 0x1		# 4584	[c=4]*anddi3/0
	store8! &6 	#X5	# 7128	[c=4]movsi_from_tr_unspec/0
	load4! &3 	#X3	# 5738	[c=5]movsi_to_tr_unspec/1
	shift_ru! 1	# 5740	[c=40]*lshrdi3/0
	store8! &2 	#X1	# 7908	[c=4]movdi_from_tr_unspec/0
	load8! &5 	#X5	# 7909	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 4611	[c=6]*iordi3/2
	or
	store8! &4 	#X3	# 7131	[c=4]movsi_from_tr_unspec/0
	load8! &0 	#AR	# 4618	[c=5]movdi_to_tr_unspec/1
	shift_l! 31	# 4620	[c=8]*ashldi3/0
	store8! &2 	#X1	# 7911	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 7912	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 4633	[c=6]*iordi3/2
	or
	store8! &4 	#X3	# 7134	[c=4]movsi_from_tr_unspec/0
	load4! &0 	#AR	# 5751	[c=5]movsi_to_tr_unspec/1
	shift_ru! 1	# 5753	[c=40]*lshrdi3/0
	store8! &1 	#AR	# 5754	[c=4]movdi_from_tr_unspec/0
.L186.l_o3fd139:
	load8! &3 	#X3	# 8255	[c=5]movdi_to_tr_unspec/1
	and! 0x7		# 8257	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 8258	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L93.l_o3fd139
	# END CBRANCH
	jump! .L98.l_o3fd139		# 8745	[c=4]jump
.L45.l_o3fd139:
	# CBRANCH EQ	# 2327	[c=12]cbranchsi4_internal
	load4! &2 	#X2
	push! 2047	
	xor	
	jump_zero! .L167.l_o3fd139
	# END CBRANCH
	load8! &6 	#X6	# 2378	[c=5]movdi_to_tr_unspec/1
	or! 0x800000		# 2380	[c=4]*iordi3/0
	store8! &7 	#X6	# 7495	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 8262	[c=12]cbranchsi4_internal
	push! 56	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	jump_zero! .L168.l_o3fd139
	# END CBRANCH
.L52.l_o3fd139:
	load8! &9 	#X9	# 6307	[c=5]movdi_to_tr_unspec/1
	load8! &7 	#X6	# 6309	[c=6]*iordi3/2
	or
	and! 0xffffffff		# 8168	[c=4]*anddi3/0
	neg		# 2680	[c=3]*negdi2
	shift_ru! 63	# 2685	[c=40]*lshrdi3/0
	and! 0xff		# 8170	[c=4]*anddi3/0
	store8! &2 	#X1	# 7440	[c=4]movsi_from_tr_unspec/0
	jump! .L54.l_o3fd139		# 8749	[c=4]jump
.L161.l_o3fd139:
	load8! &2 	#X2	# 6287	[c=5]movdi_to_tr_unspec/1
	load8! &6 	#X5	# 6289	[c=14]*subdi3/2
	sub
	neg		# 6290	[c=4]*neg_tr
	store8! &1 	#AR	# 7427	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 7428	[c=12]cbranchsi4_internal
	load4! &2 	#X2
	jump_not_zero! .L58.l_o3fd139
	# END CBRANCH
	load8! &8 	#X8	# 6282	[c=5]movdi_to_tr_unspec/1
	load8! &8 	#X7	# 6284	[c=6]*iordi3/2
	or
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 7426	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L169.l_o3fd139
	# END CBRANCH
	load8! &0 	#AR	# 2827	[c=5]movdi_to_tr_unspec/1
	add! -1		# 2829	[c=4]*adddi/0
	store8! &2 	#X1	# 7415	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 7416	[c=12]cbranchsi4_internal
	load4! &1 	#X1
	jump_zero! .L170.l_o3fd139
	# END CBRANCH
	# CBRANCH EQ	# 2894	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	push! 2047	
	xor	
	jump_zero! .L171.l_o3fd139
	# END CBRANCH
	load4! &1 	#X1	# 11	[c=4]movsi_push_pop
	store8! &1 	#AR
.L62.l_o3fd139:
	# CBRANCH	# 3007	[c=12]cbranchsi4_internal
	push! 56	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L64.l_o3fd139
	# END CBRANCH
	# CBRANCH	# 3009	[c=12]cbranchsi4_internal
	push! 31	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L65.l_o3fd139
	# END CBRANCH
	load8! &0 	#AR	# 6173	[c=5]movdi_to_tr_unspec/1
	sub! 32		# 6175	[c=12]*subdi3/0
	neg		# 6176	[c=4]*neg_tr
	store8! &2 	#X1	# 7365	[c=4]movdi_from_tr_unspec/0
	load4! &1 	#X1	# 7366	[c=5]movsi_to_tr_unspec/1
	store8! &3 	#X2	# 6181	[c=4]movdi_from_tr_unspec/0
	load8! &7 	#X7	# 3029	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 3031	[c=10]*ashldi3/2
	shift_l
	store8! &3 	#X2	# 7368	[c=4]movdi_from_tr_unspec/0
	load4! &8 	#X8	# 7369	[c=5]movsi_to_tr_unspec/1
	store8! &5 	#X4	# 6185	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 6186	[c=5]movsi_to_tr_unspec/1
	store8! &4 	#X3	# 6188	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 3048	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 3050	[c=42]*lshrdi3/2
	shift_ru
	load8! &3 	#X2	# 3063	[c=6]*iordi3/2
	or
	store8! &4 	#X3	# 7373	[c=4]movsi_from_tr_unspec/0
	load4! &1 	#X1	# 6192	[c=5]movsi_to_tr_unspec/1
	pow2		# 6195	[c=4]*pow_tr
	load8! &9 	#X8	# 6196	[c=6]*muldi3/2
	mult
	and! 0xffffffff		# 8162	[c=4]*anddi3/0
	neg		# 3091	[c=3]*negdi2
	shift_ru! 63	# 3096	[c=40]*lshrdi3/0
	and! 0xff		# 8164	[c=4]*anddi3/0
	load8! &4 	#X3	# 6211	[c=6]*iordi3/2
	or
	store8! &2 	#X1	# 7384	[c=4]movdi_from_tr_unspec/0
	load4! &7 	#X7	# 7385	[c=5]movsi_to_tr_unspec/1
	load4! &1 	#AR	# 7387	[c=5]movsi_to_tr_unspec/1
	store8! &2 	#AR	# 7389	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#AR	# 3137	[c=42]*lshrdi3/2
	shift_ru
	store8! &1 	#AR	# 7990	[c=4]movdi_from_tr_unspec/0
	load8! &6 	#X6	# 7991	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 3150	[c=14]*subdi3/2
	sub
	store8! &7 	#X6	# 7392	[c=4]movsi_from_tr_unspec/0
.L66.l_o3fd139:
	load8! &1 	#X1	# 6115	[c=5]movdi_to_tr_unspec/1
	load8! &10 	#X9	# 6117	[c=14]*subdi3/2
	sub
	neg		# 6118	[c=4]*neg_tr
	store8! &4 	#X3	# 7330	[c=4]movsi_from_tr_unspec/0
	push! 1		# 3334	[c=4]movqi_push_pop
	store8! &1 	#AR
	# CBRANCH	# 3335	[c=12]cbranchsi4_internal
	load4! &9 	#X9
	load4! &4 	#X3
	lt_u	
	not	
	jump_zero! .L68.l_o3fd139
	# END CBRANCH
	push! 0		# 3336	[c=4]movqi_push_pop
	store8! &1 	#AR
.L68.l_o3fd139:
	load1! &0 	#AR	# 6107	[c=5]movqi_to_tr_unspec/1
	load8! &7 	#X6	# 7977	[c=14]*subdi3/2
	sub
	neg		# 7978	[c=4]*neg_tr
	store8! &1 	#AR	# 7979	[c=4]movdi_from_tr_unspec/0
	load1! &10 	#X10	# 6113	[c=4]movqi_push_pop
	store8! &5 	#X4
	load4! &5 	#X5	# 18	[c=4]movsi_push_pop
	store8! &3 	#X2
	load8! &0 	#AR	# 8265	[c=5]movdi_to_tr_unspec/1
	and! 0x800000		# 8267	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 8268	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L172.l_o3fd139
	# END CBRANCH
.L37.l_o3fd139:
	load8! &3 	#X3	# 5092	[c=5]movdi_to_tr_unspec/1
	and! 0x7		# 5094	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 7065	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L98.l_o3fd139
	# END CBRANCH
.L178.l_o3fd139:
	load4! &3 	#X3	# 5635	[c=5]movsi_to_tr_unspec/1
	shift_ru! 3	# 5637	[c=40]*lshrdi3/0
	store8! &2 	#X1	# 7055	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 7056	[c=5]movdi_to_tr_unspec/1
	shift_l! 29	# 5120	[c=8]*ashldi3/0
	load8! &2 	#X1	# 5133	[c=6]*iordi3/2
	or
	store8! &6 	#X5	# 7060	[c=4]movsi_from_tr_unspec/0
	load4! &0 	#AR	# 5646	[c=5]movsi_to_tr_unspec/1
	shift_ru! 3	# 5648	[c=40]*lshrdi3/0
	store8! &8 	#X7	# 7062	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 4806	[c=12]cbranchsi4_internal
	load4! &2 	#X2
	push! 2047	
	xor	
	push! 1	
	lt_u	
	jump_zero! .L34.l_o3fd139
	# END CBRANCH
.L10.l_o3fd139:
	load8! &5 	#X5	# 5688	[c=5]movdi_to_tr_unspec/1
	load8! &8 	#X7	# 5690	[c=6]*iordi3/2
	or
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 7097	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L173.l_o3fd139
	# END CBRANCH
.L78.l_o3fd139:
	load8! &7 	#X7	# 4851	[c=5]movdi_to_tr_unspec/1
	or! 0x80000		# 4853	[c=4]*iordi3/0
	and! 0xfffff		# 4862	[c=4]*anddi3/0
	store8! &4 	#X3	# 7094	[c=4]movsi_from_tr_unspec/0
	push! 2047		# 39	[c=4]movhi_push_pop
	store8! &2 	#X1
.L187.l_o3fd139:
	load4! &5 	#X5	# 8271	[c=5]movsi_to_tr_unspec/1
	store8! &3 	#X2	# 8273	[c=4]movdi_from_tr_unspec/0
	push! 0		# 8274	[c=3]movdi_to_tr_unspec/0
	and! 0xffffffff00000000		# 8276	[c=4]*anddi3/0
	load8! &3 	#X2	# 8277	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 8278	[c=4]movdi_from_tr_unspec/0
	load4! &3 	#X3	# 8279	[c=5]movsi_to_tr_unspec/1
	and! 0xfffff		# 8281	[c=4]*anddi3/0
	shift_l! 32	# 8283	[c=8]*ashldi3/0
	store8! &3 	#X2	# 8284	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 8285	[c=5]movdi_to_tr_unspec/1
	and! 0xfff00000ffffffff		# 8287	[c=4]*anddi3/0
	load8! &3 	#X2	# 8288	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 8289	[c=4]movdi_from_tr_unspec/0
	load2! &1 	#X1	# 8290	[c=5]movhi_to_tr_unspec/1
	and! 0x7ff		# 8292	[c=4]*anddi3/0
	shift_l! 52	# 8294	[c=8]*ashldi3/0
	store8! &2 	#X1	# 8295	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 8296	[c=5]movdi_to_tr_unspec/1
	and! 0x800fffffffffffff		# 8298	[c=4]*anddi3/0
	load8! &2 	#X1	# 8299	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 8300	[c=4]movdi_from_tr_unspec/0
	load1! &4 	#X4	# 8301	[c=5]movqi_to_tr_unspec/1
	shift_l! 63	# 8303	[c=8]*ashldi3/0
	store8! &2 	#X1	# 8304	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 8305	[c=5]movdi_to_tr_unspec/1
	and! 0x7fffffffffffffff		# 8307	[c=4]*anddi3/0
	load8! &2 	#X1	# 8308	[c=6]*iordi3/2
	or
	store8! &14	# 8309	[c=4]movdf_from_tr_unspec/0
	jump! .L160.l_o3fd139		# 8756	[c=4]jump
.L4.l_o3fd139:
	# CBRANCH EQ	# 440	[c=12]cbranchsi4_internal
	load4! &2 	#X2
	push! 2047	
	xor	
	jump_zero! .L174.l_o3fd139
	# END CBRANCH
	load8! &6 	#X6	# 491	[c=5]movdi_to_tr_unspec/1
	or! 0x800000		# 493	[c=4]*iordi3/0
	store8! &7 	#X6	# 7806	[c=4]movsi_from_tr_unspec/0
	jump! .L9.l_o3fd139		# 8759	[c=4]jump
.L159.l_o3fd139:
	push! 2047		# 43	[c=4]movhi_push_pop
	store8! &2 	#X1
	push! 0		# 44	[c=4]movsi_push_pop
	store8! &4 	#X3
	push! 0		# 45	[c=4]movsi_push_pop
	store8! &6 	#X5
	load4! &5 	#X5	# 8312	[c=5]movsi_to_tr_unspec/1
	store8! &3 	#X2	# 8314	[c=4]movdi_from_tr_unspec/0
	push! 0		# 8315	[c=3]movdi_to_tr_unspec/0
	and! 0xffffffff00000000		# 8317	[c=4]*anddi3/0
	load8! &3 	#X2	# 8318	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 8319	[c=4]movdi_from_tr_unspec/0
	load4! &3 	#X3	# 8320	[c=5]movsi_to_tr_unspec/1
	and! 0xfffff		# 8322	[c=4]*anddi3/0
	shift_l! 32	# 8324	[c=8]*ashldi3/0
	store8! &3 	#X2	# 8325	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 8326	[c=5]movdi_to_tr_unspec/1
	and! 0xfff00000ffffffff		# 8328	[c=4]*anddi3/0
	load8! &3 	#X2	# 8329	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 8330	[c=4]movdi_from_tr_unspec/0
	load2! &1 	#X1	# 8331	[c=5]movhi_to_tr_unspec/1
	and! 0x7ff		# 8333	[c=4]*anddi3/0
	shift_l! 52	# 8335	[c=8]*ashldi3/0
	store8! &2 	#X1	# 8336	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 8337	[c=5]movdi_to_tr_unspec/1
	and! 0x800fffffffffffff		# 8339	[c=4]*anddi3/0
	load8! &2 	#X1	# 8340	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 8341	[c=4]movdi_from_tr_unspec/0
	load1! &4 	#X4	# 8342	[c=5]movqi_to_tr_unspec/1
	shift_l! 63	# 8344	[c=8]*ashldi3/0
	store8! &2 	#X1	# 8345	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 8346	[c=5]movdi_to_tr_unspec/1
	and! 0x7fffffffffffffff		# 8348	[c=4]*anddi3/0
	load8! &2 	#X1	# 8349	[c=6]*iordi3/2
	or
	store8! &14	# 8350	[c=4]movdf_from_tr_unspec/0
	jump! .L160.l_o3fd139		# 8761	[c=4]jump
.L3.l_o3fd139:
	# CBRANCH EQ0	# 859	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L175.l_o3fd139
	# END CBRANCH
	load8! &2 	#X2	# 1477	[c=5]movdi_to_tr_unspec/1
	add! 1		# 1479	[c=4]*adddi/0
	store8! &6 	#X5	# 7628	[c=4]movsi_from_tr_unspec/0
	load8! &5 	#X5	# 1486	[c=5]movdi_to_tr_unspec/1
	and! 0x7fe		# 1488	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 7631	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L31.l_o3fd139
	# END CBRANCH
	load8! &8 	#X8	# 6638	[c=5]movdi_to_tr_unspec/1
	load8! &8 	#X7	# 6640	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 7625	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 7626	[c=12]cbranchsi4_internal
	load4! &2 	#X2
	jump_not_zero! .L32.l_o3fd139
	# END CBRANCH
	# CBRANCH EQ0	# 1512	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_zero! .L176.l_o3fd139
	# END CBRANCH
	load8! &9 	#X9	# 6621	[c=5]movdi_to_tr_unspec/1
	load8! &7 	#X6	# 6623	[c=6]*iordi3/2
	or
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 7617	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L35.l_o3fd139
	# END CBRANCH
	load8! &1 	#X1	# 1578	[c=5]movdi_to_tr_unspec/1
	and! 0x1fffffff		# 1580	[c=4]*anddi3/0
	store8! &1 	#AR	# 7607	[c=4]movdi_from_tr_unspec/0
	load8! &7 	#X7	# 7608	[c=5]movdi_to_tr_unspec/1
	shift_l! 29	# 1589	[c=8]*ashldi3/0
	load8! &1 	#AR	# 1602	[c=6]*iordi3/2
	or
	store8! &6 	#X5	# 7612	[c=4]movsi_from_tr_unspec/0
	load4! &7 	#X7	# 6615	[c=5]movsi_to_tr_unspec/1
	shift_ru! 3	# 6617	[c=40]*lshrdi3/0
	store8! &8 	#X7	# 7614	[c=4]movsi_from_tr_unspec/0
	load8! &7 	#X7	# 8353	[c=5]movdi_to_tr_unspec/1
	and! 0xfffff		# 8355	[c=4]*anddi3/0
	store8! &4 	#X3	# 8357	[c=4]movsi_from_tr_unspec/0
	load2! &2 	#X2	# 8358	[c=5]movhi_to_tr_unspec/1
	and! 0x7ff		# 8360	[c=4]*anddi3/0
	store8! &2 	#X1	# 8362	[c=4]movhi_from_tr_unspec/0
	jump! .L177.l_o3fd139		# 8766	[c=4]jump
.L89.l_o3fd139:
	load8! &2 	#X2	# 4551	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 4553	[c=14]*subdi3/2
	sub
	store8! &3 	#X2	# 7136	[c=4]movsi_from_tr_unspec/0
	load8! &1 	#X1	# 4560	[c=5]movdi_to_tr_unspec/1
	and! 0xffffffffff7fffff		# 4562	[c=4]*anddi3/0
	store8! &1 	#AR	# 4563	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 8365	[c=5]movdi_to_tr_unspec/1
	and! 0x7		# 8367	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 8368	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L98.l_o3fd139
	# END CBRANCH
	jump! .L178.l_o3fd139		# 8770	[c=4]jump
.L85.l_o3fd139:
	load4! &3 	#X3	# 5883	[c=5]movsi_to_tr_unspec/1
	#peep - pop(deadreg)+pusharg	# 5887	[c=0]*peep2_pop_pusharg
	call! __clzdi2		# 4137	[c=0]*call_value_pop_1/0
	store8! &1

	load4! &0 	#AR	# 5891	[c=5]movsi_to_tr_unspec/1
	add! -32		# 5893	[c=4]*adddi/0
	store8! &2 	#X1	# 7208	[c=4]movsi_from_tr_unspec/0
	load8! &1 	#X1	# 4153	[c=5]movdi_to_tr_unspec/1
	add! 24		# 4155	[c=4]*adddi/0
	store8! &1 	#AR	# 7209	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 7210	[c=12]cbranchsi4_internal
	push! 31	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	jump_zero! .L86.l_o3fd139
	# END CBRANCH
	load8! &1 	#X1	# 4242	[c=5]movdi_to_tr_unspec/1
	add! -8		# 4244	[c=4]*adddi/0
	and! 0xffffffff		# 8149	[c=4]*anddi3/0
	pow2		# 5851	[c=4]*pow_tr
	load8! &4 	#X3	# 5852	[c=6]*muldi3/2
	mult
	store8! &2 	#X1	# 4259	[c=4]movdi_from_tr_unspec/0
	push! 0		# 5854	[c=4]movsi_push_pop
	store8! &4 	#X3
	jump! .L88.l_o3fd139		# 8772	[c=4]jump
.L69.l_o3fd139:
	load8! &9 	#X9	# 5946	[c=5]movdi_to_tr_unspec/1
	load8! &9 	#X8	# 5948	[c=14]*subdi3/2
	sub
	neg		# 5949	[c=4]*neg_tr
	store8! &4 	#X3	# 7236	[c=4]movsi_from_tr_unspec/0
	load8! &6 	#X6	# 5953	[c=5]movdi_to_tr_unspec/1
	load8! &8 	#X7	# 5955	[c=14]*subdi3/2
	sub
	neg		# 5956	[c=4]*neg_tr
	store8! &2 	#X1	# 7238	[c=4]movsi_from_tr_unspec/0
	push! 1		# 3960	[c=4]movqi_push_pop
	store8! &1 	#AR
	# CBRANCH	# 3961	[c=12]cbranchsi4_internal
	load4! &8 	#X8
	load4! &4 	#X3
	lt_u	
	jump_zero! .L179.l_o3fd139
	# END CBRANCH
.L81.l_o3fd139:
	load1! &0 	#AR	# 5938	[c=5]movqi_to_tr_unspec/1
	store8! &1 	#AR	# 7930	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 7931	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 3979	[c=14]*subdi3/2
	sub
	store8! &12 	#X11	# 7231	[c=4]movsi_from_tr_unspec/0
	load8! &11 	#X11	# 3986	[c=5]movdi_to_tr_unspec/1
	and! 0x800000		# 3988	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 7234	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L180.l_o3fd139
	# END CBRANCH
	load8! &11 	#X11	# 5914	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 5916	[c=6]*iordi3/2
	or
	store8! &6 	#X5	# 7221	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ0	# 4066	[c=12]cbranchsi4_internal
	load4! &5 	#X5
	jump_not_zero! .L84.l_o3fd139
	# END CBRANCH
	push! 0		# 29	[c=4]movsi_push_pop
	store8! &8 	#X7
	push! 0		# 30	[c=4]movsi_push_pop
	store8! &3 	#X2
	push! 0		# 31	[c=4]movqi_push_pop
	store8! &5 	#X4
	load8! &7 	#X7	# 8371	[c=5]movdi_to_tr_unspec/1
	and! 0xfffff		# 8373	[c=4]*anddi3/0
	store8! &4 	#X3	# 8375	[c=4]movsi_from_tr_unspec/0
	load2! &2 	#X2	# 8376	[c=5]movhi_to_tr_unspec/1
	and! 0x7ff		# 8378	[c=4]*anddi3/0
	store8! &2 	#X1	# 8380	[c=4]movhi_from_tr_unspec/0
	jump! .L177.l_o3fd139		# 8776	[c=4]jump
.L156.l_o3fd139:
	load8! &1 	#X1	# 2160	[c=5]movdi_to_tr_unspec/1
	and! 0x1fffffff		# 2162	[c=4]*anddi3/0
	store8! &3 	#X2	# 7518	[c=4]movsi_from_tr_unspec/0
	load8! &7 	#X7	# 2169	[c=5]movdi_to_tr_unspec/1
	shift_l! 29	# 2171	[c=8]*ashldi3/0
	store8! &2 	#X1	# 8043	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 8044	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 2184	[c=6]*iordi3/2
	or
	store8! &6 	#X5	# 7521	[c=4]movsi_from_tr_unspec/0
	load4! &7 	#X7	# 6461	[c=5]movsi_to_tr_unspec/1
	shift_ru! 3	# 6463	[c=40]*lshrdi3/0
	store8! &8 	#X7	# 7523	[c=4]movsi_from_tr_unspec/0
	load4! &0 	#AR	# 52	[c=4]movsi_push_pop
	store8! &3 	#X2
	# CBRANCH	# 8383	[c=12]cbranchsi4_internal
	load4! &2 	#X2
	push! 2047	
	xor	
	push! 1	
	lt_u	
	jump_zero! .L34.l_o3fd139
	# END CBRANCH
	jump! .L10.l_o3fd139		# 8779	[c=4]jump
.L175.l_o3fd139:
	load8! &2 	#X2	# 6823	[c=5]movdi_to_tr_unspec/1
	load8! &6 	#X5	# 6825	[c=14]*subdi3/2
	sub
	neg		# 6826	[c=4]*neg_tr
	store8! &1 	#AR	# 7736	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 7737	[c=12]cbranchsi4_internal
	load4! &2 	#X2
	jump_not_zero! .L19.l_o3fd139
	# END CBRANCH
	load8! &8 	#X8	# 6818	[c=5]movdi_to_tr_unspec/1
	load8! &8 	#X7	# 6820	[c=6]*iordi3/2
	or
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 7735	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L181.l_o3fd139
	# END CBRANCH
	load8! &0 	#AR	# 940	[c=5]movdi_to_tr_unspec/1
	add! -1		# 942	[c=4]*adddi/0
	store8! &2 	#X1	# 7724	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 7725	[c=12]cbranchsi4_internal
	load4! &1 	#X1
	jump_zero! .L182.l_o3fd139
	# END CBRANCH
	# CBRANCH EQ	# 1007	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	push! 2047	
	xor	
	jump_zero! .L183.l_o3fd139
	# END CBRANCH
	load4! &1 	#X1	# 6	[c=4]movsi_push_pop
	store8! &1 	#AR
.L24.l_o3fd139:
	# CBRANCH	# 1120	[c=12]cbranchsi4_internal
	push! 56	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L26.l_o3fd139
	# END CBRANCH
	# CBRANCH	# 1122	[c=12]cbranchsi4_internal
	push! 31	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L27.l_o3fd139
	# END CBRANCH
	load8! &0 	#AR	# 6708	[c=5]movdi_to_tr_unspec/1
	sub! 32		# 6710	[c=12]*subdi3/0
	neg		# 6711	[c=4]*neg_tr
	store8! &2 	#X1	# 7669	[c=4]movdi_from_tr_unspec/0
	load4! &1 	#X1	# 7670	[c=5]movsi_to_tr_unspec/1
	store8! &3 	#X2	# 6716	[c=4]movdi_from_tr_unspec/0
	load8! &7 	#X7	# 1142	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 1144	[c=10]*ashldi3/2
	shift_l
	store8! &3 	#X2	# 7672	[c=4]movdi_from_tr_unspec/0
	load4! &8 	#X8	# 7673	[c=5]movsi_to_tr_unspec/1
	store8! &11 	#X10	# 6720	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 6721	[c=5]movsi_to_tr_unspec/1
	store8! &4 	#X3	# 6723	[c=4]movdi_from_tr_unspec/0
	load8! &10 	#X10	# 1161	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 1163	[c=42]*lshrdi3/2
	shift_ru
	load8! &3 	#X2	# 1176	[c=6]*iordi3/2
	or
	store8! &4 	#X3	# 7677	[c=4]movsi_from_tr_unspec/0
	load4! &1 	#X1	# 6727	[c=5]movsi_to_tr_unspec/1
	pow2		# 6730	[c=4]*pow_tr
	load8! &9 	#X8	# 6731	[c=6]*muldi3/2
	mult
	and! 0xffffffff		# 8190	[c=4]*anddi3/0
	neg		# 1204	[c=3]*negdi2
	shift_ru! 63	# 1209	[c=40]*lshrdi3/0
	and! 0xff		# 8192	[c=4]*anddi3/0
	load8! &4 	#X3	# 6746	[c=6]*iordi3/2
	or
	store8! &2 	#X1	# 7688	[c=4]movdi_from_tr_unspec/0
	load4! &7 	#X7	# 7689	[c=5]movsi_to_tr_unspec/1
	load4! &1 	#AR	# 7691	[c=5]movsi_to_tr_unspec/1
	store8! &2 	#AR	# 7693	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#AR	# 1250	[c=42]*lshrdi3/2
	shift_ru
	load8! &7 	#X6	# 6758	[c=6]*adddi/2
	add
	store8! &7 	#X6	# 7698	[c=4]movsi_from_tr_unspec/0
.L28.l_o3fd139:
	load8! &9 	#X9	# 6652	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 6654	[c=6]*adddi/2
	add
	store8! &4 	#X3	# 7634	[c=4]movsi_from_tr_unspec/0
	push! 1		# 1447	[c=4]movqi_push_pop
	store8! &1 	#AR
	# CBRANCH	# 1448	[c=12]cbranchsi4_internal
	load4! &3 	#X3
	load4! &10 	#X9
	lt_u	
	not	
	jump_zero! .L30.l_o3fd139
	# END CBRANCH
	push! 0		# 1449	[c=4]movqi_push_pop
	store8! &1 	#AR
.L30.l_o3fd139:
	load1! &0 	#AR	# 6644	[c=5]movqi_to_tr_unspec/1
	load8! &7 	#X6	# 8082	[c=6]*adddi/2
	add
	store8! &1 	#AR	# 8083	[c=4]movdi_from_tr_unspec/0
	load4! &5 	#X5	# 6650	[c=4]movsi_push_pop
	store8! &3 	#X2
	jump! .L17.l_o3fd139		# 8784	[c=4]jump
.L58.l_o3fd139:
	# CBRANCH EQ	# 2945	[c=12]cbranchsi4_internal
	load4! &5 	#X5
	push! 2047	
	xor	
	jump_zero! .L184.l_o3fd139
	# END CBRANCH
	load8! &7 	#X7	# 2996	[c=5]movdi_to_tr_unspec/1
	or! 0x800000		# 2998	[c=4]*iordi3/0
	store8! &8 	#X7	# 7394	[c=4]movsi_from_tr_unspec/0
	jump! .L62.l_o3fd139		# 8787	[c=4]jump
.L12.l_o3fd139:
	load8! &9 	#X9	# 6841	[c=5]movdi_to_tr_unspec/1
	load8! &7 	#X6	# 6843	[c=6]*iordi3/2
	or
	and! 0xffffffff		# 8195	[c=4]*anddi3/0
	neg		# 793	[c=3]*negdi2
	shift_ru! 63	# 798	[c=40]*lshrdi3/0
	and! 0xff		# 8197	[c=4]*anddi3/0
	store8! &2 	#X1	# 7749	[c=4]movsi_from_tr_unspec/0
	jump! .L14.l_o3fd139		# 8789	[c=4]jump
.L90.l_o3fd139:
	load8! &2 	#X2	# 4430	[c=5]movdi_to_tr_unspec/1
	add! -31		# 4432	[c=4]*adddi/0
	store8! &3 	#X2	# 7154	[c=4]movdi_from_tr_unspec/0
	load4! &1 	#X1	# 7155	[c=5]movsi_to_tr_unspec/1
	load4! &3 	#X2	# 7157	[c=5]movsi_to_tr_unspec/1
	store8! &4 	#X2	# 7159	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X2	# 4451	[c=42]*lshrdi3/2
	shift_ru
	store8! &3 	#X2	# 7160	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ	# 7161	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	push! 32	
	xor	
	jump_zero! .L91.l_o3fd139
	# END CBRANCH
	push! 64		# 4464	[c=3]movdi_to_tr_unspec/0
	load8! &1 	#AR	# 4466	[c=14]*subdi3/2
	sub
	and! 0xffffffff		# 8143	[c=4]*anddi3/0
	pow2		# 5779	[c=4]*pow_tr
	load8! &2 	#X1	# 5780	[c=6]*muldi3/2
	mult
	load8! &4 	#X3	# 5785	[c=6]*iordi3/2
	or
	store8! &4 	#X3	# 7153	[c=4]movsi_from_tr_unspec/0
.L91.l_o3fd139:
	load4! &3 	#X3	# 5759	[c=5]movsi_to_tr_unspec/1
	neg		# 4509	[c=3]*negdi2
	shift_ru! 63	# 4514	[c=40]*lshrdi3/0
	and! 0xff		# 8141	[c=4]*anddi3/0
	load8! &3 	#X2	# 5772	[c=6]*iordi3/2
	or
	store8! &4 	#X3	# 7145	[c=4]movsi_from_tr_unspec/0
	push! 0		# 59	[c=4]movsi_push_pop
	store8! &1 	#AR
	push! 0		# 60	[c=4]movsi_push_pop
	store8! &3 	#X2
	load8! &3 	#X3	# 8386	[c=5]movdi_to_tr_unspec/1
	and! 0x7		# 8388	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 8389	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L98.l_o3fd139
	# END CBRANCH
	jump! .L178.l_o3fd139		# 8792	[c=4]jump
.L53.l_o3fd139:
	load8! &0 	#AR	# 2543	[c=5]movdi_to_tr_unspec/1
	add! -32		# 2545	[c=4]*adddi/0
	store8! &2 	#X1	# 7458	[c=4]movdi_from_tr_unspec/0
	load4! &6 	#X6	# 7459	[c=5]movsi_to_tr_unspec/1
	load4! &2 	#X1	# 7461	[c=5]movsi_to_tr_unspec/1
	store8! &3 	#X1	# 7463	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X1	# 2564	[c=42]*lshrdi3/2
	shift_ru
	store8! &4 	#X3	# 7465	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ	# 2571	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	push! 32	
	xor	
	jump_zero! .L55.l_o3fd139
	# END CBRANCH
	push! 64		# 2577	[c=3]movdi_to_tr_unspec/0
	load8! &1 	#AR	# 2579	[c=14]*subdi3/2
	sub
	and! 0xffffffff		# 8174	[c=4]*anddi3/0
	pow2		# 6341	[c=4]*pow_tr
	load8! &7 	#X6	# 6342	[c=6]*muldi3/2
	mult
	load8! &10 	#X9	# 6347	[c=6]*iordi3/2
	or
	store8! &10 	#X9	# 7457	[c=4]movsi_from_tr_unspec/0
.L55.l_o3fd139:
	load4! &9 	#X9	# 6321	[c=5]movsi_to_tr_unspec/1
	neg		# 2622	[c=3]*negdi2
	shift_ru! 63	# 2627	[c=40]*lshrdi3/0
	and! 0xff		# 8172	[c=4]*anddi3/0
	load8! &4 	#X3	# 6334	[c=6]*iordi3/2
	or
	store8! &2 	#X1	# 7449	[c=4]movsi_from_tr_unspec/0
	jump! .L54.l_o3fd139		# 8794	[c=4]jump
.L179.l_o3fd139:
	push! 0		# 3962	[c=4]movqi_push_pop
	store8! &1 	#AR
	jump! .L81.l_o3fd139		# 8796	[c=4]jump
.L19.l_o3fd139:
	# CBRANCH EQ	# 1058	[c=12]cbranchsi4_internal
	load4! &5 	#X5
	push! 2047	
	xor	
	jump_zero! .L185.l_o3fd139
	# END CBRANCH
	load8! &7 	#X7	# 1109	[c=5]movdi_to_tr_unspec/1
	or! 0x800000		# 1111	[c=4]*iordi3/0
	store8! &8 	#X7	# 7700	[c=4]movsi_from_tr_unspec/0
	jump! .L24.l_o3fd139		# 8799	[c=4]jump
.L166.l_o3fd139:
	push! 2047		# 46	[c=4]movhi_push_pop
	store8! &2 	#X1
	push! 0		# 47	[c=4]movsi_push_pop
	store8! &4 	#X3
	push! 0		# 48	[c=4]movsi_push_pop
	store8! &6 	#X5
	load4! &5 	#X5	# 8392	[c=5]movsi_to_tr_unspec/1
	store8! &3 	#X2	# 8394	[c=4]movdi_from_tr_unspec/0
	push! 0		# 8395	[c=3]movdi_to_tr_unspec/0
	and! 0xffffffff00000000		# 8397	[c=4]*anddi3/0
	load8! &3 	#X2	# 8398	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 8399	[c=4]movdi_from_tr_unspec/0
	load4! &3 	#X3	# 8400	[c=5]movsi_to_tr_unspec/1
	and! 0xfffff		# 8402	[c=4]*anddi3/0
	shift_l! 32	# 8404	[c=8]*ashldi3/0
	store8! &3 	#X2	# 8405	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 8406	[c=5]movdi_to_tr_unspec/1
	and! 0xfff00000ffffffff		# 8408	[c=4]*anddi3/0
	load8! &3 	#X2	# 8409	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 8410	[c=4]movdi_from_tr_unspec/0
	load2! &1 	#X1	# 8411	[c=5]movhi_to_tr_unspec/1
	and! 0x7ff		# 8413	[c=4]*anddi3/0
	shift_l! 52	# 8415	[c=8]*ashldi3/0
	store8! &2 	#X1	# 8416	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 8417	[c=5]movdi_to_tr_unspec/1
	and! 0x800fffffffffffff		# 8419	[c=4]*anddi3/0
	load8! &2 	#X1	# 8420	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 8421	[c=4]movdi_from_tr_unspec/0
	load1! &4 	#X4	# 8422	[c=5]movqi_to_tr_unspec/1
	shift_l! 63	# 8424	[c=8]*ashldi3/0
	store8! &2 	#X1	# 8425	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 8426	[c=5]movdi_to_tr_unspec/1
	and! 0x7fffffffffffffff		# 8428	[c=4]*anddi3/0
	load8! &2 	#X1	# 8429	[c=6]*iordi3/2
	or
	store8! &14	# 8430	[c=4]movdf_from_tr_unspec/0
	jump! .L160.l_o3fd139		# 8801	[c=4]jump
.L165.l_o3fd139:
	load8! &0 	#AR	# 6892	[c=5]movdi_to_tr_unspec/1
	sub! 32		# 6894	[c=12]*subdi3/0
	neg		# 6895	[c=4]*neg_tr
	store8! &2 	#X1	# 7775	[c=4]movdi_from_tr_unspec/0
	load4! &1 	#X1	# 7776	[c=5]movsi_to_tr_unspec/1
	store8! &4 	#X3	# 6900	[c=4]movdi_from_tr_unspec/0
	load8! &6 	#X6	# 524	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 526	[c=10]*ashldi3/2
	shift_l
	store8! &4 	#X3	# 7778	[c=4]movdi_from_tr_unspec/0
	load4! &9 	#X9	# 7779	[c=5]movsi_to_tr_unspec/1
	store8! &11 	#X10	# 6904	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 6905	[c=5]movsi_to_tr_unspec/1
	store8! &6 	#X5	# 6907	[c=4]movdi_from_tr_unspec/0
	load8! &10 	#X10	# 543	[c=5]movdi_to_tr_unspec/1
	load8! &6 	#X5	# 545	[c=42]*lshrdi3/2
	shift_ru
	load8! &4 	#X3	# 558	[c=6]*iordi3/2
	or
	store8! &6 	#X5	# 7783	[c=4]movsi_from_tr_unspec/0
	load4! &1 	#X1	# 6911	[c=5]movsi_to_tr_unspec/1
	pow2		# 6914	[c=4]*pow_tr
	load8! &10 	#X9	# 6915	[c=6]*muldi3/2
	mult
	and! 0xffffffff		# 8203	[c=4]*anddi3/0
	neg		# 586	[c=3]*negdi2
	shift_ru! 63	# 591	[c=40]*lshrdi3/0
	and! 0xff		# 8205	[c=4]*anddi3/0
	load8! &6 	#X5	# 6930	[c=6]*iordi3/2
	or
	store8! &2 	#X1	# 7794	[c=4]movdi_from_tr_unspec/0
	load4! &6 	#X6	# 7795	[c=5]movsi_to_tr_unspec/1
	load4! &1 	#AR	# 7797	[c=5]movsi_to_tr_unspec/1
	store8! &2 	#AR	# 7799	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#AR	# 632	[c=42]*lshrdi3/2
	shift_ru
	load8! &8 	#X7	# 6942	[c=6]*adddi/2
	add
	store8! &8 	#X7	# 7804	[c=4]movsi_from_tr_unspec/0
	jump! .L14.l_o3fd139		# 8803	[c=4]jump
.L163.l_o3fd139:
	load8! &9 	#X9	# 6979	[c=5]movdi_to_tr_unspec/1
	load8! &9 	#X8	# 6981	[c=6]*adddi/2
	add
	store8! &4 	#X3	# 7827	[c=4]movsi_from_tr_unspec/0
	load8! &6 	#X6	# 6984	[c=5]movdi_to_tr_unspec/1
	load8! &8 	#X7	# 6986	[c=6]*adddi/2
	add
	store8! &3 	#X2	# 7829	[c=4]movsi_from_tr_unspec/0
	push! 1		# 359	[c=4]movqi_push_pop
	store8! &1 	#AR
	# CBRANCH	# 360	[c=12]cbranchsi4_internal
	load4! &3 	#X3
	load4! &9 	#X8
	lt_u	
	not	
	jump_zero! .L7.l_o3fd139
	# END CBRANCH
	push! 0		# 361	[c=4]movqi_push_pop
	store8! &1 	#AR
.L7.l_o3fd139:
	load1! &0 	#AR	# 6969	[c=5]movqi_to_tr_unspec/1
	load8! &3 	#X2	# 6976	[c=6]*adddi/2
	add
	store8! &1 	#AR	# 379	[c=4]movdi_from_tr_unspec/0
.L8.l_o3fd139:
	load8! &0 	#AR	# 5158	[c=5]movdi_to_tr_unspec/1
	and! 0x800000		# 5160	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 7054	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L111.l_o3fd139
	# END CBRANCH
	push! 1		# 61	[c=4]movsi_push_pop
	store8! &3 	#X2
	load8! &3 	#X3	# 8433	[c=5]movdi_to_tr_unspec/1
	and! 0x7		# 8435	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 8436	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L98.l_o3fd139
	# END CBRANCH
	jump! .L178.l_o3fd139		# 8806	[c=4]jump
.L169.l_o3fd139:
	load8! &3 	#X3	# 2778	[c=5]movdi_to_tr_unspec/1
	and! 0x1fffffff		# 2780	[c=4]*anddi3/0
	store8! &3 	#X2	# 7418	[c=4]movsi_from_tr_unspec/0
	load8! &6 	#X6	# 2787	[c=5]movdi_to_tr_unspec/1
	shift_l! 29	# 2789	[c=8]*ashldi3/0
	store8! &2 	#X1	# 8007	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 8008	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 2802	[c=6]*iordi3/2
	or
	store8! &6 	#X5	# 7421	[c=4]movsi_from_tr_unspec/0
	load4! &6 	#X6	# 6276	[c=5]movsi_to_tr_unspec/1
	shift_ru! 3	# 6278	[c=40]*lshrdi3/0
	store8! &8 	#X7	# 7423	[c=4]movsi_from_tr_unspec/0
	load1! &10 	#X10	# 53	[c=4]movqi_push_pop
	store8! &5 	#X4
	load4! &0 	#AR	# 54	[c=4]movsi_push_pop
	store8! &3 	#X2
	# CBRANCH	# 8439	[c=12]cbranchsi4_internal
	load4! &2 	#X2
	push! 2047	
	xor	
	push! 1	
	lt_u	
	jump_zero! .L34.l_o3fd139
	# END CBRANCH
	jump! .L10.l_o3fd139		# 8809	[c=4]jump
.L32.l_o3fd139:
	# CBRANCH EQ0	# 1703	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L38.l_o3fd139
	# END CBRANCH
	load8! &3 	#X3	# 1705	[c=5]movdi_to_tr_unspec/1
	and! 0x1fffffff		# 1707	[c=4]*anddi3/0
	store8! &2 	#X1	# 7588	[c=4]movsi_from_tr_unspec/0
	load8! &6 	#X6	# 1714	[c=5]movdi_to_tr_unspec/1
	shift_l! 29	# 1716	[c=8]*ashldi3/0
	store8! &1 	#AR	# 8069	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 8070	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 1729	[c=6]*iordi3/2
	or
	store8! &6 	#X5	# 7591	[c=4]movsi_from_tr_unspec/0
	load4! &6 	#X6	# 6581	[c=5]movsi_to_tr_unspec/1
	shift_ru! 3	# 6583	[c=40]*lshrdi3/0
	store8! &8 	#X7	# 7593	[c=4]movsi_from_tr_unspec/0
	load8! &5 	#X5	# 8442	[c=5]movdi_to_tr_unspec/1
	load8! &8 	#X7	# 8444	[c=6]*iordi3/2
	or
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 8445	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L78.l_o3fd139
	# END CBRANCH
	jump! .L173.l_o3fd139		# 8812	[c=4]jump
.L162.l_o3fd139:
	# CBRANCH EQ0	# 3414	[c=12]cbranchsi4_internal
	load4! &5 	#X5
	jump_zero! .L105.l_o3fd139
	# END CBRANCH
	load8! &3 	#X3	# 3416	[c=5]movdi_to_tr_unspec/1
	and! 0x1fffffff		# 3418	[c=4]*anddi3/0
	store8! &1 	#AR	# 7308	[c=4]movdi_from_tr_unspec/0
	load8! &6 	#X6	# 7309	[c=5]movdi_to_tr_unspec/1
	shift_l! 29	# 3427	[c=8]*ashldi3/0
	load8! &1 	#AR	# 3440	[c=6]*iordi3/2
	or
	store8! &6 	#X5	# 7313	[c=4]movsi_from_tr_unspec/0
	load4! &6 	#X6	# 6090	[c=5]movsi_to_tr_unspec/1
	shift_ru! 3	# 6092	[c=40]*lshrdi3/0
	store8! &8 	#X7	# 7315	[c=4]movsi_from_tr_unspec/0
	load1! &10 	#X10	# 32	[c=4]movqi_push_pop
	store8! &5 	#X4
	load8! &7 	#X7	# 8448	[c=5]movdi_to_tr_unspec/1
	and! 0xfffff		# 8450	[c=4]*anddi3/0
	store8! &4 	#X3	# 8452	[c=4]movsi_from_tr_unspec/0
	load2! &2 	#X2	# 8453	[c=5]movhi_to_tr_unspec/1
	and! 0x7ff		# 8455	[c=4]*anddi3/0
	store8! &2 	#X1	# 8457	[c=4]movhi_from_tr_unspec/0
	jump! .L177.l_o3fd139		# 8814	[c=4]jump
.L184.l_o3fd139:
	load8! &3 	#X3	# 2947	[c=5]movdi_to_tr_unspec/1
	and! 0x1fffffff		# 2949	[c=4]*anddi3/0
	store8! &2 	#X1	# 7396	[c=4]movsi_from_tr_unspec/0
	load8! &6 	#X6	# 2956	[c=5]movdi_to_tr_unspec/1
	shift_l! 29	# 2958	[c=8]*ashldi3/0
	store8! &1 	#AR	# 7993	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 7994	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 2971	[c=6]*iordi3/2
	or
	store8! &6 	#X5	# 7399	[c=4]movsi_from_tr_unspec/0
	load4! &6 	#X6	# 6230	[c=5]movsi_to_tr_unspec/1
	shift_ru! 3	# 6232	[c=40]*lshrdi3/0
	store8! &8 	#X7	# 7401	[c=4]movsi_from_tr_unspec/0
	load1! &10 	#X10	# 34	[c=4]movqi_push_pop
	store8! &5 	#X4
	load8! &5 	#X5	# 8460	[c=5]movdi_to_tr_unspec/1
	load8! &8 	#X7	# 8462	[c=6]*iordi3/2
	or
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 8463	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L78.l_o3fd139
	# END CBRANCH
	jump! .L173.l_o3fd139		# 8817	[c=4]jump
.L157.l_o3fd139:
	load8! &9 	#X9	# 6440	[c=5]movdi_to_tr_unspec/1
	load8! &9 	#X8	# 6442	[c=14]*subdi3/2
	sub
	neg		# 6443	[c=4]*neg_tr
	store8! &4 	#X3	# 7512	[c=4]movsi_from_tr_unspec/0
	load8! &6 	#X6	# 6447	[c=5]movdi_to_tr_unspec/1
	load8! &8 	#X7	# 6449	[c=14]*subdi3/2
	sub
	neg		# 6450	[c=4]*neg_tr
	store8! &2 	#X1	# 7514	[c=4]movsi_from_tr_unspec/0
	push! 1		# 2246	[c=4]movqi_push_pop
	store8! &1 	#AR
	# CBRANCH	# 2247	[c=12]cbranchsi4_internal
	load4! &8 	#X8
	load4! &4 	#X3
	lt_u	
	not	
	jump_zero! .L48.l_o3fd139
	# END CBRANCH
	push! 0		# 2248	[c=4]movqi_push_pop
	store8! &1 	#AR
.L48.l_o3fd139:
	load1! &0 	#AR	# 6432	[c=5]movqi_to_tr_unspec/1
	load8! &2 	#X1	# 8040	[c=14]*subdi3/2
	sub
	neg		# 8041	[c=4]*neg_tr
	store8! &1 	#AR	# 8042	[c=4]movdi_from_tr_unspec/0
	push! 1		# 6438	[c=4]movsi_push_pop
	store8! &3 	#X2
	jump! .L49.l_o3fd139		# 8819	[c=4]jump
.L167.l_o3fd139:
	load8! &1 	#X1	# 2329	[c=5]movdi_to_tr_unspec/1
	and! 0x1fffffff		# 2331	[c=4]*anddi3/0
	store8! &2 	#X1	# 7497	[c=4]movsi_from_tr_unspec/0
	load8! &7 	#X7	# 2338	[c=5]movdi_to_tr_unspec/1
	shift_l! 29	# 2340	[c=8]*ashldi3/0
	store8! &1 	#AR	# 8030	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 8031	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 2353	[c=6]*iordi3/2
	or
	store8! &6 	#X5	# 7500	[c=4]movsi_from_tr_unspec/0
	load4! &7 	#X7	# 6415	[c=5]movsi_to_tr_unspec/1
	shift_ru! 3	# 6417	[c=40]*lshrdi3/0
	store8! &8 	#X7	# 7502	[c=4]movsi_from_tr_unspec/0
	load8! &5 	#X5	# 8466	[c=5]movdi_to_tr_unspec/1
	load8! &8 	#X7	# 8468	[c=6]*iordi3/2
	or
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 8469	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L78.l_o3fd139
	# END CBRANCH
	jump! .L173.l_o3fd139		# 8822	[c=4]jump
.L5.l_o3fd139:
	load8! &1 	#X1	# 5040	[c=5]movdi_to_tr_unspec/1
	and! 0x1fffffff		# 5042	[c=4]*anddi3/0
	store8! &2 	#X1	# 7066	[c=4]movdi_from_tr_unspec/0
	load8! &7 	#X7	# 7067	[c=5]movdi_to_tr_unspec/1
	shift_l! 29	# 5051	[c=8]*ashldi3/0
	load8! &2 	#X1	# 5064	[c=6]*iordi3/2
	or
	store8! &6 	#X5	# 7071	[c=4]movsi_from_tr_unspec/0
	load4! &7 	#X7	# 5659	[c=5]movsi_to_tr_unspec/1
	shift_ru! 3	# 5661	[c=40]*lshrdi3/0
	store8! &8 	#X7	# 7073	[c=4]movsi_from_tr_unspec/0
	load4! &0 	#AR	# 55	[c=4]movsi_push_pop
	store8! &3 	#X2
	# CBRANCH	# 8472	[c=12]cbranchsi4_internal
	load4! &2 	#X2
	push! 2047	
	xor	
	push! 1	
	lt_u	
	jump_zero! .L34.l_o3fd139
	# END CBRANCH
	jump! .L10.l_o3fd139		# 8825	[c=4]jump
.L64.l_o3fd139:
	load8! &8 	#X8	# 6122	[c=5]movdi_to_tr_unspec/1
	load8! &8 	#X7	# 6124	[c=6]*iordi3/2
	or
	and! 0xffffffff		# 8154	[c=4]*anddi3/0
	neg		# 3298	[c=3]*negdi2
	shift_ru! 63	# 3303	[c=40]*lshrdi3/0
	and! 0xff		# 8156	[c=4]*anddi3/0
	store8! &2 	#X1	# 7339	[c=4]movsi_from_tr_unspec/0
	jump! .L66.l_o3fd139		# 8827	[c=4]jump
.L158.l_o3fd139:
	load8! &1 	#X1	# 2278	[c=5]movdi_to_tr_unspec/1
	and! 0x1fffffff		# 2280	[c=4]*anddi3/0
	store8! &2 	#X1	# 7504	[c=4]movsi_from_tr_unspec/0
	load8! &7 	#X7	# 2287	[c=5]movdi_to_tr_unspec/1
	shift_l! 29	# 2289	[c=8]*ashldi3/0
	store8! &1 	#AR	# 8033	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 8034	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 2302	[c=6]*iordi3/2
	or
	store8! &6 	#X5	# 7507	[c=4]movsi_from_tr_unspec/0
	load4! &7 	#X7	# 6427	[c=5]movsi_to_tr_unspec/1
	shift_ru! 3	# 6429	[c=40]*lshrdi3/0
	store8! &8 	#X7	# 7509	[c=4]movsi_from_tr_unspec/0
	load8! &5 	#X5	# 8475	[c=5]movdi_to_tr_unspec/1
	load8! &8 	#X7	# 8477	[c=6]*iordi3/2
	or
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 8478	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L78.l_o3fd139
	# END CBRANCH
	jump! .L173.l_o3fd139		# 8830	[c=4]jump
.L31.l_o3fd139:
	# CBRANCH EQ	# 1994	[c=12]cbranchsi4_internal
	load4! &5 	#X5
	push! 2047	
	xor	
	jump_zero! .L101.l_o3fd139
	# END CBRANCH
	load8! &9 	#X9	# 6512	[c=5]movdi_to_tr_unspec/1
	load8! &9 	#X8	# 6514	[c=6]*adddi/2
	add
	store8! &2 	#X1	# 7546	[c=4]movsi_from_tr_unspec/0
	push! 1		# 2009	[c=4]movqi_push_pop
	store8! &1 	#AR
	# CBRANCH	# 2010	[c=12]cbranchsi4_internal
	load4! &1 	#X1
	load4! &9 	#X8
	lt_u	
	not	
	jump_zero! .L42.l_o3fd139
	# END CBRANCH
	push! 0		# 2011	[c=4]movqi_push_pop
	store8! &1 	#AR
.L42.l_o3fd139:
	load1! &0 	#AR	# 6480	[c=5]movqi_to_tr_unspec/1
	store8! &3 	#X2	# 7535	[c=4]movsi_from_tr_unspec/0
	load8! &6 	#X6	# 6485	[c=5]movdi_to_tr_unspec/1
	load8! &8 	#X7	# 6487	[c=6]*adddi/2
	add
	load8! &3 	#X2	# 8048	[c=6]*adddi/2
	add
	store8! &1 	#AR	# 8049	[c=4]movdi_from_tr_unspec/0
	load4! &1 	#X1	# 7538	[c=5]movsi_to_tr_unspec/1
	shift_ru! 1	# 6496	[c=40]*lshrdi3/0
	store8! &3 	#X2	# 7541	[c=4]movsi_from_tr_unspec/0
	load8! &0 	#AR	# 2062	[c=5]movdi_to_tr_unspec/1
	shift_l! 31	# 2064	[c=8]*ashldi3/0
	store8! &2 	#X1	# 8050	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 8051	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 2077	[c=6]*iordi3/2
	or
	store8! &4 	#X3	# 7544	[c=4]movsi_from_tr_unspec/0
	load4! &0 	#AR	# 6505	[c=5]movsi_to_tr_unspec/1
	shift_ru! 1	# 6507	[c=40]*lshrdi3/0
	store8! &1 	#AR	# 6508	[c=4]movdi_from_tr_unspec/0
	load4! &5 	#X5	# 6510	[c=4]movsi_push_pop
	store8! &3 	#X2
	load8! &3 	#X3	# 8481	[c=5]movdi_to_tr_unspec/1
	and! 0x7		# 8483	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 8484	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L98.l_o3fd139
	# END CBRANCH
	jump! .L178.l_o3fd139		# 8833	[c=4]jump
.L180.l_o3fd139:
	load8! &8 	#X8	# 5925	[c=5]movdi_to_tr_unspec/1
	load8! &10 	#X9	# 5927	[c=14]*subdi3/2
	sub
	neg		# 5928	[c=4]*neg_tr
	store8! &4 	#X3	# 7226	[c=4]movsi_from_tr_unspec/0
	load8! &7 	#X7	# 5932	[c=5]movdi_to_tr_unspec/1
	load8! &7 	#X6	# 5934	[c=14]*subdi3/2
	sub
	neg		# 5935	[c=4]*neg_tr
	store8! &2 	#X1	# 7228	[c=4]movsi_from_tr_unspec/0
	push! 1		# 4023	[c=4]movqi_push_pop
	store8! &1 	#AR
	# CBRANCH	# 4024	[c=12]cbranchsi4_internal
	load4! &9 	#X9
	load4! &4 	#X3
	lt_u	
	not	
	jump_zero! .L83.l_o3fd139
	# END CBRANCH
	push! 0		# 4025	[c=4]movqi_push_pop
	store8! &1 	#AR
.L83.l_o3fd139:
	load1! &0 	#AR	# 5918	[c=5]movqi_to_tr_unspec/1
	store8! &1 	#AR	# 7927	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 7928	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 4042	[c=14]*subdi3/2
	sub
	store8! &12 	#X11	# 7224	[c=4]movsi_from_tr_unspec/0
	load1! &10 	#X10	# 19	[c=4]movqi_push_pop
	store8! &5 	#X4
	jump! .L84.l_o3fd139		# 8835	[c=4]jump
.L70.l_o3fd139:
	# CBRANCH EQ0	# 3654	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L77.l_o3fd139
	# END CBRANCH
	# CBRANCH EQ0	# 3656	[c=12]cbranchsi4_internal
	load4! &5 	#X5
	jump_zero! .L107.l_o3fd139
	# END CBRANCH
	load8! &3 	#X3	# 3658	[c=5]movdi_to_tr_unspec/1
	and! 0x1fffffff		# 3660	[c=4]*anddi3/0
	store8! &2 	#X1	# 7277	[c=4]movsi_from_tr_unspec/0
	load8! &6 	#X6	# 3667	[c=5]movdi_to_tr_unspec/1
	shift_l! 29	# 3669	[c=8]*ashldi3/0
	store8! &1 	#AR	# 7949	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 7950	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 3682	[c=6]*iordi3/2
	or
	store8! &6 	#X5	# 7280	[c=4]movsi_from_tr_unspec/0
	load4! &6 	#X6	# 6019	[c=5]movsi_to_tr_unspec/1
	shift_ru! 3	# 6021	[c=40]*lshrdi3/0
	store8! &8 	#X7	# 7282	[c=4]movsi_from_tr_unspec/0
	load1! &10 	#X10	# 35	[c=4]movqi_push_pop
	store8! &5 	#X4
	load8! &5 	#X5	# 8487	[c=5]movdi_to_tr_unspec/1
	load8! &8 	#X7	# 8489	[c=6]*iordi3/2
	or
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 8490	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L78.l_o3fd139
	# END CBRANCH
	jump! .L173.l_o3fd139		# 8838	[c=4]jump
.L174.l_o3fd139:
	load8! &1 	#X1	# 442	[c=5]movdi_to_tr_unspec/1
	and! 0x1fffffff		# 444	[c=4]*anddi3/0
	store8! &1 	#AR	# 7807	[c=4]movdi_from_tr_unspec/0
	load8! &7 	#X7	# 7808	[c=5]movdi_to_tr_unspec/1
	shift_l! 29	# 453	[c=8]*ashldi3/0
	load8! &1 	#AR	# 466	[c=6]*iordi3/2
	or
	store8! &6 	#X5	# 7812	[c=4]movsi_from_tr_unspec/0
	load4! &7 	#X7	# 6952	[c=5]movsi_to_tr_unspec/1
	shift_ru! 3	# 6954	[c=40]*lshrdi3/0
	store8! &8 	#X7	# 7814	[c=4]movsi_from_tr_unspec/0
	load8! &5 	#X5	# 8493	[c=5]movdi_to_tr_unspec/1
	load8! &8 	#X7	# 8495	[c=6]*iordi3/2
	or
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 8496	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L78.l_o3fd139
	# END CBRANCH
	jump! .L173.l_o3fd139		# 8841	[c=4]jump
.L72.l_o3fd139:
	load8! &9 	#X9	# 6058	[c=5]movdi_to_tr_unspec/1
	load8! &9 	#X8	# 6060	[c=14]*subdi3/2
	sub
	neg		# 6061	[c=4]*neg_tr
	store8! &4 	#X3	# 7298	[c=4]movsi_from_tr_unspec/0
	load8! &6 	#X6	# 6065	[c=5]movdi_to_tr_unspec/1
	load8! &8 	#X7	# 6067	[c=14]*subdi3/2
	sub
	neg		# 6068	[c=4]*neg_tr
	store8! &2 	#X1	# 7300	[c=4]movsi_from_tr_unspec/0
	push! 1		# 3542	[c=4]movqi_push_pop
	store8! &1 	#AR
	# CBRANCH	# 3543	[c=12]cbranchsi4_internal
	load4! &8 	#X8
	load4! &4 	#X3
	lt_u	
	not	
	jump_zero! .L73.l_o3fd139
	# END CBRANCH
	push! 0		# 3544	[c=4]movqi_push_pop
	store8! &1 	#AR
.L73.l_o3fd139:
	load1! &0 	#AR	# 6050	[c=5]movqi_to_tr_unspec/1
	load8! &2 	#X1	# 7963	[c=14]*subdi3/2
	sub
	neg		# 7964	[c=4]*neg_tr
	store8! &1 	#AR	# 7965	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 7292	[c=5]movdi_to_tr_unspec/1
	and! 0x800000		# 3570	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 7296	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L74.l_o3fd139
	# END CBRANCH
	load8! &8 	#X8	# 6037	[c=5]movdi_to_tr_unspec/1
	load8! &10 	#X9	# 6039	[c=14]*subdi3/2
	sub
	neg		# 6040	[c=4]*neg_tr
	store8! &4 	#X3	# 7287	[c=4]movsi_from_tr_unspec/0
	load8! &7 	#X7	# 6044	[c=5]movdi_to_tr_unspec/1
	load8! &7 	#X6	# 6046	[c=14]*subdi3/2
	sub
	neg		# 6047	[c=4]*neg_tr
	store8! &2 	#X1	# 7289	[c=4]movsi_from_tr_unspec/0
	push! 1		# 3605	[c=4]movqi_push_pop
	store8! &1 	#AR
	# CBRANCH	# 3606	[c=12]cbranchsi4_internal
	load4! &9 	#X9
	load4! &4 	#X3
	lt_u	
	not	
	jump_zero! .L75.l_o3fd139
	# END CBRANCH
	push! 0		# 3607	[c=4]movqi_push_pop
	store8! &1 	#AR
.L75.l_o3fd139:
	load1! &0 	#AR	# 6029	[c=5]movqi_to_tr_unspec/1
	load8! &2 	#X1	# 7956	[c=14]*subdi3/2
	sub
	neg		# 7957	[c=4]*neg_tr
	store8! &1 	#AR	# 7958	[c=4]movdi_from_tr_unspec/0
	load1! &10 	#X10	# 6035	[c=4]movqi_push_pop
	store8! &5 	#X4
	load8! &3 	#X3	# 8499	[c=5]movdi_to_tr_unspec/1
	and! 0x7		# 8501	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 8502	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L93.l_o3fd139
	# END CBRANCH
	jump! .L98.l_o3fd139		# 8844	[c=4]jump
.L26.l_o3fd139:
	load8! &8 	#X8	# 6657	[c=5]movdi_to_tr_unspec/1
	load8! &8 	#X7	# 6659	[c=6]*iordi3/2
	or
	and! 0xffffffff		# 8182	[c=4]*anddi3/0
	neg		# 1411	[c=3]*negdi2
	shift_ru! 63	# 1416	[c=40]*lshrdi3/0
	and! 0xff		# 8184	[c=4]*anddi3/0
	store8! &2 	#X1	# 7643	[c=4]movsi_from_tr_unspec/0
	jump! .L28.l_o3fd139		# 8846	[c=4]jump
.L65.l_o3fd139:
	load8! &0 	#AR	# 3161	[c=5]movdi_to_tr_unspec/1
	add! -32		# 3163	[c=4]*adddi/0
	store8! &2 	#X1	# 7357	[c=4]movdi_from_tr_unspec/0
	load4! &7 	#X7	# 7358	[c=5]movsi_to_tr_unspec/1
	load4! &2 	#X1	# 7360	[c=5]movsi_to_tr_unspec/1
	store8! &3 	#X1	# 7362	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X1	# 3182	[c=42]*lshrdi3/2
	shift_ru
	store8! &3 	#X2	# 7364	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ	# 3189	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	push! 32	
	xor	
	jump_zero! .L67.l_o3fd139
	# END CBRANCH
	push! 64		# 3195	[c=3]movdi_to_tr_unspec/0
	load8! &1 	#AR	# 3197	[c=14]*subdi3/2
	sub
	and! 0xffffffff		# 8160	[c=4]*anddi3/0
	pow2		# 6156	[c=4]*pow_tr
	load8! &8 	#X7	# 6157	[c=6]*muldi3/2
	mult
	load8! &9 	#X8	# 6162	[c=6]*iordi3/2
	or
	store8! &9 	#X8	# 7356	[c=4]movsi_from_tr_unspec/0
.L67.l_o3fd139:
	load4! &8 	#X8	# 6136	[c=5]movsi_to_tr_unspec/1
	neg		# 3240	[c=3]*negdi2
	shift_ru! 63	# 3245	[c=40]*lshrdi3/0
	and! 0xff		# 8158	[c=4]*anddi3/0
	load8! &3 	#X2	# 6149	[c=6]*iordi3/2
	or
	store8! &2 	#X1	# 7348	[c=4]movsi_from_tr_unspec/0
	jump! .L66.l_o3fd139		# 8848	[c=4]jump
.L164.l_o3fd139:
	load8! &1 	#X1	# 391	[c=5]movdi_to_tr_unspec/1
	and! 0x1fffffff		# 393	[c=4]*anddi3/0
	store8! &1 	#AR	# 7815	[c=4]movdi_from_tr_unspec/0
	load8! &7 	#X7	# 7816	[c=5]movdi_to_tr_unspec/1
	shift_l! 29	# 402	[c=8]*ashldi3/0
	load8! &1 	#AR	# 415	[c=6]*iordi3/2
	or
	store8! &6 	#X5	# 7820	[c=4]movsi_from_tr_unspec/0
	load4! &7 	#X7	# 6964	[c=5]movsi_to_tr_unspec/1
	shift_ru! 3	# 6966	[c=40]*lshrdi3/0
	store8! &8 	#X7	# 7822	[c=4]movsi_from_tr_unspec/0
	load8! &5 	#X5	# 8506	[c=5]movdi_to_tr_unspec/1
	load8! &8 	#X7	# 8508	[c=6]*iordi3/2
	or
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 8509	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L78.l_o3fd139
	# END CBRANCH
	jump! .L173.l_o3fd139		# 8851	[c=4]jump
.L111.l_o3fd139:
	push! 2		# 21	[c=4]movsi_push_pop
	store8! &3 	#X2
	load8! &0 	#AR	# 8512	[c=5]movdi_to_tr_unspec/1
	and! 0xffffffffff7fffff		# 8514	[c=4]*anddi3/0
	store8! &1 	#AR	# 8515	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 8516	[c=5]movdi_to_tr_unspec/1
	and! 0x1		# 8518	[c=4]*anddi3/0
	store8! &6 	#X5	# 8520	[c=4]movsi_from_tr_unspec/0
	load4! &3 	#X3	# 8521	[c=5]movsi_to_tr_unspec/1
	shift_ru! 1	# 8523	[c=40]*lshrdi3/0
	store8! &2 	#X1	# 8524	[c=4]movdi_from_tr_unspec/0
	load8! &5 	#X5	# 8525	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 8527	[c=6]*iordi3/2
	or
	store8! &4 	#X3	# 8529	[c=4]movsi_from_tr_unspec/0
	load8! &0 	#AR	# 8530	[c=5]movdi_to_tr_unspec/1
	shift_l! 31	# 8532	[c=8]*ashldi3/0
	store8! &2 	#X1	# 8533	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 8534	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 8536	[c=6]*iordi3/2
	or
	store8! &4 	#X3	# 8538	[c=4]movsi_from_tr_unspec/0
	load4! &0 	#AR	# 8539	[c=5]movsi_to_tr_unspec/1
	shift_ru! 1	# 8541	[c=40]*lshrdi3/0
	store8! &1 	#AR	# 8542	[c=4]movdi_from_tr_unspec/0
	jump! .L186.l_o3fd139		# 8854	[c=4]jump
.L77.l_o3fd139:
	load8! &7 	#X7	# 3707	[c=5]movdi_to_tr_unspec/1
	shift_l! 29	# 3709	[c=8]*ashldi3/0
	store8! &3 	#X2	# 7273	[c=4]movsi_from_tr_unspec/0
	load4! &7 	#X7	# 6007	[c=5]movsi_to_tr_unspec/1
	shift_ru! 3	# 6009	[c=40]*lshrdi3/0
	store8! &8 	#X7	# 7275	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ0	# 3730	[c=12]cbranchsi4_internal
	load4! &5 	#X5
	jump_not_zero! .L79.l_o3fd139
	# END CBRANCH
	load8! &1 	#X1	# 3732	[c=5]movdi_to_tr_unspec/1
	and! 0x1fffffff		# 3734	[c=4]*anddi3/0
	store8! &1 	#AR	# 7946	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 7947	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 3747	[c=6]*iordi3/2
	or
	store8! &6 	#X5	# 7271	[c=4]movsi_from_tr_unspec/0
	load8! &5 	#X5	# 8546	[c=5]movdi_to_tr_unspec/1
	load8! &8 	#X7	# 8548	[c=6]*iordi3/2
	or
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 8549	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L78.l_o3fd139
	# END CBRANCH
	jump! .L173.l_o3fd139		# 8857	[c=4]jump
.L95.l_o3fd139:
	load4! &3 	#X3	# 5700	[c=5]movsi_to_tr_unspec/1
	shift_ru! 3	# 5702	[c=40]*lshrdi3/0
	store8! &2 	#X1	# 7102	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 7103	[c=5]movdi_to_tr_unspec/1
	shift_l! 29	# 4771	[c=8]*ashldi3/0
	load8! &2 	#X1	# 4784	[c=6]*iordi3/2
	or
	store8! &6 	#X5	# 7107	[c=4]movsi_from_tr_unspec/0
	load4! &0 	#AR	# 5711	[c=5]movsi_to_tr_unspec/1
	shift_ru! 3	# 5713	[c=40]*lshrdi3/0
	store8! &8 	#X7	# 7109	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 8552	[c=12]cbranchsi4_internal
	load4! &2 	#X2
	push! 2047	
	xor	
	push! 1	
	lt_u	
	jump_zero! .L34.l_o3fd139
	# END CBRANCH
	jump! .L10.l_o3fd139		# 8860	[c=4]jump
.L170.l_o3fd139:
	load8! &8 	#X8	# 6255	[c=5]movdi_to_tr_unspec/1
	load8! &10 	#X9	# 6257	[c=14]*subdi3/2
	sub
	neg		# 6258	[c=4]*neg_tr
	store8! &4 	#X3	# 7412	[c=4]movsi_from_tr_unspec/0
	load8! &7 	#X7	# 6262	[c=5]movdi_to_tr_unspec/1
	load8! &7 	#X6	# 6264	[c=14]*subdi3/2
	sub
	neg		# 6265	[c=4]*neg_tr
	store8! &2 	#X1	# 7414	[c=4]movsi_from_tr_unspec/0
	push! 1		# 2864	[c=4]movqi_push_pop
	store8! &1 	#AR
	# CBRANCH	# 2865	[c=12]cbranchsi4_internal
	load4! &9 	#X9
	load4! &4 	#X3
	lt_u	
	not	
	jump_zero! .L61.l_o3fd139
	# END CBRANCH
	push! 0		# 2866	[c=4]movqi_push_pop
	store8! &1 	#AR
.L61.l_o3fd139:
	load1! &0 	#AR	# 6247	[c=5]movqi_to_tr_unspec/1
	load8! &2 	#X1	# 8004	[c=14]*subdi3/2
	sub
	neg		# 8005	[c=4]*neg_tr
	store8! &1 	#AR	# 8006	[c=4]movdi_from_tr_unspec/0
	load1! &10 	#X10	# 6253	[c=4]movqi_push_pop
	store8! &5 	#X4
	push! 1		# 16	[c=4]movsi_push_pop
	store8! &3 	#X2
	jump! .L49.l_o3fd139		# 8862	[c=4]jump
.L176.l_o3fd139:
	load8! &3 	#X3	# 1514	[c=5]movdi_to_tr_unspec/1
	and! 0x1fffffff		# 1516	[c=4]*anddi3/0
	store8! &2 	#X1	# 7619	[c=4]movsi_from_tr_unspec/0
	load8! &6 	#X6	# 1523	[c=5]movdi_to_tr_unspec/1
	shift_l! 29	# 1525	[c=8]*ashldi3/0
	store8! &1 	#AR	# 8078	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 8079	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 1538	[c=6]*iordi3/2
	or
	store8! &6 	#X5	# 7622	[c=4]movsi_from_tr_unspec/0
	load4! &6 	#X6	# 6632	[c=5]movsi_to_tr_unspec/1
	shift_ru! 3	# 6634	[c=40]*lshrdi3/0
	store8! &8 	#X7	# 7624	[c=4]movsi_from_tr_unspec/0
	load8! &7 	#X7	# 8555	[c=5]movdi_to_tr_unspec/1
	and! 0xfffff		# 8557	[c=4]*anddi3/0
	store8! &4 	#X3	# 8559	[c=4]movsi_from_tr_unspec/0
	load2! &2 	#X2	# 8560	[c=5]movhi_to_tr_unspec/1
	and! 0x7ff		# 8562	[c=4]*anddi3/0
	store8! &2 	#X1	# 8564	[c=4]movhi_from_tr_unspec/0
	jump! .L177.l_o3fd139		# 8864	[c=4]jump
.L35.l_o3fd139:
	load8! &9 	#X9	# 6599	[c=5]movdi_to_tr_unspec/1
	load8! &9 	#X8	# 6601	[c=6]*adddi/2
	add
	store8! &4 	#X3	# 7604	[c=4]movsi_from_tr_unspec/0
	load8! &6 	#X6	# 6604	[c=5]movdi_to_tr_unspec/1
	load8! &8 	#X7	# 6606	[c=6]*adddi/2
	add
	store8! &6 	#X5	# 7606	[c=4]movsi_from_tr_unspec/0
	push! 1		# 1653	[c=4]movqi_push_pop
	store8! &1 	#AR
	# CBRANCH	# 1654	[c=12]cbranchsi4_internal
	load4! &3 	#X3
	load4! &9 	#X8
	lt_u	
	not	
	jump_zero! .L36.l_o3fd139
	# END CBRANCH
	push! 0		# 1655	[c=4]movqi_push_pop
	store8! &1 	#AR
.L36.l_o3fd139:
	load1! &0 	#AR	# 6588	[c=5]movqi_to_tr_unspec/1
	load8! &6 	#X5	# 6595	[c=6]*adddi/2
	add
	store8! &1 	#AR	# 7597	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 7598	[c=5]movdi_to_tr_unspec/1
	and! 0x800000		# 1681	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 7602	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L37.l_o3fd139
	# END CBRANCH
	load8! &0 	#AR	# 1690	[c=5]movdi_to_tr_unspec/1
	and! 0xffffffffff7fffff		# 1692	[c=4]*anddi3/0
	store8! &1 	#AR	# 1693	[c=4]movdi_from_tr_unspec/0
	push! 1		# 6587	[c=4]movsi_push_pop
	store8! &3 	#X2
	load8! &3 	#X3	# 8567	[c=5]movdi_to_tr_unspec/1
	and! 0x7		# 8569	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 8570	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L98.l_o3fd139
	# END CBRANCH
	jump! .L178.l_o3fd139		# 8867	[c=4]jump
.L181.l_o3fd139:
	load8! &3 	#X3	# 891	[c=5]movdi_to_tr_unspec/1
	and! 0x1fffffff		# 893	[c=4]*anddi3/0
	store8! &3 	#X2	# 7727	[c=4]movsi_from_tr_unspec/0
	load8! &6 	#X6	# 900	[c=5]movdi_to_tr_unspec/1
	shift_l! 29	# 902	[c=8]*ashldi3/0
	store8! &2 	#X1	# 8105	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 8106	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 915	[c=6]*iordi3/2
	or
	store8! &6 	#X5	# 7730	[c=4]movsi_from_tr_unspec/0
	load4! &6 	#X6	# 6812	[c=5]movsi_to_tr_unspec/1
	shift_ru! 3	# 6814	[c=40]*lshrdi3/0
	store8! &8 	#X7	# 7732	[c=4]movsi_from_tr_unspec/0
	load4! &0 	#AR	# 56	[c=4]movsi_push_pop
	store8! &3 	#X2
	# CBRANCH	# 8573	[c=12]cbranchsi4_internal
	load4! &2 	#X2
	push! 2047	
	xor	
	push! 1	
	lt_u	
	jump_zero! .L34.l_o3fd139
	# END CBRANCH
	jump! .L10.l_o3fd139		# 8870	[c=4]jump
.L101.l_o3fd139:
	push! 2047		# 40	[c=4]movhi_push_pop
	store8! &2 	#X1
	push! 0		# 41	[c=4]movsi_push_pop
	store8! &4 	#X3
	push! 0		# 42	[c=4]movsi_push_pop
	store8! &6 	#X5
	load4! &5 	#X5	# 8576	[c=5]movsi_to_tr_unspec/1
	store8! &3 	#X2	# 8578	[c=4]movdi_from_tr_unspec/0
	push! 0		# 8579	[c=3]movdi_to_tr_unspec/0
	and! 0xffffffff00000000		# 8581	[c=4]*anddi3/0
	load8! &3 	#X2	# 8582	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 8583	[c=4]movdi_from_tr_unspec/0
	load4! &3 	#X3	# 8584	[c=5]movsi_to_tr_unspec/1
	and! 0xfffff		# 8586	[c=4]*anddi3/0
	shift_l! 32	# 8588	[c=8]*ashldi3/0
	store8! &3 	#X2	# 8589	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 8590	[c=5]movdi_to_tr_unspec/1
	and! 0xfff00000ffffffff		# 8592	[c=4]*anddi3/0
	load8! &3 	#X2	# 8593	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 8594	[c=4]movdi_from_tr_unspec/0
	load2! &1 	#X1	# 8595	[c=5]movhi_to_tr_unspec/1
	and! 0x7ff		# 8597	[c=4]*anddi3/0
	shift_l! 52	# 8599	[c=8]*ashldi3/0
	store8! &2 	#X1	# 8600	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 8601	[c=5]movdi_to_tr_unspec/1
	and! 0x800fffffffffffff		# 8603	[c=4]*anddi3/0
	load8! &2 	#X1	# 8604	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 8605	[c=4]movdi_from_tr_unspec/0
	load1! &4 	#X4	# 8606	[c=5]movqi_to_tr_unspec/1
	shift_l! 63	# 8608	[c=8]*ashldi3/0
	store8! &2 	#X1	# 8609	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 8610	[c=5]movdi_to_tr_unspec/1
	and! 0x7fffffffffffffff		# 8612	[c=4]*anddi3/0
	load8! &2 	#X1	# 8613	[c=6]*iordi3/2
	or
	store8! &14	# 8614	[c=4]movdf_from_tr_unspec/0
	jump! .L160.l_o3fd139		# 8872	[c=4]jump
.L38.l_o3fd139:
	load8! &9 	#X9	# 6561	[c=5]movdi_to_tr_unspec/1
	load8! &7 	#X6	# 6563	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 7580	[c=4]movdi_from_tr_unspec/0
	load8! &7 	#X7	# 7581	[c=5]movdi_to_tr_unspec/1
	shift_l! 29	# 1769	[c=8]*ashldi3/0
	store8! &6 	#X5	# 7584	[c=4]movsi_from_tr_unspec/0
	load4! &7 	#X7	# 6569	[c=5]movsi_to_tr_unspec/1
	shift_ru! 3	# 6571	[c=40]*lshrdi3/0
	store8! &8 	#X7	# 7586	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ0	# 1790	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L39.l_o3fd139
	# END CBRANCH
	load8! &1 	#X1	# 1792	[c=5]movdi_to_tr_unspec/1
	and! 0x1fffffff		# 1794	[c=4]*anddi3/0
	store8! &1 	#AR	# 8066	[c=4]movdi_from_tr_unspec/0
	load8! &5 	#X5	# 8067	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 1807	[c=6]*iordi3/2
	or
	store8! &6 	#X5	# 7579	[c=4]movsi_from_tr_unspec/0
	load8! &5 	#X5	# 8617	[c=5]movdi_to_tr_unspec/1
	load8! &8 	#X7	# 8619	[c=6]*iordi3/2
	or
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 8620	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L78.l_o3fd139
	# END CBRANCH
	jump! .L173.l_o3fd139		# 8875	[c=4]jump
.L105.l_o3fd139:
	push! 0		# 27	[c=4]movsi_push_pop
	store8! &8 	#X7
	push! 0		# 28	[c=4]movqi_push_pop
	store8! &5 	#X4
	load8! &7 	#X7	# 8623	[c=5]movdi_to_tr_unspec/1
	and! 0xfffff		# 8625	[c=4]*anddi3/0
	store8! &4 	#X3	# 8627	[c=4]movsi_from_tr_unspec/0
	load2! &2 	#X2	# 8628	[c=5]movhi_to_tr_unspec/1
	and! 0x7ff		# 8630	[c=4]*anddi3/0
	store8! &2 	#X1	# 8632	[c=4]movhi_from_tr_unspec/0
	jump! .L177.l_o3fd139		# 8877	[c=4]jump
.L74.l_o3fd139:
	load8! &0 	#AR	# 6025	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 6027	[c=6]*iordi3/2
	or
	store8! &6 	#X5	# 7284	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ0	# 3648	[c=12]cbranchsi4_internal
	load4! &5 	#X5
	jump_not_zero! .L37.l_o3fd139
	# END CBRANCH
	push! 0		# 25	[c=4]movsi_push_pop
	store8! &8 	#X7
	push! 0		# 26	[c=4]movqi_push_pop
	store8! &5 	#X4
	load8! &7 	#X7	# 8635	[c=5]movdi_to_tr_unspec/1
	and! 0xfffff		# 8637	[c=4]*anddi3/0
	store8! &4 	#X3	# 8639	[c=4]movsi_from_tr_unspec/0
	load2! &2 	#X2	# 8640	[c=5]movhi_to_tr_unspec/1
	and! 0x7ff		# 8642	[c=4]*anddi3/0
	store8! &2 	#X1	# 8644	[c=4]movhi_from_tr_unspec/0
	jump! .L177.l_o3fd139		# 8879	[c=4]jump
.L171.l_o3fd139:
	load8! &3 	#X3	# 2896	[c=5]movdi_to_tr_unspec/1
	and! 0x1fffffff		# 2898	[c=4]*anddi3/0
	store8! &1 	#AR	# 7402	[c=4]movdi_from_tr_unspec/0
	load8! &6 	#X6	# 7403	[c=5]movdi_to_tr_unspec/1
	shift_l! 29	# 2907	[c=8]*ashldi3/0
	load8! &1 	#AR	# 2920	[c=6]*iordi3/2
	or
	store8! &6 	#X5	# 7407	[c=4]movsi_from_tr_unspec/0
	load4! &6 	#X6	# 6242	[c=5]movsi_to_tr_unspec/1
	shift_ru! 3	# 6244	[c=40]*lshrdi3/0
	store8! &8 	#X7	# 7409	[c=4]movsi_from_tr_unspec/0
	load1! &10 	#X10	# 33	[c=4]movqi_push_pop
	store8! &5 	#X4
	load8! &5 	#X5	# 8647	[c=5]movdi_to_tr_unspec/1
	load8! &8 	#X7	# 8649	[c=6]*iordi3/2
	or
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 8650	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L78.l_o3fd139
	# END CBRANCH
	jump! .L173.l_o3fd139		# 8882	[c=4]jump
.L27.l_o3fd139:
	load8! &0 	#AR	# 1274	[c=5]movdi_to_tr_unspec/1
	add! -32		# 1276	[c=4]*adddi/0
	store8! &2 	#X1	# 7661	[c=4]movdi_from_tr_unspec/0
	load4! &7 	#X7	# 7662	[c=5]movsi_to_tr_unspec/1
	load4! &2 	#X1	# 7664	[c=5]movsi_to_tr_unspec/1
	store8! &3 	#X1	# 7666	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X1	# 1295	[c=42]*lshrdi3/2
	shift_ru
	store8! &3 	#X2	# 7668	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ	# 1302	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	push! 32	
	xor	
	jump_zero! .L29.l_o3fd139
	# END CBRANCH
	push! 64		# 1308	[c=3]movdi_to_tr_unspec/0
	load8! &1 	#AR	# 1310	[c=14]*subdi3/2
	sub
	and! 0xffffffff		# 8188	[c=4]*anddi3/0
	pow2		# 6691	[c=4]*pow_tr
	load8! &8 	#X7	# 6692	[c=6]*muldi3/2
	mult
	load8! &9 	#X8	# 6697	[c=6]*iordi3/2
	or
	store8! &9 	#X8	# 7660	[c=4]movsi_from_tr_unspec/0
.L29.l_o3fd139:
	load4! &8 	#X8	# 6671	[c=5]movsi_to_tr_unspec/1
	neg		# 1353	[c=3]*negdi2
	shift_ru! 63	# 1358	[c=40]*lshrdi3/0
	and! 0xff		# 8186	[c=4]*anddi3/0
	load8! &3 	#X2	# 6684	[c=6]*iordi3/2
	or
	store8! &2 	#X1	# 7652	[c=4]movsi_from_tr_unspec/0
	jump! .L28.l_o3fd139		# 8884	[c=4]jump
.L79.l_o3fd139:
	load8! &1 	#X1	# 3758	[c=5]movdi_to_tr_unspec/1
	and! 0x1fffffff		# 3760	[c=4]*anddi3/0
	load8! &3 	#X2	# 7944	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 7945	[c=4]movdi_from_tr_unspec/0
	load8! &7 	#X7	# 7264	[c=5]movdi_to_tr_unspec/1
	and! 0x80000		# 3782	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 7268	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L80.l_o3fd139
	# END CBRANCH
	load4! &6 	#X6	# 5990	[c=5]movsi_to_tr_unspec/1
	shift_ru! 3	# 5992	[c=40]*lshrdi3/0
	store8! &2 	#X1	# 7256	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 7257	[c=5]movdi_to_tr_unspec/1
	and! 0x80000		# 3807	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 7261	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L80.l_o3fd139
	# END CBRANCH
	load8! &6 	#X6	# 3816	[c=5]movdi_to_tr_unspec/1
	shift_l! 29	# 3818	[c=8]*ashldi3/0
	store8! &3 	#X2	# 7254	[c=4]movsi_from_tr_unspec/0
	load8! &3 	#X3	# 3825	[c=5]movdi_to_tr_unspec/1
	and! 0x1fffffff		# 3827	[c=4]*anddi3/0
	load8! &3 	#X2	# 7941	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 7942	[c=4]movdi_from_tr_unspec/0
	load1! &10 	#X10	# 5986	[c=4]movqi_push_pop
	store8! &5 	#X4
	load4! &1 	#X1	# 13	[c=4]movsi_push_pop
	store8! &8 	#X7
.L80.l_o3fd139:
	load8! &7 	#X7	# 3849	[c=5]movdi_to_tr_unspec/1
	shift_l! 3	# 3851	[c=8]*ashldi3/0
	store8! &2 	#X1	# 7239	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 7240	[c=5]movsi_to_tr_unspec/1
	shift_ru! 29	# 5965	[c=40]*lshrdi3/0
	load8! &2 	#X1	# 3878	[c=6]*iordi3/2
	or
	store8! &2 	#X1	# 7243	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 7244	[c=5]movdi_to_tr_unspec/1
	and! 0x1fffffff		# 3887	[c=4]*anddi3/0
	store8! &3 	#X2	# 7247	[c=4]movsi_from_tr_unspec/0
	load8! &1 	#X1	# 3894	[c=5]movdi_to_tr_unspec/1
	shift_l! 29	# 3896	[c=8]*ashldi3/0
	store8! &1 	#AR	# 7937	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 7938	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 3909	[c=6]*iordi3/2
	or
	store8! &6 	#X5	# 7250	[c=4]movsi_from_tr_unspec/0
	load4! &1 	#X1	# 5977	[c=5]movsi_to_tr_unspec/1
	shift_ru! 3	# 5979	[c=40]*lshrdi3/0
	store8! &8 	#X7	# 7252	[c=4]movsi_from_tr_unspec/0
	load8! &5 	#X5	# 8653	[c=5]movdi_to_tr_unspec/1
	load8! &8 	#X7	# 8655	[c=6]*iordi3/2
	or
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 8656	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L78.l_o3fd139
	# END CBRANCH
	jump! .L173.l_o3fd139		# 8887	[c=4]jump
.L107.l_o3fd139:
	push! -1		# 36	[c=4]movsi_push_pop
	store8! &6 	#X5
	push! 0		# 37	[c=4]movqi_push_pop
	store8! &5 	#X4
	push! 1048575		# 38	[c=4]movsi_push_pop
	store8! &8 	#X7
	load8! &7 	#X7	# 8659	[c=5]movdi_to_tr_unspec/1
	or! 0x80000		# 8661	[c=4]*iordi3/0
	and! 0xfffff		# 8663	[c=4]*anddi3/0
	store8! &4 	#X3	# 8665	[c=4]movsi_from_tr_unspec/0
	push! 2047		# 8666	[c=4]movhi_push_pop
	store8! &2 	#X1
	jump! .L187.l_o3fd139		# 8890	[c=4]jump
.L182.l_o3fd139:
	load8! &9 	#X9	# 6795	[c=5]movdi_to_tr_unspec/1
	load8! &9 	#X8	# 6797	[c=6]*adddi/2
	add
	store8! &4 	#X3	# 7721	[c=4]movsi_from_tr_unspec/0
	load8! &6 	#X6	# 6800	[c=5]movdi_to_tr_unspec/1
	load8! &8 	#X7	# 6802	[c=6]*adddi/2
	add
	store8! &3 	#X2	# 7723	[c=4]movsi_from_tr_unspec/0
	push! 1		# 977	[c=4]movqi_push_pop
	store8! &1 	#AR
	# CBRANCH	# 978	[c=12]cbranchsi4_internal
	load4! &3 	#X3
	load4! &10 	#X9
	lt_u	
	not	
	jump_zero! .L23.l_o3fd139
	# END CBRANCH
	push! 0		# 979	[c=4]movqi_push_pop
	store8! &1 	#AR
.L23.l_o3fd139:
	load1! &0 	#AR	# 6785	[c=5]movqi_to_tr_unspec/1
	load8! &3 	#X2	# 6792	[c=6]*adddi/2
	add
	store8! &1 	#AR	# 997	[c=4]movdi_from_tr_unspec/0
	jump! .L8.l_o3fd139		# 8892	[c=4]jump
.L185.l_o3fd139:
	load8! &3 	#X3	# 1060	[c=5]movdi_to_tr_unspec/1
	and! 0x1fffffff		# 1062	[c=4]*anddi3/0
	store8! &1 	#AR	# 7701	[c=4]movdi_from_tr_unspec/0
	load8! &6 	#X6	# 7702	[c=5]movdi_to_tr_unspec/1
	shift_l! 29	# 1071	[c=8]*ashldi3/0
	load8! &1 	#AR	# 1084	[c=6]*iordi3/2
	or
	store8! &6 	#X5	# 7706	[c=4]movsi_from_tr_unspec/0
	load4! &6 	#X6	# 6768	[c=5]movsi_to_tr_unspec/1
	shift_ru! 3	# 6770	[c=40]*lshrdi3/0
	store8! &8 	#X7	# 7708	[c=4]movsi_from_tr_unspec/0
	load8! &5 	#X5	# 8669	[c=5]movdi_to_tr_unspec/1
	load8! &8 	#X7	# 8671	[c=6]*iordi3/2
	or
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 8672	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L78.l_o3fd139
	# END CBRANCH
	jump! .L173.l_o3fd139		# 8895	[c=4]jump
.L39.l_o3fd139:
	load8! &1 	#X1	# 1818	[c=5]movdi_to_tr_unspec/1
	and! 0x1fffffff		# 1820	[c=4]*anddi3/0
	load8! &6 	#X5	# 8064	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 8065	[c=4]movdi_from_tr_unspec/0
	load8! &7 	#X7	# 7572	[c=5]movdi_to_tr_unspec/1
	and! 0x80000		# 1842	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 7576	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L40.l_o3fd139
	# END CBRANCH
	load4! &6 	#X6	# 6547	[c=5]movsi_to_tr_unspec/1
	shift_ru! 3	# 6549	[c=40]*lshrdi3/0
	store8! &2 	#X1	# 7564	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 7565	[c=5]movdi_to_tr_unspec/1
	and! 0x80000		# 1867	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 7569	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L40.l_o3fd139
	# END CBRANCH
	load8! &6 	#X6	# 1876	[c=5]movdi_to_tr_unspec/1
	shift_l! 29	# 1878	[c=8]*ashldi3/0
	store8! &3 	#X2	# 7562	[c=4]movsi_from_tr_unspec/0
	load8! &3 	#X3	# 1885	[c=5]movdi_to_tr_unspec/1
	and! 0x1fffffff		# 1887	[c=4]*anddi3/0
	load8! &3 	#X2	# 8061	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 8062	[c=4]movdi_from_tr_unspec/0
	load4! &1 	#X1	# 6543	[c=4]movsi_push_pop
	store8! &8 	#X7
.L40.l_o3fd139:
	load8! &7 	#X7	# 1909	[c=5]movdi_to_tr_unspec/1
	shift_l! 3	# 1911	[c=8]*ashldi3/0
	store8! &2 	#X1	# 7547	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 7548	[c=5]movsi_to_tr_unspec/1
	shift_ru! 29	# 6522	[c=40]*lshrdi3/0
	load8! &2 	#X1	# 1938	[c=6]*iordi3/2
	or
	store8! &2 	#X1	# 7551	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 7552	[c=5]movdi_to_tr_unspec/1
	and! 0x1fffffff		# 1947	[c=4]*anddi3/0
	store8! &3 	#X2	# 7555	[c=4]movsi_from_tr_unspec/0
	load8! &1 	#X1	# 1954	[c=5]movdi_to_tr_unspec/1
	shift_l! 29	# 1956	[c=8]*ashldi3/0
	store8! &1 	#AR	# 8057	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 8058	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 1969	[c=6]*iordi3/2
	or
	store8! &6 	#X5	# 7558	[c=4]movsi_from_tr_unspec/0
	load4! &1 	#X1	# 6534	[c=5]movsi_to_tr_unspec/1
	shift_ru! 3	# 6536	[c=40]*lshrdi3/0
	store8! &8 	#X7	# 7560	[c=4]movsi_from_tr_unspec/0
	load8! &5 	#X5	# 8675	[c=5]movdi_to_tr_unspec/1
	load8! &8 	#X7	# 8677	[c=6]*iordi3/2
	or
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 8678	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L78.l_o3fd139
	# END CBRANCH
	jump! .L173.l_o3fd139		# 8898	[c=4]jump
.L183.l_o3fd139:
	load8! &3 	#X3	# 1009	[c=5]movdi_to_tr_unspec/1
	and! 0x1fffffff		# 1011	[c=4]*anddi3/0
	store8! &1 	#AR	# 7709	[c=4]movdi_from_tr_unspec/0
	load8! &6 	#X6	# 7710	[c=5]movdi_to_tr_unspec/1
	shift_l! 29	# 1020	[c=8]*ashldi3/0
	load8! &1 	#AR	# 1033	[c=6]*iordi3/2
	or
	store8! &6 	#X5	# 7714	[c=4]movsi_from_tr_unspec/0
	load4! &6 	#X6	# 6780	[c=5]movsi_to_tr_unspec/1
	shift_ru! 3	# 6782	[c=40]*lshrdi3/0
	store8! &8 	#X7	# 7716	[c=4]movsi_from_tr_unspec/0
	load8! &5 	#X5	# 8681	[c=5]movdi_to_tr_unspec/1
	load8! &8 	#X7	# 8683	[c=6]*iordi3/2
	or
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 8684	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L78.l_o3fd139
	# END CBRANCH
.L173.l_o3fd139:
	push! 0		# 49	[c=4]movsi_push_pop
	store8! &6 	#X5
	push! 2047		# 50	[c=4]movhi_push_pop
	store8! &2 	#X1
	push! 0		# 51	[c=4]movsi_push_pop
	store8! &4 	#X3
	load4! &5 	#X5	# 8687	[c=5]movsi_to_tr_unspec/1
	store8! &3 	#X2	# 8689	[c=4]movdi_from_tr_unspec/0
	push! 0		# 8690	[c=3]movdi_to_tr_unspec/0
	and! 0xffffffff00000000		# 8692	[c=4]*anddi3/0
	load8! &3 	#X2	# 8693	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 8694	[c=4]movdi_from_tr_unspec/0
	load4! &3 	#X3	# 8695	[c=5]movsi_to_tr_unspec/1
	and! 0xfffff		# 8697	[c=4]*anddi3/0
	shift_l! 32	# 8699	[c=8]*ashldi3/0
	store8! &3 	#X2	# 8700	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 8701	[c=5]movdi_to_tr_unspec/1
	and! 0xfff00000ffffffff		# 8703	[c=4]*anddi3/0
	load8! &3 	#X2	# 8704	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 8705	[c=4]movdi_from_tr_unspec/0
	load2! &1 	#X1	# 8706	[c=5]movhi_to_tr_unspec/1
	and! 0x7ff		# 8708	[c=4]*anddi3/0
	shift_l! 52	# 8710	[c=8]*ashldi3/0
	store8! &2 	#X1	# 8711	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 8712	[c=5]movdi_to_tr_unspec/1
	and! 0x800fffffffffffff		# 8714	[c=4]*anddi3/0
	load8! &2 	#X1	# 8715	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 8716	[c=4]movdi_from_tr_unspec/0
	load1! &4 	#X4	# 8717	[c=5]movqi_to_tr_unspec/1
	shift_l! 63	# 8719	[c=8]*ashldi3/0
	store8! &2 	#X1	# 8720	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 8721	[c=5]movdi_to_tr_unspec/1
	and! 0x7fffffffffffffff		# 8723	[c=4]*anddi3/0
	load8! &2 	#X1	# 8724	[c=6]*iordi3/2
	or
	store8! &14	# 8725	[c=4]movdf_from_tr_unspec/0
.L160.l_o3fd139:

	# epilogue
	set_sp! &12
	return

# FUNCTION ENDS:__adddf3

#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: o7c0487
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"close.c"
#	.text

# FUNCTION BEGINS:close
	EXPORT	close
close:
	# prologue (0 GPRs)

	push! 0		# 10	[c=4]movsi_push_pop
	store4! &2

	# epilogue
	return

# FUNCTION ENDS:close

#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: o41067e
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"divdf3.c"
#	.text
	#peephole zero_extend
	#peephole binop1+deadreg+binop2
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole binop1+2
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole binop1+2
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole binop1+2
	#peephole 1
	#peephole nop+set
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole nop+set
	#peephole 1
	#peephole zero_extend
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole zero_extend
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole 1
	#peephole zero_extend
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole zero_extend
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole move_dead
	#peephole move_dead
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole zero_extend
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole 1
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole nop+set
	#peephole move_dead
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole move_dead
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole 1
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole zero_extend
	#peephole 1
	#peephole zero_extend
	#peephole zero_extend
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole 1
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole zero_extend
	#peephole zero_extend
	#peephole move_dead
	#peephole zero_extend
	#peephole zero_extend
	#peephole move_dead
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole move_dead
	#peephole move+push+sub
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole nop+set
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole nop+set
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole 1
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole zero_extend
	#peephole move_dead
	#peephole zero_extend
	#peephole zero_extend
	#peephole move_dead
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole 1
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole move_dead
	#peephole zero_extend
	#peephole zero_extend
	#peephole 1
	#peephole zero_extend
	#peephole zero_extend
	#peephole move_dead
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole move_dead
	#peephole move_dead
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole move_dead
	#peephole 1
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole zero_extend
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole 1
	#peephole zero_extend
	#peephole pop+pusharg
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole pop+pusharg
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole move_dead
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move
	#peephole move
	#peephole move+push(pushable)
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole move_dead
	#peephole 1
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole move_dead
	#peephole zero_extend
	#peephole pop+pusharg
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole pop+pusharg
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole move_dead
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move_dead
	#peephole zero_extend
	#peephole 1
	#peephole move_dead
	#peephole move
	#peephole move
	#peephole move+push(pushable)
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole pop+move2(deadreg)
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+push+pop+push
	#peephole pop+block+cmp
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+cmp
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+push+pop+push
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+push+pop+push
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+commut(di)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+commut(di)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+commut(di)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+commut(di)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+commut(di)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+commut(di)
	#peephole pop+block+push+commut(di)
	#peephole pop+block+push+block
	#peephole pop+block+push+commut(di)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+commut(di)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole popdi(deadreg)+push
	#peephole redundant blockage insn
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push

# FUNCTION BEGINS:__divdf3
	EXPORT	__divdf3
__divdf3:
	# prologue (16 GPRs)

	set_sp! &-16

	load8! &17	# 4472	[c=2]movdi_push_pop
	store8! &1 	#AR
	load8! &17	# 4474	[c=5]movdi_to_tr_unspec/1
	store8! &3 	#X2	# 104	[c=4]movsi_from_tr_unspec/0
	load8! &0 	#AR	# 106	[c=5]movdi_to_tr_unspec/1
	shift_ru! 32	# 108	[c=40]*lshrdi3/0
	and! 0xfffff		# 117	[c=4]*anddi3/0
	store8! &4 	#X3	# 4991	[c=4]movsi_from_tr_unspec/0
	load8! &0 	#AR	# 125	[c=5]movdi_to_tr_unspec/1
	shift_ru! 52	# 127	[c=40]*lshrdi3/0
	and! 0x7ff		# 136	[c=4]*anddi3/0
	store8! &2 	#X1	# 4996	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 4997	[c=5]movdi_to_tr_unspec/1
	shift_ru! 63	# 145	[c=40]*lshrdi3/0
	store8! &10 	#X9	# 5000	[c=4]movqi_from_tr_unspec/0
	# CBRANCH EQ0	# 152	[c=12]cbranchhi4_internal
	load2! &1 	#X1
	jump_zero! .L2.l_o41067e
	# END CBRANCH
	# CBRANCH EQ	# 154	[c=12]cbranchhi4_internal
	load2! &1 	#X1
	push! 2047	
	xor	
	jump_zero! .L3.l_o41067e
	# END CBRANCH
	load8! &3 	#X3	# 156	[c=5]movdi_to_tr_unspec/1
	shift_l! 3	# 158	[c=8]*ashldi3/0
	store8! &4 	#X3	# 4970	[c=4]movsi_from_tr_unspec/0
	load4! &2 	#X2	# 4458	[c=5]movsi_to_tr_unspec/1
	shift_ru! 29	# 4460	[c=40]*lshrdi3/0
	store8! &1 	#AR	# 5132	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 5133	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 185	[c=6]*iordi3/2
	or
	or! 0x800000		# 194	[c=4]*iordi3/0
	store8! &6 	#X5	# 4977	[c=4]movsi_from_tr_unspec/0
	load8! &2 	#X2	# 201	[c=5]movdi_to_tr_unspec/1
	shift_l! 3	# 203	[c=8]*ashldi3/0
	store8! &3 	#X2	# 4979	[c=4]movsi_from_tr_unspec/0
	load2! &1 	#X1	# 4467	[c=5]movhi_to_tr_unspec/1
	add! -1023		# 221	[c=4]*adddi/0
	store8! &8 	#X7	# 4985	[c=4]movsi_from_tr_unspec/0
	push! 0		# 6	[c=4]movsi_push_pop
	store8! &4 	#X3
	push! 0		# 7	[c=4]movsi_push_pop
	store8! &11 	#X10
.L4.l_o41067e:
	load8! &18	# 4373	[c=2]movdi_push_pop
	store8! &1 	#AR
	load8! &18	# 4375	[c=5]movdi_to_tr_unspec/1
	store8! &7 	#X6	# 482	[c=4]movsi_from_tr_unspec/0
	load8! &0 	#AR	# 484	[c=5]movdi_to_tr_unspec/1
	shift_ru! 32	# 486	[c=40]*lshrdi3/0
	and! 0xfffff		# 495	[c=4]*anddi3/0
	store8! &9 	#X8	# 4921	[c=4]movsi_from_tr_unspec/0
	load4! &8 	#X8	# 502	[c=4]movsi_push_pop
	store8! &5 	#X4
	load8! &0 	#AR	# 503	[c=5]movdi_to_tr_unspec/1
	shift_ru! 52	# 505	[c=40]*lshrdi3/0
	and! 0x7ff		# 514	[c=4]*anddi3/0
	store8! &2 	#X1	# 4926	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 4927	[c=5]movdi_to_tr_unspec/1
	shift_ru! 63	# 523	[c=40]*lshrdi3/0
	store8! &12 	#X11	# 4930	[c=4]movqi_from_tr_unspec/0
	# CBRANCH EQ0	# 530	[c=12]cbranchhi4_internal
	load2! &1 	#X1
	jump_zero! .L9.l_o41067e
	# END CBRANCH
	# CBRANCH EQ	# 532	[c=12]cbranchhi4_internal
	load2! &1 	#X1
	push! 2047	
	xor	
	jump_zero! .L10.l_o41067e
	# END CBRANCH
	load8! &4 	#X4	# 534	[c=5]movdi_to_tr_unspec/1
	shift_l! 3	# 536	[c=8]*ashldi3/0
	store8! &5 	#X4	# 4898	[c=4]movsi_from_tr_unspec/0
	load4! &6 	#X6	# 4357	[c=5]movsi_to_tr_unspec/1
	shift_ru! 29	# 4359	[c=40]*lshrdi3/0
	store8! &1 	#AR	# 5118	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 5119	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 563	[c=6]*iordi3/2
	or
	or! 0x800000		# 572	[c=4]*iordi3/0
	store8! &5 	#X4	# 4905	[c=4]movsi_from_tr_unspec/0
	load8! &6 	#X6	# 579	[c=5]movdi_to_tr_unspec/1
	shift_l! 3	# 581	[c=8]*ashldi3/0
	store8! &1 	#AR	# 4906	[c=4]movdi_from_tr_unspec/0
	load2! &1 	#X1	# 4907	[c=5]movhi_to_tr_unspec/1
	add! -1023		# 599	[c=4]*adddi/0
	store8! &2 	#X1	# 5122	[c=4]movdi_from_tr_unspec/0
	load8! &7 	#X7	# 5123	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 612	[c=14]*subdi3/2
	sub
	store8! &8 	#X7	# 4915	[c=4]movsi_from_tr_unspec/0
	push! 0		# 24	[c=4]movsi_push_pop
	store8! &7 	#X6
.L11.l_o41067e:
	load8! &11 	#X11	# 4268	[c=5]movdi_to_tr_unspec/1
	load8! &10 	#X9	# 4270	[c=6]*xordi3/2
	xor
	store8! &2 	#X1	# 927	[c=4]movdi_from_tr_unspec/0
	#CASESI		# 933	[c=43]casesi_internal
	push! 14	
	load4! &4 	#X3
	sigx4	
	add! -1	
	lt_u	
	not	
	jump_zero! .L18.l_o41067e
	load4! &3 	#X3
	sigx4	
	add! -1	
	mult! 8	
	add! .L20.l_o41067e	
	load8	
	jump	
	##	
.L20.l_o41067e:
	data8 [.L74.l_o41067e]#casesi entry
	data8 [.L25.l_o41067e]#casesi entry
	data8 [.L22.l_o41067e]#casesi entry
	data8 [.L25.l_o41067e]#casesi entry
	data8 [.L73.l_o41067e]#casesi entry
	data8 [.L25.l_o41067e]#casesi entry
	data8 [.L22.l_o41067e]#casesi entry
	data8 [.L74.l_o41067e]#casesi entry
	data8 [.L74.l_o41067e]#casesi entry
	data8 [.L73.l_o41067e]#casesi entry
	data8 [.L22.l_o41067e]#casesi entry
	data8 [.L72.l_o41067e]#casesi entry
	data8 [.L72.l_o41067e]#casesi entry
	data8 [.L72.l_o41067e]#casesi entry
	data8 [.L19.l_o41067e]#casesi entry
.L10.l_o41067e:
	load8! &6 	#X6	# 4275	[c=5]movdi_to_tr_unspec/1
	load8! &5 	#X4	# 4277	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 4848	[c=4]movdi_from_tr_unspec/0
	load8! &7 	#X7	# 4849	[c=5]movdi_to_tr_unspec/1
	add! -2047		# 887	[c=4]*adddi/0
	store8! &8 	#X7	# 4852	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ0	# 894	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L116.l_o41067e
	# END CBRANCH
	load8! &3 	#X3	# 909	[c=5]movdi_to_tr_unspec/1
	or! 0x2		# 911	[c=4]*iordi3/0
	store8! &4 	#X3	# 4845	[c=4]movsi_from_tr_unspec/0
	push! 0		# 28	[c=4]movsi_push_pop
	store8! &5 	#X4
	push! 2		# 29	[c=4]movsi_push_pop
	store8! &7 	#X6
	jump! .L11.l_o41067e		# 6152	[c=4]jump
.L9.l_o41067e:
	load8! &6 	#X6	# 4349	[c=5]movdi_to_tr_unspec/1
	load8! &5 	#X4	# 4351	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 4895	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 4896	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_zero! .L117.l_o41067e
	# END CBRANCH
	# CBRANCH EQ0	# 651	[c=12]cbranchsi4_internal
	load4! &8 	#X8
	jump_zero! .L13.l_o41067e
	# END CBRANCH
	load4! &8 	#X8	# 4333	[c=5]movsi_to_tr_unspec/1
	#peep - pop(deadreg)+pusharg	# 4337	[c=0]*peep2_pop_pusharg
	call! __clzdi2		# 659	[c=0]*call_value_pop_1/0
	store8! &1

	load4! &0 	#AR	# 4341	[c=5]movsi_to_tr_unspec/1
	add! -32		# 4343	[c=4]*adddi/0
	store8! &2 	#X1	# 4890	[c=4]movsi_from_tr_unspec/0
	load8! &1 	#X1	# 675	[c=5]movdi_to_tr_unspec/1
	add! -11		# 677	[c=4]*adddi/0
	store8! &5 	#X4	# 4892	[c=4]movsi_from_tr_unspec/0
.L14.l_o41067e:
	load8! &1 	#X1	# 731	[c=5]movdi_to_tr_unspec/1
	add! -8		# 733	[c=4]*adddi/0
	store8! &1 	#AR	# 4861	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 4862	[c=5]movsi_to_tr_unspec/1
	pow2		# 4295	[c=4]*pow_tr
	load8! &9 	#X8	# 4296	[c=6]*muldi3/2
	mult
	store8! &13 	#X12	# 4866	[c=4]movsi_from_tr_unspec/0
	push! 29		# 4867	[c=3]movdi_to_tr_unspec/0
	load8! &5 	#X4	# 760	[c=14]*subdi3/2
	sub
	store8! &5 	#X4	# 4869	[c=4]movdi_from_tr_unspec/0
	load4! &6 	#X6	# 4870	[c=5]movsi_to_tr_unspec/1
	load4! &5 	#X4	# 4872	[c=5]movsi_to_tr_unspec/1
	store8! &6 	#X4	# 4874	[c=4]movdi_from_tr_unspec/0
	load8! &5 	#X4	# 779	[c=42]*lshrdi3/2
	shift_ru
	load8! &13 	#X12	# 4310	[c=6]*iordi3/2
	or
	store8! &5 	#X4	# 4878	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 4879	[c=5]movsi_to_tr_unspec/1
	pow2		# 4315	[c=4]*pow_tr
	load8! &7 	#X6	# 4316	[c=6]*muldi3/2
	mult
	store8! &1 	#AR	# 807	[c=4]movdi_from_tr_unspec/0
	push! -1011		# 846	[c=3]movdi_to_tr_unspec/0
	load8! &2 	#X1	# 848	[c=14]*subdi3/2
	sub
	store8! &2 	#X1	# 5114	[c=4]movdi_from_tr_unspec/0
	load8! &7 	#X7	# 5115	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 861	[c=14]*subdi3/2
	sub
	store8! &8 	#X7	# 4855	[c=4]movsi_from_tr_unspec/0
	push! 0		# 25	[c=4]movsi_push_pop
	store8! &7 	#X6
	jump! .L11.l_o41067e		# 6155	[c=4]jump
.L2.l_o41067e:
	load8! &3 	#X3	# 4450	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 4452	[c=6]*iordi3/2
	or
	store8! &6 	#X5	# 4968	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ0	# 245	[c=12]cbranchsi4_internal
	load4! &5 	#X5
	jump_zero! .L70.l_o41067e
	# END CBRANCH
	# CBRANCH EQ0	# 247	[c=12]cbranchsi4_internal
	load4! &3 	#X3
	jump_zero! .L5.l_o41067e
	# END CBRANCH
	load4! &3 	#X3	# 4435	[c=5]movsi_to_tr_unspec/1
	#peep - pop(deadreg)+pusharg	# 4439	[c=0]*peep2_pop_pusharg
	call! __clzdi2		# 255	[c=0]*call_value_pop_1/0
	store8! &1

	load4! &0 	#AR	# 4443	[c=5]movsi_to_tr_unspec/1
	add! -32		# 4445	[c=4]*adddi/0
	store8! &1 	#AR	# 4962	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 4963	[c=5]movdi_to_tr_unspec/1
	add! -11		# 273	[c=4]*adddi/0
	store8! &5 	#X4	# 4966	[c=4]movsi_from_tr_unspec/0
.L6.l_o41067e:
	load8! &0 	#AR	# 327	[c=5]movdi_to_tr_unspec/1
	add! -8		# 329	[c=4]*adddi/0
	store8! &2 	#X1	# 4940	[c=4]movdi_from_tr_unspec/0
	load4! &1 	#X1	# 4941	[c=5]movsi_to_tr_unspec/1
	pow2		# 4400	[c=4]*pow_tr
	load8! &4 	#X3	# 4401	[c=6]*muldi3/2
	mult
	store8! &4 	#X3	# 5125	[c=4]movdi_from_tr_unspec/0
	push! 29		# 5126	[c=3]movdi_to_tr_unspec/0
	load8! &5 	#X4	# 356	[c=14]*subdi3/2
	sub
	store8! &5 	#X4	# 4944	[c=4]movdi_from_tr_unspec/0
	load4! &2 	#X2	# 4945	[c=5]movsi_to_tr_unspec/1
	load4! &5 	#X4	# 4947	[c=5]movsi_to_tr_unspec/1
	store8! &6 	#X4	# 4949	[c=4]movdi_from_tr_unspec/0
	load8! &5 	#X4	# 375	[c=42]*lshrdi3/2
	shift_ru
	load8! &4 	#X3	# 388	[c=6]*iordi3/2
	or
	store8! &6 	#X5	# 4952	[c=4]movsi_from_tr_unspec/0
	load4! &1 	#X1	# 4414	[c=5]movsi_to_tr_unspec/1
	pow2		# 4417	[c=4]*pow_tr
	load8! &3 	#X2	# 4418	[c=6]*muldi3/2
	mult
	store8! &3 	#X2	# 4954	[c=4]movsi_from_tr_unspec/0
	push! -1011		# 442	[c=3]movdi_to_tr_unspec/0
	load8! &1 	#AR	# 444	[c=14]*subdi3/2
	sub
	store8! &8 	#X7	# 4934	[c=4]movsi_from_tr_unspec/0
	push! 0		# 8	[c=4]movsi_push_pop
	store8! &4 	#X3
	push! 0		# 9	[c=4]movsi_push_pop
	store8! &11 	#X10
	jump! .L4.l_o41067e		# 6157	[c=4]jump
.L3.l_o41067e:
	load8! &3 	#X3	# 4383	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 4385	[c=6]*iordi3/2
	or
	store8! &6 	#X5	# 4932	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ0	# 468	[c=12]cbranchsi4_internal
	load4! &5 	#X5
	jump_not_zero! .L118.l_o41067e
	# END CBRANCH
	push! 0		# 14	[c=4]movsi_push_pop
	store8! &3 	#X2
	push! 8		# 15	[c=4]movsi_push_pop
	store8! &4 	#X3
	push! 2047		# 16	[c=4]movsi_push_pop
	store8! &8 	#X7
	push! 2		# 17	[c=4]movsi_push_pop
	store8! &11 	#X10
	jump! .L4.l_o41067e		# 6160	[c=4]jump
.L118.l_o41067e:
	load4! &3 	#X3	# 18	[c=4]movsi_push_pop
	store8! &6 	#X5
	push! 12		# 19	[c=4]movsi_push_pop
	store8! &4 	#X3
	push! 2047		# 20	[c=4]movsi_push_pop
	store8! &8 	#X7
	push! 3		# 21	[c=4]movsi_push_pop
	store8! &11 	#X10
	jump! .L4.l_o41067e		# 6162	[c=4]jump
.L70.l_o41067e:
	push! 0		# 10	[c=4]movsi_push_pop
	store8! &3 	#X2
	push! 4		# 11	[c=4]movsi_push_pop
	store8! &4 	#X3
	push! 0		# 12	[c=4]movsi_push_pop
	store8! &8 	#X7
	push! 1		# 13	[c=4]movsi_push_pop
	store8! &11 	#X10
	jump! .L4.l_o41067e		# 6164	[c=4]jump
.L117.l_o41067e:
	load8! &3 	#X3	# 638	[c=5]movdi_to_tr_unspec/1
	or! 0x1		# 640	[c=4]*iordi3/0
	store8! &4 	#X3	# 4894	[c=4]movsi_from_tr_unspec/0
	push! 0		# 26	[c=4]movsi_push_pop
	store8! &5 	#X4
	push! 1		# 27	[c=4]movsi_push_pop
	store8! &7 	#X6
	jump! .L11.l_o41067e		# 6166	[c=4]jump
.L74.l_o41067e:
	push! 2047		# 81	[c=4]movhi_push_pop
	store8! &4 	#X3
	push! 0		# 82	[c=4]movsi_push_pop
	store8! &5 	#X4
	push! 0		# 83	[c=4]movsi_push_pop
	store8! &3 	#X2
	load4! &2 	#X2	# 3648	[c=5]movsi_to_tr_unspec/1
	store8! &3 	#X2	# 3650	[c=4]movdi_from_tr_unspec/0
	push! 0		# 3651	[c=3]movdi_to_tr_unspec/0
	and! 0xffffffff00000000		# 3653	[c=4]*anddi3/0
	load8! &3 	#X2	# 3654	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 3655	[c=4]movdi_from_tr_unspec/0
	load4! &4 	#X4	# 3659	[c=5]movsi_to_tr_unspec/1
	and! 0xfffff		# 3661	[c=4]*anddi3/0
	shift_l! 32	# 3243	[c=8]*ashldi3/0
	store8! &3 	#X2	# 3244	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 3664	[c=5]movdi_to_tr_unspec/1
	and! 0xfff00000ffffffff		# 3666	[c=4]*anddi3/0
	load8! &3 	#X2	# 3667	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 3668	[c=4]movdi_from_tr_unspec/0
	load2! &3 	#X3	# 3672	[c=5]movhi_to_tr_unspec/1
	and! 0x7ff		# 3674	[c=4]*anddi3/0
	shift_l! 52	# 3269	[c=8]*ashldi3/0
	store8! &3 	#X2	# 3270	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 3677	[c=5]movdi_to_tr_unspec/1
	and! 0x800fffffffffffff		# 3679	[c=4]*anddi3/0
	load8! &3 	#X2	# 3680	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 3681	[c=4]movdi_from_tr_unspec/0
	load1! &1 	#X1	# 3685	[c=5]movqi_to_tr_unspec/1
	shift_l! 63	# 3687	[c=8]*ashldi3/0
	store8! &2 	#X1	# 3688	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 3689	[c=5]movdi_to_tr_unspec/1
	and! 0x7fffffffffffffff		# 3691	[c=4]*anddi3/0
	load8! &2 	#X1	# 3692	[c=6]*iordi3/2
	or
	store8! &18	# 4481	[c=4]movdf_from_tr_unspec/0
	jump! .L119.l_o41067e		# 6169	[c=4]jump
.L73.l_o41067e:
	push! 0		# 65	[c=4]movqi_push_pop
	store8! &2 	#X1
	push! 1048575		# 66	[c=4]movsi_push_pop
	store8! &5 	#X4
	push! -1		# 67	[c=4]movsi_push_pop
	store8! &3 	#X2
	push! 2047		# 80	[c=4]movhi_push_pop
	store8! &4 	#X3
.L121.l_o41067e:
	load4! &2 	#X2	# 5154	[c=5]movsi_to_tr_unspec/1
	store8! &3 	#X2	# 5156	[c=4]movdi_from_tr_unspec/0
	push! 0		# 5157	[c=3]movdi_to_tr_unspec/0
	and! 0xffffffff00000000		# 5159	[c=4]*anddi3/0
	load8! &3 	#X2	# 5160	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 5161	[c=4]movdi_from_tr_unspec/0
	load4! &4 	#X4	# 5162	[c=5]movsi_to_tr_unspec/1
	and! 0xfffff		# 5164	[c=4]*anddi3/0
	shift_l! 32	# 5166	[c=8]*ashldi3/0
	store8! &3 	#X2	# 5167	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 5168	[c=5]movdi_to_tr_unspec/1
	and! 0xfff00000ffffffff		# 5170	[c=4]*anddi3/0
	load8! &3 	#X2	# 5171	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 5172	[c=4]movdi_from_tr_unspec/0
	load2! &3 	#X3	# 5173	[c=5]movhi_to_tr_unspec/1
	and! 0x7ff		# 5175	[c=4]*anddi3/0
	shift_l! 52	# 5177	[c=8]*ashldi3/0
	store8! &3 	#X2	# 5178	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 5179	[c=5]movdi_to_tr_unspec/1
	and! 0x800fffffffffffff		# 5181	[c=4]*anddi3/0
	load8! &3 	#X2	# 5182	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 5183	[c=4]movdi_from_tr_unspec/0
	load1! &1 	#X1	# 5184	[c=5]movqi_to_tr_unspec/1
	shift_l! 63	# 5186	[c=8]*ashldi3/0
	store8! &2 	#X1	# 5187	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 5188	[c=5]movdi_to_tr_unspec/1
	and! 0x7fffffffffffffff		# 5190	[c=4]*anddi3/0
	load8! &2 	#X1	# 5191	[c=6]*iordi3/2
	or
	store8! &18	# 5192	[c=4]movdf_from_tr_unspec/0
	jump! .L119.l_o41067e		# 6171	[c=4]jump
.L72.l_o41067e:
	load1! &9 	#X9	# 50	[c=4]movqi_push_pop
	store8! &2 	#X1
	# CBRANCH EQ	# 2549	[c=12]cbranchsi4_internal
	load4! &10 	#X10
	push! 2	
	xor	
	jump_zero! .L91.l_o41067e
	# END CBRANCH
.L122.l_o41067e:
	# CBRANCH EQ	# 2551	[c=12]cbranchsi4_internal
	load4! &10 	#X10
	push! 3	
	xor	
	jump_zero! .L54.l_o41067e
	# END CBRANCH
	# CBRANCH EQ	# 2553	[c=12]cbranchsi4_internal
	load4! &10 	#X10
	push! 1	
	xor	
	jump_zero! .L120.l_o41067e
	# END CBRANCH
	load8! &7 	#X7	# 2581	[c=5]movdi_to_tr_unspec/1
	add! 1023		# 2583	[c=4]*adddi/0
	store8! &1 	#AR	# 2584	[c=4]movdi_from_tr_unspec/0
.L47.l_o41067e:
	# CBRANCH	# 2592	[c=12]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	jump_zero! .L41.l_o41067e
	# END CBRANCH
	load8! &2 	#X2	# 2594	[c=5]movdi_to_tr_unspec/1
	and! 0x7		# 2596	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 4593	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L56.l_o41067e
	# END CBRANCH
	load4! &2 	#X2	# 3857	[c=5]movsi_to_tr_unspec/1
	shift_ru! 3	# 3859	[c=40]*lshrdi3/0
	store8! &4 	#X3	# 4590	[c=4]movsi_from_tr_unspec/0
.L57.l_o41067e:
	load8! &5 	#X5	# 2705	[c=5]movdi_to_tr_unspec/1
	and! 0x1000000		# 2707	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 4575	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L60.l_o41067e
	# END CBRANCH
	load8! &5 	#X5	# 2716	[c=5]movdi_to_tr_unspec/1
	and! 0xfffffffffeffffff		# 2718	[c=4]*anddi3/0
	store8! &6 	#X5	# 4572	[c=4]movsi_from_tr_unspec/0
	load8! &7 	#X7	# 2725	[c=5]movdi_to_tr_unspec/1
	add! 1024		# 2727	[c=4]*adddi/0
	store8! &1 	#AR	# 2728	[c=4]movdi_from_tr_unspec/0
.L60.l_o41067e:
	# CBRANCH	# 2736	[c=12]cbranchsi4_internal
	push! 2046	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L93.l_o41067e
	# END CBRANCH
	load8! &5 	#X5	# 2738	[c=5]movdi_to_tr_unspec/1
	shift_l! 29	# 2740	[c=8]*ashldi3/0
	load8! &4 	#X3	# 5021	[c=6]*iordi3/2
	or
	store8! &3 	#X2	# 5022	[c=4]movdi_from_tr_unspec/0
	load4! &5 	#X5	# 4561	[c=5]movsi_to_tr_unspec/1
	shift_ru! 3	# 3816	[c=40]*lshrdi3/0
	and! 0xfffff		# 2776	[c=4]*anddi3/0
	store8! &5 	#X4	# 4568	[c=4]movsi_from_tr_unspec/0
	load2! &0 	#AR	# 3821	[c=5]movhi_to_tr_unspec/1
	and! 0x7ff		# 2789	[c=4]*anddi3/0
	store8! &4 	#X3	# 4570	[c=4]movhi_from_tr_unspec/0
	load4! &2 	#X2	# 5195	[c=5]movsi_to_tr_unspec/1
	store8! &3 	#X2	# 5197	[c=4]movdi_from_tr_unspec/0
	push! 0		# 5198	[c=3]movdi_to_tr_unspec/0
	and! 0xffffffff00000000		# 5200	[c=4]*anddi3/0
	load8! &3 	#X2	# 5201	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 5202	[c=4]movdi_from_tr_unspec/0
	load4! &4 	#X4	# 5203	[c=5]movsi_to_tr_unspec/1
	and! 0xfffff		# 5205	[c=4]*anddi3/0
	shift_l! 32	# 5207	[c=8]*ashldi3/0
	store8! &3 	#X2	# 5208	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 5209	[c=5]movdi_to_tr_unspec/1
	and! 0xfff00000ffffffff		# 5211	[c=4]*anddi3/0
	load8! &3 	#X2	# 5212	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 5213	[c=4]movdi_from_tr_unspec/0
	load2! &3 	#X3	# 5214	[c=5]movhi_to_tr_unspec/1
	and! 0x7ff		# 5216	[c=4]*anddi3/0
	shift_l! 52	# 5218	[c=8]*ashldi3/0
	store8! &3 	#X2	# 5219	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 5220	[c=5]movdi_to_tr_unspec/1
	and! 0x800fffffffffffff		# 5222	[c=4]*anddi3/0
	load8! &3 	#X2	# 5223	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 5224	[c=4]movdi_from_tr_unspec/0
	load1! &1 	#X1	# 5225	[c=5]movqi_to_tr_unspec/1
	shift_l! 63	# 5227	[c=8]*ashldi3/0
	store8! &2 	#X1	# 5228	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 5229	[c=5]movdi_to_tr_unspec/1
	and! 0x7fffffffffffffff		# 5231	[c=4]*anddi3/0
	load8! &2 	#X1	# 5232	[c=6]*iordi3/2
	or
	store8! &18	# 5233	[c=4]movdf_from_tr_unspec/0
	jump! .L119.l_o41067e		# 6174	[c=4]jump
.L116.l_o41067e:
	load8! &3 	#X3	# 896	[c=5]movdi_to_tr_unspec/1
	or! 0x3		# 898	[c=4]*iordi3/0
	store8! &4 	#X3	# 4847	[c=4]movsi_from_tr_unspec/0
	load4! &6 	#X6	# 30	[c=4]movsi_push_pop
	store8! &1 	#AR
	push! 3		# 31	[c=4]movsi_push_pop
	store8! &7 	#X6
	jump! .L11.l_o41067e		# 6176	[c=4]jump
.L25.l_o41067e:
	push! 0		# 68	[c=4]movhi_push_pop
	store8! &4 	#X3
	push! 0		# 69	[c=4]movsi_push_pop
	store8! &5 	#X4
	push! 0		# 70	[c=4]movsi_push_pop
	store8! &3 	#X2
	load4! &2 	#X2	# 5236	[c=5]movsi_to_tr_unspec/1
	store8! &3 	#X2	# 5238	[c=4]movdi_from_tr_unspec/0
	push! 0		# 5239	[c=3]movdi_to_tr_unspec/0
	and! 0xffffffff00000000		# 5241	[c=4]*anddi3/0
	load8! &3 	#X2	# 5242	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 5243	[c=4]movdi_from_tr_unspec/0
	load4! &4 	#X4	# 5244	[c=5]movsi_to_tr_unspec/1
	and! 0xfffff		# 5246	[c=4]*anddi3/0
	shift_l! 32	# 5248	[c=8]*ashldi3/0
	store8! &3 	#X2	# 5249	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 5250	[c=5]movdi_to_tr_unspec/1
	and! 0xfff00000ffffffff		# 5252	[c=4]*anddi3/0
	load8! &3 	#X2	# 5253	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 5254	[c=4]movdi_from_tr_unspec/0
	load2! &3 	#X3	# 5255	[c=5]movhi_to_tr_unspec/1
	and! 0x7ff		# 5257	[c=4]*anddi3/0
	shift_l! 52	# 5259	[c=8]*ashldi3/0
	store8! &3 	#X2	# 5260	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 5261	[c=5]movdi_to_tr_unspec/1
	and! 0x800fffffffffffff		# 5263	[c=4]*anddi3/0
	load8! &3 	#X2	# 5264	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 5265	[c=4]movdi_from_tr_unspec/0
	load1! &1 	#X1	# 5266	[c=5]movqi_to_tr_unspec/1
	shift_l! 63	# 5268	[c=8]*ashldi3/0
	store8! &2 	#X1	# 5269	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 5270	[c=5]movdi_to_tr_unspec/1
	and! 0x7fffffffffffffff		# 5272	[c=4]*anddi3/0
	load8! &2 	#X1	# 5273	[c=6]*iordi3/2
	or
	store8! &18	# 5274	[c=4]movdf_from_tr_unspec/0
	jump! .L119.l_o41067e		# 6178	[c=4]jump
.L19.l_o41067e:
	load8! &5 	#X5	# 2481	[c=5]movdi_to_tr_unspec/1
	and! 0x80000		# 2483	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 4617	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L53.l_o41067e
	# END CBRANCH
	load8! &4 	#X4	# 2492	[c=5]movdi_to_tr_unspec/1
	and! 0x80000		# 2494	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 4614	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L53.l_o41067e
	# END CBRANCH
	load8! &4 	#X4	# 2503	[c=5]movdi_to_tr_unspec/1
	or! 0x80000		# 2505	[c=4]*iordi3/0
	and! 0xfffff		# 2514	[c=4]*anddi3/0
	store8! &5 	#X4	# 4611	[c=4]movsi_from_tr_unspec/0
	load1! &11 	#X11	# 62	[c=4]movqi_push_pop
	store8! &2 	#X1
	load4! &0 	#AR	# 63	[c=4]movsi_push_pop
	store8! &3 	#X2
	push! 2047		# 5277	[c=4]movhi_push_pop
	store8! &4 	#X3
	jump! .L121.l_o41067e		# 6181	[c=4]jump
.L22.l_o41067e:
	load1! &11 	#X11	# 51	[c=4]movqi_push_pop
	store8! &2 	#X1
	load4! &4 	#X4	# 52	[c=4]movsi_push_pop
	store8! &6 	#X5
	load4! &0 	#AR	# 53	[c=4]movsi_push_pop
	store8! &3 	#X2
	load4! &6 	#X6	# 54	[c=4]movsi_push_pop
	store8! &11 	#X10
	# CBRANCH	# 5280	[c=12]cbranchsi4_internal
	load4! &10 	#X10
	push! 2	
	xor	
	push! 1	
	lt_u	
	jump_zero! .L122.l_o41067e
	# END CBRANCH
.L91.l_o41067e:
	push! 2047		# 71	[c=4]movhi_push_pop
	store8! &4 	#X3
	push! 0		# 72	[c=4]movsi_push_pop
	store8! &5 	#X4
	push! 0		# 73	[c=4]movsi_push_pop
	store8! &3 	#X2
	load4! &2 	#X2	# 5283	[c=5]movsi_to_tr_unspec/1
	store8! &3 	#X2	# 5285	[c=4]movdi_from_tr_unspec/0
	push! 0		# 5286	[c=3]movdi_to_tr_unspec/0
	and! 0xffffffff00000000		# 5288	[c=4]*anddi3/0
	load8! &3 	#X2	# 5289	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 5290	[c=4]movdi_from_tr_unspec/0
	load4! &4 	#X4	# 5291	[c=5]movsi_to_tr_unspec/1
	and! 0xfffff		# 5293	[c=4]*anddi3/0
	shift_l! 32	# 5295	[c=8]*ashldi3/0
	store8! &3 	#X2	# 5296	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 5297	[c=5]movdi_to_tr_unspec/1
	and! 0xfff00000ffffffff		# 5299	[c=4]*anddi3/0
	load8! &3 	#X2	# 5300	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 5301	[c=4]movdi_from_tr_unspec/0
	load2! &3 	#X3	# 5302	[c=5]movhi_to_tr_unspec/1
	and! 0x7ff		# 5304	[c=4]*anddi3/0
	shift_l! 52	# 5306	[c=8]*ashldi3/0
	store8! &3 	#X2	# 5307	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 5308	[c=5]movdi_to_tr_unspec/1
	and! 0x800fffffffffffff		# 5310	[c=4]*anddi3/0
	load8! &3 	#X2	# 5311	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 5312	[c=4]movdi_from_tr_unspec/0
	load1! &1 	#X1	# 5313	[c=5]movqi_to_tr_unspec/1
	shift_l! 63	# 5315	[c=8]*ashldi3/0
	store8! &2 	#X1	# 5316	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 5317	[c=5]movdi_to_tr_unspec/1
	and! 0x7fffffffffffffff		# 5319	[c=4]*anddi3/0
	load8! &2 	#X1	# 5320	[c=6]*iordi3/2
	or
	store8! &18	# 5321	[c=4]movdf_from_tr_unspec/0
	jump! .L119.l_o41067e		# 6184	[c=4]jump
.L53.l_o41067e:
	load8! &5 	#X5	# 2525	[c=5]movdi_to_tr_unspec/1
	or! 0x80000		# 2527	[c=4]*iordi3/0
	and! 0xfffff		# 2536	[c=4]*anddi3/0
	store8! &5 	#X4	# 4605	[c=4]movsi_from_tr_unspec/0
	load1! &9 	#X9	# 64	[c=4]movqi_push_pop
	store8! &2 	#X1
	push! 2047		# 5324	[c=4]movhi_push_pop
	store8! &4 	#X3
	jump! .L121.l_o41067e		# 6186	[c=4]jump
.L120.l_o41067e:
	push! 0		# 74	[c=4]movhi_push_pop
	store8! &4 	#X3
	push! 0		# 75	[c=4]movsi_push_pop
	store8! &5 	#X4
	push! 0		# 76	[c=4]movsi_push_pop
	store8! &3 	#X2
	load4! &2 	#X2	# 5327	[c=5]movsi_to_tr_unspec/1
	store8! &3 	#X2	# 5329	[c=4]movdi_from_tr_unspec/0
	push! 0		# 5330	[c=3]movdi_to_tr_unspec/0
	and! 0xffffffff00000000		# 5332	[c=4]*anddi3/0
	load8! &3 	#X2	# 5333	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 5334	[c=4]movdi_from_tr_unspec/0
	load4! &4 	#X4	# 5335	[c=5]movsi_to_tr_unspec/1
	and! 0xfffff		# 5337	[c=4]*anddi3/0
	shift_l! 32	# 5339	[c=8]*ashldi3/0
	store8! &3 	#X2	# 5340	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 5341	[c=5]movdi_to_tr_unspec/1
	and! 0xfff00000ffffffff		# 5343	[c=4]*anddi3/0
	load8! &3 	#X2	# 5344	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 5345	[c=4]movdi_from_tr_unspec/0
	load2! &3 	#X3	# 5346	[c=5]movhi_to_tr_unspec/1
	and! 0x7ff		# 5348	[c=4]*anddi3/0
	shift_l! 52	# 5350	[c=8]*ashldi3/0
	store8! &3 	#X2	# 5351	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 5352	[c=5]movdi_to_tr_unspec/1
	and! 0x800fffffffffffff		# 5354	[c=4]*anddi3/0
	load8! &3 	#X2	# 5355	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 5356	[c=4]movdi_from_tr_unspec/0
	load1! &1 	#X1	# 5357	[c=5]movqi_to_tr_unspec/1
	shift_l! 63	# 5359	[c=8]*ashldi3/0
	store8! &2 	#X1	# 5360	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 5361	[c=5]movdi_to_tr_unspec/1
	and! 0x7fffffffffffffff		# 5363	[c=4]*anddi3/0
	load8! &2 	#X1	# 5364	[c=6]*iordi3/2
	or
	store8! &18	# 5365	[c=4]movdf_from_tr_unspec/0
	jump! .L119.l_o41067e		# 6188	[c=4]jump
.L13.l_o41067e:
	load4! &6 	#X6	# 4318	[c=5]movsi_to_tr_unspec/1
	#peep - pop(deadreg)+pusharg	# 4322	[c=0]*peep2_pop_pusharg
	call! __clzdi2		# 694	[c=0]*call_value_pop_1/0
	store8! &1

	load4! &0 	#AR	# 4326	[c=5]movsi_to_tr_unspec/1
	add! -32		# 4328	[c=4]*adddi/0
	store8! &1 	#AR	# 4881	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 4882	[c=5]movdi_to_tr_unspec/1
	add! 32		# 712	[c=4]*adddi/0
	store8! &2 	#X1	# 4884	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 4885	[c=5]movdi_to_tr_unspec/1
	add! 21		# 721	[c=4]*adddi/0
	store8! &5 	#X4	# 4887	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 4888	[c=12]cbranchsi4_internal
	push! 28	
	add! -2147483648	
	load4! &5 	#X4
	add! -2147483648	
	lt_u	
	jump_zero! .L14.l_o41067e
	# END CBRANCH
	load8! &0 	#AR	# 817	[c=5]movdi_to_tr_unspec/1
	add! -8		# 819	[c=4]*adddi/0
	and! 0xffffffff		# 5147	[c=4]*anddi3/0
	pow2		# 4288	[c=4]*pow_tr
	load8! &7 	#X6	# 4289	[c=6]*muldi3/2
	mult
	store8! &5 	#X4	# 4860	[c=4]movsi_from_tr_unspec/0
	push! 0		# 22	[c=4]movsi_push_pop
	store8! &1 	#AR
	push! -1011		# 5369	[c=3]movdi_to_tr_unspec/0
	load8! &2 	#X1	# 5371	[c=14]*subdi3/2
	sub
	store8! &2 	#X1	# 5372	[c=4]movdi_from_tr_unspec/0
	load8! &7 	#X7	# 5373	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 5375	[c=14]*subdi3/2
	sub
	store8! &8 	#X7	# 5377	[c=4]movsi_from_tr_unspec/0
	push! 0		# 5378	[c=4]movsi_push_pop
	store8! &7 	#X6
	jump! .L11.l_o41067e		# 6190	[c=4]jump
.L5.l_o41067e:
	load4! &2 	#X2	# 4420	[c=5]movsi_to_tr_unspec/1
	#peep - pop(deadreg)+pusharg	# 4424	[c=0]*peep2_pop_pusharg
	call! __clzdi2		# 290	[c=0]*call_value_pop_1/0
	store8! &1

	load4! &0 	#AR	# 4428	[c=5]movsi_to_tr_unspec/1
	add! -32		# 4430	[c=4]*adddi/0
	store8! &2 	#X1	# 4956	[c=4]movsi_from_tr_unspec/0
	load8! &1 	#X1	# 306	[c=5]movdi_to_tr_unspec/1
	add! 32		# 308	[c=4]*adddi/0
	store8! &1 	#AR	# 4957	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 4958	[c=5]movdi_to_tr_unspec/1
	add! 21		# 317	[c=4]*adddi/0
	store8! &5 	#X4	# 4960	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 4961	[c=12]cbranchsi4_internal
	push! 28	
	add! -2147483648	
	load4! &5 	#X4
	add! -2147483648	
	lt_u	
	jump_zero! .L6.l_o41067e
	# END CBRANCH
	load8! &1 	#X1	# 413	[c=5]movdi_to_tr_unspec/1
	add! -8		# 415	[c=4]*adddi/0
	and! 0xffffffff		# 5149	[c=4]*anddi3/0
	pow2		# 4393	[c=4]*pow_tr
	load8! &3 	#X2	# 4394	[c=6]*muldi3/2
	mult
	store8! &6 	#X5	# 4939	[c=4]movsi_from_tr_unspec/0
	push! 0		# 5	[c=4]movsi_push_pop
	store8! &3 	#X2
	push! -1011		# 5382	[c=3]movdi_to_tr_unspec/0
	load8! &1 	#AR	# 5384	[c=14]*subdi3/2
	sub
	store8! &8 	#X7	# 5386	[c=4]movsi_from_tr_unspec/0
	push! 0		# 5387	[c=4]movsi_push_pop
	store8! &4 	#X3
	push! 0		# 5388	[c=4]movsi_push_pop
	store8! &11 	#X10
	jump! .L4.l_o41067e		# 6192	[c=4]jump
.L18.l_o41067e:
	# CBRANCH	# 943	[c=12]cbranchsi4_internal
	load4! &4 	#X4
	load4! &6 	#X5
	lt_u	
	not	
	jump_zero! .L26.l_o41067e
	# END CBRANCH
	# CBRANCH EQ	# 945	[c=12]cbranchsi4_internal
	load4! &4 	#X4
	load4! &6 	#X5
	xor	
	jump_zero! .L123.l_o41067e
	# END CBRANCH
.L27.l_o41067e:
	load8! &7 	#X7	# 1013	[c=5]movdi_to_tr_unspec/1
	add! -1		# 1015	[c=4]*adddi/0
	store8! &8 	#X7	# 4835	[c=4]movsi_from_tr_unspec/0
	load4! &2 	#X2	# 32	[c=4]movsi_push_pop
	store8! &12 	#X11
	load4! &5 	#X5	# 33	[c=4]movsi_push_pop
	store8! &9 	#X8
	push! 0		# 34	[c=4]movsi_push_pop
	store8! &3 	#X2
	load8! &4 	#X4	# 1024	[c=5]movdi_to_tr_unspec/1
	shift_l! 8	# 1026	[c=8]*ashldi3/0
	store8! &4 	#X3	# 4807	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 4808	[c=5]movsi_to_tr_unspec/1
	shift_ru! 24	# 4201	[c=40]*lshrdi3/0
	load8! &4 	#X3	# 1053	[c=6]*iordi3/2
	or
	store8! &4 	#X3	# 4811	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 4812	[c=5]movdi_to_tr_unspec/1
	shift_l! 8	# 1062	[c=8]*ashldi3/0
	store8! &5 	#X4	# 4815	[c=4]movsi_from_tr_unspec/0
	load4! &3 	#X3	# 4210	[c=5]movsi_to_tr_unspec/1
	shift_ru! 16	# 4212	[c=40]*lshrdi3/0
	store8! &7 	#X6	# 4817	[c=4]movsi_from_tr_unspec/0
	load8! &3 	#X3	# 1083	[c=5]movdi_to_tr_unspec/1
	and! 0xffff		# 1085	[c=4]*anddi3/0
	store8! &11 	#X10	# 4819	[c=4]movsi_from_tr_unspec/0
	load4! &8 	#X8	# 4216	[c=5]movsi_to_tr_unspec/1
	store8! &6 	#X5	# 4218	[c=4]movdi_from_tr_unspec/0
	load4! &6 	#X6	# 4219	[c=5]movsi_to_tr_unspec/1
	store8! &1 	#AR	# 4221	[c=4]movdi_from_tr_unspec/0
	load8! &5 	#X5	# 1102	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 1104	[c=30]*umoddi3/2
	rem_u
	store8! &1 	#AR	# 4820	[c=4]movdi_from_tr_unspec/0
	load4! &8 	#X8	# 4821	[c=5]movsi_to_tr_unspec/1
	store8! &9 	#X8	# 4225	[c=4]movdi_from_tr_unspec/0
	load4! &6 	#X6	# 4226	[c=5]movsi_to_tr_unspec/1
	store8! &6 	#X5	# 4228	[c=4]movdi_from_tr_unspec/0
	load8! &8 	#X8	# 1121	[c=5]movdi_to_tr_unspec/1
	load8! &6 	#X5	# 1123	[c=30]*udivdi3/2
	div_u
	store8! &9 	#X8	# 4824	[c=4]movsi_from_tr_unspec/0
	load8! &8 	#X8	# 4231	[c=5]movdi_to_tr_unspec/1
	load8! &11 	#X10	# 4233	[c=6]*muldi3/2
	mult
	store8! &6 	#X5	# 4825	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 4826	[c=5]movdi_to_tr_unspec/1
	shift_l! 16	# 1145	[c=8]*ashldi3/0
	store8! &1 	#AR	# 4828	[c=4]movdi_from_tr_unspec/0
	load4! &11 	#X11	# 4829	[c=5]movsi_to_tr_unspec/1
	shift_ru! 16	# 4241	[c=40]*lshrdi3/0
	load8! &1 	#AR	# 1172	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 4832	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 4833	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	load4! &6 	#X5
	lt_u	
	jump_zero! .L29.l_o41067e
	# END CBRANCH
.L130.l_o41067e:
	load8! &8 	#X8	# 1181	[c=5]movdi_to_tr_unspec/1
	add! -1		# 1183	[c=4]*adddi/0
	store8! &10 	#X9	# 4802	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 4803	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 4193	[c=6]*adddi/2
	add
	store8! &1 	#AR	# 4805	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 4806	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	load4! &4 	#X3
	lt_u	
	not	
	jump_zero! .L75.l_o41067e
	# END CBRANCH
	# CBRANCH	# 1205	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	load4! &6 	#X5
	lt_u	
	not	
	jump_zero! .L124.l_o41067e
	# END CBRANCH
	load4! &9 	#X9	# 36	[c=4]movsi_push_pop
	store8! &9 	#X8
.L29.l_o41067e:
	load8! &0 	#AR	# 1235	[c=5]movdi_to_tr_unspec/1
	load8! &6 	#X5	# 1237	[c=14]*subdi3/2
	sub
	store8! &1 	#AR	# 4784	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 4785	[c=5]movsi_to_tr_unspec/1
	store8! &10 	#X9	# 4162	[c=4]movdi_from_tr_unspec/0
	load4! &6 	#X6	# 4163	[c=5]movsi_to_tr_unspec/1
	store8! &6 	#X5	# 4165	[c=4]movdi_from_tr_unspec/0
	load8! &9 	#X9	# 1254	[c=5]movdi_to_tr_unspec/1
	load8! &6 	#X5	# 1256	[c=30]*umoddi3/2
	rem_u
	store8! &13 	#X12	# 4788	[c=4]movsi_from_tr_unspec/0
	load4! &0 	#AR	# 4167	[c=5]movsi_to_tr_unspec/1
	store8! &6 	#X5	# 4169	[c=4]movdi_from_tr_unspec/0
	load4! &6 	#X6	# 4170	[c=5]movsi_to_tr_unspec/1
	store8! &1 	#AR	# 4172	[c=4]movdi_from_tr_unspec/0
	load8! &5 	#X5	# 1273	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 1275	[c=30]*udivdi3/2
	div_u
	store8! &6 	#X5	# 4790	[c=4]movsi_from_tr_unspec/0
	load8! &5 	#X5	# 4175	[c=5]movdi_to_tr_unspec/1
	load8! &11 	#X10	# 4177	[c=6]*muldi3/2
	mult
	store8! &10 	#X9	# 4792	[c=4]movsi_from_tr_unspec/0
	load8! &12 	#X12	# 1295	[c=5]movdi_to_tr_unspec/1
	shift_l! 16	# 1297	[c=8]*ashldi3/0
	store8! &1 	#AR	# 4793	[c=4]movdi_from_tr_unspec/0
	load8! &11 	#X11	# 4794	[c=5]movdi_to_tr_unspec/1
	and! 0xffff		# 1306	[c=4]*anddi3/0
	load8! &1 	#AR	# 1319	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 4797	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 4798	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	load4! &10 	#X9
	lt_u	
	jump_zero! .L30.l_o41067e
	# END CBRANCH
.L139.l_o41067e:
	load8! &5 	#X5	# 1328	[c=5]movdi_to_tr_unspec/1
	add! -1		# 1330	[c=4]*adddi/0
	store8! &12 	#X11	# 4779	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 4780	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 4156	[c=6]*adddi/2
	add
	store8! &1 	#AR	# 4782	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 4783	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	load4! &4 	#X3
	lt_u	
	not	
	jump_zero! .L77.l_o41067e
	# END CBRANCH
	# CBRANCH	# 1352	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	load4! &10 	#X9
	lt_u	
	not	
	jump_zero! .L125.l_o41067e
	# END CBRANCH
	load4! &11 	#X11	# 38	[c=4]movsi_push_pop
	store8! &6 	#X5
.L30.l_o41067e:
	load8! &0 	#AR	# 1382	[c=5]movdi_to_tr_unspec/1
	load8! &10 	#X9	# 1384	[c=14]*subdi3/2
	sub
	store8! &1 	#AR	# 4745	[c=4]movdi_from_tr_unspec/0
	load8! &8 	#X8	# 4746	[c=5]movdi_to_tr_unspec/1
	shift_l! 16	# 1393	[c=8]*ashldi3/0
	load8! &6 	#X5	# 5086	[c=6]*iordi3/2
	or
	store8! &6 	#X5	# 5087	[c=4]movdi_from_tr_unspec/0
	load4! &5 	#X5	# 4750	[c=5]movsi_to_tr_unspec/1
	shift_ru! 16	# 4104	[c=40]*lshrdi3/0
	store8! &12 	#X11	# 4753	[c=4]movsi_from_tr_unspec/0
	load4! &4 	#X4	# 4110	[c=5]movsi_to_tr_unspec/1
	shift_ru! 16	# 4112	[c=40]*lshrdi3/0
	store8! &9 	#X8	# 4754	[c=4]movdi_from_tr_unspec/0
	load8! &5 	#X5	# 4755	[c=5]movdi_to_tr_unspec/1
	and! 0xffff		# 1443	[c=4]*anddi3/0
	store8! &13 	#X12	# 4758	[c=4]movsi_from_tr_unspec/0
	load8! &4 	#X4	# 1450	[c=5]movdi_to_tr_unspec/1
	and! 0xffff		# 1452	[c=4]*anddi3/0
	store8! &10 	#X9	# 4759	[c=4]movdi_from_tr_unspec/0
	load8! &12 	#X12	# 4760	[c=5]movdi_to_tr_unspec/1
	load8! &10 	#X9	# 4120	[c=6]*muldi3/2
	mult
	store8! &14 	#X13	# 4762	[c=4]movdi_from_tr_unspec/0
	load8! &12 	#X12	# 4763	[c=5]movdi_to_tr_unspec/1
	load8! &9 	#X8	# 4125	[c=6]*muldi3/2
	mult
	store8! &13 	#X12	# 4765	[c=4]movdi_from_tr_unspec/0
	load8! &9 	#X9	# 4766	[c=5]movdi_to_tr_unspec/1
	load8! &12 	#X11	# 4130	[c=6]*muldi3/2
	mult
	store8! &15 	#X14	# 5088	[c=4]movdi_from_tr_unspec/0
	load8! &8 	#X8	# 5089	[c=5]movdi_to_tr_unspec/1
	load8! &12 	#X11	# 1504	[c=6]*muldi3/2
	mult
	store8! &12 	#X11	# 4769	[c=4]movdi_from_tr_unspec/0
	load4! &13 	#X13	# 4770	[c=5]movsi_to_tr_unspec/1
	shift_ru! 16	# 4139	[c=40]*lshrdi3/0
	store8! &16 	#X15	# 5091	[c=4]movdi_from_tr_unspec/0
	load8! &14 	#X14	# 5092	[c=5]movdi_to_tr_unspec/1
	load8! &13 	#X12	# 1531	[c=6]*adddi/2
	add
	load8! &16 	#X15	# 1544	[c=6]*adddi/2
	add
	store8! &13 	#X12	# 4774	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 4775	[c=12]cbranchsi4_internal
	load4! &12 	#X12
	load4! &15 	#X14
	lt_u	
	jump_zero! .L31.l_o41067e
	# END CBRANCH
.L140.l_o41067e:
	load8! &11 	#X11	# 1553	[c=5]movdi_to_tr_unspec/1
	add! 65536		# 1555	[c=4]*adddi/0
	store8! &12 	#X11	# 1556	[c=4]movdi_from_tr_unspec/0
.L31.l_o41067e:
	load4! &12 	#X12	# 4081	[c=5]movsi_to_tr_unspec/1
	shift_ru! 16	# 4083	[c=40]*lshrdi3/0
	load8! &12 	#X11	# 5079	[c=6]*adddi/2
	add
	store8! &12 	#X11	# 5080	[c=4]movdi_from_tr_unspec/0
	load8! &12 	#X12	# 4733	[c=5]movdi_to_tr_unspec/1
	and! 0xffff		# 1593	[c=4]*anddi3/0
	shift_l! 16	# 1602	[c=8]*ashldi3/0
	store8! &13 	#X12	# 4739	[c=4]movdi_from_tr_unspec/0
	load8! &13 	#X13	# 4740	[c=5]movdi_to_tr_unspec/1
	and! 0xffff		# 1611	[c=4]*anddi3/0
	load8! &13 	#X12	# 1624	[c=6]*adddi/2
	add
	store8! &14 	#X13	# 4744	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 1631	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	load4! &12 	#X11
	lt_u	
	jump_zero! .L126.l_o41067e
	# END CBRANCH
	load8! &5 	#X5	# 1638	[c=5]movdi_to_tr_unspec/1
	add! -1		# 1640	[c=4]*adddi/0
	store8! &13 	#X12	# 5075	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 5076	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 1653	[c=6]*adddi/2
	add
	store8! &3 	#X2	# 1654	[c=4]movdi_from_tr_unspec/0
	push! 1		# 4077	[c=4]movqi_push_pop
	store8! &15 	#X14
	# CBRANCH	# 1661	[c=12]cbranchsi4_internal
	load4! &2 	#X2
	load4! &5 	#X4
	lt_u	
	not	
	jump_zero! .L34.l_o41067e
	# END CBRANCH
.L131.l_o41067e:
	push! 0		# 1662	[c=4]movqi_push_pop
	store8! &15 	#X14
.L34.l_o41067e:
	load1! &14 	#X14	# 4066	[c=5]movqi_to_tr_unspec/1
	load8! &4 	#X3	# 5070	[c=6]*adddi/2
	add
	load8! &1 	#AR	# 5073	[c=6]*adddi/2
	add
	store8! &1 	#AR	# 5074	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 4729	[c=12]cbranchsi4_internal
	load4! &3 	#X3
	load4! &1 	#AR
	lt_u	
	jump_zero! .L127.l_o41067e
	# END CBRANCH
.L35.l_o41067e:
	# CBRANCH	# 1706	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	load4! &12 	#X11
	lt_u	
	not	
	jump_zero! .L36.l_o41067e
	# END CBRANCH
	# CBRANCH	# 1708	[c=12]cbranchsi4_internal
	load4! &11 	#X11
	load4! &1 	#AR
	xor	
	push! 1	
	lt_u	
	jump_zero! .L81.l_o41067e
	# END CBRANCH
	# CBRANCH	# 1710	[c=12]cbranchsi4_internal
	load4! &2 	#X2
	load4! &14 	#X13
	lt_u	
	not	
	jump_zero! .L36.l_o41067e
	# END CBRANCH
	load4! &12 	#X12	# 42	[c=4]movsi_push_pop
	store8! &6 	#X5
.L33.l_o41067e:
	load8! &13 	#X13	# 4043	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 4045	[c=14]*subdi3/2
	sub
	neg		# 4046	[c=4]*neg_tr
	store8! &13 	#X12	# 5059	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 5060	[c=5]movdi_to_tr_unspec/1
	load8! &12 	#X11	# 1795	[c=14]*subdi3/2
	sub
	store8! &12 	#X11	# 4720	[c=4]movsi_from_tr_unspec/0
	push! 1		# 1802	[c=4]movqi_push_pop
	store8! &1 	#AR
	# CBRANCH	# 1803	[c=12]cbranchsi4_internal
	load4! &2 	#X2
	load4! &13 	#X12
	lt_u	
	not	
	jump_zero! .L38.l_o41067e
	# END CBRANCH
.L142.l_o41067e:
	push! 0		# 1804	[c=4]movqi_push_pop
	store8! &1 	#AR
.L38.l_o41067e:
	load1! &0 	#AR	# 4035	[c=5]movqi_to_tr_unspec/1
	store8! &1 	#AR	# 5056	[c=4]movdi_from_tr_unspec/0
	load8! &11 	#X11	# 5057	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 1821	[c=14]*subdi3/2
	sub
	store8! &3 	#X2	# 4715	[c=4]movsi_from_tr_unspec/0
	load8! &7 	#X7	# 1828	[c=5]movdi_to_tr_unspec/1
	add! 1023		# 1830	[c=4]*adddi/0
	store8! &1 	#AR	# 4716	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 4717	[c=12]cbranchsi4_internal
	load4! &3 	#X3
	load4! &3 	#X2
	xor	
	push! 1	
	lt_u	
	jump_zero! .L39.l_o41067e
	# END CBRANCH
	# CBRANCH	# 1839	[c=12]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L83.l_o41067e
	# END CBRANCH
	push! -1		# 57	[c=4]movsi_push_pop
	store8! &3 	#X2
.L41.l_o41067e:
	load8! &0 	#AR	# 3802	[c=5]movdi_to_tr_unspec/1
	sub! 1		# 3804	[c=12]*subdi3/0
	neg		# 3805	[c=4]*neg_tr
	store8! &4 	#X3	# 4557	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 4558	[c=12]cbranchsi4_internal
	push! 56	
	add! -2147483648	
	load4! &4 	#X3
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L94.l_o41067e
	# END CBRANCH
	# CBRANCH	# 2815	[c=12]cbranchsi4_internal
	push! 31	
	add! -2147483648	
	load4! &4 	#X3
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L61.l_o41067e
	# END CBRANCH
	load8! &7 	#X7	# 2817	[c=5]movdi_to_tr_unspec/1
	add! 1054		# 2819	[c=4]*adddi/0
	store8! &1 	#AR	# 4528	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 4529	[c=5]movsi_to_tr_unspec/1
	store8! &5 	#X4	# 3761	[c=4]movdi_from_tr_unspec/0
	load8! &5 	#X5	# 2831	[c=5]movdi_to_tr_unspec/1
	load8! &5 	#X4	# 2833	[c=10]*ashldi3/2
	shift_l
	store8! &5 	#X4	# 4531	[c=4]movdi_from_tr_unspec/0
	load4! &2 	#X2	# 4532	[c=5]movsi_to_tr_unspec/1
	store8! &8 	#X7	# 3765	[c=4]movdi_from_tr_unspec/0
	load4! &3 	#X3	# 3766	[c=5]movsi_to_tr_unspec/1
	store8! &7 	#X6	# 3768	[c=4]movdi_from_tr_unspec/0
	load8! &7 	#X7	# 2850	[c=5]movdi_to_tr_unspec/1
	load8! &7 	#X6	# 2852	[c=42]*lshrdi3/2
	shift_ru
	load8! &5 	#X4	# 2865	[c=6]*iordi3/2
	or
	store8! &5 	#X4	# 4535	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 4536	[c=5]movsi_to_tr_unspec/1
	pow2		# 3775	[c=4]*pow_tr
	load8! &3 	#X2	# 3776	[c=6]*muldi3/2
	mult
	and! 0xffffffff		# 5141	[c=4]*anddi3/0
	neg		# 2893	[c=3]*negdi2
	shift_ru! 63	# 2898	[c=40]*lshrdi3/0
	and! 0xff		# 5143	[c=4]*anddi3/0
	load8! &5 	#X4	# 3791	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 4548	[c=4]movdi_from_tr_unspec/0
	load4! &5 	#X5	# 4549	[c=5]movsi_to_tr_unspec/1
	store8! &5 	#X4	# 3795	[c=4]movdi_from_tr_unspec/0
	load4! &3 	#X3	# 3796	[c=5]movsi_to_tr_unspec/1
	store8! &3 	#X2	# 3798	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 2937	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 2939	[c=42]*lshrdi3/2
	shift_ru
	store8! &3 	#X2	# 4551	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 4552	[c=5]movdi_to_tr_unspec/1
	and! 0x7		# 2948	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 4556	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L63.l_o41067e
	# END CBRANCH
	load8! &0 	#AR	# 3089	[c=5]movdi_to_tr_unspec/1
	and! 0xf		# 3091	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 4505	[c=12]*peep2_cbranchsi
	# - EQ
	push! 4	
	xor	
	jump_zero! .L63.l_o41067e
	# END CBRANCH
.L68.l_o41067e:
	load8! &0 	#AR	# 3100	[c=5]movdi_to_tr_unspec/1
	add! 4		# 3102	[c=4]*adddi/0
	store8! &4 	#X3	# 3103	[c=4]movdi_from_tr_unspec/0
	push! 1		# 3725	[c=4]movqi_push_pop
	store8! &5 	#X4
	# CBRANCH	# 3110	[c=12]cbranchsi4_internal
	load4! &3 	#X3
	load4! &1 	#AR
	lt_u	
	not	
	jump_zero! .L67.l_o41067e
	# END CBRANCH
	push! 0		# 3111	[c=4]movqi_push_pop
	store8! &5 	#X4
.L67.l_o41067e:
	load1! &4 	#X4	# 3718	[c=5]movqi_to_tr_unspec/1
	store8! &1 	#AR	# 5004	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 5005	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 3128	[c=6]*adddi/2
	add
	store8! &3 	#X2	# 4502	[c=4]movsi_from_tr_unspec/0
	load4! &3 	#X3	# 59	[c=4]movsi_push_pop
	store8! &1 	#AR
.L63.l_o41067e:
	load8! &2 	#X2	# 3137	[c=5]movdi_to_tr_unspec/1
	and! 0x800000		# 3139	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 4499	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L69.l_o41067e
	# END CBRANCH
	push! 1		# 88	[c=4]movhi_push_pop
	store8! &4 	#X3
	push! 0		# 89	[c=4]movsi_push_pop
	store8! &5 	#X4
	push! 0		# 90	[c=4]movsi_push_pop
	store8! &3 	#X2
	load4! &2 	#X2	# 5391	[c=5]movsi_to_tr_unspec/1
	store8! &3 	#X2	# 5393	[c=4]movdi_from_tr_unspec/0
	push! 0		# 5394	[c=3]movdi_to_tr_unspec/0
	and! 0xffffffff00000000		# 5396	[c=4]*anddi3/0
	load8! &3 	#X2	# 5397	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 5398	[c=4]movdi_from_tr_unspec/0
	load4! &4 	#X4	# 5399	[c=5]movsi_to_tr_unspec/1
	and! 0xfffff		# 5401	[c=4]*anddi3/0
	shift_l! 32	# 5403	[c=8]*ashldi3/0
	store8! &3 	#X2	# 5404	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 5405	[c=5]movdi_to_tr_unspec/1
	and! 0xfff00000ffffffff		# 5407	[c=4]*anddi3/0
	load8! &3 	#X2	# 5408	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 5409	[c=4]movdi_from_tr_unspec/0
	load2! &3 	#X3	# 5410	[c=5]movhi_to_tr_unspec/1
	and! 0x7ff		# 5412	[c=4]*anddi3/0
	shift_l! 52	# 5414	[c=8]*ashldi3/0
	store8! &3 	#X2	# 5415	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 5416	[c=5]movdi_to_tr_unspec/1
	and! 0x800fffffffffffff		# 5418	[c=4]*anddi3/0
	load8! &3 	#X2	# 5419	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 5420	[c=4]movdi_from_tr_unspec/0
	load1! &1 	#X1	# 5421	[c=5]movqi_to_tr_unspec/1
	shift_l! 63	# 5423	[c=8]*ashldi3/0
	store8! &2 	#X1	# 5424	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 5425	[c=5]movdi_to_tr_unspec/1
	and! 0x7fffffffffffffff		# 5427	[c=4]*anddi3/0
	load8! &2 	#X1	# 5428	[c=6]*iordi3/2
	or
	store8! &18	# 5429	[c=4]movdf_from_tr_unspec/0
	jump! .L119.l_o41067e		# 6199	[c=4]jump
.L93.l_o41067e:
	push! 2047		# 85	[c=4]movhi_push_pop
	store8! &4 	#X3
	push! 0		# 86	[c=4]movsi_push_pop
	store8! &5 	#X4
	push! 0		# 87	[c=4]movsi_push_pop
	store8! &3 	#X2
	load4! &2 	#X2	# 5432	[c=5]movsi_to_tr_unspec/1
	store8! &3 	#X2	# 5434	[c=4]movdi_from_tr_unspec/0
	push! 0		# 5435	[c=3]movdi_to_tr_unspec/0
	and! 0xffffffff00000000		# 5437	[c=4]*anddi3/0
	load8! &3 	#X2	# 5438	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 5439	[c=4]movdi_from_tr_unspec/0
	load4! &4 	#X4	# 5440	[c=5]movsi_to_tr_unspec/1
	and! 0xfffff		# 5442	[c=4]*anddi3/0
	shift_l! 32	# 5444	[c=8]*ashldi3/0
	store8! &3 	#X2	# 5445	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 5446	[c=5]movdi_to_tr_unspec/1
	and! 0xfff00000ffffffff		# 5448	[c=4]*anddi3/0
	load8! &3 	#X2	# 5449	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 5450	[c=4]movdi_from_tr_unspec/0
	load2! &3 	#X3	# 5451	[c=5]movhi_to_tr_unspec/1
	and! 0x7ff		# 5453	[c=4]*anddi3/0
	shift_l! 52	# 5455	[c=8]*ashldi3/0
	store8! &3 	#X2	# 5456	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 5457	[c=5]movdi_to_tr_unspec/1
	and! 0x800fffffffffffff		# 5459	[c=4]*anddi3/0
	load8! &3 	#X2	# 5460	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 5461	[c=4]movdi_from_tr_unspec/0
	load1! &1 	#X1	# 5462	[c=5]movqi_to_tr_unspec/1
	shift_l! 63	# 5464	[c=8]*ashldi3/0
	store8! &2 	#X1	# 5465	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 5466	[c=5]movdi_to_tr_unspec/1
	and! 0x7fffffffffffffff		# 5468	[c=4]*anddi3/0
	load8! &2 	#X1	# 5469	[c=6]*iordi3/2
	or
	store8! &18	# 5470	[c=4]movdf_from_tr_unspec/0
	jump! .L119.l_o41067e		# 6201	[c=4]jump
.L94.l_o41067e:
	push! 0		# 77	[c=4]movhi_push_pop
	store8! &4 	#X3
	push! 0		# 78	[c=4]movsi_push_pop
	store8! &5 	#X4
	push! 0		# 79	[c=4]movsi_push_pop
	store8! &3 	#X2
	load4! &2 	#X2	# 5473	[c=5]movsi_to_tr_unspec/1
	store8! &3 	#X2	# 5475	[c=4]movdi_from_tr_unspec/0
	push! 0		# 5476	[c=3]movdi_to_tr_unspec/0
	and! 0xffffffff00000000		# 5478	[c=4]*anddi3/0
	load8! &3 	#X2	# 5479	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 5480	[c=4]movdi_from_tr_unspec/0
	load4! &4 	#X4	# 5481	[c=5]movsi_to_tr_unspec/1
	and! 0xfffff		# 5483	[c=4]*anddi3/0
	shift_l! 32	# 5485	[c=8]*ashldi3/0
	store8! &3 	#X2	# 5486	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 5487	[c=5]movdi_to_tr_unspec/1
	and! 0xfff00000ffffffff		# 5489	[c=4]*anddi3/0
	load8! &3 	#X2	# 5490	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 5491	[c=4]movdi_from_tr_unspec/0
	load2! &3 	#X3	# 5492	[c=5]movhi_to_tr_unspec/1
	and! 0x7ff		# 5494	[c=4]*anddi3/0
	shift_l! 52	# 5496	[c=8]*ashldi3/0
	store8! &3 	#X2	# 5497	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 5498	[c=5]movdi_to_tr_unspec/1
	and! 0x800fffffffffffff		# 5500	[c=4]*anddi3/0
	load8! &3 	#X2	# 5501	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 5502	[c=4]movdi_from_tr_unspec/0
	load1! &1 	#X1	# 5503	[c=5]movqi_to_tr_unspec/1
	shift_l! 63	# 5505	[c=8]*ashldi3/0
	store8! &2 	#X1	# 5506	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 5507	[c=5]movdi_to_tr_unspec/1
	and! 0x7fffffffffffffff		# 5509	[c=4]*anddi3/0
	load8! &2 	#X1	# 5510	[c=6]*iordi3/2
	or
	store8! &18	# 5511	[c=4]movdf_from_tr_unspec/0
	jump! .L119.l_o41067e		# 6203	[c=4]jump
.L56.l_o41067e:
	load8! &2 	#X2	# 2623	[c=5]movdi_to_tr_unspec/1
	and! 0xf		# 2625	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 4588	[c=12]*peep2_cbranchsi
	push! 4	
	xor	
	push! 1	
	lt_u	
	jump_zero! .L58.l_o41067e
	# END CBRANCH
	load4! &2 	#X2	# 3848	[c=5]movsi_to_tr_unspec/1
	shift_ru! 3	# 3850	[c=40]*lshrdi3/0
	store8! &4 	#X3	# 4585	[c=4]movsi_from_tr_unspec/0
	jump! .L57.l_o41067e		# 6205	[c=4]jump
.L61.l_o41067e:
	push! -31		# 2965	[c=3]movdi_to_tr_unspec/0
	load8! &1 	#AR	# 2967	[c=14]*subdi3/2
	sub
	store8! &1 	#AR	# 4520	[c=4]movdi_from_tr_unspec/0
	load4! &5 	#X5	# 4521	[c=5]movsi_to_tr_unspec/1
	load4! &1 	#AR	# 4523	[c=5]movsi_to_tr_unspec/1
	store8! &2 	#AR	# 4525	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#AR	# 2986	[c=42]*lshrdi3/2
	shift_ru
	store8! &1 	#AR	# 4526	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ	# 4527	[c=12]cbranchsi4_internal
	load4! &3 	#X3
	push! 32	
	xor	
	jump_zero! .L64.l_o41067e
	# END CBRANCH
	load8! &7 	#X7	# 2995	[c=5]movdi_to_tr_unspec/1
	add! 1086		# 2997	[c=4]*adddi/0
	and! 0xffffffff		# 5139	[c=4]*anddi3/0
	pow2		# 3744	[c=4]*pow_tr
	load8! &6 	#X5	# 3745	[c=6]*muldi3/2
	mult
	load8! &3 	#X2	# 5012	[c=6]*iordi3/2
	or
	store8! &3 	#X2	# 5013	[c=4]movdi_from_tr_unspec/0
.L64.l_o41067e:
	load4! &2 	#X2	# 3727	[c=5]movsi_to_tr_unspec/1
	neg		# 3040	[c=3]*negdi2
	shift_ru! 63	# 3045	[c=40]*lshrdi3/0
	and! 0xff		# 5136	[c=4]*anddi3/0
	load8! &1 	#AR	# 3067	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 4511	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 4512	[c=5]movdi_to_tr_unspec/1
	and! 0x7		# 3076	[c=4]*anddi3/0
	store8! &4 	#X3	# 4515	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ0	# 3083	[c=12]cbranchsi4_internal
	load4! &3 	#X3
	jump_not_zero! .L65.l_o41067e
	# END CBRANCH
	push! 0		# 61	[c=4]movsi_push_pop
	store8! &5 	#X4
	load4! &0 	#AR	# 3700	[c=5]movsi_to_tr_unspec/1
	shift_ru! 3	# 3702	[c=40]*lshrdi3/0
	store8! &1 	#AR	# 5001	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 5002	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 3202	[c=6]*iordi3/2
	or
	store8! &3 	#X2	# 4487	[c=4]movsi_from_tr_unspec/0
	push! 0		# 84	[c=4]movhi_push_pop
	store8! &4 	#X3
.L129.l_o41067e:
	load4! &2 	#X2	# 5514	[c=5]movsi_to_tr_unspec/1
	store8! &3 	#X2	# 5516	[c=4]movdi_from_tr_unspec/0
	push! 0		# 5517	[c=3]movdi_to_tr_unspec/0
	and! 0xffffffff00000000		# 5519	[c=4]*anddi3/0
	load8! &3 	#X2	# 5520	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 5521	[c=4]movdi_from_tr_unspec/0
	load4! &4 	#X4	# 5522	[c=5]movsi_to_tr_unspec/1
	and! 0xfffff		# 5524	[c=4]*anddi3/0
	shift_l! 32	# 5526	[c=8]*ashldi3/0
	store8! &3 	#X2	# 5527	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 5528	[c=5]movdi_to_tr_unspec/1
	and! 0xfff00000ffffffff		# 5530	[c=4]*anddi3/0
	load8! &3 	#X2	# 5531	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 5532	[c=4]movdi_from_tr_unspec/0
	load2! &3 	#X3	# 5533	[c=5]movhi_to_tr_unspec/1
	and! 0x7ff		# 5535	[c=4]*anddi3/0
	shift_l! 52	# 5537	[c=8]*ashldi3/0
	store8! &3 	#X2	# 5538	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 5539	[c=5]movdi_to_tr_unspec/1
	and! 0x800fffffffffffff		# 5541	[c=4]*anddi3/0
	load8! &3 	#X2	# 5542	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 5543	[c=4]movdi_from_tr_unspec/0
	load1! &1 	#X1	# 5544	[c=5]movqi_to_tr_unspec/1
	shift_l! 63	# 5546	[c=8]*ashldi3/0
	store8! &2 	#X1	# 5547	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 5548	[c=5]movdi_to_tr_unspec/1
	and! 0x7fffffffffffffff		# 5550	[c=4]*anddi3/0
	load8! &2 	#X1	# 5551	[c=6]*iordi3/2
	or
	store8! &18	# 5552	[c=4]movdf_from_tr_unspec/0
	jump! .L119.l_o41067e		# 6207	[c=4]jump
.L58.l_o41067e:
	load8! &2 	#X2	# 2652	[c=5]movdi_to_tr_unspec/1
	add! 4		# 2654	[c=4]*adddi/0
	store8! &7 	#X6	# 4583	[c=4]movsi_from_tr_unspec/0
	push! 1		# 2661	[c=4]movqi_push_pop
	store8! &4 	#X3
	# CBRANCH	# 2662	[c=12]cbranchsi4_internal
	push! 4294967291	
	load4! &3 	#X2
	lt_u	
	not	
	jump_zero! .L59.l_o41067e
	# END CBRANCH
	push! 0		# 2663	[c=4]movqi_push_pop
	store8! &4 	#X3
.L59.l_o41067e:
	load1! &3 	#X3	# 3832	[c=5]movqi_to_tr_unspec/1
	store8! &5 	#X4	# 4579	[c=4]movsi_from_tr_unspec/0
	load4! &6 	#X6	# 3839	[c=5]movsi_to_tr_unspec/1
	shift_ru! 3	# 3841	[c=40]*lshrdi3/0
	store8! &4 	#X3	# 4581	[c=4]movsi_from_tr_unspec/0
	load8! &4 	#X4	# 3828	[c=5]movdi_to_tr_unspec/1
	load8! &6 	#X5	# 3830	[c=6]*adddi/2
	add
	store8! &6 	#X5	# 4577	[c=4]movsi_from_tr_unspec/0
	jump! .L57.l_o41067e		# 6209	[c=4]jump
.L65.l_o41067e:
	load8! &0 	#AR	# 3316	[c=5]movdi_to_tr_unspec/1
	and! 0xf		# 3318	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 4484	[c=12]*peep2_cbranchsi
	# - EQ
	push! 4	
	xor	
	jump_zero! .L128.l_o41067e
	# END CBRANCH
	push! 0		# 58	[c=4]movsi_push_pop
	store8! &3 	#X2
	jump! .L68.l_o41067e		# 6212	[c=4]jump
.L128.l_o41067e:
	push! 0		# 60	[c=4]movsi_push_pop
	store8! &3 	#X2
.L69.l_o41067e:
	load8! &2 	#X2	# 3148	[c=5]movdi_to_tr_unspec/1
	shift_l! 29	# 3150	[c=8]*ashldi3/0
	store8! &4 	#X3	# 4488	[c=4]movdi_from_tr_unspec/0
	load4! &2 	#X2	# 4489	[c=5]movsi_to_tr_unspec/1
	shift_ru! 3	# 3713	[c=40]*lshrdi3/0
	and! 0xfffff		# 3173	[c=4]*anddi3/0
	store8! &5 	#X4	# 4496	[c=4]movsi_from_tr_unspec/0
	load4! &0 	#AR	# 5555	[c=5]movsi_to_tr_unspec/1
	shift_ru! 3	# 5557	[c=40]*lshrdi3/0
	store8! &1 	#AR	# 5558	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 5559	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 5561	[c=6]*iordi3/2
	or
	store8! &3 	#X2	# 5563	[c=4]movsi_from_tr_unspec/0
	push! 0		# 5564	[c=4]movhi_push_pop
	store8! &4 	#X3
	jump! .L129.l_o41067e		# 6215	[c=4]jump
.L54.l_o41067e:
	load8! &5 	#X5	# 2559	[c=5]movdi_to_tr_unspec/1
	or! 0x80000		# 2561	[c=4]*iordi3/0
	and! 0xfffff		# 2570	[c=4]*anddi3/0
	store8! &5 	#X4	# 4599	[c=4]movsi_from_tr_unspec/0
	push! 2047		# 5567	[c=4]movhi_push_pop
	store8! &4 	#X3
	jump! .L121.l_o41067e		# 6217	[c=4]jump
.L123.l_o41067e:
	# CBRANCH	# 947	[c=12]cbranchsi4_internal
	load4! &2 	#X2
	load4! &1 	#AR
	lt_u	
	not	
	jump_zero! .L27.l_o41067e
	# END CBRANCH
.L26.l_o41067e:
	load4! &5 	#X5	# 4250	[c=5]movsi_to_tr_unspec/1
	shift_ru! 1	# 4252	[c=40]*lshrdi3/0
	store8! &9 	#X8	# 4837	[c=4]movsi_from_tr_unspec/0
	load8! &5 	#X5	# 964	[c=5]movdi_to_tr_unspec/1
	shift_l! 31	# 966	[c=8]*ashldi3/0
	store8! &4 	#X3	# 4838	[c=4]movdi_from_tr_unspec/0
	load4! &2 	#X2	# 4839	[c=5]movsi_to_tr_unspec/1
	shift_ru! 1	# 4261	[c=40]*lshrdi3/0
	load8! &4 	#X3	# 993	[c=6]*iordi3/2
	or
	store8! &12 	#X11	# 4843	[c=4]movsi_from_tr_unspec/0
	load8! &2 	#X2	# 1000	[c=5]movdi_to_tr_unspec/1
	shift_l! 31	# 1002	[c=8]*ashldi3/0
	store8! &3 	#X2	# 1003	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 5570	[c=5]movdi_to_tr_unspec/1
	shift_l! 8	# 5572	[c=8]*ashldi3/0
	store8! &4 	#X3	# 5573	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 5574	[c=5]movsi_to_tr_unspec/1
	shift_ru! 24	# 5576	[c=40]*lshrdi3/0
	load8! &4 	#X3	# 5578	[c=6]*iordi3/2
	or
	store8! &4 	#X3	# 5579	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 5580	[c=5]movdi_to_tr_unspec/1
	shift_l! 8	# 5582	[c=8]*ashldi3/0
	store8! &5 	#X4	# 5584	[c=4]movsi_from_tr_unspec/0
	load4! &3 	#X3	# 5585	[c=5]movsi_to_tr_unspec/1
	shift_ru! 16	# 5587	[c=40]*lshrdi3/0
	store8! &7 	#X6	# 5589	[c=4]movsi_from_tr_unspec/0
	load8! &3 	#X3	# 5590	[c=5]movdi_to_tr_unspec/1
	and! 0xffff		# 5592	[c=4]*anddi3/0
	store8! &11 	#X10	# 5594	[c=4]movsi_from_tr_unspec/0
	load4! &8 	#X8	# 5595	[c=5]movsi_to_tr_unspec/1
	store8! &6 	#X5	# 5597	[c=4]movdi_from_tr_unspec/0
	load4! &6 	#X6	# 5598	[c=5]movsi_to_tr_unspec/1
	store8! &1 	#AR	# 5600	[c=4]movdi_from_tr_unspec/0
	load8! &5 	#X5	# 5601	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 5603	[c=30]*umoddi3/2
	rem_u
	store8! &1 	#AR	# 5604	[c=4]movdi_from_tr_unspec/0
	load4! &8 	#X8	# 5605	[c=5]movsi_to_tr_unspec/1
	store8! &9 	#X8	# 5607	[c=4]movdi_from_tr_unspec/0
	load4! &6 	#X6	# 5608	[c=5]movsi_to_tr_unspec/1
	store8! &6 	#X5	# 5610	[c=4]movdi_from_tr_unspec/0
	load8! &8 	#X8	# 5611	[c=5]movdi_to_tr_unspec/1
	load8! &6 	#X5	# 5613	[c=30]*udivdi3/2
	div_u
	store8! &9 	#X8	# 5615	[c=4]movsi_from_tr_unspec/0
	load8! &8 	#X8	# 5616	[c=5]movdi_to_tr_unspec/1
	load8! &11 	#X10	# 5618	[c=6]*muldi3/2
	mult
	store8! &6 	#X5	# 5619	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 5620	[c=5]movdi_to_tr_unspec/1
	shift_l! 16	# 5622	[c=8]*ashldi3/0
	store8! &1 	#AR	# 5623	[c=4]movdi_from_tr_unspec/0
	load4! &11 	#X11	# 5624	[c=5]movsi_to_tr_unspec/1
	shift_ru! 16	# 5626	[c=40]*lshrdi3/0
	load8! &1 	#AR	# 5628	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 5629	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 5630	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	load4! &6 	#X5
	lt_u	
	jump_zero! .L29.l_o41067e
	# END CBRANCH
	jump! .L130.l_o41067e		# 6221	[c=4]jump
.L126.l_o41067e:
	# CBRANCH	# 1633	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	load4! &12 	#X11
	xor	
	push! 1	
	lt_u	
	jump_zero! .L33.l_o41067e
	# END CBRANCH
	# CBRANCH	# 1635	[c=12]cbranchsi4_internal
	load4! &2 	#X2
	load4! &14 	#X13
	lt_u	
	jump_zero! .L33.l_o41067e
	# END CBRANCH
	load8! &5 	#X5	# 5633	[c=5]movdi_to_tr_unspec/1
	add! -1		# 5635	[c=4]*adddi/0
	store8! &13 	#X12	# 5636	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 5637	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 5639	[c=6]*adddi/2
	add
	store8! &3 	#X2	# 5640	[c=4]movdi_from_tr_unspec/0
	push! 1		# 5641	[c=4]movqi_push_pop
	store8! &15 	#X14
	# CBRANCH	# 5642	[c=12]cbranchsi4_internal
	load4! &2 	#X2
	load4! &5 	#X4
	lt_u	
	not	
	jump_zero! .L34.l_o41067e
	# END CBRANCH
	jump! .L131.l_o41067e		# 6225	[c=4]jump
.L39.l_o41067e:
	load4! &2 	#X2	# 4005	[c=5]movsi_to_tr_unspec/1
	store8! &14 	#X13	# 4007	[c=4]movdi_from_tr_unspec/0
	load4! &6 	#X6	# 4008	[c=5]movsi_to_tr_unspec/1
	store8! &12 	#X11	# 4010	[c=4]movdi_from_tr_unspec/0
	load8! &13 	#X13	# 1855	[c=5]movdi_to_tr_unspec/1
	load8! &12 	#X11	# 1857	[c=30]*umoddi3/2
	rem_u
	store8! &15 	#X14	# 4702	[c=4]movsi_from_tr_unspec/0
	load4! &2 	#X2	# 4012	[c=5]movsi_to_tr_unspec/1
	store8! &12 	#X11	# 4014	[c=4]movdi_from_tr_unspec/0
	load4! &6 	#X6	# 4015	[c=5]movsi_to_tr_unspec/1
	store8! &3 	#X2	# 4017	[c=4]movdi_from_tr_unspec/0
	load8! &11 	#X11	# 1874	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 1876	[c=30]*udivdi3/2
	div_u
	store8! &12 	#X11	# 4704	[c=4]movsi_from_tr_unspec/0
	load8! &11 	#X11	# 4020	[c=5]movdi_to_tr_unspec/1
	load8! &11 	#X10	# 4022	[c=6]*muldi3/2
	mult
	store8! &14 	#X13	# 4706	[c=4]movsi_from_tr_unspec/0
	load8! &14 	#X14	# 1896	[c=5]movdi_to_tr_unspec/1
	shift_l! 16	# 1898	[c=8]*ashldi3/0
	store8! &3 	#X2	# 4707	[c=4]movdi_from_tr_unspec/0
	load4! &12 	#X12	# 4708	[c=5]movsi_to_tr_unspec/1
	shift_ru! 16	# 4030	[c=40]*lshrdi3/0
	load8! &3 	#X2	# 1925	[c=6]*iordi3/2
	or
	store8! &3 	#X2	# 4711	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 4712	[c=12]cbranchsi4_internal
	load4! &2 	#X2
	load4! &14 	#X13
	lt_u	
	jump_zero! .L42.l_o41067e
	# END CBRANCH
	load8! &11 	#X11	# 1934	[c=5]movdi_to_tr_unspec/1
	add! -1		# 1936	[c=4]*adddi/0
	store8! &15 	#X14	# 4696	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 4697	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 4003	[c=6]*adddi/2
	add
	store8! &3 	#X2	# 4699	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 4700	[c=12]cbranchsi4_internal
	load4! &2 	#X2
	load4! &4 	#X3
	lt_u	
	not	
	jump_zero! .L84.l_o41067e
	# END CBRANCH
	# CBRANCH	# 1958	[c=12]cbranchsi4_internal
	load4! &2 	#X2
	load4! &14 	#X13
	lt_u	
	jump_zero! .L85.l_o41067e
	# END CBRANCH
	load8! &11 	#X11	# 1960	[c=5]movdi_to_tr_unspec/1
	add! -2		# 1962	[c=4]*adddi/0
	store8! &12 	#X11	# 4693	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 4694	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 3997	[c=6]*adddi/2
	add
	store8! &3 	#X2	# 1976	[c=4]movdi_from_tr_unspec/0
.L42.l_o41067e:
	load8! &2 	#X2	# 1988	[c=5]movdi_to_tr_unspec/1
	load8! &14 	#X13	# 1990	[c=14]*subdi3/2
	sub
	store8! &3 	#X2	# 4677	[c=4]movdi_from_tr_unspec/0
	load4! &2 	#X2	# 4678	[c=5]movsi_to_tr_unspec/1
	store8! &15 	#X14	# 3972	[c=4]movdi_from_tr_unspec/0
	load4! &6 	#X6	# 3973	[c=5]movsi_to_tr_unspec/1
	store8! &14 	#X13	# 3975	[c=4]movdi_from_tr_unspec/0
	load8! &14 	#X14	# 2007	[c=5]movdi_to_tr_unspec/1
	load8! &14 	#X13	# 2009	[c=30]*umoddi3/2
	rem_u
	store8! &14 	#X13	# 4680	[c=4]movdi_from_tr_unspec/0
	load4! &2 	#X2	# 4681	[c=5]movsi_to_tr_unspec/1
	store8! &15 	#X14	# 3979	[c=4]movdi_from_tr_unspec/0
	load4! &6 	#X6	# 3980	[c=5]movsi_to_tr_unspec/1
	store8! &3 	#X2	# 3982	[c=4]movdi_from_tr_unspec/0
	load8! &14 	#X14	# 2026	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 2028	[c=30]*udivdi3/2
	div_u
	store8! &7 	#X6	# 4684	[c=4]movsi_from_tr_unspec/0
	load8! &6 	#X6	# 3985	[c=5]movdi_to_tr_unspec/1
	load8! &11 	#X10	# 3987	[c=6]*muldi3/2
	mult
	store8! &11 	#X10	# 4686	[c=4]movsi_from_tr_unspec/0
	load8! &13 	#X13	# 2048	[c=5]movdi_to_tr_unspec/1
	shift_l! 16	# 2050	[c=8]*ashldi3/0
	store8! &3 	#X2	# 4687	[c=4]movdi_from_tr_unspec/0
	load8! &12 	#X12	# 4688	[c=5]movdi_to_tr_unspec/1
	and! 0xffff		# 2059	[c=4]*anddi3/0
	load8! &3 	#X2	# 2072	[c=6]*iordi3/2
	or
	store8! &3 	#X2	# 4691	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 4692	[c=12]cbranchsi4_internal
	load4! &2 	#X2
	load4! &11 	#X10
	lt_u	
	jump_zero! .L43.l_o41067e
	# END CBRANCH
.L137.l_o41067e:
	load8! &6 	#X6	# 2081	[c=5]movdi_to_tr_unspec/1
	add! -1		# 2083	[c=4]*adddi/0
	store8! &13 	#X12	# 4672	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 4673	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 3966	[c=6]*adddi/2
	add
	store8! &3 	#X2	# 4675	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 4676	[c=12]cbranchsi4_internal
	load4! &2 	#X2
	load4! &4 	#X3
	lt_u	
	not	
	jump_zero! .L86.l_o41067e
	# END CBRANCH
	# CBRANCH	# 2105	[c=12]cbranchsi4_internal
	load4! &2 	#X2
	load4! &11 	#X10
	lt_u	
	jump_zero! .L87.l_o41067e
	# END CBRANCH
	load8! &6 	#X6	# 2107	[c=5]movdi_to_tr_unspec/1
	add! -2		# 2109	[c=4]*adddi/0
	store8! &7 	#X6	# 4669	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 4670	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 3960	[c=6]*adddi/2
	add
	store8! &3 	#X2	# 2123	[c=4]movdi_from_tr_unspec/0
.L43.l_o41067e:
	load8! &2 	#X2	# 2135	[c=5]movdi_to_tr_unspec/1
	load8! &11 	#X10	# 2137	[c=14]*subdi3/2
	sub
	store8! &13 	#X12	# 4646	[c=4]movsi_from_tr_unspec/0
	load8! &11 	#X11	# 2144	[c=5]movdi_to_tr_unspec/1
	shift_l! 16	# 2146	[c=8]*ashldi3/0
	load8! &7 	#X6	# 5036	[c=6]*iordi3/2
	or
	store8! &3 	#X2	# 5037	[c=4]movdi_from_tr_unspec/0
	load4! &2 	#X2	# 4649	[c=5]movsi_to_tr_unspec/1
	shift_ru! 16	# 3923	[c=40]*lshrdi3/0
	store8! &7 	#X6	# 4651	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 4652	[c=5]movdi_to_tr_unspec/1
	and! 0xffff		# 2182	[c=4]*anddi3/0
	store8! &12 	#X11	# 4655	[c=4]movsi_from_tr_unspec/0
	load8! &9 	#X9	# 3928	[c=5]movdi_to_tr_unspec/1
	load8! &12 	#X11	# 3930	[c=6]*muldi3/2
	mult
	store8! &11 	#X10	# 4656	[c=4]movdi_from_tr_unspec/0
	load8! &11 	#X11	# 4657	[c=5]movdi_to_tr_unspec/1
	load8! &9 	#X8	# 3935	[c=6]*muldi3/2
	mult
	store8! &12 	#X11	# 4659	[c=4]movdi_from_tr_unspec/0
	load8! &9 	#X9	# 4660	[c=5]movdi_to_tr_unspec/1
	load8! &7 	#X6	# 3940	[c=6]*muldi3/2
	mult
	store8! &10 	#X9	# 5038	[c=4]movdi_from_tr_unspec/0
	load8! &6 	#X6	# 5039	[c=5]movdi_to_tr_unspec/1
	load8! &9 	#X8	# 2234	[c=6]*muldi3/2
	mult
	store8! &9 	#X8	# 4664	[c=4]movsi_from_tr_unspec/0
	load4! &10 	#X10	# 3947	[c=5]movsi_to_tr_unspec/1
	shift_ru! 16	# 3949	[c=40]*lshrdi3/0
	store8! &7 	#X6	# 5041	[c=4]movdi_from_tr_unspec/0
	load8! &9 	#X9	# 5042	[c=5]movdi_to_tr_unspec/1
	load8! &12 	#X11	# 2261	[c=6]*adddi/2
	add
	load8! &7 	#X6	# 2274	[c=6]*adddi/2
	add
	store8! &7 	#X6	# 4667	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 4668	[c=12]cbranchsi4_internal
	load4! &6 	#X6
	load4! &10 	#X9
	lt_u	
	jump_zero! .L44.l_o41067e
	# END CBRANCH
.L138.l_o41067e:
	load8! &8 	#X8	# 2283	[c=5]movdi_to_tr_unspec/1
	add! 65536		# 2285	[c=4]*adddi/0
	store8! &9 	#X8	# 2286	[c=4]movdi_from_tr_unspec/0
.L44.l_o41067e:
	load4! &6 	#X6	# 3900	[c=5]movsi_to_tr_unspec/1
	shift_ru! 16	# 3902	[c=40]*lshrdi3/0
	load8! &9 	#X8	# 5029	[c=6]*adddi/2
	add
	store8! &9 	#X8	# 5030	[c=4]movdi_from_tr_unspec/0
	load8! &6 	#X6	# 4633	[c=5]movdi_to_tr_unspec/1
	and! 0xffff		# 2323	[c=4]*anddi3/0
	shift_l! 16	# 2332	[c=8]*ashldi3/0
	store8! &7 	#X6	# 4639	[c=4]movdi_from_tr_unspec/0
	load8! &10 	#X10	# 4640	[c=5]movdi_to_tr_unspec/1
	and! 0xffff		# 2341	[c=4]*anddi3/0
	load8! &7 	#X6	# 2354	[c=6]*adddi/2
	add
	store8! &11 	#X10	# 4644	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 2361	[c=12]cbranchsi4_internal
	load4! &12 	#X12
	load4! &9 	#X8
	lt_u	
	jump_zero! .L132.l_o41067e
	# END CBRANCH
	load8! &2 	#X2	# 2368	[c=5]movdi_to_tr_unspec/1
	add! -1		# 2370	[c=4]*adddi/0
	store8! &10 	#X9	# 4628	[c=4]movsi_from_tr_unspec/0
	load8! &12 	#X12	# 3893	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 3895	[c=6]*adddi/2
	add
	store8! &7 	#X6	# 4629	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 4630	[c=12]cbranchsi4_internal
	load4! &6 	#X6
	load4! &4 	#X3
	lt_u	
	not	
	jump_zero! .L88.l_o41067e
	# END CBRANCH
.L135.l_o41067e:
	# CBRANCH	# 2392	[c=12]cbranchsi4_internal
	load4! &6 	#X6
	load4! &9 	#X8
	lt_u	
	jump_zero! .L133.l_o41067e
	# END CBRANCH
.L49.l_o41067e:
	load8! &2 	#X2	# 2399	[c=5]movdi_to_tr_unspec/1
	add! -2		# 2401	[c=4]*adddi/0
	store8! &3 	#X2	# 4624	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 4625	[c=5]movdi_to_tr_unspec/1
	load8! &5 	#X4	# 3888	[c=6]*adddi/2
	add
	store8! &10 	#X9	# 2415	[c=4]movdi_from_tr_unspec/0
	push! 1		# 3890	[c=4]movqi_push_pop
	store8! &12 	#X11
	# CBRANCH	# 2422	[c=12]cbranchsi4_internal
	load4! &9 	#X9
	load4! &5 	#X4
	lt_u	
	jump_zero! .L134.l_o41067e
	# END CBRANCH
	load1! &11 	#X11	# 3873	[c=5]movqi_to_tr_unspec/1
	store8! &5 	#X4	# 5024	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 5025	[c=5]movdi_to_tr_unspec/1
	load8! &5 	#X4	# 2440	[c=6]*adddi/2
	add
	load8! &7 	#X6	# 3882	[c=6]*adddi/2
	add
	store8! &7 	#X6	# 4623	[c=4]movsi_from_tr_unspec/0
	load4! &9 	#X9	# 47	[c=4]movsi_push_pop
	store8! &5 	#X4
.L48.l_o41067e:
	# CBRANCH	# 2462	[c=12]cbranchsi4_internal
	load4! &6 	#X6
	load4! &9 	#X8
	xor	
	push! 1	
	lt_u	
	jump_zero! .L52.l_o41067e
	# END CBRANCH
.L50.l_o41067e:
	# CBRANCH EQ	# 2465	[c=12]cbranchsi4_internal
	load4! &10 	#X10
	load4! &5 	#X4
	xor	
	jump_zero! .L47.l_o41067e
	# END CBRANCH
.L52.l_o41067e:
	load8! &2 	#X2	# 2468	[c=5]movdi_to_tr_unspec/1
	or! 0x1		# 2470	[c=4]*iordi3/0
	store8! &3 	#X2	# 2471	[c=4]movdi_from_tr_unspec/0
	jump! .L47.l_o41067e		# 6230	[c=4]jump
.L132.l_o41067e:
	# CBRANCH	# 2363	[c=12]cbranchsi4_internal
	load4! &12 	#X12
	load4! &9 	#X8
	xor	
	push! 1	
	lt_u	
	jump_zero! .L52.l_o41067e
	# END CBRANCH
	# CBRANCH EQ0	# 2365	[c=12]cbranchsi4_internal
	load4! &10 	#X10
	jump_zero! .L47.l_o41067e
	# END CBRANCH
	load8! &2 	#X2	# 5645	[c=5]movdi_to_tr_unspec/1
	add! -1		# 5647	[c=4]*adddi/0
	store8! &10 	#X9	# 5649	[c=4]movsi_from_tr_unspec/0
	load8! &12 	#X12	# 5650	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 5652	[c=6]*adddi/2
	add
	store8! &7 	#X6	# 5653	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 5654	[c=12]cbranchsi4_internal
	load4! &6 	#X6
	load4! &4 	#X3
	lt_u	
	jump_zero! .L135.l_o41067e
	# END CBRANCH
.L88.l_o41067e:
	load4! &9 	#X9	# 48	[c=4]movsi_push_pop
	store8! &3 	#X2
	# CBRANCH EQ	# 5657	[c=12]cbranchsi4_internal
	load4! &6 	#X6
	load4! &9 	#X8
	xor	
	jump_zero! .L50.l_o41067e
	# END CBRANCH
	jump! .L52.l_o41067e		# 6234	[c=4]jump
.L133.l_o41067e:
	# CBRANCH EQ	# 2394	[c=12]cbranchsi4_internal
	load4! &6 	#X6
	load4! &9 	#X8
	xor	
	jump_zero! .L136.l_o41067e
	# END CBRANCH
	load4! &9 	#X9	# 91	[c=4]movsi_push_pop
	store8! &3 	#X2
	load8! &2 	#X2	# 5660	[c=5]movdi_to_tr_unspec/1
	or! 0x1		# 5662	[c=4]*iordi3/0
	store8! &3 	#X2	# 5663	[c=4]movdi_from_tr_unspec/0
	jump! .L47.l_o41067e		# 6237	[c=4]jump
.L134.l_o41067e:
	push! 0		# 2423	[c=4]movqi_push_pop
	store8! &12 	#X11
	load1! &11 	#X11	# 5667	[c=5]movqi_to_tr_unspec/1
	store8! &5 	#X4	# 5669	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 5670	[c=5]movdi_to_tr_unspec/1
	load8! &5 	#X4	# 5672	[c=6]*adddi/2
	add
	load8! &7 	#X6	# 5674	[c=6]*adddi/2
	add
	store8! &7 	#X6	# 5676	[c=4]movsi_from_tr_unspec/0
	load4! &9 	#X9	# 5677	[c=4]movsi_push_pop
	store8! &5 	#X4
	jump! .L48.l_o41067e		# 6239	[c=4]jump
.L136.l_o41067e:
	# CBRANCH	# 2396	[c=12]cbranchsi4_internal
	load4! &4 	#X4
	load4! &11 	#X10
	lt_u	
	not	
	jump_zero! .L49.l_o41067e
	# END CBRANCH
	load4! &9 	#X9	# 49	[c=4]movsi_push_pop
	store8! &3 	#X2
	# CBRANCH	# 5680	[c=12]cbranchsi4_internal
	load4! &10 	#X10
	load4! &5 	#X4
	xor	
	push! 1	
	lt_u	
	jump_zero! .L52.l_o41067e
	# END CBRANCH
	jump! .L47.l_o41067e		# 6242	[c=4]jump
.L84.l_o41067e:
	load4! &14 	#X14	# 43	[c=4]movsi_push_pop
	store8! &12 	#X11
	load8! &2 	#X2	# 5684	[c=5]movdi_to_tr_unspec/1
	load8! &14 	#X13	# 5686	[c=14]*subdi3/2
	sub
	store8! &3 	#X2	# 5687	[c=4]movdi_from_tr_unspec/0
	load4! &2 	#X2	# 5688	[c=5]movsi_to_tr_unspec/1
	store8! &15 	#X14	# 5690	[c=4]movdi_from_tr_unspec/0
	load4! &6 	#X6	# 5691	[c=5]movsi_to_tr_unspec/1
	store8! &14 	#X13	# 5693	[c=4]movdi_from_tr_unspec/0
	load8! &14 	#X14	# 5694	[c=5]movdi_to_tr_unspec/1
	load8! &14 	#X13	# 5696	[c=30]*umoddi3/2
	rem_u
	store8! &14 	#X13	# 5697	[c=4]movdi_from_tr_unspec/0
	load4! &2 	#X2	# 5698	[c=5]movsi_to_tr_unspec/1
	store8! &15 	#X14	# 5700	[c=4]movdi_from_tr_unspec/0
	load4! &6 	#X6	# 5701	[c=5]movsi_to_tr_unspec/1
	store8! &3 	#X2	# 5703	[c=4]movdi_from_tr_unspec/0
	load8! &14 	#X14	# 5704	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 5706	[c=30]*udivdi3/2
	div_u
	store8! &7 	#X6	# 5708	[c=4]movsi_from_tr_unspec/0
	load8! &6 	#X6	# 5709	[c=5]movdi_to_tr_unspec/1
	load8! &11 	#X10	# 5711	[c=6]*muldi3/2
	mult
	store8! &11 	#X10	# 5713	[c=4]movsi_from_tr_unspec/0
	load8! &13 	#X13	# 5714	[c=5]movdi_to_tr_unspec/1
	shift_l! 16	# 5716	[c=8]*ashldi3/0
	store8! &3 	#X2	# 5717	[c=4]movdi_from_tr_unspec/0
	load8! &12 	#X12	# 5718	[c=5]movdi_to_tr_unspec/1
	and! 0xffff		# 5720	[c=4]*anddi3/0
	load8! &3 	#X2	# 5722	[c=6]*iordi3/2
	or
	store8! &3 	#X2	# 5723	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 5724	[c=12]cbranchsi4_internal
	load4! &2 	#X2
	load4! &11 	#X10
	lt_u	
	jump_zero! .L43.l_o41067e
	# END CBRANCH
	jump! .L137.l_o41067e		# 6246	[c=4]jump
.L86.l_o41067e:
	load4! &12 	#X12	# 45	[c=4]movsi_push_pop
	store8! &7 	#X6
	load8! &2 	#X2	# 5728	[c=5]movdi_to_tr_unspec/1
	load8! &11 	#X10	# 5730	[c=14]*subdi3/2
	sub
	store8! &13 	#X12	# 5732	[c=4]movsi_from_tr_unspec/0
	load8! &11 	#X11	# 5733	[c=5]movdi_to_tr_unspec/1
	shift_l! 16	# 5735	[c=8]*ashldi3/0
	load8! &7 	#X6	# 5737	[c=6]*iordi3/2
	or
	store8! &3 	#X2	# 5738	[c=4]movdi_from_tr_unspec/0
	load4! &2 	#X2	# 5739	[c=5]movsi_to_tr_unspec/1
	shift_ru! 16	# 5741	[c=40]*lshrdi3/0
	store8! &7 	#X6	# 5742	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 5743	[c=5]movdi_to_tr_unspec/1
	and! 0xffff		# 5745	[c=4]*anddi3/0
	store8! &12 	#X11	# 5747	[c=4]movsi_from_tr_unspec/0
	load8! &9 	#X9	# 5748	[c=5]movdi_to_tr_unspec/1
	load8! &12 	#X11	# 5750	[c=6]*muldi3/2
	mult
	store8! &11 	#X10	# 5751	[c=4]movdi_from_tr_unspec/0
	load8! &11 	#X11	# 5752	[c=5]movdi_to_tr_unspec/1
	load8! &9 	#X8	# 5754	[c=6]*muldi3/2
	mult
	store8! &12 	#X11	# 5755	[c=4]movdi_from_tr_unspec/0
	load8! &9 	#X9	# 5756	[c=5]movdi_to_tr_unspec/1
	load8! &7 	#X6	# 5758	[c=6]*muldi3/2
	mult
	store8! &10 	#X9	# 5759	[c=4]movdi_from_tr_unspec/0
	load8! &6 	#X6	# 5760	[c=5]movdi_to_tr_unspec/1
	load8! &9 	#X8	# 5762	[c=6]*muldi3/2
	mult
	store8! &9 	#X8	# 5764	[c=4]movsi_from_tr_unspec/0
	load4! &10 	#X10	# 5765	[c=5]movsi_to_tr_unspec/1
	shift_ru! 16	# 5767	[c=40]*lshrdi3/0
	store8! &7 	#X6	# 5768	[c=4]movdi_from_tr_unspec/0
	load8! &9 	#X9	# 5769	[c=5]movdi_to_tr_unspec/1
	load8! &12 	#X11	# 5771	[c=6]*adddi/2
	add
	load8! &7 	#X6	# 5773	[c=6]*adddi/2
	add
	store8! &7 	#X6	# 5774	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 5775	[c=12]cbranchsi4_internal
	load4! &6 	#X6
	load4! &10 	#X9
	lt_u	
	jump_zero! .L44.l_o41067e
	# END CBRANCH
	jump! .L138.l_o41067e		# 6250	[c=4]jump
.L85.l_o41067e:
	load4! &14 	#X14	# 44	[c=4]movsi_push_pop
	store8! &12 	#X11
	load8! &2 	#X2	# 5779	[c=5]movdi_to_tr_unspec/1
	load8! &14 	#X13	# 5781	[c=14]*subdi3/2
	sub
	store8! &3 	#X2	# 5782	[c=4]movdi_from_tr_unspec/0
	load4! &2 	#X2	# 5783	[c=5]movsi_to_tr_unspec/1
	store8! &15 	#X14	# 5785	[c=4]movdi_from_tr_unspec/0
	load4! &6 	#X6	# 5786	[c=5]movsi_to_tr_unspec/1
	store8! &14 	#X13	# 5788	[c=4]movdi_from_tr_unspec/0
	load8! &14 	#X14	# 5789	[c=5]movdi_to_tr_unspec/1
	load8! &14 	#X13	# 5791	[c=30]*umoddi3/2
	rem_u
	store8! &14 	#X13	# 5792	[c=4]movdi_from_tr_unspec/0
	load4! &2 	#X2	# 5793	[c=5]movsi_to_tr_unspec/1
	store8! &15 	#X14	# 5795	[c=4]movdi_from_tr_unspec/0
	load4! &6 	#X6	# 5796	[c=5]movsi_to_tr_unspec/1
	store8! &3 	#X2	# 5798	[c=4]movdi_from_tr_unspec/0
	load8! &14 	#X14	# 5799	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 5801	[c=30]*udivdi3/2
	div_u
	store8! &7 	#X6	# 5803	[c=4]movsi_from_tr_unspec/0
	load8! &6 	#X6	# 5804	[c=5]movdi_to_tr_unspec/1
	load8! &11 	#X10	# 5806	[c=6]*muldi3/2
	mult
	store8! &11 	#X10	# 5808	[c=4]movsi_from_tr_unspec/0
	load8! &13 	#X13	# 5809	[c=5]movdi_to_tr_unspec/1
	shift_l! 16	# 5811	[c=8]*ashldi3/0
	store8! &3 	#X2	# 5812	[c=4]movdi_from_tr_unspec/0
	load8! &12 	#X12	# 5813	[c=5]movdi_to_tr_unspec/1
	and! 0xffff		# 5815	[c=4]*anddi3/0
	load8! &3 	#X2	# 5817	[c=6]*iordi3/2
	or
	store8! &3 	#X2	# 5818	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 5819	[c=12]cbranchsi4_internal
	load4! &2 	#X2
	load4! &11 	#X10
	lt_u	
	jump_zero! .L43.l_o41067e
	# END CBRANCH
	jump! .L137.l_o41067e		# 6253	[c=4]jump
.L87.l_o41067e:
	load4! &12 	#X12	# 46	[c=4]movsi_push_pop
	store8! &7 	#X6
	load8! &2 	#X2	# 5823	[c=5]movdi_to_tr_unspec/1
	load8! &11 	#X10	# 5825	[c=14]*subdi3/2
	sub
	store8! &13 	#X12	# 5827	[c=4]movsi_from_tr_unspec/0
	load8! &11 	#X11	# 5828	[c=5]movdi_to_tr_unspec/1
	shift_l! 16	# 5830	[c=8]*ashldi3/0
	load8! &7 	#X6	# 5832	[c=6]*iordi3/2
	or
	store8! &3 	#X2	# 5833	[c=4]movdi_from_tr_unspec/0
	load4! &2 	#X2	# 5834	[c=5]movsi_to_tr_unspec/1
	shift_ru! 16	# 5836	[c=40]*lshrdi3/0
	store8! &7 	#X6	# 5837	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 5838	[c=5]movdi_to_tr_unspec/1
	and! 0xffff		# 5840	[c=4]*anddi3/0
	store8! &12 	#X11	# 5842	[c=4]movsi_from_tr_unspec/0
	load8! &9 	#X9	# 5843	[c=5]movdi_to_tr_unspec/1
	load8! &12 	#X11	# 5845	[c=6]*muldi3/2
	mult
	store8! &11 	#X10	# 5846	[c=4]movdi_from_tr_unspec/0
	load8! &11 	#X11	# 5847	[c=5]movdi_to_tr_unspec/1
	load8! &9 	#X8	# 5849	[c=6]*muldi3/2
	mult
	store8! &12 	#X11	# 5850	[c=4]movdi_from_tr_unspec/0
	load8! &9 	#X9	# 5851	[c=5]movdi_to_tr_unspec/1
	load8! &7 	#X6	# 5853	[c=6]*muldi3/2
	mult
	store8! &10 	#X9	# 5854	[c=4]movdi_from_tr_unspec/0
	load8! &6 	#X6	# 5855	[c=5]movdi_to_tr_unspec/1
	load8! &9 	#X8	# 5857	[c=6]*muldi3/2
	mult
	store8! &9 	#X8	# 5859	[c=4]movsi_from_tr_unspec/0
	load4! &10 	#X10	# 5860	[c=5]movsi_to_tr_unspec/1
	shift_ru! 16	# 5862	[c=40]*lshrdi3/0
	store8! &7 	#X6	# 5863	[c=4]movdi_from_tr_unspec/0
	load8! &9 	#X9	# 5864	[c=5]movdi_to_tr_unspec/1
	load8! &12 	#X11	# 5866	[c=6]*adddi/2
	add
	load8! &7 	#X6	# 5868	[c=6]*adddi/2
	add
	store8! &7 	#X6	# 5869	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 5870	[c=12]cbranchsi4_internal
	load4! &6 	#X6
	load4! &10 	#X9
	lt_u	
	jump_zero! .L44.l_o41067e
	# END CBRANCH
	jump! .L138.l_o41067e		# 6256	[c=4]jump
.L75.l_o41067e:
	load4! &9 	#X9	# 35	[c=4]movsi_push_pop
	store8! &9 	#X8
	load8! &0 	#AR	# 5874	[c=5]movdi_to_tr_unspec/1
	load8! &6 	#X5	# 5876	[c=14]*subdi3/2
	sub
	store8! &1 	#AR	# 5877	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 5878	[c=5]movsi_to_tr_unspec/1
	store8! &10 	#X9	# 5880	[c=4]movdi_from_tr_unspec/0
	load4! &6 	#X6	# 5881	[c=5]movsi_to_tr_unspec/1
	store8! &6 	#X5	# 5883	[c=4]movdi_from_tr_unspec/0
	load8! &9 	#X9	# 5884	[c=5]movdi_to_tr_unspec/1
	load8! &6 	#X5	# 5886	[c=30]*umoddi3/2
	rem_u
	store8! &13 	#X12	# 5888	[c=4]movsi_from_tr_unspec/0
	load4! &0 	#AR	# 5889	[c=5]movsi_to_tr_unspec/1
	store8! &6 	#X5	# 5891	[c=4]movdi_from_tr_unspec/0
	load4! &6 	#X6	# 5892	[c=5]movsi_to_tr_unspec/1
	store8! &1 	#AR	# 5894	[c=4]movdi_from_tr_unspec/0
	load8! &5 	#X5	# 5895	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 5897	[c=30]*udivdi3/2
	div_u
	store8! &6 	#X5	# 5899	[c=4]movsi_from_tr_unspec/0
	load8! &5 	#X5	# 5900	[c=5]movdi_to_tr_unspec/1
	load8! &11 	#X10	# 5902	[c=6]*muldi3/2
	mult
	store8! &10 	#X9	# 5904	[c=4]movsi_from_tr_unspec/0
	load8! &12 	#X12	# 5905	[c=5]movdi_to_tr_unspec/1
	shift_l! 16	# 5907	[c=8]*ashldi3/0
	store8! &1 	#AR	# 5908	[c=4]movdi_from_tr_unspec/0
	load8! &11 	#X11	# 5909	[c=5]movdi_to_tr_unspec/1
	and! 0xffff		# 5911	[c=4]*anddi3/0
	load8! &1 	#AR	# 5913	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 5914	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 5915	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	load4! &10 	#X9
	lt_u	
	jump_zero! .L30.l_o41067e
	# END CBRANCH
	jump! .L139.l_o41067e		# 6260	[c=4]jump
.L77.l_o41067e:
	load4! &11 	#X11	# 37	[c=4]movsi_push_pop
	store8! &6 	#X5
	load8! &0 	#AR	# 5919	[c=5]movdi_to_tr_unspec/1
	load8! &10 	#X9	# 5921	[c=14]*subdi3/2
	sub
	store8! &1 	#AR	# 5922	[c=4]movdi_from_tr_unspec/0
	load8! &8 	#X8	# 5923	[c=5]movdi_to_tr_unspec/1
	shift_l! 16	# 5925	[c=8]*ashldi3/0
	load8! &6 	#X5	# 5927	[c=6]*iordi3/2
	or
	store8! &6 	#X5	# 5928	[c=4]movdi_from_tr_unspec/0
	load4! &5 	#X5	# 5929	[c=5]movsi_to_tr_unspec/1
	shift_ru! 16	# 5931	[c=40]*lshrdi3/0
	store8! &12 	#X11	# 5933	[c=4]movsi_from_tr_unspec/0
	load4! &4 	#X4	# 5934	[c=5]movsi_to_tr_unspec/1
	shift_ru! 16	# 5936	[c=40]*lshrdi3/0
	store8! &9 	#X8	# 5937	[c=4]movdi_from_tr_unspec/0
	load8! &5 	#X5	# 5938	[c=5]movdi_to_tr_unspec/1
	and! 0xffff		# 5940	[c=4]*anddi3/0
	store8! &13 	#X12	# 5942	[c=4]movsi_from_tr_unspec/0
	load8! &4 	#X4	# 5943	[c=5]movdi_to_tr_unspec/1
	and! 0xffff		# 5945	[c=4]*anddi3/0
	store8! &10 	#X9	# 5946	[c=4]movdi_from_tr_unspec/0
	load8! &12 	#X12	# 5947	[c=5]movdi_to_tr_unspec/1
	load8! &10 	#X9	# 5949	[c=6]*muldi3/2
	mult
	store8! &14 	#X13	# 5950	[c=4]movdi_from_tr_unspec/0
	load8! &12 	#X12	# 5951	[c=5]movdi_to_tr_unspec/1
	load8! &9 	#X8	# 5953	[c=6]*muldi3/2
	mult
	store8! &13 	#X12	# 5954	[c=4]movdi_from_tr_unspec/0
	load8! &9 	#X9	# 5955	[c=5]movdi_to_tr_unspec/1
	load8! &12 	#X11	# 5957	[c=6]*muldi3/2
	mult
	store8! &15 	#X14	# 5958	[c=4]movdi_from_tr_unspec/0
	load8! &8 	#X8	# 5959	[c=5]movdi_to_tr_unspec/1
	load8! &12 	#X11	# 5961	[c=6]*muldi3/2
	mult
	store8! &12 	#X11	# 5962	[c=4]movdi_from_tr_unspec/0
	load4! &13 	#X13	# 5963	[c=5]movsi_to_tr_unspec/1
	shift_ru! 16	# 5965	[c=40]*lshrdi3/0
	store8! &16 	#X15	# 5966	[c=4]movdi_from_tr_unspec/0
	load8! &14 	#X14	# 5967	[c=5]movdi_to_tr_unspec/1
	load8! &13 	#X12	# 5969	[c=6]*adddi/2
	add
	load8! &16 	#X15	# 5971	[c=6]*adddi/2
	add
	store8! &13 	#X12	# 5972	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 5973	[c=12]cbranchsi4_internal
	load4! &12 	#X12
	load4! &15 	#X14
	lt_u	
	jump_zero! .L31.l_o41067e
	# END CBRANCH
	jump! .L140.l_o41067e		# 6264	[c=4]jump
.L124.l_o41067e:
	load8! &8 	#X8	# 1207	[c=5]movdi_to_tr_unspec/1
	add! -2		# 1209	[c=4]*adddi/0
	store8! &9 	#X8	# 4799	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 4800	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 4187	[c=6]*adddi/2
	add
	store8! &1 	#AR	# 1223	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 5977	[c=5]movdi_to_tr_unspec/1
	load8! &6 	#X5	# 5979	[c=14]*subdi3/2
	sub
	store8! &1 	#AR	# 5980	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 5981	[c=5]movsi_to_tr_unspec/1
	store8! &10 	#X9	# 5983	[c=4]movdi_from_tr_unspec/0
	load4! &6 	#X6	# 5984	[c=5]movsi_to_tr_unspec/1
	store8! &6 	#X5	# 5986	[c=4]movdi_from_tr_unspec/0
	load8! &9 	#X9	# 5987	[c=5]movdi_to_tr_unspec/1
	load8! &6 	#X5	# 5989	[c=30]*umoddi3/2
	rem_u
	store8! &13 	#X12	# 5991	[c=4]movsi_from_tr_unspec/0
	load4! &0 	#AR	# 5992	[c=5]movsi_to_tr_unspec/1
	store8! &6 	#X5	# 5994	[c=4]movdi_from_tr_unspec/0
	load4! &6 	#X6	# 5995	[c=5]movsi_to_tr_unspec/1
	store8! &1 	#AR	# 5997	[c=4]movdi_from_tr_unspec/0
	load8! &5 	#X5	# 5998	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 6000	[c=30]*udivdi3/2
	div_u
	store8! &6 	#X5	# 6002	[c=4]movsi_from_tr_unspec/0
	load8! &5 	#X5	# 6003	[c=5]movdi_to_tr_unspec/1
	load8! &11 	#X10	# 6005	[c=6]*muldi3/2
	mult
	store8! &10 	#X9	# 6007	[c=4]movsi_from_tr_unspec/0
	load8! &12 	#X12	# 6008	[c=5]movdi_to_tr_unspec/1
	shift_l! 16	# 6010	[c=8]*ashldi3/0
	store8! &1 	#AR	# 6011	[c=4]movdi_from_tr_unspec/0
	load8! &11 	#X11	# 6012	[c=5]movdi_to_tr_unspec/1
	and! 0xffff		# 6014	[c=4]*anddi3/0
	load8! &1 	#AR	# 6016	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 6017	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 6018	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	load4! &10 	#X9
	lt_u	
	jump_zero! .L30.l_o41067e
	# END CBRANCH
	jump! .L139.l_o41067e		# 6267	[c=4]jump
.L125.l_o41067e:
	load8! &5 	#X5	# 1354	[c=5]movdi_to_tr_unspec/1
	add! -2		# 1356	[c=4]*adddi/0
	store8! &6 	#X5	# 4776	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 4777	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 4150	[c=6]*adddi/2
	add
	store8! &1 	#AR	# 1370	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 6022	[c=5]movdi_to_tr_unspec/1
	load8! &10 	#X9	# 6024	[c=14]*subdi3/2
	sub
	store8! &1 	#AR	# 6025	[c=4]movdi_from_tr_unspec/0
	load8! &8 	#X8	# 6026	[c=5]movdi_to_tr_unspec/1
	shift_l! 16	# 6028	[c=8]*ashldi3/0
	load8! &6 	#X5	# 6030	[c=6]*iordi3/2
	or
	store8! &6 	#X5	# 6031	[c=4]movdi_from_tr_unspec/0
	load4! &5 	#X5	# 6032	[c=5]movsi_to_tr_unspec/1
	shift_ru! 16	# 6034	[c=40]*lshrdi3/0
	store8! &12 	#X11	# 6036	[c=4]movsi_from_tr_unspec/0
	load4! &4 	#X4	# 6037	[c=5]movsi_to_tr_unspec/1
	shift_ru! 16	# 6039	[c=40]*lshrdi3/0
	store8! &9 	#X8	# 6040	[c=4]movdi_from_tr_unspec/0
	load8! &5 	#X5	# 6041	[c=5]movdi_to_tr_unspec/1
	and! 0xffff		# 6043	[c=4]*anddi3/0
	store8! &13 	#X12	# 6045	[c=4]movsi_from_tr_unspec/0
	load8! &4 	#X4	# 6046	[c=5]movdi_to_tr_unspec/1
	and! 0xffff		# 6048	[c=4]*anddi3/0
	store8! &10 	#X9	# 6049	[c=4]movdi_from_tr_unspec/0
	load8! &12 	#X12	# 6050	[c=5]movdi_to_tr_unspec/1
	load8! &10 	#X9	# 6052	[c=6]*muldi3/2
	mult
	store8! &14 	#X13	# 6053	[c=4]movdi_from_tr_unspec/0
	load8! &12 	#X12	# 6054	[c=5]movdi_to_tr_unspec/1
	load8! &9 	#X8	# 6056	[c=6]*muldi3/2
	mult
	store8! &13 	#X12	# 6057	[c=4]movdi_from_tr_unspec/0
	load8! &9 	#X9	# 6058	[c=5]movdi_to_tr_unspec/1
	load8! &12 	#X11	# 6060	[c=6]*muldi3/2
	mult
	store8! &15 	#X14	# 6061	[c=4]movdi_from_tr_unspec/0
	load8! &8 	#X8	# 6062	[c=5]movdi_to_tr_unspec/1
	load8! &12 	#X11	# 6064	[c=6]*muldi3/2
	mult
	store8! &12 	#X11	# 6065	[c=4]movdi_from_tr_unspec/0
	load4! &13 	#X13	# 6066	[c=5]movsi_to_tr_unspec/1
	shift_ru! 16	# 6068	[c=40]*lshrdi3/0
	store8! &16 	#X15	# 6069	[c=4]movdi_from_tr_unspec/0
	load8! &14 	#X14	# 6070	[c=5]movdi_to_tr_unspec/1
	load8! &13 	#X12	# 6072	[c=6]*adddi/2
	add
	load8! &16 	#X15	# 6074	[c=6]*adddi/2
	add
	store8! &13 	#X12	# 6075	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 6076	[c=12]cbranchsi4_internal
	load4! &12 	#X12
	load4! &15 	#X14
	lt_u	
	jump_zero! .L31.l_o41067e
	# END CBRANCH
	jump! .L140.l_o41067e		# 6270	[c=4]jump
.L127.l_o41067e:
	# CBRANCH EQ	# 1701	[c=12]cbranchsi4_internal
	load4! &3 	#X3
	load4! &1 	#AR
	xor	
	jump_zero! .L141.l_o41067e
	# END CBRANCH
	load4! &12 	#X12	# 39	[c=4]movsi_push_pop
	store8! &6 	#X5
	load8! &13 	#X13	# 6079	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 6081	[c=14]*subdi3/2
	sub
	neg		# 6082	[c=4]*neg_tr
	store8! &13 	#X12	# 6083	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 6084	[c=5]movdi_to_tr_unspec/1
	load8! &12 	#X11	# 6086	[c=14]*subdi3/2
	sub
	store8! &12 	#X11	# 6088	[c=4]movsi_from_tr_unspec/0
	push! 1		# 6089	[c=4]movqi_push_pop
	store8! &1 	#AR
	# CBRANCH	# 6090	[c=12]cbranchsi4_internal
	load4! &2 	#X2
	load4! &13 	#X12
	lt_u	
	not	
	jump_zero! .L38.l_o41067e
	# END CBRANCH
	jump! .L142.l_o41067e		# 6275	[c=4]jump
.L141.l_o41067e:
	# CBRANCH	# 1703	[c=12]cbranchsi4_internal
	load4! &2 	#X2
	load4! &5 	#X4
	lt_u	
	jump_zero! .L35.l_o41067e
	# END CBRANCH
	load4! &12 	#X12	# 40	[c=4]movsi_push_pop
	store8! &6 	#X5
	load8! &13 	#X13	# 6093	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 6095	[c=14]*subdi3/2
	sub
	neg		# 6096	[c=4]*neg_tr
	store8! &13 	#X12	# 6097	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 6098	[c=5]movdi_to_tr_unspec/1
	load8! &12 	#X11	# 6100	[c=14]*subdi3/2
	sub
	store8! &12 	#X11	# 6102	[c=4]movsi_from_tr_unspec/0
	push! 1		# 6103	[c=4]movqi_push_pop
	store8! &1 	#AR
	# CBRANCH	# 6104	[c=12]cbranchsi4_internal
	load4! &2 	#X2
	load4! &13 	#X12
	lt_u	
	not	
	jump_zero! .L38.l_o41067e
	# END CBRANCH
	jump! .L142.l_o41067e		# 6278	[c=4]jump
.L36.l_o41067e:
	load8! &5 	#X5	# 1713	[c=5]movdi_to_tr_unspec/1
	add! -2		# 1715	[c=4]*adddi/0
	store8! &6 	#X5	# 4723	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 4724	[c=5]movdi_to_tr_unspec/1
	load8! &5 	#X4	# 4063	[c=6]*adddi/2
	add
	store8! &3 	#X2	# 1729	[c=4]movdi_from_tr_unspec/0
	push! 1		# 4065	[c=4]movqi_push_pop
	store8! &13 	#X12
	# CBRANCH	# 1736	[c=12]cbranchsi4_internal
	load4! &2 	#X2
	load4! &5 	#X4
	lt_u	
	jump_zero! .L143.l_o41067e
	# END CBRANCH
	load1! &12 	#X12	# 4051	[c=5]movqi_to_tr_unspec/1
	load8! &4 	#X3	# 5063	[c=6]*adddi/2
	add
	load8! &1 	#AR	# 1767	[c=6]*adddi/2
	add
	store8! &1 	#AR	# 1768	[c=4]movdi_from_tr_unspec/0
.L144.l_o41067e:
	load8! &13 	#X13	# 6107	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 6109	[c=14]*subdi3/2
	sub
	neg		# 6110	[c=4]*neg_tr
	store8! &13 	#X12	# 6111	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 6112	[c=5]movdi_to_tr_unspec/1
	load8! &12 	#X11	# 6114	[c=14]*subdi3/2
	sub
	store8! &12 	#X11	# 6116	[c=4]movsi_from_tr_unspec/0
	push! 1		# 6117	[c=4]movqi_push_pop
	store8! &1 	#AR
	# CBRANCH	# 6118	[c=12]cbranchsi4_internal
	load4! &2 	#X2
	load4! &13 	#X12
	lt_u	
	not	
	jump_zero! .L38.l_o41067e
	# END CBRANCH
	jump! .L142.l_o41067e		# 6282	[c=4]jump
.L81.l_o41067e:
	load4! &12 	#X12	# 41	[c=4]movsi_push_pop
	store8! &6 	#X5
	load8! &13 	#X13	# 6121	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 6123	[c=14]*subdi3/2
	sub
	neg		# 6124	[c=4]*neg_tr
	store8! &13 	#X12	# 6125	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 6126	[c=5]movdi_to_tr_unspec/1
	load8! &12 	#X11	# 6128	[c=14]*subdi3/2
	sub
	store8! &12 	#X11	# 6130	[c=4]movsi_from_tr_unspec/0
	push! 1		# 6131	[c=4]movqi_push_pop
	store8! &1 	#AR
	# CBRANCH	# 6132	[c=12]cbranchsi4_internal
	load4! &2 	#X2
	load4! &13 	#X12
	lt_u	
	not	
	jump_zero! .L38.l_o41067e
	# END CBRANCH
	jump! .L142.l_o41067e		# 6285	[c=4]jump
.L83.l_o41067e:
	push! 0		# 55	[c=4]movsi_push_pop
	store8! &4 	#X3
	push! 1		# 56	[c=4]movsi_push_pop
	store8! &5 	#X4
	load8! &4 	#X4	# 6135	[c=5]movdi_to_tr_unspec/1
	load8! &6 	#X5	# 6137	[c=6]*adddi/2
	add
	store8! &6 	#X5	# 6139	[c=4]movsi_from_tr_unspec/0
	jump! .L57.l_o41067e		# 6287	[c=4]jump
.L143.l_o41067e:
	push! 0		# 1737	[c=4]movqi_push_pop
	store8! &13 	#X12
	load1! &12 	#X12	# 6142	[c=5]movqi_to_tr_unspec/1
	load8! &4 	#X3	# 6144	[c=6]*adddi/2
	add
	load8! &1 	#AR	# 6146	[c=6]*adddi/2
	add
	store8! &1 	#AR	# 6147	[c=4]movdi_from_tr_unspec/0
	jump! .L144.l_o41067e		# 6290	[c=4]jump
.L119.l_o41067e:

	# epilogue
	set_sp! &16
	return

# FUNCTION ENDS:__divdf3

#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: oebc334
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"eqdf2.c"
#	.text
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole nop+set
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole zero_extend
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole zero_extend
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole move
	#peephole move
	#peephole move+push(pushable)
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole move_dead
	#peephole move
	#peephole move
	#peephole move+push(pushable)
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push

# FUNCTION BEGINS:__eqdf2
	EXPORT	__eqdf2
__eqdf2:
	# prologue (9 GPRs)

	set_sp! &-9

	load8! &10	# 377	[c=2]movdi_push_pop
	store8! &1 	#AR
	load8! &10	# 379	[c=5]movdi_to_tr_unspec/1
	store8! &5 	#X4	# 27	[c=4]movsi_from_tr_unspec/0
	load8! &0 	#AR	# 29	[c=5]movdi_to_tr_unspec/1
	shift_ru! 32	# 31	[c=40]*lshrdi3/0
	and! 0xfffff		# 40	[c=4]*anddi3/0
	store8! &4 	#X3	# 421	[c=4]movsi_from_tr_unspec/0
	load8! &0 	#AR	# 48	[c=5]movdi_to_tr_unspec/1
	shift_ru! 52	# 50	[c=40]*lshrdi3/0
	and! 0x7ff		# 59	[c=4]*anddi3/0
	and! 0xffff		# 456	[c=4]*anddi3/0
	store8! &2 	#X1	# 429	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 430	[c=5]movdi_to_tr_unspec/1
	shift_ru! 63	# 77	[c=40]*lshrdi3/0
	store8! &6 	#X5	# 433	[c=4]movqi_from_tr_unspec/0
	load8! &11	# 390	[c=2]movdi_push_pop
	store8! &1 	#AR
	load8! &11	# 392	[c=5]movdi_to_tr_unspec/1
	store8! &7 	#X6	# 94	[c=4]movsi_from_tr_unspec/0
	load8! &0 	#AR	# 96	[c=5]movdi_to_tr_unspec/1
	shift_ru! 32	# 98	[c=40]*lshrdi3/0
	and! 0xfffff		# 107	[c=4]*anddi3/0
	store8! &8 	#X7	# 439	[c=4]movsi_from_tr_unspec/0
	load8! &0 	#AR	# 115	[c=5]movdi_to_tr_unspec/1
	shift_ru! 52	# 117	[c=40]*lshrdi3/0
	and! 0x7ff		# 126	[c=4]*anddi3/0
	and! 0xffff		# 458	[c=4]*anddi3/0
	store8! &3 	#X2	# 447	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 448	[c=5]movdi_to_tr_unspec/1
	shift_ru! 63	# 144	[c=40]*lshrdi3/0
	store8! &1 	#AR	# 450	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ	# 451	[c=12]cbranchsi4_internal
	load4! &1 	#X1
	push! 2047	
	xor	
	jump_zero! .L20.l_oebc334
	# END CBRANCH
	# CBRANCH EQ	# 172	[c=12]cbranchsi4_internal
	load4! &2 	#X2
	push! 2047	
	xor	
	jump_zero! .L5.l_oebc334
	# END CBRANCH
	# CBRANCH	# 174	[c=12]cbranchsi4_internal
	load4! &1 	#X1
	load4! &3 	#X2
	xor	
	push! 1	
	lt_u	
	jump_zero! .L10.l_oebc334
	# END CBRANCH
	# CBRANCH EQ	# 176	[c=12]cbranchsi4_internal
	load4! &3 	#X3
	load4! &8 	#X7
	xor	
	jump_zero! .L8.l_oebc334
	# END CBRANCH
	push! 1		# 10	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 273	[c=4]movdi_push_pop
	store8! &11
	jump! .L21.l_oebc334		# 492	[c=4]jump
.L5.l_oebc334:
	load8! &6 	#X6	# 353	[c=5]movdi_to_tr_unspec/1
	load8! &8 	#X7	# 355	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 242	[c=4]movdi_from_tr_unspec/0
	push! 1		# 357	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 463	[c=4]movdi_push_pop
	store8! &11
	jump! .L21.l_oebc334		# 494	[c=4]jump
.L20.l_oebc334:
	load8! &4 	#X4	# 373	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 375	[c=6]*iordi3/2
	or
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 415	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L9.l_oebc334
	# END CBRANCH
	# CBRANCH EQ	# 229	[c=12]cbranchsi4_internal
	load4! &2 	#X2
	push! 2047	
	xor	
	jump_zero! .L7.l_oebc334
	# END CBRANCH
	push! 1		# 7	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 466	[c=4]movdi_push_pop
	store8! &11
	jump! .L21.l_oebc334		# 496	[c=4]jump
.L10.l_oebc334:
	push! 1		# 5	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 469	[c=4]movdi_push_pop
	store8! &11
	jump! .L21.l_oebc334		# 498	[c=4]jump
.L9.l_oebc334:
	push! 1		# 12	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 472	[c=4]movdi_push_pop
	store8! &11
	jump! .L21.l_oebc334		# 500	[c=4]jump
.L7.l_oebc334:
	load8! &6 	#X6	# 348	[c=5]movdi_to_tr_unspec/1
	load8! &8 	#X7	# 350	[c=6]*iordi3/2
	or
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 405	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L16.l_oebc334
	# END CBRANCH
.L8.l_oebc334:
	# CBRANCH EQ	# 178	[c=12]cbranchsi4_internal
	load4! &4 	#X4
	load4! &7 	#X6
	xor	
	jump_zero! .L22.l_oebc334
	# END CBRANCH
	push! 1		# 6	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 475	[c=4]movdi_push_pop
	store8! &11
	jump! .L21.l_oebc334		# 503	[c=4]jump
.L16.l_oebc334:
	push! 1		# 14	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 478	[c=4]movdi_push_pop
	store8! &11
	jump! .L21.l_oebc334		# 505	[c=4]jump
.L22.l_oebc334:
	# CBRANCH EQ	# 180	[c=12]cbranchqi4_internal
	load1! &5 	#X5
	load1! &1 	#AR
	xor	
	jump_zero! .L13.l_oebc334
	# END CBRANCH
	# CBRANCH EQ0	# 182	[c=12]cbranchsi4_internal
	load4! &1 	#X1
	jump_not_zero! .L14.l_oebc334
	# END CBRANCH
	load8! &4 	#X4	# 359	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 361	[c=6]*iordi3/2
	or
	and! 0xffffffff		# 452	[c=4]*anddi3/0
	neg		# 204	[c=3]*negdi2
	shift_ru! 63	# 209	[c=40]*lshrdi3/0
	and! 0xff		# 454	[c=4]*anddi3/0
	store8! &1 	#AR	# 371	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 481	[c=4]movdi_push_pop
	store8! &11
	jump! .L21.l_oebc334		# 507	[c=4]jump
.L13.l_oebc334:
	push! 0		# 9	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 484	[c=4]movdi_push_pop
	store8! &11
	jump! .L21.l_oebc334		# 509	[c=4]jump
.L14.l_oebc334:
	push! 1		# 8	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 487	[c=4]movdi_push_pop
	store8! &11
.L21.l_oebc334:

	# epilogue
	set_sp! &9
	return

# FUNCTION ENDS:__eqdf2

	EXPORT	__nedf2
	__nedf2=__eqdf2	#alias
#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: o0dfebb
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"fixdfsi.c"
#	.text
	#peephole 1
	#peephole move_dead
	#peephole move+push+sub
	#peephole 1
	#peephole zero_extend
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole move_dead
	#peephole move
	#peephole move+push(pushable)
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole move_dead
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole move
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole move_dead
	#peephole pop+block+push+block
	#peephole pop+push+pop+push
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+push+pop+push
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push

# FUNCTION BEGINS:__fixdfsi
	EXPORT	__fixdfsi
__fixdfsi:
	# prologue (4 GPRs)
	push! 0
	push! 0
	push! 0
	push! 0

	load8! &5	# 311	[c=2]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 11	[c=5]movdi_to_tr_unspec/1
	shift_ru! 32	# 13	[c=40]*lshrdi3/0
	and! 0xfffff		# 22	[c=4]*anddi3/0
	store8! &4 	#X3	# 352	[c=4]movsi_from_tr_unspec/0
	load8! &0 	#AR	# 29	[c=5]movdi_to_tr_unspec/1
	shift_ru! 52	# 31	[c=40]*lshrdi3/0
	and! 0x7ff		# 40	[c=4]*anddi3/0
	and! 0xffff		# 369	[c=4]*anddi3/0
	store8! &2 	#X1	# 360	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 361	[c=5]movdi_to_tr_unspec/1
	shift_ru! 63	# 58	[c=40]*lshrdi3/0
	store8! &3 	#X2	# 364	[c=4]movqi_from_tr_unspec/0
	# CBRANCH	# 65	[c=12]cbranchsi4_internal
	push! 1022	
	add! -2147483648	
	load4! &2 	#X1
	add! -2147483648	
	lt_u	
	jump_zero! .L7.l_o0dfebb
	# END CBRANCH
	# CBRANCH	# 67	[c=12]cbranchsi4_internal
	push! 1053	
	add! -2147483648	
	load4! &2 	#X1
	add! -2147483648	
	lt_u	
	jump_zero! .L3.l_o0dfebb
	# END CBRANCH
	load1! &2 	#X2	# 306	[c=5]movqi_to_tr_unspec/1
	add! 2147483647		# 80	[c=4]*adddi/0
	store8! &1 	#AR	# 81	[c=4]movdi_from_tr_unspec/0
.L2.l_o0dfebb:
	load4! &0 	#AR	# 241	[c=4]movsi_push_pop
	store4! &6
	jump! .L10.l_o0dfebb		# 381	[c=4]jump
.L7.l_o0dfebb:
	push! 0		# 4	[c=4]movsi_push_pop
	store8! &1 	#AR
	load4! &0 	#AR	# 374	[c=4]movsi_push_pop
	store4! &6
	jump! .L10.l_o0dfebb		# 383	[c=4]jump
.L3.l_o0dfebb:
	load8! &3 	#X3	# 93	[c=5]movdi_to_tr_unspec/1
	or! 0x100000		# 95	[c=4]*iordi3/0
	store8! &4 	#X3	# 340	[c=4]movsi_from_tr_unspec/0
	load8! &1 	#X1	# 300	[c=5]movdi_to_tr_unspec/1
	sub! 1075		# 302	[c=12]*subdi3/0
	neg		# 303	[c=4]*neg_tr
	store8! &1 	#AR	# 341	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 342	[c=12]cbranchsi4_internal
	push! 31	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L4.l_o0dfebb
	# END CBRANCH
	load8! &1 	#X1	# 117	[c=5]movdi_to_tr_unspec/1
	add! -1043		# 119	[c=4]*adddi/0
	and! 0xffffffff		# 367	[c=4]*anddi3/0
	pow2		# 282	[c=4]*pow_tr
	load8! &4 	#X3	# 283	[c=6]*muldi3/2
	mult
	store8! &4 	#X3	# 331	[c=4]movsi_from_tr_unspec/0
	load8! &5	# 286	[c=5]movdi_to_tr_unspec/1
	and! 0x0ffffffff	# 150	[c=1]*zero_extendsidi2
	load4! &1 	#AR	# 333	[c=5]movsi_to_tr_unspec/1
	store8! &2 	#AR	# 335	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#AR	# 160	[c=42]*lshrdi3/2
	shift_ru
	load8! &4 	#X3	# 296	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 174	[c=4]movdi_from_tr_unspec/0
.L5.l_o0dfebb:
	# CBRANCH EQ0	# 218	[c=12]cbranchqi4_internal
	load1! &2 	#X2
	jump_zero! .L2.l_o0dfebb
	# END CBRANCH
	load8! &0 	#AR	# 225	[c=5]movdi_to_tr_unspec/1
	neg		# 227	[c=3]*negdi2
	store8! &1 	#AR	# 228	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 377	[c=4]movsi_push_pop
	store4! &6
	jump! .L10.l_o0dfebb		# 385	[c=4]jump
.L4.l_o0dfebb:
	load8! &1 	#X1	# 265	[c=5]movdi_to_tr_unspec/1
	sub! 1043		# 267	[c=12]*subdi3/0
	neg		# 268	[c=4]*neg_tr
	store8! &1 	#AR	# 321	[c=4]movdi_from_tr_unspec/0
	load4! &3 	#X3	# 322	[c=5]movsi_to_tr_unspec/1
	load4! &1 	#AR	# 324	[c=5]movsi_to_tr_unspec/1
	store8! &2 	#AR	# 326	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#AR	# 209	[c=42]*lshrdi3/2
	shift_ru
	store8! &1 	#AR	# 210	[c=4]movdi_from_tr_unspec/0
	jump! .L5.l_o0dfebb		# 387	[c=4]jump
.L10.l_o0dfebb:

	# epilogue
	set_sp! &4
	return

# FUNCTION ENDS:__fixdfsi

#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: o761eed
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"floatsidf.c"
#	.text
	#peephole zero_extend
	#peephole binop1+deadreg+binop2
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole binop1+2
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole binop1+2
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole binop1+2
	#peephole 1
	#peephole nop+set
	#peephole 1
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole 1
	#peephole move_dead
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole zero_extend
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole pop+pusharg
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole pop+move2(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+push+pop+push
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push

# FUNCTION BEGINS:__floatsidf
	EXPORT	__floatsidf
__floatsidf:
	# prologue (6 GPRs)

	set_sp! &-6

	load4! &7	# 2	[c=2]movsi_push_pop
	store8! &3 	#X2
	# CBRANCH EQ0	# 11	[c=12]cbranchsi4_internal
	load4! &2 	#X2
	jump_zero! .L5.l_o761eed
	# END CBRANCH
	load4! &2 	#X2	# 412	[c=5]movsi_to_tr_unspec/1
	shift_ru! 31	# 414	[c=40]*lshrdi3/0
	store8! &4 	#X3	# 451	[c=4]movqi_from_tr_unspec/0
	# CBRANCH	# 29	[c=12]cbranchsi4_internal
	load4! &2 	#X2
	add! -2147483648	
	push! 0	
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L8.l_o761eed
	# END CBRANCH
	load4! &2 	#X2	# 386	[c=5]movsi_to_tr_unspec/1
	#peep - pop(deadreg)+pusharg	# 390	[c=0]*peep2_pop_pusharg
	call! __clzdi2		# 48	[c=0]*call_value_pop_1/0
	store8! &1

	load4! &0 	#AR	# 394	[c=5]movsi_to_tr_unspec/1
	add! -32		# 396	[c=4]*adddi/0
	store8! &1 	#AR	# 442	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 443	[c=5]movdi_to_tr_unspec/1
	sub! 1054		# 402	[c=12]*subdi3/0
	neg		# 403	[c=4]*neg_tr
	and! 0x7ff		# 83	[c=4]*anddi3/0
	store8! &2 	#X1	# 446	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 447	[c=12]cbranchsi4_internal
	push! 10	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L4.l_o761eed
	# END CBRANCH
.L10.l_o761eed:
	load8! &0 	#AR	# 365	[c=5]movdi_to_tr_unspec/1
	sub! 11		# 367	[c=12]*subdi3/0
	neg		# 368	[c=4]*neg_tr
	store8! &5 	#X4	# 427	[c=4]movdi_from_tr_unspec/0
	load4! &2 	#X2	# 428	[c=5]movsi_to_tr_unspec/1
	load4! &5 	#X4	# 430	[c=5]movsi_to_tr_unspec/1
	store8! &6 	#X4	# 432	[c=4]movdi_from_tr_unspec/0
	load8! &5 	#X4	# 117	[c=42]*lshrdi3/2
	shift_ru
	store8! &5 	#X4	# 433	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 434	[c=5]movdi_to_tr_unspec/1
	add! 21		# 126	[c=4]*adddi/0
	and! 0xffffffff		# 458	[c=4]*anddi3/0
	pow2		# 382	[c=4]*pow_tr
	load8! &3 	#X2	# 383	[c=6]*muldi3/2
	mult
	store8! &1 	#AR	# 439	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 440	[c=5]movdi_to_tr_unspec/1
	and! 0xfffff		# 149	[c=4]*anddi3/0
	store8! &3 	#X2	# 150	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 308	[c=5]movsi_to_tr_unspec/1
	store8! &5 	#X4	# 310	[c=4]movdi_from_tr_unspec/0
	push! 0		# 311	[c=3]movdi_to_tr_unspec/0
	and! 0xffffffff00000000		# 313	[c=4]*anddi3/0
	load8! &5 	#X4	# 314	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 315	[c=4]movdi_from_tr_unspec/0
	load4! &2 	#X2	# 319	[c=5]movsi_to_tr_unspec/1
	and! 0xfffff		# 321	[c=4]*anddi3/0
	shift_l! 32	# 222	[c=8]*ashldi3/0
	store8! &3 	#X2	# 223	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 324	[c=5]movdi_to_tr_unspec/1
	and! 0xfff00000ffffffff		# 326	[c=4]*anddi3/0
	load8! &3 	#X2	# 327	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 328	[c=4]movdi_from_tr_unspec/0
	load2! &1 	#X1	# 332	[c=5]movhi_to_tr_unspec/1
	and! 0x7ff		# 334	[c=4]*anddi3/0
	shift_l! 52	# 248	[c=8]*ashldi3/0
	store8! &2 	#X1	# 249	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 337	[c=5]movdi_to_tr_unspec/1
	and! 0x800fffffffffffff		# 339	[c=4]*anddi3/0
	load8! &2 	#X1	# 340	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 341	[c=4]movdi_from_tr_unspec/0
	load1! &3 	#X3	# 345	[c=5]movqi_to_tr_unspec/1
	shift_l! 63	# 347	[c=8]*ashldi3/0
	store8! &2 	#X1	# 348	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 349	[c=5]movdi_to_tr_unspec/1
	and! 0x7fffffffffffffff		# 351	[c=4]*anddi3/0
	load8! &2 	#X1	# 352	[c=6]*iordi3/2
	or
	store8! &8	# 417	[c=4]movdf_from_tr_unspec/0
	jump! .L9.l_o761eed		# 566	[c=4]jump
.L5.l_o761eed:
	push! 0		# 5	[c=4]movqi_push_pop
	store8! &4 	#X3
	push! 0		# 6	[c=4]movhi_push_pop
	store8! &2 	#X1
	push! 0		# 7	[c=4]movsi_push_pop
	store8! &3 	#X2
	push! 0		# 8	[c=4]movsi_push_pop
	store8! &1 	#AR
	load4! &0 	#AR	# 463	[c=5]movsi_to_tr_unspec/1
	store8! &5 	#X4	# 465	[c=4]movdi_from_tr_unspec/0
	push! 0		# 466	[c=3]movdi_to_tr_unspec/0
	and! 0xffffffff00000000		# 468	[c=4]*anddi3/0
	load8! &5 	#X4	# 469	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 470	[c=4]movdi_from_tr_unspec/0
	load4! &2 	#X2	# 471	[c=5]movsi_to_tr_unspec/1
	and! 0xfffff		# 473	[c=4]*anddi3/0
	shift_l! 32	# 475	[c=8]*ashldi3/0
	store8! &3 	#X2	# 476	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 477	[c=5]movdi_to_tr_unspec/1
	and! 0xfff00000ffffffff		# 479	[c=4]*anddi3/0
	load8! &3 	#X2	# 480	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 481	[c=4]movdi_from_tr_unspec/0
	load2! &1 	#X1	# 482	[c=5]movhi_to_tr_unspec/1
	and! 0x7ff		# 484	[c=4]*anddi3/0
	shift_l! 52	# 486	[c=8]*ashldi3/0
	store8! &2 	#X1	# 487	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 488	[c=5]movdi_to_tr_unspec/1
	and! 0x800fffffffffffff		# 490	[c=4]*anddi3/0
	load8! &2 	#X1	# 491	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 492	[c=4]movdi_from_tr_unspec/0
	load1! &3 	#X3	# 493	[c=5]movqi_to_tr_unspec/1
	shift_l! 63	# 495	[c=8]*ashldi3/0
	store8! &2 	#X1	# 496	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 497	[c=5]movdi_to_tr_unspec/1
	and! 0x7fffffffffffffff		# 499	[c=4]*anddi3/0
	load8! &2 	#X1	# 500	[c=6]*iordi3/2
	or
	store8! &8	# 501	[c=4]movdf_from_tr_unspec/0
	jump! .L9.l_o761eed		# 568	[c=4]jump
.L8.l_o761eed:
	load8! &2 	#X2	# 31	[c=5]movdi_to_tr_unspec/1
	neg		# 33	[c=3]*negdi2
	store8! &3 	#X2	# 449	[c=4]movsi_from_tr_unspec/0
	load4! &2 	#X2	# 504	[c=5]movsi_to_tr_unspec/1
	#peep - pop(deadreg)+pusharg	# 507	[c=0]*peep2_pop_pusharg
	call! __clzdi2		# 508	[c=0]*call_value_pop_1/0
	store8! &1

	load4! &0 	#AR	# 509	[c=5]movsi_to_tr_unspec/1
	add! -32		# 511	[c=4]*adddi/0
	store8! &1 	#AR	# 512	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 513	[c=5]movdi_to_tr_unspec/1
	sub! 1054		# 515	[c=12]*subdi3/0
	neg		# 516	[c=4]*neg_tr
	and! 0x7ff		# 518	[c=4]*anddi3/0
	store8! &2 	#X1	# 519	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 520	[c=12]cbranchsi4_internal
	push! 10	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	jump_zero! .L10.l_o761eed
	# END CBRANCH
.L4.l_o761eed:
	load8! &0 	#AR	# 160	[c=5]movdi_to_tr_unspec/1
	add! -11		# 162	[c=4]*adddi/0
	and! 0xffffffff		# 456	[c=4]*anddi3/0
	pow2		# 360	[c=4]*pow_tr
	load8! &3 	#X2	# 361	[c=6]*muldi3/2
	mult
	and! 0xfffff		# 185	[c=4]*anddi3/0
	store8! &3 	#X2	# 426	[c=4]movsi_from_tr_unspec/0
	push! 0		# 4	[c=4]movsi_push_pop
	store8! &1 	#AR
	load4! &0 	#AR	# 523	[c=5]movsi_to_tr_unspec/1
	store8! &5 	#X4	# 525	[c=4]movdi_from_tr_unspec/0
	push! 0		# 526	[c=3]movdi_to_tr_unspec/0
	and! 0xffffffff00000000		# 528	[c=4]*anddi3/0
	load8! &5 	#X4	# 529	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 530	[c=4]movdi_from_tr_unspec/0
	load4! &2 	#X2	# 531	[c=5]movsi_to_tr_unspec/1
	and! 0xfffff		# 533	[c=4]*anddi3/0
	shift_l! 32	# 535	[c=8]*ashldi3/0
	store8! &3 	#X2	# 536	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 537	[c=5]movdi_to_tr_unspec/1
	and! 0xfff00000ffffffff		# 539	[c=4]*anddi3/0
	load8! &3 	#X2	# 540	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 541	[c=4]movdi_from_tr_unspec/0
	load2! &1 	#X1	# 542	[c=5]movhi_to_tr_unspec/1
	and! 0x7ff		# 544	[c=4]*anddi3/0
	shift_l! 52	# 546	[c=8]*ashldi3/0
	store8! &2 	#X1	# 547	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 548	[c=5]movdi_to_tr_unspec/1
	and! 0x800fffffffffffff		# 550	[c=4]*anddi3/0
	load8! &2 	#X1	# 551	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 552	[c=4]movdi_from_tr_unspec/0
	load1! &3 	#X3	# 553	[c=5]movqi_to_tr_unspec/1
	shift_l! 63	# 555	[c=8]*ashldi3/0
	store8! &2 	#X1	# 556	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 557	[c=5]movdi_to_tr_unspec/1
	and! 0x7fffffffffffffff		# 559	[c=4]*anddi3/0
	load8! &2 	#X1	# 560	[c=6]*iordi3/2
	or
	store8! &8	# 561	[c=4]movdf_from_tr_unspec/0
.L9.l_o761eed:

	# epilogue
	set_sp! &6
	return

# FUNCTION ENDS:__floatsidf

#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: o277baa
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"floatunsidf.c"
#	.text
	#peephole zero_extend
	#peephole binop1+deadreg+binop2
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole binop1+2
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole binop1+2+3
	#peephole 1
	#peephole nop+set
	#peephole 1
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole 1
	#peephole move_dead
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole zero_extend
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole move_dead
	#peephole move_dead
	#peephole zero_extend
	#peephole pop+pusharg
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole pop+move2(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+push+pop+push
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push

# FUNCTION BEGINS:__floatunsidf
	EXPORT	__floatunsidf
__floatunsidf:
	# prologue (5 GPRs)

	set_sp! &-5

	load4! &6	# 2	[c=2]movsi_push_pop
	store8! &3 	#X2
	# CBRANCH EQ0	# 9	[c=12]cbranchsi4_internal
	load4! &2 	#X2
	jump_zero! .L4.l_o277baa
	# END CBRANCH
	load4! &2 	#X2	# 329	[c=5]movsi_to_tr_unspec/1
	#peep - pop(deadreg)+pusharg	# 333	[c=0]*peep2_pop_pusharg
	call! __clzdi2		# 17	[c=0]*call_value_pop_1/0
	store8! &1

	load4! &0 	#AR	# 337	[c=5]movsi_to_tr_unspec/1
	add! -32		# 339	[c=4]*adddi/0
	store8! &1 	#AR	# 377	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 378	[c=5]movdi_to_tr_unspec/1
	sub! 1054		# 345	[c=12]*subdi3/0
	neg		# 346	[c=4]*neg_tr
	and! 0x7ff		# 52	[c=4]*anddi3/0
	store8! &2 	#X1	# 381	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 382	[c=12]cbranchsi4_internal
	push! 10	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L3.l_o277baa
	# END CBRANCH
	load8! &0 	#AR	# 308	[c=5]movdi_to_tr_unspec/1
	sub! 11		# 310	[c=12]*subdi3/0
	neg		# 311	[c=4]*neg_tr
	store8! &4 	#X3	# 361	[c=4]movdi_from_tr_unspec/0
	load4! &2 	#X2	# 362	[c=5]movsi_to_tr_unspec/1
	load4! &4 	#X3	# 364	[c=5]movsi_to_tr_unspec/1
	store8! &5 	#X3	# 366	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X3	# 86	[c=42]*lshrdi3/2
	shift_ru
	store8! &4 	#X3	# 367	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 368	[c=5]movdi_to_tr_unspec/1
	add! 21		# 95	[c=4]*adddi/0
	and! 0xffffffff		# 389	[c=4]*anddi3/0
	pow2		# 325	[c=4]*pow_tr
	load8! &3 	#X2	# 326	[c=6]*muldi3/2
	mult
	store8! &3 	#X2	# 374	[c=4]movsi_from_tr_unspec/0
	load8! &3 	#X3	# 116	[c=5]movdi_to_tr_unspec/1
	and! 0xfffff		# 118	[c=4]*anddi3/0
	store8! &4 	#X3	# 376	[c=4]movsi_from_tr_unspec/0
	load4! &2 	#X2	# 262	[c=5]movsi_to_tr_unspec/1
	store8! &3 	#X2	# 264	[c=4]movdi_from_tr_unspec/0
	push! 0		# 265	[c=3]movdi_to_tr_unspec/0
	and! 0xffffffff00000000		# 267	[c=4]*anddi3/0
	load8! &3 	#X2	# 268	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 269	[c=4]movdi_from_tr_unspec/0
	load4! &3 	#X3	# 273	[c=5]movsi_to_tr_unspec/1
	and! 0xfffff		# 275	[c=4]*anddi3/0
	shift_l! 32	# 191	[c=8]*ashldi3/0
	store8! &3 	#X2	# 192	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 278	[c=5]movdi_to_tr_unspec/1
	and! 0xfff00000ffffffff		# 280	[c=4]*anddi3/0
	load8! &3 	#X2	# 281	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 282	[c=4]movdi_from_tr_unspec/0
	load2! &1 	#X1	# 286	[c=5]movhi_to_tr_unspec/1
	and! 0x7ff		# 288	[c=4]*anddi3/0
	shift_l! 52	# 217	[c=8]*ashldi3/0
	store8! &2 	#X1	# 218	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 291	[c=5]movdi_to_tr_unspec/1
	and! 0x800fffffffffffff		# 293	[c=4]*anddi3/0
	load8! &2 	#X1	# 294	[c=6]*iordi3/2
	or
	and! 0x7fffffffffffffff		# 295	[c=4]*anddi3/0
	store8! &7	# 351	[c=4]movdf_from_tr_unspec/0
	jump! .L7.l_o277baa		# 461	[c=4]jump
.L4.l_o277baa:
	push! 0		# 5	[c=4]movhi_push_pop
	store8! &2 	#X1
	push! 0		# 6	[c=4]movsi_push_pop
	store8! &4 	#X3
	load4! &2 	#X2	# 394	[c=5]movsi_to_tr_unspec/1
	store8! &3 	#X2	# 396	[c=4]movdi_from_tr_unspec/0
	push! 0		# 397	[c=3]movdi_to_tr_unspec/0
	and! 0xffffffff00000000		# 399	[c=4]*anddi3/0
	load8! &3 	#X2	# 400	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 401	[c=4]movdi_from_tr_unspec/0
	load4! &3 	#X3	# 402	[c=5]movsi_to_tr_unspec/1
	and! 0xfffff		# 404	[c=4]*anddi3/0
	shift_l! 32	# 406	[c=8]*ashldi3/0
	store8! &3 	#X2	# 407	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 408	[c=5]movdi_to_tr_unspec/1
	and! 0xfff00000ffffffff		# 410	[c=4]*anddi3/0
	load8! &3 	#X2	# 411	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 412	[c=4]movdi_from_tr_unspec/0
	load2! &1 	#X1	# 413	[c=5]movhi_to_tr_unspec/1
	and! 0x7ff		# 415	[c=4]*anddi3/0
	shift_l! 52	# 417	[c=8]*ashldi3/0
	store8! &2 	#X1	# 418	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 419	[c=5]movdi_to_tr_unspec/1
	and! 0x800fffffffffffff		# 421	[c=4]*anddi3/0
	load8! &2 	#X1	# 422	[c=6]*iordi3/2
	or
	and! 0x7fffffffffffffff		# 423	[c=4]*anddi3/0
	store8! &7	# 424	[c=4]movdf_from_tr_unspec/0
	jump! .L7.l_o277baa		# 463	[c=4]jump
.L3.l_o277baa:
	load8! &0 	#AR	# 129	[c=5]movdi_to_tr_unspec/1
	add! -11		# 131	[c=4]*adddi/0
	and! 0xffffffff		# 387	[c=4]*anddi3/0
	pow2		# 303	[c=4]*pow_tr
	load8! &3 	#X2	# 304	[c=6]*muldi3/2
	mult
	and! 0xfffff		# 154	[c=4]*anddi3/0
	store8! &4 	#X3	# 360	[c=4]movsi_from_tr_unspec/0
	push! 0		# 4	[c=4]movsi_push_pop
	store8! &3 	#X2
	load4! &2 	#X2	# 427	[c=5]movsi_to_tr_unspec/1
	store8! &3 	#X2	# 429	[c=4]movdi_from_tr_unspec/0
	push! 0		# 430	[c=3]movdi_to_tr_unspec/0
	and! 0xffffffff00000000		# 432	[c=4]*anddi3/0
	load8! &3 	#X2	# 433	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 434	[c=4]movdi_from_tr_unspec/0
	load4! &3 	#X3	# 435	[c=5]movsi_to_tr_unspec/1
	and! 0xfffff		# 437	[c=4]*anddi3/0
	shift_l! 32	# 439	[c=8]*ashldi3/0
	store8! &3 	#X2	# 440	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 441	[c=5]movdi_to_tr_unspec/1
	and! 0xfff00000ffffffff		# 443	[c=4]*anddi3/0
	load8! &3 	#X2	# 444	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 445	[c=4]movdi_from_tr_unspec/0
	load2! &1 	#X1	# 446	[c=5]movhi_to_tr_unspec/1
	and! 0x7ff		# 448	[c=4]*anddi3/0
	shift_l! 52	# 450	[c=8]*ashldi3/0
	store8! &2 	#X1	# 451	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 452	[c=5]movdi_to_tr_unspec/1
	and! 0x800fffffffffffff		# 454	[c=4]*anddi3/0
	load8! &2 	#X1	# 455	[c=6]*iordi3/2
	or
	and! 0x7fffffffffffffff		# 456	[c=4]*anddi3/0
	store8! &7	# 457	[c=4]movdf_from_tr_unspec/0
.L7.l_o277baa:

	# epilogue
	set_sp! &5
	return

# FUNCTION ENDS:__floatunsidf

#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: o08546f
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"fstat.c"
#	.text

# FUNCTION BEGINS:fstat
	EXPORT	fstat
fstat:
	# prologue (1 GPRs)
	push! 0

	# variadic *call_value
	call! __errno		# 7	[c=5]*call_value/0

	push! 88		# 9	[c=3]movsi_to_tr_unspec/0
	load8! &1 	#AR	# 11	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	push! -1		# 17	[c=4]movsi_push_pop
	store4! &3

	# epilogue
	store8! &0 #set_sp! &1
	return

# FUNCTION ENDS:fstat

#	IMPORT __errno
#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: of0b263
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"gedf2.c"
#	.text
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole move
	#peephole move
	#peephole move+push(pushable)
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole move
	#peephole move
	#peephole move+push(pushable)
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+cmp
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push

# FUNCTION BEGINS:__gedf2
	EXPORT	__gedf2
__gedf2:
	# prologue (10 GPRs)

	set_sp! &-10

	load8! &11	# 574	[c=2]movdi_push_pop
	store8! &1 	#AR
	load8! &11	# 576	[c=5]movdi_to_tr_unspec/1
	store8! &5 	#X4	# 37	[c=4]movsi_from_tr_unspec/0
	load8! &0 	#AR	# 39	[c=5]movdi_to_tr_unspec/1
	shift_ru! 32	# 41	[c=40]*lshrdi3/0
	and! 0xfffff		# 50	[c=4]*anddi3/0
	store8! &4 	#X3	# 630	[c=4]movsi_from_tr_unspec/0
	load8! &0 	#AR	# 58	[c=5]movdi_to_tr_unspec/1
	shift_ru! 52	# 60	[c=40]*lshrdi3/0
	and! 0x7ff		# 69	[c=4]*anddi3/0
	and! 0xffff		# 668	[c=4]*anddi3/0
	store8! &3 	#X2	# 639	[c=4]movsi_from_tr_unspec/0
	load8! &0 	#AR	# 85	[c=5]movdi_to_tr_unspec/1
	shift_ru! 63	# 87	[c=40]*lshrdi3/0
	and! 0xff		# 670	[c=4]*anddi3/0
	store8! &7 	#X6	# 644	[c=4]movsi_from_tr_unspec/0
	load8! &12	# 591	[c=2]movdi_push_pop
	store8! &1 	#AR
	load8! &12	# 593	[c=5]movdi_to_tr_unspec/1
	store8! &6 	#X5	# 113	[c=4]movsi_from_tr_unspec/0
	load8! &0 	#AR	# 115	[c=5]movdi_to_tr_unspec/1
	shift_ru! 32	# 117	[c=40]*lshrdi3/0
	and! 0xfffff		# 126	[c=4]*anddi3/0
	store8! &8 	#X7	# 650	[c=4]movsi_from_tr_unspec/0
	load8! &0 	#AR	# 134	[c=5]movdi_to_tr_unspec/1
	shift_ru! 52	# 136	[c=40]*lshrdi3/0
	and! 0x7ff		# 145	[c=4]*anddi3/0
	and! 0xffff		# 672	[c=4]*anddi3/0
	store8! &2 	#X1	# 658	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 659	[c=5]movdi_to_tr_unspec/1
	shift_ru! 63	# 163	[c=40]*lshrdi3/0
	and! 0xff		# 674	[c=4]*anddi3/0
	store8! &1 	#AR	# 664	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ	# 665	[c=12]cbranchsi4_internal
	load4! &2 	#X2
	push! 2047	
	xor	
	jump_zero! .L46.l_of0b263
	# END CBRANCH
	# CBRANCH EQ	# 200	[c=12]cbranchsi4_internal
	load4! &1 	#X1
	push! 2047	
	xor	
	jump_zero! .L47.l_of0b263
	# END CBRANCH
.L5.l_of0b263:
	# CBRANCH EQ0	# 218	[c=12]cbranchsi4_internal
	load4! &2 	#X2
	jump_not_zero! .L21.l_of0b263
	# END CBRANCH
	load8! &4 	#X4	# 555	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 557	[c=6]*iordi3/2
	or
	store8! &9 	#X8	# 614	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 615	[c=12]cbranchsi4_internal
	load4! &1 	#X1
	jump_not_zero! .L9.l_of0b263
	# END CBRANCH
	load8! &5 	#X5	# 550	[c=5]movdi_to_tr_unspec/1
	load8! &8 	#X7	# 552	[c=6]*iordi3/2
	or
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 613	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L9.l_of0b263
	# END CBRANCH
	# CBRANCH EQ0	# 271	[c=12]cbranchsi4_internal
	load4! &8 	#X8
	jump_not_zero! .L8.l_of0b263
	# END CBRANCH
	push! 0		# 13	[c=4]movdi_push_pop
	store8! &1 	#AR
.L1.l_of0b263:
	load8! &0 	#AR	# 384	[c=4]movdi_push_pop
	store8! &12
	jump! .L48.l_of0b263		# 727	[c=4]jump
.L47.l_of0b263:
	load8! &5 	#X5	# 565	[c=5]movdi_to_tr_unspec/1
	load8! &8 	#X7	# 567	[c=6]*iordi3/2
	or
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 621	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L5.l_of0b263
	# END CBRANCH
	push! -2		# 9	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 679	[c=4]movdi_push_pop
	store8! &12
	jump! .L48.l_of0b263		# 729	[c=4]jump
.L46.l_of0b263:
	load8! &4 	#X4	# 570	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 572	[c=6]*iordi3/2
	or
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 624	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L49.l_of0b263
	# END CBRANCH
	# CBRANCH EQ	# 353	[c=12]cbranchsi4_internal
	load4! &1 	#X1
	push! 2047	
	xor	
	jump_zero! .L50.l_of0b263
	# END CBRANCH
.L21.l_of0b263:
	# CBRANCH EQ0	# 220	[c=12]cbranchsi4_internal
	load4! &1 	#X1
	jump_not_zero! .L7.l_of0b263
	# END CBRANCH
	load8! &5 	#X5	# 560	[c=5]movdi_to_tr_unspec/1
	load8! &8 	#X7	# 562	[c=6]*iordi3/2
	or
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 618	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L8.l_of0b263
	# END CBRANCH
.L7.l_of0b263:
	# CBRANCH	# 326	[c=12]cbranchsi4_internal
	load4! &6 	#X6
	load4! &1 	#AR
	xor	
	push! 1	
	lt_u	
	jump_zero! .L15.l_of0b263
	# END CBRANCH
	# CBRANCH	# 286	[c=12]cbranchsi4_internal
	load4! &1 	#X1
	add! -2147483648	
	load4! &3 	#X2
	add! -2147483648	
	lt_u	
	jump_zero! .L10.l_of0b263
	# END CBRANCH
	push! 1		# 8	[c=4]movdi_push_pop
	store8! &1 	#AR
	# CBRANCH EQ0	# 288	[c=12]cbranchsi4_internal
	load4! &6 	#X6
	jump_zero! .L1.l_of0b263
	# END CBRANCH
	push! -1		# 11	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 682	[c=4]movdi_push_pop
	store8! &12
	jump! .L48.l_of0b263		# 733	[c=4]jump
.L9.l_of0b263:
	# CBRANCH EQ0	# 340	[c=12]cbranchsi4_internal
	load4! &8 	#X8
	jump_zero! .L51.l_of0b263
	# END CBRANCH
	# CBRANCH EQ	# 360	[c=12]cbranchsi4_internal
	load4! &6 	#X6
	load4! &1 	#AR
	xor	
	jump_zero! .L10.l_of0b263
	# END CBRANCH
.L15.l_of0b263:
	push! 1		# 12	[c=4]movdi_push_pop
	store8! &1 	#AR
	# CBRANCH EQ0	# 281	[c=12]cbranchsi4_internal
	load4! &6 	#X6
	jump_zero! .L1.l_of0b263
	# END CBRANCH
	push! -1		# 20	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 685	[c=4]movdi_push_pop
	store8! &12
	jump! .L48.l_of0b263		# 736	[c=4]jump
.L51.l_of0b263:
	# CBRANCH EQ0	# 276	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_zero! .L25.l_of0b263
	# END CBRANCH
	push! 1		# 5	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 688	[c=4]movdi_push_pop
	store8! &12
	jump! .L48.l_of0b263		# 738	[c=4]jump
.L8.l_of0b263:
	push! 1		# 15	[c=4]movdi_push_pop
	store8! &1 	#AR
	# CBRANCH EQ0	# 333	[c=12]cbranchsi4_internal
	load4! &6 	#X6
	jump_zero! .L1.l_of0b263
	# END CBRANCH
	push! -1		# 17	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 691	[c=4]movdi_push_pop
	store8! &12
	jump! .L48.l_of0b263		# 740	[c=4]jump
.L50.l_of0b263:
	load8! &5 	#X5	# 545	[c=5]movdi_to_tr_unspec/1
	load8! &8 	#X7	# 547	[c=6]*iordi3/2
	or
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 610	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L7.l_of0b263
	# END CBRANCH
	push! -2		# 24	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 694	[c=4]movdi_push_pop
	store8! &12
	jump! .L48.l_of0b263		# 742	[c=4]jump
.L10.l_of0b263:
	# CBRANCH	# 294	[c=12]cbranchsi4_internal
	load4! &2 	#X2
	add! -2147483648	
	load4! &2 	#X1
	add! -2147483648	
	lt_u	
	jump_zero! .L11.l_of0b263
	# END CBRANCH
	# CBRANCH EQ0	# 296	[c=12]cbranchsi4_internal
	load4! &6 	#X6
	jump_zero! .L28.l_of0b263
	# END CBRANCH
	push! 1		# 21	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 697	[c=4]movdi_push_pop
	store8! &12
	jump! .L48.l_of0b263		# 744	[c=4]jump
.L11.l_of0b263:
	# CBRANCH	# 302	[c=12]cbranchsi4_internal
	load4! &7 	#X7
	load4! &4 	#X3
	lt_u	
	not	
	jump_zero! .L12.l_of0b263
	# END CBRANCH
	# CBRANCH EQ	# 304	[c=12]cbranchsi4_internal
	load4! &3 	#X3
	load4! &8 	#X7
	xor	
	jump_zero! .L52.l_of0b263
	# END CBRANCH
	# CBRANCH	# 347	[c=12]cbranchsi4_internal
	load4! &3 	#X3
	load4! &8 	#X7
	lt_u	
	jump_zero! .L53.l_of0b263
	# END CBRANCH
.L19.l_of0b263:
	# CBRANCH EQ0	# 317	[c=12]cbranchsi4_internal
	load4! &6 	#X6
	jump_zero! .L31.l_of0b263
	# END CBRANCH
	push! 1		# 19	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 700	[c=4]movdi_push_pop
	store8! &12
	jump! .L48.l_of0b263		# 748	[c=4]jump
.L53.l_of0b263:
	push! 0		# 6	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 703	[c=4]movdi_push_pop
	store8! &12
	jump! .L48.l_of0b263		# 750	[c=4]jump
.L12.l_of0b263:
	push! 1		# 7	[c=4]movdi_push_pop
	store8! &1 	#AR
	# CBRANCH EQ0	# 309	[c=12]cbranchsi4_internal
	load4! &6 	#X6
	jump_zero! .L1.l_of0b263
	# END CBRANCH
	push! -1		# 14	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 706	[c=4]movdi_push_pop
	store8! &12
	jump! .L48.l_of0b263		# 752	[c=4]jump
.L25.l_of0b263:
	push! -1		# 18	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 709	[c=4]movdi_push_pop
	store8! &12
	jump! .L48.l_of0b263		# 754	[c=4]jump
.L49.l_of0b263:
	push! -2		# 16	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 712	[c=4]movdi_push_pop
	store8! &12
	jump! .L48.l_of0b263		# 756	[c=4]jump
.L52.l_of0b263:
	# CBRANCH	# 306	[c=12]cbranchsi4_internal
	load4! &5 	#X5
	load4! &5 	#X4
	lt_u	
	not	
	jump_zero! .L12.l_of0b263
	# END CBRANCH
	# CBRANCH	# 315	[c=12]cbranchsi4_internal
	load4! &4 	#X4
	load4! &6 	#X5
	lt_u	
	not	
	jump_zero! .L19.l_of0b263
	# END CBRANCH
	push! 0		# 10	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 715	[c=4]movdi_push_pop
	store8! &12
	jump! .L48.l_of0b263		# 758	[c=4]jump
.L28.l_of0b263:
	push! -1		# 23	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 718	[c=4]movdi_push_pop
	store8! &12
	jump! .L48.l_of0b263		# 760	[c=4]jump
.L31.l_of0b263:
	push! -1		# 22	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 721	[c=4]movdi_push_pop
	store8! &12
.L48.l_of0b263:

	# epilogue
	set_sp! &10
	return

# FUNCTION ENDS:__gedf2

	EXPORT	__gtdf2
	__gtdf2=__gedf2	#alias
#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: oa1e24e
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"getpid.c"
#	.text

# FUNCTION BEGINS:getpid
	EXPORT	getpid
getpid:
	# prologue (0 GPRs)

	push! 0		# 9	[c=4]movsi_push_pop
	store4! &2

	# epilogue
	return

# FUNCTION ENDS:getpid

#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: o32064d
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"isatty.c"
#	.text

# FUNCTION BEGINS:isatty
	EXPORT	isatty
isatty:
	# prologue (1 GPRs)
	push! 0

	# variadic *call_value
	call! __errno		# 6	[c=5]*call_value/0

	push! 25		# 8	[c=3]movsi_to_tr_unspec/0
	load8! &1 	#AR	# 10	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	push! 0		# 16	[c=4]movsi_push_pop
	store4! &3

	# epilogue
	store8! &0 #set_sp! &1
	return

# FUNCTION ENDS:isatty

#	IMPORT __errno
#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: oefc99b
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"kill.c"
#	.text

# FUNCTION BEGINS:kill
	EXPORT	kill
kill:
	# prologue (1 GPRs)
	push! 0

	# variadic *call_value
	call! __errno		# 7	[c=5]*call_value/0

	push! 88		# 9	[c=3]movsi_to_tr_unspec/0
	load8! &1 	#AR	# 11	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	push! -1		# 17	[c=4]movsi_push_pop
	store4! &3

	# epilogue
	store8! &0 #set_sp! &1
	return

# FUNCTION ENDS:kill

#	IMPORT __errno
#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: o0dbdde
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"ledf2.c"
#	.text
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole move
	#peephole move
	#peephole move+push(pushable)
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole move
	#peephole move
	#peephole move+push(pushable)
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+cmp
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push

# FUNCTION BEGINS:__ledf2
	EXPORT	__ledf2
__ledf2:
	# prologue (10 GPRs)

	set_sp! &-10

	load8! &11	# 574	[c=2]movdi_push_pop
	store8! &1 	#AR
	load8! &11	# 576	[c=5]movdi_to_tr_unspec/1
	store8! &5 	#X4	# 37	[c=4]movsi_from_tr_unspec/0
	load8! &0 	#AR	# 39	[c=5]movdi_to_tr_unspec/1
	shift_ru! 32	# 41	[c=40]*lshrdi3/0
	and! 0xfffff		# 50	[c=4]*anddi3/0
	store8! &4 	#X3	# 630	[c=4]movsi_from_tr_unspec/0
	load8! &0 	#AR	# 58	[c=5]movdi_to_tr_unspec/1
	shift_ru! 52	# 60	[c=40]*lshrdi3/0
	and! 0x7ff		# 69	[c=4]*anddi3/0
	and! 0xffff		# 668	[c=4]*anddi3/0
	store8! &3 	#X2	# 639	[c=4]movsi_from_tr_unspec/0
	load8! &0 	#AR	# 85	[c=5]movdi_to_tr_unspec/1
	shift_ru! 63	# 87	[c=40]*lshrdi3/0
	and! 0xff		# 670	[c=4]*anddi3/0
	store8! &7 	#X6	# 644	[c=4]movsi_from_tr_unspec/0
	load8! &12	# 591	[c=2]movdi_push_pop
	store8! &1 	#AR
	load8! &12	# 593	[c=5]movdi_to_tr_unspec/1
	store8! &6 	#X5	# 113	[c=4]movsi_from_tr_unspec/0
	load8! &0 	#AR	# 115	[c=5]movdi_to_tr_unspec/1
	shift_ru! 32	# 117	[c=40]*lshrdi3/0
	and! 0xfffff		# 126	[c=4]*anddi3/0
	store8! &8 	#X7	# 650	[c=4]movsi_from_tr_unspec/0
	load8! &0 	#AR	# 134	[c=5]movdi_to_tr_unspec/1
	shift_ru! 52	# 136	[c=40]*lshrdi3/0
	and! 0x7ff		# 145	[c=4]*anddi3/0
	and! 0xffff		# 672	[c=4]*anddi3/0
	store8! &2 	#X1	# 658	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 659	[c=5]movdi_to_tr_unspec/1
	shift_ru! 63	# 163	[c=40]*lshrdi3/0
	and! 0xff		# 674	[c=4]*anddi3/0
	store8! &1 	#AR	# 664	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ	# 665	[c=12]cbranchsi4_internal
	load4! &2 	#X2
	push! 2047	
	xor	
	jump_zero! .L46.l_o0dbdde
	# END CBRANCH
	# CBRANCH EQ	# 200	[c=12]cbranchsi4_internal
	load4! &1 	#X1
	push! 2047	
	xor	
	jump_zero! .L47.l_o0dbdde
	# END CBRANCH
.L5.l_o0dbdde:
	# CBRANCH EQ0	# 218	[c=12]cbranchsi4_internal
	load4! &2 	#X2
	jump_not_zero! .L21.l_o0dbdde
	# END CBRANCH
	load8! &4 	#X4	# 555	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 557	[c=6]*iordi3/2
	or
	store8! &9 	#X8	# 614	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 615	[c=12]cbranchsi4_internal
	load4! &1 	#X1
	jump_not_zero! .L9.l_o0dbdde
	# END CBRANCH
	load8! &5 	#X5	# 550	[c=5]movdi_to_tr_unspec/1
	load8! &8 	#X7	# 552	[c=6]*iordi3/2
	or
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 613	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L9.l_o0dbdde
	# END CBRANCH
	# CBRANCH EQ0	# 271	[c=12]cbranchsi4_internal
	load4! &8 	#X8
	jump_not_zero! .L8.l_o0dbdde
	# END CBRANCH
	push! 0		# 13	[c=4]movdi_push_pop
	store8! &1 	#AR
.L1.l_o0dbdde:
	load8! &0 	#AR	# 384	[c=4]movdi_push_pop
	store8! &12
	jump! .L48.l_o0dbdde		# 727	[c=4]jump
.L47.l_o0dbdde:
	load8! &5 	#X5	# 565	[c=5]movdi_to_tr_unspec/1
	load8! &8 	#X7	# 567	[c=6]*iordi3/2
	or
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 621	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L5.l_o0dbdde
	# END CBRANCH
	push! 2		# 9	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 679	[c=4]movdi_push_pop
	store8! &12
	jump! .L48.l_o0dbdde		# 729	[c=4]jump
.L9.l_o0dbdde:
	# CBRANCH EQ0	# 340	[c=12]cbranchsi4_internal
	load4! &8 	#X8
	jump_zero! .L49.l_o0dbdde
	# END CBRANCH
	# CBRANCH EQ	# 360	[c=12]cbranchsi4_internal
	load4! &6 	#X6
	load4! &1 	#AR
	xor	
	jump_zero! .L10.l_o0dbdde
	# END CBRANCH
.L15.l_o0dbdde:
	push! 1		# 12	[c=4]movdi_push_pop
	store8! &1 	#AR
	# CBRANCH EQ0	# 281	[c=12]cbranchsi4_internal
	load4! &6 	#X6
	jump_zero! .L1.l_o0dbdde
	# END CBRANCH
	push! -1		# 20	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 682	[c=4]movdi_push_pop
	store8! &12
	jump! .L48.l_o0dbdde		# 732	[c=4]jump
.L46.l_o0dbdde:
	load8! &4 	#X4	# 570	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 572	[c=6]*iordi3/2
	or
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 624	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L50.l_o0dbdde
	# END CBRANCH
	# CBRANCH EQ	# 353	[c=12]cbranchsi4_internal
	load4! &1 	#X1
	push! 2047	
	xor	
	jump_zero! .L51.l_o0dbdde
	# END CBRANCH
.L21.l_o0dbdde:
	# CBRANCH EQ0	# 220	[c=12]cbranchsi4_internal
	load4! &1 	#X1
	jump_not_zero! .L7.l_o0dbdde
	# END CBRANCH
	load8! &5 	#X5	# 560	[c=5]movdi_to_tr_unspec/1
	load8! &8 	#X7	# 562	[c=6]*iordi3/2
	or
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 618	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L8.l_o0dbdde
	# END CBRANCH
.L7.l_o0dbdde:
	# CBRANCH	# 326	[c=12]cbranchsi4_internal
	load4! &6 	#X6
	load4! &1 	#AR
	xor	
	push! 1	
	lt_u	
	jump_zero! .L15.l_o0dbdde
	# END CBRANCH
	# CBRANCH	# 286	[c=12]cbranchsi4_internal
	load4! &1 	#X1
	add! -2147483648	
	load4! &3 	#X2
	add! -2147483648	
	lt_u	
	jump_zero! .L10.l_o0dbdde
	# END CBRANCH
	push! 1		# 8	[c=4]movdi_push_pop
	store8! &1 	#AR
	# CBRANCH EQ0	# 288	[c=12]cbranchsi4_internal
	load4! &6 	#X6
	jump_zero! .L1.l_o0dbdde
	# END CBRANCH
	push! -1		# 11	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 685	[c=4]movdi_push_pop
	store8! &12
	jump! .L48.l_o0dbdde		# 736	[c=4]jump
.L49.l_o0dbdde:
	# CBRANCH EQ0	# 276	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_zero! .L25.l_o0dbdde
	# END CBRANCH
	push! 1		# 5	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 688	[c=4]movdi_push_pop
	store8! &12
	jump! .L48.l_o0dbdde		# 738	[c=4]jump
.L8.l_o0dbdde:
	push! 1		# 15	[c=4]movdi_push_pop
	store8! &1 	#AR
	# CBRANCH EQ0	# 333	[c=12]cbranchsi4_internal
	load4! &6 	#X6
	jump_zero! .L1.l_o0dbdde
	# END CBRANCH
	push! -1		# 17	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 691	[c=4]movdi_push_pop
	store8! &12
	jump! .L48.l_o0dbdde		# 740	[c=4]jump
.L51.l_o0dbdde:
	load8! &5 	#X5	# 545	[c=5]movdi_to_tr_unspec/1
	load8! &8 	#X7	# 547	[c=6]*iordi3/2
	or
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 610	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L7.l_o0dbdde
	# END CBRANCH
	push! 2		# 24	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 694	[c=4]movdi_push_pop
	store8! &12
	jump! .L48.l_o0dbdde		# 742	[c=4]jump
.L50.l_o0dbdde:
	push! 2		# 16	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 697	[c=4]movdi_push_pop
	store8! &12
	jump! .L48.l_o0dbdde		# 744	[c=4]jump
.L10.l_o0dbdde:
	# CBRANCH	# 294	[c=12]cbranchsi4_internal
	load4! &2 	#X2
	add! -2147483648	
	load4! &2 	#X1
	add! -2147483648	
	lt_u	
	jump_zero! .L11.l_o0dbdde
	# END CBRANCH
	# CBRANCH EQ0	# 296	[c=12]cbranchsi4_internal
	load4! &6 	#X6
	jump_zero! .L28.l_o0dbdde
	# END CBRANCH
	push! 1		# 21	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 700	[c=4]movdi_push_pop
	store8! &12
	jump! .L48.l_o0dbdde		# 746	[c=4]jump
.L11.l_o0dbdde:
	# CBRANCH	# 302	[c=12]cbranchsi4_internal
	load4! &7 	#X7
	load4! &4 	#X3
	lt_u	
	not	
	jump_zero! .L12.l_o0dbdde
	# END CBRANCH
	# CBRANCH EQ	# 304	[c=12]cbranchsi4_internal
	load4! &3 	#X3
	load4! &8 	#X7
	xor	
	jump_zero! .L52.l_o0dbdde
	# END CBRANCH
	# CBRANCH	# 347	[c=12]cbranchsi4_internal
	load4! &3 	#X3
	load4! &8 	#X7
	lt_u	
	jump_zero! .L53.l_o0dbdde
	# END CBRANCH
.L19.l_o0dbdde:
	# CBRANCH EQ0	# 317	[c=12]cbranchsi4_internal
	load4! &6 	#X6
	jump_zero! .L31.l_o0dbdde
	# END CBRANCH
	push! 1		# 19	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 703	[c=4]movdi_push_pop
	store8! &12
	jump! .L48.l_o0dbdde		# 750	[c=4]jump
.L53.l_o0dbdde:
	push! 0		# 6	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 706	[c=4]movdi_push_pop
	store8! &12
	jump! .L48.l_o0dbdde		# 752	[c=4]jump
.L12.l_o0dbdde:
	push! 1		# 7	[c=4]movdi_push_pop
	store8! &1 	#AR
	# CBRANCH EQ0	# 309	[c=12]cbranchsi4_internal
	load4! &6 	#X6
	jump_zero! .L1.l_o0dbdde
	# END CBRANCH
	push! -1		# 14	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 709	[c=4]movdi_push_pop
	store8! &12
	jump! .L48.l_o0dbdde		# 754	[c=4]jump
.L25.l_o0dbdde:
	push! -1		# 18	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 712	[c=4]movdi_push_pop
	store8! &12
	jump! .L48.l_o0dbdde		# 756	[c=4]jump
.L52.l_o0dbdde:
	# CBRANCH	# 306	[c=12]cbranchsi4_internal
	load4! &5 	#X5
	load4! &5 	#X4
	lt_u	
	not	
	jump_zero! .L12.l_o0dbdde
	# END CBRANCH
	# CBRANCH	# 315	[c=12]cbranchsi4_internal
	load4! &4 	#X4
	load4! &6 	#X5
	lt_u	
	not	
	jump_zero! .L19.l_o0dbdde
	# END CBRANCH
	push! 0		# 10	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 715	[c=4]movdi_push_pop
	store8! &12
	jump! .L48.l_o0dbdde		# 758	[c=4]jump
.L28.l_o0dbdde:
	push! -1		# 23	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 718	[c=4]movdi_push_pop
	store8! &12
	jump! .L48.l_o0dbdde		# 760	[c=4]jump
.L31.l_o0dbdde:
	push! -1		# 22	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 721	[c=4]movdi_push_pop
	store8! &12
.L48.l_o0dbdde:

	# epilogue
	set_sp! &10
	return

# FUNCTION ENDS:__ledf2

	EXPORT	__ltdf2
	__ltdf2=__ledf2	#alias
#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: o5712fb
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"__call_atexit.c"
#	.text
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole move_dead
	#peephole pop+cmp
	#peephole unary+deadreg+binop
	#peephole unary1+binop2+deadreg+binop3
	#peephole pop+push+commut(di)
	#peephole move_dead
	#peephole pop+block+push+block
	#peephole pop(deadreg)+pushdi
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block

# FUNCTION BEGINS:__call_exitprocs
	EXPORT	__call_exitprocs
__call_exitprocs:
	# prologue (9 GPRs)

	set_sp! &-9

	load8! &11	# 3	[c=2]movdi_push_pop
	store8! &6 	#X5
	load8! _global_impure_ptr	# 238	[c=1]movdi_push_pop
	store8! &8 	#X7
.L18.l_o5712fb:
	load8! &7 	#X7	# 9	[c=11]movdi_to_tr_unspec/2
	add! 504	
	load8	
	#	
	store8! &5 	#X4	# 11	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 13	[c=12]cbranchdi4_internal
	load8! &4 	#X4
	jump_zero! .L1.l_o5712fb
	# END CBRANCH
	load8! &4 	#X4	# 19	[c=6]movsi_to_tr_unspec/2
	add! 8	
	load4	
	#	
	store8! &1 	#AR	# 21	[c=4]movsi_from_tr_unspec/0
	load8! &0 	#AR	# 23	[c=5]movdi_to_tr_unspec/1
	add! -1		# 25	[c=4]*adddi/0
	store8! &4 	#X3	# 315	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 33	[c=12]cbranchsi4_internal
	load4! &3 	#X3
	add! -2147483648	
	push! 0	
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L1.l_o5712fb
	# END CBRANCH
	load4! &0 	#AR	# 288	[c=5]movsi_to_tr_unspec/1
	sigx4		# 290	[c=6]*extendsidi2
	add! 1		# 291	[c=4]*adddi/0
	shift_l! 3	# 292	[c=8]*ashldi3/0
	load8! &5 	#X4	# 295	[c=6]*adddi/2
	add
	store8! &3 	#X2	# 296	[c=4]movdi_from_tr_unspec/0
.L5.l_o5712fb:
	# CBRANCH EQ0	# 57	[c=12]cbranchdi4_internal
	load8! &5 	#X5
	jump_zero! .L4.l_o5712fb
	# END CBRANCH
	load8! &2 	#X2	# 60	[c=11]movdi_to_tr_unspec/2
	add! 512	
	load8	
	#	
	# CBRANCH - peep (modesize=8)
	# - EQ
	load8! &6 	#X5	# 282	[c=12]*peep2_cbranchdi
	xor	
	jump_zero! .L4.l_o5712fb
	# END CBRANCH
.L8.l_o5712fb:
	load8! &3 	#X3	# 66	[c=5]movdi_to_tr_unspec/1
	add! -1		# 68	[c=4]*adddi/0
	store8! &4 	#X3	# 313	[c=4]movsi_from_tr_unspec/0
	load8! &2 	#X2	# 80	[c=5]movdi_to_tr_unspec/1
	add! -8		# 82	[c=4]*adddi/0
	store8! &3 	#X2	# 83	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 87	[c=12]cbranchsi4_internal
	load4! &3 	#X3
	push! 4294967295	
	xor	
	push! 1	
	lt_u	
	jump_zero! .L5.l_o5712fb
	# END CBRANCH
	jump! .L1.l_o5712fb		# 336	[c=4]jump
.L4.l_o5712fb:
	load8! &2 	#X2	# 94	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	store8! &1 	#AR	# 96	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 98	[c=6]movsi_to_tr_unspec/2
	add! 8	
	load4	
	#	
	add! -1		# 104	[c=4]*adddi/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 311	[c=12]*peep2_cbranchsi
	# - EQ
	load4! &4 	#X3
	xor	
	jump_zero! .L24.l_o5712fb
	# END CBRANCH
	push! 0		# 121	[c=3]movdi_to_tr_unspec/0
	load8! &3 	#X2	# 123	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
.L7.l_o5712fb:
	# CBRANCH EQ0	# 128	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L8.l_o5712fb
	# END CBRANCH
	load8! &4 	#X4	# 130	[c=6]movsi_to_tr_unspec/2
	add! 8	
	load4	
	#	
	store8! &7 	#X6	# 132	[c=4]movsi_from_tr_unspec/0
	load8! &4 	#X4	# 134	[c=6]movsi_to_tr_unspec/2
	add! 784	
	load4	
	#	
	store8! &9 	#X8	# 136	[c=4]movsi_from_tr_unspec/0
	load4! &3 	#X3	# 138	[c=5]movsi_to_tr_unspec/1
	sigx4		# 140	[c=6]*extendsidi2
	store8! &2 	#X1	# 141	[c=4]movdi_from_tr_unspec/0
	push! 1		# 143	[c=3]movdi_to_tr_unspec/0
	load8! &2 	#X1	# 145	[c=10]*ashldi3/2
	shift_l
	store8! &2 	#X1	# 317	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 318	[c=5]movdi_to_tr_unspec/1
	load8! &9 	#X8	# 159	[c=6]*anddi3/2
	and
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 307	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L9.l_o5712fb
	# END CBRANCH
	# variadic *call
	load8! &0 	#AR	# 173	[c=0]*call/1
	call	

.L10.l_o5712fb:
	load8! &4 	#X4	# 212	[c=6]movsi_to_tr_unspec/2
	add! 8	
	load4	
	#	
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 272	[c=12]*peep2_cbranchsi
	load4! &7 	#X6
	xor	
	push! 1	
	lt_u	
	jump_zero! .L18.l_o5712fb
	# END CBRANCH
	load8! &7 	#X7	# 219	[c=11]movdi_to_tr_unspec/2
	add! 504	
	load8	
	#	
	# CBRANCH - peep (modesize=8)
	load8! &5 	#X4	# 271	[c=12]*peep2_cbranchdi
	xor	
	push! 1	
	lt_u	
	jump_zero! .L18.l_o5712fb
	# END CBRANCH
	load8! &3 	#X3	# 323	[c=5]movdi_to_tr_unspec/1
	add! -1		# 325	[c=4]*adddi/0
	store8! &4 	#X3	# 327	[c=4]movsi_from_tr_unspec/0
	load8! &2 	#X2	# 328	[c=5]movdi_to_tr_unspec/1
	add! -8		# 330	[c=4]*adddi/0
	store8! &3 	#X2	# 331	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 332	[c=12]cbranchsi4_internal
	load4! &3 	#X3
	push! 4294967295	
	xor	
	push! 1	
	lt_u	
	jump_zero! .L5.l_o5712fb
	# END CBRANCH
	jump! .L1.l_o5712fb		# 340	[c=4]jump
.L9.l_o5712fb:
	load8! &4 	#X4	# 178	[c=6]movsi_to_tr_unspec/2
	add! 788	
	load4	
	#	
	load8! &2 	#X1	# 188	[c=6]*anddi3/2
	and
	store8! &9 	#X8	# 303	[c=4]movsi_from_tr_unspec/0
	load8! &2 	#X2	# 195	[c=11]movdi_to_tr_unspec/2
	add! 256	
	load8	
	#	
	store8! &2 	#X1	# 197	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 199	[c=12]cbranchsi4_internal
	load4! &8 	#X8
	jump_not_zero! .L11.l_o5712fb
	# END CBRANCH
	load8! &1 	#X1	# 201	[c=4]pushdi1_not_fp/1
	load4! &11	# 202	[c=2]pushsi1_not_fp/1
	load8! &2 	#AR	# 203	[c=5]*call_pop_0/1
	call	
	set_sp! (+ &0 16)
	

	jump! .L10.l_o5712fb		# 342	[c=4]jump
.L24.l_o5712fb:
	load4! &3 	#X3	# 113	[c=5]movsi_to_tr_unspec/1
	load8! &5 	#X4	# 115	[c=4]movsi_from_tr_unspec/1
	add! 8	
	store4	
	#	
	jump! .L7.l_o5712fb		# 344	[c=4]jump
.L11.l_o5712fb:
	load8! &1 	#X1	# 208	[c=4]pushdi1_not_fp/1
	load8! &1 	#AR	# 209	[c=5]*call_pop_0/1
	call	
	set_sp! (+ &0 8)
	

	jump! .L10.l_o5712fb		# 346	[c=4]jump
.L1.l_o5712fb:

	# epilogue
	set_sp! &9
	return

# FUNCTION ENDS:__call_exitprocs

#	IMPORT _global_impure_ptr
#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: oa611db
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"abort.c"
#	.text

# FUNCTION BEGINS:abort
	EXPORT	abort
abort:
	# prologue (1 GPRs)
	push! 0

.L2.l_oa611db:
	push! 6		# 6	[c=4]pushsi1_not_fp/0
	call! raise		# 7	[c=0]*call_value_pop_1/0
	store8! &1

	push! 1		# 8	[c=4]pushsi1_not_fp/0
	call! _exit		# 9	[c=5]*call_pop_0/0
	set_sp! (+ &0 8)
	

	jump! .L2.l_oa611db		# 23	[c=4]jump

	# epilogue
	store8! &0 #set_sp! &1
	return

# FUNCTION ENDS:abort

#	IMPORT _exit
#	IMPORT raise
#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: oc96d2f
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"assert.c"
#	.text
.LC0.l_oc96d2f:
#	.string ""
	data1 [ 0 ]
.LC1.l_oc96d2f:
#	.string ", function:"
	data1 [ 44 32 102 117 110 99 116 105 111 110 58 32 0 ]
.LC2.l_oc96d2f:
#	.string "assertion \"%s\" failed:file \"%s\", line %d%s%s\n"
	data1 [ 97 115 115 101 114 116 105 111 110 32 34 37 115 34 32 102 97 105 108 101 100 58 32 102 105 108 101 32 34 37 115 34 44 32 108 105 110 101 32 37 100 37 115 37 115 10 0 ]

# FUNCTION BEGINS:__assert_func
	EXPORT	__assert_func
__assert_func:
	# prologue (3 GPRs)
	push! 0
	push! 0
	push! 0

	load8! &6	# 4	[c=2]movdi_push_pop
	store8! &1 	#AR
	# CBRANCH EQ0	# 12	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L3.l_oc96d2f
	# END CBRANCH
	push! .LC1.l_oc96d2f		# 9	[c=4]movdi_push_pop
	store8! &3 	#X2
	load8! _impure_ptr	# 17	[c=10]movdi_to_tr_unspec/2
	add! 24	
	load8	
	#	
	store8! &2 	#X1	# 19	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 21	[c=4]pushdi1_not_fp/1
	load8! &3 	#X2	# 22	[c=4]pushdi1_not_fp/1
	load4! &7	# 23	[c=2]pushsi1_not_fp/1
	load8! &7	# 24	[c=2]pushdi1_not_fp/1
	load8! &11	# 25	[c=2]pushdi1_not_fp/1
	push! .LC2.l_oc96d2f		# 26	[c=4]pushdi1_not_fp/0
	load8! &7 	#X1	# 27	[c=4]pushdi1_not_fp/1
	call! fiprintf		# 28	[c=0]*call_value_pop_1/0
	store8! &7

	set_sp! &6
	# variadic *call
	call! abort		# 29	[c=0]*call/0

	jump! .L6.l_oc96d2f		# 62	[c=4]jump
.L3.l_oc96d2f:
	push! .LC0.l_oc96d2f		# 7	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 8	[c=4]movdi_push_pop
	store8! &3 	#X2
	load8! _impure_ptr	# 47	[c=10]movdi_to_tr_unspec/2
	add! 24	
	load8	
	#	
	store8! &2 	#X1	# 49	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 50	[c=4]pushdi1_not_fp/1
	load8! &3 	#X2	# 51	[c=4]pushdi1_not_fp/1
	load4! &7	# 52	[c=2]pushsi1_not_fp/1
	load8! &7	# 53	[c=2]pushdi1_not_fp/1
	load8! &11	# 54	[c=2]pushdi1_not_fp/1
	push! .LC2.l_oc96d2f		# 55	[c=4]pushdi1_not_fp/0
	load8! &7 	#X1	# 56	[c=4]pushdi1_not_fp/1
	call! fiprintf		# 57	[c=0]*call_value_pop_1/0
	store8! &7

	set_sp! &6
	# variadic *call
	call! abort		# 58	[c=0]*call/0

.L6.l_oc96d2f:

	# epilogue
	set_sp! &3
	return

# FUNCTION ENDS:__assert_func


# FUNCTION BEGINS:__assert
	EXPORT	__assert
__assert:
	# prologue (0 GPRs)

	load8! &3	# 8	[c=2]pushdi1_not_fp/1
	push! 0		# 9	[c=4]pushdi1_not_fp/0
	load4! &4	# 10	[c=2]pushsi1_not_fp/1
	load8! &4	# 11	[c=2]pushdi1_not_fp/1
	call! __assert_func		# 12	[c=5]*call_pop_0/0
	set_sp! (+ &0 32)
	


	# epilogue
	return

# FUNCTION ENDS:__assert

#	IMPORT abort
#	IMPORT fiprintf
#	IMPORT _impure_ptr
#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: od3d4e5
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"mallocr.c"
#	.text
	#peephole pop(deadreg)+ind push offset
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop+pusharg
	#peephole redundant blockage insn

# FUNCTION BEGINS:_calloc_r
	EXPORT	_calloc_r
_calloc_r:
	# prologue (3 GPRs)
	push! 0
	push! 0
	push! 0

	load8! &5	# 9	[c=5]movdi_to_tr_unspec/1
	load8! &7	# 11	[c=6]*muldi3/1
	mult
	#peep - pop(deadreg)+pusharg	# 153	[c=0]*peep2_pop_pusharg
	load8! &5	# 15	[c=2]pushdi1_not_fp/1
	call! _malloc_r		# 16	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load8! &0 	#AR	# 17	[c=4]movdi_push_pop
	store8! &3 	#X2
	# CBRANCH EQ0	# 18	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L1.l_od3d4e5
	# END CBRANCH
	load8! &0 	#AR	# 21	[c=5]movdi_to_tr_unspec/1
	add! -16		# 23	[c=4]*adddi/0
	add! 8	# 148	[c=4]*peep2_mov_from_mem_tr_to_tr_ind_offset_pushdi_unspec
	load8
	and! 0xfffffffffffffffc		# 32	[c=4]*anddi3/0
	add! -8		# 37	[c=4]*adddi/0
	store8! &1 	#AR	# 38	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 40	[c=12]cbranchdi4_internal
	push! 72	
	load8! &1 	#AR
	lt_u	
	not	
	jump_zero! .L3.l_od3d4e5
	# END CBRANCH
	# CBRANCH	# 42	[c=12]cbranchdi4_internal
	push! 39	
	load8! &1 	#AR
	lt_u	
	jump_zero! .L7.l_od3d4e5
	# END CBRANCH
	push! 0		# 44	[c=3]movdi_to_tr_unspec/0
	load8! &3 	#X2	# 46	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	push! 0		# 48	[c=3]movdi_to_tr_unspec/0
	load8! &3 	#X2	# 50	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	# CBRANCH	# 52	[c=12]cbranchdi4_internal
	push! 55	
	load8! &1 	#AR
	lt_u	
	jump_zero! .L13.l_od3d4e5
	# END CBRANCH
	push! 0		# 63	[c=3]movdi_to_tr_unspec/0
	load8! &3 	#X2	# 65	[c=4]movdi_from_tr_unspec/1
	add! 16	
	store8	
	#	
	push! 0		# 67	[c=3]movdi_to_tr_unspec/0
	load8! &3 	#X2	# 69	[c=4]movdi_from_tr_unspec/1
	add! 24	
	store8	
	#	
	# CBRANCH EQ	# 71	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	push! 72	
	xor	
	jump_zero! .L6.l_od3d4e5
	# END CBRANCH
	load8! &2 	#X2	# 73	[c=5]movdi_to_tr_unspec/1
	add! 32		# 75	[c=4]*adddi/0
	store8! &1 	#AR	# 76	[c=4]movdi_from_tr_unspec/0
	push! 0		# 97	[c=3]movdi_to_tr_unspec/0
	load8! &1 	#AR	# 99	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	push! 0		# 101	[c=3]movdi_to_tr_unspec/0
	load8! &1 	#AR	# 103	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	push! 0		# 105	[c=3]movdi_to_tr_unspec/0
	load8! &1 	#AR	# 107	[c=4]movdi_from_tr_unspec/1
	add! 16	
	store8	
	#	
.L1.l_od3d4e5:
	load8! &2 	#X2	# 122	[c=4]movdi_push_pop
	store8! &5
	jump! .L14.l_od3d4e5		# 196	[c=4]jump
.L7.l_od3d4e5:
	load8! &2 	#X2	# 6	[c=4]movdi_push_pop
	store8! &1 	#AR
	push! 0		# 158	[c=3]movdi_to_tr_unspec/0
	load8! &1 	#AR	# 160	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	push! 0		# 161	[c=3]movdi_to_tr_unspec/0
	load8! &1 	#AR	# 163	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	push! 0		# 164	[c=3]movdi_to_tr_unspec/0
	load8! &1 	#AR	# 166	[c=4]movdi_from_tr_unspec/1
	add! 16	
	store8	
	#	
	jump! .L1.l_od3d4e5		# 198	[c=4]jump
.L3.l_od3d4e5:
	load8! &0 	#AR	# 113	[c=4]pushdi1_not_fp/1
	push! 0		# 114	[c=4]pushsi1_not_fp/0
	load8! &4 	#X2	# 115	[c=4]pushdi1_not_fp/1
	call! memset		# 116	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	load8! &2 	#X2	# 169	[c=4]movdi_push_pop
	store8! &5
	jump! .L14.l_od3d4e5		# 200	[c=4]jump
.L13.l_od3d4e5:
	load8! &2 	#X2	# 54	[c=5]movdi_to_tr_unspec/1
	add! 16		# 56	[c=4]*adddi/0
	store8! &1 	#AR	# 57	[c=4]movdi_from_tr_unspec/0
	push! 0		# 172	[c=3]movdi_to_tr_unspec/0
	load8! &1 	#AR	# 174	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	push! 0		# 175	[c=3]movdi_to_tr_unspec/0
	load8! &1 	#AR	# 177	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	push! 0		# 178	[c=3]movdi_to_tr_unspec/0
	load8! &1 	#AR	# 180	[c=4]movdi_from_tr_unspec/1
	add! 16	
	store8	
	#	
	jump! .L1.l_od3d4e5		# 202	[c=4]jump
.L6.l_od3d4e5:
	push! 0		# 82	[c=3]movdi_to_tr_unspec/0
	load8! &3 	#X2	# 84	[c=4]movdi_from_tr_unspec/1
	add! 32	
	store8	
	#	
	load8! &2 	#X2	# 86	[c=5]movdi_to_tr_unspec/1
	add! 48		# 88	[c=4]*adddi/0
	store8! &1 	#AR	# 89	[c=4]movdi_from_tr_unspec/0
	push! 0		# 91	[c=3]movdi_to_tr_unspec/0
	load8! &3 	#X2	# 93	[c=4]movdi_from_tr_unspec/1
	add! 40	
	store8	
	#	
	push! 0		# 183	[c=3]movdi_to_tr_unspec/0
	load8! &1 	#AR	# 185	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	push! 0		# 186	[c=3]movdi_to_tr_unspec/0
	load8! &1 	#AR	# 188	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	push! 0		# 189	[c=3]movdi_to_tr_unspec/0
	load8! &1 	#AR	# 191	[c=4]movdi_from_tr_unspec/1
	add! 16	
	store8	
	#	
	jump! .L1.l_od3d4e5		# 204	[c=4]jump
.L14.l_od3d4e5:

	# epilogue
	set_sp! &3
	return

# FUNCTION ENDS:_calloc_r

#	IMPORT memset
#	IMPORT _malloc_r
#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: o738b74
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"closer.c"
#	.text

# FUNCTION BEGINS:_close_r
	EXPORT	_close_r
_close_r:
	# prologue (2 GPRs)
	push! 0
	push! 0

	push! 0		# 7	[c=4]movsi_push_pop
	store4! errno
	load4! &4	# 8	[c=2]pushsi1_not_fp/1
	call! close		# 9	[c=0]*call_value_pop_1/0
	store8! &1

	# CBRANCH EQ	# 11	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	push! 4294967295	
	xor	
	jump_zero! .L8.l_o738b74
	# END CBRANCH
.L1.l_o738b74:
	load4! &0 	#AR	# 25	[c=4]movsi_push_pop
	store4! &4
	jump! .L9.l_o738b74		# 47	[c=4]jump
.L8.l_o738b74:
	load4! errno	# 13	[c=1]movsi_push_pop
	store8! &2 	#X1
	# CBRANCH EQ0	# 14	[c=12]cbranchsi4_internal
	load4! &1 	#X1
	jump_zero! .L1.l_o738b74
	# END CBRANCH
	load4! &1 	#X1	# 16	[c=5]movsi_to_tr_unspec/1
	load8! &4	# 18	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	load4! &0 	#AR	# 42	[c=4]movsi_push_pop
	store4! &4
.L9.l_o738b74:

	# epilogue
	set_sp! &2
	return

# FUNCTION ENDS:_close_r

#	IMPORT close
#	IMPORT errno
#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: o9da7ae
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"ctype_.c"
#	.text
	EXPORT	_ctype_
_ctype_:
	data1 [0]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [40]
	data1 [40]
	data1 [40]
	data1 [40]
	data1 [40]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [-120]
	data1 [16]
	data1 [16]
	data1 [16]
	data1 [16]
	data1 [16]
	data1 [16]
	data1 [16]
	data1 [16]
	data1 [16]
	data1 [16]
	data1 [16]
	data1 [16]
	data1 [16]
	data1 [16]
	data1 [16]
	data1 [4]
	data1 [4]
	data1 [4]
	data1 [4]
	data1 [4]
	data1 [4]
	data1 [4]
	data1 [4]
	data1 [4]
	data1 [4]
	data1 [16]
	data1 [16]
	data1 [16]
	data1 [16]
	data1 [16]
	data1 [16]
	data1 [16]
	data1 [65]
	data1 [65]
	data1 [65]
	data1 [65]
	data1 [65]
	data1 [65]
	data1 [1]
	data1 [1]
	data1 [1]
	data1 [1]
	data1 [1]
	data1 [1]
	data1 [1]
	data1 [1]
	data1 [1]
	data1 [1]
	data1 [1]
	data1 [1]
	data1 [1]
	data1 [1]
	data1 [1]
	data1 [1]
	data1 [1]
	data1 [1]
	data1 [1]
	data1 [1]
	data1 [16]
	data1 [16]
	data1 [16]
	data1 [16]
	data1 [16]
	data1 [16]
	data1 [66]
	data1 [66]
	data1 [66]
	data1 [66]
	data1 [66]
	data1 [66]
	data1 [2]
	data1 [2]
	data1 [2]
	data1 [2]
	data1 [2]
	data1 [2]
	data1 [2]
	data1 [2]
	data1 [2]
	data1 [2]
	data1 [2]
	data1 [2]
	data1 [2]
	data1 [2]
	data1 [2]
	data1 [2]
	data1 [2]
	data1 [2]
	data1 [2]
	data1 [2]
	data1 [16]
	data1 [16]
	data1 [16]
	data1 [16]
	data1 [32]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	EXPORT	_ctype_b
_ctype_b:
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [40]
	data1 [40]
	data1 [40]
	data1 [40]
	data1 [40]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [-120]
	data1 [16]
	data1 [16]
	data1 [16]
	data1 [16]
	data1 [16]
	data1 [16]
	data1 [16]
	data1 [16]
	data1 [16]
	data1 [16]
	data1 [16]
	data1 [16]
	data1 [16]
	data1 [16]
	data1 [16]
	data1 [4]
	data1 [4]
	data1 [4]
	data1 [4]
	data1 [4]
	data1 [4]
	data1 [4]
	data1 [4]
	data1 [4]
	data1 [4]
	data1 [16]
	data1 [16]
	data1 [16]
	data1 [16]
	data1 [16]
	data1 [16]
	data1 [16]
	data1 [65]
	data1 [65]
	data1 [65]
	data1 [65]
	data1 [65]
	data1 [65]
	data1 [1]
	data1 [1]
	data1 [1]
	data1 [1]
	data1 [1]
	data1 [1]
	data1 [1]
	data1 [1]
	data1 [1]
	data1 [1]
	data1 [1]
	data1 [1]
	data1 [1]
	data1 [1]
	data1 [1]
	data1 [1]
	data1 [1]
	data1 [1]
	data1 [1]
	data1 [1]
	data1 [16]
	data1 [16]
	data1 [16]
	data1 [16]
	data1 [16]
	data1 [16]
	data1 [66]
	data1 [66]
	data1 [66]
	data1 [66]
	data1 [66]
	data1 [66]
	data1 [2]
	data1 [2]
	data1 [2]
	data1 [2]
	data1 [2]
	data1 [2]
	data1 [2]
	data1 [2]
	data1 [2]
	data1 [2]
	data1 [2]
	data1 [2]
	data1 [2]
	data1 [2]
	data1 [2]
	data1 [2]
	data1 [2]
	data1 [2]
	data1 [2]
	data1 [2]
	data1 [16]
	data1 [16]
	data1 [16]
	data1 [16]
	data1 [32]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
	data1 [0]
#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: o34c93e
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"dtoa.c"
#	.text
	#peephole pop+cmp
	#peephole move_dead
	#peephole pop(deadreg)+ind push
	#peephole pop+cmp
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop+cmp
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+sub
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+sub
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole 1
	#peephole move_dead
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole move_dead
	#peephole pop+cmp
	#peephole move_dead
	#peephole pop(deadreg)+ind push
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole move_dead
	#peephole move_dead
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole move_dead
	#peephole unary+deadreg+binop
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole zero_extend
	#peephole zero_extend
	#peephole move_dead
	#peephole pop+cmp
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+commut(di)
	#peephole redundant blockage insn
	#peephole pop+block+push+commut(di)
	#peephole pop+block+push+commut(di)
	#peephole pop+block+push+commut(di)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+push+sub
	#peephole pop+block+push+commut(di)
	#peephole redundant blockage insn
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole and+popsi

# FUNCTION BEGINS:quorem
quorem.s_o34c93e:
	# prologue (15 GPRs)

	set_sp! &-15

	load8! &16	# 2	[c=2]movdi_push_pop
	store8! &8 	#X7
	load8! &17	# 3	[c=2]movdi_push_pop
	store8! &13 	#X12
	load8! &12 	#X12	# 11	[c=6]movsi_to_tr_unspec/2
	add! 20	
	load4	
	#	
	store8! &1 	#AR	# 13	[c=4]movsi_from_tr_unspec/0
	load8! &7 	#X7	# 15	[c=6]movsi_to_tr_unspec/2
	add! 20	
	load4	
	#	
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 976	[c=12]*peep2_cbranchsi
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L11.l_o34c93e
	# END CBRANCH
	load8! &12 	#X12	# 21	[c=5]movdi_to_tr_unspec/1
	add! 24		# 23	[c=4]*adddi/0
	store8! &2 	#X1	# 24	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 26	[c=5]movdi_to_tr_unspec/1
	add! -1		# 28	[c=4]*adddi/0
	store8! &6 	#X5	# 1058	[c=4]movsi_from_tr_unspec/0
	load4! &5 	#X5	# 962	[c=5]movsi_to_tr_unspec/1
	sigx4		# 964	[c=6]*extendsidi2
	shift_l! 2	# 965	[c=8]*ashldi3/0
	store8! &1 	#AR	# 966	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 45	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 47	[c=6]*adddi/2
	add
	store8! &9 	#X8	# 48	[c=4]movdi_from_tr_unspec/0
	load8! &7 	#X7	# 50	[c=5]movdi_to_tr_unspec/1
	add! 24		# 52	[c=4]*adddi/0
	store8! &7 	#X6	# 53	[c=4]movdi_from_tr_unspec/0
	load8! &6 	#X6	# 55	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 57	[c=6]*adddi/2
	add
	store8! &14 	#X13	# 58	[c=4]movdi_from_tr_unspec/0
	load8! &13 	#X13	# 60	[c=7]movsi_to_tr_unspec/2
	load4	
	#	
	store8! &2 	#X1	# 62	[c=4]movsi_from_tr_unspec/0
	load8! &8 	#X8	# 64	[c=7]movsi_to_tr_unspec/2
	load4	
	#	
	add! 1		# 70	[c=4]*adddi/0
	store8! &1 	#AR	# 1060	[c=4]movdi_from_tr_unspec/0
	load4! &1 	#X1	# 1061	[c=5]movsi_to_tr_unspec/1
	store8! &4 	#X3	# 971	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 972	[c=5]movsi_to_tr_unspec/1
	store8! &3 	#X2	# 974	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 87	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 89	[c=30]*udivdi3/2
	div_u
	store8! &4 	#X3	# 1064	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 96	[c=12]cbranchsi4_internal
	load4! &1 	#X1
	load4! &1 	#AR
	lt_u	
	not	
	jump_zero! .L3.l_o34c93e
	# END CBRANCH
	load8! &7 	#X7	# 98	[c=5]movdi_to_tr_unspec/1
	add! 24		# 100	[c=4]*adddi/0
	store8! &2 	#X1	# 101	[c=4]movdi_from_tr_unspec/0
	load8! &12 	#X12	# 104	[c=5]movdi_to_tr_unspec/1
	add! 24		# 106	[c=4]*adddi/0
	store8! &1 	#AR	# 107	[c=4]movdi_from_tr_unspec/0
	push! 0		# 5	[c=4]movsi_push_pop
	store8! &12 	#X11
	push! 0		# 6	[c=4]movsi_push_pop
	store8! &11 	#X10
.L4.l_o34c93e:
	load8! &0 	#AR	# 112	[c=7]movsi_to_tr_unspec/2
	load4	
	#	
	store8! &5 	#X4	# 114	[c=4]movsi_from_tr_unspec/0
	load8! &4 	#X4	# 116	[c=5]movdi_to_tr_unspec/1
	and! 0xffff		# 118	[c=4]*anddi3/0
	load8! &4 	#X3	# 1073	[c=6]*muldi3/2
	mult
	load8! &12 	#X11	# 1076	[c=6]*adddi/2
	add
	store8! &3 	#X2	# 1077	[c=4]movdi_from_tr_unspec/0
	load4! &4 	#X4	# 1016	[c=5]movsi_to_tr_unspec/1
	shift_ru! 16	# 900	[c=40]*lshrdi3/0
	load8! &4 	#X3	# 1079	[c=6]*muldi3/2
	mult
	store8! &5 	#X4	# 1080	[c=4]movdi_from_tr_unspec/0
	load4! &2 	#X2	# 1020	[c=5]movsi_to_tr_unspec/1
	shift_ru! 16	# 910	[c=40]*lshrdi3/0
	load8! &5 	#X4	# 198	[c=6]*adddi/2
	add
	store8! &5 	#X4	# 1023	[c=4]movdi_from_tr_unspec/0
	load4! &4 	#X4	# 1024	[c=5]movsi_to_tr_unspec/1
	shift_ru! 16	# 920	[c=40]*lshrdi3/0
	store8! &12 	#X11	# 1027	[c=4]movsi_from_tr_unspec/0
	load8! &1 	#X1	# 220	[c=7]movsi_to_tr_unspec/2
	load4	
	#	
	store8! &10 	#X9	# 222	[c=4]movsi_from_tr_unspec/0
	load8! &9 	#X9	# 224	[c=5]movdi_to_tr_unspec/1
	and! 0xffff		# 226	[c=4]*anddi3/0
	store8! &15 	#X14	# 1028	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 1029	[c=5]movdi_to_tr_unspec/1
	and! 0xffff		# 235	[c=4]*anddi3/0
	store8! &3 	#X2	# 1085	[c=4]movdi_from_tr_unspec/0
	load8! &10 	#X10	# 1086	[c=5]movdi_to_tr_unspec/1
	load8! &15 	#X14	# 249	[c=6]*adddi/2
	add
	load8! &3 	#X2	# 262	[c=14]*subdi3/2
	sub
	store8! &3 	#X2	# 1033	[c=4]movdi_from_tr_unspec/0
	load4! &2 	#X2	# 1034	[c=5]movsi_to_tr_unspec/1
	sigx4		# 931	[c=6]*extendsidi2
	shift_rs! 16	# 932	[c=40]*ashrdi3/0
	store8! &11 	#X10	# 1036	[c=4]movdi_from_tr_unspec/0
	load4! &9 	#X9	# 1037	[c=5]movsi_to_tr_unspec/1
	shift_ru! 16	# 940	[c=40]*lshrdi3/0
	store8! &10 	#X9	# 1039	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 1040	[c=5]movdi_to_tr_unspec/1
	and! 0xffff		# 300	[c=4]*anddi3/0
	load8! &10 	#X9	# 1096	[c=14]*subdi3/2
	sub
	neg		# 1097	[c=4]*neg_tr
	load8! &11 	#X10	# 1100	[c=6]*adddi/2
	add
	store8! &5 	#X4	# 1101	[c=4]movdi_from_tr_unspec/0
	load4! &4 	#X4	# 1045	[c=5]movsi_to_tr_unspec/1
	sigx4		# 950	[c=6]*extendsidi2
	shift_rs! 16	# 951	[c=40]*ashrdi3/0
	store8! &11 	#X10	# 1048	[c=4]movsi_from_tr_unspec/0
	load8! &4 	#X4	# 349	[c=5]movdi_to_tr_unspec/1
	shift_l! 16	# 351	[c=8]*ashldi3/0
	store8! &10 	#X9	# 1050	[c=4]movsi_from_tr_unspec/0
	load8! &2 	#X2	# 358	[c=5]movdi_to_tr_unspec/1
	and! 0xffff		# 360	[c=4]*anddi3/0
	load8! &10 	#X9	# 959	[c=6]*iordi3/2
	or
	load8! &2 	#X1	# 1108	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	load8! &1 	#X1	# 390	[c=5]movdi_to_tr_unspec/1
	add! 4		# 392	[c=4]*adddi/0
	store8! &2 	#X1	# 393	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 401	[c=5]movdi_to_tr_unspec/1
	add! 4		# 403	[c=4]*adddi/0
	store8! &1 	#AR	# 404	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 409	[c=12]cbranchdi4_internal
	load8! &8 	#X8
	load8! &1 	#AR
	lt_u	
	jump_zero! .L4.l_o34c93e
	# END CBRANCH
	load8! &13 	#X13	# 411	[c=7]movsi_to_tr_unspec/2
	load4	
	#	
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 889	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L3.l_o34c93e
	# END CBRANCH
	load8! &13 	#X13	# 417	[c=5]movdi_to_tr_unspec/1
	add! -4		# 419	[c=4]*adddi/0
	store8! &1 	#AR	# 420	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 422	[c=12]cbranchdi4_internal
	load8! &6 	#X6
	load8! &1 	#AR
	lt_u	
	jump_zero! .L5.l_o34c93e
	# END CBRANCH
	load8! &13 	#X13	# 425	[c=5]movdi_to_tr_unspec/1
	add! -4		# 427	[c=4]*adddi/0
	load4		# 886	[c=4]*peep2_mov_from_mem_tr_to_tr_ind_pushsi_unspec
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 888	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L5.l_o34c93e
	# END CBRANCH
.L6.l_o34c93e:
	load8! &5 	#X5	# 436	[c=5]movdi_to_tr_unspec/1
	add! -1		# 438	[c=4]*adddi/0
	store8! &6 	#X5	# 1012	[c=4]movsi_from_tr_unspec/0
	load8! &0 	#AR	# 450	[c=5]movdi_to_tr_unspec/1
	add! -4		# 452	[c=4]*adddi/0
	store8! &1 	#AR	# 453	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 456	[c=12]cbranchdi4_internal
	load8! &6 	#X6
	load8! &1 	#AR
	lt_u	
	jump_zero! .L5.l_o34c93e
	# END CBRANCH
	load8! &0 	#AR	# 458	[c=7]movsi_to_tr_unspec/2
	load4	
	#	
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 884	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L6.l_o34c93e
	# END CBRANCH
.L5.l_o34c93e:
	load4! &5 	#X5	# 466	[c=5]movsi_to_tr_unspec/1
	load8! &8 	#X7	# 468	[c=4]movsi_from_tr_unspec/1
	add! 20	
	store4	
	#	
.L3.l_o34c93e:
	load8! &12 	#X12	# 472	[c=4]pushdi1_not_fp/1
	load8! &8 	#X7	# 473	[c=4]pushdi1_not_fp/1
	call! __mcmp		# 474	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH	# 476	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	add! -2147483648	
	push! 0	
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L1.l_o34c93e
	# END CBRANCH
	load8! &3 	#X3	# 478	[c=5]movdi_to_tr_unspec/1
	add! 1		# 480	[c=4]*adddi/0
	store8! &4 	#X3	# 1010	[c=4]movsi_from_tr_unspec/0
	load8! &7 	#X7	# 487	[c=5]movdi_to_tr_unspec/1
	add! 24		# 489	[c=4]*adddi/0
	store8! &5 	#X4	# 490	[c=4]movdi_from_tr_unspec/0
	load8! &12 	#X12	# 493	[c=5]movdi_to_tr_unspec/1
	add! 24		# 495	[c=4]*adddi/0
	store8! &1 	#AR	# 496	[c=4]movdi_from_tr_unspec/0
	push! 0		# 7	[c=4]movsi_push_pop
	store8! &10 	#X9
.L8.l_o34c93e:
	load8! &0 	#AR	# 501	[c=7]movsi_to_tr_unspec/2
	load4	
	#	
	store8! &2 	#X1	# 503	[c=4]movsi_from_tr_unspec/0
	load8! &1 	#X1	# 505	[c=5]movdi_to_tr_unspec/1
	and! 0xffff		# 507	[c=4]*anddi3/0
	store8! &11 	#X10	# 980	[c=4]movsi_from_tr_unspec/0
	load4! &1 	#X1	# 832	[c=5]movsi_to_tr_unspec/1
	shift_ru! 16	# 834	[c=40]*lshrdi3/0
	store8! &12 	#X11	# 982	[c=4]movsi_from_tr_unspec/0
	load8! &4 	#X4	# 529	[c=7]movsi_to_tr_unspec/2
	load4	
	#	
	store8! &3 	#X2	# 531	[c=4]movsi_from_tr_unspec/0
	load8! &2 	#X2	# 533	[c=5]movdi_to_tr_unspec/1
	and! 0xffff		# 535	[c=4]*anddi3/0
	store8! &2 	#X1	# 1065	[c=4]movdi_from_tr_unspec/0
	load8! &9 	#X9	# 1066	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 549	[c=6]*adddi/2
	add
	store8! &10 	#X9	# 985	[c=4]movsi_from_tr_unspec/0
	load8! &10 	#X10	# 841	[c=5]movdi_to_tr_unspec/1
	load8! &10 	#X9	# 843	[c=14]*subdi3/2
	sub
	neg		# 844	[c=4]*neg_tr
	store8! &2 	#X1	# 986	[c=4]movdi_from_tr_unspec/0
	load4! &1 	#X1	# 987	[c=5]movsi_to_tr_unspec/1
	sigx4		# 849	[c=6]*extendsidi2
	shift_rs! 16	# 850	[c=40]*ashrdi3/0
	store8! &10 	#X9	# 989	[c=4]movdi_from_tr_unspec/0
	load4! &2 	#X2	# 990	[c=5]movsi_to_tr_unspec/1
	shift_ru! 16	# 858	[c=40]*lshrdi3/0
	store8! &11 	#X10	# 993	[c=4]movsi_from_tr_unspec/0
	load8! &11 	#X11	# 862	[c=5]movdi_to_tr_unspec/1
	load8! &11 	#X10	# 864	[c=14]*subdi3/2
	sub
	neg		# 865	[c=4]*neg_tr
	load8! &10 	#X9	# 1069	[c=6]*adddi/2
	add
	store8! &3 	#X2	# 1070	[c=4]movdi_from_tr_unspec/0
	load4! &2 	#X2	# 996	[c=5]movsi_to_tr_unspec/1
	sigx4		# 872	[c=6]*extendsidi2
	shift_rs! 16	# 873	[c=40]*ashrdi3/0
	store8! &10 	#X9	# 998	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 999	[c=5]movdi_to_tr_unspec/1
	shift_l! 16	# 642	[c=8]*ashldi3/0
	store8! &11 	#X10	# 1002	[c=4]movsi_from_tr_unspec/0
	load8! &1 	#X1	# 649	[c=5]movdi_to_tr_unspec/1
	and! 0xffff		# 651	[c=4]*anddi3/0
	load8! &11 	#X10	# 881	[c=6]*iordi3/2
	or
	load8! &5 	#X4	# 1105	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	load8! &4 	#X4	# 681	[c=5]movdi_to_tr_unspec/1
	add! 4		# 683	[c=4]*adddi/0
	store8! &5 	#X4	# 684	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 692	[c=5]movdi_to_tr_unspec/1
	add! 4		# 694	[c=4]*adddi/0
	store8! &1 	#AR	# 695	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 700	[c=12]cbranchdi4_internal
	load8! &8 	#X8
	load8! &1 	#AR
	lt_u	
	jump_zero! .L8.l_o34c93e
	# END CBRANCH
	load4! &5 	#X5	# 819	[c=5]movsi_to_tr_unspec/1
	sigx4		# 821	[c=6]*extendsidi2
	shift_l! 2	# 822	[c=8]*ashldi3/0
	load8! &7 	#X6	# 825	[c=6]*adddi/2
	add
	store8! &2 	#X1	# 826	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 717	[c=7]movsi_to_tr_unspec/2
	load4	
	#	
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 827	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L1.l_o34c93e
	# END CBRANCH
	load8! &1 	#X1	# 723	[c=5]movdi_to_tr_unspec/1
	add! -4		# 725	[c=4]*adddi/0
	store8! &1 	#AR	# 726	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 728	[c=12]cbranchdi4_internal
	load8! &6 	#X6
	load8! &1 	#AR
	lt_u	
	jump_zero! .L9.l_o34c93e
	# END CBRANCH
	load8! &1 	#X1	# 731	[c=5]movdi_to_tr_unspec/1
	add! -4		# 733	[c=4]*adddi/0
	load4		# 816	[c=4]*peep2_mov_from_mem_tr_to_tr_ind_pushsi_unspec
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 818	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L9.l_o34c93e
	# END CBRANCH
.L10.l_o34c93e:
	load8! &5 	#X5	# 742	[c=5]movdi_to_tr_unspec/1
	add! -1		# 744	[c=4]*adddi/0
	store8! &6 	#X5	# 978	[c=4]movsi_from_tr_unspec/0
	load8! &0 	#AR	# 756	[c=5]movdi_to_tr_unspec/1
	add! -4		# 758	[c=4]*adddi/0
	store8! &1 	#AR	# 759	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 762	[c=12]cbranchdi4_internal
	load8! &6 	#X6
	load8! &1 	#AR
	lt_u	
	jump_zero! .L9.l_o34c93e
	# END CBRANCH
	load8! &0 	#AR	# 764	[c=7]movsi_to_tr_unspec/2
	load4	
	#	
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 814	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L10.l_o34c93e
	# END CBRANCH
.L9.l_o34c93e:
	load4! &5 	#X5	# 772	[c=5]movsi_to_tr_unspec/1
	load8! &8 	#X7	# 774	[c=4]movsi_from_tr_unspec/1
	add! 20	
	store4	
	#	
.L1.l_o34c93e:
	load4! &3 	#X3	# 784	[c=4]movsi_push_pop
	store4! &17
	jump! .L20.l_o34c93e		# 1116	[c=4]jump
.L11.l_o34c93e:
	push! 0		# 8	[c=4]movsi_push_pop
	store8! &4 	#X3
	load4! &3 	#X3	# 1112	[c=4]movsi_push_pop
	store4! &17
.L20.l_o34c93e:

	# epilogue
	set_sp! &15
	return

# FUNCTION ENDS:quorem

.LC0.l_o34c93e:
#	.string "Infinity"
	data1 [ 73 110 102 105 110 105 116 121 0 ]
.LC1.l_o34c93e:
#	.string "NaN"
	data1 [ 78 97 78 0 ]
.LC2.l_o34c93e:
#	.string "0"
	data1 [ 48 0 ]
.LC3.l_o34c93e:
#	.string "Balloc succeeded"
	data1 [ 66 97 108 108 111 99 32 115 117 99 99 101 101 100 101 100 0 ]
.LC4.l_o34c93e:
#	.string "../../../../../newlib/libc/stdlib/dtoa.c"
	data1 [ 46 46 47 46 46 47 46 46 47 46 46 47 46 46 47 110 101 119 108 105 98 47 108 105 98 99 47 115 116 100 108 105 98 47 100 116 111 97 46 99 0 ]
	#peephole 1
	#peephole 1
	#peephole pop+cmp
	#peephole move_dead
	#peephole move_dead
	#peephole move
	#peephole move+push(pushable)
	#peephole move
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole binop1+deadreg+binop2
	#peephole move_dead
	#peephole nop+set
	#peephole nop+set
	#peephole pop(deadreg)+ind push
	#peephole 1
	#peephole pop(deadreg)+ind push
	#peephole move_dead
	#peephole pop(deadreg)+ind push
	#peephole 1
	#peephole pop(deadreg)+ind push
	#peephole move_dead
	#peephole move_dead
	#peephole move
	#peephole move+push(pushable)
	#peephole move
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole move+push(pushable)
	#peephole 1
	#peephole move_dead
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole 1
	#peephole move
	#peephole move+push(pushable)
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole move
	#peephole move+push(pushable)
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole pop+cmp
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop+pusharg
	#peephole move_dead
	#peephole move_dead
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole 1
	#peephole move_dead
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole unary1+binop2+deadreg+binop3
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole pop+pusharg
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole pop+cmp
	#peephole move_dead
	#peephole move+push(pushable)
	#peephole 1
	#peephole move
	#peephole move+push+sub
	#peephole move_dead
	#peephole move
	#peephole move+push+sub
	#peephole move_dead
	#peephole 1
	#peephole move_dead
	#peephole move
	#peephole move+push+sub
	#peephole move_dead
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole move+push(pushable)
	#peephole pop+push+sub
	#peephole 1
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole 1
	#peephole nop+set
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole 1
	#peephole move+push(pushable)
	#peephole pop+push+sub
	#peephole move_dead
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole move_dead
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole move
	#peephole move+push(pushable)
	#peephole 1
	#peephole 1
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole move_dead
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+ind push
	#peephole 1
	#peephole pop(deadreg)+ind push
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole move_dead
	#peephole move
	#peephole move+push(pushable)
	#peephole 1
	#peephole move_dead
	#peephole move_dead
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole move_dead
	#peephole pop+push+commut(di)
	#peephole move_dead
	#peephole move+push(pushable)
	#peephole 1
	#peephole move+push(pushable)
	#peephole 1
	#peephole zero_extend
	#peephole binop1+deadreg+binop2
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole pop+cmp
	#peephole pop(deadreg)+ind push
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole move_dead
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole move+push(pushable)
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole move_dead
	#peephole move+push(pushable)
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole move_dead
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole 1
	#peephole nop+pusharg
	#peephole move
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole binop1+deadreg+binop2
	#peephole move_dead
	#peephole 1
	#peephole nop+pusharg
	#peephole move
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole binop1+deadreg+binop2
	#peephole unary+deadreg+binop
	#peephole move_dead
	#peephole move_dead
	#peephole pop+pusharg
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole unary+deadreg+binop
	#peephole move_dead
	#peephole move_dead
	#peephole move_dead
	#peephole unary+deadreg+binop
	#peephole move_dead
	#peephole move_dead
	#peephole pop+pusharg
	#peephole 1
	#peephole move_dead
	#peephole move
	#peephole move+pusharg
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole unary+deadreg+binop
	#peephole move_dead
	#peephole 1
	#peephole move
	#peephole move+binop
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole 1
	#peephole move+push(pushable)
	#peephole pop+push+commut(di)
	#peephole move_dead
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole move
	#peephole move+push+sub
	#peephole move_dead
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+sub
	#peephole move_dead
	#peephole move_dead
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole move_dead
	#peephole move+push+sub
	#peephole move_dead
	#peephole move_dead
	#peephole move_dead
	#peephole move_dead
	#peephole move
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole binop1+2
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole 1
	#peephole move
	#peephole move
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole binop1+2
	#peephole move_dead
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole nop+set
	#peephole nop+set
	#peephole nop+set
	#peephole nop+set
	#peephole push+pop+deadreg+binop
	#peephole pop+cmp
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole binop1+deadreg+binop2
	#peephole move
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole 1
	#peephole move
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole set+nop
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+cmp
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+push(deadreg)+sign_extend
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+push(deadreg)+sign_extend
	#peephole pop+move(deadreg)
	#peephole set+nop
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+move2(deadreg)
	#peephole set+nop
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+push(deadreg)+sign_extend
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+push(deadreg)+sign_extend
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole redundant blockage insn
	#peephole pop+move2(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move2(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move2(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole set+nop
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole move+push(pushable)
	#peephole pop+move(deadreg)
	#peephole nop+set
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole and+popqi
	#peephole popdi(deadreg)+push
	#peephole and+popqi
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole and+popqi
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole and+popsi

# FUNCTION BEGINS:_dtoa_r
	EXPORT	_dtoa_r
_dtoa_r:
	# prologue (16 GPRs)

	set_sp! &-27

	load8! &28	# 2	[c=2]movdi_push_pop
	store8! &3 	#X2
	load8! &29	# 3	[c=2]movdf_push_pop
	store8! &6 	#X5
	load8! &33	# 7	[c=2]movdi_push_pop
	store8! &5 	#X4
	load8! &5 	#X5	# 5412	[c=4]movdi_push_pop
	store8! &7 	#X6
	load8! &2 	#X2	# 160	[c=11]movdi_to_tr_unspec/2
	add! 96	
	load8	
	#	
	store8! &1 	#AR	# 162	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 164	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L22.l_o34c93e
	# END CBRANCH
	load8! &2 	#X2	# 166	[c=6]movsi_to_tr_unspec/2
	add! 104	
	load4	
	#	
	store8! &2 	#X1	# 168	[c=4]movsi_from_tr_unspec/0
	load4! &1 	#X1	# 170	[c=5]movsi_to_tr_unspec/1
	load8! &1 	#AR	# 172	[c=4]movsi_from_tr_unspec/1
	add! 8	
	store4	
	#	
	load4! &1 	#X1	# 174	[c=5]movsi_to_tr_unspec/1
	sigx4		# 176	[c=6]*extendsidi2
	store8! &2 	#X1	# 177	[c=4]movdi_from_tr_unspec/0
	push! 1		# 179	[c=3]movdi_to_tr_unspec/0
	load8! &2 	#X1	# 181	[c=10]*ashldi3/2
	shift_l
	load8! &1 	#AR	# 5793	[c=4]movsi_from_tr_unspec/1
	add! 12	
	store4	
	#	
	load8! &0 	#AR	# 192	[c=4]pushdi1_not_fp/1
	load8! &3 	#X2	# 193	[c=4]pushdi1_not_fp/1
	call! _Bfree		# 194	[c=5]*call_pop_0/0
	set_sp! (+ &0 16)
	

	push! 0		# 195	[c=3]movdi_to_tr_unspec/0
	load8! &3 	#X2	# 197	[c=4]movdi_from_tr_unspec/1
	add! 96	
	store8	
	#	
.L22.l_o34c93e:
	load8! &5 	#X5	# 5406	[c=5]movdi_to_tr_unspec/1
	shift_ru! 32	# 5408	[c=40]*lshrdi3/0
	store8! &4 	#X3	# 5733	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 215	[c=12]cbranchsi4_internal
	load4! &3 	#X3
	add! -2147483648	
	push! 0	
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L307.l_o34c93e
	# END CBRANCH
	push! 0		# 259	[c=3]movsi_to_tr_unspec/0
	load8! &5 	#X4	# 261	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	load8! &3 	#X3	# 265	[c=5]movdi_to_tr_unspec/1
	and! 0x7ff00000		# 267	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 5729	[c=12]*peep2_cbranchsi
	# - EQ
	push! 2146435072	
	xor	
	jump_zero! .L308.l_o34c93e
	# END CBRANCH
.L25.l_o34c93e:
	push! 0x0000000000000000		# 302	[c=4]pushdf1_not_fp/0
	load8! &6 	#X5	# 303	[c=4]pushdf1_not_fp/1
	call! __eqdf2		# 304	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH EQ0	# 306	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_not_zero! .L288.l_o34c93e
	# END CBRANCH
	push! 1		# 311	[c=3]movsi_to_tr_unspec/0
	load8! &33	# 5383	[c=2]movdi_push_pop
	store8! &3 	#X1
	load8! &2 	#X1	# 313	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	# CBRANCH EQ0	# 315	[c=14]cbranchdi4_internal
	load8! &34
	jump_zero! .L173.l_o34c93e
	# END CBRANCH
	push! (+ .LC2.l_o34c93e 1)		# 317	[c=3]movdi_to_tr_unspec/0
	load8! &35	# 5382	[c=2]movdi_push_pop
	store8! &3 	#X1
	load8! &2 	#X1	# 319	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	push! .LC2.l_o34c93e		# 138	[c=4]movdi_push_pop
	store8! &15 	#X14
.L21.l_o34c93e:
	load8! &14 	#X14	# 3765	[c=4]movdi_push_pop
	store8! &29
	jump! .L309.l_o34c93e		# 6208	[c=4]jump
.L288.l_o34c93e:
	push! &0		# 5346	[c=4]movdi_to_tr_unspec/1
	add! 200		# 5353	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 5355	[c=0]*peep2_pop_pusharg
	push! &0		# 5364	[c=4]movdi_to_tr_unspec/1
	add! 216		# 5371	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 5373	[c=0]*peep2_pop_pusharg
	load8! &7 	#X5	# 337	[c=4]pushdf1_not_fp/1
	load8! &5 	#X2	# 338	[c=4]pushdi1_not_fp/1
	call! __d2b		# 339	[c=0]*call_value_pop_1/0
	store8! &4

	set_sp! &3
	load8! &0 	#AR	# 340	[c=4]movdi_push_pop
	store8! &5 	#X4
	load4! &3 	#X3	# 5377	[c=5]movsi_to_tr_unspec/1
	shift_ru! 20	# 5379	[c=40]*lshrdi3/0
	store8! &1 	#AR	# 5725	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 5726	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L310.l_o34c93e
	# END CBRANCH
	load4! &25	# 428	[c=2]movsi_push_pop
	store8! &10 	#X9
	load4! &26	# 5707	[c=5]movsi_to_tr_unspec/1
	load8! &10 	#X9	# 5313	[c=6]*adddi/2
	add
	store8! &8 	#X7	# 5710	[c=4]movsi_from_tr_unspec/0
	load8! &7 	#X7	# 443	[c=5]movdi_to_tr_unspec/1
	add! 1074		# 445	[c=4]*adddi/0
	store8! &1 	#AR	# 446	[c=4]movdi_from_tr_unspec/0
	load4! &6 	#X6	# 5711	[c=4]movsi_push_pop
	store8! &2 	#X1
	# CBRANCH	# 456	[c=12]cbranchsi4_internal
	push! 32	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	jump_zero! .L33.l_o34c93e
	# END CBRANCH
	push! 64		# 462	[c=3]movdi_to_tr_unspec/0
	load8! &1 	#AR	# 464	[c=14]*subdi3/2
	sub
	and! 0xffffffff		# 5787	[c=4]*anddi3/0
	pow2		# 5297	[c=4]*pow_tr
	load8! &4 	#X3	# 5298	[c=6]*muldi3/2
	mult
	store8! &1 	#AR	# 5701	[c=4]movdi_from_tr_unspec/0
	load8! &7 	#X7	# 5702	[c=5]movdi_to_tr_unspec/1
	add! 1042		# 487	[c=4]*adddi/0
	store8! &9 	#X8	# 5705	[c=4]movsi_from_tr_unspec/0
	load4! &6 	#X6	# 5301	[c=5]movsi_to_tr_unspec/1
	store8! &4 	#X3	# 5303	[c=4]movdi_from_tr_unspec/0
	load4! &8 	#X8	# 5304	[c=5]movsi_to_tr_unspec/1
	store8! &2 	#X1	# 5306	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 504	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 506	[c=42]*lshrdi3/2
	shift_ru
	load8! &1 	#AR	# 519	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 520	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 559	[c=4]pushsi1_not_fp/1
	call! __floatunsidf		# 560	[c=0]*call_value_pop_1/0
	store8! &1

	load8! &0 	#AR	# 5685	[c=4]movdi_push_pop
	store8! &2 	#X1
	load8! &0 	#AR	# 570	[c=5]movdi_to_tr_unspec/1
	shift_ru! 32	# 572	[c=40]*lshrdi3/0
	add! -32505856		# 581	[c=4]*adddi/0
	and! 0xffffffff		# 5783	[c=4]*anddi3/0
	shift_l! 32	# 5276	[c=8]*ashldi3/0
	store8! &1 	#AR	# 5277	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 5278	[c=5]movdi_to_tr_unspec/1
	and! 0xffffffff		# 5280	[c=4]*anddi3/0
	load8! &1 	#AR	# 5281	[c=6]*iordi3/2
	or
	store8! &2 	#X1	# 5282	[c=4]movdi_from_tr_unspec/0
	load8! &7 	#X7	# 609	[c=5]movdi_to_tr_unspec/1
	add! -1		# 611	[c=4]*adddi/0
	store8! &9 	#X8	# 5694	[c=4]movsi_from_tr_unspec/0
	push! 1		# 15	[c=4]movsi_push_pop
	store4! &21
.L32.l_o34c93e:
	load8! &1 	#X1	# 5266	[c=4]movdf_push_pop
	store8! &1 	#AR
	push! 0x3ff8000000000000		# 624	[c=4]pushdf1_not_fp/0
	load8! &2 	#X1	# 625	[c=4]pushdf1_not_fp/1
	call! __subdf3		# 626	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	push! 0x3fd287a7636f4361		# 629	[c=4]pushdf1_not_fp/0
	load8! &1 	#AR	# 630	[c=4]pushdf1_not_fp/1
	call! __muldf3		# 631	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	push! 0x3fc68a288b60c8b3		# 634	[c=4]pushdf1_not_fp/0
	load8! &1 	#AR	# 635	[c=4]pushdf1_not_fp/1
	call! __adddf3		# 636	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load8! &0 	#AR	# 637	[c=4]movdf_push_pop
	store8! &4 	#X3
	load4! &8 	#X8	# 639	[c=4]pushsi1_not_fp/1
	call! __floatsidf		# 640	[c=0]*call_value_pop_1/0
	store8! &1

	push! 0x3fd34413509f79fb		# 642	[c=4]pushdf1_not_fp/0
	load8! &1 	#AR	# 643	[c=4]pushdf1_not_fp/1
	call! __muldf3		# 644	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load8! &0 	#AR	# 647	[c=4]pushdf1_not_fp/1
	load8! &4 	#X3	# 648	[c=4]pushdf1_not_fp/1
	call! __adddf3		# 649	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load8! &0 	#AR	# 650	[c=4]movdf_push_pop
	store8! &4 	#X3
	load8! &0 	#AR	# 652	[c=4]pushdf1_not_fp/1
	call! __fixdfsi		# 653	[c=0]*call_value_pop_1/0
	store8! &1

	load4! &0 	#AR	# 654	[c=4]movsi_push_pop
	store8! &8 	#X7
	push! 0x0000000000000000		# 656	[c=4]pushdf1_not_fp/0
	load8! &4 	#X3	# 657	[c=4]pushdf1_not_fp/1
	call! __ltdf2		# 658	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH	# 660	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	add! -9223372036854775808	
	push! 0	
	add! -9223372036854775808	
	lt_u	
	not	
	jump_zero! .L311.l_o34c93e
	# END CBRANCH
.L35.l_o34c93e:
	load8! &8 	#X8	# 5258	[c=5]movdi_to_tr_unspec/1
	load8! &10 	#X9	# 5260	[c=14]*subdi3/2
	sub
	neg		# 5261	[c=4]*neg_tr
	store8! &4 	#X3	# 5680	[c=4]movsi_from_tr_unspec/0
	load8! &3 	#X3	# 702	[c=5]movdi_to_tr_unspec/1
	add! -1		# 704	[c=4]*adddi/0
	store8! &9 	#X8	# 5682	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 711	[c=12]cbranchsi4_internal
	push! 22	
	load4! &8 	#X7
	lt_u	
	not	
	jump_zero! .L174.l_o34c93e
	# END CBRANCH
.L320.l_o34c93e:
	load4! &7 	#X7	# 5247	[c=5]movsi_to_tr_unspec/1
	sigx4		# 5249	[c=6]*extendsidi2
	shift_l! 3	# 5250	[c=8]*ashldi3/0
	add! __mprec_tens		# 5253	[c=4]*adddi/0
	load8		# 5255	[c=4]*peep2_mov_from_mem_tr_to_tr_ind_pushdf_unspec
	store8! &1 	#AR	# 731	[c=4]movdf_from_tr_unspec/0
	load8! &5 	#X5	# 733	[c=4]pushdf1_not_fp/1
	load8! &1 	#AR	# 734	[c=4]pushdf1_not_fp/1
	call! __gtdf2		# 735	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH	# 737	[c=12]cbranchdi4_internal
	push! 0	
	add! -9223372036854775808	
	load8! &1 	#AR
	add! -9223372036854775808	
	lt_u	
	jump_zero! .L289.l_o34c93e
	# END CBRANCH
	load8! &7 	#X7	# 742	[c=5]movdi_to_tr_unspec/1
	add! -1		# 744	[c=4]*adddi/0
	store8! &8 	#X7	# 5678	[c=4]movsi_from_tr_unspec/0
	push! 0		# 16	[c=4]movsi_push_pop
	store4! &20
	# CBRANCH	# 753	[c=12]cbranchsi4_internal
	load4! &8 	#X8
	add! -2147483648	
	push! 0	
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L169.l_o34c93e
	# END CBRANCH
.L175.l_o34c93e:
	push! 0		# 20	[c=4]movsi_push_pop
	store8! &12 	#X11
	# CBRANCH	# 770	[c=12]cbranchsi4_internal
	load4! &7 	#X7
	add! -2147483648	
	push! 0	
	add! -2147483648	
	lt_u	
	jump_zero! .L168.l_o34c93e
	# END CBRANCH
.L321.l_o34c93e:
	load8! &7 	#X7	# 5227	[c=5]movdi_to_tr_unspec/1
	load8! &12 	#X11	# 5229	[c=14]*subdi3/2
	sub
	neg		# 5230	[c=4]*neg_tr
	store8! &12 	#X11	# 5671	[c=4]movsi_from_tr_unspec/0
	load8! &7 	#X7	# 802	[c=5]movdi_to_tr_unspec/1
	neg		# 804	[c=3]*negdi2
	store4! &19	# 5672	[c=4]movsi_from_tr_unspec/0
	load4! &7 	#X7	# 25	[c=4]movsi_push_pop
	store8! &11 	#X10
	push! 0		# 26	[c=4]movsi_push_pop
	store8! &8 	#X7
	# CBRANCH	# 814	[c=14]cbranchsi4_internal
	push! 9	
	load4! &31
	lt_u	
	not	
	jump_zero! .L176.l_o34c93e
	# END CBRANCH
.L322.l_o34c93e:
	# CBRANCH	# 816	[c=14]cbranchsi4_internal
	push! 5	
	add! -2147483648	
	load4! &31
	add! -2147483648	
	lt_u	
	jump_zero! .L177.l_o34c93e
	# END CBRANCH
	load4! &30	# 5223	[c=5]movsi_to_tr_unspec/1
	add! -4		# 820	[c=4]*adddi/0
	store4! &31	# 5669	[c=4]movsi_from_tr_unspec/0
	push! 0		# 152	[c=4]movsi_push_pop
	store8! &14 	#X13
.L45.l_o34c93e:
	# CBRANCH EQ	# 3680	[c=14]cbranchsi4_internal
	load4! &30
	push! 3	
	xor	
	jump_zero! .L203.l_o34c93e
	# END CBRANCH
	# CBRANCH	# 3682	[c=14]cbranchsi4_internal
	push! 3	
	add! -2147483648	
	load4! &31
	add! -2147483648	
	lt_u	
	jump_zero! .L312.l_o34c93e
	# END CBRANCH
	# CBRANCH	# 3692	[c=14]cbranchsi4_internal
	load4! &30
	push! 4	
	xor	
	push! 1	
	lt_u	
	jump_zero! .L313.l_o34c93e
	# END CBRANCH
	push! 1		# 27	[c=4]movsi_push_pop
	store4! &18
.L166.l_o34c93e:
	# CBRANCH	# 830	[c=14]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &32
	add! -2147483648	
	lt_u	
	jump_zero! .L178.l_o34c93e
	# END CBRANCH
	load4! &31	# 31	[c=2]movsi_push_pop
	store4! &22
	load4! &31	# 32	[c=2]movsi_push_pop
	store8! &10 	#X9
	load4! &9 	#X9	# 33	[c=4]movsi_push_pop
	store8! &1 	#AR
.L46.l_o34c93e:
	push! 0		# 863	[c=3]movsi_to_tr_unspec/0
	load8! &3 	#X2	# 865	[c=4]movsi_from_tr_unspec/1
	add! 104	
	store4	
	#	
	load4! &0 	#AR	# 867	[c=5]movsi_to_tr_unspec/1
	sigx4		# 869	[c=6]*extendsidi2
	store8! &16 	#X15	# 870	[c=4]movdi_from_tr_unspec/0
	load4! &9 	#X9	# 872	[c=4]movsi_push_pop
	store8! &13 	#X12
	# CBRANCH	# 873	[c=12]cbranchsi4_internal
	push! 31	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	jump_zero! .L179.l_o34c93e
	# END CBRANCH
	push! 1		# 34	[c=4]movsi_push_pop
	store8! &4 	#X3
	push! 4		# 35	[c=4]movsi_push_pop
	store8! &1 	#AR
.L49.l_o34c93e:
	load4! &3 	#X3	# 875	[c=4]movsi_push_pop
	store8! &2 	#X1
	load8! &0 	#AR	# 5203	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 5205	[c=6]*adddi/2
	add
	store8! &1 	#AR	# 5660	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 5661	[c=5]movsi_to_tr_unspec/1
	sigx4		# 5210	[c=6]*extendsidi2
	add! 28		# 5211	[c=4]*adddi/0
	store8! &15 	#X14	# 5212	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 899	[c=5]movdi_to_tr_unspec/1
	add! 1		# 901	[c=4]*adddi/0
	store8! &4 	#X3	# 5663	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 5664	[c=12]cbranchdi4_internal
	load8! &15 	#X15
	load8! &15 	#X14
	lt_u	
	jump_zero! .L49.l_o34c93e
	# END CBRANCH
	load4! &1 	#X1	# 911	[c=5]movsi_to_tr_unspec/1
	load8! &3 	#X2	# 913	[c=4]movsi_from_tr_unspec/1
	add! 104	
	store4	
	#	
	load4! &1 	#X1	# 917	[c=4]pushsi1_not_fp/1
	load8! &3 	#X2	# 918	[c=4]pushdi1_not_fp/1
	call! _Balloc		# 919	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load8! &0 	#AR	# 920	[c=4]movdi_push_pop
	store8! &15 	#X14
	# CBRANCH EQ0	# 921	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L162.l_o34c93e
	# END CBRANCH
.L50.l_o34c93e:
	load8! &14 	#X14	# 930	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 932	[c=4]movdi_from_tr_unspec/1
	add! 96	
	store8	
	#	
	# CBRANCH	# 934	[c=12]cbranchsi4_internal
	push! 14	
	load4! &13 	#X12
	lt_u	
	not	
	jump_zero! .L51.l_o34c93e
	# END CBRANCH
	# CBRANCH EQ0	# 936	[c=12]cbranchsi4_internal
	load4! &13 	#X13
	jump_zero! .L51.l_o34c93e
	# END CBRANCH
	# CBRANCH	# 938	[c=12]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &11 	#X10
	add! -2147483648	
	lt_u	
	jump_zero! .L52.l_o34c93e
	# END CBRANCH
	load8! &10 	#X10	# 940	[c=5]movdi_to_tr_unspec/1
	and! 0xf		# 942	[c=4]*anddi3/0
	sigx4		# 5654	[c=6]*extendsidi2
	shift_l! 3	# 5188	[c=8]*ashldi3/0
	add! __mprec_tens		# 5191	[c=4]*adddi/0
	load8		# 5193	[c=4]*peep2_mov_from_mem_tr_to_tr_ind_pushdf_unspec
	store8! &14 	#X13	# 967	[c=4]movdf_from_tr_unspec/0
	load4! &10 	#X10	# 5195	[c=5]movsi_to_tr_unspec/1
	sigx4		# 5197	[c=6]*extendsidi2
	shift_rs! 4	# 5198	[c=40]*ashrdi3/0
	store8! &13 	#X12	# 5656	[c=4]movsi_from_tr_unspec/0
	load8! &12 	#X12	# 983	[c=5]movdi_to_tr_unspec/1
	and! 0x10		# 985	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 5659	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L53.l_o34c93e
	# END CBRANCH
	load8! &12 	#X12	# 994	[c=5]movdi_to_tr_unspec/1
	and! 0xf		# 996	[c=4]*anddi3/0
	store8! &13 	#X12	# 5650	[c=4]movsi_from_tr_unspec/0
	load8! (+ __mprec_bigtens 32)	# 5183	[c=1]pushdf1_not_fp/1
	load8! &6 	#X5	# 1009	[c=4]pushdf1_not_fp/1
	call! __divdf3		# 1010	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load8! &0 	#AR	# 1011	[c=4]movdf_push_pop
	store8! &16 	#X15
	push! 3		# 45	[c=4]movsi_push_pop
	store8! &4 	#X3
	push! __mprec_bigtens		# 1016	[c=4]movdi_push_pop
	store8! &7 	#X6
	load8! &13 	#X13	# 4379	[c=4]movdf_push_pop
	store8! &1 	#AR
	# CBRANCH EQ0	# 1089	[c=12]cbranchsi4_internal
	load4! &12 	#X12
	jump_zero! .L57.l_o34c93e
	# END CBRANCH
.L56.l_o34c93e:
	load8! &12 	#X12	# 1018	[c=5]movdi_to_tr_unspec/1
	and! 0x1		# 1020	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 5648	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L55.l_o34c93e
	# END CBRANCH
	load8! &3 	#X3	# 1029	[c=5]movdi_to_tr_unspec/1
	add! 1		# 1031	[c=4]*adddi/0
	store8! &4 	#X3	# 5645	[c=4]movsi_from_tr_unspec/0
	load8! &6 	#X6	# 1039	[c=7]movdf_to_tr_unspec/2
	load8	
	#	
	#peep - pop(deadreg)+pusharg	# 5179	[c=0]*peep2_pop_pusharg
	load8! &1 	#AR	# 1044	[c=4]pushdf1_not_fp/1
	call! __muldf3		# 1045	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
.L55.l_o34c93e:
	load4! &12 	#X12	# 5171	[c=5]movsi_to_tr_unspec/1
	sigx4		# 5173	[c=6]*extendsidi2
	shift_rs! 1	# 5174	[c=40]*ashrdi3/0
	store8! &13 	#X12	# 5643	[c=4]movsi_from_tr_unspec/0
	load8! &6 	#X6	# 1069	[c=5]movdi_to_tr_unspec/1
	add! 8		# 1071	[c=4]*adddi/0
	store8! &7 	#X6	# 1072	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 1076	[c=12]cbranchsi4_internal
	load4! &12 	#X12
	jump_not_zero! .L56.l_o34c93e
	# END CBRANCH
	load8! &0 	#AR	# 4367	[c=4]movdf_push_pop
	store8! &14 	#X13
.L57.l_o34c93e:
	load8! &13 	#X13	# 1092	[c=4]pushdf1_not_fp/1
	load8! &16 	#X15	# 1093	[c=4]pushdf1_not_fp/1
	call! __divdf3		# 1094	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load8! &0 	#AR	# 1095	[c=4]movdf_push_pop
	store8! &16 	#X15
.L59.l_o34c93e:
	# CBRANCH EQ0	# 1238	[c=14]cbranchsi4_internal
	load4! &19
	jump_zero! .L64.l_o34c93e
	# END CBRANCH
	push! 0x3ff0000000000000		# 1240	[c=4]pushdf1_not_fp/0
	load8! &16 	#X15	# 1241	[c=4]pushdf1_not_fp/1
	call! __ltdf2		# 1242	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH	# 1244	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	add! -9223372036854775808	
	push! 0	
	add! -9223372036854775808	
	lt_u	
	not	
	jump_zero! .L314.l_o34c93e
	# END CBRANCH
.L64.l_o34c93e:
	load4! &3 	#X3	# 1340	[c=4]pushsi1_not_fp/1
	call! __floatsidf		# 1341	[c=0]*call_value_pop_1/0
	store8! &1

	load8! &15 	#X15	# 1343	[c=4]pushdf1_not_fp/1
	load8! &1 	#AR	# 1344	[c=4]pushdf1_not_fp/1
	call! __muldf3		# 1345	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	push! 0x401c000000000000		# 1348	[c=4]pushdf1_not_fp/0
	load8! &1 	#AR	# 1349	[c=4]pushdf1_not_fp/1
	call! __adddf3		# 1350	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load8! &0 	#AR	# 5610	[c=4]movdi_push_pop
	store8! &7 	#X6
	load8! &0 	#AR	# 1361	[c=5]movdi_to_tr_unspec/1
	shift_ru! 32	# 1363	[c=40]*lshrdi3/0
	add! -54525952		# 1372	[c=4]*adddi/0
	and! 0xffffffff		# 5779	[c=4]*anddi3/0
	shift_l! 32	# 5115	[c=8]*ashldi3/0
	store8! &1 	#AR	# 5116	[c=4]movdi_from_tr_unspec/0
	load8! &6 	#X6	# 5117	[c=5]movdi_to_tr_unspec/1
	and! 0xffffffff		# 5119	[c=4]*anddi3/0
	load8! &1 	#AR	# 5120	[c=6]*iordi3/2
	or
	store8! &7 	#X6	# 5121	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 1400	[c=12]cbranchsi4_internal
	load4! &9 	#X9
	jump_zero! .L159.l_o34c93e
	# END CBRANCH
	load4! &10 	#X10	# 55	[c=4]movsi_push_pop
	store4! &25
	load4! &9 	#X9	# 56	[c=4]movsi_push_pop
	store4! &23
.L68.l_o34c93e:
	load8! &15 	#X15	# 1432	[c=4]pushdf1_not_fp/1
	call! __fixdfsi		# 1433	[c=0]*call_value_pop_1/0
	store8! &1

	load4! &0 	#AR	# 1434	[c=4]movsi_push_pop
	store8! &4 	#X3
	load8! &14 	#X14	# 1435	[c=5]movdi_to_tr_unspec/1
	add! 1		# 1437	[c=4]*adddi/0
	store8! &13 	#X12	# 1438	[c=4]movdi_from_tr_unspec/0
	load8! &6 	#X6	# 5086	[c=4]movdf_push_pop
	store8! &24
	load4! &22	# 5087	[c=5]movsi_to_tr_unspec/1
	add! -1		# 1446	[c=4]*adddi/0
	sigx4		# 5607	[c=6]*extendsidi2
	shift_l! 3	# 5093	[c=8]*ashldi3/0
	add! __mprec_tens		# 5096	[c=4]*adddi/0
	load8		# 5098	[c=4]*peep2_mov_from_mem_tr_to_tr_ind_pushdf_unspec
	store8! &14 	#X13	# 1471	[c=4]movdf_from_tr_unspec/0
	load4! &0 	#AR	# 1473	[c=4]pushsi1_not_fp/1
	call! __floatsidf		# 1474	[c=0]*call_value_pop_1/0
	store8! &1

	load8! &0 	#AR	# 1476	[c=4]pushdf1_not_fp/1
	load8! &16 	#X15	# 1477	[c=4]pushdf1_not_fp/1
	call! __subdf3		# 1478	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load8! &0 	#AR	# 1479	[c=4]movdf_push_pop
	store8! &7 	#X6
	load1! &3 	#X3	# 5101	[c=5]movqi_to_tr_unspec/1
	add! 48		# 1487	[c=4]*adddi/0
	store8! &4 	#X3	# 5609	[c=4]movqi_from_tr_unspec/0
	load1! &3 	#X3	# 1494	[c=4]movqi_push_pop
	store8! &16 	#X15
	# CBRANCH EQ0	# 1495	[c=14]cbranchsi4_internal
	load4! &17
	jump_zero! .L71.l_o34c93e
	# END CBRANCH
	load8! &13 	#X13	# 1497	[c=4]pushdf1_not_fp/1
	push! 0x3fe0000000000000		# 1498	[c=4]pushdf1_not_fp/0
	call! __divdf3		# 1499	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load8! &23	# 1502	[c=2]pushdf1_not_fp/1
	load8! &1 	#AR	# 1503	[c=4]pushdf1_not_fp/1
	call! __subdf3		# 1504	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load8! &0 	#AR	# 1505	[c=4]movdf_push_pop
	store8! &14 	#X13
	load1! &3 	#X3	# 1507	[c=5]movqi_to_tr_unspec/1
	load8! &15 	#X14	# 1509	[c=4]movqi_from_tr_unspec/1
	store1	
	#	
	load8! &6 	#X6	# 1511	[c=4]pushdf1_not_fp/1
	load8! &1 	#AR	# 1512	[c=4]pushdf1_not_fp/1
	call! __gtdf2		# 1513	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH	# 1515	[c=12]cbranchdi4_internal
	push! 0	
	add! -9223372036854775808	
	load8! &1 	#AR
	add! -9223372036854775808	
	lt_u	
	not	
	jump_zero! .L315.l_o34c93e
	# END CBRANCH
	load8! &6 	#X6	# 1533	[c=4]pushdf1_not_fp/1
	push! 0x3ff0000000000000		# 1534	[c=4]pushdf1_not_fp/0
	call! __subdf3		# 1535	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load8! &0 	#AR	# 1538	[c=4]pushdf1_not_fp/1
	load8! &14 	#X13	# 1539	[c=4]pushdf1_not_fp/1
	call! __gtdf2		# 1540	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH	# 1542	[c=12]cbranchdi4_internal
	push! 0	
	add! -9223372036854775808	
	load8! &1 	#AR
	add! -9223372036854775808	
	lt_u	
	not	
	jump_zero! .L75.l_o34c93e
	# END CBRANCH
	# CBRANCH EQ	# 1544	[c=14]cbranchsi4_internal
	load4! &22
	push! 1	
	xor	
	jump_zero! .L67.l_o34c93e
	# END CBRANCH
	load4! &22	# 5070	[c=5]movsi_to_tr_unspec/1
	add! -2		# 1549	[c=4]*adddi/0
	and! 0xffffffff		# 5777	[c=4]*anddi3/0
	add! 2		# 5078	[c=4]*adddi/0
	load8! &15 	#X14	# 5081	[c=6]*adddi/2
	add
	store8! &2 	#X1	# 5082	[c=4]movdi_from_tr_unspec/0
	load4! &7 	#X7	# 4418	[c=4]movsi_push_pop
	store4! &23
	load8! &12 	#X12	# 4421	[c=4]movdi_push_pop
	store8! &8 	#X7
	load8! &5 	#X5	# 4426	[c=4]movdf_push_pop
	store8! &13 	#X12
	load8! &1 	#X1	# 4427	[c=4]movdi_push_pop
	store8! &6 	#X5
.L76.l_o34c93e:
	push! 0x4024000000000000		# 1605	[c=4]pushdf1_not_fp/0
	load8! &14 	#X13	# 1606	[c=4]pushdf1_not_fp/1
	call! __muldf3		# 1607	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load8! &0 	#AR	# 1608	[c=4]movdf_push_pop
	store8! &14 	#X13
	push! 0x4024000000000000		# 1610	[c=4]pushdf1_not_fp/0
	load8! &7 	#X6	# 1611	[c=4]pushdf1_not_fp/1
	call! __muldf3		# 1612	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load8! &0 	#AR	# 1613	[c=4]movdf_push_pop
	store8! &7 	#X6
	load8! &0 	#AR	# 1615	[c=4]pushdf1_not_fp/1
	call! __fixdfsi		# 1616	[c=0]*call_value_pop_1/0
	store8! &1

	load4! &0 	#AR	# 1617	[c=4]movsi_push_pop
	store8! &4 	#X3
	load4! &0 	#AR	# 1619	[c=4]pushsi1_not_fp/1
	call! __floatsidf		# 1620	[c=0]*call_value_pop_1/0
	store8! &1

	load8! &0 	#AR	# 1622	[c=4]pushdf1_not_fp/1
	load8! &7 	#X6	# 1623	[c=4]pushdf1_not_fp/1
	call! __subdf3		# 1624	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load8! &0 	#AR	# 1625	[c=4]movdf_push_pop
	store8! &7 	#X6
	load1! &3 	#X3	# 5064	[c=5]movqi_to_tr_unspec/1
	add! 48		# 1633	[c=4]*adddi/0
	store8! &16 	#X15	# 5596	[c=4]movqi_from_tr_unspec/0
	load8! &7 	#X7	# 1640	[c=5]movdi_to_tr_unspec/1
	add! 1		# 1642	[c=4]*adddi/0
	store8! &4 	#X3	# 1643	[c=4]movdi_from_tr_unspec/0
	load1! &15 	#X15	# 1646	[c=5]movqi_to_tr_unspec/1
	load8! &8 	#X7	# 1648	[c=4]movqi_from_tr_unspec/1
	store1	
	#	
	load8! &13 	#X13	# 1651	[c=4]pushdf1_not_fp/1
	load8! &1 	#AR	# 1652	[c=4]pushdf1_not_fp/1
	call! __ltdf2		# 1653	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH	# 1655	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	add! -9223372036854775808	
	push! 0	
	add! -9223372036854775808	
	lt_u	
	not	
	jump_zero! .L316.l_o34c93e
	# END CBRANCH
	load8! &6 	#X6	# 1574	[c=4]pushdf1_not_fp/1
	push! 0x3ff0000000000000		# 1575	[c=4]pushdf1_not_fp/0
	call! __subdf3		# 1576	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load8! &13 	#X13	# 1579	[c=4]pushdf1_not_fp/1
	load8! &1 	#AR	# 1580	[c=4]pushdf1_not_fp/1
	call! __ltdf2		# 1581	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH	# 1583	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	add! -9223372036854775808	
	push! 0	
	add! -9223372036854775808	
	lt_u	
	not	
	jump_zero! .L317.l_o34c93e
	# END CBRANCH
	load8! &3 	#X3	# 1601	[c=4]movdi_push_pop
	store8! &8 	#X7
	# CBRANCH	# 1602	[c=12]cbranchdi4_internal
	load8! &3 	#X3
	load8! &6 	#X5
	xor	
	push! 1	
	lt_u	
	jump_zero! .L76.l_o34c93e
	# END CBRANCH
	load4! &22	# 4440	[c=2]movsi_push_pop
	store8! &8 	#X7
	load8! &12 	#X12	# 4447	[c=4]movdf_push_pop
	store8! &6 	#X5
.L67.l_o34c93e:
	load8! &5 	#X5	# 5032	[c=4]movdi_push_pop
	store8! &7 	#X6
.L51.l_o34c93e:
	load4! &26	# 1859	[c=2]movsi_push_pop
	store8! &1 	#AR
	# CBRANCH	# 1860	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	add! -2147483648	
	push! 0	
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L89.l_o34c93e
	# END CBRANCH
	# CBRANCH	# 1862	[c=12]cbranchsi4_internal
	push! 14	
	add! -2147483648	
	load4! &11 	#X10
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L89.l_o34c93e
	# END CBRANCH
	load4! &10 	#X10	# 5022	[c=5]movsi_to_tr_unspec/1
	sigx4		# 5024	[c=6]*extendsidi2
	shift_l! 3	# 5025	[c=8]*ashldi3/0
	add! __mprec_tens		# 5028	[c=4]*adddi/0
	load8		# 5030	[c=4]*peep2_mov_from_mem_tr_to_tr_ind_pushdf_unspec
	store8! &9 	#X8	# 1882	[c=4]movdf_from_tr_unspec/0
	# CBRANCH	# 1884	[c=14]cbranchsi4_internal
	load4! &31
	add! -2147483648	
	push! 0	
	add! -2147483648	
	lt_u	
	jump_zero! .L90.l_o34c93e
	# END CBRANCH
	# CBRANCH	# 1886	[c=12]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &10 	#X9
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L90.l_o34c93e
	# END CBRANCH
	# CBRANCH EQ0	# 1888	[c=12]cbranchsi4_internal
	load4! &9 	#X9
	jump_not_zero! .L185.l_o34c93e
	# END CBRANCH
	load8! &6 	#X6	# 5021	[c=4]movdf_push_pop
	store8! &4 	#X3
	push! 0x4014000000000000		# 1894	[c=4]pushdf1_not_fp/0
	load8! &9 	#X8	# 1895	[c=4]pushdf1_not_fp/1
	call! __muldf3		# 1896	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load8! &0 	#AR	# 1899	[c=4]pushdf1_not_fp/1
	load8! &7 	#X6	# 1900	[c=4]pushdf1_not_fp/1
	call! __ledf2		# 1901	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH	# 1903	[c=12]cbranchdi4_internal
	push! 0	
	add! -9223372036854775808	
	load8! &1 	#AR
	add! -9223372036854775808	
	lt_u	
	jump_zero! .L186.l_o34c93e
	# END CBRANCH
	push! 0		# 104	[c=4]movdi_push_pop
	store8! &13 	#X12
	push! 0		# 105	[c=4]movdi_push_pop
	store8! &6 	#X5
.L69.l_o34c93e:
	load8! &14 	#X14	# 2868	[c=5]movdi_to_tr_unspec/1
	add! 1		# 2870	[c=4]*adddi/0
	store8! &4 	#X3	# 2871	[c=4]movdi_from_tr_unspec/0
	push! 49		# 2873	[c=3]movqi_to_tr_unspec/0
	load8! &15 	#X14	# 2875	[c=4]movqi_from_tr_unspec/1
	store1	
	#	
	load8! &10 	#X10	# 2877	[c=5]movdi_to_tr_unspec/1
	add! 1		# 2879	[c=4]*adddi/0
	store8! &7 	#X6	# 5474	[c=4]movsi_from_tr_unspec/0
.L129.l_o34c93e:
	load8! &12 	#X12	# 3523	[c=4]pushdi1_not_fp/1
	load8! &3 	#X2	# 3524	[c=4]pushdi1_not_fp/1
	call! _Bfree		# 3525	[c=5]*call_pop_0/0
	set_sp! (+ &0 16)
	

	load8! &6 	#X6	# 3526	[c=5]movdi_to_tr_unspec/1
	add! 1		# 3528	[c=4]*adddi/0
	store8! &11 	#X10	# 5433	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ0	# 3535	[c=12]cbranchdi4_internal
	load8! &5 	#X5
	jump_zero! .L74.l_o34c93e
	# END CBRANCH
.L157.l_o34c93e:
	load8! &5 	#X5	# 3482	[c=4]pushdi1_not_fp/1
	load8! &3 	#X2	# 3483	[c=4]pushdi1_not_fp/1
	call! _Bfree		# 3484	[c=5]*call_pop_0/0
	set_sp! (+ &0 16)
	

.L74.l_o34c93e:
	load8! &4 	#X4	# 3487	[c=4]pushdi1_not_fp/1
	load8! &3 	#X2	# 3488	[c=4]pushdi1_not_fp/1
	call! _Bfree		# 3489	[c=5]*call_pop_0/0
	set_sp! (+ &0 16)
	

	push! 0		# 3490	[c=3]movqi_to_tr_unspec/0
	load8! &4 	#X3	# 3492	[c=4]movqi_from_tr_unspec/1
	store1	
	#	
	load4! &10 	#X10	# 3494	[c=5]movsi_to_tr_unspec/1
	load8! &33	# 4766	[c=2]movdi_push_pop
	store8! &3 	#X1
	load8! &2 	#X1	# 3496	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	# CBRANCH EQ0	# 3498	[c=14]cbranchdi4_internal
	load8! &34
	jump_zero! .L21.l_o34c93e
	# END CBRANCH
	load8! &3 	#X3	# 3500	[c=5]movdi_to_tr_unspec/1
	load8! &35	# 4765	[c=2]movdi_push_pop
	store8! &3 	#X1
	load8! &2 	#X1	# 3502	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load8! &14 	#X14	# 5797	[c=4]movdi_push_pop
	store8! &29
	jump! .L309.l_o34c93e		# 6218	[c=4]jump
.L307.l_o34c93e:
	push! 1		# 217	[c=3]movsi_to_tr_unspec/0
	load8! &5 	#X4	# 219	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	load8! &3 	#X3	# 221	[c=5]movdi_to_tr_unspec/1
	and! 0x7fffffff		# 223	[c=4]*anddi3/0
	store8! &4 	#X3	# 5731	[c=4]movsi_from_tr_unspec/0
	load4! &3 	#X3	# 5396	[c=5]movsi_to_tr_unspec/1
	shift_l! 32	# 5398	[c=8]*ashldi3/0
	store8! &1 	#AR	# 5399	[c=4]movdi_from_tr_unspec/0
	load8! &6 	#X6	# 5400	[c=5]movdi_to_tr_unspec/1
	and! 0xffffffff		# 5402	[c=4]*anddi3/0
	load8! &1 	#AR	# 5403	[c=6]*iordi3/2
	or
	store8! &7 	#X6	# 5404	[c=4]movdi_from_tr_unspec/0
	load8! &6 	#X6	# 5405	[c=4]movdf_push_pop
	store8! &6 	#X5
	load8! &3 	#X3	# 5800	[c=5]movdi_to_tr_unspec/1
	and! 0x7ff00000		# 5802	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 5803	[c=12]*peep2_cbranchsi
	push! 2146435072	
	xor	
	push! 1	
	lt_u	
	jump_zero! .L25.l_o34c93e
	# END CBRANCH
.L308.l_o34c93e:
	push! 9999		# 276	[c=3]movsi_to_tr_unspec/0
	load8! &33	# 5385	[c=2]movdi_push_pop
	store8! &3 	#X1
	load8! &2 	#X1	# 278	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	load8! &5 	#X5	# 5386	[c=5]movdi_to_tr_unspec/1
	and! 0xfffffffffffff		# 5388	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_not_zero! .L318.l_o34c93e	# 5390	[c=12]*peep2_cbranchdi
	# END CBRANCH
	# CBRANCH EQ0	# 3511	[c=14]cbranchdi4_internal
	load8! &34
	jump_zero! .L319.l_o34c93e
	# END CBRANCH
	push! .LC0.l_o34c93e		# 10	[c=4]movdi_push_pop
	store8! &15 	#X14
	push! (+ .LC0.l_o34c93e 8)		# 11	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 294	[c=5]movdi_to_tr_unspec/1
	load8! &35	# 5384	[c=2]movdi_push_pop
	store8! &3 	#X1
	load8! &2 	#X1	# 296	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
.L324.l_o34c93e:
	load8! &14 	#X14	# 5806	[c=4]movdi_push_pop
	store8! &29
	jump! .L309.l_o34c93e		# 6222	[c=4]jump
.L310.l_o34c93e:
	load8! &5 	#X5	# 5317	[c=4]movdi_push_pop
	store8! &2 	#X1
	load8! &5 	#X5	# 5318	[c=5]movdi_to_tr_unspec/1
	shift_ru! 32	# 5320	[c=40]*lshrdi3/0
	and! 0xfffff		# 377	[c=4]*anddi3/0
	or! 0x3ff00000		# 386	[c=4]*iordi3/0
	and! 0xffffffff		# 5789	[c=4]*anddi3/0
	shift_l! 32	# 5330	[c=8]*ashldi3/0
	store8! &4 	#X3	# 5331	[c=4]movdi_from_tr_unspec/0
	load8! &5 	#X5	# 5332	[c=5]movdi_to_tr_unspec/1
	and! 0xffffffff		# 5334	[c=4]*anddi3/0
	load8! &4 	#X3	# 5335	[c=6]*iordi3/2
	or
	store8! &2 	#X1	# 5336	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 414	[c=5]movdi_to_tr_unspec/1
	add! -1023		# 416	[c=4]*adddi/0
	store8! &9 	#X8	# 5724	[c=4]movsi_from_tr_unspec/0
	load4! &25	# 423	[c=2]movsi_push_pop
	store8! &10 	#X9
	push! 0		# 14	[c=4]movsi_push_pop
	store4! &21
	load8! &1 	#X1	# 5809	[c=4]movdf_push_pop
	store8! &1 	#AR
	push! 0x3ff8000000000000		# 5810	[c=4]pushdf1_not_fp/0
	load8! &2 	#X1	# 5811	[c=4]pushdf1_not_fp/1
	call! __subdf3		# 5812	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	push! 0x3fd287a7636f4361		# 5813	[c=4]pushdf1_not_fp/0
	load8! &1 	#AR	# 5814	[c=4]pushdf1_not_fp/1
	call! __muldf3		# 5815	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	push! 0x3fc68a288b60c8b3		# 5816	[c=4]pushdf1_not_fp/0
	load8! &1 	#AR	# 5817	[c=4]pushdf1_not_fp/1
	call! __adddf3		# 5818	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load8! &0 	#AR	# 5819	[c=4]movdf_push_pop
	store8! &4 	#X3
	load4! &8 	#X8	# 5820	[c=4]pushsi1_not_fp/1
	call! __floatsidf		# 5821	[c=0]*call_value_pop_1/0
	store8! &1

	push! 0x3fd34413509f79fb		# 5822	[c=4]pushdf1_not_fp/0
	load8! &1 	#AR	# 5823	[c=4]pushdf1_not_fp/1
	call! __muldf3		# 5824	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load8! &0 	#AR	# 5825	[c=4]pushdf1_not_fp/1
	load8! &4 	#X3	# 5826	[c=4]pushdf1_not_fp/1
	call! __adddf3		# 5827	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load8! &0 	#AR	# 5828	[c=4]movdf_push_pop
	store8! &4 	#X3
	load8! &0 	#AR	# 5829	[c=4]pushdf1_not_fp/1
	call! __fixdfsi		# 5830	[c=0]*call_value_pop_1/0
	store8! &1

	load4! &0 	#AR	# 5831	[c=4]movsi_push_pop
	store8! &8 	#X7
	push! 0x0000000000000000		# 5832	[c=4]pushdf1_not_fp/0
	load8! &4 	#X3	# 5833	[c=4]pushdf1_not_fp/1
	call! __ltdf2		# 5834	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH	# 5835	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	add! -9223372036854775808	
	push! 0	
	add! -9223372036854775808	
	lt_u	
	jump_zero! .L35.l_o34c93e
	# END CBRANCH
.L311.l_o34c93e:
	load4! &7 	#X7	# 665	[c=4]pushsi1_not_fp/1
	call! __floatsidf		# 666	[c=0]*call_value_pop_1/0
	store8! &1

	load8! &3 	#X3	# 668	[c=4]pushdf1_not_fp/1
	load8! &1 	#AR	# 669	[c=4]pushdf1_not_fp/1
	call! __nedf2		# 670	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH EQ0	# 672	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L35.l_o34c93e
	# END CBRANCH
	load8! &7 	#X7	# 677	[c=5]movdi_to_tr_unspec/1
	add! -1		# 679	[c=4]*adddi/0
	store8! &8 	#X7	# 5684	[c=4]movsi_from_tr_unspec/0
	load8! &8 	#X8	# 5838	[c=5]movdi_to_tr_unspec/1
	load8! &10 	#X9	# 5840	[c=14]*subdi3/2
	sub
	neg		# 5841	[c=4]*neg_tr
	store8! &4 	#X3	# 5843	[c=4]movsi_from_tr_unspec/0
	load8! &3 	#X3	# 5844	[c=5]movdi_to_tr_unspec/1
	add! -1		# 5846	[c=4]*adddi/0
	store8! &9 	#X8	# 5848	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 5849	[c=12]cbranchsi4_internal
	push! 22	
	load4! &8 	#X7
	lt_u	
	jump_zero! .L320.l_o34c93e
	# END CBRANCH
.L174.l_o34c93e:
	push! 1		# 17	[c=4]movsi_push_pop
	store4! &20
	# CBRANCH	# 5852	[c=12]cbranchsi4_internal
	load4! &8 	#X8
	add! -2147483648	
	push! 0	
	add! -2147483648	
	lt_u	
	jump_zero! .L175.l_o34c93e
	# END CBRANCH
.L169.l_o34c93e:
	load8! &3 	#X3	# 5240	[c=5]movdi_to_tr_unspec/1
	sub! 1		# 5242	[c=12]*subdi3/0
	neg		# 5243	[c=4]*neg_tr
	store8! &12 	#X11	# 5676	[c=4]movsi_from_tr_unspec/0
	push! 0		# 19	[c=4]movsi_push_pop
	store8! &9 	#X8
.L351.l_o34c93e:
	# CBRANCH	# 5855	[c=12]cbranchsi4_internal
	load4! &7 	#X7
	add! -2147483648	
	push! 0	
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L321.l_o34c93e
	# END CBRANCH
.L168.l_o34c93e:
	load8! &7 	#X7	# 5235	[c=5]movdi_to_tr_unspec/1
	load8! &9 	#X8	# 5237	[c=6]*adddi/2
	add
	store8! &9 	#X8	# 5674	[c=4]movsi_from_tr_unspec/0
	load4! &7 	#X7	# 23	[c=4]movsi_push_pop
	store8! &11 	#X10
	push! 0		# 24	[c=4]movsi_push_pop
	store4! &19
.L345.l_o34c93e:
	# CBRANCH	# 5858	[c=14]cbranchsi4_internal
	push! 9	
	load4! &31
	lt_u	
	jump_zero! .L322.l_o34c93e
	# END CBRANCH
.L176.l_o34c93e:
	push! -1		# 143	[c=4]movsi_push_pop
	store8! &13 	#X12
	push! 1		# 144	[c=4]movsi_push_pop
	store8! &14 	#X13
	push! 0		# 145	[c=4]movsi_push_pop
	store4! &31
	push! 1		# 146	[c=4]movsi_push_pop
	store4! &18
	push! -1		# 147	[c=4]movsi_push_pop
	store8! &10 	#X9
	push! 0		# 148	[c=4]movsi_push_pop
	store4! &32
	push! 0		# 3657	[c=3]movsi_to_tr_unspec/0
	load8! &3 	#X2	# 3659	[c=4]movsi_from_tr_unspec/1
	add! 104	
	store4	
	#	
	load4! &9 	#X9	# 36	[c=4]movsi_push_pop
	store4! &22
	push! 0		# 37	[c=4]movsi_push_pop
	store8! &2 	#X1
.L349.l_o34c93e:
	load4! &1 	#X1	# 5861	[c=4]pushsi1_not_fp/1
	load8! &3 	#X2	# 5862	[c=4]pushdi1_not_fp/1
	call! _Balloc		# 5863	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load8! &0 	#AR	# 5864	[c=4]movdi_push_pop
	store8! &15 	#X14
	# CBRANCH EQ0	# 5865	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_not_zero! .L50.l_o34c93e
	# END CBRANCH
	jump! .L162.l_o34c93e		# 6228	[c=4]jump
.L318.l_o34c93e:
	# CBRANCH EQ0	# 3517	[c=14]cbranchdi4_internal
	load8! &34
	jump_zero! .L323.l_o34c93e
	# END CBRANCH
	push! .LC1.l_o34c93e		# 12	[c=4]movdi_push_pop
	store8! &15 	#X14
	push! (+ .LC1.l_o34c93e 3)		# 13	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 5868	[c=5]movdi_to_tr_unspec/1
	load8! &35	# 5869	[c=2]movdi_push_pop
	store8! &3 	#X1
	load8! &2 	#X1	# 5870	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	jump! .L324.l_o34c93e		# 6232	[c=4]jump
.L341.l_o34c93e:
	push! -1		# 39	[c=4]movsi_push_pop
	store8! &13 	#X12
	push! -1		# 40	[c=4]movsi_push_pop
	store8! &10 	#X9
	push! 0		# 41	[c=4]movsi_push_pop
	store4! &32
	push! -1		# 42	[c=4]movsi_push_pop
	store4! &22
	push! 1		# 43	[c=4]movsi_push_pop
	store4! &18
.L162.l_o34c93e:
	push! .LC3.l_o34c93e		# 923	[c=4]pushdi1_not_fp/0
	push! 0		# 924	[c=4]pushdi1_not_fp/0
	push! 426		# 925	[c=4]pushsi1_not_fp/0
	push! .LC4.l_o34c93e		# 926	[c=4]pushdi1_not_fp/0
	call! __assert_func		# 927	[c=5]*call_pop_0/0
	set_sp! (+ &0 32)
	

	push! 0		# 44	[c=4]movdi_push_pop
	store8! &15 	#X14
	jump! .L50.l_o34c93e		# 6234	[c=4]jump
.L90.l_o34c93e:
	load8! &6 	#X6	# 5015	[c=4]movdf_push_pop
	store8! &4 	#X3
	load8! &8 	#X8	# 1913	[c=4]pushdf1_not_fp/1
	load8! &7 	#X6	# 1914	[c=4]pushdf1_not_fp/1
	call! __divdf3		# 1915	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load8! &0 	#AR	# 1918	[c=4]pushdf1_not_fp/1
	call! __fixdfsi		# 1919	[c=0]*call_value_pop_1/0
	store8! &1

	load4! &0 	#AR	# 1920	[c=4]movsi_push_pop
	store8! &7 	#X6
	load4! &0 	#AR	# 1922	[c=4]pushsi1_not_fp/1
	call! __floatsidf		# 1923	[c=0]*call_value_pop_1/0
	store8! &1

	load8! &0 	#AR	# 1925	[c=4]pushdf1_not_fp/1
	load8! &9 	#X8	# 1926	[c=4]pushdf1_not_fp/1
	call! __muldf3		# 1927	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load8! &0 	#AR	# 1930	[c=4]pushdf1_not_fp/1
	load8! &4 	#X3	# 1931	[c=4]pushdf1_not_fp/1
	call! __subdf3		# 1932	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load8! &0 	#AR	# 1933	[c=4]movdf_push_pop
	store8! &6 	#X5
	load1! &6 	#X6	# 5017	[c=5]movqi_to_tr_unspec/1
	add! 48		# 1941	[c=4]*adddi/0
	store8! &1 	#AR	# 5578	[c=4]movdi_from_tr_unspec/0
	load8! &14 	#X14	# 5579	[c=5]movdi_to_tr_unspec/1
	add! 1		# 1950	[c=4]*adddi/0
	store8! &8 	#X7	# 1951	[c=4]movdi_from_tr_unspec/0
	load1! &0 	#AR	# 1954	[c=5]movqi_to_tr_unspec/1
	load8! &15 	#X14	# 1956	[c=4]movqi_from_tr_unspec/1
	store1	
	#	
	load8! &10 	#X10	# 1958	[c=5]movdi_to_tr_unspec/1
	add! 1		# 1960	[c=4]*adddi/0
	store8! &11 	#X10	# 5582	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ	# 1967	[c=12]cbranchsi4_internal
	load4! &9 	#X9
	push! 1	
	xor	
	jump_zero! .L187.l_o34c93e
	# END CBRANCH
	push! 0x4024000000000000		# 1969	[c=4]pushdf1_not_fp/0
	load8! &6 	#X5	# 1970	[c=4]pushdf1_not_fp/1
	call! __muldf3		# 1971	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load8! &0 	#AR	# 1972	[c=4]movdf_push_pop
	store8! &6 	#X5
	push! 0x0000000000000000		# 1974	[c=4]pushdf1_not_fp/0
	load8! &1 	#AR	# 1975	[c=4]pushdf1_not_fp/1
	call! __eqdf2		# 1976	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH EQ0	# 1978	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L188.l_o34c93e
	# END CBRANCH
	load8! &9 	#X9	# 1981	[c=5]movdi_to_tr_unspec/1
	add! -2		# 1983	[c=4]*adddi/0
	and! 0xffffffff		# 5770	[c=4]*anddi3/0
	add! 2		# 5010	[c=4]*adddi/0
	load8! &15 	#X14	# 5013	[c=6]*adddi/2
	add
	store8! &10 	#X9	# 5014	[c=4]movdi_from_tr_unspec/0
.L92.l_o34c93e:
	load8! &8 	#X8	# 2152	[c=4]pushdf1_not_fp/1
	load8! &6 	#X5	# 2153	[c=4]pushdf1_not_fp/1
	call! __divdf3		# 2154	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load8! &0 	#AR	# 2157	[c=4]pushdf1_not_fp/1
	call! __fixdfsi		# 2158	[c=0]*call_value_pop_1/0
	store8! &1

	load4! &0 	#AR	# 2159	[c=4]movsi_push_pop
	store8! &7 	#X6
	load4! &0 	#AR	# 2161	[c=4]pushsi1_not_fp/1
	call! __floatsidf		# 2162	[c=0]*call_value_pop_1/0
	store8! &1

	load8! &8 	#X8	# 2164	[c=4]pushdf1_not_fp/1
	load8! &1 	#AR	# 2165	[c=4]pushdf1_not_fp/1
	call! __muldf3		# 2166	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load8! &0 	#AR	# 2169	[c=4]pushdf1_not_fp/1
	load8! &6 	#X5	# 2170	[c=4]pushdf1_not_fp/1
	call! __subdf3		# 2171	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load8! &0 	#AR	# 2173	[c=4]movdf_push_pop
	store8! &6 	#X5
	load1! &6 	#X6	# 4989	[c=5]movqi_to_tr_unspec/1
	add! 48		# 2180	[c=4]*adddi/0
	store8! &2 	#X1	# 5565	[c=4]movdi_from_tr_unspec/0
	load8! &7 	#X7	# 5566	[c=5]movdi_to_tr_unspec/1
	add! 1		# 2189	[c=4]*adddi/0
	store8! &4 	#X3	# 2190	[c=4]movdi_from_tr_unspec/0
	load1! &1 	#X1	# 2193	[c=5]movqi_to_tr_unspec/1
	load8! &8 	#X7	# 2195	[c=4]movqi_from_tr_unspec/1
	store1	
	#	
	# CBRANCH EQ	# 2197	[c=12]cbranchdi4_internal
	load8! &3 	#X3
	load8! &10 	#X9
	xor	
	jump_zero! .L91.l_o34c93e
	# END CBRANCH
	push! 0x4024000000000000		# 2139	[c=4]pushdf1_not_fp/0
	load8! &1 	#AR	# 2140	[c=4]pushdf1_not_fp/1
	call! __muldf3		# 2141	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load8! &0 	#AR	# 2142	[c=4]movdf_push_pop
	store8! &6 	#X5
	load8! &3 	#X3	# 2144	[c=4]movdi_push_pop
	store8! &8 	#X7
	push! 0x0000000000000000		# 2145	[c=4]pushdf1_not_fp/0
	load8! &1 	#AR	# 2146	[c=4]pushdf1_not_fp/1
	call! __eqdf2		# 2147	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH EQ0	# 2149	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_not_zero! .L92.l_o34c93e
	# END CBRANCH
	jump! .L74.l_o34c93e		# 6237	[c=4]jump
.L89.l_o34c93e:
	# CBRANCH EQ0	# 2204	[c=14]cbranchsi4_internal
	load4! &17
	jump_zero! .L191.l_o34c93e
	# END CBRANCH
	# CBRANCH	# 2206	[c=14]cbranchsi4_internal
	push! 1	
	add! -2147483648	
	load4! &31
	add! -2147483648	
	lt_u	
	jump_zero! .L325.l_o34c93e
	# END CBRANCH
	load8! &9 	#X9	# 2293	[c=5]movdi_to_tr_unspec/1
	add! -1		# 2295	[c=4]*adddi/0
	store8! &1 	#AR	# 5548	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 5549	[c=14]cbranchsi4_internal
	load4! &18
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L105.l_o34c93e
	# END CBRANCH
	load4! &18	# 4956	[c=5]movsi_to_tr_unspec/1
	load8! &1 	#AR	# 2310	[c=14]*subdi3/2
	sub
	store8! &13 	#X12	# 5547	[c=4]movsi_from_tr_unspec/0
.L106.l_o34c93e:
	# CBRANCH	# 2349	[c=12]cbranchsi4_internal
	load4! &9 	#X9
	add! -2147483648	
	push! 0	
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L107.l_o34c93e
	# END CBRANCH
	load8! &9 	#X9	# 4933	[c=5]movdi_to_tr_unspec/1
	load8! &12 	#X11	# 4935	[c=6]*adddi/2
	add
	store8! &1 	#AR	# 5534	[c=4]movdi_from_tr_unspec/0
	load8! &9 	#X9	# 5535	[c=5]movdi_to_tr_unspec/1
	load8! &9 	#X8	# 4940	[c=6]*adddi/2
	add
	store8! &9 	#X8	# 5538	[c=4]movsi_from_tr_unspec/0
	load4! &11 	#X11	# 77	[c=4]movsi_push_pop
	store8! &4 	#X3
	load4! &0 	#AR	# 78	[c=4]movsi_push_pop
	store8! &12 	#X11
	push! 1		# 2396	[c=4]pushsi1_not_fp/0
	load8! &3 	#X2	# 2397	[c=4]pushdi1_not_fp/1
	call! __i2b		# 2398	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load8! &0 	#AR	# 2399	[c=4]movdi_push_pop
	store8! &6 	#X5
.L101.l_o34c93e:
	# CBRANCH	# 2402	[c=12]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &4 	#X3
	add! -2147483648	
	lt_u	
	jump_zero! .L108.l_o34c93e
	# END CBRANCH
	# CBRANCH	# 2404	[c=12]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &9 	#X8
	add! -2147483648	
	lt_u	
	jump_zero! .L108.l_o34c93e
	# END CBRANCH
	load4! &3 	#X3	# 2406	[c=4]movsi_push_pop
	store8! &1 	#AR
	# CBRANCH	# 2407	[c=12]cbranchsi4_internal
	load4! &8 	#X8
	add! -2147483648	
	load4! &4 	#X3
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L326.l_o34c93e
	# END CBRANCH
	load8! &0 	#AR	# 4910	[c=5]movdi_to_tr_unspec/1
	load8! &12 	#X11	# 4912	[c=14]*subdi3/2
	sub
	neg		# 4913	[c=4]*neg_tr
	store8! &12 	#X11	# 5524	[c=4]movsi_from_tr_unspec/0
	load8! &0 	#AR	# 4917	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 4919	[c=14]*subdi3/2
	sub
	neg		# 4920	[c=4]*neg_tr
	store8! &4 	#X3	# 5527	[c=4]movsi_from_tr_unspec/0
	load8! &8 	#X8	# 5528	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 2442	[c=14]*subdi3/2
	sub
	store8! &9 	#X8	# 5531	[c=4]movsi_from_tr_unspec/0
.L108.l_o34c93e:
	# CBRANCH EQ0	# 2451	[c=14]cbranchsi4_internal
	load4! &18
	jump_zero! .L110.l_o34c93e
	# END CBRANCH
	# CBRANCH EQ0	# 2453	[c=14]cbranchsi4_internal
	load4! &17
	jump_zero! .L111.l_o34c93e
	# END CBRANCH
	# CBRANCH	# 2455	[c=12]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &13 	#X12
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L327.l_o34c93e
	# END CBRANCH
	load8! &12 	#X12	# 4905	[c=4]movdi_push_pop
	store8! &1 	#AR
	load4! &18	# 4906	[c=5]movsi_to_tr_unspec/1
	load8! &13 	#X12	# 2478	[c=14]*subdi3/2
	sub
	store8! &1 	#AR	# 5521	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 5522	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L328.l_o34c93e
	# END CBRANCH
.L110.l_o34c93e:
	push! 1		# 2503	[c=4]pushsi1_not_fp/0
	load8! &3 	#X2	# 2504	[c=4]pushdi1_not_fp/1
	call! __i2b		# 2505	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load8! &0 	#AR	# 2506	[c=4]movdi_push_pop
	store8! &13 	#X12
	# CBRANCH	# 2507	[c=12]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &8 	#X7
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L329.l_o34c93e
	# END CBRANCH
	# CBRANCH	# 2520	[c=14]cbranchsi4_internal
	push! 1	
	add! -2147483648	
	load4! &31
	add! -2147483648	
	lt_u	
	jump_zero! .L330.l_o34c93e
	# END CBRANCH
	push! 0		# 85	[c=4]movsi_push_pop
	store8! &14 	#X13
	push! 1		# 90	[c=4]movsi_push_pop
	store8! &1 	#AR
	# CBRANCH EQ0	# 2570	[c=12]cbranchsi4_internal
	load4! &7 	#X7
	jump_not_zero! .L115.l_o34c93e
	# END CBRANCH
.L117.l_o34c93e:
	load8! &8 	#X8	# 2632	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 2634	[c=6]*adddi/2
	add
	and! 0x1f		# 2643	[c=4]*anddi3/0
	store8! &1 	#AR	# 5503	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 5504	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_zero! .L196.l_o34c93e
	# END CBRANCH
	load8! &0 	#AR	# 4869	[c=5]movdi_to_tr_unspec/1
	sub! 32		# 4871	[c=12]*subdi3/0
	neg		# 4872	[c=4]*neg_tr
	store8! &2 	#X1	# 5497	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 5498	[c=12]cbranchsi4_internal
	push! 4	
	add! -2147483648	
	load4! &2 	#X1
	add! -2147483648	
	lt_u	
	jump_zero! .L119.l_o34c93e
	# END CBRANCH
	push! 28		# 2671	[c=3]movdi_to_tr_unspec/0
	load8! &1 	#AR	# 2673	[c=14]*subdi3/2
	sub
	store8! &1 	#AR	# 5485	[c=4]movdi_from_tr_unspec/0
	load8! &11 	#X11	# 5486	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 4859	[c=6]*adddi/2
	add
	store8! &12 	#X11	# 5489	[c=4]movsi_from_tr_unspec/0
	load8! &0 	#AR	# 4862	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 4864	[c=6]*adddi/2
	add
	store8! &4 	#X3	# 5492	[c=4]movsi_from_tr_unspec/0
	load8! &8 	#X8	# 5493	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 2712	[c=6]*adddi/2
	add
	store8! &9 	#X8	# 5496	[c=4]movsi_from_tr_unspec/0
.L120.l_o34c93e:
	# CBRANCH	# 2781	[c=12]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &12 	#X11
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L331.l_o34c93e
	# END CBRANCH
.L121.l_o34c93e:
	# CBRANCH	# 2790	[c=12]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &9 	#X8
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L332.l_o34c93e
	# END CBRANCH
.L122.l_o34c93e:
	# CBRANCH EQ0	# 2799	[c=14]cbranchsi4_internal
	load4! &19
	jump_not_zero! .L333.l_o34c93e
	# END CBRANCH
.L123.l_o34c93e:
	# CBRANCH	# 2836	[c=12]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &10 	#X9
	add! -2147483648	
	lt_u	
	jump_zero! .L334.l_o34c93e
	# END CBRANCH
	load8! &10 	#X10	# 2890	[c=5]movdi_to_tr_unspec/1
	add! 1		# 2892	[c=4]*adddi/0
	store8! &11 	#X10	# 5472	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ0	# 2899	[c=14]cbranchsi4_internal
	load4! &17
	jump_zero! .L130.l_o34c93e
	# END CBRANCH
.L126.l_o34c93e:
	# CBRANCH	# 2902	[c=12]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &4 	#X3
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L335.l_o34c93e
	# END CBRANCH
.L131.l_o34c93e:
	# CBRANCH EQ0	# 2911	[c=12]cbranchsi4_internal
	load4! &13 	#X13
	jump_not_zero! .L336.l_o34c93e
	# END CBRANCH
	load8! &5 	#X5	# 108	[c=4]movdi_push_pop
	store8! &9 	#X8
	load8! &9 	#X9	# 2971	[c=5]movdi_to_tr_unspec/1
	add! -1		# 2973	[c=4]*adddi/0
	and! 0xffffffff		# 5768	[c=4]*anddi3/0
	add! 1		# 4821	[c=4]*adddi/0
	load8! &15 	#X14	# 4824	[c=6]*adddi/2
	add
	store8! &4 	#X3	# 4825	[c=4]movdi_from_tr_unspec/0
	load8! &14 	#X14	# 109	[c=4]movdi_push_pop
	store8! &10 	#X9
	load4! &10 	#X10	# 4548	[c=4]movsi_push_pop
	store4! &17
	load8! &14 	#X14	# 4550	[c=4]movdi_push_pop
	store8! &18
	load4! &30	# 4552	[c=2]movsi_push_pop
	store8! &11 	#X10
.L149.l_o34c93e:
	load8! &12 	#X12	# 2996	[c=4]pushdi1_not_fp/1
	load8! &5 	#X4	# 2997	[c=4]pushdi1_not_fp/1
	call! quorem.s_o34c93e		# 2998	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load4! &0 	#AR	# 2999	[c=4]movsi_push_pop
	store8! &16 	#X15
	load8! &15 	#X15	# 3000	[c=5]movdi_to_tr_unspec/1
	add! 48		# 3002	[c=4]*adddi/0
	store8! &12 	#X11	# 5466	[c=4]movsi_from_tr_unspec/0
	load8! &5 	#X5	# 3009	[c=4]pushdi1_not_fp/1
	load8! &5 	#X4	# 3010	[c=4]pushdi1_not_fp/1
	call! __mcmp		# 3011	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load4! &0 	#AR	# 3012	[c=4]movsi_push_pop
	store8! &14 	#X13
	load8! &8 	#X8	# 3013	[c=4]pushdi1_not_fp/1
	load8! &13 	#X12	# 3014	[c=4]pushdi1_not_fp/1
	load8! &4 	#X2	# 3015	[c=4]pushdi1_not_fp/1
	call! __mdiff		# 3016	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	load8! &0 	#AR	# 3017	[c=4]movdi_push_pop
	store8! &8 	#X7
	load8! &0 	#AR	# 3018	[c=6]movsi_to_tr_unspec/2
	add! 16	
	load4	
	#	
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 4814	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L337.l_o34c93e
	# END CBRANCH
.L134.l_o34c93e:
	load8! &0 	#AR	# 3031	[c=4]pushdi1_not_fp/1
	load8! &5 	#X4	# 3032	[c=4]pushdi1_not_fp/1
	call! __mcmp		# 3033	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load4! &0 	#AR	# 3034	[c=4]movsi_push_pop
	store8! &15 	#X14
	load8! &7 	#X7	# 3035	[c=4]pushdi1_not_fp/1
	load8! &3 	#X2	# 3036	[c=4]pushdi1_not_fp/1
	call! _Bfree		# 3037	[c=5]*call_pop_0/0
	set_sp! (+ &0 16)
	

	# CBRANCH EQ0	# 3038	[c=12]cbranchsi4_internal
	load4! &14 	#X14
	jump_not_zero! .L135.l_o34c93e
	# END CBRANCH
	load4! &6 	#X6	# 4808	[c=5]movsi_to_tr_unspec/1
	and! 0x1		# 3046	[c=4]*anddi3/0
	store8! &2 	#X1	# 5753	[c=4]movdi_from_tr_unspec/0
	load8! &10 	#X10	# 5754	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 3060	[c=6]*iordi3/2
	or
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 5464	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L338.l_o34c93e
	# END CBRANCH
.L135.l_o34c93e:
	load8! &9 	#X9	# 3101	[c=5]movdi_to_tr_unspec/1
	add! 1		# 3103	[c=4]*adddi/0
	store8! &8 	#X7	# 3104	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 3106	[c=12]cbranchsi4_internal
	load4! &13 	#X13
	add! -2147483648	
	push! 0	
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L139.l_o34c93e
	# END CBRANCH
	load4! &6 	#X6	# 4796	[c=5]movsi_to_tr_unspec/1
	and! 0x1		# 3114	[c=4]*anddi3/0
	store8! &2 	#X1	# 5746	[c=4]movdi_from_tr_unspec/0
	load8! &10 	#X10	# 5747	[c=5]movdi_to_tr_unspec/1
	load8! &14 	#X13	# 3127	[c=6]*iordi3/2
	or
	load8! &2 	#X1	# 3141	[c=6]*iordi3/2
	or
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 5458	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L139.l_o34c93e
	# END CBRANCH
	# CBRANCH	# 3203	[c=12]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &15 	#X14
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L339.l_o34c93e
	# END CBRANCH
	load1! &11 	#X11	# 4784	[c=5]movqi_to_tr_unspec/1
	load8! &10 	#X9	# 3244	[c=4]movqi_from_tr_unspec/1
	store1	
	#	
	# CBRANCH EQ	# 3246	[c=12]cbranchdi4_internal
	load8! &3 	#X3
	load8! &8 	#X7
	xor	
	jump_zero! .L198.l_o34c93e
	# END CBRANCH
	push! 0		# 3248	[c=4]pushsi1_not_fp/0
	push! 10		# 3249	[c=4]pushsi1_not_fp/0
	load8! &6 	#X4	# 3250	[c=4]pushdi1_not_fp/1
	load8! &5 	#X2	# 3251	[c=4]pushdi1_not_fp/1
	call! __multadd		# 3252	[c=0]*call_value_pop_1/0
	store8! &4

	set_sp! &3
	load8! &0 	#AR	# 3253	[c=4]movdi_push_pop
	store8! &5 	#X4
	# CBRANCH EQ	# 3254	[c=12]cbranchdi4_internal
	load8! &5 	#X5
	load8! &9 	#X8
	xor	
	jump_zero! .L340.l_o34c93e
	# END CBRANCH
	push! 0		# 3266	[c=4]pushsi1_not_fp/0
	push! 10		# 3267	[c=4]pushsi1_not_fp/0
	load8! &7 	#X5	# 3268	[c=4]pushdi1_not_fp/1
	load8! &5 	#X2	# 3269	[c=4]pushdi1_not_fp/1
	call! __multadd		# 3270	[c=0]*call_value_pop_1/0
	store8! &4

	set_sp! &3
	load8! &0 	#AR	# 3271	[c=4]movdi_push_pop
	store8! &6 	#X5
	push! 0		# 3272	[c=4]pushsi1_not_fp/0
	push! 10		# 3273	[c=4]pushsi1_not_fp/0
	load8! &10 	#X8	# 3274	[c=4]pushdi1_not_fp/1
	load8! &5 	#X2	# 3275	[c=4]pushdi1_not_fp/1
	call! __multadd		# 3276	[c=0]*call_value_pop_1/0
	store8! &4

	set_sp! &3
	load8! &0 	#AR	# 3277	[c=4]movdi_push_pop
	store8! &9 	#X8
	load8! &7 	#X7	# 110	[c=4]movdi_push_pop
	store8! &10 	#X9
.L343.l_o34c93e:
	load8! &12 	#X12	# 5873	[c=4]pushdi1_not_fp/1
	load8! &5 	#X4	# 5874	[c=4]pushdi1_not_fp/1
	call! quorem.s_o34c93e		# 5875	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load4! &0 	#AR	# 5876	[c=4]movsi_push_pop
	store8! &16 	#X15
	load8! &15 	#X15	# 5877	[c=5]movdi_to_tr_unspec/1
	add! 48		# 5879	[c=4]*adddi/0
	store8! &12 	#X11	# 5881	[c=4]movsi_from_tr_unspec/0
	load8! &5 	#X5	# 5882	[c=4]pushdi1_not_fp/1
	load8! &5 	#X4	# 5883	[c=4]pushdi1_not_fp/1
	call! __mcmp		# 5884	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load4! &0 	#AR	# 5885	[c=4]movsi_push_pop
	store8! &14 	#X13
	load8! &8 	#X8	# 5886	[c=4]pushdi1_not_fp/1
	load8! &13 	#X12	# 5887	[c=4]pushdi1_not_fp/1
	load8! &4 	#X2	# 5888	[c=4]pushdi1_not_fp/1
	call! __mdiff		# 5889	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	load8! &0 	#AR	# 5890	[c=4]movdi_push_pop
	store8! &8 	#X7
	load8! &0 	#AR	# 5891	[c=6]movsi_to_tr_unspec/2
	add! 16	
	load4	
	#	
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 5893	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L134.l_o34c93e
	# END CBRANCH
.L337.l_o34c93e:
	load8! &0 	#AR	# 3024	[c=4]pushdi1_not_fp/1
	load8! &3 	#X2	# 3025	[c=4]pushdi1_not_fp/1
	call! _Bfree		# 3026	[c=5]*call_pop_0/0
	set_sp! (+ &0 16)
	

	push! 1		# 111	[c=4]movsi_push_pop
	store8! &15 	#X14
	jump! .L135.l_o34c93e		# 6255	[c=4]jump
.L313.l_o34c93e:
	push! 1		# 29	[c=4]movsi_push_pop
	store4! &18
	# CBRANCH	# 3694	[c=14]cbranchsi4_internal
	load4! &30
	push! 5	
	xor	
	push! 1	
	lt_u	
	jump_zero! .L167.l_o34c93e
	# END CBRANCH
.L164.l_o34c93e:
	load4! &31	# 5214	[c=5]movsi_to_tr_unspec/1
	load8! &11 	#X10	# 5217	[c=6]*adddi/2
	add
	store4! &22	# 5666	[c=4]movsi_from_tr_unspec/0
	load4! &21	# 5220	[c=5]movsi_to_tr_unspec/1
	add! 1		# 850	[c=4]*adddi/0
	store8! &10 	#X9	# 5668	[c=4]movsi_from_tr_unspec/0
	load4! &9 	#X9	# 857	[c=4]movsi_push_pop
	store8! &1 	#AR
	# CBRANCH	# 858	[c=12]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &10 	#X9
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L46.l_o34c93e
	# END CBRANCH
	push! 1		# 859	[c=4]movsi_push_pop
	store8! &1 	#AR
	jump! .L46.l_o34c93e		# 6257	[c=4]jump
.L312.l_o34c93e:
	push! 0		# 28	[c=4]movsi_push_pop
	store4! &18
	# CBRANCH EQ	# 3685	[c=14]cbranchsi4_internal
	load4! &30
	push! 2	
	xor	
	jump_zero! .L166.l_o34c93e
	# END CBRANCH
.L167.l_o34c93e:
	push! 0		# 3664	[c=3]movsi_to_tr_unspec/0
	load8! &3 	#X2	# 3666	[c=4]movsi_from_tr_unspec/1
	add! 104	
	store4	
	#	
	push! 0		# 3668	[c=4]pushsi1_not_fp/0
	load8! &3 	#X2	# 3669	[c=4]pushdi1_not_fp/1
	call! _Balloc		# 3670	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load8! &0 	#AR	# 3671	[c=4]movdi_push_pop
	store8! &15 	#X14
	# CBRANCH EQ0	# 3673	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L341.l_o34c93e
	# END CBRANCH
	load8! &0 	#AR	# 3733	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 3735	[c=4]movdi_from_tr_unspec/1
	add! 96	
	store8	
	#	
	push! -1		# 59	[c=4]movsi_push_pop
	store8! &10 	#X9
	push! 0		# 60	[c=4]movsi_push_pop
	store4! &32
	push! -1		# 61	[c=4]movsi_push_pop
	store4! &22
	push! 1		# 62	[c=4]movsi_push_pop
	store4! &18
	jump! .L51.l_o34c93e		# 6260	[c=4]jump
.L173.l_o34c93e:
	push! .LC2.l_o34c93e		# 139	[c=4]movdi_push_pop
	store8! &15 	#X14
	load8! &14 	#X14	# 5896	[c=4]movdi_push_pop
	store8! &29
	jump! .L309.l_o34c93e		# 6262	[c=4]jump
.L191.l_o34c93e:
	load4! &18	# 79	[c=2]movsi_push_pop
	store8! &13 	#X12
	load4! &11 	#X11	# 80	[c=4]movsi_push_pop
	store8! &4 	#X3
	push! 0		# 81	[c=4]movdi_push_pop
	store8! &6 	#X5
	jump! .L101.l_o34c93e		# 6264	[c=4]jump
.L332.l_o34c93e:
	load4! &8 	#X8	# 2792	[c=4]pushsi1_not_fp/1
	load8! &13 	#X12	# 2793	[c=4]pushdi1_not_fp/1
	load8! &4 	#X2	# 2794	[c=4]pushdi1_not_fp/1
	call! __lshift		# 2795	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	load8! &0 	#AR	# 2796	[c=4]movdi_push_pop
	store8! &13 	#X12
	# CBRANCH EQ0	# 5899	[c=14]cbranchsi4_internal
	load4! &19
	jump_zero! .L123.l_o34c93e
	# END CBRANCH
	jump! .L333.l_o34c93e		# 6267	[c=4]jump
.L331.l_o34c93e:
	load4! &11 	#X11	# 2783	[c=4]pushsi1_not_fp/1
	load8! &5 	#X4	# 2784	[c=4]pushdi1_not_fp/1
	load8! &4 	#X2	# 2785	[c=4]pushdi1_not_fp/1
	call! __lshift		# 2786	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	load8! &0 	#AR	# 2787	[c=4]movdi_push_pop
	store8! &5 	#X4
	# CBRANCH	# 5902	[c=12]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &9 	#X8
	add! -2147483648	
	lt_u	
	jump_zero! .L122.l_o34c93e
	# END CBRANCH
	jump! .L332.l_o34c93e		# 6270	[c=4]jump
.L333.l_o34c93e:
	load8! &12 	#X12	# 2801	[c=4]pushdi1_not_fp/1
	load8! &5 	#X4	# 2802	[c=4]pushdi1_not_fp/1
	call! __mcmp		# 2803	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH	# 2805	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	add! -2147483648	
	push! 0	
	add! -2147483648	
	lt_u	
	jump_zero! .L123.l_o34c93e
	# END CBRANCH
	load8! &10 	#X10	# 2807	[c=5]movdi_to_tr_unspec/1
	add! -1		# 2809	[c=4]*adddi/0
	store8! &8 	#X7	# 5478	[c=4]movsi_from_tr_unspec/0
	push! 0		# 2816	[c=4]pushsi1_not_fp/0
	push! 10		# 2817	[c=4]pushsi1_not_fp/0
	load8! &6 	#X4	# 2818	[c=4]pushdi1_not_fp/1
	load8! &5 	#X2	# 2819	[c=4]pushdi1_not_fp/1
	call! __multadd		# 2820	[c=0]*call_value_pop_1/0
	store8! &4

	set_sp! &3
	load8! &0 	#AR	# 2821	[c=4]movdi_push_pop
	store8! &5 	#X4
	# CBRANCH EQ0	# 2822	[c=14]cbranchsi4_internal
	load4! &17
	jump_not_zero! .L342.l_o34c93e
	# END CBRANCH
	load4! &21	# 113	[c=2]movsi_push_pop
	store8! &10 	#X9
	# CBRANCH	# 3651	[c=14]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &22
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L130.l_o34c93e
	# END CBRANCH
	# CBRANCH	# 3709	[c=14]cbranchsi4_internal
	push! 2	
	add! -2147483648	
	load4! &31
	add! -2147483648	
	lt_u	
	jump_zero! .L160.l_o34c93e
	# END CBRANCH
	load4! &21	# 92	[c=2]movsi_push_pop
	store8! &10 	#X9
	load4! &7 	#X7	# 93	[c=4]movsi_push_pop
	store8! &11 	#X10
.L170.l_o34c93e:
	# CBRANCH EQ0	# 2840	[c=12]cbranchsi4_internal
	load4! &9 	#X9
	jump_not_zero! .L70.l_o34c93e
	# END CBRANCH
	push! 0		# 2842	[c=4]pushsi1_not_fp/0
	push! 5		# 2843	[c=4]pushsi1_not_fp/0
	load8! &14 	#X12	# 2844	[c=4]pushdi1_not_fp/1
	load8! &5 	#X2	# 2845	[c=4]pushdi1_not_fp/1
	call! __multadd		# 2846	[c=0]*call_value_pop_1/0
	store8! &4

	set_sp! &3
	load8! &0 	#AR	# 2847	[c=4]movdi_push_pop
	store8! &13 	#X12
	load8! &0 	#AR	# 2848	[c=4]pushdi1_not_fp/1
	load8! &5 	#X4	# 2849	[c=4]pushdi1_not_fp/1
	call! __mcmp		# 2850	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH	# 2852	[c=12]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L69.l_o34c93e
	# END CBRANCH
.L70.l_o34c93e:
	load4! &31	# 4833	[c=5]movsi_to_tr_unspec/1
	not		# 2857	[c=2]*one_cmpldi2
	store8! &7 	#X6	# 5476	[c=4]movsi_from_tr_unspec/0
	load8! &14 	#X14	# 142	[c=4]movdi_push_pop
	store8! &4 	#X3
.L350.l_o34c93e:
	load8! &12 	#X12	# 5905	[c=4]pushdi1_not_fp/1
	load8! &3 	#X2	# 5906	[c=4]pushdi1_not_fp/1
	call! _Bfree		# 5907	[c=5]*call_pop_0/0
	set_sp! (+ &0 16)
	

	load8! &6 	#X6	# 5908	[c=5]movdi_to_tr_unspec/1
	add! 1		# 5910	[c=4]*adddi/0
	store8! &11 	#X10	# 5912	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ0	# 5913	[c=12]cbranchdi4_internal
	load8! &5 	#X5
	jump_not_zero! .L157.l_o34c93e
	# END CBRANCH
	jump! .L74.l_o34c93e		# 6274	[c=4]jump
.L130.l_o34c93e:
	load8! &14 	#X14	# 114	[c=4]movdi_push_pop
	store8! &7 	#X6
	push! 1		# 115	[c=4]movsi_push_pop
	store8! &8 	#X7
.L150.l_o34c93e:
	load8! &12 	#X12	# 3286	[c=4]pushdi1_not_fp/1
	load8! &5 	#X4	# 3287	[c=4]pushdi1_not_fp/1
	call! quorem.s_o34c93e		# 3288	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load8! &0 	#AR	# 3290	[c=5]movdi_to_tr_unspec/1
	add! 48		# 3292	[c=4]*adddi/0
	store8! &12 	#X11	# 5445	[c=4]movsi_from_tr_unspec/0
	load8! &6 	#X6	# 3299	[c=5]movdi_to_tr_unspec/1
	add! 1		# 3301	[c=4]*adddi/0
	store8! &4 	#X3	# 3302	[c=4]movdi_from_tr_unspec/0
	load1! &11 	#X11	# 4781	[c=5]movqi_to_tr_unspec/1
	load8! &7 	#X6	# 3310	[c=4]movqi_from_tr_unspec/1
	store1	
	#	
	# CBRANCH	# 3312	[c=12]cbranchsi4_internal
	load4! &7 	#X7
	add! -2147483648	
	load4! &10 	#X9
	add! -2147483648	
	lt_u	
	jump_zero! .L199.l_o34c93e
	# END CBRANCH
	push! 0		# 3314	[c=4]pushsi1_not_fp/0
	push! 10		# 3315	[c=4]pushsi1_not_fp/0
	load8! &6 	#X4	# 3316	[c=4]pushdi1_not_fp/1
	load8! &5 	#X2	# 3317	[c=4]pushdi1_not_fp/1
	call! __multadd		# 3318	[c=0]*call_value_pop_1/0
	store8! &4

	set_sp! &3
	load8! &0 	#AR	# 3319	[c=4]movdi_push_pop
	store8! &5 	#X4
	load8! &7 	#X7	# 3320	[c=5]movdi_to_tr_unspec/1
	add! 1		# 3322	[c=4]*adddi/0
	store8! &8 	#X7	# 5443	[c=4]movsi_from_tr_unspec/0
	load8! &3 	#X3	# 3329	[c=4]movdi_push_pop
	store8! &7 	#X6
	jump! .L150.l_o34c93e		# 6276	[c=4]jump
.L340.l_o34c93e:
	push! 0		# 3256	[c=4]pushsi1_not_fp/0
	push! 10		# 3257	[c=4]pushsi1_not_fp/0
	load8! &7 	#X5	# 3258	[c=4]pushdi1_not_fp/1
	load8! &5 	#X2	# 3259	[c=4]pushdi1_not_fp/1
	call! __multadd		# 3260	[c=0]*call_value_pop_1/0
	store8! &4

	set_sp! &3
	load8! &0 	#AR	# 3261	[c=4]movdi_push_pop
	store8! &6 	#X5
	load8! &0 	#AR	# 112	[c=4]movdi_push_pop
	store8! &9 	#X8
	load8! &7 	#X7	# 5916	[c=4]movdi_push_pop
	store8! &10 	#X9
	jump! .L343.l_o34c93e		# 6279	[c=4]jump
.L196.l_o34c93e:
	push! 28		# 91	[c=4]movsi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 4838	[c=5]movdi_to_tr_unspec/1
	load8! &12 	#X11	# 4840	[c=6]*adddi/2
	add
	store8! &12 	#X11	# 5480	[c=4]movsi_from_tr_unspec/0
	load8! &0 	#AR	# 4843	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 4845	[c=6]*adddi/2
	add
	store8! &4 	#X3	# 5482	[c=4]movsi_from_tr_unspec/0
	load8! &0 	#AR	# 4848	[c=5]movdi_to_tr_unspec/1
	load8! &9 	#X8	# 4850	[c=6]*adddi/2
	add
	store8! &9 	#X8	# 5484	[c=4]movsi_from_tr_unspec/0
.L359.l_o34c93e:
	# CBRANCH	# 5919	[c=12]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &12 	#X11
	add! -2147483648	
	lt_u	
	jump_zero! .L121.l_o34c93e
	# END CBRANCH
	jump! .L331.l_o34c93e		# 6282	[c=4]jump
.L289.l_o34c93e:
	# CBRANCH	# 3701	[c=12]cbranchsi4_internal
	load4! &8 	#X8
	add! -2147483648	
	push! 0	
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L344.l_o34c93e
	# END CBRANCH
	push! 0		# 21	[c=4]movsi_push_pop
	store4! &20
	push! 0		# 22	[c=4]movsi_push_pop
	store8! &12 	#X11
	load8! &7 	#X7	# 5922	[c=5]movdi_to_tr_unspec/1
	load8! &9 	#X8	# 5924	[c=6]*adddi/2
	add
	store8! &9 	#X8	# 5926	[c=4]movsi_from_tr_unspec/0
	load4! &7 	#X7	# 5927	[c=4]movsi_push_pop
	store8! &11 	#X10
	push! 0		# 5928	[c=4]movsi_push_pop
	store4! &19
	jump! .L345.l_o34c93e		# 6286	[c=4]jump
.L177.l_o34c93e:
	push! 1		# 153	[c=4]movsi_push_pop
	store8! &14 	#X13
	jump! .L45.l_o34c93e		# 6288	[c=4]jump
.L33.l_o34c93e:
	push! 32		# 534	[c=3]movdi_to_tr_unspec/0
	load8! &1 	#AR	# 536	[c=14]*subdi3/2
	sub
	and! 0xffffffff		# 5785	[c=4]*anddi3/0
	pow2		# 5289	[c=4]*pow_tr
	load8! &2 	#X1	# 5290	[c=6]*muldi3/2
	mult
	store8! &1 	#AR	# 551	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 5931	[c=4]pushsi1_not_fp/1
	call! __floatunsidf		# 5932	[c=0]*call_value_pop_1/0
	store8! &1

	load8! &0 	#AR	# 5933	[c=4]movdi_push_pop
	store8! &2 	#X1
	load8! &0 	#AR	# 5934	[c=5]movdi_to_tr_unspec/1
	shift_ru! 32	# 5936	[c=40]*lshrdi3/0
	add! -32505856		# 5938	[c=4]*adddi/0
	and! 0xffffffff		# 5939	[c=4]*anddi3/0
	shift_l! 32	# 5941	[c=8]*ashldi3/0
	store8! &1 	#AR	# 5942	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 5943	[c=5]movdi_to_tr_unspec/1
	and! 0xffffffff		# 5945	[c=4]*anddi3/0
	load8! &1 	#AR	# 5946	[c=6]*iordi3/2
	or
	store8! &2 	#X1	# 5947	[c=4]movdi_from_tr_unspec/0
	load8! &7 	#X7	# 5948	[c=5]movdi_to_tr_unspec/1
	add! -1		# 5950	[c=4]*adddi/0
	store8! &9 	#X8	# 5952	[c=4]movsi_from_tr_unspec/0
	push! 1		# 5953	[c=4]movsi_push_pop
	store4! &21
	jump! .L32.l_o34c93e		# 6290	[c=4]jump
.L329.l_o34c93e:
	load4! &7 	#X7	# 2509	[c=4]pushsi1_not_fp/1
	load8! &1 	#AR	# 2510	[c=4]pushdi1_not_fp/1
	load8! &4 	#X2	# 2511	[c=4]pushdi1_not_fp/1
	call! __pow5mult		# 2512	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	load8! &0 	#AR	# 2513	[c=4]movdi_push_pop
	store8! &13 	#X12
	# CBRANCH	# 2514	[c=14]cbranchsi4_internal
	push! 1	
	add! -2147483648	
	load4! &31
	add! -2147483648	
	lt_u	
	jump_zero! .L114.l_o34c93e
	# END CBRANCH
	push! 0		# 87	[c=4]movsi_push_pop
	store8! &14 	#X13
.L115.l_o34c93e:
	load8! &12 	#X12	# 2573	[c=6]movsi_to_tr_unspec/2
	add! 20	
	load4	
	#	
	add! -1		# 2579	[c=4]*adddi/0
	sigx4		# 5509	[c=6]*extendsidi2
	add! 6		# 4888	[c=4]*adddi/0
	shift_l! 2	# 4889	[c=8]*ashldi3/0
	load8! &13 	#X12	# 4892	[c=6]*adddi/2
	add
	load4		# 4894	[c=4]*peep2_mov_from_mem_tr_to_tr_ind_pushsi_unspec
	and! 0x0ffffffff	# 4896	[c=1]*zero_extendsidi2
	#peep - pop(deadreg)+pusharg	# 4897	[c=0]*peep2_pop_pusharg
	call! __hi0bits		# 2611	[c=0]*call_value_pop_1/0
	store8! &1

	push! 32		# 2617	[c=3]movdi_to_tr_unspec/0
	load8! &1 	#AR	# 2619	[c=14]*subdi3/2
	sub
	store8! &1 	#AR	# 2620	[c=4]movdi_from_tr_unspec/0
	jump! .L117.l_o34c93e		# 6292	[c=4]jump
.L334.l_o34c93e:
	# CBRANCH	# 2838	[c=14]cbranchsi4_internal
	push! 2	
	add! -2147483648	
	load4! &31
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L170.l_o34c93e
	# END CBRANCH
	load8! &10 	#X10	# 3635	[c=5]movdi_to_tr_unspec/1
	add! 1		# 3637	[c=4]*adddi/0
	store8! &11 	#X10	# 5421	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ0	# 3644	[c=14]cbranchsi4_internal
	load4! &17
	jump_not_zero! .L126.l_o34c93e
	# END CBRANCH
.L160.l_o34c93e:
	load8! &14 	#X14	# 3605	[c=5]movdi_to_tr_unspec/1
	add! 1		# 3607	[c=4]*adddi/0
	store8! &4 	#X3	# 3608	[c=4]movdi_from_tr_unspec/0
	load8! &12 	#X12	# 3610	[c=4]pushdi1_not_fp/1
	load8! &5 	#X4	# 3611	[c=4]pushdi1_not_fp/1
	call! quorem.s_o34c93e		# 3612	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load8! &0 	#AR	# 3614	[c=5]movdi_to_tr_unspec/1
	add! 48		# 3616	[c=4]*adddi/0
	store8! &12 	#X11	# 5423	[c=4]movsi_from_tr_unspec/0
	load1! &11 	#X11	# 4746	[c=5]movqi_to_tr_unspec/1
	load8! &15 	#X14	# 3629	[c=4]movqi_from_tr_unspec/1
	store1	
	#	
	push! 0		# 116	[c=4]movdi_push_pop
	store8! &7 	#X6
.L146.l_o34c93e:
	push! 1		# 3335	[c=4]pushsi1_not_fp/0
	load8! &5 	#X4	# 3336	[c=4]pushdi1_not_fp/1
	load8! &4 	#X2	# 3337	[c=4]pushdi1_not_fp/1
	call! __lshift		# 3338	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	load8! &0 	#AR	# 3339	[c=4]movdi_push_pop
	store8! &5 	#X4
	load8! &12 	#X12	# 3340	[c=4]pushdi1_not_fp/1
	load8! &1 	#AR	# 3341	[c=4]pushdi1_not_fp/1
	call! __mcmp		# 3342	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH	# 3344	[c=12]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	jump_zero! .L346.l_o34c93e
	# END CBRANCH
	load8! &3 	#X3	# 3405	[c=5]movdi_to_tr_unspec/1
	add! -1		# 3407	[c=4]*adddi/0
	load1		# 4770	[c=4]*peep2_mov_from_mem_tr_to_tr_ind_pushqi_unspec
	store8! &2 	#X1	# 3412	[c=4]movqi_from_tr_unspec/0
.L145.l_o34c93e:
.L154.l_o34c93e:
	load8! &3 	#X3	# 3418	[c=5]movdi_to_tr_unspec/1
	add! -1		# 3420	[c=4]*adddi/0
	store8! &1 	#AR	# 3421	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 3424	[c=12]cbranchqi4_internal
	load1! &1 	#X1
	push! 57	
	xor	
	push! 1	
	lt_u	
	jump_zero! .L347.l_o34c93e
	# END CBRANCH
	# CBRANCH EQ	# 3372	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	load8! &15 	#X14
	xor	
	jump_zero! .L153.l_o34c93e
	# END CBRANCH
	load8! &3 	#X3	# 3374	[c=5]movdi_to_tr_unspec/1
	add! -2		# 3376	[c=4]*adddi/0
	load1		# 4773	[c=4]*peep2_mov_from_mem_tr_to_tr_ind_pushqi_unspec
	store8! &2 	#X1	# 3381	[c=4]movqi_from_tr_unspec/0
	load8! &0 	#AR	# 124	[c=4]movdi_push_pop
	store8! &4 	#X3
	jump! .L154.l_o34c93e		# 6296	[c=4]jump
.L199.l_o34c93e:
	push! 0		# 119	[c=4]movdi_push_pop
	store8! &7 	#X6
	jump! .L146.l_o34c93e		# 6298	[c=4]jump
.L330.l_o34c93e:
	load8! &6 	#X6	# 2523	[c=5]movdi_to_tr_unspec/1
	and! 0xfffffffffffff		# 2525	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L348.l_o34c93e	# 4904	[c=12]*peep2_cbranchdi
	# END CBRANCH
	push! 0		# 84	[c=4]movsi_push_pop
	store8! &14 	#X13
	push! 1		# 5956	[c=4]movsi_push_pop
	store8! &1 	#AR
	# CBRANCH EQ0	# 5957	[c=12]cbranchsi4_internal
	load4! &7 	#X7
	jump_zero! .L117.l_o34c93e
	# END CBRANCH
	jump! .L115.l_o34c93e		# 6302	[c=4]jump
.L178.l_o34c93e:
	push! 1		# 149	[c=4]movsi_push_pop
	store8! &13 	#X12
	push! 1		# 150	[c=4]movsi_push_pop
	store8! &10 	#X9
	push! 1		# 151	[c=4]movsi_push_pop
	store4! &32
	push! 0		# 5960	[c=3]movsi_to_tr_unspec/0
	load8! &3 	#X2	# 5962	[c=4]movsi_from_tr_unspec/1
	add! 104	
	store4	
	#	
	load4! &9 	#X9	# 5963	[c=4]movsi_push_pop
	store4! &22
	push! 0		# 5964	[c=4]movsi_push_pop
	store8! &2 	#X1
	jump! .L349.l_o34c93e		# 6305	[c=4]jump
.L326.l_o34c93e:
	load4! &8 	#X8	# 2408	[c=4]movsi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 5967	[c=5]movdi_to_tr_unspec/1
	load8! &12 	#X11	# 5969	[c=14]*subdi3/2
	sub
	neg		# 5970	[c=4]*neg_tr
	store8! &12 	#X11	# 5972	[c=4]movsi_from_tr_unspec/0
	load8! &0 	#AR	# 5973	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 5975	[c=14]*subdi3/2
	sub
	neg		# 5976	[c=4]*neg_tr
	store8! &4 	#X3	# 5978	[c=4]movsi_from_tr_unspec/0
	load8! &8 	#X8	# 5979	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 5981	[c=14]*subdi3/2
	sub
	store8! &9 	#X8	# 5983	[c=4]movsi_from_tr_unspec/0
	jump! .L108.l_o34c93e		# 6307	[c=4]jump
.L335.l_o34c93e:
	load4! &3 	#X3	# 2904	[c=4]pushsi1_not_fp/1
	load8! &6 	#X5	# 2905	[c=4]pushdi1_not_fp/1
	load8! &4 	#X2	# 2906	[c=4]pushdi1_not_fp/1
	call! __lshift		# 2907	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	load8! &0 	#AR	# 2908	[c=4]movdi_push_pop
	store8! &6 	#X5
	jump! .L131.l_o34c93e		# 6309	[c=4]jump
.L327.l_o34c93e:
	load4! &12 	#X12	# 2457	[c=4]pushsi1_not_fp/1
	load8! &6 	#X5	# 2458	[c=4]pushdi1_not_fp/1
	load8! &4 	#X2	# 2459	[c=4]pushdi1_not_fp/1
	call! __pow5mult		# 2460	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	load8! &0 	#AR	# 2461	[c=4]movdi_push_pop
	store8! &6 	#X5
	load8! &4 	#X4	# 2462	[c=4]pushdi1_not_fp/1
	load8! &1 	#AR	# 2463	[c=4]pushdi1_not_fp/1
	load8! &4 	#X2	# 2464	[c=4]pushdi1_not_fp/1
	call! __multiply		# 2465	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	load8! &0 	#AR	# 2466	[c=4]movdi_push_pop
	store8! &14 	#X13
	load8! &4 	#X4	# 2467	[c=4]pushdi1_not_fp/1
	load8! &3 	#X2	# 2468	[c=4]pushdi1_not_fp/1
	call! _Bfree		# 2469	[c=5]*call_pop_0/0
	set_sp! (+ &0 16)
	

	load8! &13 	#X13	# 82	[c=4]movdi_push_pop
	store8! &5 	#X4
	load8! &12 	#X12	# 5986	[c=4]movdi_push_pop
	store8! &1 	#AR
	load4! &18	# 5987	[c=5]movsi_to_tr_unspec/1
	load8! &13 	#X12	# 5989	[c=14]*subdi3/2
	sub
	store8! &1 	#AR	# 5990	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 5991	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_zero! .L110.l_o34c93e
	# END CBRANCH
	jump! .L328.l_o34c93e		# 6312	[c=4]jump
.L105.l_o34c93e:
	load4! &18	# 4942	[c=5]movsi_to_tr_unspec/1
	load8! &1 	#AR	# 4945	[c=14]*subdi3/2
	sub
	neg		# 4946	[c=4]*neg_tr
	load8! &8 	#X7	# 4952	[c=6]*adddi/2
	add
	store8! &8 	#X7	# 5545	[c=4]movsi_from_tr_unspec/0
	load4! &0 	#AR	# 69	[c=4]movsi_push_pop
	store4! &19
	push! 0		# 70	[c=4]movsi_push_pop
	store8! &13 	#X12
	jump! .L106.l_o34c93e		# 6314	[c=4]jump
.L328.l_o34c93e:
	load4! &0 	#AR	# 2487	[c=4]pushsi1_not_fp/1
	load8! &5 	#X4	# 2488	[c=4]pushdi1_not_fp/1
	load8! &4 	#X2	# 2489	[c=4]pushdi1_not_fp/1
	call! __pow5mult		# 2490	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	load8! &0 	#AR	# 2491	[c=4]movdi_push_pop
	store8! &5 	#X4
	jump! .L110.l_o34c93e		# 6316	[c=4]jump
.L53.l_o34c93e:
	load8! &6 	#X6	# 5170	[c=4]movdf_push_pop
	store8! &16 	#X15
	push! 2		# 46	[c=4]movsi_push_pop
	store8! &4 	#X3
	push! __mprec_bigtens		# 5994	[c=4]movdi_push_pop
	store8! &7 	#X6
	load8! &13 	#X13	# 5995	[c=4]movdf_push_pop
	store8! &1 	#AR
	# CBRANCH EQ0	# 5996	[c=12]cbranchsi4_internal
	load4! &12 	#X12
	jump_not_zero! .L56.l_o34c93e
	# END CBRANCH
	jump! .L57.l_o34c93e		# 6319	[c=4]jump
.L348.l_o34c93e:
	load8! &6 	#X6	# 2530	[c=5]movdi_to_tr_unspec/1
	shift_ru! 32	# 2532	[c=40]*lshrdi3/0
	and! 0x7ff00000		# 2541	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 5520	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L172.l_o34c93e
	# END CBRANCH
	push! 0		# 86	[c=4]movsi_push_pop
	store8! &14 	#X13
	push! 1		# 5999	[c=4]movsi_push_pop
	store8! &1 	#AR
	# CBRANCH EQ0	# 6000	[c=12]cbranchsi4_internal
	load4! &7 	#X7
	jump_zero! .L117.l_o34c93e
	# END CBRANCH
	jump! .L115.l_o34c93e		# 6322	[c=4]jump
.L314.l_o34c93e:
	# CBRANCH EQ0	# 1249	[c=12]cbranchsi4_internal
	load4! &9 	#X9
	jump_zero! .L66.l_o34c93e
	# END CBRANCH
	# CBRANCH	# 1251	[c=14]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &22
	add! -2147483648	
	lt_u	
	jump_zero! .L67.l_o34c93e
	# END CBRANCH
	load8! &10 	#X10	# 1253	[c=5]movdi_to_tr_unspec/1
	add! -1		# 1255	[c=4]*adddi/0
	store4! &25	# 5618	[c=4]movsi_from_tr_unspec/0
	push! 0x4024000000000000		# 1262	[c=4]pushdf1_not_fp/0
	load8! &16 	#X15	# 1263	[c=4]pushdf1_not_fp/1
	call! __muldf3		# 1264	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load8! &0 	#AR	# 1265	[c=4]movdf_push_pop
	store8! &16 	#X15
	load8! &3 	#X3	# 1267	[c=5]movdi_to_tr_unspec/1
	add! 1		# 1269	[c=4]*adddi/0
	store8! &1 	#AR	# 1270	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 5124	[c=4]pushsi1_not_fp/1
	call! __floatsidf		# 1277	[c=0]*call_value_pop_1/0
	store8! &1

	load8! &0 	#AR	# 1279	[c=4]pushdf1_not_fp/1
	load8! &16 	#X15	# 1280	[c=4]pushdf1_not_fp/1
	call! __muldf3		# 1281	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	push! 0x401c000000000000		# 1284	[c=4]pushdf1_not_fp/0
	load8! &1 	#AR	# 1285	[c=4]pushdf1_not_fp/1
	call! __adddf3		# 1286	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load8! &0 	#AR	# 5619	[c=4]movdi_push_pop
	store8! &7 	#X6
	load8! &0 	#AR	# 1297	[c=5]movdi_to_tr_unspec/1
	shift_ru! 32	# 1299	[c=40]*lshrdi3/0
	add! -54525952		# 1308	[c=4]*adddi/0
	and! 0xffffffff		# 5781	[c=4]*anddi3/0
	shift_l! 32	# 5134	[c=8]*ashldi3/0
	store8! &1 	#AR	# 5135	[c=4]movdi_from_tr_unspec/0
	load8! &6 	#X6	# 5136	[c=5]movdi_to_tr_unspec/1
	and! 0xffffffff		# 5138	[c=4]*anddi3/0
	load8! &1 	#AR	# 5139	[c=6]*iordi3/2
	or
	store8! &7 	#X6	# 5140	[c=4]movdi_from_tr_unspec/0
	load4! &21	# 54	[c=2]movsi_push_pop
	store4! &23
	jump! .L68.l_o34c93e		# 6324	[c=4]jump
.L338.l_o34c93e:
	load4! &16	# 4561	[c=2]movsi_push_pop
	store8! &11 	#X10
	load8! &17	# 4562	[c=2]movdi_push_pop
	store8! &15 	#X14
	load8! &9 	#X9	# 3069	[c=5]movdi_to_tr_unspec/1
	add! 1		# 3071	[c=4]*adddi/0
	store8! &8 	#X7	# 3072	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ	# 3074	[c=12]cbranchsi4_internal
	load4! &11 	#X11
	push! 57	
	xor	
	jump_zero! .L136.l_o34c93e
	# END CBRANCH
	# CBRANCH	# 3076	[c=12]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &14 	#X13
	add! -2147483648	
	lt_u	
	jump_zero! .L137.l_o34c93e
	# END CBRANCH
	load8! &15 	#X15	# 3078	[c=5]movdi_to_tr_unspec/1
	add! 49		# 3080	[c=4]*adddi/0
	store8! &12 	#X11	# 5460	[c=4]movsi_from_tr_unspec/0
.L137.l_o34c93e:
	load1! &11 	#X11	# 4804	[c=5]movqi_to_tr_unspec/1
	load8! &10 	#X9	# 3095	[c=4]movqi_from_tr_unspec/1
	store1	
	#	
	load8! &7 	#X7	# 125	[c=4]movdi_push_pop
	store8! &4 	#X3
	load8! &5 	#X5	# 126	[c=4]movdi_push_pop
	store8! &7 	#X6
	load8! &8 	#X8	# 127	[c=4]movdi_push_pop
	store8! &6 	#X5
.L138.l_o34c93e:
	load8! &12 	#X12	# 3468	[c=4]pushdi1_not_fp/1
	load8! &3 	#X2	# 3469	[c=4]pushdi1_not_fp/1
	call! _Bfree		# 3470	[c=5]*call_pop_0/0
	set_sp! (+ &0 16)
	

	# CBRANCH EQ0	# 3471	[c=12]cbranchdi4_internal
	load8! &5 	#X5
	jump_zero! .L74.l_o34c93e
	# END CBRANCH
	# CBRANCH EQ0	# 3473	[c=12]cbranchdi4_internal
	load8! &6 	#X6
	jump_zero! .L157.l_o34c93e
	# END CBRANCH
	# CBRANCH EQ	# 3475	[c=12]cbranchdi4_internal
	load8! &6 	#X6
	load8! &6 	#X5
	xor	
	jump_zero! .L157.l_o34c93e
	# END CBRANCH
	load8! &6 	#X6	# 3477	[c=4]pushdi1_not_fp/1
	load8! &3 	#X2	# 3478	[c=4]pushdi1_not_fp/1
	call! _Bfree		# 3479	[c=5]*call_pop_0/0
	set_sp! (+ &0 16)
	

	load8! &5 	#X5	# 6003	[c=4]pushdi1_not_fp/1
	load8! &3 	#X2	# 6004	[c=4]pushdi1_not_fp/1
	call! _Bfree		# 6005	[c=5]*call_pop_0/0
	set_sp! (+ &0 16)
	

	jump! .L74.l_o34c93e		# 6326	[c=4]jump
.L347.l_o34c93e:
	load8! &1 	#X1	# 3427	[c=5]movdi_to_tr_unspec/1
	add! 1		# 3429	[c=4]*adddi/0
	load8! &1 	#AR	# 5764	[c=4]movqi_from_tr_unspec/1
	store1	
	#	
	jump! .L138.l_o34c93e		# 6328	[c=4]jump
.L203.l_o34c93e:
	push! 0		# 30	[c=4]movsi_push_pop
	store4! &18
	jump! .L164.l_o34c93e		# 6330	[c=4]jump
.L346.l_o34c93e:
	load8! &3 	#X3	# 3347	[c=5]movdi_to_tr_unspec/1
	add! -1		# 3349	[c=4]*adddi/0
	load1		# 4776	[c=4]*peep2_mov_from_mem_tr_to_tr_ind_pushqi_unspec
	store8! &2 	#X1	# 3354	[c=4]movqi_from_tr_unspec/0
	# CBRANCH EQ0	# 3356	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L156.l_o34c93e
	# END CBRANCH
	load8! &11 	#X11	# 3358	[c=5]movdi_to_tr_unspec/1
	and! 0x1		# 3360	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 5441	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L154.l_o34c93e
	# END CBRANCH
.L156.l_o34c93e:
	load8! &3 	#X3	# 3446	[c=5]movdi_to_tr_unspec/1
	add! -1		# 3448	[c=4]*adddi/0
	store8! &1 	#AR	# 3449	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 3451	[c=12]cbranchqi4_internal
	load1! &1 	#X1
	push! 48	
	xor	
	push! 1	
	lt_u	
	jump_zero! .L138.l_o34c93e
	# END CBRANCH
	load8! &3 	#X3	# 3453	[c=5]movdi_to_tr_unspec/1
	add! -2		# 3455	[c=4]*adddi/0
	load1		# 4767	[c=4]*peep2_mov_from_mem_tr_to_tr_ind_pushqi_unspec
	store8! &2 	#X1	# 3460	[c=4]movqi_from_tr_unspec/0
	load8! &0 	#AR	# 3462	[c=4]movdi_push_pop
	store8! &4 	#X3
	jump! .L156.l_o34c93e		# 6332	[c=4]jump
.L153.l_o34c93e:
	push! 49		# 3387	[c=3]movqi_to_tr_unspec/0
	load8! &15 	#X14	# 3389	[c=4]movqi_from_tr_unspec/1
	store1	
	#	
	load8! &10 	#X10	# 3391	[c=5]movdi_to_tr_unspec/1
	add! 1		# 3393	[c=4]*adddi/0
	store8! &11 	#X10	# 5438	[c=4]movsi_from_tr_unspec/0
	jump! .L138.l_o34c93e		# 6334	[c=4]jump
.L325.l_o34c93e:
	# CBRANCH EQ0	# 2208	[c=14]cbranchsi4_internal
	load4! &20
	jump_zero! .L103.l_o34c93e
	# END CBRANCH
	load8! &0 	#AR	# 2210	[c=5]movdi_to_tr_unspec/1
	add! 1075		# 2212	[c=4]*adddi/0
	store8! &2 	#X1	# 5559	[c=4]movsi_from_tr_unspec/0
	load8! &1 	#X1	# 4979	[c=5]movdi_to_tr_unspec/1
	load8! &12 	#X11	# 4981	[c=6]*adddi/2
	add
	store8! &1 	#AR	# 5560	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 5561	[c=5]movdi_to_tr_unspec/1
	load8! &9 	#X8	# 4986	[c=6]*adddi/2
	add
	store8! &9 	#X8	# 5564	[c=4]movsi_from_tr_unspec/0
	load4! &18	# 74	[c=2]movsi_push_pop
	store8! &13 	#X12
	load4! &11 	#X11	# 75	[c=4]movsi_push_pop
	store8! &4 	#X3
	load4! &0 	#AR	# 76	[c=4]movsi_push_pop
	store8! &12 	#X11
	push! 1		# 6008	[c=4]pushsi1_not_fp/0
	load8! &3 	#X2	# 6009	[c=4]pushdi1_not_fp/1
	call! __i2b		# 6010	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load8! &0 	#AR	# 6011	[c=4]movdi_push_pop
	store8! &6 	#X5
	jump! .L101.l_o34c93e		# 6336	[c=4]jump
.L66.l_o34c93e:
	load4! &3 	#X3	# 3541	[c=4]pushsi1_not_fp/1
	call! __floatsidf		# 3542	[c=0]*call_value_pop_1/0
	store8! &1

	load8! &15 	#X15	# 3544	[c=4]pushdf1_not_fp/1
	load8! &1 	#AR	# 3545	[c=4]pushdf1_not_fp/1
	call! __muldf3		# 3546	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	push! 0x401c000000000000		# 3549	[c=4]pushdf1_not_fp/0
	load8! &1 	#AR	# 3550	[c=4]pushdf1_not_fp/1
	call! __adddf3		# 3551	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load8! &0 	#AR	# 5424	[c=4]movdi_push_pop
	store8! &7 	#X6
	load8! &0 	#AR	# 3562	[c=5]movdi_to_tr_unspec/1
	shift_ru! 32	# 3564	[c=40]*lshrdi3/0
	add! -54525952		# 3573	[c=4]*adddi/0
	and! 0xffffffff		# 5760	[c=4]*anddi3/0
	shift_l! 32	# 4757	[c=8]*ashldi3/0
	store8! &1 	#AR	# 4758	[c=4]movdi_from_tr_unspec/0
	load8! &6 	#X6	# 4759	[c=5]movdi_to_tr_unspec/1
	and! 0xffffffff		# 4761	[c=4]*anddi3/0
	load8! &1 	#AR	# 4762	[c=6]*iordi3/2
	or
	store8! &7 	#X6	# 4763	[c=4]movdi_from_tr_unspec/0
.L159.l_o34c93e:
	push! 0x4014000000000000		# 1402	[c=4]pushdf1_not_fp/0
	load8! &16 	#X15	# 1403	[c=4]pushdf1_not_fp/1
	call! __subdf3		# 1404	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load8! &0 	#AR	# 1405	[c=4]movdf_push_pop
	store8! &4 	#X3
	load8! &6 	#X6	# 5105	[c=4]pushdf1_not_fp/1
	load8! &1 	#AR	# 1412	[c=4]pushdf1_not_fp/1
	call! __gtdf2		# 1413	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH	# 1415	[c=12]cbranchdi4_internal
	push! 0	
	add! -9223372036854775808	
	load8! &1 	#AR
	add! -9223372036854775808	
	lt_u	
	not	
	jump_zero! .L182.l_o34c93e
	# END CBRANCH
	load8! &6 	#X6	# 1417	[c=5]movdi_to_tr_unspec/1
	add! -9223372036854775808		# 1419	[c=4]*adddi/0
	store8! &1 	#AR	# 1420	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 1422	[c=4]pushdf1_not_fp/1
	load8! &4 	#X3	# 1423	[c=4]pushdf1_not_fp/1
	call! __ltdf2		# 1424	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH	# 1426	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	add! -9223372036854775808	
	push! 0	
	add! -9223372036854775808	
	lt_u	
	jump_zero! .L67.l_o34c93e
	# END CBRANCH
	push! 0		# 100	[c=4]movdi_push_pop
	store8! &13 	#X12
	push! 0		# 101	[c=4]movdi_push_pop
	store8! &6 	#X5
	load4! &31	# 6014	[c=5]movsi_to_tr_unspec/1
	not		# 6016	[c=2]*one_cmpldi2
	store8! &7 	#X6	# 6018	[c=4]movsi_from_tr_unspec/0
	load8! &14 	#X14	# 6019	[c=4]movdi_push_pop
	store8! &4 	#X3
	jump! .L350.l_o34c93e		# 6339	[c=4]jump
.L111.l_o34c93e:
	load4! &18	# 2496	[c=2]pushsi1_not_fp/1
	load8! &5 	#X4	# 2497	[c=4]pushdi1_not_fp/1
	load8! &4 	#X2	# 2498	[c=4]pushdi1_not_fp/1
	call! __pow5mult		# 2499	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	load8! &0 	#AR	# 2500	[c=4]movdi_push_pop
	store8! &5 	#X4
	jump! .L110.l_o34c93e		# 6341	[c=4]jump
.L52.l_o34c93e:
	# CBRANCH EQ0	# 1101	[c=12]cbranchsi4_internal
	load4! &10 	#X10
	jump_not_zero! .L60.l_o34c93e
	# END CBRANCH
	load8! &6 	#X6	# 5169	[c=4]movdf_push_pop
	store8! &16 	#X15
	push! 2		# 52	[c=4]movsi_push_pop
	store8! &4 	#X3
	jump! .L59.l_o34c93e		# 6343	[c=4]jump
.L344.l_o34c93e:
	push! 0		# 18	[c=4]movsi_push_pop
	store4! &20
	load8! &3 	#X3	# 6022	[c=5]movdi_to_tr_unspec/1
	sub! 1		# 6024	[c=12]*subdi3/0
	neg		# 6025	[c=4]*neg_tr
	store8! &12 	#X11	# 6027	[c=4]movsi_from_tr_unspec/0
	push! 0		# 6028	[c=4]movsi_push_pop
	store8! &9 	#X8
	jump! .L351.l_o34c93e		# 6346	[c=4]jump
.L114.l_o34c93e:
	load8! &6 	#X6	# 3722	[c=5]movdi_to_tr_unspec/1
	and! 0xfffffffffffff		# 3724	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L171.l_o34c93e	# 4742	[c=12]*peep2_cbranchdi
	# END CBRANCH
	push! 0		# 88	[c=4]movsi_push_pop
	store8! &14 	#X13
	load8! &12 	#X12	# 6031	[c=6]movsi_to_tr_unspec/2
	add! 20	
	load4	
	#	
	add! -1		# 6033	[c=4]*adddi/0
	sigx4		# 6034	[c=6]*extendsidi2
	add! 6		# 6035	[c=4]*adddi/0
	shift_l! 2	# 6036	[c=8]*ashldi3/0
	load8! &13 	#X12	# 6038	[c=6]*adddi/2
	add
	load4		# 6039	[c=4]*peep2_mov_from_mem_tr_to_tr_ind_pushsi_unspec
	and! 0x0ffffffff	# 6041	[c=1]*zero_extendsidi2
	#peep - pop(deadreg)+pusharg	# 6042	[c=0]*peep2_pop_pusharg
	call! __hi0bits		# 6043	[c=0]*call_value_pop_1/0
	store8! &1

	push! 32		# 6045	[c=3]movdi_to_tr_unspec/0
	load8! &1 	#AR	# 6047	[c=14]*subdi3/2
	sub
	store8! &1 	#AR	# 6048	[c=4]movdi_from_tr_unspec/0
	jump! .L117.l_o34c93e		# 6348	[c=4]jump
.L139.l_o34c93e:
	load4! &14 	#X14	# 4564	[c=4]movsi_push_pop
	store8! &1 	#AR
	load4! &16	# 4573	[c=2]movsi_push_pop
	store8! &11 	#X10
	load8! &17	# 4574	[c=2]movdi_push_pop
	store8! &15 	#X14
	# CBRANCH	# 3151	[c=12]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	jump_zero! .L141.l_o34c93e
	# END CBRANCH
	push! 1		# 3153	[c=4]pushsi1_not_fp/0
	load8! &5 	#X4	# 3154	[c=4]pushdi1_not_fp/1
	load8! &4 	#X2	# 3155	[c=4]pushdi1_not_fp/1
	call! __lshift		# 3156	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	load8! &0 	#AR	# 3157	[c=4]movdi_push_pop
	store8! &5 	#X4
	load8! &12 	#X12	# 3158	[c=4]pushdi1_not_fp/1
	load8! &1 	#AR	# 3159	[c=4]pushdi1_not_fp/1
	call! __mcmp		# 3160	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH	# 3162	[c=12]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	jump_zero! .L352.l_o34c93e
	# END CBRANCH
.L142.l_o34c93e:
	# CBRANCH EQ	# 3178	[c=12]cbranchsi4_internal
	load4! &11 	#X11
	push! 57	
	xor	
	jump_zero! .L136.l_o34c93e
	# END CBRANCH
	load8! &15 	#X15	# 3180	[c=5]movdi_to_tr_unspec/1
	add! 49		# 3182	[c=4]*adddi/0
	store8! &12 	#X11	# 5450	[c=4]movsi_from_tr_unspec/0
.L141.l_o34c93e:
	load1! &11 	#X11	# 4791	[c=5]movqi_to_tr_unspec/1
	load8! &10 	#X9	# 3197	[c=4]movqi_from_tr_unspec/1
	store1	
	#	
	load8! &7 	#X7	# 128	[c=4]movdi_push_pop
	store8! &4 	#X3
	load8! &5 	#X5	# 129	[c=4]movdi_push_pop
	store8! &7 	#X6
	load8! &8 	#X8	# 130	[c=4]movdi_push_pop
	store8! &6 	#X5
	jump! .L138.l_o34c93e		# 6351	[c=4]jump
.L352.l_o34c93e:
	# CBRANCH EQ0	# 3164	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L141.l_o34c93e
	# END CBRANCH
	load8! &11 	#X11	# 3166	[c=5]movdi_to_tr_unspec/1
	and! 0x1		# 3168	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 5453	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L142.l_o34c93e
	# END CBRANCH
	load1! &11 	#X11	# 6052	[c=5]movqi_to_tr_unspec/1
	load8! &10 	#X9	# 6054	[c=4]movqi_from_tr_unspec/1
	store1	
	#	
	load8! &7 	#X7	# 6055	[c=4]movdi_push_pop
	store8! &4 	#X3
	load8! &5 	#X5	# 6056	[c=4]movdi_push_pop
	store8! &7 	#X6
	load8! &8 	#X8	# 6057	[c=4]movdi_push_pop
	store8! &6 	#X5
	jump! .L138.l_o34c93e		# 6353	[c=4]jump
.L187.l_o34c93e:
	load8! &7 	#X7	# 63	[c=4]movdi_push_pop
	store8! &10 	#X9
.L91.l_o34c93e:
	load8! &5 	#X5	# 2009	[c=4]pushdf1_not_fp/1
	load8! &6 	#X5	# 2010	[c=4]pushdf1_not_fp/1
	call! __adddf3		# 2011	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load8! &0 	#AR	# 2012	[c=4]movdf_push_pop
	store8! &4 	#X3
	load8! &8 	#X8	# 2014	[c=4]pushdf1_not_fp/1
	load8! &1 	#AR	# 2015	[c=4]pushdf1_not_fp/1
	call! __gtdf2		# 2016	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH	# 2018	[c=12]cbranchdi4_internal
	push! 0	
	add! -9223372036854775808	
	load8! &1 	#AR
	add! -9223372036854775808	
	lt_u	
	jump_zero! .L294.l_o34c93e
	# END CBRANCH
	load8! &9 	#X9	# 2024	[c=5]movdi_to_tr_unspec/1
	add! -1		# 2026	[c=4]*adddi/0
	load1		# 5002	[c=4]*peep2_mov_from_mem_tr_to_tr_ind_pushqi_unspec
	store8! &16 	#X15	# 2031	[c=4]movqi_from_tr_unspec/0
	load8! &9 	#X9	# 65	[c=4]movdi_push_pop
	store8! &4 	#X3
.L97.l_o34c93e:
	load8! &3 	#X3	# 2111	[c=5]movdi_to_tr_unspec/1
	add! -1		# 2113	[c=4]*adddi/0
	store8! &1 	#AR	# 2114	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 2117	[c=12]cbranchqi4_internal
	load1! &15 	#X15
	push! 57	
	xor	
	push! 1	
	lt_u	
	jump_zero! .L353.l_o34c93e
	# END CBRANCH
	# CBRANCH EQ	# 2070	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	load8! &15 	#X14
	xor	
	jump_zero! .L96.l_o34c93e
	# END CBRANCH
	load8! &3 	#X3	# 2072	[c=5]movdi_to_tr_unspec/1
	add! -2		# 2074	[c=4]*adddi/0
	load1		# 4997	[c=4]*peep2_mov_from_mem_tr_to_tr_ind_pushqi_unspec
	store8! &16 	#X15	# 2079	[c=4]movqi_from_tr_unspec/0
	load8! &0 	#AR	# 67	[c=4]movdi_push_pop
	store8! &4 	#X3
	jump! .L97.l_o34c93e		# 6356	[c=4]jump
.L319.l_o34c93e:
	push! .LC0.l_o34c93e		# 140	[c=4]movdi_push_pop
	store8! &15 	#X14
	load8! &14 	#X14	# 6061	[c=4]movdi_push_pop
	store8! &29
	jump! .L309.l_o34c93e		# 6358	[c=4]jump
.L323.l_o34c93e:
	push! .LC1.l_o34c93e		# 141	[c=4]movdi_push_pop
	store8! &15 	#X14
	load8! &14 	#X14	# 6064	[c=4]movdi_push_pop
	store8! &29
	jump! .L309.l_o34c93e		# 6360	[c=4]jump
.L336.l_o34c93e:
	load8! &5 	#X5	# 2913	[c=6]movsi_to_tr_unspec/2
	add! 8	
	load4	
	#	
	and! 0x0ffffffff	# 4829	[c=1]*zero_extendsidi2
	#peep - pop(deadreg)+pusharg	# 4830	[c=0]*peep2_pop_pusharg
	load8! &3 	#X2	# 2918	[c=4]pushdi1_not_fp/1
	call! _Balloc		# 2919	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load8! &0 	#AR	# 2920	[c=4]movdi_push_pop
	store8! &4 	#X3
	# CBRANCH EQ0	# 2921	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L354.l_o34c93e
	# END CBRANCH
	load8! &5 	#X5	# 2930	[c=6]movsi_to_tr_unspec/2
	add! 20	
	load4	
	#	
	sigx4		# 2936	[c=6]*extendsidi2
	add! 2		# 2941	[c=4]*adddi/0
	shift_l! 2	# 2946	[c=8]*ashldi3/0
	store8! &8 	#X7	# 2947	[c=4]movdi_from_tr_unspec/0
	load8! &5 	#X5	# 2949	[c=5]movdi_to_tr_unspec/1
	add! 16		# 2951	[c=4]*adddi/0
	store8! &2 	#X1	# 2952	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 2954	[c=5]movdi_to_tr_unspec/1
	add! 16		# 2956	[c=4]*adddi/0
	store8! &1 	#AR	# 2957	[c=4]movdi_from_tr_unspec/0
	load8! &7 	#X7	# 2959	[c=4]pushdi1_not_fp/1
	load8! &2 	#X1	# 2960	[c=4]pushdi1_not_fp/1
	load8! &2 	#AR	# 2961	[c=4]pushdi1_not_fp/1
	call! memcpy		# 2962	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	push! 1		# 2963	[c=4]pushsi1_not_fp/0
	load8! &4 	#X3	# 2964	[c=4]pushdi1_not_fp/1
	load8! &4 	#X2	# 2965	[c=4]pushdi1_not_fp/1
	call! __lshift		# 2966	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	load8! &0 	#AR	# 2967	[c=4]movdi_push_pop
	store8! &9 	#X8
.L355.l_o34c93e:
	load8! &9 	#X9	# 6067	[c=5]movdi_to_tr_unspec/1
	add! -1		# 6069	[c=4]*adddi/0
	and! 0xffffffff		# 6070	[c=4]*anddi3/0
	add! 1		# 6072	[c=4]*adddi/0
	load8! &15 	#X14	# 6074	[c=6]*adddi/2
	add
	store8! &4 	#X3	# 6075	[c=4]movdi_from_tr_unspec/0
	load8! &14 	#X14	# 6076	[c=4]movdi_push_pop
	store8! &10 	#X9
	load4! &10 	#X10	# 6077	[c=4]movsi_push_pop
	store4! &17
	load8! &14 	#X14	# 6078	[c=4]movdi_push_pop
	store8! &18
	load4! &30	# 6079	[c=2]movsi_push_pop
	store8! &11 	#X10
	jump! .L149.l_o34c93e		# 6363	[c=4]jump
.L354.l_o34c93e:
	push! .LC3.l_o34c93e		# 2923	[c=4]pushdi1_not_fp/0
	push! 0		# 2924	[c=4]pushdi1_not_fp/0
	push! 746		# 2925	[c=4]pushsi1_not_fp/0
	push! .LC4.l_o34c93e		# 2926	[c=4]pushdi1_not_fp/0
	call! __assert_func		# 2927	[c=5]*call_pop_0/0
	set_sp! (+ &0 32)
	

	load8! &5 	#X5	# 6082	[c=6]movsi_to_tr_unspec/2
	add! 20	
	load4	
	#	
	sigx4		# 6084	[c=6]*extendsidi2
	add! 2		# 6086	[c=4]*adddi/0
	shift_l! 2	# 6088	[c=8]*ashldi3/0
	store8! &8 	#X7	# 6089	[c=4]movdi_from_tr_unspec/0
	load8! &5 	#X5	# 6090	[c=5]movdi_to_tr_unspec/1
	add! 16		# 6092	[c=4]*adddi/0
	store8! &2 	#X1	# 6093	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 6094	[c=5]movdi_to_tr_unspec/1
	add! 16		# 6096	[c=4]*adddi/0
	store8! &1 	#AR	# 6097	[c=4]movdi_from_tr_unspec/0
	load8! &7 	#X7	# 6098	[c=4]pushdi1_not_fp/1
	load8! &2 	#X1	# 6099	[c=4]pushdi1_not_fp/1
	load8! &2 	#AR	# 6100	[c=4]pushdi1_not_fp/1
	call! memcpy		# 6101	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	push! 1		# 6102	[c=4]pushsi1_not_fp/0
	load8! &4 	#X3	# 6103	[c=4]pushdi1_not_fp/1
	load8! &4 	#X2	# 6104	[c=4]pushdi1_not_fp/1
	call! __lshift		# 6105	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	load8! &0 	#AR	# 6106	[c=4]movdi_push_pop
	store8! &9 	#X8
	jump! .L355.l_o34c93e		# 6366	[c=4]jump
.L107.l_o34c93e:
	load8! &9 	#X9	# 4926	[c=5]movdi_to_tr_unspec/1
	load8! &12 	#X11	# 4928	[c=14]*subdi3/2
	sub
	neg		# 4929	[c=4]*neg_tr
	store8! &4 	#X3	# 5533	[c=4]movsi_from_tr_unspec/0
	push! 1		# 6109	[c=4]pushsi1_not_fp/0
	load8! &3 	#X2	# 6110	[c=4]pushdi1_not_fp/1
	call! __i2b		# 6111	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load8! &0 	#AR	# 6112	[c=4]movdi_push_pop
	store8! &6 	#X5
	jump! .L101.l_o34c93e		# 6368	[c=4]jump
.L339.l_o34c93e:
	load4! &16	# 4583	[c=2]movsi_push_pop
	store8! &11 	#X10
	load8! &17	# 4584	[c=2]movdi_push_pop
	store8! &15 	#X14
	# CBRANCH EQ	# 3205	[c=12]cbranchsi4_internal
	load4! &11 	#X11
	push! 57	
	xor	
	jump_zero! .L136.l_o34c93e
	# END CBRANCH
	load1! &11 	#X11	# 4787	[c=5]movqi_to_tr_unspec/1
	add! 1		# 3222	[c=4]*adddi/0
	load8! &10 	#X9	# 5767	[c=4]movqi_from_tr_unspec/1
	store1	
	#	
	load8! &7 	#X7	# 131	[c=4]movdi_push_pop
	store8! &4 	#X3
	load8! &5 	#X5	# 132	[c=4]movdi_push_pop
	store8! &7 	#X6
	load8! &8 	#X8	# 133	[c=4]movdi_push_pop
	store8! &6 	#X5
	jump! .L138.l_o34c93e		# 6370	[c=4]jump
.L198.l_o34c93e:
	load4! &16	# 4610	[c=2]movsi_push_pop
	store8! &11 	#X10
	load8! &17	# 4611	[c=2]movdi_push_pop
	store8! &15 	#X14
	load8! &5 	#X5	# 117	[c=4]movdi_push_pop
	store8! &7 	#X6
	load8! &8 	#X8	# 118	[c=4]movdi_push_pop
	store8! &6 	#X5
	jump! .L146.l_o34c93e		# 6372	[c=4]jump
.L103.l_o34c93e:
	load4! &25	# 4960	[c=5]movsi_to_tr_unspec/1
	sub! 54		# 4963	[c=12]*subdi3/0
	neg		# 4964	[c=4]*neg_tr
	store8! &2 	#X1	# 5552	[c=4]movsi_from_tr_unspec/0
	load8! &1 	#X1	# 4968	[c=5]movdi_to_tr_unspec/1
	load8! &12 	#X11	# 4970	[c=6]*adddi/2
	add
	store8! &1 	#AR	# 5553	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 5554	[c=5]movdi_to_tr_unspec/1
	load8! &9 	#X8	# 4975	[c=6]*adddi/2
	add
	store8! &9 	#X8	# 5557	[c=4]movsi_from_tr_unspec/0
	load4! &18	# 71	[c=2]movsi_push_pop
	store8! &13 	#X12
	load4! &11 	#X11	# 72	[c=4]movsi_push_pop
	store8! &4 	#X3
	load4! &0 	#AR	# 73	[c=4]movsi_push_pop
	store8! &12 	#X11
	push! 1		# 6115	[c=4]pushsi1_not_fp/0
	load8! &3 	#X2	# 6116	[c=4]pushdi1_not_fp/1
	call! __i2b		# 6117	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load8! &0 	#AR	# 6118	[c=4]movdi_push_pop
	store8! &6 	#X5
	jump! .L101.l_o34c93e		# 6374	[c=4]jump
.L71.l_o34c93e:
	load8! &13 	#X13	# 1673	[c=4]pushdf1_not_fp/1
	load8! &24	# 1674	[c=2]pushdf1_not_fp/1
	call! __muldf3		# 1675	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load8! &0 	#AR	# 1676	[c=4]movdf_push_pop
	store8! &24
	load1! &3 	#X3	# 1678	[c=5]movqi_to_tr_unspec/1
	load8! &15 	#X14	# 1680	[c=4]movqi_from_tr_unspec/1
	store1	
	#	
	# CBRANCH EQ	# 1682	[c=14]cbranchsi4_internal
	load4! &22
	push! 1	
	xor	
	jump_zero! .L356.l_o34c93e
	# END CBRANCH
	load8! &12 	#X12	# 1760	[c=4]movdi_push_pop
	store8! &4 	#X3
	load4! &22	# 5040	[c=5]movsi_to_tr_unspec/1
	add! -2		# 1764	[c=4]*adddi/0
	and! 0xffffffff		# 5775	[c=4]*anddi3/0
	store8! &23	# 5045	[c=4]movdi_from_tr_unspec/0
	load8! &14 	#X14	# 5046	[c=5]movdi_to_tr_unspec/1
	add! 2		# 5048	[c=4]*adddi/0
	load8! &23	# 5049	[c=6]*adddi/1
	add
	store8! &14 	#X13	# 5050	[c=4]movdi_from_tr_unspec/0
	load8! &6 	#X6	# 4466	[c=4]movdf_push_pop
	store8! &1 	#AR
.L87.l_o34c93e:
	push! 0x4024000000000000		# 1788	[c=4]pushdf1_not_fp/0
	load8! &1 	#AR	# 1789	[c=4]pushdf1_not_fp/1
	call! __muldf3		# 1790	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load8! &0 	#AR	# 1791	[c=4]movdf_push_pop
	store8! &7 	#X6
	load8! &0 	#AR	# 1793	[c=4]pushdf1_not_fp/1
	call! __fixdfsi		# 1794	[c=0]*call_value_pop_1/0
	store8! &1

	load4! &0 	#AR	# 1795	[c=4]movsi_push_pop
	store8! &16 	#X15
	load4! &0 	#AR	# 1797	[c=4]pushsi1_not_fp/1
	call! __floatsidf		# 1798	[c=0]*call_value_pop_1/0
	store8! &1

	load8! &0 	#AR	# 1800	[c=4]pushdf1_not_fp/1
	load8! &7 	#X6	# 1801	[c=4]pushdf1_not_fp/1
	call! __subdf3		# 1802	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load1! &15 	#X15	# 5037	[c=5]movqi_to_tr_unspec/1
	add! 48		# 1811	[c=4]*adddi/0
	load8! &4 	#X3	# 5774	[c=4]movqi_from_tr_unspec/1
	store1	
	#	
	load8! &3 	#X3	# 1829	[c=5]movdi_to_tr_unspec/1
	add! 1		# 1831	[c=4]*adddi/0
	store8! &4 	#X3	# 1832	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 1836	[c=12]cbranchdi4_internal
	load8! &13 	#X13
	load8! &4 	#X3
	xor	
	push! 1	
	lt_u	
	jump_zero! .L87.l_o34c93e
	# END CBRANCH
	load8! &0 	#AR	# 4479	[c=4]movdf_push_pop
	store8! &7 	#X6
	load8! &22	# 1838	[c=5]movdi_to_tr_unspec/1
	add! 1		# 1840	[c=4]*adddi/0
	load8! &13 	#X12	# 5034	[c=6]*adddi/2
	add
	store8! &4 	#X3	# 5035	[c=4]movdi_from_tr_unspec/0
.L88.l_o34c93e:
	push! 0x3fe0000000000000		# 1684	[c=4]pushdf1_not_fp/0
	load8! &24	# 1685	[c=2]pushdf1_not_fp/1
	call! __adddf3		# 1686	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load8! &0 	#AR	# 1689	[c=4]pushdf1_not_fp/1
	load8! &7 	#X6	# 1690	[c=4]pushdf1_not_fp/1
	call! __gtdf2		# 1691	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH	# 1693	[c=12]cbranchdi4_internal
	push! 0	
	add! -9223372036854775808	
	load8! &1 	#AR
	add! -9223372036854775808	
	lt_u	
	not	
	jump_zero! .L357.l_o34c93e
	# END CBRANCH
	load8! &23	# 1721	[c=2]pushdf1_not_fp/1
	push! 0x3fe0000000000000		# 1722	[c=4]pushdf1_not_fp/0
	call! __subdf3		# 1723	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load8! &0 	#AR	# 1726	[c=4]pushdf1_not_fp/1
	load8! &7 	#X6	# 1727	[c=4]pushdf1_not_fp/1
	call! __ltdf2		# 1728	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH	# 1730	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	add! -9223372036854775808	
	push! 0	
	add! -9223372036854775808	
	lt_u	
	jump_zero! .L67.l_o34c93e
	# END CBRANCH
.L86.l_o34c93e:
	load8! &3 	#X3	# 1735	[c=5]movdi_to_tr_unspec/1
	add! -1		# 1737	[c=4]*adddi/0
	store8! &1 	#AR	# 1738	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 1740	[c=7]movqi_to_tr_unspec/2
	load1	
	#	
	# CBRANCH - peep (modesize=1)
	and! 255		# 5054	[c=12]*peep2_cbranchqi
	push! 48	
	xor	
	push! 1	
	lt_u	
	jump_zero! .L358.l_o34c93e
	# END CBRANCH
	load8! &0 	#AR	# 58	[c=4]movdi_push_pop
	store8! &4 	#X3
	jump! .L86.l_o34c93e		# 6379	[c=4]jump
.L172.l_o34c93e:
	load8! &11 	#X11	# 2550	[c=5]movdi_to_tr_unspec/1
	add! 1		# 2552	[c=4]*adddi/0
	store8! &12 	#X11	# 5511	[c=4]movsi_from_tr_unspec/0
	load8! &8 	#X8	# 2559	[c=5]movdi_to_tr_unspec/1
	add! 1		# 2561	[c=4]*adddi/0
	store8! &9 	#X8	# 5513	[c=4]movsi_from_tr_unspec/0
	push! 1		# 83	[c=4]movsi_push_pop
	store8! &14 	#X13
	push! 1		# 6121	[c=4]movsi_push_pop
	store8! &1 	#AR
	# CBRANCH EQ0	# 6122	[c=12]cbranchsi4_internal
	load4! &7 	#X7
	jump_zero! .L117.l_o34c93e
	# END CBRANCH
	jump! .L115.l_o34c93e		# 6382	[c=4]jump
.L60.l_o34c93e:
	load8! &10 	#X10	# 1111	[c=5]movdi_to_tr_unspec/1
	neg		# 1113	[c=3]*negdi2
	store8! &4 	#X3	# 5635	[c=4]movsi_from_tr_unspec/0
	load8! &3 	#X3	# 1120	[c=5]movdi_to_tr_unspec/1
	and! 0xf		# 1122	[c=4]*anddi3/0
	sigx4		# 5639	[c=6]*extendsidi2
	shift_l! 3	# 5156	[c=8]*ashldi3/0
	add! __mprec_tens		# 5159	[c=4]*adddi/0
	load8		# 5161	[c=4]*peep2_mov_from_mem_tr_to_tr_ind_pushdf_unspec
	store8! &1 	#AR	# 1147	[c=4]movdf_from_tr_unspec/0
	load8! &5 	#X5	# 1149	[c=4]pushdf1_not_fp/1
	load8! &1 	#AR	# 1150	[c=4]pushdf1_not_fp/1
	call! __muldf3		# 1151	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load8! &0 	#AR	# 1152	[c=4]movdf_push_pop
	store8! &16 	#X15
	load4! &3 	#X3	# 5163	[c=5]movsi_to_tr_unspec/1
	sigx4		# 5165	[c=6]*extendsidi2
	shift_rs! 4	# 5166	[c=40]*ashrdi3/0
	store8! &13 	#X12	# 5641	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ0	# 1168	[c=12]cbranchsi4_internal
	load4! &12 	#X12
	jump_zero! .L180.l_o34c93e
	# END CBRANCH
	push! __mprec_bigtens		# 1170	[c=4]movdi_push_pop
	store8! &7 	#X6
	push! 0		# 48	[c=4]movqi_push_pop
	store8! &14 	#X13
	push! 2		# 49	[c=4]movsi_push_pop
	store8! &4 	#X3
.L62.l_o34c93e:
	load8! &12 	#X12	# 1172	[c=5]movdi_to_tr_unspec/1
	and! 0x1		# 1174	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 5633	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L61.l_o34c93e
	# END CBRANCH
	load8! &3 	#X3	# 1183	[c=5]movdi_to_tr_unspec/1
	add! 1		# 1185	[c=4]*adddi/0
	store8! &4 	#X3	# 5630	[c=4]movsi_from_tr_unspec/0
	load8! &6 	#X6	# 1193	[c=7]movdf_to_tr_unspec/2
	load8	
	#	
	#peep - pop(deadreg)+pusharg	# 5149	[c=0]*peep2_pop_pusharg
	load8! &1 	#AR	# 1198	[c=4]pushdf1_not_fp/1
	call! __muldf3		# 1199	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	push! 1		# 50	[c=4]movqi_push_pop
	store8! &14 	#X13
.L61.l_o34c93e:
	load4! &12 	#X12	# 5141	[c=5]movsi_to_tr_unspec/1
	sigx4		# 5143	[c=6]*extendsidi2
	shift_rs! 1	# 5144	[c=40]*ashrdi3/0
	store8! &13 	#X12	# 5628	[c=4]movsi_from_tr_unspec/0
	load8! &6 	#X6	# 1223	[c=5]movdi_to_tr_unspec/1
	add! 8		# 1225	[c=4]*adddi/0
	store8! &7 	#X6	# 1226	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 1230	[c=12]cbranchsi4_internal
	load4! &12 	#X12
	jump_not_zero! .L62.l_o34c93e
	# END CBRANCH
	# CBRANCH EQ0	# 1232	[c=12]cbranchqi4_internal
	load1! &13 	#X13
	jump_zero! .L59.l_o34c93e
	# END CBRANCH
	load8! &0 	#AR	# 51	[c=4]movdf_push_pop
	store8! &16 	#X15
	jump! .L59.l_o34c93e		# 6384	[c=4]jump
.L171.l_o34c93e:
	load8! &6 	#X6	# 3741	[c=5]movdi_to_tr_unspec/1
	shift_ru! 32	# 3743	[c=40]*lshrdi3/0
	and! 0x7ff00000		# 3752	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 5419	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L172.l_o34c93e
	# END CBRANCH
	push! 0		# 89	[c=4]movsi_push_pop
	store8! &14 	#X13
	load8! &12 	#X12	# 6125	[c=6]movsi_to_tr_unspec/2
	add! 20	
	load4	
	#	
	add! -1		# 6127	[c=4]*adddi/0
	sigx4		# 6128	[c=6]*extendsidi2
	add! 6		# 6129	[c=4]*adddi/0
	shift_l! 2	# 6130	[c=8]*ashldi3/0
	load8! &13 	#X12	# 6132	[c=6]*adddi/2
	add
	load4		# 6133	[c=4]*peep2_mov_from_mem_tr_to_tr_ind_pushsi_unspec
	and! 0x0ffffffff	# 6135	[c=1]*zero_extendsidi2
	#peep - pop(deadreg)+pusharg	# 6136	[c=0]*peep2_pop_pusharg
	call! __hi0bits		# 6137	[c=0]*call_value_pop_1/0
	store8! &1

	push! 32		# 6139	[c=3]movdi_to_tr_unspec/0
	load8! &1 	#AR	# 6141	[c=14]*subdi3/2
	sub
	store8! &1 	#AR	# 6142	[c=4]movdi_from_tr_unspec/0
	jump! .L117.l_o34c93e		# 6386	[c=4]jump
.L353.l_o34c93e:
	load8! &15 	#X15	# 2120	[c=5]movdi_to_tr_unspec/1
	add! 1		# 2122	[c=4]*adddi/0
	store8! &2 	#X1	# 2123	[c=4]movdi_from_tr_unspec/0
	load1! &1 	#X1	# 2132	[c=5]movqi_to_tr_unspec/1
	load8! &1 	#AR	# 2134	[c=4]movqi_from_tr_unspec/1
	store1	
	#	
	jump! .L74.l_o34c93e		# 6388	[c=4]jump
.L96.l_o34c93e:
	load8! &10 	#X10	# 2085	[c=5]movdi_to_tr_unspec/1
	add! 1		# 2087	[c=4]*adddi/0
	store8! &11 	#X10	# 5571	[c=4]movsi_from_tr_unspec/0
	push! 49		# 68	[c=4]movqi_push_pop
	store8! &2 	#X1
	load1! &1 	#X1	# 6146	[c=5]movqi_to_tr_unspec/1
	load8! &1 	#AR	# 6148	[c=4]movqi_from_tr_unspec/1
	store1	
	#	
	jump! .L74.l_o34c93e		# 6390	[c=4]jump
.L294.l_o34c93e:
	load8! &8 	#X8	# 2037	[c=4]pushdf1_not_fp/1
	load8! &4 	#X3	# 2038	[c=4]pushdf1_not_fp/1
	call! __eqdf2		# 2039	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH EQ0	# 2041	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_not_zero! .L295.l_o34c93e
	# END CBRANCH
	load8! &6 	#X6	# 2046	[c=5]movdi_to_tr_unspec/1
	and! 0x1		# 2048	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 5574	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L190.l_o34c93e
	# END CBRANCH
	load8! &9 	#X9	# 2058	[c=5]movdi_to_tr_unspec/1
	add! -1		# 2060	[c=4]*adddi/0
	load1		# 4999	[c=4]*peep2_mov_from_mem_tr_to_tr_ind_pushqi_unspec
	store8! &16 	#X15	# 2065	[c=4]movqi_from_tr_unspec/0
	load8! &9 	#X9	# 66	[c=4]movdi_push_pop
	store8! &4 	#X3
	jump! .L97.l_o34c93e		# 6392	[c=4]jump
.L136.l_o34c93e:
	push! 57		# 3208	[c=3]movqi_to_tr_unspec/0
	load8! &10 	#X9	# 3210	[c=4]movqi_from_tr_unspec/1
	store1	
	#	
	load8! &7 	#X7	# 120	[c=4]movdi_push_pop
	store8! &4 	#X3
	load8! &5 	#X5	# 121	[c=4]movdi_push_pop
	store8! &7 	#X6
	load8! &8 	#X8	# 122	[c=4]movdi_push_pop
	store8! &6 	#X5
	push! 57		# 123	[c=4]movqi_push_pop
	store8! &2 	#X1
	jump! .L154.l_o34c93e		# 6394	[c=4]jump
.L182.l_o34c93e:
	push! 0		# 102	[c=4]movdi_push_pop
	store8! &13 	#X12
	push! 0		# 103	[c=4]movdi_push_pop
	store8! &6 	#X5
	load8! &14 	#X14	# 6151	[c=5]movdi_to_tr_unspec/1
	add! 1		# 6153	[c=4]*adddi/0
	store8! &4 	#X3	# 6154	[c=4]movdi_from_tr_unspec/0
	push! 49		# 6155	[c=3]movqi_to_tr_unspec/0
	load8! &15 	#X14	# 6157	[c=4]movqi_from_tr_unspec/1
	store1	
	#	
	load8! &10 	#X10	# 6158	[c=5]movdi_to_tr_unspec/1
	add! 1		# 6160	[c=4]*adddi/0
	store8! &7 	#X6	# 6162	[c=4]movsi_from_tr_unspec/0
	jump! .L129.l_o34c93e		# 6396	[c=4]jump
.L186.l_o34c93e:
	push! 0		# 98	[c=4]movdi_push_pop
	store8! &13 	#X12
	push! 0		# 99	[c=4]movdi_push_pop
	store8! &6 	#X5
	load4! &31	# 6165	[c=5]movsi_to_tr_unspec/1
	not		# 6167	[c=2]*one_cmpldi2
	store8! &7 	#X6	# 6169	[c=4]movsi_from_tr_unspec/0
	load8! &14 	#X14	# 6170	[c=4]movdi_push_pop
	store8! &4 	#X3
	jump! .L350.l_o34c93e		# 6398	[c=4]jump
.L185.l_o34c93e:
	push! 0		# 96	[c=4]movdi_push_pop
	store8! &13 	#X12
	push! 0		# 97	[c=4]movdi_push_pop
	store8! &6 	#X5
	load4! &31	# 6173	[c=5]movsi_to_tr_unspec/1
	not		# 6175	[c=2]*one_cmpldi2
	store8! &7 	#X6	# 6177	[c=4]movsi_from_tr_unspec/0
	load8! &14 	#X14	# 6178	[c=4]movdi_push_pop
	store8! &4 	#X3
	jump! .L350.l_o34c93e		# 6400	[c=4]jump
.L295.l_o34c93e:
	load8! &9 	#X9	# 136	[c=4]movdi_push_pop
	store8! &4 	#X3
	jump! .L74.l_o34c93e		# 6402	[c=4]jump
.L357.l_o34c93e:
	load8! &3 	#X3	# 1699	[c=5]movdi_to_tr_unspec/1
	add! -1		# 1701	[c=4]*adddi/0
	load1		# 5055	[c=4]*peep2_mov_from_mem_tr_to_tr_ind_pushqi_unspec
	store8! &16 	#X15	# 1706	[c=4]movqi_from_tr_unspec/0
	load4! &24	# 5057	[c=5]movsi_to_tr_unspec/1
	add! 1		# 1710	[c=4]*adddi/0
	store8! &11 	#X10	# 5592	[c=4]movsi_from_tr_unspec/0
	jump! .L97.l_o34c93e		# 6404	[c=4]jump
.L316.l_o34c93e:
	load4! &24	# 5060	[c=5]movsi_to_tr_unspec/1
	add! 1		# 1662	[c=4]*adddi/0
	store8! &11 	#X10	# 5594	[c=4]movsi_from_tr_unspec/0
	jump! .L74.l_o34c93e		# 6406	[c=4]jump
.L317.l_o34c93e:
	load4! &24	# 5067	[c=5]movsi_to_tr_unspec/1
	add! 1		# 1590	[c=4]*adddi/0
	store8! &11 	#X10	# 5598	[c=4]movsi_from_tr_unspec/0
	jump! .L97.l_o34c93e		# 6408	[c=4]jump
.L342.l_o34c93e:
	push! 0		# 2824	[c=4]pushsi1_not_fp/0
	push! 10		# 2825	[c=4]pushsi1_not_fp/0
	load8! &7 	#X5	# 2826	[c=4]pushdi1_not_fp/1
	load8! &5 	#X2	# 2827	[c=4]pushdi1_not_fp/1
	call! __multadd		# 2828	[c=0]*call_value_pop_1/0
	store8! &4

	set_sp! &3
	load8! &0 	#AR	# 2829	[c=4]movdi_push_pop
	store8! &6 	#X5
	load4! &21	# 106	[c=2]movsi_push_pop
	store8! &10 	#X9
	# CBRANCH	# 2830	[c=14]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &22
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L126.l_o34c93e
	# END CBRANCH
	load4! &21	# 107	[c=2]movsi_push_pop
	store8! &10 	#X9
	# CBRANCH	# 3715	[c=14]cbranchsi4_internal
	push! 2	
	add! -2147483648	
	load4! &31
	add! -2147483648	
	lt_u	
	jump_zero! .L126.l_o34c93e
	# END CBRANCH
	load4! &21	# 94	[c=2]movsi_push_pop
	store8! &10 	#X9
	load4! &7 	#X7	# 95	[c=4]movsi_push_pop
	store8! &11 	#X10
	jump! .L170.l_o34c93e		# 6410	[c=4]jump
.L358.l_o34c93e:
	load4! &24	# 5051	[c=5]movsi_to_tr_unspec/1
	add! 1		# 1749	[c=4]*adddi/0
	store8! &11 	#X10	# 5590	[c=4]movsi_from_tr_unspec/0
	jump! .L74.l_o34c93e		# 6412	[c=4]jump
.L190.l_o34c93e:
	load8! &9 	#X9	# 135	[c=4]movdi_push_pop
	store8! &4 	#X3
	jump! .L74.l_o34c93e		# 6414	[c=4]jump
.L188.l_o34c93e:
	load8! &7 	#X7	# 137	[c=4]movdi_push_pop
	store8! &4 	#X3
	jump! .L74.l_o34c93e		# 6416	[c=4]jump
.L356.l_o34c93e:
	load8! &12 	#X12	# 57	[c=4]movdi_push_pop
	store8! &4 	#X3
	jump! .L88.l_o34c93e		# 6418	[c=4]jump
.L180.l_o34c93e:
	push! 2		# 53	[c=4]movsi_push_pop
	store8! &4 	#X3
	jump! .L59.l_o34c93e		# 6420	[c=4]jump
.L75.l_o34c93e:
	load4! &24	# 4993	[c=5]movsi_to_tr_unspec/1
	add! 1		# 2100	[c=4]*adddi/0
	store8! &11 	#X10	# 5569	[c=4]movsi_from_tr_unspec/0
	load8! &12 	#X12	# 64	[c=4]movdi_push_pop
	store8! &4 	#X3
.L79.l_o34c93e:
	jump! .L97.l_o34c93e		# 6422	[c=4]jump
.L315.l_o34c93e:
	load4! &24	# 5083	[c=5]movsi_to_tr_unspec/1
	add! 1		# 1522	[c=4]*adddi/0
	store8! &11 	#X10	# 5603	[c=4]movsi_from_tr_unspec/0
	load8! &12 	#X12	# 134	[c=4]movdi_push_pop
	store8! &4 	#X3
	jump! .L74.l_o34c93e		# 6424	[c=4]jump
.L179.l_o34c93e:
	push! 0		# 38	[c=4]movsi_push_pop
	store8! &2 	#X1
	load4! &1 	#X1	# 6181	[c=4]pushsi1_not_fp/1
	load8! &3 	#X2	# 6182	[c=4]pushdi1_not_fp/1
	call! _Balloc		# 6183	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load8! &0 	#AR	# 6184	[c=4]movdi_push_pop
	store8! &15 	#X14
	# CBRANCH EQ0	# 6185	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_not_zero! .L50.l_o34c93e
	# END CBRANCH
	jump! .L162.l_o34c93e		# 6427	[c=4]jump
.L119.l_o34c93e:
	# CBRANCH EQ	# 2723	[c=12]cbranchsi4_internal
	load4! &1 	#X1
	push! 4	
	xor	
	jump_zero! .L120.l_o34c93e
	# END CBRANCH
	push! 60		# 2729	[c=3]movdi_to_tr_unspec/0
	load8! &1 	#AR	# 2731	[c=14]*subdi3/2
	sub
	store8! &1 	#AR	# 2732	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 6188	[c=5]movdi_to_tr_unspec/1
	load8! &12 	#X11	# 6190	[c=6]*adddi/2
	add
	store8! &12 	#X11	# 6192	[c=4]movsi_from_tr_unspec/0
	load8! &0 	#AR	# 6193	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 6195	[c=6]*adddi/2
	add
	store8! &4 	#X3	# 6197	[c=4]movsi_from_tr_unspec/0
	load8! &0 	#AR	# 6198	[c=5]movdi_to_tr_unspec/1
	load8! &9 	#X8	# 6200	[c=6]*adddi/2
	add
	store8! &9 	#X8	# 6202	[c=4]movsi_from_tr_unspec/0
	jump! .L359.l_o34c93e		# 6430	[c=4]jump
.L309.l_o34c93e:

	# epilogue
	set_sp! &27
	return

# FUNCTION ENDS:_dtoa_r

#	IMPORT memcpy
#	IMPORT __multiply
#	IMPORT __hi0bits
#	IMPORT __pow5mult
#	IMPORT __lshift
#	IMPORT __multadd
#	IMPORT __mdiff
#	IMPORT __i2b
#	IMPORT __assert_func
#	IMPORT __mprec_bigtens
#	IMPORT _Balloc
#	IMPORT __mprec_tens
#	IMPORT __d2b
#	IMPORT _Bfree
#	IMPORT __mcmp
#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: oa83f2a
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"errno.c"
#	.text

# FUNCTION BEGINS:__errno
	EXPORT	__errno
__errno:
	# prologue (0 GPRs)

	load8! _impure_ptr	# 10	[c=1]movdi_push_pop
	store8! &2

	# epilogue
	return

# FUNCTION ENDS:__errno

#	IMPORT _impure_ptr
#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: o8e8e20
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"exit.c"
#	.text

# FUNCTION BEGINS:exit
	EXPORT	exit
exit:
	# prologue (2 GPRs)
	push! 0
	push! 0

	push! 0		# 6	[c=4]pushdi1_not_fp/0
	load4! &4	# 7	[c=2]pushsi1_not_fp/1
	call! __call_exitprocs		# 8	[c=5]*call_pop_0/0
	set_sp! (+ &0 16)
	

	load8! _global_impure_ptr	# 9	[c=1]movdi_push_pop
	store8! &2 	#X1
	load8! &1 	#X1	# 10	[c=11]movdi_to_tr_unspec/2
	add! 88	
	load8	
	#	
	store8! &1 	#AR	# 12	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 14	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L2.l_o8e8e20
	# END CBRANCH
	load8! &1 	#X1	# 16	[c=4]pushdi1_not_fp/1
	load8! &1 	#AR	# 17	[c=5]*call_pop_0/1
	call	
	set_sp! (+ &0 8)
	

.L2.l_o8e8e20:
	load4! &3	# 20	[c=2]pushsi1_not_fp/1
	call! _exit		# 21	[c=5]*call_pop_0/0
	set_sp! (+ &0 8)
	


	# epilogue
	set_sp! &2
	return

# FUNCTION ENDS:exit

#	IMPORT _exit
#	IMPORT _global_impure_ptr
#	IMPORT __call_exitprocs
#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: o31a55c
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"fclose.c"
#	.text
	#peephole pop+cmprev
	#peephole pop+pusharg
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole pop+pusharg
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole popdi+cmp

# FUNCTION BEGINS:_fclose_r
	EXPORT	_fclose_r
_fclose_r:
	# prologue (5 GPRs)

	set_sp! &-5

	load8! &6	# 2	[c=2]movdi_push_pop
	store8! &4 	#X3
	load8! &7	# 3	[c=2]movdi_push_pop
	store8! &3 	#X2
	# CBRANCH EQ0	# 9	[c=12]cbranchdi4_internal
	load8! &2 	#X2
	jump_zero! .L5.l_o31a55c
	# END CBRANCH
	# CBRANCH EQ0	# 15	[c=12]cbranchdi4_internal
	load8! &3 	#X3
	jump_zero! .L4.l_o31a55c
	# END CBRANCH
	load8! &3 	#X3	# 17	[c=6]movsi_to_tr_unspec/2
	add! 80	
	load4	
	#	
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 185	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L31.l_o31a55c
	# END CBRANCH
.L4.l_o31a55c:
	load8! &2 	#X2	# 27	[c=6]movhi_to_tr_unspec/2
	add! 16	
	load2	
	#	
	# CBRANCH - peep (modesize=2)
	and! 65535		# 184	[c=12]*peep2_cbranchhi
	# - EQ0
	jump_not_zero! .L32.l_o31a55c
	# END CBRANCH
.L5.l_o31a55c:
	push! 0		# 6	[c=4]movsi_push_pop
	store8! &5 	#X4
	load4! &4 	#X4	# 128	[c=4]movsi_push_pop
	store4! &7
	jump! .L33.l_o31a55c		# 210	[c=4]jump
.L32.l_o31a55c:
	load8! &2 	#X2	# 34	[c=4]pushdi1_not_fp/1
	load8! &4 	#X3	# 35	[c=4]pushdi1_not_fp/1
	call! __sflush_r		# 36	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load4! &0 	#AR	# 37	[c=4]movsi_push_pop
	store8! &5 	#X4
	load8! &2 	#X2	# 38	[c=11]movdi_to_tr_unspec/2
	add! 80	
	load8	
	#	
	store8! &1 	#AR	# 40	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 42	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L6.l_o31a55c
	# END CBRANCH
	load8! &2 	#X2	# 44	[c=11]movdi_to_tr_unspec/2
	add! 48	
	load8	
	#	
	#peep - pop(deadreg)+pusharg	# 183	[c=0]*peep2_pop_pusharg
	load8! &4 	#X3	# 49	[c=4]pushdi1_not_fp/1
	load8! &2 	#AR	# 50	[c=0]*call_value_pop_1/1
	call	
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH	# 52	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	add! -2147483648	
	push! 0	
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L34.l_o31a55c
	# END CBRANCH
.L6.l_o31a55c:
	load8! &2 	#X2	# 56	[c=6]movhi_to_tr_unspec/2
	add! 16	
	load2	
	#	
	and! 0x80		# 62	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=2)
	and! 65535		# 189	[c=12]*peep2_cbranchhi
	# - EQ0
	jump_not_zero! .L35.l_o31a55c
	# END CBRANCH
.L7.l_o31a55c:
	load8! &2 	#X2	# 80	[c=11]movdi_to_tr_unspec/2
	add! 88	
	load8	
	#	
	store8! &1 	#AR	# 82	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 84	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L8.l_o31a55c
	# END CBRANCH
	load8! &2 	#X2	# 86	[c=5]movdi_to_tr_unspec/1
	add! 116		# 88	[c=4]*adddi/0
	# CBRANCH - peep (modesize=8)
	# - EQ
	load8! &1 	#AR	# 177	[c=12]*peep2_cbranchdi_reverse
	xor	
	jump_zero! .L9.l_o31a55c
	# END CBRANCH
	load8! &0 	#AR	# 93	[c=4]pushdi1_not_fp/1
	load8! &4 	#X3	# 94	[c=4]pushdi1_not_fp/1
	call! _free_r		# 95	[c=5]*call_pop_0/0
	set_sp! (+ &0 16)
	

.L9.l_o31a55c:
	push! 0		# 98	[c=3]movdi_to_tr_unspec/0
	load8! &3 	#X2	# 100	[c=4]movdi_from_tr_unspec/1
	add! 88	
	store8	
	#	
.L8.l_o31a55c:
	load8! &2 	#X2	# 104	[c=11]movdi_to_tr_unspec/2
	add! 120	
	load8	
	#	
	store8! &1 	#AR	# 106	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 108	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L10.l_o31a55c
	# END CBRANCH
	load8! &0 	#AR	# 110	[c=4]pushdi1_not_fp/1
	load8! &4 	#X3	# 111	[c=4]pushdi1_not_fp/1
	call! _free_r		# 112	[c=5]*call_pop_0/0
	set_sp! (+ &0 16)
	

	push! 0		# 113	[c=3]movdi_to_tr_unspec/0
	load8! &3 	#X2	# 115	[c=4]movdi_from_tr_unspec/1
	add! 120	
	store8	
	#	
.L10.l_o31a55c:
	push! 0		# 119	[c=3]movhi_to_tr_unspec/0
	load8! &3 	#X2	# 121	[c=4]movhi_from_tr_unspec/1
	add! 16	
	store2	
	#	
	load4! &4 	#X4	# 193	[c=4]movsi_push_pop
	store4! &7
	jump! .L33.l_o31a55c		# 214	[c=4]jump
.L31.l_o31a55c:
	load8! &3 	#X3	# 23	[c=4]pushdi1_not_fp/1
	call! __sinit		# 24	[c=5]*call_pop_0/0
	set_sp! (+ &0 8)
	

	load8! &2 	#X2	# 196	[c=6]movhi_to_tr_unspec/2
	add! 16	
	load2	
	#	
	# CBRANCH - peep (modesize=2)
	and! 65535		# 198	[c=12]*peep2_cbranchhi
	# - EQ0
	jump_zero! .L5.l_o31a55c
	# END CBRANCH
	jump! .L32.l_o31a55c		# 217	[c=4]jump
.L35.l_o31a55c:
	load8! &2 	#X2	# 71	[c=11]movdi_to_tr_unspec/2
	add! 24	
	load8	
	#	
	#peep - pop(deadreg)+pusharg	# 179	[c=0]*peep2_pop_pusharg
	load8! &4 	#X3	# 76	[c=4]pushdi1_not_fp/1
	call! _free_r		# 77	[c=5]*call_pop_0/0
	set_sp! (+ &0 16)
	

	jump! .L7.l_o31a55c		# 219	[c=4]jump
.L34.l_o31a55c:
	push! -1		# 5	[c=4]movsi_push_pop
	store8! &5 	#X4
	load8! &2 	#X2	# 201	[c=6]movhi_to_tr_unspec/2
	add! 16	
	load2	
	#	
	and! 0x80		# 203	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=2)
	and! 65535		# 204	[c=12]*peep2_cbranchhi
	# - EQ0
	jump_zero! .L7.l_o31a55c
	# END CBRANCH
	jump! .L35.l_o31a55c		# 222	[c=4]jump
.L33.l_o31a55c:

	# epilogue
	set_sp! &5
	return

# FUNCTION ENDS:_fclose_r


# FUNCTION BEGINS:fclose
	EXPORT	fclose
fclose:
	# prologue (1 GPRs)
	push! 0

	load8! &2	# 7	[c=2]pushdi1_not_fp/1
	load8! _impure_ptr	# 8	[c=1]pushdi1_not_fp/1
	call! _fclose_r		# 9	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load4! &0 	#AR	# 14	[c=4]movsi_push_pop
	store4! &3

	# epilogue
	store8! &0 #set_sp! &1
	return

# FUNCTION ENDS:fclose

#	IMPORT _impure_ptr
#	IMPORT __sinit
#	IMPORT _free_r
#	IMPORT __sflush_r
#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: o68f8eb
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"fflush.c"
#	.text
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole pop+push+commut(di)
	#peephole 1
	#peephole move_dead
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole pop+cmprev
	#peephole pop(deadreg)+push
	#peephole pop+push+sub
	#peephole pop(deadreg)+push
	#peephole pop+push+sub
	#peephole pop+cmp
	#peephole 1
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole popdi(deadreg)+push
	#peephole and+pophi
	#peephole popdi(deadreg)+push
	#peephole and+pophi
	#peephole popdi(deadreg)+push
	#peephole and+pophi
	#peephole popdi(deadreg)+push
	#peephole and+pophi
	#peephole popdi(deadreg)+push
	#peephole and+pophi
	#peephole popdi(deadreg)+push
	#peephole and+pophi

# FUNCTION BEGINS:__sflush_r
	EXPORT	__sflush_r
__sflush_r:
	# prologue (7 GPRs)

	set_sp! &-7

	load8! &8	# 2	[c=2]movdi_push_pop
	store8! &6 	#X5
	load8! &9	# 3	[c=2]movdi_push_pop
	store8! &5 	#X4
	load8! &4 	#X4	# 14	[c=6]movhi_to_tr_unspec/2
	add! 16	
	load2	
	#	
	store8! &1 	#AR	# 16	[c=4]movhi_from_tr_unspec/0
	load8! &0 	#AR	# 18	[c=5]movdi_to_tr_unspec/1
	and! 0x8		# 20	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=2)
	and! 65535		# 741	[c=12]*peep2_cbranchhi
	# - EQ0
	jump_not_zero! .L2.l_o68f8eb
	# END CBRANCH
	load8! &0 	#AR	# 29	[c=5]movdi_to_tr_unspec/1
	or! 0x800		# 31	[c=4]*iordi3/0
	store8! &3 	#X2	# 738	[c=4]movhi_from_tr_unspec/0
	load2! &2 	#X2	# 38	[c=5]movhi_to_tr_unspec/1
	load8! &5 	#X4	# 40	[c=4]movhi_from_tr_unspec/1
	add! 16	
	store2	
	#	
	load8! &4 	#X4	# 42	[c=6]movsi_to_tr_unspec/2
	add! 8	
	load4	
	#	
	store8! &2 	#X1	# 44	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 46	[c=12]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &2 	#X1
	add! -2147483648	
	lt_u	
	jump_zero! .L53.l_o68f8eb
	# END CBRANCH
.L3.l_o68f8eb:
	load8! &4 	#X4	# 58	[c=11]movdi_to_tr_unspec/2
	add! 72	
	load8	
	#	
	store8! &2 	#X1	# 60	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 63	[c=12]cbranchdi4_internal
	load8! &1 	#X1
	jump_zero! .L5.l_o68f8eb
	# END CBRANCH
	load8! &5 	#X5	# 65	[c=7]movsi_to_tr_unspec/2
	load4	
	#	
	store8! &7 	#X6	# 67	[c=4]movsi_from_tr_unspec/0
	push! 0		# 69	[c=3]movsi_to_tr_unspec/0
	load8! &6 	#X5	# 71	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	load8! &0 	#AR	# 73	[c=5]movdi_to_tr_unspec/1
	and! 0x1000		# 75	[c=4]*anddi3/0
	store8! &1 	#AR	# 76	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 82	[c=11]movdi_to_tr_unspec/2
	add! 48	
	load8	
	#	
	store8! &4 	#X3	# 84	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 86	[c=12]cbranchhi4_internal
	load2! &0 	#AR
	jump_not_zero! .L54.l_o68f8eb
	# END CBRANCH
	push! 1		# 96	[c=4]pushsi1_not_fp/0
	push! 0		# 97	[c=4]pushdi1_not_fp/0
	load8! &5 	#X3	# 98	[c=4]pushdi1_not_fp/1
	load8! &8 	#X5	# 99	[c=4]pushdi1_not_fp/1
	load8! &5 	#X1	# 100	[c=0]*call_value_pop_1/1
	call	
	store8! &4

	set_sp! &3
	# CBRANCH EQ	# 102	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	push! -1	
	xor	
	jump_zero! .L55.l_o68f8eb
	# END CBRANCH
	load8! &4 	#X4	# 160	[c=6]movhi_to_tr_unspec/2
	add! 16	
	load2	
	#	
	store8! &3 	#X2	# 162	[c=4]movhi_from_tr_unspec/0
	load8! &4 	#X4	# 164	[c=11]movdi_to_tr_unspec/2
	add! 72	
	load8	
	#	
	store8! &2 	#X1	# 166	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 168	[c=11]movdi_to_tr_unspec/2
	add! 48	
	load8	
	#	
	store8! &4 	#X3	# 170	[c=4]movdi_from_tr_unspec/0
.L7.l_o68f8eb:
	load8! &2 	#X2	# 174	[c=5]movdi_to_tr_unspec/1
	and! 0x4		# 176	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=2)
	and! 65535		# 732	[c=12]*peep2_cbranchhi
	# - EQ0
	jump_zero! .L12.l_o68f8eb
	# END CBRANCH
	load8! &4 	#X4	# 185	[c=6]movsi_to_tr_unspec/2
	add! 8	
	load4	
	#	
	sigx4		# 191	[c=6]*extendsidi2
	load8! &1 	#AR	# 683	[c=14]*subdi3/2
	sub
	neg		# 684	[c=4]*neg_tr
	store8! &1 	#AR	# 685	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 205	[c=11]movdi_to_tr_unspec/2
	add! 88	
	load8	
	#	
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L12.l_o68f8eb	# 686	[c=12]*peep2_cbranchdi
	# END CBRANCH
	load8! &4 	#X4	# 211	[c=6]movsi_to_tr_unspec/2
	add! 112	
	load4	
	#	
	sigx4		# 217	[c=6]*extendsidi2
	load8! &1 	#AR	# 678	[c=14]*subdi3/2
	sub
	neg		# 679	[c=4]*neg_tr
	store8! &1 	#AR	# 680	[c=4]movdi_from_tr_unspec/0
.L12.l_o68f8eb:
	push! 0		# 233	[c=4]pushsi1_not_fp/0
	load8! &1 	#AR	# 234	[c=4]pushdi1_not_fp/1
	load8! &5 	#X3	# 235	[c=4]pushdi1_not_fp/1
	load8! &8 	#X5	# 236	[c=4]pushdi1_not_fp/1
	load8! &5 	#X1	# 237	[c=0]*call_value_pop_1/1
	call	
	store8! &4

	set_sp! &3
	# CBRANCH	# 239	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	push! -1	
	xor	
	push! 1	
	lt_u	
	jump_zero! .L13.l_o68f8eb
	# END CBRANCH
	load8! &5 	#X5	# 241	[c=7]movsi_to_tr_unspec/2
	load4	
	#	
	store8! &2 	#X1	# 243	[c=4]movsi_from_tr_unspec/0
	load8! &4 	#X4	# 245	[c=6]movhi_to_tr_unspec/2
	add! 16	
	load2	
	#	
	store8! &3 	#X2	# 247	[c=4]movhi_from_tr_unspec/0
	# CBRANCH EQ0	# 249	[c=12]cbranchsi4_internal
	load4! &1 	#X1
	jump_zero! .L14.l_o68f8eb
	# END CBRANCH
	# CBRANCH EQ	# 251	[c=12]cbranchsi4_internal
	load4! &1 	#X1
	push! 29	
	xor	
	jump_zero! .L15.l_o68f8eb
	# END CBRANCH
	# CBRANCH	# 253	[c=12]cbranchsi4_internal
	load4! &1 	#X1
	push! 22	
	xor	
	push! 1	
	lt_u	
	jump_zero! .L56.l_o68f8eb
	# END CBRANCH
.L15.l_o68f8eb:
	load8! &2 	#X2	# 520	[c=5]movdi_to_tr_unspec/1
	and! 0xfffffffffffff7ff		# 522	[c=4]*anddi3/0
	load8! &5 	#X4	# 744	[c=4]movhi_from_tr_unspec/1
	add! 16	
	store2	
	#	
	push! 0		# 533	[c=3]movsi_to_tr_unspec/0
	load8! &5 	#X4	# 535	[c=4]movsi_from_tr_unspec/1
	add! 8	
	store4	
	#	
	load8! &4 	#X4	# 537	[c=11]movdi_to_tr_unspec/2
	add! 24	
	load8	
	#	
	load8! &5 	#X4	# 543	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
.L22.l_o68f8eb:
	load4! &6 	#X6	# 263	[c=5]movsi_to_tr_unspec/1
	load8! &6 	#X5	# 265	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	load8! &4 	#X4	# 267	[c=11]movdi_to_tr_unspec/2
	add! 88	
	load8	
	#	
	store8! &1 	#AR	# 269	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 271	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L5.l_o68f8eb
	# END CBRANCH
	load8! &4 	#X4	# 273	[c=5]movdi_to_tr_unspec/1
	add! 116		# 275	[c=4]*adddi/0
	# CBRANCH - peep (modesize=8)
	# - EQ
	load8! &1 	#AR	# 675	[c=12]*peep2_cbranchdi_reverse
	xor	
	jump_zero! .L17.l_o68f8eb
	# END CBRANCH
	load8! &0 	#AR	# 280	[c=4]pushdi1_not_fp/1
	load8! &6 	#X5	# 281	[c=4]pushdi1_not_fp/1
	call! _free_r		# 282	[c=5]*call_pop_0/0
	set_sp! (+ &0 16)
	

.L17.l_o68f8eb:
	push! 0		# 285	[c=3]movdi_to_tr_unspec/0
	load8! &5 	#X4	# 287	[c=4]movdi_from_tr_unspec/1
	add! 88	
	store8	
	#	
	push! 0		# 11	[c=4]movsi_push_pop
	store8! &1 	#AR
	load4! &0 	#AR	# 548	[c=4]movsi_push_pop
	store4! &9
	jump! .L57.l_o68f8eb		# 797	[c=4]jump
.L2.l_o68f8eb:
	load8! &4 	#X4	# 310	[c=11]movdi_to_tr_unspec/2
	add! 24	
	load8	
	#	
	store8! &3 	#X2	# 312	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 314	[c=12]cbranchdi4_internal
	load8! &2 	#X2
	jump_zero! .L5.l_o68f8eb
	# END CBRANCH
	load8! &4 	#X4	# 668	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	load8! &3 	#X2	# 670	[c=14]*subdi3/2
	sub
	store8! &4 	#X3	# 721	[c=4]movsi_from_tr_unspec/0
	load8! &2 	#X2	# 329	[c=5]movdi_to_tr_unspec/1
	load8! &5 	#X4	# 331	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load8! &0 	#AR	# 333	[c=5]movdi_to_tr_unspec/1
	and! 0x3		# 335	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=2)
	and! 65535		# 724	[c=12]*peep2_cbranchhi
	# - EQ0
	jump_not_zero! .L24.l_o68f8eb
	# END CBRANCH
	load8! &4 	#X4	# 344	[c=6]movsi_to_tr_unspec/2
	add! 32	
	load4	
	#	
	store8! &1 	#AR	# 346	[c=4]movsi_from_tr_unspec/0
	load4! &0 	#AR	# 350	[c=5]movsi_to_tr_unspec/1
	load8! &5 	#X4	# 352	[c=4]movsi_from_tr_unspec/1
	add! 12	
	store4	
	#	
	# CBRANCH	# 354	[c=12]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &4 	#X3
	add! -2147483648	
	lt_u	
	jump_zero! .L5.l_o68f8eb
	# END CBRANCH
.L20.l_o68f8eb:
	load8! &4 	#X4	# 356	[c=11]movdi_to_tr_unspec/2
	add! 64	
	load8	
	#	
	store8! &1 	#AR	# 358	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 360	[c=11]movdi_to_tr_unspec/2
	add! 48	
	load8	
	#	
	store8! &2 	#X1	# 362	[c=4]movdi_from_tr_unspec/0
	load4! &3 	#X3	# 364	[c=4]pushsi1_not_fp/1
	load8! &3 	#X2	# 365	[c=4]pushdi1_not_fp/1
	load8! &3 	#X1	# 366	[c=4]pushdi1_not_fp/1
	load8! &8 	#X5	# 367	[c=4]pushdi1_not_fp/1
	load8! &4 	#AR	# 368	[c=0]*call_value_pop_1/1
	call	
	store8! &4

	set_sp! &3
	# CBRANCH	# 370	[c=12]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	jump_zero! .L58.l_o68f8eb
	# END CBRANCH
	load4! &0 	#AR	# 393	[c=5]movsi_to_tr_unspec/1
	sigx4		# 395	[c=6]*extendsidi2
	load8! &3 	#X2	# 662	[c=6]*adddi/2
	add
	store8! &3 	#X2	# 711	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 712	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 415	[c=14]*subdi3/2
	sub
	store8! &4 	#X3	# 715	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 423	[c=12]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &4 	#X3
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L20.l_o68f8eb
	# END CBRANCH
.L5.l_o68f8eb:
	push! 0		# 8	[c=4]movsi_push_pop
	store8! &1 	#AR
.L59.l_o68f8eb:
	load4! &0 	#AR	# 763	[c=4]movsi_push_pop
	store4! &9
	jump! .L57.l_o68f8eb		# 800	[c=4]jump
.L53.l_o68f8eb:
	load8! &4 	#X4	# 48	[c=6]movsi_to_tr_unspec/2
	add! 112	
	load4	
	#	
	store8! &2 	#X1	# 50	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 52	[c=12]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &2 	#X1
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L3.l_o68f8eb
	# END CBRANCH
	push! 0		# 766	[c=4]movsi_push_pop
	store8! &1 	#AR
	jump! .L59.l_o68f8eb		# 803	[c=4]jump
.L24.l_o68f8eb:
	push! 0		# 5	[c=4]movsi_push_pop
	store8! &1 	#AR
	load4! &0 	#AR	# 769	[c=5]movsi_to_tr_unspec/1
	load8! &5 	#X4	# 771	[c=4]movsi_from_tr_unspec/1
	add! 12	
	store4	
	#	
	# CBRANCH	# 772	[c=12]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &4 	#X3
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L20.l_o68f8eb
	# END CBRANCH
	jump! .L5.l_o68f8eb		# 806	[c=4]jump
.L54.l_o68f8eb:
	load8! &4 	#X4	# 88	[c=11]movdi_to_tr_unspec/2
	add! 144	
	load8	
	#	
	store8! &1 	#AR	# 90	[c=4]movdi_from_tr_unspec/0
	jump! .L7.l_o68f8eb		# 808	[c=4]jump
.L58.l_o68f8eb:
	load8! &4 	#X4	# 372	[c=6]movhi_to_tr_unspec/2
	add! 16	
	load2	
	#	
	or! 0x40		# 378	[c=4]*iordi3/0
	load8! &5 	#X4	# 753	[c=4]movhi_from_tr_unspec/1
	add! 16	
	store2	
	#	
	push! -1		# 10	[c=4]movsi_push_pop
	store8! &1 	#AR
	load4! &0 	#AR	# 775	[c=4]movsi_push_pop
	store4! &9
	jump! .L57.l_o68f8eb		# 810	[c=4]jump
.L13.l_o68f8eb:
	load8! &4 	#X4	# 433	[c=6]movhi_to_tr_unspec/2
	add! 16	
	load2	
	#	
	store8! &2 	#X1	# 435	[c=4]movhi_from_tr_unspec/0
	load8! &1 	#X1	# 437	[c=5]movdi_to_tr_unspec/1
	and! 0xfffffffffffff7ff		# 439	[c=4]*anddi3/0
	load8! &5 	#X4	# 750	[c=4]movhi_from_tr_unspec/1
	add! 16	
	store2	
	#	
	push! 0		# 450	[c=3]movsi_to_tr_unspec/0
	load8! &5 	#X4	# 452	[c=4]movsi_from_tr_unspec/1
	add! 8	
	store4	
	#	
	load8! &4 	#X4	# 454	[c=11]movdi_to_tr_unspec/2
	add! 24	
	load8	
	#	
	load8! &5 	#X4	# 460	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load8! &1 	#X1	# 462	[c=5]movdi_to_tr_unspec/1
	and! 0x1000		# 464	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=2)
	and! 65535		# 710	[c=12]*peep2_cbranchhi
	# - EQ0
	jump_zero! .L22.l_o68f8eb
	# END CBRANCH
	load8! &0 	#AR	# 258	[c=5]movdi_to_tr_unspec/1
	load8! &5 	#X4	# 260	[c=4]movdi_from_tr_unspec/1
	add! 144	
	store8	
	#	
	jump! .L22.l_o68f8eb		# 812	[c=4]jump
.L55.l_o68f8eb:
	load8! &5 	#X5	# 104	[c=7]movsi_to_tr_unspec/2
	load4	
	#	
	store8! &2 	#X1	# 106	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ0	# 108	[c=12]cbranchsi4_internal
	load4! &1 	#X1
	jump_not_zero! .L9.l_o68f8eb
	# END CBRANCH
	load8! &4 	#X4	# 110	[c=6]movhi_to_tr_unspec/2
	add! 16	
	load2	
	#	
	store8! &3 	#X2	# 112	[c=4]movhi_from_tr_unspec/0
	load8! &4 	#X4	# 114	[c=11]movdi_to_tr_unspec/2
	add! 72	
	load8	
	#	
	store8! &2 	#X1	# 116	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 118	[c=11]movdi_to_tr_unspec/2
	add! 48	
	load8	
	#	
	store8! &4 	#X3	# 120	[c=4]movdi_from_tr_unspec/0
	jump! .L7.l_o68f8eb		# 814	[c=4]jump
.L14.l_o68f8eb:
	load8! &2 	#X2	# 479	[c=5]movdi_to_tr_unspec/1
	and! 0xfffffffffffff7ff		# 481	[c=4]*anddi3/0
	load8! &5 	#X4	# 747	[c=4]movhi_from_tr_unspec/1
	add! 16	
	store2	
	#	
	push! 0		# 492	[c=3]movsi_to_tr_unspec/0
	load8! &5 	#X4	# 494	[c=4]movsi_from_tr_unspec/1
	add! 8	
	store4	
	#	
	load8! &4 	#X4	# 496	[c=11]movdi_to_tr_unspec/2
	add! 24	
	load8	
	#	
	load8! &5 	#X4	# 502	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load8! &2 	#X2	# 504	[c=5]movdi_to_tr_unspec/1
	and! 0x1000		# 506	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=2)
	and! 65535		# 703	[c=12]*peep2_cbranchhi
	# - EQ0
	jump_zero! .L22.l_o68f8eb
	# END CBRANCH
	load8! &0 	#AR	# 778	[c=5]movdi_to_tr_unspec/1
	load8! &5 	#X4	# 780	[c=4]movdi_from_tr_unspec/1
	add! 144	
	store8	
	#	
	jump! .L22.l_o68f8eb		# 816	[c=4]jump
.L9.l_o68f8eb:
	# CBRANCH EQ	# 126	[c=12]cbranchsi4_internal
	load4! &1 	#X1
	push! 29	
	xor	
	jump_zero! .L10.l_o68f8eb
	# END CBRANCH
	# CBRANCH EQ	# 128	[c=12]cbranchsi4_internal
	load4! &1 	#X1
	push! 22	
	xor	
	jump_zero! .L10.l_o68f8eb
	# END CBRANCH
	load8! &4 	#X4	# 139	[c=6]movhi_to_tr_unspec/2
	add! 16	
	load2	
	#	
	or! 0x40		# 145	[c=4]*iordi3/0
	load8! &5 	#X4	# 759	[c=4]movhi_from_tr_unspec/1
	add! 16	
	store2	
	#	
	push! -1		# 6	[c=4]movsi_push_pop
	store8! &1 	#AR
	load4! &0 	#AR	# 783	[c=4]movsi_push_pop
	store4! &9
	jump! .L57.l_o68f8eb		# 818	[c=4]jump
.L56.l_o68f8eb:
	load8! &2 	#X2	# 293	[c=5]movdi_to_tr_unspec/1
	or! 0x40		# 295	[c=4]*iordi3/0
	load8! &5 	#X4	# 756	[c=4]movhi_from_tr_unspec/1
	add! 16	
	store2	
	#	
	push! -1		# 7	[c=4]movsi_push_pop
	store8! &1 	#AR
	load4! &0 	#AR	# 786	[c=4]movsi_push_pop
	store4! &9
	jump! .L57.l_o68f8eb		# 820	[c=4]jump
.L10.l_o68f8eb:
	load4! &6 	#X6	# 131	[c=5]movsi_to_tr_unspec/1
	load8! &6 	#X5	# 133	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	push! 0		# 9	[c=4]movsi_push_pop
	store8! &1 	#AR
	load4! &0 	#AR	# 789	[c=4]movsi_push_pop
	store4! &9
.L57.l_o68f8eb:

	# epilogue
	set_sp! &7
	return

# FUNCTION ENDS:__sflush_r

	#peephole pop+cmp
	#peephole pop+cmp

# FUNCTION BEGINS:_fflush_r
	EXPORT	_fflush_r
_fflush_r:
	# prologue (4 GPRs)
	push! 0
	push! 0
	push! 0
	push! 0

	load8! &5	# 2	[c=2]movdi_push_pop
	store8! &3 	#X2
	load8! &6	# 3	[c=2]movdi_push_pop
	store8! &4 	#X3
	# CBRANCH EQ0	# 8	[c=12]cbranchdi4_internal
	load8! &2 	#X2
	jump_zero! .L61.l_o68f8eb
	# END CBRANCH
	load8! &2 	#X2	# 10	[c=6]movsi_to_tr_unspec/2
	add! 80	
	load4	
	#	
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 54	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L69.l_o68f8eb
	# END CBRANCH
.L61.l_o68f8eb:
	load8! &3 	#X3	# 20	[c=6]movhi_to_tr_unspec/2
	add! 16	
	load2	
	#	
	# CBRANCH - peep (modesize=2)
	and! 65535		# 53	[c=12]*peep2_cbranchhi
	# - EQ0
	jump_not_zero! .L70.l_o68f8eb
	# END CBRANCH
.L63.l_o68f8eb:
	push! 0		# 5	[c=4]movsi_push_pop
	store8! &1 	#AR
	load4! &0 	#AR	# 35	[c=4]movsi_push_pop
	store4! &6
	jump! .L71.l_o68f8eb		# 69	[c=4]jump
.L69.l_o68f8eb:
	load8! &2 	#X2	# 16	[c=4]pushdi1_not_fp/1
	call! __sinit		# 17	[c=5]*call_pop_0/0
	set_sp! (+ &0 8)
	

	load8! &3 	#X3	# 58	[c=6]movhi_to_tr_unspec/2
	add! 16	
	load2	
	#	
	# CBRANCH - peep (modesize=2)
	and! 65535		# 60	[c=12]*peep2_cbranchhi
	# - EQ0
	jump_zero! .L63.l_o68f8eb
	# END CBRANCH
.L70.l_o68f8eb:
	load8! &3 	#X3	# 26	[c=4]pushdi1_not_fp/1
	load8! &3 	#X2	# 27	[c=4]pushdi1_not_fp/1
	call! __sflush_r		# 28	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load4! &0 	#AR	# 63	[c=4]movsi_push_pop
	store4! &6
.L71.l_o68f8eb:

	# epilogue
	set_sp! &4
	return

# FUNCTION ENDS:_fflush_r


# FUNCTION BEGINS:fflush
	EXPORT	fflush
fflush:
	# prologue (1 GPRs)
	push! 0

	# CBRANCH EQ0	# 6	[c=14]cbranchdi4_internal
	load8! &2
	jump_zero! .L77.l_o68f8eb
	# END CBRANCH
	load8! &2	# 18	[c=2]pushdi1_not_fp/1
	load8! _impure_ptr	# 19	[c=1]pushdi1_not_fp/1
	call! _fflush_r		# 20	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load4! &0 	#AR	# 27	[c=4]movsi_push_pop
	store4! &3
	jump! .L78.l_o68f8eb		# 43	[c=4]jump
.L77.l_o68f8eb:
	push! _fflush_r		# 9	[c=4]pushdi1_not_fp/0
	load8! _global_impure_ptr	# 10	[c=1]pushdi1_not_fp/1
	call! _fwalk_reent		# 11	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load4! &0 	#AR	# 38	[c=4]movsi_push_pop
	store4! &3
.L78.l_o68f8eb:

	# epilogue
	store8! &0 #set_sp! &1
	return

# FUNCTION ENDS:fflush

#	IMPORT _fwalk_reent
#	IMPORT _global_impure_ptr
#	IMPORT _impure_ptr
#	IMPORT __sinit
#	IMPORT _free_r
#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: o0d3600
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"findfp.c"
#	.text

# FUNCTION BEGINS:_cleanup_r
	EXPORT	_cleanup_r
_cleanup_r:
	# prologue (1 GPRs)
	push! 0

	push! _fclose_r		# 6	[c=4]pushdi1_not_fp/0
	load8! &3	# 7	[c=2]pushdi1_not_fp/1
	call! _fwalk_reent		# 8	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1

	# epilogue
	store8! &0 #set_sp! &1
	return

# FUNCTION ENDS:_cleanup_r

	#peephole pop(deadreg)+push

# FUNCTION BEGINS:.Li___sinit.part_0.l_o0d3600
.Li___sinit.part_0.l_o0d3600:
	# prologue (4 GPRs)
	push! 0
	push! 0
	push! 0
	push! 0

	load8! &5	# 2	[c=2]movdi_push_pop
	store8! &4 	#X3
	push! _cleanup_r		# 6	[c=3]movdi_to_tr_unspec/0
	load8! &4 	#X3	# 8	[c=4]movdi_from_tr_unspec/1
	add! 88	
	store8	
	#	
	push! 0		# 10	[c=3]movdi_to_tr_unspec/0
	load8! &4 	#X3	# 12	[c=4]movdi_from_tr_unspec/1
	add! 1312	
	store8	
	#	
	push! 3		# 14	[c=3]movsi_to_tr_unspec/0
	load8! &4 	#X3	# 16	[c=4]movsi_from_tr_unspec/1
	add! 1320	
	store4	
	#	
	load8! &3 	#X3	# 18	[c=5]movdi_to_tr_unspec/1
	add! 1336		# 20	[c=4]*adddi/0
	load8! &4 	#X3	# 25	[c=4]movdi_from_tr_unspec/1
	add! 1328	
	store8	
	#	
	load8! &3 	#X3	# 27	[c=11]movdi_to_tr_unspec/2
	add! 8	
	load8	
	#	
	store8! &3 	#X2	# 29	[c=4]movdi_from_tr_unspec/0
	push! 0		# 31	[c=3]movsi_to_tr_unspec/0
	load8! &3 	#X2	# 33	[c=4]movsi_from_tr_unspec/1
	add! 176	
	store4	
	#	
	push! 0		# 35	[c=3]movdi_to_tr_unspec/0
	load8! &3 	#X2	# 37	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	push! 0		# 39	[c=3]movdi_to_tr_unspec/0
	load8! &3 	#X2	# 41	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	push! 4		# 43	[c=3]movsi_to_tr_unspec/0
	load8! &3 	#X2	# 45	[c=4]movsi_from_tr_unspec/1
	add! 16	
	store4	
	#	
	push! 0		# 47	[c=3]movdi_to_tr_unspec/0
	load8! &3 	#X2	# 49	[c=4]movdi_from_tr_unspec/1
	add! 24	
	store8	
	#	
	push! 0		# 51	[c=3]movsi_to_tr_unspec/0
	load8! &3 	#X2	# 53	[c=4]movsi_from_tr_unspec/1
	add! 32	
	store4	
	#	
	push! 0		# 55	[c=3]movsi_to_tr_unspec/0
	load8! &3 	#X2	# 57	[c=4]movsi_from_tr_unspec/1
	add! 40	
	store4	
	#	
	load8! &2 	#X2	# 59	[c=5]movdi_to_tr_unspec/1
	add! 160		# 61	[c=4]*adddi/0
	store8! &1 	#AR	# 62	[c=4]movdi_from_tr_unspec/0
	push! 16		# 64	[c=4]pushdi1_not_fp/0
	push! 0		# 65	[c=4]pushsi1_not_fp/0
	load8! &2 	#AR	# 66	[c=4]pushdi1_not_fp/1
	call! memset		# 67	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	load8! &2 	#X2	# 68	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 70	[c=4]movdi_from_tr_unspec/1
	add! 48	
	store8	
	#	
	push! __sread		# 72	[c=3]movdi_to_tr_unspec/0
	load8! &3 	#X2	# 74	[c=4]movdi_from_tr_unspec/1
	add! 56	
	store8	
	#	
	push! __swrite		# 76	[c=3]movdi_to_tr_unspec/0
	load8! &3 	#X2	# 78	[c=4]movdi_from_tr_unspec/1
	add! 64	
	store8	
	#	
	push! __sseek		# 80	[c=3]movdi_to_tr_unspec/0
	load8! &3 	#X2	# 82	[c=4]movdi_from_tr_unspec/1
	add! 72	
	store8	
	#	
	push! __sclose		# 84	[c=3]movdi_to_tr_unspec/0
	load8! &3 	#X2	# 86	[c=4]movdi_from_tr_unspec/1
	add! 80	
	store8	
	#	
	load8! &3 	#X3	# 88	[c=11]movdi_to_tr_unspec/2
	add! 16	
	load8	
	#	
	store8! &3 	#X2	# 90	[c=4]movdi_from_tr_unspec/0
	push! 0		# 92	[c=3]movsi_to_tr_unspec/0
	load8! &3 	#X2	# 94	[c=4]movsi_from_tr_unspec/1
	add! 176	
	store4	
	#	
	push! 0		# 96	[c=3]movdi_to_tr_unspec/0
	load8! &3 	#X2	# 98	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	push! 0		# 100	[c=3]movdi_to_tr_unspec/0
	load8! &3 	#X2	# 102	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	push! 65545		# 104	[c=3]movsi_to_tr_unspec/0
	load8! &3 	#X2	# 106	[c=4]movsi_from_tr_unspec/1
	add! 16	
	store4	
	#	
	push! 0		# 108	[c=3]movdi_to_tr_unspec/0
	load8! &3 	#X2	# 110	[c=4]movdi_from_tr_unspec/1
	add! 24	
	store8	
	#	
	push! 0		# 112	[c=3]movsi_to_tr_unspec/0
	load8! &3 	#X2	# 114	[c=4]movsi_from_tr_unspec/1
	add! 32	
	store4	
	#	
	push! 0		# 116	[c=3]movsi_to_tr_unspec/0
	load8! &3 	#X2	# 118	[c=4]movsi_from_tr_unspec/1
	add! 40	
	store4	
	#	
	load8! &2 	#X2	# 120	[c=5]movdi_to_tr_unspec/1
	add! 160		# 122	[c=4]*adddi/0
	store8! &1 	#AR	# 123	[c=4]movdi_from_tr_unspec/0
	push! 16		# 125	[c=4]pushdi1_not_fp/0
	push! 0		# 126	[c=4]pushsi1_not_fp/0
	load8! &2 	#AR	# 127	[c=4]pushdi1_not_fp/1
	call! memset		# 128	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	load8! &2 	#X2	# 129	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 131	[c=4]movdi_from_tr_unspec/1
	add! 48	
	store8	
	#	
	push! __sread		# 133	[c=3]movdi_to_tr_unspec/0
	load8! &3 	#X2	# 135	[c=4]movdi_from_tr_unspec/1
	add! 56	
	store8	
	#	
	push! __swrite		# 137	[c=3]movdi_to_tr_unspec/0
	load8! &3 	#X2	# 139	[c=4]movdi_from_tr_unspec/1
	add! 64	
	store8	
	#	
	push! __sseek		# 141	[c=3]movdi_to_tr_unspec/0
	load8! &3 	#X2	# 143	[c=4]movdi_from_tr_unspec/1
	add! 72	
	store8	
	#	
	push! __sclose		# 145	[c=3]movdi_to_tr_unspec/0
	load8! &3 	#X2	# 147	[c=4]movdi_from_tr_unspec/1
	add! 80	
	store8	
	#	
	load8! &3 	#X3	# 149	[c=11]movdi_to_tr_unspec/2
	add! 24	
	load8	
	#	
	store8! &3 	#X2	# 151	[c=4]movdi_from_tr_unspec/0
	push! 0		# 153	[c=3]movsi_to_tr_unspec/0
	load8! &3 	#X2	# 155	[c=4]movsi_from_tr_unspec/1
	add! 176	
	store4	
	#	
	push! 0		# 157	[c=3]movdi_to_tr_unspec/0
	load8! &3 	#X2	# 159	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	push! 0		# 161	[c=3]movdi_to_tr_unspec/0
	load8! &3 	#X2	# 163	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	push! 131090		# 165	[c=3]movsi_to_tr_unspec/0
	load8! &3 	#X2	# 167	[c=4]movsi_from_tr_unspec/1
	add! 16	
	store4	
	#	
	push! 0		# 169	[c=3]movdi_to_tr_unspec/0
	load8! &3 	#X2	# 171	[c=4]movdi_from_tr_unspec/1
	add! 24	
	store8	
	#	
	push! 0		# 173	[c=3]movsi_to_tr_unspec/0
	load8! &3 	#X2	# 175	[c=4]movsi_from_tr_unspec/1
	add! 32	
	store4	
	#	
	push! 0		# 177	[c=3]movsi_to_tr_unspec/0
	load8! &3 	#X2	# 179	[c=4]movsi_from_tr_unspec/1
	add! 40	
	store4	
	#	
	load8! &2 	#X2	# 181	[c=5]movdi_to_tr_unspec/1
	add! 160		# 183	[c=4]*adddi/0
	store8! &1 	#AR	# 184	[c=4]movdi_from_tr_unspec/0
	push! 16		# 186	[c=4]pushdi1_not_fp/0
	push! 0		# 187	[c=4]pushsi1_not_fp/0
	load8! &2 	#AR	# 188	[c=4]pushdi1_not_fp/1
	call! memset		# 189	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	load8! &2 	#X2	# 190	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 192	[c=4]movdi_from_tr_unspec/1
	add! 48	
	store8	
	#	
	push! __sread		# 194	[c=3]movdi_to_tr_unspec/0
	load8! &3 	#X2	# 196	[c=4]movdi_from_tr_unspec/1
	add! 56	
	store8	
	#	
	push! __swrite		# 198	[c=3]movdi_to_tr_unspec/0
	load8! &3 	#X2	# 200	[c=4]movdi_from_tr_unspec/1
	add! 64	
	store8	
	#	
	push! __sseek		# 202	[c=3]movdi_to_tr_unspec/0
	load8! &3 	#X2	# 204	[c=4]movdi_from_tr_unspec/1
	add! 72	
	store8	
	#	
	push! __sclose		# 206	[c=3]movdi_to_tr_unspec/0
	load8! &3 	#X2	# 208	[c=4]movdi_from_tr_unspec/1
	add! 80	
	store8	
	#	
	push! 1		# 210	[c=3]movsi_to_tr_unspec/0
	load8! &4 	#X3	# 212	[c=4]movsi_from_tr_unspec/1
	add! 80	
	store4	
	#	

	# epilogue
	set_sp! &4
	return

# FUNCTION ENDS:.Li___sinit.part_0.l_o0d3600

	#peephole pop+pusharg
	#peephole move+push(pushable)
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole pop+pusharg
	#peephole pop+block+push+block
	#peephole pop+push(deadreg)+sign_extend

# FUNCTION BEGINS:__sfmoreglue
	EXPORT	__sfmoreglue
__sfmoreglue:
	# prologue (4 GPRs)
	push! 0
	push! 0
	push! 0
	push! 0

	load4! &6	# 85	[c=5]movsi_to_tr_unspec/1
	add! -1		# 9	[c=4]*adddi/0
	sigx4		# 98	[c=6]*extendsidi2
	mult! 184		# 91	[c=4]*muldi3/0
	store8! &4 	#X3	# 92	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 26	[c=5]movdi_to_tr_unspec/1
	add! 208		# 28	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 94	[c=0]*peep2_pop_pusharg
	load8! &6	# 32	[c=2]pushdi1_not_fp/1
	call! _malloc_r		# 33	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load8! &0 	#AR	# 34	[c=4]movdi_push_pop
	store8! &3 	#X2
	# CBRANCH EQ0	# 35	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L5.l_o0d3600
	# END CBRANCH
	push! 0		# 37	[c=3]movdi_to_tr_unspec/0
	load8! &1 	#AR	# 39	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load4! &6	# 41	[c=5]movsi_to_tr_unspec/1
	load8! &1 	#AR	# 43	[c=4]movsi_from_tr_unspec/1
	add! 8	
	store4	
	#	
	load8! &0 	#AR	# 45	[c=5]movdi_to_tr_unspec/1
	add! 24		# 47	[c=4]*adddi/0
	store8! &1 	#AR	# 48	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 50	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 52	[c=4]movdi_from_tr_unspec/1
	add! 16	
	store8	
	#	
	load8! &3 	#X3	# 54	[c=5]movdi_to_tr_unspec/1
	add! 184		# 56	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 84	[c=0]*peep2_pop_pusharg
	push! 0		# 60	[c=4]pushsi1_not_fp/0
	load8! &2 	#AR	# 61	[c=4]pushdi1_not_fp/1
	call! memset		# 62	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
.L5.l_o0d3600:
	load8! &2 	#X2	# 68	[c=4]movdi_push_pop
	store8! &6

	# epilogue
	set_sp! &4
	return

# FUNCTION ENDS:__sfmoreglue

	#peephole nop+set
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole pop+block+push+block
	#peephole popdi(deadreg)+push

# FUNCTION BEGINS:__sfp
	EXPORT	__sfp
__sfp:
	# prologue (4 GPRs)
	push! 0
	push! 0
	push! 0
	push! 0

	load8! _global_impure_ptr	# 7	[c=1]movdi_push_pop
	store8! &3 	#X2
	load8! &2 	#X2	# 8	[c=6]movsi_to_tr_unspec/2
	add! 80	
	load4	
	#	
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 226	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L30.l_o0d3600
	# END CBRANCH
	load8! &2 	#X2	# 18	[c=5]movdi_to_tr_unspec/1
	add! 1312		# 20	[c=4]*adddi/0
	store8! &4 	#X3	# 21	[c=4]movdi_from_tr_unspec/0
.L22.l_o0d3600:
	load8! &3 	#X3	# 24	[c=11]movdi_to_tr_unspec/2
	add! 16	
	load8	
	#	
	store8! &3 	#X2	# 26	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 28	[c=6]movsi_to_tr_unspec/2
	add! 8	
	load4	
	#	
	store8! &1 	#AR	# 30	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 32	[c=12]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	jump_zero! .L14.l_o0d3600
	# END CBRANCH
	load8! &2 	#X2	# 34	[c=6]movhi_to_tr_unspec/2
	add! 16	
	load2	
	#	
	# CBRANCH - peep (modesize=2)
	and! 65535		# 225	[c=12]*peep2_cbranchhi
	# - EQ0
	jump_zero! .L15.l_o0d3600
	# END CBRANCH
	load8! &0 	#AR	# 108	[c=5]movdi_to_tr_unspec/1
	add! -1		# 110	[c=4]*adddi/0
	and! 0xffffffff		# 230	[c=4]*anddi3/0
	add! 1		# 218	[c=4]*adddi/0
	mult! 184		# 129	[c=4]*muldi3/0
	load8! &3 	#X2	# 222	[c=6]*adddi/2
	add
	store8! &2 	#X1	# 223	[c=4]movdi_from_tr_unspec/0
.L17.l_o0d3600:
	load8! &2 	#X2	# 144	[c=5]movdi_to_tr_unspec/1
	add! 184		# 146	[c=4]*adddi/0
	store8! &3 	#X2	# 147	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ	# 151	[c=12]cbranchdi4_internal
	load8! &1 	#X1
	load8! &3 	#X2
	xor	
	jump_zero! .L14.l_o0d3600
	# END CBRANCH
	load8! &2 	#X2	# 43	[c=6]movhi_to_tr_unspec/2
	add! 16	
	load2	
	#	
	# CBRANCH - peep (modesize=2)
	and! 65535		# 224	[c=12]*peep2_cbranchhi
	# - EQ0
	jump_not_zero! .L17.l_o0d3600
	# END CBRANCH
.L15.l_o0d3600:
	push! 0		# 50	[c=3]movsi_to_tr_unspec/0
	load8! &3 	#X2	# 52	[c=4]movsi_from_tr_unspec/1
	add! 176	
	store4	
	#	
	push! 0		# 54	[c=3]movdi_to_tr_unspec/0
	load8! &3 	#X2	# 56	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	push! 0		# 58	[c=3]movdi_to_tr_unspec/0
	load8! &3 	#X2	# 60	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	push! -65535		# 62	[c=3]movsi_to_tr_unspec/0
	load8! &3 	#X2	# 64	[c=4]movsi_from_tr_unspec/1
	add! 16	
	store4	
	#	
	push! 0		# 66	[c=3]movdi_to_tr_unspec/0
	load8! &3 	#X2	# 68	[c=4]movdi_from_tr_unspec/1
	add! 24	
	store8	
	#	
	push! 0		# 70	[c=3]movsi_to_tr_unspec/0
	load8! &3 	#X2	# 72	[c=4]movsi_from_tr_unspec/1
	add! 32	
	store4	
	#	
	push! 0		# 74	[c=3]movsi_to_tr_unspec/0
	load8! &3 	#X2	# 76	[c=4]movsi_from_tr_unspec/1
	add! 40	
	store4	
	#	
	load8! &2 	#X2	# 78	[c=5]movdi_to_tr_unspec/1
	add! 160		# 80	[c=4]*adddi/0
	store8! &1 	#AR	# 81	[c=4]movdi_from_tr_unspec/0
	push! 16		# 83	[c=4]pushdi1_not_fp/0
	push! 0		# 84	[c=4]pushsi1_not_fp/0
	load8! &2 	#AR	# 85	[c=4]pushdi1_not_fp/1
	call! memset		# 86	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	push! 0		# 87	[c=3]movdi_to_tr_unspec/0
	load8! &3 	#X2	# 89	[c=4]movdi_from_tr_unspec/1
	add! 88	
	store8	
	#	
	push! 0		# 91	[c=3]movsi_to_tr_unspec/0
	load8! &3 	#X2	# 93	[c=4]movsi_from_tr_unspec/1
	add! 96	
	store4	
	#	
	push! 0		# 95	[c=3]movdi_to_tr_unspec/0
	load8! &3 	#X2	# 97	[c=4]movdi_from_tr_unspec/1
	add! 120	
	store8	
	#	
	push! 0		# 99	[c=3]movsi_to_tr_unspec/0
	load8! &3 	#X2	# 101	[c=4]movsi_from_tr_unspec/1
	add! 128	
	store4	
	#	
	load8! &2 	#X2	# 185	[c=4]movdi_push_pop
	store8! &6
	jump! .L31.l_o0d3600		# 246	[c=4]jump
.L14.l_o0d3600:
	load8! &3 	#X3	# 154	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	store8! &3 	#X2	# 156	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 158	[c=12]cbranchdi4_internal
	load8! &2 	#X2
	jump_zero! .L32.l_o0d3600
	# END CBRANCH
.L20.l_o0d3600:
	load8! &2 	#X2	# 4	[c=4]movdi_push_pop
	store8! &4 	#X3
	jump! .L22.l_o0d3600		# 249	[c=4]jump
.L30.l_o0d3600:
	load8! &2 	#X2	# 14	[c=4]pushdi1_not_fp/1
	call! .Li___sinit.part_0.l_o0d3600		# 15	[c=5]*call_pop_0/0
	set_sp! (+ &0 8)
	

	load8! &2 	#X2	# 235	[c=5]movdi_to_tr_unspec/1
	add! 1312		# 237	[c=4]*adddi/0
	store8! &4 	#X3	# 238	[c=4]movdi_from_tr_unspec/0
	jump! .L22.l_o0d3600		# 251	[c=4]jump
.L32.l_o0d3600:
	push! 4		# 160	[c=4]pushsi1_not_fp/0
	load8! &6	# 161	[c=2]pushdi1_not_fp/1
	call! __sfmoreglue		# 162	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load8! &0 	#AR	# 163	[c=4]movdi_push_pop
	store8! &3 	#X2
	load8! &0 	#AR	# 164	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 166	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	# CBRANCH EQ0	# 168	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_not_zero! .L20.l_o0d3600
	# END CBRANCH
	push! 12		# 176	[c=3]movsi_to_tr_unspec/0
	load8! &6	# 211	[c=2]movdi_push_pop
	store8! &2 	#AR
	load8! &1 	#AR	# 178	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	load8! &2 	#X2	# 241	[c=4]movdi_push_pop
	store8! &6
.L31.l_o0d3600:

	# epilogue
	set_sp! &4
	return

# FUNCTION ENDS:__sfp


# FUNCTION BEGINS:_cleanup
	EXPORT	_cleanup
_cleanup:
	# prologue (1 GPRs)
	push! 0

	push! _fclose_r		# 6	[c=4]pushdi1_not_fp/0
	load8! _global_impure_ptr	# 7	[c=1]pushdi1_not_fp/1
	call! _fwalk_reent		# 8	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1

	# epilogue
	store8! &0 #set_sp! &1
	return

# FUNCTION ENDS:_cleanup

	#peephole pop+cmp

# FUNCTION BEGINS:__sinit
	EXPORT	__sinit
__sinit:
	# prologue (2 GPRs)
	push! 0
	push! 0

	load8! &3	# 2	[c=2]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 6	[c=6]movsi_to_tr_unspec/2
	add! 80	
	load4	
	#	
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 22	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L39.l_o0d3600
	# END CBRANCH
	jump! .L40.l_o0d3600		# 30	[c=4]jump
.L39.l_o0d3600:
	load8! &0 	#AR	# 12	[c=4]pushdi1_not_fp/1
	call! .Li___sinit.part_0.l_o0d3600		# 13	[c=5]*call_pop_0/0
	set_sp! (+ &0 8)
	

.L40.l_o0d3600:

	# epilogue
	set_sp! &2
	return

# FUNCTION ENDS:__sinit

#	IMPORT _global_impure_ptr
#	IMPORT _malloc_r
#	IMPORT __sclose
#	IMPORT __sseek
#	IMPORT __swrite
#	IMPORT __sread
#	IMPORT memset
#	IMPORT _fwalk_reent
#	IMPORT _fclose_r
#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: obee2e1
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"fiprintf.c"
#	.text
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg

# FUNCTION BEGINS:_fiprintf_r
	EXPORT	_fiprintf_r
_fiprintf_r:
	# prologue (1 GPRs)
	push! 0

	push! &0		# 39	[c=4]movdi_to_tr_unspec/1
	add! 40		# 44	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 46	[c=0]*peep2_pop_pusharg
	load8! &5	# 15	[c=2]pushdi1_not_fp/1
	load8! &5	# 16	[c=2]pushdi1_not_fp/1
	load8! &5	# 17	[c=2]pushdi1_not_fp/1
	call! _vfiprintf_r		# 18	[c=0]*call_value_pop_1/0
	store8! &4

	set_sp! &3
	load4! &0 	#AR	# 23	[c=4]movsi_push_pop
	store4! &3

	# epilogue
	store8! &0 #set_sp! &1
	return

# FUNCTION ENDS:_fiprintf_r

	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg

# FUNCTION BEGINS:fiprintf
	EXPORT	fiprintf
fiprintf:
	# prologue (1 GPRs)
	push! 0

	push! &0		# 39	[c=4]movdi_to_tr_unspec/1
	add! 32		# 44	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 46	[c=0]*peep2_pop_pusharg
	load8! &4	# 15	[c=2]pushdi1_not_fp/1
	load8! &4	# 16	[c=2]pushdi1_not_fp/1
	load8! _impure_ptr	# 17	[c=1]pushdi1_not_fp/1
	call! _vfiprintf_r		# 18	[c=0]*call_value_pop_1/0
	store8! &4

	set_sp! &3
	load4! &0 	#AR	# 23	[c=4]movsi_push_pop
	store4! &3

	# epilogue
	store8! &0 #set_sp! &1
	return

# FUNCTION ENDS:fiprintf

#	IMPORT _impure_ptr
#	IMPORT _vfiprintf_r
#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: o93a058
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"fputwc.c"
#	.text
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+ind push
	#peephole zero_extend
	#peephole 1
	#peephole nop+pusharg
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole pop+pusharg
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole move+push(pushable)
	#peephole move+push(pushable)
	#peephole 1
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole popdi(deadreg)+push
	#peephole and+pophi

# FUNCTION BEGINS:__fputwc
	EXPORT	__fputwc
__fputwc:
	# prologue (6 GPRs)

	set_sp! &-7

	load8! &10	# 4	[c=2]movdi_push_pop
	store8! &4 	#X3
	# variadic *call_value
	call! __locale_mb_cur_max		# 12	[c=5]*call_value/0

	# CBRANCH	# 14	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	push! 1	
	xor	
	push! 1	
	lt_u	
	jump_zero! .L2.l_o93a058
	# END CBRANCH
	load4! &9	# 298	[c=5]movsi_to_tr_unspec/1
	add! -1		# 19	[c=4]*adddi/0
	store8! &1 	#AR	# 309	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 310	[c=12]cbranchsi4_internal
	push! 254	
	load4! &1 	#AR
	lt_u	
	not	
	jump_zero! .L2.l_o93a058
	# END CBRANCH
	load4! &9	# 296	[c=5]movsi_to_tr_unspec/1
	store8! &2 	#X1	# 30	[c=4]movqi_from_tr_unspec/0
	load1! &1 	#X1	# 32	[c=4]movqi_push_pop
	store1! &7
	push! 1		# 6	[c=4]movdi_push_pop
	store8! &6 	#X5
	push! 0		# 7	[c=4]movdi_push_pop
	store8! &3 	#X2
.L10.l_o93a058:
	load8! &3 	#X3	# 83	[c=6]movsi_to_tr_unspec/2
	add! 12	
	load4	
	#	
	add! -1		# 89	[c=4]*adddi/0
	store8! &1 	#AR	# 302	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 303	[c=5]movsi_to_tr_unspec/1
	load8! &4 	#X3	# 98	[c=4]movsi_from_tr_unspec/1
	add! 12	
	store4	
	#	
	# CBRANCH	# 100	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	add! -2147483648	
	push! 0	
	add! -2147483648	
	lt_u	
	jump_zero! .L7.l_o93a058
	# END CBRANCH
	load8! &3 	#X3	# 102	[c=6]movsi_to_tr_unspec/2
	add! 40	
	load4	
	#	
	store8! &5 	#X4	# 104	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 106	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	add! -2147483648	
	load4! &5 	#X4
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L8.l_o93a058
	# END CBRANCH
	# CBRANCH EQ	# 108	[c=12]cbranchqi4_internal
	load1! &1 	#X1
	push! 10	
	xor	
	jump_zero! .L8.l_o93a058
	# END CBRANCH
.L7.l_o93a058:
	load8! &3 	#X3	# 111	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	store8! &1 	#AR	# 113	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 115	[c=5]movdi_to_tr_unspec/1
	add! 1		# 117	[c=4]*adddi/0
	load8! &4 	#X3	# 122	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load1! &1 	#X1	# 124	[c=5]movqi_to_tr_unspec/1
	load8! &1 	#AR	# 126	[c=4]movqi_from_tr_unspec/1
	store1	
	#	
.L9.l_o93a058:
	load8! &2 	#X2	# 154	[c=5]movdi_to_tr_unspec/1
	add! 1		# 156	[c=4]*adddi/0
	store8! &3 	#X2	# 157	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 160	[c=12]cbranchdi4_internal
	load8! &2 	#X2
	load8! &6 	#X5
	lt_u	
	jump_zero! .L6.l_o93a058
	# END CBRANCH
	push! &0		# 255	[c=4]movdi_to_tr_unspec/1
	add! 48		# 262	[c=4]*adddi/0
	load8! &3 	#X2	# 169	[c=6]*adddi/2
	add
	load1		# 264	[c=4]*peep2_mov_from_mem_tr_to_tr_ind_pushqi_unspec
	store8! &2 	#X1	# 174	[c=4]movqi_from_tr_unspec/0
	jump! .L10.l_o93a058		# 326	[c=4]jump
.L2.l_o93a058:
	load8! &3 	#X3	# 37	[c=5]movdi_to_tr_unspec/1
	add! 160		# 39	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 277	[c=0]*peep2_pop_pusharg
	load4! &10	# 43	[c=2]pushsi1_not_fp/1
	push! &0		# 286	[c=4]movdi_to_tr_unspec/1
	add! 64		# 293	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 295	[c=0]*peep2_pop_pusharg
	load8! &11	# 50	[c=2]pushdi1_not_fp/1
	call! _wcrtomb_r		# 51	[c=0]*call_value_pop_1/0
	store8! &4

	set_sp! &3
	load8! &0 	#AR	# 52	[c=4]movdi_push_pop
	store8! &6 	#X5
	# CBRANCH EQ	# 53	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	push! -1	
	xor	
	jump_zero! .L20.l_o93a058
	# END CBRANCH
	# CBRANCH EQ0	# 76	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L6.l_o93a058
	# END CBRANCH
	load1! &6	# 78	[c=2]movqi_push_pop
	store8! &2 	#X1
	push! 0		# 317	[c=4]movdi_push_pop
	store8! &3 	#X2
	jump! .L10.l_o93a058		# 329	[c=4]jump
.L8.l_o93a058:
	load1! &1 	#X1	# 266	[c=5]movqi_to_tr_unspec/1
	store8! &1 	#AR	# 268	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 270	[c=4]pushdi1_not_fp/1
	load4! &1 	#AR	# 142	[c=4]pushsi1_not_fp/1
	load8! &10	# 143	[c=2]pushdi1_not_fp/1
	call! __swbuf_r		# 144	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	# CBRANCH	# 146	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	push! 4294967295	
	xor	
	push! 1	
	lt_u	
	jump_zero! .L9.l_o93a058
	# END CBRANCH
	push! -1		# 9	[c=4]movsi_push_pop
	store8! &1 	#AR
	load4! &0 	#AR	# 187	[c=4]movsi_push_pop
	store4! &9
	jump! .L21.l_o93a058		# 332	[c=4]jump
.L6.l_o93a058:
	load4! &9	# 181	[c=2]movsi_push_pop
	store8! &1 	#AR
	load4! &0 	#AR	# 320	[c=4]movsi_push_pop
	store4! &9
	jump! .L21.l_o93a058		# 334	[c=4]jump
.L20.l_o93a058:
	load8! &3 	#X3	# 55	[c=6]movhi_to_tr_unspec/2
	add! 16	
	load2	
	#	
	or! 0x40		# 61	[c=4]*iordi3/0
	load8! &4 	#X3	# 313	[c=4]movhi_from_tr_unspec/1
	add! 16	
	store2	
	#	
	push! -1		# 8	[c=4]movsi_push_pop
	store8! &1 	#AR
	load4! &0 	#AR	# 323	[c=4]movsi_push_pop
	store4! &9
.L21.l_o93a058:

	# epilogue
	set_sp! &7
	return

# FUNCTION ENDS:__fputwc

	#peephole 1
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole 1
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole popdi(deadreg)+push
	#peephole and+pophi
	#peephole popdi(deadreg)+push
	#peephole and+popsi

# FUNCTION BEGINS:_fputwc_r
	EXPORT	_fputwc_r
_fputwc_r:
	# prologue (3 GPRs)
	push! 0
	push! 0
	push! 0

	load8! &6	# 4	[c=2]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 8	[c=6]movhi_to_tr_unspec/2
	add! 16	
	load2	
	#	
	store8! &2 	#X1	# 10	[c=4]movhi_from_tr_unspec/0
	load8! &1 	#X1	# 12	[c=5]movdi_to_tr_unspec/1
	and! 0x2000		# 14	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=2)
	and! 65535		# 82	[c=12]*peep2_cbranchhi
	# - EQ0
	jump_not_zero! .L23.l_o93a058
	# END CBRANCH
	load8! &1 	#X1	# 23	[c=5]movdi_to_tr_unspec/1
	or! 0x2000		# 25	[c=4]*iordi3/0
	load8! &1 	#AR	# 85	[c=4]movhi_from_tr_unspec/1
	add! 16	
	store2	
	#	
	load8! &0 	#AR	# 36	[c=6]movsi_to_tr_unspec/2
	add! 176	
	load4	
	#	
	or! 0x2000		# 42	[c=4]*iordi3/0
	load8! &1 	#AR	# 88	[c=4]movsi_from_tr_unspec/1
	add! 176	
	store4	
	#	
.L23.l_o93a058:
	load8! &0 	#AR	# 55	[c=4]pushdi1_not_fp/1
	load4! &6	# 56	[c=2]pushsi1_not_fp/1
	load8! &6	# 57	[c=2]pushdi1_not_fp/1
	call! __fputwc		# 58	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	load4! &0 	#AR	# 63	[c=4]movsi_push_pop
	store4! &5

	# epilogue
	set_sp! &3
	return

# FUNCTION ENDS:_fputwc_r

	#peephole 1
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole 1
	#peephole pop+cmp
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole popdi(deadreg)+push
	#peephole and+pophi
	#peephole popdi(deadreg)+push
	#peephole and+popsi

# FUNCTION BEGINS:fputwc
	EXPORT	fputwc
fputwc:
	# prologue (4 GPRs)
	push! 0
	push! 0
	push! 0
	push! 0

	load8! &6	# 3	[c=2]movdi_push_pop
	store8! &3 	#X2
	load8! _impure_ptr	# 7	[c=1]movdi_push_pop
	store8! &4 	#X3
	# CBRANCH EQ0	# 8	[c=12]cbranchdi4_internal
	load8! &3 	#X3
	jump_zero! .L27.l_o93a058
	# END CBRANCH
	load8! &3 	#X3	# 10	[c=6]movsi_to_tr_unspec/2
	add! 80	
	load4	
	#	
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 91	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L34.l_o93a058
	# END CBRANCH
.L27.l_o93a058:
	load8! &2 	#X2	# 20	[c=6]movhi_to_tr_unspec/2
	add! 16	
	load2	
	#	
	store8! &1 	#AR	# 22	[c=4]movhi_from_tr_unspec/0
	load8! &0 	#AR	# 24	[c=5]movdi_to_tr_unspec/1
	and! 0x2000		# 26	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=2)
	and! 65535		# 101	[c=12]*peep2_cbranchhi
	# - EQ0
	jump_not_zero! .L28.l_o93a058
	# END CBRANCH
	load8! &0 	#AR	# 35	[c=5]movdi_to_tr_unspec/1
	or! 0x2000		# 37	[c=4]*iordi3/0
	load8! &3 	#X2	# 104	[c=4]movhi_from_tr_unspec/1
	add! 16	
	store2	
	#	
	load8! &2 	#X2	# 48	[c=6]movsi_to_tr_unspec/2
	add! 176	
	load4	
	#	
	or! 0x2000		# 54	[c=4]*iordi3/0
	load8! &3 	#X2	# 107	[c=4]movsi_from_tr_unspec/1
	add! 176	
	store4	
	#	
	jump! .L28.l_o93a058		# 111	[c=4]jump
.L34.l_o93a058:
	load8! &3 	#X3	# 16	[c=4]pushdi1_not_fp/1
	call! __sinit		# 17	[c=5]*call_pop_0/0
	set_sp! (+ &0 8)
	

	jump! .L27.l_o93a058		# 113	[c=4]jump
.L28.l_o93a058:
	load8! &2 	#X2	# 67	[c=4]pushdi1_not_fp/1
	load4! &6	# 68	[c=2]pushsi1_not_fp/1
	load8! &5 	#X3	# 69	[c=4]pushdi1_not_fp/1
	call! __fputwc		# 70	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	load4! &0 	#AR	# 75	[c=4]movsi_push_pop
	store4! &6

	# epilogue
	set_sp! &4
	return

# FUNCTION ENDS:fputwc

#	IMPORT __sinit
#	IMPORT _impure_ptr
#	IMPORT __swbuf_r
#	IMPORT _wcrtomb_r
#	IMPORT __locale_mb_cur_max
#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: oc3ad53
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"mallocr.c"
#	.text
	#peephole binop1+deadreg+binop2
	#peephole move
	#peephole move
	#peephole move_dead
	#peephole move+push(pushable)
	#peephole pop+push+sub
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole move
	#peephole pop+pusharg
	#peephole push+pop+deadreg+binop
	#peephole pop+cmp
	#peephole move
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole redundant blockage insn
	#peephole nop+set
	#peephole nop+set
	#peephole pop+move2(deadreg)
	#peephole pop+move2(deadreg)

# FUNCTION BEGINS:_malloc_trim_r
	EXPORT	_malloc_trim_r
_malloc_trim_r:
	# prologue (4 GPRs)
	push! 0
	push! 0
	push! 0
	push! 0

	load8! &5	# 9	[c=2]pushdi1_not_fp/1
	call! __malloc_lock		# 10	[c=5]*call_pop_0/0
	set_sp! (+ &0 8)
	

	load8! (+ __malloc_av_ 16)	# 229	[c=1]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 230	[c=11]movdi_to_tr_unspec/2
	add! 8	
	load8	
	#	
	and! 0xfffffffffffffffc		# 232	[c=4]*anddi3/0
	store8! &3 	#X2	# 233	[c=4]movdi_from_tr_unspec/0
	push! 4063		# 27	[c=3]movdi_to_tr_unspec/0
	load8! &7	# 29	[c=14]*subdi3/1
	sub
	load8! &3 	#X2	# 235	[c=6]*adddi/2
	add
	shift_ru! 12	# 39	[c=40]*lshrdi3/0
	add! -1		# 44	[c=4]*adddi/0
	shift_l! 12	# 49	[c=8]*ashldi3/0
	store8! &4 	#X3	# 50	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 53	[c=12]cbranchdi4_internal
	push! 4095	
	add! -9223372036854775808	
	load8! &4 	#X3
	add! -9223372036854775808	
	lt_u	
	jump_zero! .L4.l_oc3ad53
	# END CBRANCH
	push! 0		# 61	[c=4]pushdi1_not_fp/0
	load8! &6	# 62	[c=2]pushdi1_not_fp/1
	call! _sbrk_r		# 63	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load8! (+ __malloc_av_ 16)	# 224	[c=4]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 226	[c=6]*adddi/2
	add
	# CBRANCH - peep (modesize=8)
	# - EQ
	load8! &1 	#AR	# 228	[c=12]*peep2_cbranchdi
	xor	
	jump_zero! .L8.l_oc3ad53
	# END CBRANCH
.L4.l_oc3ad53:
	load8! &5	# 55	[c=2]pushdi1_not_fp/1
	call! __malloc_unlock		# 56	[c=5]*call_pop_0/0
	set_sp! (+ &0 8)
	

	push! 0		# 5	[c=4]movsi_push_pop
	store8! &1 	#AR
.L1.l_oc3ad53:
	load4! &0 	#AR	# 190	[c=4]movsi_push_pop
	store4! &6
	jump! .L9.l_oc3ad53		# 258	[c=4]jump
.L8.l_oc3ad53:
	load8! &3 	#X3	# 78	[c=5]movdi_to_tr_unspec/1
	neg		# 80	[c=3]*negdi2
	#peep - pop(deadreg)+pusharg	# 223	[c=0]*peep2_pop_pusharg
	load8! &6	# 84	[c=2]pushdi1_not_fp/1
	call! _sbrk_r		# 85	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH EQ	# 87	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	push! -1	
	xor	
	jump_zero! .L10.l_oc3ad53
	# END CBRANCH
	load8! &2 	#X2	# 202	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 204	[c=14]*subdi3/2
	sub
	or! 0x1		# 205	[c=4]*iordi3/0
	store8! &2 	#X1	# 206	[c=4]movdi_from_tr_unspec/0
	load8! (+ __malloc_av_ 16)	# 207	[c=1]movdi_push_pop
	store8! &1 	#AR
	load8! &1 	#X1	# 150	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 152	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load4! __malloc_current_mallinfo	# 208	[c=1]movsi_push_pop
	store8! &2 	#X1
	load4! &3 	#X3	# 210	[c=5]movsi_to_tr_unspec/1
	load8! &2 	#X1	# 213	[c=14]*subdi3/2
	sub
	neg		# 214	[c=4]*neg_tr
	store4! __malloc_current_mallinfo	# 243	[c=4]movsi_from_tr_unspec/0
	load8! &5	# 183	[c=2]pushdi1_not_fp/1
	call! __malloc_unlock		# 184	[c=5]*call_pop_0/0
	set_sp! (+ &0 8)
	

	push! 1		# 6	[c=4]movsi_push_pop
	store8! &1 	#AR
	load4! &0 	#AR	# 248	[c=4]movsi_push_pop
	store4! &6
	jump! .L9.l_oc3ad53		# 261	[c=4]jump
.L10.l_oc3ad53:
	push! 0		# 89	[c=4]pushdi1_not_fp/0
	load8! &6	# 90	[c=2]pushdi1_not_fp/1
	call! _sbrk_r		# 91	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load8! (+ __malloc_av_ 16)	# 221	[c=1]movdi_push_pop
	store8! &2 	#X1
	load8! &0 	#AR	# 98	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 100	[c=14]*subdi3/2
	sub
	store8! &3 	#X2	# 101	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 103	[c=12]cbranchdi4_internal
	push! 31	
	add! -9223372036854775808	
	load8! &3 	#X2
	add! -9223372036854775808	
	lt_u	
	jump_zero! .L4.l_oc3ad53
	# END CBRANCH
	load8! &0 	#AR	# 106	[c=5]movdi_to_tr_unspec/1
	load8! __malloc_sbrk_base	# 108	[c=13]*subdi3/1
	sub
	store4! __malloc_current_mallinfo	# 244	[c=4]movsi_from_tr_unspec/0
	load8! &2 	#X2	# 120	[c=5]movdi_to_tr_unspec/1
	or! 0x1		# 122	[c=4]*iordi3/0
	load8! &2 	#X1	# 128	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &5	# 251	[c=2]pushdi1_not_fp/1
	call! __malloc_unlock		# 252	[c=5]*call_pop_0/0
	set_sp! (+ &0 8)
	

	push! 0		# 253	[c=4]movsi_push_pop
	store8! &1 	#AR
	jump! .L1.l_oc3ad53		# 263	[c=4]jump
.L9.l_oc3ad53:

	# epilogue
	set_sp! &4
	return

# FUNCTION ENDS:_malloc_trim_r

	#peephole pop(deadreg)+push
	#peephole push+pop+deadreg+binop
	#peephole pop+cmp
	#peephole push+add+pop+push+ind pop offset
	#peephole rdx1+rdx2 (+)
	#peephole push+pop+deadreg+binop
	#peephole move
	#peephole unary+deadreg+binop
	#peephole 1
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+ind push offset
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move
	#peephole move+binop
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move
	#peephole move+binop
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move
	#peephole move+binop
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move
	#peephole move+binop
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move
	#peephole move+binop
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole 1
	#peephole move
	#peephole unary+deadreg+binop
	#peephole 1
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole move
	#peephole move+binop
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole unary1+binop2+deadreg+binop3
	#peephole pop(deadreg)+ind push offset
	#peephole push+add+pop+push+ind pop offset
	#peephole rdx1+rdx2 (+)
	#peephole move
	#peephole move
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+ind push
	#peephole pop+push+commut(di)
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole pop(deadreg)+ind push
	#peephole pop+push+commut(di)
	#peephole pop+cmp
	#peephole pop(deadreg)+ind push offset
	#peephole push+pop+deadreg+binop
	#peephole move
	#peephole set+cmp
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+push(deadreg)+sign_extend
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+push(deadreg)+sign_extend
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+push(deadreg)+sign_extend
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+push(deadreg)+sign_extend
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+push(deadreg)+sign_extend
	#peephole nop+set
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+push(deadreg)+sign_extend
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push

# FUNCTION BEGINS:_free_r
	EXPORT	_free_r
_free_r:
	# prologue (8 GPRs)

	set_sp! &-8

	load8! &10	# 3	[c=2]movdi_push_pop
	store8! &3 	#X2
	# CBRANCH EQ0	# 9	[c=12]cbranchdi4_internal
	load8! &2 	#X2
	jump_zero! .L11.l_oc3ad53
	# END CBRANCH
	load8! &9	# 11	[c=2]pushdi1_not_fp/1
	call! __malloc_lock		# 12	[c=5]*call_pop_0/0
	set_sp! (+ &0 8)
	

	load8! &2 	#X2	# 13	[c=5]movdi_to_tr_unspec/1
	add! -16		# 15	[c=4]*adddi/0
	store8! &2 	#X1	# 16	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 19	[c=5]movdi_to_tr_unspec/1
	add! -16		# 21	[c=4]*adddi/0
	add! 8	# 1205	[c=4]*peep2_mov_from_mem_tr_to_tr_ind_offset_pushdi_unspec
	load8
	store8! &6 	#X5	# 26	[c=4]movdi_from_tr_unspec/0
	load8! &5 	#X5	# 28	[c=5]movdi_to_tr_unspec/1
	and! 0xfffffffffffffffe		# 30	[c=4]*anddi3/0
	store8! &1 	#AR	# 31	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 33	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 35	[c=6]*adddi/2
	add
	store8! &4 	#X3	# 36	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 1207	[c=11]movdi_to_tr_unspec/2
	add! 8	
	load8	
	#	
	and! 0xfffffffffffffffc		# 1209	[c=4]*anddi3/0
	store8! &5 	#X4	# 1210	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ	# 1212	[c=13]cbranchdi4_internal
	load8! (+ __malloc_av_ 16)
	load8! &4 	#X3
	xor	
	jump_zero! .L45.l_oc3ad53
	# END CBRANCH
	load8! &4 	#X4	# 154	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 156	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &5 	#X5	# 158	[c=5]movdi_to_tr_unspec/1
	and! 0x1		# 160	[c=4]*anddi3/0
	store8! &6 	#X5	# 161	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 163	[c=5]movdi_to_tr_unspec/1
	load8! &5 	#X4	# 165	[c=6]*adddi/2
	add
	store8! &7 	#X6	# 166	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 168	[c=12]cbranchdi4_internal
	load8! &5 	#X5
	jump_not_zero! .L17.l_oc3ad53
	# END CBRANCH
	load8! &2 	#X2	# 171	[c=5]movdi_to_tr_unspec/1
	add! -16		# 173	[c=4]*adddi/0
	load8		# 1188	[c=4]*peep2_mov_from_mem_tr_to_tr_ind_pushdi_unspec
	store8! &3 	#X2	# 178	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 180	[c=5]movdi_to_tr_unspec/1
	neg		# 182	[c=3]*negdi2
	load8! &2 	#X1	# 1191	[c=6]*adddi/2
	add
	store8! &6 	#X5	# 1192	[c=4]movdi_from_tr_unspec/0
	load8! &5 	#X5	# 195	[c=4]movdi_push_pop
	store8! &2 	#X1
	load8! &0 	#AR	# 201	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 203	[c=6]*adddi/2
	add
	store8! &8 	#X7	# 204	[c=4]movdi_from_tr_unspec/0
	load8! &7 	#X7	# 206	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &5 	#X5	# 207	[c=11]movdi_to_tr_unspec/2
	add! 16	
	load8	
	#	
	store8! &3 	#X2	# 209	[c=4]movdi_from_tr_unspec/0
	load8! &6 	#X6	# 1193	[c=11]movdi_to_tr_unspec/2
	add! 8	
	load8	
	#	
	and! 0x1		# 1195	[c=4]*anddi3/0
	store8! &7 	#X6	# 1196	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ	# 220	[c=12]cbranchdi4_internal
	load8! &2 	#X2
	push! (+ __malloc_av_ 16)	
	xor	
	jump_zero! .L18.l_oc3ad53
	# END CBRANCH
	load8! &5 	#X5	# 222	[c=11]movdi_to_tr_unspec/2
	add! 24	
	load8	
	#	
	store8! &6 	#X5	# 224	[c=4]movdi_from_tr_unspec/0
	load8! &5 	#X5	# 226	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 228	[c=4]movdi_from_tr_unspec/1
	add! 24	
	store8	
	#	
	load8! &2 	#X2	# 230	[c=5]movdi_to_tr_unspec/1
	load8! &6 	#X5	# 232	[c=4]movdi_from_tr_unspec/1
	add! 16	
	store8	
	#	
	# CBRANCH EQ0	# 234	[c=12]cbranchdi4_internal
	load8! &6 	#X6
	jump_zero! .L19.l_oc3ad53
	# END CBRANCH
	load8! &7 	#X7	# 236	[c=5]movdi_to_tr_unspec/1
	or! 0x1		# 238	[c=4]*iordi3/0
	load8! &2 	#X1	# 243	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &7 	#X7	# 245	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 247	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
.L20.l_oc3ad53:
	# CBRANCH	# 310	[c=12]cbranchdi4_internal
	push! 511	
	load8! &1 	#AR
	lt_u	
	not	
	jump_zero! .L22.l_oc3ad53
	# END CBRANCH
.L48.l_oc3ad53:
	load8! &0 	#AR	# 312	[c=5]movdi_to_tr_unspec/1
	shift_ru! 3	# 314	[c=40]*lshrdi3/0
	store8! &1 	#AR	# 315	[c=4]movdi_from_tr_unspec/0
	load8! (+ __malloc_av_ 8)	# 1279	[c=1]movdi_push_pop
	store8! &4 	#X3
	load4! &0 	#AR	# 1144	[c=5]movsi_to_tr_unspec/1
	sigx4		# 1146	[c=6]*extendsidi2
	shift_rs! 2	# 1147	[c=40]*ashrdi3/0
	and! 0xffffffff		# 1292	[c=4]*anddi3/0
	store8! &3 	#X2	# 1152	[c=4]movdi_from_tr_unspec/0
	push! 1		# 345	[c=3]movdi_to_tr_unspec/0
	load8! &3 	#X2	# 347	[c=10]*ashldi3/2
	shift_l
	load8! &4 	#X3	# 1154	[c=6]*iordi3/2
	or
	store8! (+ __malloc_av_ 8)	# 358	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 360	[c=5]movdi_to_tr_unspec/1
	add! 1		# 362	[c=4]*adddi/0
	store8! &1 	#AR	# 1283	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 1284	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 1161	[c=6]*adddi/2
	add
	sigx4		# 1289	[c=6]*extendsidi2
	shift_l! 3	# 1172	[c=8]*ashldi3/0
	add! __malloc_av_		# 1173	[c=4]*adddi/0
	store8! &1 	#AR	# 1174	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 397	[c=5]movdi_to_tr_unspec/1
	add! -16		# 399	[c=4]*adddi/0
	store8! &4 	#X3	# 400	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 403	[c=5]movdi_to_tr_unspec/1
	add! -16		# 405	[c=4]*adddi/0
	add! 16	# 1175	[c=4]*peep2_mov_from_mem_tr_to_tr_ind_offset_pushdi_unspec
	load8
	store8! &3 	#X2	# 410	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 412	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 414	[c=4]movdi_from_tr_unspec/1
	add! 24	
	store8	
	#	
	load8! &2 	#X2	# 416	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 418	[c=4]movdi_from_tr_unspec/1
	add! 16	
	store8	
	#	
	load8! &1 	#X1	# 1177	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 1179	[c=5]movdi_to_tr_unspec/1
	add! 0		# 1184	[c=4]*adddi/0
	store8		# 1183	[c=4]*peep2_mov_from_tr_to_mem_tr_ind_popdi_unspec
	load8! &1 	#X1	# 430	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 432	[c=4]movdi_from_tr_unspec/1
	add! 24	
	store8	
	#	
.L16.l_oc3ad53:
	load8! &9	# 148	[c=2]pushdi1_not_fp/1
	call! __malloc_unlock		# 149	[c=5]*call_pop_0/0
	set_sp! (+ &0 8)
	

	jump! .L11.l_oc3ad53		# 1419	[c=4]jump
.L17.l_oc3ad53:
	load8! &6 	#X6	# 1039	[c=11]movdi_to_tr_unspec/2
	add! 8	
	load8	
	#	
	and! 0x1		# 1041	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_not_zero! .L46.l_oc3ad53	# 1043	[c=12]*peep2_cbranchdi
	# END CBRANCH
	load8! &0 	#AR	# 257	[c=5]movdi_to_tr_unspec/1
	load8! &5 	#X4	# 259	[c=6]*adddi/2
	add
	store8! &1 	#AR	# 260	[c=4]movdi_from_tr_unspec/0
.L32.l_oc3ad53:
	load8! &3 	#X3	# 264	[c=11]movdi_to_tr_unspec/2
	add! 16	
	load8	
	#	
	store8! &3 	#X2	# 266	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 268	[c=5]movdi_to_tr_unspec/1
	or! 0x1		# 270	[c=4]*iordi3/0
	store8! &6 	#X5	# 271	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 273	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 275	[c=6]*adddi/2
	add
	store8! &5 	#X4	# 276	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ	# 278	[c=12]cbranchdi4_internal
	load8! &2 	#X2
	push! (+ __malloc_av_ 16)	
	xor	
	jump_zero! .L47.l_oc3ad53
	# END CBRANCH
	load8! &3 	#X3	# 958	[c=11]movdi_to_tr_unspec/2
	add! 24	
	load8	
	#	
	store8! &4 	#X3	# 960	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 962	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 964	[c=4]movdi_from_tr_unspec/1
	add! 24	
	store8	
	#	
	load8! &2 	#X2	# 966	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 968	[c=4]movdi_from_tr_unspec/1
	add! 16	
	store8	
	#	
	load8! &5 	#X5	# 970	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 972	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &0 	#AR	# 974	[c=5]movdi_to_tr_unspec/1
	load8! &5 	#X4	# 976	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	# CBRANCH	# 1297	[c=12]cbranchdi4_internal
	push! 511	
	load8! &1 	#AR
	lt_u	
	jump_zero! .L48.l_oc3ad53
	# END CBRANCH
.L22.l_oc3ad53:
	load8! &0 	#AR	# 438	[c=5]movdi_to_tr_unspec/1
	shift_ru! 9	# 440	[c=40]*lshrdi3/0
	store8! &3 	#X2	# 441	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 443	[c=12]cbranchdi4_internal
	push! 4	
	load8! &3 	#X2
	lt_u	
	not	
	jump_zero! .L23.l_oc3ad53
	# END CBRANCH
	load8! &0 	#AR	# 445	[c=5]movdi_to_tr_unspec/1
	shift_ru! 6	# 447	[c=40]*lshrdi3/0
	store8! &3 	#X2	# 1266	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 1267	[c=5]movdi_to_tr_unspec/1
	add! 56		# 456	[c=4]*adddi/0
	store8! &4 	#X3	# 1269	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 1270	[c=5]movdi_to_tr_unspec/1
	add! 57		# 466	[c=4]*adddi/0
	store8! &3 	#X2	# 1272	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 1273	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 1134	[c=6]*adddi/2
	add
	sigx4		# 1278	[c=6]*extendsidi2
	shift_l! 3	# 1140	[c=8]*ashldi3/0
	store8! &3 	#X2	# 1141	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 726	[c=5]movdi_to_tr_unspec/1
	add! __malloc_av_		# 728	[c=4]*adddi/0
	store8! &3 	#X2	# 729	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 731	[c=5]movdi_to_tr_unspec/1
	add! -16		# 733	[c=4]*adddi/0
	store8! &5 	#X4	# 734	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 737	[c=5]movdi_to_tr_unspec/1
	add! -16		# 739	[c=4]*adddi/0
	add! 16	# 1070	[c=4]*peep2_mov_from_mem_tr_to_tr_ind_offset_pushdi_unspec
	load8
	store8! &3 	#X2	# 744	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ	# 746	[c=12]cbranchdi4_internal
	load8! &4 	#X4
	load8! &3 	#X2
	xor	
	jump_zero! .L49.l_oc3ad53
	# END CBRANCH
.L28.l_oc3ad53:
	load8! &2 	#X2	# 1052	[c=11]movdi_to_tr_unspec/2
	add! 8	
	load8	
	#	
	and! 0xfffffffffffffffc		# 1054	[c=4]*anddi3/0
	store8! &4 	#X3	# 1055	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 807	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	load8! &4 	#X3
	lt_u	
	jump_zero! .L30.l_oc3ad53
	# END CBRANCH
	load8! &2 	#X2	# 790	[c=11]movdi_to_tr_unspec/2
	add! 16	
	load8	
	#	
	store8! &3 	#X2	# 792	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 794	[c=12]cbranchdi4_internal
	load8! &4 	#X4
	load8! &3 	#X2
	xor	
	push! 1	
	lt_u	
	jump_zero! .L28.l_oc3ad53
	# END CBRANCH
.L30.l_oc3ad53:
	load8! &2 	#X2	# 810	[c=11]movdi_to_tr_unspec/2
	add! 24	
	load8	
	#	
	store8! &5 	#X4	# 812	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 816	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 818	[c=4]movdi_from_tr_unspec/1
	add! 24	
	store8	
	#	
	load8! &2 	#X2	# 820	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 822	[c=4]movdi_from_tr_unspec/1
	add! 16	
	store8	
	#	
	load8! &1 	#X1	# 824	[c=5]movdi_to_tr_unspec/1
	load8! &5 	#X4	# 826	[c=4]movdi_from_tr_unspec/1
	add! 16	
	store8	
	#	
	load8! &1 	#X1	# 828	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 830	[c=4]movdi_from_tr_unspec/1
	add! 24	
	store8	
	#	
.L52.l_oc3ad53:
	load8! &9	# 1300	[c=2]pushdi1_not_fp/1
	call! __malloc_unlock		# 1301	[c=5]*call_pop_0/0
	set_sp! (+ &0 8)
	

	jump! .L11.l_oc3ad53		# 1425	[c=4]jump
.L46.l_oc3ad53:
	load8! &0 	#AR	# 855	[c=5]movdi_to_tr_unspec/1
	or! 0x1		# 857	[c=4]*iordi3/0
	load8! &3 	#X2	# 1046	[c=5]movdi_to_tr_unspec/1
	add! -8		# 1051	[c=4]*adddi/0
	store8		# 1050	[c=4]*peep2_mov_from_tr_to_mem_tr_ind_popdi_unspec
	load8! &0 	#AR	# 870	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 872	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	jump! .L20.l_oc3ad53		# 1427	[c=4]jump
.L18.l_oc3ad53:
	# CBRANCH EQ0	# 939	[c=12]cbranchdi4_internal
	load8! &6 	#X6
	jump_not_zero! .L50.l_oc3ad53
	# END CBRANCH
	load8! &4 	#X4	# 894	[c=5]movdi_to_tr_unspec/1
	load8! &8 	#X7	# 896	[c=6]*adddi/2
	add
	store8! &1 	#AR	# 897	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 899	[c=11]movdi_to_tr_unspec/2
	add! 16	
	load8	
	#	
	store8! &3 	#X2	# 901	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 903	[c=5]movdi_to_tr_unspec/1
	or! 0x1		# 905	[c=4]*iordi3/0
	store8! &7 	#X6	# 906	[c=4]movdi_from_tr_unspec/0
	load8! &5 	#X5	# 908	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 910	[c=6]*adddi/2
	add
	store8! &5 	#X4	# 911	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 913	[c=11]movdi_to_tr_unspec/2
	add! 24	
	load8	
	#	
	store8! &2 	#X1	# 915	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 917	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 919	[c=4]movdi_from_tr_unspec/1
	add! 24	
	store8	
	#	
	load8! &2 	#X2	# 921	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 923	[c=4]movdi_from_tr_unspec/1
	add! 16	
	store8	
	#	
	load8! &6 	#X6	# 925	[c=5]movdi_to_tr_unspec/1
	load8! &6 	#X5	# 927	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &0 	#AR	# 929	[c=5]movdi_to_tr_unspec/1
	load8! &5 	#X4	# 931	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load8! &9	# 1304	[c=2]pushdi1_not_fp/1
	call! __malloc_unlock		# 1305	[c=5]*call_pop_0/0
	set_sp! (+ &0 8)
	

	jump! .L11.l_oc3ad53		# 1430	[c=4]jump
.L45.l_oc3ad53:
	load8! &0 	#AR	# 54	[c=5]movdi_to_tr_unspec/1
	load8! &5 	#X4	# 56	[c=6]*adddi/2
	add
	store8! &1 	#AR	# 57	[c=4]movdi_from_tr_unspec/0
	load8! &5 	#X5	# 59	[c=5]movdi_to_tr_unspec/1
	and! 0x1		# 61	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_not_zero! .L14.l_oc3ad53	# 1204	[c=12]*peep2_cbranchdi
	# END CBRANCH
	load8! &2 	#X2	# 67	[c=5]movdi_to_tr_unspec/1
	add! -16		# 69	[c=4]*adddi/0
	load8		# 1199	[c=4]*peep2_mov_from_mem_tr_to_tr_ind_pushdi_unspec
	store8! &3 	#X2	# 74	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 76	[c=5]movdi_to_tr_unspec/1
	neg		# 78	[c=3]*negdi2
	load8! &2 	#X1	# 1202	[c=6]*adddi/2
	add
	store8! &2 	#X1	# 1203	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 97	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 99	[c=6]*adddi/2
	add
	store8! &1 	#AR	# 100	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 103	[c=11]movdi_to_tr_unspec/2
	add! 24	
	load8	
	#	
	store8! &3 	#X2	# 105	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 107	[c=11]movdi_to_tr_unspec/2
	add! 16	
	load8	
	#	
	store8! &4 	#X3	# 109	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 111	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 113	[c=4]movdi_from_tr_unspec/1
	add! 24	
	store8	
	#	
	load8! &3 	#X3	# 115	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 117	[c=4]movdi_from_tr_unspec/1
	add! 16	
	store8	
	#	
.L14.l_oc3ad53:
	load8! &0 	#AR	# 121	[c=5]movdi_to_tr_unspec/1
	or! 0x1		# 123	[c=4]*iordi3/0
	load8! &2 	#X1	# 128	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &1 	#X1	# 1198	[c=4]movdi_push_pop
	store8! (+ __malloc_av_ 16)
	# CBRANCH	# 136	[c=13]cbranchdi4_internal
	load8! &0 	#AR
	load8! __malloc_trim_threshold
	lt_u	
	not	
	jump_zero! .L16.l_oc3ad53
	# END CBRANCH
	load8! __malloc_top_pad	# 143	[c=1]pushdi1_not_fp/1
	load8! &10	# 144	[c=2]pushdi1_not_fp/1
	call! _malloc_trim_r		# 145	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load8! &9	# 1308	[c=2]pushdi1_not_fp/1
	call! __malloc_unlock		# 1309	[c=5]*call_pop_0/0
	set_sp! (+ &0 8)
	

	jump! .L11.l_oc3ad53		# 1432	[c=4]jump
.L23.l_oc3ad53:
	# CBRANCH	# 501	[c=12]cbranchdi4_internal
	push! 20	
	load8! &3 	#X2
	lt_u	
	jump_zero! .L51.l_oc3ad53
	# END CBRANCH
	# CBRANCH	# 554	[c=12]cbranchdi4_internal
	push! 84	
	load8! &3 	#X2
	lt_u	
	not	
	jump_zero! .L26.l_oc3ad53
	# END CBRANCH
	load8! &0 	#AR	# 556	[c=5]movdi_to_tr_unspec/1
	shift_ru! 12	# 558	[c=40]*lshrdi3/0
	store8! &3 	#X2	# 1243	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 1244	[c=5]movdi_to_tr_unspec/1
	add! 110		# 567	[c=4]*adddi/0
	store8! &4 	#X3	# 1246	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 1247	[c=5]movdi_to_tr_unspec/1
	add! 111		# 577	[c=4]*adddi/0
	store8! &3 	#X2	# 1249	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 1250	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 1106	[c=6]*adddi/2
	add
	sigx4		# 1255	[c=6]*extendsidi2
	shift_l! 3	# 1112	[c=8]*ashldi3/0
	store8! &3 	#X2	# 1113	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 1312	[c=5]movdi_to_tr_unspec/1
	add! __malloc_av_		# 1314	[c=4]*adddi/0
	store8! &3 	#X2	# 1315	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 1316	[c=5]movdi_to_tr_unspec/1
	add! -16		# 1318	[c=4]*adddi/0
	store8! &5 	#X4	# 1319	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 1320	[c=5]movdi_to_tr_unspec/1
	add! -16		# 1322	[c=4]*adddi/0
	add! 16	# 1323	[c=4]*peep2_mov_from_mem_tr_to_tr_ind_offset_pushdi_unspec
	load8
	store8! &3 	#X2	# 1325	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 1326	[c=12]cbranchdi4_internal
	load8! &4 	#X4
	load8! &3 	#X2
	xor	
	push! 1	
	lt_u	
	jump_zero! .L28.l_oc3ad53
	# END CBRANCH
	jump! .L49.l_oc3ad53		# 1436	[c=4]jump
.L19.l_oc3ad53:
	load8! &4 	#X4	# 845	[c=5]movdi_to_tr_unspec/1
	load8! &8 	#X7	# 847	[c=6]*adddi/2
	add
	store8! &1 	#AR	# 848	[c=4]movdi_from_tr_unspec/0
	jump! .L32.l_oc3ad53		# 1438	[c=4]jump
.L49.l_oc3ad53:
	load8! (+ __malloc_av_ 8)	# 1056	[c=1]movdi_push_pop
	store8! &6 	#X5
	load4! &3 	#X3	# 1057	[c=5]movsi_to_tr_unspec/1
	sigx4		# 1059	[c=6]*extendsidi2
	shift_rs! 2	# 1060	[c=40]*ashrdi3/0
	and! 0xffffffff		# 1290	[c=4]*anddi3/0
	store8! &1 	#AR	# 1065	[c=4]movdi_from_tr_unspec/0
	push! 1		# 772	[c=3]movdi_to_tr_unspec/0
	load8! &1 	#AR	# 774	[c=10]*ashldi3/2
	shift_l
	load8! &6 	#X5	# 1067	[c=6]*iordi3/2
	or
	store8! (+ __malloc_av_ 8)	# 785	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 1329	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 1331	[c=4]movdi_from_tr_unspec/1
	add! 24	
	store8	
	#	
	load8! &2 	#X2	# 1332	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 1334	[c=4]movdi_from_tr_unspec/1
	add! 16	
	store8	
	#	
	load8! &1 	#X1	# 1335	[c=5]movdi_to_tr_unspec/1
	load8! &5 	#X4	# 1337	[c=4]movdi_from_tr_unspec/1
	add! 16	
	store8	
	#	
	load8! &1 	#X1	# 1338	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 1340	[c=4]movdi_from_tr_unspec/1
	add! 24	
	store8	
	#	
	jump! .L52.l_oc3ad53		# 1441	[c=4]jump
.L51.l_oc3ad53:
	load8! &2 	#X2	# 507	[c=5]movdi_to_tr_unspec/1
	add! 91		# 509	[c=4]*adddi/0
	store8! &4 	#X3	# 1256	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 1257	[c=5]movdi_to_tr_unspec/1
	add! 92		# 519	[c=4]*adddi/0
	store8! &3 	#X2	# 1259	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 1260	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 1120	[c=6]*adddi/2
	add
	sigx4		# 1265	[c=6]*extendsidi2
	shift_l! 3	# 1126	[c=8]*ashldi3/0
	store8! &3 	#X2	# 1127	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 1343	[c=5]movdi_to_tr_unspec/1
	add! __malloc_av_		# 1345	[c=4]*adddi/0
	store8! &3 	#X2	# 1346	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 1347	[c=5]movdi_to_tr_unspec/1
	add! -16		# 1349	[c=4]*adddi/0
	store8! &5 	#X4	# 1350	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 1351	[c=5]movdi_to_tr_unspec/1
	add! -16		# 1353	[c=4]*adddi/0
	add! 16	# 1354	[c=4]*peep2_mov_from_mem_tr_to_tr_ind_offset_pushdi_unspec
	load8
	store8! &3 	#X2	# 1356	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 1357	[c=12]cbranchdi4_internal
	load8! &4 	#X4
	load8! &3 	#X2
	xor	
	push! 1	
	lt_u	
	jump_zero! .L28.l_oc3ad53
	# END CBRANCH
	jump! .L49.l_oc3ad53		# 1444	[c=4]jump
.L47.l_oc3ad53:
	load8! &1 	#X1	# 1185	[c=4]movdi_push_pop
	store8! (+ __malloc_av_ 40)
	load8! &1 	#X1	# 1186	[c=4]movdi_push_pop
	store8! (+ __malloc_av_ 32)
	push! (+ __malloc_av_ 16)		# 290	[c=3]movdi_to_tr_unspec/0
	load8! &2 	#X1	# 292	[c=4]movdi_from_tr_unspec/1
	add! 24	
	store8	
	#	
	push! (+ __malloc_av_ 16)		# 294	[c=3]movdi_to_tr_unspec/0
	load8! &2 	#X1	# 296	[c=4]movdi_from_tr_unspec/1
	add! 16	
	store8	
	#	
	load8! &5 	#X5	# 298	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 300	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &0 	#AR	# 302	[c=5]movdi_to_tr_unspec/1
	load8! &5 	#X4	# 304	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load8! &9	# 1360	[c=2]pushdi1_not_fp/1
	call! __malloc_unlock		# 1361	[c=5]*call_pop_0/0
	set_sp! (+ &0 8)
	

	jump! .L11.l_oc3ad53		# 1446	[c=4]jump
.L26.l_oc3ad53:
	# CBRANCH	# 612	[c=12]cbranchdi4_internal
	push! 340	
	load8! &3 	#X2
	lt_u	
	not	
	jump_zero! .L27.l_oc3ad53
	# END CBRANCH
	load8! &0 	#AR	# 614	[c=5]movdi_to_tr_unspec/1
	shift_ru! 15	# 616	[c=40]*lshrdi3/0
	store8! &3 	#X2	# 1230	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 1231	[c=5]movdi_to_tr_unspec/1
	add! 119		# 625	[c=4]*adddi/0
	store8! &4 	#X3	# 1233	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 1234	[c=5]movdi_to_tr_unspec/1
	add! 120		# 635	[c=4]*adddi/0
	store8! &3 	#X2	# 1236	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 1237	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 1092	[c=6]*adddi/2
	add
	sigx4		# 1242	[c=6]*extendsidi2
	shift_l! 3	# 1098	[c=8]*ashldi3/0
	store8! &3 	#X2	# 1099	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 1364	[c=5]movdi_to_tr_unspec/1
	add! __malloc_av_		# 1366	[c=4]*adddi/0
	store8! &3 	#X2	# 1367	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 1368	[c=5]movdi_to_tr_unspec/1
	add! -16		# 1370	[c=4]*adddi/0
	store8! &5 	#X4	# 1371	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 1372	[c=5]movdi_to_tr_unspec/1
	add! -16		# 1374	[c=4]*adddi/0
	add! 16	# 1375	[c=4]*peep2_mov_from_mem_tr_to_tr_ind_offset_pushdi_unspec
	load8
	store8! &3 	#X2	# 1377	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 1378	[c=12]cbranchdi4_internal
	load8! &4 	#X4
	load8! &3 	#X2
	xor	
	push! 1	
	lt_u	
	jump_zero! .L28.l_oc3ad53
	# END CBRANCH
	jump! .L49.l_oc3ad53		# 1449	[c=4]jump
.L27.l_oc3ad53:
	# CBRANCH	# 670	[c=12]cbranchdi4_internal
	push! 1364	
	load8! &3 	#X2
	lt_u	
	not	
	jump_zero! .L37.l_oc3ad53
	# END CBRANCH
	load8! &0 	#AR	# 672	[c=5]movdi_to_tr_unspec/1
	shift_ru! 18	# 674	[c=40]*lshrdi3/0
	store8! &3 	#X2	# 1217	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 1218	[c=5]movdi_to_tr_unspec/1
	add! 124		# 683	[c=4]*adddi/0
	store8! &4 	#X3	# 1220	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 1221	[c=5]movdi_to_tr_unspec/1
	add! 125		# 693	[c=4]*adddi/0
	store8! &3 	#X2	# 1223	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 1224	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 1078	[c=6]*adddi/2
	add
	sigx4		# 1229	[c=6]*extendsidi2
	shift_l! 3	# 1084	[c=8]*ashldi3/0
	store8! &3 	#X2	# 1085	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 1381	[c=5]movdi_to_tr_unspec/1
	add! __malloc_av_		# 1383	[c=4]*adddi/0
	store8! &3 	#X2	# 1384	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 1385	[c=5]movdi_to_tr_unspec/1
	add! -16		# 1387	[c=4]*adddi/0
	store8! &5 	#X4	# 1388	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 1389	[c=5]movdi_to_tr_unspec/1
	add! -16		# 1391	[c=4]*adddi/0
	add! 16	# 1392	[c=4]*peep2_mov_from_mem_tr_to_tr_ind_offset_pushdi_unspec
	load8
	store8! &3 	#X2	# 1394	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 1395	[c=12]cbranchdi4_internal
	load8! &4 	#X4
	load8! &3 	#X2
	xor	
	push! 1	
	lt_u	
	jump_zero! .L28.l_oc3ad53
	# END CBRANCH
	jump! .L49.l_oc3ad53		# 1452	[c=4]jump
.L37.l_oc3ad53:
	push! 2032		# 5	[c=4]movdi_push_pop
	store8! &3 	#X2
	push! 126		# 6	[c=4]movsi_push_pop
	store8! &4 	#X3
	load8! &2 	#X2	# 1398	[c=5]movdi_to_tr_unspec/1
	add! __malloc_av_		# 1400	[c=4]*adddi/0
	store8! &3 	#X2	# 1401	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 1402	[c=5]movdi_to_tr_unspec/1
	add! -16		# 1404	[c=4]*adddi/0
	store8! &5 	#X4	# 1405	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 1406	[c=5]movdi_to_tr_unspec/1
	add! -16		# 1408	[c=4]*adddi/0
	add! 16	# 1409	[c=4]*peep2_mov_from_mem_tr_to_tr_ind_offset_pushdi_unspec
	load8
	store8! &3 	#X2	# 1411	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 1412	[c=12]cbranchdi4_internal
	load8! &4 	#X4
	load8! &3 	#X2
	xor	
	push! 1	
	lt_u	
	jump_zero! .L28.l_oc3ad53
	# END CBRANCH
	jump! .L49.l_oc3ad53		# 1455	[c=4]jump
.L50.l_oc3ad53:
	load8! &7 	#X7	# 941	[c=5]movdi_to_tr_unspec/1
	or! 0x1		# 943	[c=4]*iordi3/0
	load8! &6 	#X5	# 948	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &7 	#X7	# 950	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 952	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load8! &9	# 1415	[c=2]pushdi1_not_fp/1
	call! __malloc_unlock		# 1416	[c=5]*call_pop_0/0
	set_sp! (+ &0 8)
	

.L11.l_oc3ad53:

	# epilogue
	set_sp! &8
	return

# FUNCTION ENDS:_free_r

#	IMPORT __malloc_top_pad
#	IMPORT __malloc_trim_threshold
#	IMPORT __malloc_sbrk_base
#	IMPORT __malloc_current_mallinfo
#	IMPORT __malloc_unlock
#	IMPORT _sbrk_r
#	IMPORT __malloc_av_
#	IMPORT __malloc_lock
#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: o13b72d
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"fstatr.c"
#	.text

# FUNCTION BEGINS:_fstat_r
	EXPORT	_fstat_r
_fstat_r:
	# prologue (2 GPRs)
	push! 0
	push! 0

	push! 0		# 8	[c=4]movsi_push_pop
	store4! errno
	load8! &5	# 9	[c=2]pushdi1_not_fp/1
	load4! &5	# 10	[c=2]pushsi1_not_fp/1
	call! fstat		# 11	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH EQ	# 13	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	push! 4294967295	
	xor	
	jump_zero! .L8.l_o13b72d
	# END CBRANCH
.L1.l_o13b72d:
	load4! &0 	#AR	# 27	[c=4]movsi_push_pop
	store4! &4
	jump! .L9.l_o13b72d		# 49	[c=4]jump
.L8.l_o13b72d:
	load4! errno	# 15	[c=1]movsi_push_pop
	store8! &2 	#X1
	# CBRANCH EQ0	# 16	[c=12]cbranchsi4_internal
	load4! &1 	#X1
	jump_zero! .L1.l_o13b72d
	# END CBRANCH
	load4! &1 	#X1	# 18	[c=5]movsi_to_tr_unspec/1
	load8! &4	# 20	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	load4! &0 	#AR	# 44	[c=4]movsi_push_pop
	store4! &4
.L9.l_o13b72d:

	# epilogue
	set_sp! &2
	return

# FUNCTION ENDS:_fstat_r

#	IMPORT fstat
#	IMPORT errno
#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: o29df3c
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"fvwrite.c"
#	.text
	#peephole 1
	#peephole push+pop+deadreg+binop
	#peephole move
	#peephole move+push+sub
	#peephole move_dead
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+pushdi
	#peephole pop+push+commut(di)
	#peephole 1
	#peephole move_dead
	#peephole pop+cmprev
	#peephole move
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole binop1+2
	#peephole move_dead
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+sub
	#peephole 1
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+cmp
	#peephole move_dead
	#peephole move+push+sub
	#peephole 1
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole move
	#peephole move
	#peephole move_dead
	#peephole move+push+sub
	#peephole 1
	#peephole pop+pusharg
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole move_dead
	#peephole pop+push+commut(di)
	#peephole popdi+cmp rev
	#peephole move
	#peephole move+push(pushable)
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole nop+pusharg
	#peephole 1
	#peephole pop+cmp
	#peephole 1
	#peephole pop+cmp
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+push(deadreg)+sign_extend
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole and+pophi
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole and+pophi

# FUNCTION BEGINS:__sfvwrite_r
	EXPORT	__sfvwrite_r
__sfvwrite_r:
	# prologue (14 GPRs)

	set_sp! &-14

	load8! &15	# 2	[c=2]movdi_push_pop
	store8! &10 	#X9
	load8! &16	# 3	[c=2]movdi_push_pop
	store8! &3 	#X2
	load8! &17	# 4	[c=2]movdi_push_pop
	store8! &8 	#X7
	load8! &7 	#X7	# 25	[c=11]movdi_to_tr_unspec/2
	add! 16	
	load8	
	#	
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L11.l_o29df3c	# 1380	[c=12]*peep2_cbranchdi
	# END CBRANCH
	load8! &2 	#X2	# 35	[c=6]movhi_to_tr_unspec/2
	add! 16	
	load2	
	#	
	store8! &1 	#AR	# 37	[c=4]movhi_from_tr_unspec/0
	load8! &0 	#AR	# 39	[c=5]movdi_to_tr_unspec/1
	and! 0x8		# 41	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=2)
	and! 65535		# 1448	[c=12]*peep2_cbranchhi
	# - EQ0
	jump_zero! .L4.l_o29df3c
	# END CBRANCH
	load8! &2 	#X2	# 50	[c=11]movdi_to_tr_unspec/2
	add! 24	
	load8	
	#	
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L4.l_o29df3c	# 1378	[c=12]*peep2_cbranchdi
	# END CBRANCH
	load8! &7 	#X7	# 69	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	store8! &4 	#X3	# 71	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 73	[c=5]movdi_to_tr_unspec/1
	and! 0x2		# 75	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=2)
	and! 65535		# 1445	[c=12]*peep2_cbranchhi
	# - EQ0
	jump_zero! .L6.l_o29df3c
	# END CBRANCH
.L74.l_o29df3c:
	load8! &2 	#X2	# 84	[c=11]movdi_to_tr_unspec/2
	add! 64	
	load8	
	#	
	store8! &7 	#X6	# 86	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 88	[c=11]movdi_to_tr_unspec/2
	add! 48	
	load8	
	#	
	store8! &2 	#X1	# 90	[c=4]movdi_from_tr_unspec/0
	push! 0		# 6	[c=4]movdi_push_pop
	store8! &6 	#X5
	push! 0		# 7	[c=4]movdi_push_pop
	store8! &5 	#X4
.L7.l_o29df3c:
	# CBRANCH EQ0	# 118	[c=12]cbranchdi4_internal
	load8! &4 	#X4
	jump_zero! .L8.l_o29df3c
	# END CBRANCH
.L71.l_o29df3c:
	load8! &4 	#X4	# 120	[c=4]movdi_push_pop
	store8! &1 	#AR
	# CBRANCH	# 121	[c=12]cbranchdi4_internal
	push! 2147482624	
	load8! &5 	#X4
	lt_u	
	jump_zero! .L9.l_o29df3c
	# END CBRANCH
	push! 2147482624		# 122	[c=4]movdi_push_pop
	store8! &1 	#AR
.L9.l_o29df3c:
	load4! &0 	#AR	# 1376	[c=4]pushsi1_not_fp/1
	load8! &6 	#X5	# 129	[c=4]pushdi1_not_fp/1
	load8! &3 	#X1	# 130	[c=4]pushdi1_not_fp/1
	load8! &12 	#X9	# 131	[c=4]pushdi1_not_fp/1
	load8! &10 	#X6	# 132	[c=0]*call_value_pop_1/1
	call	
	store8! &4

	set_sp! &3
	# CBRANCH	# 134	[c=12]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	jump_zero! .L10.l_o29df3c
	# END CBRANCH
	load4! &0 	#AR	# 136	[c=5]movsi_to_tr_unspec/1
	sigx4		# 138	[c=6]*extendsidi2
	store8! &1 	#AR	# 139	[c=4]movdi_from_tr_unspec/0
	load8! &5 	#X5	# 146	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 148	[c=6]*adddi/2
	add
	store8! &6 	#X5	# 149	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 157	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 159	[c=14]*subdi3/2
	sub
	store8! &5 	#X4	# 160	[c=4]movdi_from_tr_unspec/0
	load8! &7 	#X7	# 1371	[c=11]movdi_to_tr_unspec/2
	add! 16	
	load8	
	#	
	load8! &1 	#AR	# 1373	[c=14]*subdi3/2
	sub
	store8! &1 	#AR	# 1374	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 172	[c=5]movdi_to_tr_unspec/1
	load8! &8 	#X7	# 174	[c=4]movdi_from_tr_unspec/1
	add! 16	
	store8	
	#	
	# CBRANCH EQ0	# 177	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L11.l_o29df3c
	# END CBRANCH
	load8! &2 	#X2	# 179	[c=11]movdi_to_tr_unspec/2
	add! 64	
	load8	
	#	
	store8! &7 	#X6	# 181	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 183	[c=11]movdi_to_tr_unspec/2
	add! 48	
	load8	
	#	
	store8! &2 	#X1	# 185	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 1475	[c=12]cbranchdi4_internal
	load8! &4 	#X4
	jump_not_zero! .L71.l_o29df3c
	# END CBRANCH
.L8.l_o29df3c:
	load8! &3 	#X3	# 95	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	store8! &6 	#X5	# 97	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 99	[c=11]movdi_to_tr_unspec/2
	add! 8	
	load8	
	#	
	store8! &5 	#X4	# 101	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 108	[c=5]movdi_to_tr_unspec/1
	add! 16		# 110	[c=4]*adddi/0
	store8! &4 	#X3	# 111	[c=4]movdi_from_tr_unspec/0
	jump! .L7.l_o29df3c		# 1565	[c=4]jump
.L39.l_o29df3c:
	load4! &10 	#X10	# 976	[c=5]movsi_to_tr_unspec/1
	sigx4		# 978	[c=6]*extendsidi2
	store8! &9 	#X8	# 979	[c=4]movdi_from_tr_unspec/0
	load8! &8 	#X8	# 981	[c=4]pushdi1_not_fp/1
	load8! &6 	#X5	# 982	[c=4]pushdi1_not_fp/1
	load8! &3 	#X1	# 983	[c=4]pushdi1_not_fp/1
	call! memmove		# 984	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	load8! &2 	#X2	# 985	[c=6]movsi_to_tr_unspec/2
	add! 12	
	load4	
	#	
	store8! &2 	#X1	# 987	[c=4]movsi_from_tr_unspec/0
	load8! &10 	#X10	# 1263	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 1265	[c=14]*subdi3/2
	sub
	neg		# 1266	[c=4]*neg_tr
	load8! &3 	#X2	# 1462	[c=4]movsi_from_tr_unspec/1
	add! 12	
	store4	
	#	
	load8! &2 	#X2	# 1269	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	load8! &9 	#X8	# 1271	[c=6]*adddi/2
	add
	load8! &3 	#X2	# 1017	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load4! &10 	#X10	# 18	[c=4]movsi_push_pop
	store8! &9 	#X8
.L38.l_o29df3c:
	load8! &8 	#X8	# 1256	[c=5]movdi_to_tr_unspec/1
	load8! &7 	#X6	# 1258	[c=14]*subdi3/2
	sub
	neg		# 1259	[c=4]*neg_tr
	store8! &7 	#X6	# 1385	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ0	# 1034	[c=12]cbranchsi4_internal
	load4! &6 	#X6
	jump_zero! .L72.l_o29df3c
	# END CBRANCH
	push! 1		# 19	[c=4]movsi_push_pop
	store8! &1 	#AR
.L40.l_o29df3c:
	load4! &8 	#X8	# 1050	[c=5]movsi_to_tr_unspec/1
	sigx4		# 1052	[c=6]*extendsidi2
	store8! &2 	#X1	# 1053	[c=4]movdi_from_tr_unspec/0
	load8! &5 	#X5	# 1060	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 1062	[c=6]*adddi/2
	add
	store8! &6 	#X5	# 1063	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 1071	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 1073	[c=14]*subdi3/2
	sub
	store8! &5 	#X4	# 1074	[c=4]movdi_from_tr_unspec/0
	load8! &7 	#X7	# 1251	[c=11]movdi_to_tr_unspec/2
	add! 16	
	load8	
	#	
	load8! &2 	#X1	# 1253	[c=14]*subdi3/2
	sub
	store8! &2 	#X1	# 1254	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 1086	[c=5]movdi_to_tr_unspec/1
	load8! &8 	#X7	# 1088	[c=4]movdi_from_tr_unspec/1
	add! 16	
	store8	
	#	
	# CBRANCH EQ0	# 1090	[c=12]cbranchdi4_internal
	load8! &1 	#X1
	jump_not_zero! .L13.l_o29df3c
	# END CBRANCH
.L11.l_o29df3c:
	push! 0		# 21	[c=4]movsi_push_pop
	store8! &1 	#AR
	load4! &0 	#AR	# 1120	[c=4]movsi_push_pop
	store4! &16
	jump! .L73.l_o29df3c		# 1569	[c=4]jump
.L4.l_o29df3c:
	load8! &2 	#X2	# 57	[c=4]pushdi1_not_fp/1
	load8! &10 	#X9	# 58	[c=4]pushdi1_not_fp/1
	call! __swsetup_r		# 59	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH EQ0	# 61	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L41.l_o29df3c
	# END CBRANCH
	load8! &2 	#X2	# 63	[c=6]movhi_to_tr_unspec/2
	add! 16	
	load2	
	#	
	store8! &1 	#AR	# 65	[c=4]movhi_from_tr_unspec/0
	load8! &7 	#X7	# 1478	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	store8! &4 	#X3	# 1480	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 1481	[c=5]movdi_to_tr_unspec/1
	and! 0x2		# 1483	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=2)
	and! 65535		# 1484	[c=12]*peep2_cbranchhi
	# - EQ0
	jump_not_zero! .L74.l_o29df3c
	# END CBRANCH
.L6.l_o29df3c:
	load8! &0 	#AR	# 192	[c=5]movdi_to_tr_unspec/1
	and! 0x1		# 194	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=2)
	and! 65535		# 1442	[c=12]*peep2_cbranchhi
	# - EQ0
	jump_not_zero! .L42.l_o29df3c
	# END CBRANCH
	load8! &2 	#X2	# 203	[c=6]movsi_to_tr_unspec/2
	add! 12	
	load4	
	#	
	store8! &9 	#X8	# 205	[c=4]movsi_from_tr_unspec/0
	load8! &2 	#X2	# 207	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	store8! &2 	#X1	# 209	[c=4]movdi_from_tr_unspec/0
	push! 0		# 8	[c=4]movdi_push_pop
	store8! &6 	#X5
	push! 0		# 9	[c=4]movdi_push_pop
	store8! &5 	#X4
.L14.l_o29df3c:
	# CBRANCH EQ0	# 237	[c=12]cbranchdi4_internal
	load8! &4 	#X4
	jump_zero! .L15.l_o29df3c
	# END CBRANCH
.L75.l_o29df3c:
	load8! &0 	#AR	# 239	[c=5]movdi_to_tr_unspec/1
	and! 0x200		# 241	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=2)
	and! 65535		# 1439	[c=12]*peep2_cbranchhi
	# - EQ0
	jump_zero! .L16.l_o29df3c
	# END CBRANCH
	load4! &8 	#X8	# 250	[c=5]movsi_to_tr_unspec/1
	sigx4		# 252	[c=6]*extendsidi2
	store8! &11 	#X10	# 253	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 255	[c=12]cbranchdi4_internal
	load8! &4 	#X4
	load8! &11 	#X10
	lt_u	
	not	
	jump_zero! .L17.l_o29df3c
	# END CBRANCH
	load8! &0 	#AR	# 257	[c=5]movdi_to_tr_unspec/1
	and! 0x480		# 259	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=2)
	and! 65535		# 1436	[c=12]*peep2_cbranchhi
	# - EQ0
	jump_not_zero! .L18.l_o29df3c
	# END CBRANCH
	load4! &4 	#X4	# 1366	[c=5]movsi_to_tr_unspec/1
	sigx4		# 274	[c=6]*extendsidi2
	store8! &7 	#X6	# 275	[c=4]movdi_from_tr_unspec/0
.L19.l_o29df3c:
	load8! &10 	#X10	# 540	[c=4]pushdi1_not_fp/1
	load8! &6 	#X5	# 541	[c=4]pushdi1_not_fp/1
	load8! &3 	#X1	# 542	[c=4]pushdi1_not_fp/1
	call! memmove		# 543	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	load8! &2 	#X2	# 544	[c=6]movsi_to_tr_unspec/2
	add! 12	
	load4	
	#	
	store8! &2 	#X1	# 546	[c=4]movsi_from_tr_unspec/0
	load8! &8 	#X8	# 1319	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 1321	[c=14]*subdi3/2
	sub
	neg		# 1322	[c=4]*neg_tr
	load8! &3 	#X2	# 1465	[c=4]movsi_from_tr_unspec/1
	add! 12	
	store4	
	#	
	load8! &2 	#X2	# 1325	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	load8! &11 	#X10	# 1327	[c=6]*adddi/2
	add
	load8! &3 	#X2	# 576	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
.L25.l_o29df3c:
	load8! &5 	#X5	# 748	[c=5]movdi_to_tr_unspec/1
	load8! &7 	#X6	# 750	[c=6]*adddi/2
	add
	store8! &6 	#X5	# 751	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 759	[c=5]movdi_to_tr_unspec/1
	load8! &7 	#X6	# 761	[c=14]*subdi3/2
	sub
	store8! &5 	#X4	# 762	[c=4]movdi_from_tr_unspec/0
	load8! &7 	#X7	# 1296	[c=11]movdi_to_tr_unspec/2
	add! 16	
	load8	
	#	
	load8! &7 	#X6	# 1298	[c=14]*subdi3/2
	sub
	store8! &1 	#AR	# 1299	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 774	[c=5]movdi_to_tr_unspec/1
	load8! &8 	#X7	# 776	[c=4]movdi_from_tr_unspec/1
	add! 16	
	store8	
	#	
	# CBRANCH EQ0	# 778	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L11.l_o29df3c
	# END CBRANCH
	load8! &2 	#X2	# 780	[c=6]movhi_to_tr_unspec/2
	add! 16	
	load2	
	#	
	store8! &1 	#AR	# 782	[c=4]movhi_from_tr_unspec/0
	load8! &2 	#X2	# 784	[c=6]movsi_to_tr_unspec/2
	add! 12	
	load4	
	#	
	store8! &9 	#X8	# 786	[c=4]movsi_from_tr_unspec/0
	load8! &2 	#X2	# 788	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	store8! &2 	#X1	# 790	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 1487	[c=12]cbranchdi4_internal
	load8! &4 	#X4
	jump_not_zero! .L75.l_o29df3c
	# END CBRANCH
.L15.l_o29df3c:
	load8! &3 	#X3	# 214	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	store8! &6 	#X5	# 216	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 218	[c=11]movdi_to_tr_unspec/2
	add! 8	
	load8	
	#	
	store8! &5 	#X4	# 220	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 227	[c=5]movdi_to_tr_unspec/1
	add! 16		# 229	[c=4]*adddi/0
	store8! &4 	#X3	# 230	[c=4]movdi_from_tr_unspec/0
	jump! .L14.l_o29df3c		# 1573	[c=4]jump
.L42.l_o29df3c:
	push! 0		# 14	[c=4]movsi_push_pop
	store8! &7 	#X6
	push! 0		# 15	[c=4]movsi_push_pop
	store8! &1 	#AR
	push! 0		# 16	[c=4]movdi_push_pop
	store8! &6 	#X5
	push! 0		# 17	[c=4]movdi_push_pop
	store8! &5 	#X4
.L13.l_o29df3c:
	# CBRANCH EQ0	# 822	[c=12]cbranchdi4_internal
	load8! &4 	#X4
	jump_zero! .L32.l_o29df3c
	# END CBRANCH
	# CBRANCH EQ0	# 824	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_zero! .L33.l_o29df3c
	# END CBRANCH
.L34.l_o29df3c:
	load4! &6 	#X6	# 868	[c=5]movsi_to_tr_unspec/1
	sigx4		# 870	[c=6]*extendsidi2
	store8! &1 	#AR	# 871	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 874	[c=12]cbranchdi4_internal
	load8! &4 	#X4
	load8! &1 	#AR
	lt_u	
	jump_zero! .L36.l_o29df3c
	# END CBRANCH
	load8! &4 	#X4	# 875	[c=4]movdi_push_pop
	store8! &1 	#AR
.L36.l_o29df3c:
	load4! &0 	#AR	# 1284	[c=4]movsi_push_pop
	store8! &11 	#X10
	load8! &2 	#X2	# 881	[c=6]movsi_to_tr_unspec/2
	add! 32	
	load4	
	#	
	store8! &1 	#AR	# 883	[c=4]movsi_from_tr_unspec/0
	load8! &2 	#X2	# 885	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	store8! &2 	#X1	# 887	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 889	[c=11]movdi_to_tr_unspec/2
	add! 24	
	load8	
	#	
	# CBRANCH - peep (modesize=8)
	# - reverse 
	load8! &2 	#X1	# 1285	[c=12]*peep2_cbranchdi_reverse
	lt_u	
	jump_zero! .L37.l_o29df3c
	# END CBRANCH
	load8! &2 	#X2	# 895	[c=6]movsi_to_tr_unspec/2
	add! 12	
	load4	
	#	
	load8! &1 	#AR	# 1281	[c=6]*adddi/2
	add
	store8! &9 	#X8	# 1391	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 1392	[c=12]cbranchsi4_internal
	load4! &8 	#X8
	add! -2147483648	
	load4! &11 	#X10
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L76.l_o29df3c
	# END CBRANCH
.L37.l_o29df3c:
	# CBRANCH	# 950	[c=12]cbranchsi4_internal
	load4! &10 	#X10
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L39.l_o29df3c
	# END CBRANCH
	load8! &2 	#X2	# 952	[c=11]movdi_to_tr_unspec/2
	add! 64	
	load8	
	#	
	store8! &2 	#X1	# 954	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 956	[c=11]movdi_to_tr_unspec/2
	add! 48	
	load8	
	#	
	store8! &9 	#X8	# 958	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 960	[c=4]pushsi1_not_fp/1
	load8! &6 	#X5	# 961	[c=4]pushdi1_not_fp/1
	load8! &10 	#X8	# 962	[c=4]pushdi1_not_fp/1
	load8! &12 	#X9	# 963	[c=4]pushdi1_not_fp/1
	load8! &5 	#X1	# 964	[c=0]*call_value_pop_1/1
	call	
	store8! &4

	set_sp! &3
	load4! &0 	#AR	# 965	[c=4]movsi_push_pop
	store8! &9 	#X8
	# CBRANCH	# 966	[c=12]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L38.l_o29df3c
	# END CBRANCH
	load8! &2 	#X2	# 968	[c=6]movhi_to_tr_unspec/2
	add! 16	
	load2	
	#	
	store8! &1 	#AR	# 970	[c=4]movhi_from_tr_unspec/0
.L23.l_o29df3c:
	load8! &0 	#AR	# 1102	[c=5]movdi_to_tr_unspec/1
	or! 0x40		# 1104	[c=4]*iordi3/0
	load8! &3 	#X2	# 1459	[c=4]movhi_from_tr_unspec/1
	add! 16	
	store2	
	#	
	push! -1		# 20	[c=4]movsi_push_pop
	store8! &1 	#AR
.L77.l_o29df3c:
	load4! &0 	#AR	# 1490	[c=4]movsi_push_pop
	store4! &16
	jump! .L73.l_o29df3c		# 1576	[c=4]jump
.L32.l_o29df3c:
	load8! &3 	#X3	# 796	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	store8! &6 	#X5	# 798	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 800	[c=11]movdi_to_tr_unspec/2
	add! 8	
	load8	
	#	
	store8! &5 	#X4	# 802	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 809	[c=5]movdi_to_tr_unspec/1
	add! 16		# 811	[c=4]*adddi/0
	store8! &4 	#X3	# 812	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 816	[c=12]cbranchdi4_internal
	load8! &4 	#X4
	jump_zero! .L32.l_o29df3c
	# END CBRANCH
.L33.l_o29df3c:
	load8! &4 	#X4	# 827	[c=4]pushdi1_not_fp/1
	push! 10		# 828	[c=4]pushsi1_not_fp/0
	load8! &7 	#X5	# 829	[c=4]pushdi1_not_fp/1
	call! memchr		# 830	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	# CBRANCH EQ0	# 832	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L35.l_o29df3c
	# END CBRANCH
	load8! &0 	#AR	# 1290	[c=5]movdi_to_tr_unspec/1
	add! 1		# 1292	[c=4]*adddi/0
	load8! &6 	#X5	# 1293	[c=14]*subdi3/2
	sub
	store8! &7 	#X6	# 1396	[c=4]movsi_from_tr_unspec/0
	jump! .L34.l_o29df3c		# 1578	[c=4]jump
.L76.l_o29df3c:
	load4! &8 	#X8	# 914	[c=5]movsi_to_tr_unspec/1
	sigx4		# 916	[c=6]*extendsidi2
	store8! &11 	#X10	# 917	[c=4]movdi_from_tr_unspec/0
	load8! &10 	#X10	# 919	[c=4]pushdi1_not_fp/1
	load8! &6 	#X5	# 920	[c=4]pushdi1_not_fp/1
	load8! &3 	#X1	# 921	[c=4]pushdi1_not_fp/1
	call! memmove		# 922	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	load8! &2 	#X2	# 1274	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	load8! &11 	#X10	# 1276	[c=6]*adddi/2
	add
	load8! &3 	#X2	# 934	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load8! &2 	#X2	# 936	[c=4]pushdi1_not_fp/1
	load8! &10 	#X9	# 937	[c=4]pushdi1_not_fp/1
	call! _fflush_r		# 938	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH EQ0	# 940	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_zero! .L38.l_o29df3c
	# END CBRANCH
	load8! &2 	#X2	# 942	[c=6]movhi_to_tr_unspec/2
	add! 16	
	load2	
	#	
	store8! &1 	#AR	# 944	[c=4]movhi_from_tr_unspec/0
	load8! &0 	#AR	# 1493	[c=5]movdi_to_tr_unspec/1
	or! 0x40		# 1495	[c=4]*iordi3/0
	load8! &3 	#X2	# 1496	[c=4]movhi_from_tr_unspec/1
	add! 16	
	store2	
	#	
	push! -1		# 1497	[c=4]movsi_push_pop
	store8! &1 	#AR
	jump! .L77.l_o29df3c		# 1581	[c=4]jump
.L16.l_o29df3c:
	load8! &2 	#X2	# 582	[c=11]movdi_to_tr_unspec/2
	add! 24	
	load8	
	#	
	# CBRANCH - peep (modesize=8)
	load8! &2 	#X1	# 1317	[c=12]*peep2_cbranchdi
	lt_u	
	not	
	jump_zero! .L26.l_o29df3c
	# END CBRANCH
	load8! &2 	#X2	# 588	[c=6]movsi_to_tr_unspec/2
	add! 32	
	load4	
	#	
	store8! &1 	#AR	# 590	[c=4]movsi_from_tr_unspec/0
	load4! &0 	#AR	# 592	[c=5]movsi_to_tr_unspec/1
	sigx4		# 594	[c=6]*extendsidi2
	store8! &7 	#X6	# 595	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 597	[c=12]cbranchdi4_internal
	load8! &4 	#X4
	load8! &7 	#X6
	lt_u	
	not	
	jump_zero! .L26.l_o29df3c
	# END CBRANCH
	# CBRANCH	# 672	[c=12]cbranchdi4_internal
	push! 2147483646	
	load8! &5 	#X4
	lt_u	
	jump_zero! .L44.l_o29df3c
	# END CBRANCH
	push! 2147483647		# 13	[c=4]movdi_push_pop
	store8! &2 	#X1
.L29.l_o29df3c:
	load4! &1 	#X1	# 680	[c=5]movsi_to_tr_unspec/1
	sigx4		# 682	[c=6]*extendsidi2
	store8! &7 	#X6	# 683	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 685	[c=5]movsi_to_tr_unspec/1
	sigx4		# 687	[c=6]*extendsidi2
	store8! &2 	#X1	# 688	[c=4]movdi_from_tr_unspec/0
	load8! &6 	#X6	# 690	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 692	[c=6]*divdi3/2
	div_s
	load8! &1 	#AR	# 705	[c=6]*muldi3/2
	mult
	store8! &7 	#X6	# 1399	[c=4]movsi_from_tr_unspec/0
	load8! &2 	#X2	# 712	[c=11]movdi_to_tr_unspec/2
	add! 64	
	load8	
	#	
	store8! &1 	#AR	# 714	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 716	[c=11]movdi_to_tr_unspec/2
	add! 48	
	load8	
	#	
	store8! &2 	#X1	# 718	[c=4]movdi_from_tr_unspec/0
	load4! &6 	#X6	# 720	[c=4]pushsi1_not_fp/1
	load8! &6 	#X5	# 721	[c=4]pushdi1_not_fp/1
	load8! &3 	#X1	# 722	[c=4]pushdi1_not_fp/1
	load8! &12 	#X9	# 723	[c=4]pushdi1_not_fp/1
	load8! &4 	#AR	# 724	[c=0]*call_value_pop_1/1
	call	
	store8! &4

	set_sp! &3
	# CBRANCH	# 726	[c=12]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	jump_zero! .L78.l_o29df3c
	# END CBRANCH
	load4! &0 	#AR	# 736	[c=5]movsi_to_tr_unspec/1
	sigx4		# 738	[c=6]*extendsidi2
	store8! &7 	#X6	# 739	[c=4]movdi_from_tr_unspec/0
	jump! .L25.l_o29df3c		# 1584	[c=4]jump
.L26.l_o29df3c:
	load4! &8 	#X8	# 600	[c=5]movsi_to_tr_unspec/1
	sigx4		# 602	[c=6]*extendsidi2
	store8! &1 	#AR	# 603	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 606	[c=12]cbranchdi4_internal
	load8! &4 	#X4
	load8! &1 	#AR
	lt_u	
	jump_zero! .L28.l_o29df3c
	# END CBRANCH
	load8! &4 	#X4	# 607	[c=4]movdi_push_pop
	store8! &1 	#AR
.L28.l_o29df3c:
	load4! &0 	#AR	# 1304	[c=4]movsi_push_pop
	store8! &9 	#X8
	load4! &0 	#AR	# 613	[c=5]movsi_to_tr_unspec/1
	sigx4		# 615	[c=6]*extendsidi2
	store8! &7 	#X6	# 616	[c=4]movdi_from_tr_unspec/0
	load8! &6 	#X6	# 618	[c=4]pushdi1_not_fp/1
	load8! &6 	#X5	# 619	[c=4]pushdi1_not_fp/1
	load8! &3 	#X1	# 620	[c=4]pushdi1_not_fp/1
	call! memmove		# 621	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	load8! &2 	#X2	# 622	[c=6]movsi_to_tr_unspec/2
	add! 12	
	load4	
	#	
	store8! &2 	#X1	# 624	[c=4]movsi_from_tr_unspec/0
	load8! &8 	#X8	# 1306	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 1308	[c=14]*subdi3/2
	sub
	neg		# 1309	[c=4]*neg_tr
	store8! &1 	#AR	# 1400	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 1401	[c=5]movsi_to_tr_unspec/1
	load8! &3 	#X2	# 641	[c=4]movsi_from_tr_unspec/1
	add! 12	
	store4	
	#	
	load8! &2 	#X2	# 1312	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	load8! &7 	#X6	# 1314	[c=6]*adddi/2
	add
	load8! &3 	#X2	# 654	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	# CBRANCH EQ0	# 656	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L25.l_o29df3c
	# END CBRANCH
	load8! &2 	#X2	# 658	[c=4]pushdi1_not_fp/1
	load8! &10 	#X9	# 659	[c=4]pushdi1_not_fp/1
	call! _fflush_r		# 660	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH EQ0	# 662	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_zero! .L25.l_o29df3c
	# END CBRANCH
	load8! &2 	#X2	# 664	[c=6]movhi_to_tr_unspec/2
	add! 16	
	load2	
	#	
	store8! &1 	#AR	# 666	[c=4]movhi_from_tr_unspec/0
	load8! &0 	#AR	# 1500	[c=5]movdi_to_tr_unspec/1
	or! 0x40		# 1502	[c=4]*iordi3/0
	load8! &3 	#X2	# 1503	[c=4]movhi_from_tr_unspec/1
	add! 16	
	store2	
	#	
	push! -1		# 1504	[c=4]movsi_push_pop
	store8! &1 	#AR
	jump! .L77.l_o29df3c		# 1586	[c=4]jump
.L18.l_o29df3c:
	load8! &2 	#X2	# 281	[c=11]movdi_to_tr_unspec/2
	add! 24	
	load8	
	#	
	store8! &9 	#X8	# 283	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 285	[c=5]movdi_to_tr_unspec/1
	load8! &9 	#X8	# 287	[c=14]*subdi3/2
	sub
	store8! &13 	#X12	# 288	[c=4]movdi_from_tr_unspec/0
	load4! &12 	#X12	# 1352	[c=4]movsi_push_pop
	store8! &12 	#X11
	load8! &2 	#X2	# 294	[c=6]movsi_to_tr_unspec/2
	add! 32	
	load4	
	#	
	mult! 3		# 300	[c=4]*muldi3/0
	sigx4		# 1431	[c=6]*extendsidi2
	div_s! 2	# 1358	[c=4]*divdi3/0
	store8! &7 	#X6	# 1433	[c=4]movsi_from_tr_unspec/0
	load4! &6 	#X6	# 321	[c=5]movsi_to_tr_unspec/1
	sigx4		# 323	[c=6]*extendsidi2
	store8! &2 	#X1	# 324	[c=4]movdi_from_tr_unspec/0
	load4! &12 	#X12	# 326	[c=5]movsi_to_tr_unspec/1
	sigx4		# 328	[c=6]*extendsidi2
	store8! &11 	#X10	# 329	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 331	[c=5]movdi_to_tr_unspec/1
	add! 1		# 333	[c=4]*adddi/0
	load8! &11 	#X10	# 1362	[c=6]*adddi/2
	add
	# CBRANCH - peep (modesize=8)
	# - reverse 
	load8! &2 	#X1	# 1364	[c=12]*peep2_cbranchdi_reverse
	gt_u	
	jump_zero! .L20.l_o29df3c
	# END CBRANCH
	load4! &4 	#X4	# 1347	[c=4]movsi_push_pop
	store8! &7 	#X6
	load4! &12 	#X12	# 1348	[c=4]movsi_push_pop
	store8! &2 	#X1
	load8! &6 	#X6	# 351	[c=5]movdi_to_tr_unspec/1
	add! 1		# 353	[c=4]*adddi/0
	load8! &2 	#X1	# 366	[c=6]*adddi/2
	add
	store8! &7 	#X6	# 1426	[c=4]movsi_from_tr_unspec/0
	load4! &6 	#X6	# 374	[c=5]movsi_to_tr_unspec/1
	sigx4		# 376	[c=6]*extendsidi2
	store8! &2 	#X1	# 377	[c=4]movdi_from_tr_unspec/0
.L20.l_o29df3c:
	load8! &0 	#AR	# 381	[c=5]movdi_to_tr_unspec/1
	and! 0x400		# 383	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=2)
	and! 65535		# 1423	[c=12]*peep2_cbranchhi
	# - EQ0
	jump_zero! .L21.l_o29df3c
	# END CBRANCH
	load8! &1 	#X1	# 392	[c=4]pushdi1_not_fp/1
	load8! &10 	#X9	# 393	[c=4]pushdi1_not_fp/1
	call! _malloc_r		# 394	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load8! &0 	#AR	# 395	[c=4]movdi_push_pop
	store8! &9 	#X8
	# CBRANCH EQ0	# 396	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L79.l_o29df3c
	# END CBRANCH
	load8! &2 	#X2	# 410	[c=11]movdi_to_tr_unspec/2
	add! 24	
	load8	
	#	
	store8! &1 	#AR	# 412	[c=4]movdi_from_tr_unspec/0
	load8! &10 	#X10	# 414	[c=4]pushdi1_not_fp/1
	load8! &1 	#AR	# 415	[c=4]pushdi1_not_fp/1
	load8! &10 	#X8	# 416	[c=4]pushdi1_not_fp/1
	call! memcpy		# 417	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	load8! &2 	#X2	# 418	[c=6]movhi_to_tr_unspec/2
	add! 16	
	load2	
	#	
	and! 0xfffffffffffffb7f		# 424	[c=4]*anddi3/0
	or! 0x80		# 433	[c=4]*iordi3/0
	load8! &3 	#X2	# 1471	[c=4]movhi_from_tr_unspec/1
	add! 16	
	store2	
	#	
.L24.l_o29df3c:
	load8! &8 	#X8	# 483	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 485	[c=4]movdi_from_tr_unspec/1
	add! 24	
	store8	
	#	
	load8! &8 	#X8	# 487	[c=5]movdi_to_tr_unspec/1
	load8! &11 	#X10	# 489	[c=6]*adddi/2
	add
	store8! &2 	#X1	# 490	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 492	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 494	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load4! &6 	#X6	# 496	[c=5]movsi_to_tr_unspec/1
	load8! &3 	#X2	# 498	[c=4]movsi_from_tr_unspec/1
	add! 32	
	store4	
	#	
	load4! &4 	#X4	# 1331	[c=4]movsi_push_pop
	store8! &9 	#X8
	load8! &11 	#X11	# 1333	[c=5]movdi_to_tr_unspec/1
	load8! &7 	#X6	# 1335	[c=14]*subdi3/2
	sub
	neg		# 1336	[c=4]*neg_tr
	load8! &3 	#X2	# 1468	[c=4]movsi_from_tr_unspec/1
	add! 12	
	store4	
	#	
	load4! &4 	#X4	# 521	[c=5]movsi_to_tr_unspec/1
	sigx4		# 523	[c=6]*extendsidi2
	store8! &7 	#X6	# 524	[c=4]movdi_from_tr_unspec/0
	load8! &6 	#X6	# 11	[c=4]movdi_push_pop
	store8! &11 	#X10
	# CBRANCH	# 526	[c=12]cbranchdi4_internal
	load8! &4 	#X4
	load8! &7 	#X6
	lt_u	
	jump_zero! .L19.l_o29df3c
	# END CBRANCH
.L17.l_o29df3c:
	load4! &4 	#X4	# 1330	[c=4]movsi_push_pop
	store8! &9 	#X8
	load4! &4 	#X4	# 533	[c=5]movsi_to_tr_unspec/1
	sigx4		# 535	[c=6]*extendsidi2
	store8! &7 	#X6	# 536	[c=4]movdi_from_tr_unspec/0
	load8! &6 	#X6	# 10	[c=4]movdi_push_pop
	store8! &11 	#X10
	load8! &10 	#X10	# 1507	[c=4]pushdi1_not_fp/1
	load8! &6 	#X5	# 1508	[c=4]pushdi1_not_fp/1
	load8! &3 	#X1	# 1509	[c=4]pushdi1_not_fp/1
	call! memmove		# 1510	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	load8! &2 	#X2	# 1511	[c=6]movsi_to_tr_unspec/2
	add! 12	
	load4	
	#	
	store8! &2 	#X1	# 1513	[c=4]movsi_from_tr_unspec/0
	load8! &8 	#X8	# 1514	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 1516	[c=14]*subdi3/2
	sub
	neg		# 1517	[c=4]*neg_tr
	load8! &3 	#X2	# 1518	[c=4]movsi_from_tr_unspec/1
	add! 12	
	store4	
	#	
	load8! &2 	#X2	# 1519	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	load8! &11 	#X10	# 1521	[c=6]*adddi/2
	add
	load8! &3 	#X2	# 1523	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	jump! .L25.l_o29df3c		# 1589	[c=4]jump
.L72.l_o29df3c:
	load8! &2 	#X2	# 1036	[c=4]pushdi1_not_fp/1
	load8! &10 	#X9	# 1037	[c=4]pushdi1_not_fp/1
	call! _fflush_r		# 1038	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH EQ0	# 1040	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_zero! .L40.l_o29df3c
	# END CBRANCH
	load8! &2 	#X2	# 1042	[c=6]movhi_to_tr_unspec/2
	add! 16	
	load2	
	#	
	store8! &1 	#AR	# 1044	[c=4]movhi_from_tr_unspec/0
	load8! &0 	#AR	# 1526	[c=5]movdi_to_tr_unspec/1
	or! 0x40		# 1528	[c=4]*iordi3/0
	load8! &3 	#X2	# 1529	[c=4]movhi_from_tr_unspec/1
	add! 16	
	store2	
	#	
	push! -1		# 1530	[c=4]movsi_push_pop
	store8! &1 	#AR
	jump! .L77.l_o29df3c		# 1591	[c=4]jump
.L44.l_o29df3c:
	load8! &4 	#X4	# 12	[c=4]movdi_push_pop
	store8! &2 	#X1
	jump! .L29.l_o29df3c		# 1593	[c=4]jump
.L21.l_o29df3c:
	load8! &1 	#X1	# 448	[c=4]pushdi1_not_fp/1
	load8! &9 	#X8	# 449	[c=4]pushdi1_not_fp/1
	load8! &11 	#X9	# 450	[c=4]pushdi1_not_fp/1
	call! _realloc_r		# 451	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	load8! &0 	#AR	# 452	[c=4]movdi_push_pop
	store8! &9 	#X8
	# CBRANCH EQ0	# 453	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_not_zero! .L24.l_o29df3c
	# END CBRANCH
	load8! &2 	#X2	# 455	[c=11]movdi_to_tr_unspec/2
	add! 24	
	load8	
	#	
	#peep - pop(deadreg)+pusharg	# 1340	[c=0]*peep2_pop_pusharg
	load8! &10 	#X9	# 460	[c=4]pushdi1_not_fp/1
	call! _free_r		# 461	[c=5]*call_pop_0/0
	set_sp! (+ &0 16)
	

	load8! &2 	#X2	# 462	[c=6]movhi_to_tr_unspec/2
	add! 16	
	load2	
	#	
	and! 0xffffffffffffff7f		# 468	[c=4]*anddi3/0
	store8! &1 	#AR	# 1410	[c=4]movdi_from_tr_unspec/0
	push! 12		# 1411	[c=3]movsi_to_tr_unspec/0
	load8! &10 	#X9	# 477	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	load8! &0 	#AR	# 1533	[c=5]movdi_to_tr_unspec/1
	or! 0x40		# 1535	[c=4]*iordi3/0
	load8! &3 	#X2	# 1536	[c=4]movhi_from_tr_unspec/1
	add! 16	
	store2	
	#	
	push! -1		# 1537	[c=4]movsi_push_pop
	store8! &1 	#AR
	jump! .L77.l_o29df3c		# 1595	[c=4]jump
.L35.l_o29df3c:
	load4! &4 	#X4	# 1287	[c=5]movsi_to_tr_unspec/1
	add! 1		# 858	[c=4]*adddi/0
	store8! &7 	#X6	# 1394	[c=4]movsi_from_tr_unspec/0
	jump! .L34.l_o29df3c		# 1597	[c=4]jump
.L10.l_o29df3c:
	load8! &2 	#X2	# 1096	[c=6]movhi_to_tr_unspec/2
	add! 16	
	load2	
	#	
	store8! &1 	#AR	# 1098	[c=4]movhi_from_tr_unspec/0
	load8! &0 	#AR	# 1540	[c=5]movdi_to_tr_unspec/1
	or! 0x40		# 1542	[c=4]*iordi3/0
	load8! &3 	#X2	# 1543	[c=4]movhi_from_tr_unspec/1
	add! 16	
	store2	
	#	
	push! -1		# 1544	[c=4]movsi_push_pop
	store8! &1 	#AR
	jump! .L77.l_o29df3c		# 1599	[c=4]jump
.L78.l_o29df3c:
	load8! &2 	#X2	# 728	[c=6]movhi_to_tr_unspec/2
	add! 16	
	load2	
	#	
	store8! &1 	#AR	# 730	[c=4]movhi_from_tr_unspec/0
	load8! &0 	#AR	# 1547	[c=5]movdi_to_tr_unspec/1
	or! 0x40		# 1549	[c=4]*iordi3/0
	load8! &3 	#X2	# 1550	[c=4]movhi_from_tr_unspec/1
	add! 16	
	store2	
	#	
	push! -1		# 1551	[c=4]movsi_push_pop
	store8! &1 	#AR
	jump! .L77.l_o29df3c		# 1601	[c=4]jump
.L79.l_o29df3c:
	push! 12		# 398	[c=3]movsi_to_tr_unspec/0
	load8! &10 	#X9	# 400	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	load8! &2 	#X2	# 402	[c=6]movhi_to_tr_unspec/2
	add! 16	
	load2	
	#	
	store8! &1 	#AR	# 404	[c=4]movhi_from_tr_unspec/0
	load8! &0 	#AR	# 1554	[c=5]movdi_to_tr_unspec/1
	or! 0x40		# 1556	[c=4]*iordi3/0
	load8! &3 	#X2	# 1557	[c=4]movhi_from_tr_unspec/1
	add! 16	
	store2	
	#	
	push! -1		# 1558	[c=4]movsi_push_pop
	store8! &1 	#AR
	jump! .L77.l_o29df3c		# 1603	[c=4]jump
.L41.l_o29df3c:
	push! -1		# 22	[c=4]movsi_push_pop
	store8! &1 	#AR
	load4! &0 	#AR	# 1561	[c=4]movsi_push_pop
	store4! &16
.L73.l_o29df3c:

	# epilogue
	set_sp! &14
	return

# FUNCTION ENDS:__sfvwrite_r

#	IMPORT _free_r
#	IMPORT _realloc_r
#	IMPORT memcpy
#	IMPORT _malloc_r
#	IMPORT _fflush_r
#	IMPORT memchr
#	IMPORT __swsetup_r
#	IMPORT memmove
#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: o3b2998
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"fwalk.c"
#	.text
	#peephole 1
	#peephole move_dead
	#peephole pop+cmp
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole popdi(deadreg)+push

# FUNCTION BEGINS:_fwalk
	EXPORT	_fwalk
_fwalk:
	# prologue (7 GPRs)

	set_sp! &-7

	load8! &9	# 3	[c=2]movdi_push_pop
	store8! &7 	#X6
	load8! &8	# 9	[c=5]movdi_to_tr_unspec/1
	add! 1312		# 11	[c=4]*adddi/0
	store8! &6 	#X5	# 12	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 14	[c=12]cbranchdi4_internal
	load8! &5 	#X5
	jump_zero! .L7.l_o3b2998
	# END CBRANCH
	push! 0		# 5	[c=4]movsi_push_pop
	store8! &5 	#X4
.L6.l_o3b2998:
	load8! &5 	#X5	# 16	[c=11]movdi_to_tr_unspec/2
	add! 16	
	load8	
	#	
	store8! &3 	#X2	# 18	[c=4]movdi_from_tr_unspec/0
	load8! &5 	#X5	# 20	[c=6]movsi_to_tr_unspec/2
	add! 8	
	load4	
	#	
	store8! &1 	#AR	# 22	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 24	[c=12]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	jump_zero! .L3.l_o3b2998
	# END CBRANCH
	load8! &0 	#AR	# 27	[c=5]movdi_to_tr_unspec/1
	add! -1		# 29	[c=4]*adddi/0
	and! 0xffffffff		# 164	[c=4]*anddi3/0
	add! 1		# 153	[c=4]*adddi/0
	mult! 184		# 48	[c=4]*muldi3/0
	load8! &3 	#X2	# 157	[c=6]*adddi/2
	add
	store8! &4 	#X3	# 158	[c=4]movdi_from_tr_unspec/0
.L5.l_o3b2998:
	load8! &2 	#X2	# 57	[c=6]movhi_to_tr_unspec/2
	add! 16	
	load2	
	#	
	store8! &1 	#AR	# 59	[c=4]movhi_from_tr_unspec/0
	# CBRANCH	# 62	[c=12]cbranchhi4_internal
	push! 1	
	load2! &1 	#AR
	lt_u	
	jump_zero! .L4.l_o3b2998
	# END CBRANCH
	load8! &2 	#X2	# 64	[c=6]movhi_to_tr_unspec/2
	add! 18	
	load2	
	#	
	# CBRANCH - peep (modesize=2)
	and! 65535		# 146	[c=12]*peep2_cbranchhi
	# - EQ
	push! 65535	
	xor	
	jump_zero! .L4.l_o3b2998
	# END CBRANCH
	load8! &2 	#X2	# 70	[c=4]pushdi1_not_fp/1
	load8! &7 	#X6	# 71	[c=0]*call_value_pop_1/1
	call	
	store8! &1

	load8! &4 	#X4	# 77	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 79	[c=6]*iordi3/2
	or
	store8! &5 	#X4	# 160	[c=4]movsi_from_tr_unspec/0
.L4.l_o3b2998:
	load8! &2 	#X2	# 93	[c=5]movdi_to_tr_unspec/1
	add! 184		# 95	[c=4]*adddi/0
	store8! &3 	#X2	# 96	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 100	[c=12]cbranchdi4_internal
	load8! &3 	#X3
	load8! &3 	#X2
	xor	
	push! 1	
	lt_u	
	jump_zero! .L5.l_o3b2998
	# END CBRANCH
.L3.l_o3b2998:
	load8! &5 	#X5	# 103	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	store8! &6 	#X5	# 105	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 108	[c=12]cbranchdi4_internal
	load8! &5 	#X5
	jump_not_zero! .L6.l_o3b2998
	# END CBRANCH
	load4! &4 	#X4	# 114	[c=4]movsi_push_pop
	store4! &9
	jump! .L15.l_o3b2998		# 173	[c=4]jump
.L7.l_o3b2998:
	push! 0		# 6	[c=4]movsi_push_pop
	store8! &5 	#X4
	load4! &4 	#X4	# 169	[c=4]movsi_push_pop
	store4! &9
.L15.l_o3b2998:

	# epilogue
	set_sp! &7
	return

# FUNCTION ENDS:_fwalk

	#peephole 1
	#peephole move_dead
	#peephole pop+cmp
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole popdi(deadreg)+push

# FUNCTION BEGINS:_fwalk_reent
	EXPORT	_fwalk_reent
_fwalk_reent:
	# prologue (8 GPRs)

	set_sp! &-8

	load8! &9	# 2	[c=2]movdi_push_pop
	store8! &7 	#X6
	load8! &10	# 3	[c=2]movdi_push_pop
	store8! &8 	#X7
	load8! &6 	#X6	# 9	[c=5]movdi_to_tr_unspec/1
	add! 1312		# 11	[c=4]*adddi/0
	store8! &6 	#X5	# 12	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 14	[c=12]cbranchdi4_internal
	load8! &5 	#X5
	jump_zero! .L22.l_o3b2998
	# END CBRANCH
	push! 0		# 5	[c=4]movsi_push_pop
	store8! &5 	#X4
.L21.l_o3b2998:
	load8! &5 	#X5	# 16	[c=11]movdi_to_tr_unspec/2
	add! 16	
	load8	
	#	
	store8! &3 	#X2	# 18	[c=4]movdi_from_tr_unspec/0
	load8! &5 	#X5	# 20	[c=6]movsi_to_tr_unspec/2
	add! 8	
	load4	
	#	
	store8! &1 	#AR	# 22	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 24	[c=12]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	jump_zero! .L18.l_o3b2998
	# END CBRANCH
	load8! &0 	#AR	# 27	[c=5]movdi_to_tr_unspec/1
	add! -1		# 29	[c=4]*adddi/0
	and! 0xffffffff		# 163	[c=4]*anddi3/0
	add! 1		# 152	[c=4]*adddi/0
	mult! 184		# 48	[c=4]*muldi3/0
	load8! &3 	#X2	# 156	[c=6]*adddi/2
	add
	store8! &4 	#X3	# 157	[c=4]movdi_from_tr_unspec/0
.L20.l_o3b2998:
	load8! &2 	#X2	# 57	[c=6]movhi_to_tr_unspec/2
	add! 16	
	load2	
	#	
	store8! &1 	#AR	# 59	[c=4]movhi_from_tr_unspec/0
	# CBRANCH	# 62	[c=12]cbranchhi4_internal
	push! 1	
	load2! &1 	#AR
	lt_u	
	jump_zero! .L19.l_o3b2998
	# END CBRANCH
	load8! &2 	#X2	# 64	[c=6]movhi_to_tr_unspec/2
	add! 18	
	load2	
	#	
	# CBRANCH - peep (modesize=2)
	and! 65535		# 145	[c=12]*peep2_cbranchhi
	# - EQ
	push! 65535	
	xor	
	jump_zero! .L19.l_o3b2998
	# END CBRANCH
	load8! &2 	#X2	# 70	[c=4]pushdi1_not_fp/1
	load8! &7 	#X6	# 71	[c=4]pushdi1_not_fp/1
	load8! &9 	#X7	# 72	[c=0]*call_value_pop_1/1
	call	
	store8! &2

	store8! &0 #set_sp! &1
	load8! &4 	#X4	# 78	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 80	[c=6]*iordi3/2
	or
	store8! &5 	#X4	# 159	[c=4]movsi_from_tr_unspec/0
.L19.l_o3b2998:
	load8! &2 	#X2	# 94	[c=5]movdi_to_tr_unspec/1
	add! 184		# 96	[c=4]*adddi/0
	store8! &3 	#X2	# 97	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 101	[c=12]cbranchdi4_internal
	load8! &3 	#X3
	load8! &3 	#X2
	xor	
	push! 1	
	lt_u	
	jump_zero! .L20.l_o3b2998
	# END CBRANCH
.L18.l_o3b2998:
	load8! &5 	#X5	# 104	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	store8! &6 	#X5	# 106	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 109	[c=12]cbranchdi4_internal
	load8! &5 	#X5
	jump_not_zero! .L21.l_o3b2998
	# END CBRANCH
	load4! &4 	#X4	# 115	[c=4]movsi_push_pop
	store4! &10
	jump! .L30.l_o3b2998		# 172	[c=4]jump
.L22.l_o3b2998:
	push! 0		# 6	[c=4]movsi_push_pop
	store8! &5 	#X4
	load4! &4 	#X4	# 168	[c=4]movsi_push_pop
	store4! &10
.L30.l_o3b2998:

	# epilogue
	set_sp! &8
	return

# FUNCTION ENDS:_fwalk_reent

#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: o24119d
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"impure.c"
#	.text
	EXPORT	_global_impure_ptr
_global_impure_ptr:
	data8 [impure_data.s_o24119d]
	EXPORT	_impure_ptr
#	.data
_impure_ptr:
	data8 [impure_data.s_o24119d]
impure_data.s_o24119d:
	data4 [0]
	data4 [0]

	data8 [(+ impure_data.s_o24119d 1336)]
	data8 [(+ impure_data.s_o24119d 1520)]
	data8 [(+ impure_data.s_o24119d 1704)]
	data4 [0]
#	.string ""
	data1 [ 0 ]
	data8 [0]*3

	data2 [0]
	data1 [0]

	data4 [0]
	data4 [0]

	data8 [0]
	data4 [0]
	data4 [0]

	data8 [0]
	data8 [0]
	data4 [0]
	data4 [0]

	data8 [0]
	data8 [0]
	data4 [0]
	data4 [0]

	data8 [0]
	data4 [0]
	data4 [0]

	data8 [0]
#	.string ""
	data1 [ 0 ]
	data8 [0]*3
	data1 [0]

	data4 [0]
	data2 [0]

	data4 [0]
	data4 [0]
	data4 [0]
	data4 [0]
	data4 [0]
	data4 [0]
	data4 [0]
	data4 [0]
	data4 [0]
	data4 [0]

	data4 [0]
	data4 [0]

	data8 [1]
	data2 [13070]
	data2 [-21555]
	data2 [4660]
	data2 [-6547]
	data2 [-8468]
	data2 [5]
	data2 [11]
	data2 [0]

	data4 [0]
	data4 [0]

	data4 [0]
	data4 [0]

	data4 [0]
	data4 [0]

	data4 [0]
	data4 [0]

	data4 [0]
	data4 [0]

	data4 [0]
	data4 [0]

#	.string ""
	data1 [ 0 ]
	data4 [0]
	data2 [0]
	data1 [0]

#	.string ""
	data1 [ 0 ]
	data8 [0]*2
	data4 [0]
	data2 [0]
	data1 [0]

	data4 [0]
	data4 [0]

	data4 [0]
	data4 [0]

	data4 [0]
	data4 [0]

	data4 [0]
	data4 [0]

	data4 [0]
	data4 [0]

	data4 [0]
	data4 [0]

	data4 [0]
	data4 [0]

	data4 [0]
	data4 [0]

	data4 [0]
	data4 [0]

	data4 [0]
	data4 [0]

	data4 [0]
	data4 [0]

	data8 [0]

	data8 [0]*8

	data8 [0]
	data8 [0]
	data4 [0]
	data4 [0]

	data8 [0]
	data8 [0]*31

	data8 [0]
	data8 [0]*31

	data8 [0]
	data8 [0]*31

	data4 [0]
	data4 [0]
	data8 [0]
	data8 [0]
	data4 [0]
	data4 [0]

	data8 [0]
	data8 [0]*69

#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: oecc6d0
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"isattyr.c"
#	.text

# FUNCTION BEGINS:_isatty_r
	EXPORT	_isatty_r
_isatty_r:
	# prologue (2 GPRs)
	push! 0
	push! 0

	push! 0		# 7	[c=4]movsi_push_pop
	store4! errno
	load4! &4	# 8	[c=2]pushsi1_not_fp/1
	call! isatty		# 9	[c=0]*call_value_pop_1/0
	store8! &1

	# CBRANCH EQ	# 11	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	push! 4294967295	
	xor	
	jump_zero! .L8.l_oecc6d0
	# END CBRANCH
.L1.l_oecc6d0:
	load4! &0 	#AR	# 25	[c=4]movsi_push_pop
	store4! &4
	jump! .L9.l_oecc6d0		# 47	[c=4]jump
.L8.l_oecc6d0:
	load4! errno	# 13	[c=1]movsi_push_pop
	store8! &2 	#X1
	# CBRANCH EQ0	# 14	[c=12]cbranchsi4_internal
	load4! &1 	#X1
	jump_zero! .L1.l_oecc6d0
	# END CBRANCH
	load4! &1 	#X1	# 16	[c=5]movsi_to_tr_unspec/1
	load8! &4	# 18	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	load4! &0 	#AR	# 42	[c=4]movsi_push_pop
	store4! &4
.L9.l_oecc6d0:

	# epilogue
	set_sp! &2
	return

# FUNCTION ENDS:_isatty_r

#	IMPORT isatty
#	IMPORT errno
#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: o8f3132
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"locale.c"
#	.text
.LC0.l_o8f3132:
#	.string "C"
	data1 [ 67 0 ]
.LC1.l_o8f3132:
#	.string "POSIX"
	data1 [ 80 79 83 73 88 0 ]
.LC2.l_o8f3132:
#	.string ""
	data1 [ 0 ]

# FUNCTION BEGINS:_setlocale_r
	EXPORT	_setlocale_r
_setlocale_r:
	# prologue (1 GPRs)
	push! 0

	# CBRANCH EQ0	# 10	[c=14]cbranchdi4_internal
	load8! &4
	jump_zero! .L4.l_o8f3132
	# END CBRANCH
	push! .LC1.l_o8f3132		# 16	[c=4]pushdi1_not_fp/0
	load8! &5	# 17	[c=2]pushdi1_not_fp/1
	call! strcmp		# 18	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH EQ0	# 21	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L16.l_o8f3132
	# END CBRANCH
.L4.l_o8f3132:
	push! .LC0.l_o8f3132		# 6	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 39	[c=4]movdi_push_pop
	store8! &3
	jump! .L17.l_o8f3132		# 78	[c=4]jump
.L16.l_o8f3132:
	push! .LC0.l_o8f3132		# 23	[c=4]pushdi1_not_fp/0
	load8! &5	# 24	[c=2]pushdi1_not_fp/1
	call! strcmp		# 25	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH EQ0	# 27	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_zero! .L4.l_o8f3132
	# END CBRANCH
	push! .LC2.l_o8f3132		# 29	[c=4]pushdi1_not_fp/0
	load8! &5	# 30	[c=2]pushdi1_not_fp/1
	call! strcmp		# 31	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH EQ0	# 33	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_zero! .L4.l_o8f3132
	# END CBRANCH
	push! 0		# 7	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 73	[c=4]movdi_push_pop
	store8! &3
.L17.l_o8f3132:

	# epilogue
	store8! &0 #set_sp! &1
	return

# FUNCTION ENDS:_setlocale_r

	#peephole move
	#peephole move+push(pushable)
	#peephole 1
	#peephole nop+set
	#peephole pop+move2(deadreg)

# FUNCTION BEGINS:__locale_mb_cur_max
	EXPORT	__locale_mb_cur_max
__locale_mb_cur_max:
	# prologue (1 GPRs)
	push! 0

	load1! (+ __global_locale 352)	# 29	[c=4]movqi_to_tr_unspec/1
	sigx1		# 12	[c=6]*extendqidi2
	store4! &3	# 33	[c=4]movsi_from_tr_unspec/0

	# epilogue
	store8! &0 #set_sp! &1
	return

# FUNCTION ENDS:__locale_mb_cur_max


# FUNCTION BEGINS:setlocale
	EXPORT	setlocale
setlocale:
	# prologue (1 GPRs)
	push! 0

	load8! &3	# 8	[c=2]pushdi1_not_fp/1
	load4! &3	# 9	[c=2]pushsi1_not_fp/1
	load8! _impure_ptr	# 10	[c=1]pushdi1_not_fp/1
	call! _setlocale_r		# 11	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	load8! &0 	#AR	# 16	[c=4]movdi_push_pop
	store8! &3

	# epilogue
	store8! &0 #set_sp! &1
	return

# FUNCTION ENDS:setlocale

	EXPORT	__global_locale
.LC3.l_o8f3132:
#	.string "."
	data1 [ 46 0 ]
#	.data
__global_locale:
#	.string "C"
	data1 [ 67 0 ]
	data8 [0]*3
	data4 [0]
	data2 [0]

#	.string "C"
	data1 [ 67 0 ]
	data8 [0]*3
	data4 [0]
	data2 [0]

#	.string "C"
	data1 [ 67 0 ]
	data8 [0]*3
	data4 [0]
	data2 [0]

#	.string "C"
	data1 [ 67 0 ]
	data8 [0]*3
	data4 [0]
	data2 [0]

#	.string "C"
	data1 [ 67 0 ]
	data8 [0]*3
	data4 [0]
	data2 [0]

#	.string "C"
	data1 [ 67 0 ]
	data8 [0]*3
	data4 [0]
	data2 [0]

#	.string "C"
	data1 [ 67 0 ]
	data8 [0]*3
	data4 [0]
	data2 [0]

	data8 [__ascii_wctomb]
	data8 [__ascii_mbtowc]
	data4 [0]
	data4 [0]

	data8 [(+ _ctype_b 127)]
	data8 [.LC3.l_o8f3132]
	data8 [.LC2.l_o8f3132]
	data8 [.LC2.l_o8f3132]
	data8 [.LC2.l_o8f3132]
	data8 [.LC2.l_o8f3132]
	data8 [.LC2.l_o8f3132]
	data8 [.LC2.l_o8f3132]
	data8 [.LC2.l_o8f3132]
	data8 [.LC2.l_o8f3132]
	data8 [.LC2.l_o8f3132]
	data1 [127]
	data1 [127]
	data1 [127]
	data1 [127]
	data1 [127]
	data1 [127]
	data1 [127]
	data1 [127]
	data1 [127]
	data1 [127]
	data1 [127]
	data1 [127]
	data1 [127]
	data1 [127]
	data2 [0]

#	.string "\x01"
	data1 [ 1 0 ]
#	.string "ASCII"
	data1 [ 65 83 67 73 73 0 ]
	data8 [0]*3
	data2 [0]

#	.string "ASCII"
	data1 [ 65 83 67 73 73 0 ]
	data8 [0]*3
	data2 [0]

	data4 [0]
	data2 [0]

	EXPORT	_PathLocale
_PathLocale:
	data8 [0]

#	IMPORT _ctype_b
#	IMPORT __ascii_mbtowc
#	IMPORT __ascii_wctomb
#	IMPORT _impure_ptr
#	IMPORT strcmp
#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: oa6ea58
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"localeconv.c"
#	.text
	#peephole pop+move2(deadreg)

# FUNCTION BEGINS:__localeconv_l
	EXPORT	__localeconv_l
__localeconv_l:
	# prologue (1 GPRs)
	push! 0

	load8! &2	# 6	[c=5]movdi_to_tr_unspec/1
	add! 256		# 8	[c=4]*adddi/0
	store8! &3	# 20	[c=4]movdi_from_tr_unspec/0

	# epilogue
	store8! &0 #set_sp! &1
	return

# FUNCTION ENDS:__localeconv_l


# FUNCTION BEGINS:_localeconv_r
	EXPORT	_localeconv_r
_localeconv_r:
	# prologue (0 GPRs)

	push! (+ __global_locale 256)		# 10	[c=4]movdi_push_pop
	store8! &2

	# epilogue
	return

# FUNCTION ENDS:_localeconv_r


# FUNCTION BEGINS:localeconv
	EXPORT	localeconv
localeconv:
	# prologue (0 GPRs)

	push! (+ __global_locale 256)		# 9	[c=4]movdi_push_pop
	store8! &2

	# epilogue
	return

# FUNCTION ENDS:localeconv

#	IMPORT __global_locale
#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: o292af6
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"lseekr.c"
#	.text

# FUNCTION BEGINS:_lseek_r
	EXPORT	_lseek_r
_lseek_r:
	# prologue (2 GPRs)
	push! 0
	push! 0

	push! 0		# 9	[c=4]movsi_push_pop
	store4! errno
	load4! &6	# 10	[c=2]pushsi1_not_fp/1
	load8! &6	# 11	[c=2]pushdi1_not_fp/1
	load4! &6	# 12	[c=2]pushsi1_not_fp/1
	call! lseek		# 13	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	# CBRANCH EQ	# 15	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	push! -1	
	xor	
	jump_zero! .L8.l_o292af6
	# END CBRANCH
.L1.l_o292af6:
	load8! &0 	#AR	# 29	[c=4]movdi_push_pop
	store8! &4
	jump! .L9.l_o292af6		# 51	[c=4]jump
.L8.l_o292af6:
	load4! errno	# 17	[c=1]movsi_push_pop
	store8! &2 	#X1
	# CBRANCH EQ0	# 18	[c=12]cbranchsi4_internal
	load4! &1 	#X1
	jump_zero! .L1.l_o292af6
	# END CBRANCH
	load4! &1 	#X1	# 20	[c=5]movsi_to_tr_unspec/1
	load8! &4	# 22	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	load8! &0 	#AR	# 46	[c=4]movdi_push_pop
	store8! &4
.L9.l_o292af6:

	# epilogue
	set_sp! &2
	return

# FUNCTION ENDS:_lseek_r

#	IMPORT lseek
#	IMPORT errno
#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: o18d0c8
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"makebuf.c"
#	.text
	#peephole move+push(pushable)
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole nop+set
	#peephole nop+set
	#peephole nop+set
	#peephole nop+set
	#peephole 1
	#peephole nop+set
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole nop+set
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push

# FUNCTION BEGINS:__swhatbuf_r
	EXPORT	__swhatbuf_r
__swhatbuf_r:
	# prologue (3 GPRs)

	set_sp! &-16

	load8! &18	# 3	[c=2]movdi_push_pop
	store8! &3 	#X2
	load8! &2 	#X2	# 12	[c=6]movhi_to_tr_unspec/2
	add! 18	
	load2	
	#	
	store8! &1 	#AR	# 14	[c=4]movhi_from_tr_unspec/0
	# CBRANCH	# 16	[c=12]cbranchhi4_internal
	load2! &0 	#AR
	add! -32768	
	push! 0	
	add! -32768	
	lt_u	
	not	
	jump_zero! .L5.l_o18d0c8
	# END CBRANCH
	load2! &0 	#AR	# 41	[c=5]movhi_to_tr_unspec/1
	sigx2		# 43	[c=6]*extendhidi2
	store8! &1 	#AR	# 44	[c=4]movdi_from_tr_unspec/0
	push! &0		# 207	[c=4]movdi_to_tr_unspec/1
	add! 24		# 214	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 216	[c=0]*peep2_pop_pusharg
	load4! &1 	#AR	# 56	[c=4]pushsi1_not_fp/1
	load8! &19	# 57	[c=2]pushdi1_not_fp/1
	call! _fstat_r		# 58	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	# CBRANCH	# 61	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	add! -2147483648	
	push! 0	
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L5.l_o18d0c8
	# END CBRANCH
	load4! (+ &0 28)	# 177	[c=5]movsi_to_tr_unspec/1
	and! 0xf000		# 86	[c=4]*anddi3/0
	xor! 0x2000		# 95	[c=4]*xordi3/0
	and! 0xffffffff		# 231	[c=4]*anddi3/0
	add! -1		# 185	[c=4]*adddi/0
	shift_ru! 63	# 110	[c=40]*lshrdi3/0
	and! 0xff		# 233	[c=4]*anddi3/0
	store8! &1 	#AR	# 191	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 126	[c=5]movsi_to_tr_unspec/1
	load8! &21	# 193	[c=2]movdi_push_pop
	store8! &3 	#X1
	load8! &2 	#X1	# 128	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	push! 1024		# 130	[c=3]movdi_to_tr_unspec/0
	load8! &20	# 194	[c=2]movdi_push_pop
	store8! &2 	#AR
	load8! &1 	#AR	# 132	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	push! 2048		# 8	[c=4]movsi_push_pop
	store8! &1 	#AR
	load4! &0 	#AR	# 139	[c=4]movsi_push_pop
	store4! &18
	jump! .L12.l_o18d0c8		# 245	[c=4]jump
.L5.l_o18d0c8:
	push! 0		# 18	[c=3]movsi_to_tr_unspec/0
	load8! &21	# 217	[c=2]movdi_push_pop
	store8! &2 	#AR
	load8! &1 	#AR	# 20	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	load8! &2 	#X2	# 22	[c=6]movhi_to_tr_unspec/2
	add! 16	
	load2	
	#	
	and! 0x80		# 28	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=2)
	and! 65535		# 230	[c=12]*peep2_cbranchhi
	# - EQ0
	jump_zero! .L13.l_o18d0c8
	# END CBRANCH
	push! 64		# 67	[c=3]movdi_to_tr_unspec/0
	load8! &20	# 196	[c=2]movdi_push_pop
	store8! &2 	#AR
	load8! &1 	#AR	# 69	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	push! 0		# 9	[c=4]movsi_push_pop
	store8! &1 	#AR
	load4! &0 	#AR	# 238	[c=4]movsi_push_pop
	store4! &18
	jump! .L12.l_o18d0c8		# 248	[c=4]jump
.L13.l_o18d0c8:
	push! 1024		# 75	[c=3]movdi_to_tr_unspec/0
	load8! &20	# 195	[c=2]movdi_push_pop
	store8! &3 	#X1
	load8! &2 	#X1	# 77	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	push! 0		# 7	[c=4]movsi_push_pop
	store8! &1 	#AR
	load4! &0 	#AR	# 241	[c=4]movsi_push_pop
	store4! &18
.L12.l_o18d0c8:

	# epilogue
	set_sp! &16
	return

# FUNCTION ENDS:__swhatbuf_r

	#peephole move_dead
	#peephole move+push(pushable)
	#peephole pop+push+commut(di)
	#peephole 1
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole nop+pusharg
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole move
	#peephole move+push(pushable)
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole popdi(deadreg)+push
	#peephole and+pophi
	#peephole popdi(deadreg)+push
	#peephole and+pophi

# FUNCTION BEGINS:__smakebuf_r
	EXPORT	__smakebuf_r
__smakebuf_r:
	# prologue (4 GPRs)

	set_sp! &-6

	load8! &8	# 3	[c=2]movdi_push_pop
	store8! &3 	#X2
	load8! &2 	#X2	# 7	[c=6]movhi_to_tr_unspec/2
	add! 16	
	load2	
	#	
	and! 0x2		# 13	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=2)
	and! 65535		# 371	[c=12]*peep2_cbranchhi
	# - EQ0
	jump_zero! .L15.l_o18d0c8
	# END CBRANCH
	load8! &2 	#X2	# 22	[c=5]movdi_to_tr_unspec/1
	add! 119		# 24	[c=4]*adddi/0
	store8! &1 	#AR	# 25	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 27	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 29	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load8! &0 	#AR	# 31	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 33	[c=4]movdi_from_tr_unspec/1
	add! 24	
	store8	
	#	
	push! 1		# 35	[c=3]movsi_to_tr_unspec/0
	load8! &3 	#X2	# 37	[c=4]movsi_from_tr_unspec/1
	add! 32	
	store4	
	#	
.L14.l_o18d0c8:
	jump! .L26.l_o18d0c8		# 398	[c=4]jump
.L15.l_o18d0c8:
	push! &0		# 312	[c=4]movdi_to_tr_unspec/1
	add! 32		# 319	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 321	[c=0]*peep2_pop_pusharg
	push! &0		# 330	[c=4]movdi_to_tr_unspec/1
	add! 48		# 337	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 339	[c=0]*peep2_pop_pusharg
	load8! &4 	#X2	# 55	[c=4]pushdi1_not_fp/1
	load8! &10	# 56	[c=2]pushdi1_not_fp/1
	call! __swhatbuf_r		# 57	[c=0]*call_value_pop_1/0
	store8! &4

	set_sp! &3
	load4! &0 	#AR	# 58	[c=4]movsi_push_pop
	store8! &4 	#X3
	load8! &5	# 60	[c=2]pushdi1_not_fp/1
	load8! &8	# 61	[c=2]pushdi1_not_fp/1
	call! _malloc_r		# 62	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH EQ0	# 64	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L27.l_o18d0c8
	# END CBRANCH
	push! _cleanup_r		# 124	[c=3]movdi_to_tr_unspec/0
	load8! &8	# 126	[c=4]movdi_from_tr_unspec/1
	add! 88	
	store8	
	#	
	load8! &2 	#X2	# 128	[c=6]movhi_to_tr_unspec/2
	add! 16	
	load2	
	#	
	or! 0x80		# 134	[c=4]*iordi3/0
	store8! &2 	#X1	# 355	[c=4]movdi_from_tr_unspec/0
	load2! &1 	#X1	# 356	[c=5]movhi_to_tr_unspec/1
	load8! &3 	#X2	# 143	[c=4]movhi_from_tr_unspec/1
	add! 16	
	store2	
	#	
	load8! &0 	#AR	# 145	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 147	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load8! &0 	#AR	# 149	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 151	[c=4]movdi_from_tr_unspec/1
	add! 24	
	store8	
	#	
	load4! &5	# 299	[c=5]movsi_to_tr_unspec/1
	load8! &3 	#X2	# 160	[c=4]movsi_from_tr_unspec/1
	add! 32	
	store4	
	#	
	# CBRANCH EQ0	# 163	[c=14]cbranchsi4_internal
	load4! &4
	jump_not_zero! .L28.l_o18d0c8
	# END CBRANCH
	load2! &3 	#X3	# 284	[c=5]movhi_to_tr_unspec/1
	load8! &2 	#X1	# 287	[c=6]*iordi3/2
	or
	load8! &3 	#X2	# 374	[c=4]movhi_from_tr_unspec/1
	add! 16	
	store2	
	#	
.L29.l_o18d0c8:
	jump! .L26.l_o18d0c8		# 402	[c=4]jump
.L28.l_o18d0c8:
	load8! &2 	#X2	# 165	[c=6]movhi_to_tr_unspec/2
	add! 18	
	load2	
	#	
	sigx2		# 171	[c=6]*extendhidi2
	store8! &1 	#AR	# 172	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 295	[c=4]pushsi1_not_fp/1
	load8! &8	# 179	[c=2]pushdi1_not_fp/1
	call! _isatty_r		# 180	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH EQ0	# 182	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L20.l_o18d0c8
	# END CBRANCH
	load8! &2 	#X2	# 184	[c=6]movhi_to_tr_unspec/2
	add! 16	
	load2	
	#	
	store8! &2 	#X1	# 186	[c=4]movhi_from_tr_unspec/0
	load2! &3 	#X3	# 383	[c=5]movhi_to_tr_unspec/1
	load8! &2 	#X1	# 385	[c=6]*iordi3/2
	or
	load8! &3 	#X2	# 386	[c=4]movhi_from_tr_unspec/1
	add! 16	
	store2	
	#	
	jump! .L29.l_o18d0c8		# 405	[c=4]jump
.L27.l_o18d0c8:
	load8! &2 	#X2	# 66	[c=6]movhi_to_tr_unspec/2
	add! 16	
	load2	
	#	
	store8! &1 	#AR	# 68	[c=4]movhi_from_tr_unspec/0
	load8! &0 	#AR	# 70	[c=5]movdi_to_tr_unspec/1
	and! 0x200		# 72	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=2)
	and! 65535		# 367	[c=12]*peep2_cbranchhi
	# - EQ0
	jump_not_zero! .L14.l_o18d0c8
	# END CBRANCH
	load8! &0 	#AR	# 81	[c=5]movdi_to_tr_unspec/1
	and! 0xfffffffffffffffc		# 83	[c=4]*anddi3/0
	or! 0x2		# 92	[c=4]*iordi3/0
	load8! &3 	#X2	# 377	[c=4]movhi_from_tr_unspec/1
	add! 16	
	store2	
	#	
	load8! &2 	#X2	# 103	[c=5]movdi_to_tr_unspec/1
	add! 119		# 105	[c=4]*adddi/0
	store8! &1 	#AR	# 106	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 108	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 110	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load8! &0 	#AR	# 112	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 114	[c=4]movdi_from_tr_unspec/1
	add! 24	
	store8	
	#	
	push! 1		# 116	[c=3]movsi_to_tr_unspec/0
	load8! &3 	#X2	# 118	[c=4]movsi_from_tr_unspec/1
	add! 32	
	store4	
	#	
	jump! .L26.l_o18d0c8		# 407	[c=4]jump
.L20.l_o18d0c8:
	load8! &2 	#X2	# 192	[c=6]movhi_to_tr_unspec/2
	add! 16	
	load2	
	#	
	and! 0xfffffffffffffffc		# 198	[c=4]*anddi3/0
	or! 0x1		# 207	[c=4]*iordi3/0
	store8! &2 	#X1	# 352	[c=4]movhi_from_tr_unspec/0
	load2! &3 	#X3	# 391	[c=5]movhi_to_tr_unspec/1
	load8! &2 	#X1	# 393	[c=6]*iordi3/2
	or
	load8! &3 	#X2	# 394	[c=4]movhi_from_tr_unspec/1
	add! 16	
	store2	
	#	
	jump! .L29.l_o18d0c8		# 409	[c=4]jump
.L26.l_o18d0c8:

	# epilogue
	set_sp! &6
	return

# FUNCTION ENDS:__smakebuf_r

#	IMPORT _isatty_r
#	IMPORT _cleanup_r
#	IMPORT _malloc_r
#	IMPORT _fstat_r
#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: oe1c88e
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"malloc.c"
#	.text

# FUNCTION BEGINS:malloc
	EXPORT	malloc
malloc:
	# prologue (1 GPRs)
	push! 0

	load8! &2	# 7	[c=2]pushdi1_not_fp/1
	load8! _impure_ptr	# 8	[c=1]pushdi1_not_fp/1
	call! _malloc_r		# 9	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load8! &0 	#AR	# 14	[c=4]movdi_push_pop
	store8! &3

	# epilogue
	store8! &0 #set_sp! &1
	return

# FUNCTION ENDS:malloc


# FUNCTION BEGINS:free
	EXPORT	free
free:
	# prologue (0 GPRs)

	load8! &1	# 7	[c=2]pushdi1_not_fp/1
	load8! _impure_ptr	# 8	[c=1]pushdi1_not_fp/1
	call! _free_r		# 9	[c=5]*call_pop_0/0
	set_sp! (+ &0 16)
	


	# epilogue
	return

# FUNCTION ENDS:free

#	IMPORT _free_r
#	IMPORT _malloc_r
#	IMPORT _impure_ptr
#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: o51b7f2
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"mallocr.c"
#	.text
	#peephole move
	#peephole move
	#peephole move+push(pushable)
	#peephole pop+push+commut(di)
	#peephole move_dead
	#peephole move
	#peephole move
	#peephole pop+push+commut(di)
	#peephole binop1+deadreg+binop2
	#peephole pop+push+sub
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole move
	#peephole pop(deadreg)+push
	#peephole pop+pusharg
	#peephole move
	#peephole move
	#peephole binop1+deadreg+binop2
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole push+add+pop+push+ind pop offset
	#peephole pop+push+commut(di)
	#peephole move
	#peephole move+push(pushable)
	#peephole pop+push+commut(di)
	#peephole 1
	#peephole move
	#peephole move
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole move
	#peephole pop+push+commut(di)
	#peephole pop+push+commut(di)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole binop1+deadreg+binop2
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move
	#peephole pop+cmp
	#peephole move
	#peephole move
	#peephole 1
	#peephole move_dead
	#peephole move
	#peephole move
	#peephole move
	#peephole binop1+deadreg+binop2
	#peephole move
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole move
	#peephole move_dead
	#peephole pop+cmp
	#peephole move
	#peephole pop+push+commut(di)
	#peephole move
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole move
	#peephole move
	#peephole pop(deadreg)+push
	#peephole push+add+pop+push+ind pop
	#peephole push+pop+deadreg+binop
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole move
	#peephole move+binop
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole unary1+binop2+deadreg+binop3
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole pop+cmp
	#peephole 1
	#peephole move_dead
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole unary+deadreg+binop
	#peephole 1
	#peephole zero_extend
	#peephole move
	#peephole push+pop+deadreg+binop
	#peephole move
	#peephole unary+deadreg+binop
	#peephole 1
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole move
	#peephole pop(deadreg)+ind push offset
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move
	#peephole move+binop
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move
	#peephole move+binop
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move
	#peephole move+binop
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move
	#peephole move+binop
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move
	#peephole move+binop
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole 1
	#peephole move
	#peephole unary+deadreg+binop
	#peephole 1
	#peephole zero_extend
	#peephole pop+push+commut(di)
	#peephole move
	#peephole 1
	#peephole move
	#peephole move+binop
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole unary1+binop2+deadreg+binop3
	#peephole pop(deadreg)+ind push offset
	#peephole push+add+pop+push+ind pop offset
	#peephole rdx1+rdx2 (+)
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole move
	#peephole move
	#peephole pop(deadreg)+push
	#peephole move
	#peephole move
	#peephole pop(deadreg)+push
	#peephole push+add+pop+push+ind pop
	#peephole push+pop+deadreg+binop
	#peephole move
	#peephole move
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole push+pop+deadreg+binop
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+ind push offset
	#peephole 1
	#peephole move_dead
	#peephole move_dead
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole 1
	#peephole move_dead
	#peephole move_dead
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole 1
	#peephole move_dead
	#peephole move_dead
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole 1
	#peephole move_dead
	#peephole move_dead
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole 1
	#peephole move_dead
	#peephole move_dead
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole move_dead
	#peephole push+pop+deadreg+binop
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+ind push offset
	#peephole move_dead
	#peephole 1
	#peephole move
	#peephole move+binop
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole nop+set
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole nop+set
	#peephole redundant blockage insn
	#peephole nop+set
	#peephole set+nop
	#peephole move+push(pushable)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+push(deadreg)+sign_extend
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+push(deadreg)+sign_extend
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+push(deadreg)+sign_extend
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+push(deadreg)+sign_extend
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+push(deadreg)+sign_extend
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+push(deadreg)+sign_extend
	#peephole nop+set
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+push(deadreg)+sign_extend
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+push(deadreg)+sign_extend
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+push(deadreg)+sign_extend
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+push(deadreg)+sign_extend
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+push(deadreg)+sign_extend
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+push(deadreg)+sign_extend
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+push(deadreg)+sign_extend
	#peephole pop+block+push+commut(di)
	#peephole pop+move2(deadreg)
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push

# FUNCTION BEGINS:_malloc_r
	EXPORT	_malloc_r
_malloc_r:
	# prologue (9 GPRs)

	set_sp! &-9

	load8! &11	# 29	[c=5]movdi_to_tr_unspec/1
	add! 23		# 31	[c=4]*adddi/0
	store8! &1 	#AR	# 32	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 34	[c=12]cbranchdi4_internal
	push! 46	
	load8! &1 	#AR
	lt_u	
	not	
	jump_zero! .L2.l_o51b7f2
	# END CBRANCH
	# CBRANCH	# 36	[c=14]cbranchdi4_internal
	push! 32	
	load8! &12
	lt_u	
	not	
	jump_zero! .L3.l_o51b7f2
	# END CBRANCH
	load8! &10	# 38	[c=2]pushdi1_not_fp/1
	call! __malloc_lock		# 39	[c=5]*call_pop_0/0
	set_sp! (+ &0 8)
	

	push! 80		# 5	[c=4]movdi_push_pop
	store8! &1 	#AR
	push! 4		# 6	[c=4]movsi_push_pop
	store8! &2 	#X1
	push! 32		# 7	[c=4]movdi_push_pop
	store8! &4 	#X3
	load8! &0 	#AR	# 109	[c=5]movdi_to_tr_unspec/1
	add! __malloc_av_		# 111	[c=4]*adddi/0
	store8! &1 	#AR	# 112	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 114	[c=5]movdi_to_tr_unspec/1
	add! -16		# 116	[c=4]*adddi/0
	store8! &5 	#X4	# 117	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 120	[c=5]movdi_to_tr_unspec/1
	add! -16		# 122	[c=4]*adddi/0
	add! 24	# 2933	[c=4]*peep2_mov_from_mem_tr_to_tr_ind_offset_pushdi_unspec
	load8
	store8! &3 	#X2	# 127	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ	# 129	[c=12]cbranchdi4_internal
	load8! &4 	#X4
	load8! &3 	#X2
	xor	
	jump_zero! .L90.l_o51b7f2
	# END CBRANCH
.L8.l_o51b7f2:
	load8! &2 	#X2	# 2924	[c=11]movdi_to_tr_unspec/2
	add! 8	
	load8	
	#	
	and! 0xfffffffffffffffc		# 2926	[c=4]*anddi3/0
	store8! &4 	#X3	# 2927	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 147	[c=11]movdi_to_tr_unspec/2
	add! 24	
	load8	
	#	
	store8! &1 	#AR	# 149	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 151	[c=11]movdi_to_tr_unspec/2
	add! 16	
	load8	
	#	
	store8! &2 	#X1	# 153	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 155	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 157	[c=4]movdi_from_tr_unspec/1
	add! 24	
	store8	
	#	
	load8! &1 	#X1	# 159	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 161	[c=4]movdi_from_tr_unspec/1
	add! 16	
	store8	
	#	
	load8! &2 	#X2	# 163	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 165	[c=6]*adddi/2
	add
	store8! &1 	#AR	# 166	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 2928	[c=11]movdi_to_tr_unspec/2
	add! 8	
	load8	
	#	
	or! 0x1		# 2930	[c=4]*iordi3/0
	load8! &1 	#AR	# 179	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &10	# 181	[c=2]pushdi1_not_fp/1
	call! __malloc_unlock		# 182	[c=5]*call_pop_0/0
	set_sp! (+ &0 8)
	

	load8! &2 	#X2	# 183	[c=5]movdi_to_tr_unspec/1
	add! 16		# 185	[c=4]*adddi/0
	store8! &1 	#AR	# 186	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 2333	[c=4]movdi_push_pop
	store8! &11
	jump! .L91.l_o51b7f2		# 3316	[c=4]jump
.L3.l_o51b7f2:
	push! 12		# 54	[c=3]movsi_to_tr_unspec/0
	load8! &11	# 2948	[c=2]movdi_push_pop
	store8! &2 	#AR
	load8! &1 	#AR	# 56	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	push! 0		# 25	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 3143	[c=4]movdi_push_pop
	store8! &11
	jump! .L91.l_o51b7f2		# 3318	[c=4]jump
.L90.l_o51b7f2:
	load8! &0 	#AR	# 131	[c=11]movdi_to_tr_unspec/2
	add! 24	
	load8	
	#	
	store8! &3 	#X2	# 133	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 135	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	load8! &3 	#X2
	xor	
	push! 1	
	lt_u	
	jump_zero! .L8.l_o51b7f2
	# END CBRANCH
	load8! &1 	#X1	# 192	[c=5]movdi_to_tr_unspec/1
	add! 2		# 194	[c=4]*adddi/0
	store8! &6 	#X5	# 3120	[c=4]movsi_from_tr_unspec/0
.L10.l_o51b7f2:
	load8! (+ __malloc_av_ 32)	# 2842	[c=1]movdi_push_pop
	store8! &3 	#X2
	load8! (+ __malloc_av_ 8)	# 2841	[c=1]movdi_push_pop
	store8! &5 	#X4
	# CBRANCH EQ	# 619	[c=12]cbranchdi4_internal
	load8! &2 	#X2
	push! (+ __malloc_av_ 16)	
	xor	
	jump_zero! .L21.l_o51b7f2
	# END CBRANCH
	load8! &2 	#X2	# 2837	[c=11]movdi_to_tr_unspec/2
	add! 8	
	load8	
	#	
	and! 0xfffffffffffffffc		# 2839	[c=4]*anddi3/0
	store8! &2 	#X1	# 2840	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 639	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 641	[c=14]*subdi3/2
	sub
	store8! &1 	#AR	# 642	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 645	[c=12]cbranchdi4_internal
	push! 31	
	add! -9223372036854775808	
	load8! &1 	#AR
	add! -9223372036854775808	
	lt_u	
	not	
	jump_zero! .L92.l_o51b7f2
	# END CBRANCH
	push! (+ __malloc_av_ 16)		# 2825	[c=4]movdi_push_pop
	store8! (+ __malloc_av_ 40)
	push! (+ __malloc_av_ 16)		# 2826	[c=4]movdi_push_pop
	store8! (+ __malloc_av_ 32)
	# CBRANCH	# 719	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	add! -9223372036854775808	
	push! 0	
	add! -9223372036854775808	
	lt_u	
	jump_zero! .L93.l_o51b7f2
	# END CBRANCH
	# CBRANCH	# 750	[c=12]cbranchdi4_internal
	push! 511	
	load8! &2 	#X1
	lt_u	
	not	
	jump_zero! .L24.l_o51b7f2
	# END CBRANCH
	load8! &1 	#X1	# 752	[c=5]movdi_to_tr_unspec/1
	shift_ru! 3	# 754	[c=40]*lshrdi3/0
	store8! &1 	#AR	# 755	[c=4]movdi_from_tr_unspec/0
	load8! (+ __malloc_av_ 8)	# 3056	[c=1]movdi_push_pop
	store8! &5 	#X4
	load4! &0 	#AR	# 2779	[c=5]movsi_to_tr_unspec/1
	sigx4		# 2781	[c=6]*extendsidi2
	shift_rs! 2	# 2782	[c=40]*ashrdi3/0
	and! 0xffffffff		# 3138	[c=4]*anddi3/0
	store8! &2 	#X1	# 2787	[c=4]movdi_from_tr_unspec/0
	push! 1		# 785	[c=3]movdi_to_tr_unspec/0
	load8! &2 	#X1	# 787	[c=10]*ashldi3/2
	shift_l
	load8! &5 	#X4	# 2789	[c=6]*iordi3/2
	or
	store8! &5 	#X4	# 2790	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 2791	[c=4]movdi_push_pop
	store8! (+ __malloc_av_ 8)
	load8! &0 	#AR	# 800	[c=5]movdi_to_tr_unspec/1
	add! 1		# 802	[c=4]*adddi/0
	store8! &1 	#AR	# 3060	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 3061	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 2796	[c=6]*adddi/2
	add
	sigx4		# 3066	[c=6]*extendsidi2
	shift_l! 3	# 2807	[c=8]*ashldi3/0
	add! __malloc_av_		# 2808	[c=4]*adddi/0
	store8! &1 	#AR	# 2809	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 837	[c=5]movdi_to_tr_unspec/1
	add! -16		# 839	[c=4]*adddi/0
	store8! &7 	#X6	# 840	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 843	[c=5]movdi_to_tr_unspec/1
	add! -16		# 845	[c=4]*adddi/0
	add! 16	# 2810	[c=4]*peep2_mov_from_mem_tr_to_tr_ind_offset_pushdi_unspec
	load8
	store8! &2 	#X1	# 850	[c=4]movdi_from_tr_unspec/0
	load8! &6 	#X6	# 852	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 854	[c=4]movdi_from_tr_unspec/1
	add! 24	
	store8	
	#	
	load8! &1 	#X1	# 856	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 858	[c=4]movdi_from_tr_unspec/1
	add! 16	
	store8	
	#	
	load8! &2 	#X2	# 2812	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 2814	[c=5]movdi_to_tr_unspec/1
	add! 0		# 2819	[c=4]*adddi/0
	store8		# 2818	[c=4]*peep2_mov_from_tr_to_mem_tr_ind_popdi_unspec
	load8! &2 	#X2	# 870	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 872	[c=4]movdi_from_tr_unspec/1
	add! 24	
	store8	
	#	
.L21.l_o51b7f2:
	load4! &5 	#X5	# 2677	[c=5]movsi_to_tr_unspec/1
	sigx4		# 2679	[c=6]*extendsidi2
	shift_rs! 2	# 2680	[c=40]*ashrdi3/0
	and! 0xffffffff		# 3134	[c=4]*anddi3/0
	store8! &1 	#AR	# 2685	[c=4]movdi_from_tr_unspec/0
	push! 1		# 1298	[c=3]movdi_to_tr_unspec/0
	load8! &1 	#AR	# 1300	[c=10]*ashldi3/2
	shift_l
	store8! &2 	#X1	# 1301	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 1303	[c=12]cbranchdi4_internal
	load8! &4 	#X4
	load8! &2 	#X1
	lt_u	
	not	
	jump_zero! .L34.l_o51b7f2
	# END CBRANCH
.L99.l_o51b7f2:
	load8! &1 	#X1	# 1305	[c=5]movdi_to_tr_unspec/1
	load8! &5 	#X4	# 1307	[c=6]*anddi3/2
	and
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_not_zero! .L49.l_o51b7f2	# 2676	[c=12]*peep2_cbranchdi
	# END CBRANCH
	load8! &5 	#X5	# 1312	[c=5]movdi_to_tr_unspec/1
	and! 0xfffffffffffffffc		# 1314	[c=4]*anddi3/0
	add! 4		# 1323	[c=4]*adddi/0
	store8! &6 	#X5	# 2987	[c=4]movsi_from_tr_unspec/0
	load8! &1 	#X1	# 1330	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 1332	[c=6]*adddi/2
	add
	store8! &2 	#X1	# 1333	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 1336	[c=5]movdi_to_tr_unspec/1
	load8! &5 	#X4	# 1338	[c=6]*anddi3/2
	and
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_not_zero! .L49.l_o51b7f2	# 2675	[c=12]*peep2_cbranchdi
	# END CBRANCH
.L36.l_o51b7f2:
	load8! &5 	#X5	# 1343	[c=5]movdi_to_tr_unspec/1
	add! 4		# 1345	[c=4]*adddi/0
	store8! &6 	#X5	# 2981	[c=4]movsi_from_tr_unspec/0
	load8! &1 	#X1	# 1352	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 1354	[c=6]*adddi/2
	add
	store8! &2 	#X1	# 1355	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 1358	[c=5]movdi_to_tr_unspec/1
	load8! &5 	#X4	# 1360	[c=6]*anddi3/2
	and
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L36.l_o51b7f2	# 2672	[c=12]*peep2_cbranchdi
	# END CBRANCH
.L49.l_o51b7f2:
	load8! &5 	#X5	# 1368	[c=5]movdi_to_tr_unspec/1
	add! 1		# 1370	[c=4]*adddi/0
	store8! &1 	#AR	# 2973	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 2974	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 2656	[c=6]*adddi/2
	add
	sigx4		# 2979	[c=6]*extendsidi2
	shift_l! 3	# 2667	[c=8]*ashldi3/0
	add! -16		# 2668	[c=4]*adddi/0
	add! __malloc_av_		# 1407	[c=4]*adddi/0
	store8! &8 	#X7	# 1408	[c=4]movdi_from_tr_unspec/0
	load8! &7 	#X7	# 19	[c=4]movdi_push_pop
	store8! &7 	#X6
	load4! &5 	#X5	# 20	[c=4]movsi_push_pop
	store8! &9 	#X8
.L43.l_o51b7f2:
	load8! &6 	#X6	# 1411	[c=11]movdi_to_tr_unspec/2
	add! 24	
	load8	
	#	
	store8! &3 	#X2	# 1413	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ	# 1415	[c=12]cbranchdi4_internal
	load8! &6 	#X6
	load8! &3 	#X2
	xor	
	jump_zero! .L37.l_o51b7f2
	# END CBRANCH
	load8! &2 	#X2	# 2648	[c=11]movdi_to_tr_unspec/2
	add! 8	
	load8	
	#	
	and! 0xfffffffffffffffc		# 2650	[c=4]*anddi3/0
	store8! &5 	#X4	# 2651	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 1426	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 1428	[c=14]*subdi3/2
	sub
	store8! &1 	#AR	# 1429	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 1432	[c=12]cbranchdi4_internal
	push! 31	
	add! -9223372036854775808	
	load8! &1 	#AR
	add! -9223372036854775808	
	lt_u	
	not	
	jump_zero! .L38.l_o51b7f2
	# END CBRANCH
	# CBRANCH	# 1434	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	add! -9223372036854775808	
	push! 0	
	add! -9223372036854775808	
	lt_u	
	jump_zero! .L39.l_o51b7f2
	# END CBRANCH
.L40.l_o51b7f2:
	load8! &2 	#X2	# 1583	[c=11]movdi_to_tr_unspec/2
	add! 24	
	load8	
	#	
	store8! &3 	#X2	# 1585	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ	# 1588	[c=12]cbranchdi4_internal
	load8! &6 	#X6
	load8! &3 	#X2
	xor	
	jump_zero! .L37.l_o51b7f2
	# END CBRANCH
	load8! &2 	#X2	# 2644	[c=11]movdi_to_tr_unspec/2
	add! 8	
	load8	
	#	
	and! 0xfffffffffffffffc		# 2646	[c=4]*anddi3/0
	store8! &5 	#X4	# 2647	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 1448	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 1450	[c=14]*subdi3/2
	sub
	store8! &1 	#AR	# 1451	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 1454	[c=12]cbranchdi4_internal
	push! 31	
	add! -9223372036854775808	
	load8! &1 	#AR
	add! -9223372036854775808	
	lt_u	
	not	
	jump_zero! .L38.l_o51b7f2
	# END CBRANCH
	# CBRANCH	# 1535	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	add! -9223372036854775808	
	push! 0	
	add! -9223372036854775808	
	lt_u	
	not	
	jump_zero! .L40.l_o51b7f2
	# END CBRANCH
.L39.l_o51b7f2:
	load8! &2 	#X2	# 1538	[c=5]movdi_to_tr_unspec/1
	load8! &5 	#X4	# 1540	[c=6]*adddi/2
	add
	store8! &1 	#AR	# 1541	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 2629	[c=11]movdi_to_tr_unspec/2
	add! 8	
	load8	
	#	
	or! 0x1		# 2631	[c=4]*iordi3/0
	load8! &1 	#AR	# 1554	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &2 	#X2	# 1556	[c=11]movdi_to_tr_unspec/2
	add! 24	
	load8	
	#	
	store8! &1 	#AR	# 1558	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 1560	[c=11]movdi_to_tr_unspec/2
	add! 16	
	load8	
	#	
	store8! &2 	#X1	# 1562	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 1564	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 1566	[c=4]movdi_from_tr_unspec/1
	add! 24	
	store8	
	#	
	load8! &1 	#X1	# 1568	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 1570	[c=4]movdi_from_tr_unspec/1
	add! 16	
	store8	
	#	
	load8! &10	# 1572	[c=2]pushdi1_not_fp/1
	call! __malloc_unlock		# 1573	[c=5]*call_pop_0/0
	set_sp! (+ &0 8)
	

	load8! &2 	#X2	# 1574	[c=5]movdi_to_tr_unspec/1
	add! 16		# 1576	[c=4]*adddi/0
	store8! &1 	#AR	# 1577	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 3146	[c=4]movdi_push_pop
	store8! &11
	jump! .L91.l_o51b7f2		# 3322	[c=4]jump
.L2.l_o51b7f2:
	load8! &0 	#AR	# 44	[c=5]movdi_to_tr_unspec/1
	and! 0xfffffffffffffff0		# 46	[c=4]*anddi3/0
	store8! &4 	#X3	# 47	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 49	[c=12]cbranchdi4_internal
	push! 2147483647	
	load8! &4 	#X3
	lt_u	
	not	
	jump_zero! .L3.l_o51b7f2
	# END CBRANCH
	# CBRANCH	# 51	[c=14]cbranchdi4_internal
	load8! &3 	#X3
	load8! &12
	lt_u	
	not	
	jump_zero! .L3.l_o51b7f2
	# END CBRANCH
	load8! &10	# 62	[c=2]pushdi1_not_fp/1
	call! __malloc_lock		# 63	[c=5]*call_pop_0/0
	set_sp! (+ &0 8)
	

	# CBRANCH	# 64	[c=12]cbranchdi4_internal
	push! 503	
	load8! &4 	#X3
	lt_u	
	jump_zero! .L94.l_o51b7f2
	# END CBRANCH
	load8! &3 	#X3	# 205	[c=5]movdi_to_tr_unspec/1
	shift_ru! 9	# 207	[c=40]*lshrdi3/0
	store8! &1 	#AR	# 208	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 210	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L69.l_o51b7f2
	# END CBRANCH
	# CBRANCH	# 212	[c=12]cbranchdi4_internal
	push! 4	
	load8! &1 	#AR
	lt_u	
	not	
	jump_zero! .L12.l_o51b7f2
	# END CBRANCH
	load8! &3 	#X3	# 214	[c=5]movdi_to_tr_unspec/1
	shift_ru! 6	# 216	[c=40]*lshrdi3/0
	store8! &1 	#AR	# 3108	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 3109	[c=5]movdi_to_tr_unspec/1
	add! 56		# 225	[c=4]*adddi/0
	store8! &7 	#X6	# 3112	[c=4]movsi_from_tr_unspec/0
	load8! &0 	#AR	# 233	[c=5]movdi_to_tr_unspec/1
	add! 57		# 235	[c=4]*adddi/0
	store8! &6 	#X5	# 3114	[c=4]movsi_from_tr_unspec/0
	load8! &5 	#X5	# 2914	[c=5]movdi_to_tr_unspec/1
	load8! &6 	#X5	# 2916	[c=6]*adddi/2
	add
	sigx4		# 3118	[c=6]*extendsidi2
	shift_l! 3	# 2921	[c=8]*ashldi3/0
	store8! &1 	#AR	# 2922	[c=4]movdi_from_tr_unspec/0
.L11.l_o51b7f2:
	load8! &0 	#AR	# 495	[c=5]movdi_to_tr_unspec/1
	add! __malloc_av_		# 497	[c=4]*adddi/0
	store8! &1 	#AR	# 498	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 500	[c=5]movdi_to_tr_unspec/1
	add! -16		# 502	[c=4]*adddi/0
	store8! &5 	#X4	# 503	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 506	[c=5]movdi_to_tr_unspec/1
	add! -16		# 508	[c=4]*adddi/0
	add! 24	# 2856	[c=4]*peep2_mov_from_mem_tr_to_tr_ind_offset_pushdi_unspec
	load8
	store8! &3 	#X2	# 513	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ	# 515	[c=12]cbranchdi4_internal
	load8! &4 	#X4
	load8! &3 	#X2
	xor	
	jump_zero! .L10.l_o51b7f2
	# END CBRANCH
	load8! &2 	#X2	# 2852	[c=11]movdi_to_tr_unspec/2
	add! 8	
	load8	
	#	
	and! 0xfffffffffffffffc		# 2854	[c=4]*anddi3/0
	store8! &2 	#X1	# 2855	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 526	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 528	[c=14]*subdi3/2
	sub
	store8! &1 	#AR	# 529	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 532	[c=12]cbranchdi4_internal
	push! 31	
	add! -9223372036854775808	
	load8! &1 	#AR
	add! -9223372036854775808	
	lt_u	
	not	
	jump_zero! .L71.l_o51b7f2
	# END CBRANCH
	# CBRANCH	# 534	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	add! -9223372036854775808	
	push! 0	
	add! -9223372036854775808	
	lt_u	
	jump_zero! .L17.l_o51b7f2
	# END CBRANCH
.L18.l_o51b7f2:
	load8! &2 	#X2	# 604	[c=11]movdi_to_tr_unspec/2
	add! 24	
	load8	
	#	
	store8! &3 	#X2	# 606	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ	# 609	[c=12]cbranchdi4_internal
	load8! &4 	#X4
	load8! &3 	#X2
	xor	
	jump_zero! .L10.l_o51b7f2
	# END CBRANCH
	load8! &2 	#X2	# 2848	[c=11]movdi_to_tr_unspec/2
	add! 8	
	load8	
	#	
	and! 0xfffffffffffffffc		# 2850	[c=4]*anddi3/0
	store8! &2 	#X1	# 2851	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 548	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 550	[c=14]*subdi3/2
	sub
	store8! &1 	#AR	# 551	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 554	[c=12]cbranchdi4_internal
	push! 31	
	add! -9223372036854775808	
	load8! &1 	#AR
	add! -9223372036854775808	
	lt_u	
	not	
	jump_zero! .L72.l_o51b7f2
	# END CBRANCH
	# CBRANCH	# 556	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	add! -9223372036854775808	
	push! 0	
	add! -9223372036854775808	
	lt_u	
	not	
	jump_zero! .L18.l_o51b7f2
	# END CBRANCH
.L17.l_o51b7f2:
	load8! &2 	#X2	# 559	[c=11]movdi_to_tr_unspec/2
	add! 24	
	load8	
	#	
	store8! &1 	#AR	# 561	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 563	[c=11]movdi_to_tr_unspec/2
	add! 16	
	load8	
	#	
	store8! &4 	#X3	# 565	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 567	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 569	[c=4]movdi_from_tr_unspec/1
	add! 24	
	store8	
	#	
	load8! &3 	#X3	# 571	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 573	[c=4]movdi_from_tr_unspec/1
	add! 16	
	store8	
	#	
	load8! &2 	#X2	# 575	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 577	[c=6]*adddi/2
	add
	store8! &1 	#AR	# 578	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 2843	[c=11]movdi_to_tr_unspec/2
	add! 8	
	load8	
	#	
	or! 0x1		# 2845	[c=4]*iordi3/0
	load8! &1 	#AR	# 591	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &10	# 593	[c=2]pushdi1_not_fp/1
	call! __malloc_unlock		# 594	[c=5]*call_pop_0/0
	set_sp! (+ &0 8)
	

	load8! &2 	#X2	# 595	[c=5]movdi_to_tr_unspec/1
	add! 16		# 597	[c=4]*adddi/0
	store8! &1 	#AR	# 598	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 3149	[c=4]movdi_push_pop
	store8! &11
	jump! .L91.l_o51b7f2		# 3325	[c=4]jump
.L69.l_o51b7f2:
	push! 1024		# 8	[c=4]movdi_push_pop
	store8! &1 	#AR
	push! 64		# 9	[c=4]movsi_push_pop
	store8! &6 	#X5
	push! 63		# 10	[c=4]movsi_push_pop
	store8! &7 	#X6
	jump! .L11.l_o51b7f2		# 3327	[c=4]jump
.L34.l_o51b7f2:
	load8! (+ __malloc_av_ 16)	# 2610	[c=1]movdi_push_pop
	store8! &3 	#X2
	load8! &2 	#X2	# 2611	[c=11]movdi_to_tr_unspec/2
	add! 8	
	load8	
	#	
	and! 0xfffffffffffffffc		# 2613	[c=4]*anddi3/0
	store8! &6 	#X5	# 2614	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 1755	[c=12]cbranchdi4_internal
	load8! &5 	#X5
	load8! &4 	#X3
	lt_u	
	not	
	jump_zero! .L50.l_o51b7f2
	# END CBRANCH
	load8! &5 	#X5	# 1757	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 1759	[c=14]*subdi3/2
	sub
	store8! &1 	#AR	# 1760	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 1763	[c=12]cbranchdi4_internal
	push! 31	
	add! -9223372036854775808	
	load8! &1 	#AR
	add! -9223372036854775808	
	lt_u	
	not	
	jump_zero! .L51.l_o51b7f2
	# END CBRANCH
.L50.l_o51b7f2:
	load8! &2 	#X2	# 1766	[c=5]movdi_to_tr_unspec/1
	load8! &6 	#X5	# 1768	[c=6]*adddi/2
	add
	store8! &8 	#X7	# 1769	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 1772	[c=5]movdi_to_tr_unspec/1
	load8! __malloc_top_pad	# 1774	[c=5]*adddi/1
	add
	store8! &1 	#AR	# 1775	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ	# 1778	[c=13]cbranchdi4_internal
	load8! __malloc_sbrk_base
	push! -1	
	xor	
	jump_zero! .L95.l_o51b7f2
	# END CBRANCH
	load8! &0 	#AR	# 2605	[c=5]movdi_to_tr_unspec/1
	add! 4127		# 2607	[c=4]*adddi/0
	and! 0xfffffffffffff000		# 2608	[c=4]*anddi3/0
	store8! &7 	#X6	# 2609	[c=4]movdi_from_tr_unspec/0
.L53.l_o51b7f2:
	load8! &6 	#X6	# 1802	[c=4]pushdi1_not_fp/1
	load8! &11	# 1803	[c=2]pushdi1_not_fp/1
	call! _sbrk_r		# 1804	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load8! &0 	#AR	# 1805	[c=4]movdi_push_pop
	store8! &5 	#X4
	# CBRANCH EQ	# 1806	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	push! -1	
	xor	
	jump_zero! .L96.l_o51b7f2
	# END CBRANCH
	# CBRANCH	# 1821	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	load8! &8 	#X7
	lt_u	
	jump_zero! .L56.l_o51b7f2
	# END CBRANCH
	# CBRANCH EQ	# 1823	[c=12]cbranchdi4_internal
	load8! &2 	#X2
	push! __malloc_av_	
	xor	
	jump_zero! .L57.l_o51b7f2
	# END CBRANCH
	load8! (+ __malloc_av_ 16)	# 2603	[c=1]movdi_push_pop
	store8! &3 	#X2
	load8! &2 	#X2	# 1830	[c=11]movdi_to_tr_unspec/2
	add! 8	
	load8	
	#	
	store8! &2 	#X1	# 1832	[c=4]movdi_from_tr_unspec/0
.L55.l_o51b7f2:
	load8! &1 	#X1	# 2190	[c=5]movdi_to_tr_unspec/1
	and! 0xfffffffffffffffc		# 2192	[c=4]*anddi3/0
	store8! &2 	#X1	# 2193	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 2195	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 2197	[c=14]*subdi3/2
	sub
	store8! &1 	#AR	# 2198	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 2201	[c=12]cbranchdi4_internal
	load8! &1 	#X1
	load8! &4 	#X3
	lt_u	
	not	
	jump_zero! .L66.l_o51b7f2
	# END CBRANCH
	# CBRANCH	# 2203	[c=12]cbranchdi4_internal
	push! 31	
	add! -9223372036854775808	
	load8! &1 	#AR
	add! -9223372036854775808	
	lt_u	
	jump_zero! .L66.l_o51b7f2
	# END CBRANCH
.L51.l_o51b7f2:
	load8! &3 	#X3	# 2212	[c=5]movdi_to_tr_unspec/1
	or! 0x1		# 2214	[c=4]*iordi3/0
	load8! &3 	#X2	# 2219	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &2 	#X2	# 2221	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 2223	[c=6]*adddi/2
	add
	store8! &2 	#X1	# 2224	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 2527	[c=4]movdi_push_pop
	store8! (+ __malloc_av_ 16)
	load8! &0 	#AR	# 2231	[c=5]movdi_to_tr_unspec/1
	or! 0x1		# 2233	[c=4]*iordi3/0
	load8! &2 	#X1	# 2239	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &10	# 2241	[c=2]pushdi1_not_fp/1
	call! __malloc_unlock		# 2242	[c=5]*call_pop_0/0
	set_sp! (+ &0 8)
	

	load8! &2 	#X2	# 2243	[c=5]movdi_to_tr_unspec/1
	add! 16		# 2245	[c=4]*adddi/0
	store8! &1 	#AR	# 2246	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 3152	[c=4]movdi_push_pop
	store8! &11
	jump! .L91.l_o51b7f2		# 3331	[c=4]jump
.L93.l_o51b7f2:
	load8! &2 	#X2	# 721	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 723	[c=6]*adddi/2
	add
	store8! &1 	#AR	# 724	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 2820	[c=11]movdi_to_tr_unspec/2
	add! 8	
	load8	
	#	
	or! 0x1		# 2822	[c=4]*iordi3/0
	load8! &1 	#AR	# 737	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &10	# 739	[c=2]pushdi1_not_fp/1
	call! __malloc_unlock		# 740	[c=5]*call_pop_0/0
	set_sp! (+ &0 8)
	

	load8! &2 	#X2	# 741	[c=5]movdi_to_tr_unspec/1
	add! 16		# 743	[c=4]*adddi/0
	store8! &1 	#AR	# 744	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 3155	[c=4]movdi_push_pop
	store8! &11
	jump! .L91.l_o51b7f2		# 3333	[c=4]jump
.L72.l_o51b7f2:
	load4! &6 	#X6	# 15	[c=4]movsi_push_pop
	store8! &6 	#X5
	jump! .L10.l_o51b7f2		# 3335	[c=4]jump
.L24.l_o51b7f2:
	load8! &1 	#X1	# 878	[c=5]movdi_to_tr_unspec/1
	shift_ru! 9	# 880	[c=40]*lshrdi3/0
	store8! &1 	#AR	# 881	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 883	[c=12]cbranchdi4_internal
	push! 4	
	load8! &1 	#AR
	lt_u	
	jump_zero! .L97.l_o51b7f2
	# END CBRANCH
	# CBRANCH	# 941	[c=12]cbranchdi4_internal
	push! 20	
	load8! &1 	#AR
	lt_u	
	not	
	jump_zero! .L27.l_o51b7f2
	# END CBRANCH
	load8! &0 	#AR	# 947	[c=5]movdi_to_tr_unspec/1
	add! 91		# 949	[c=4]*adddi/0
	store8! &5 	#X4	# 3033	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 3034	[c=5]movdi_to_tr_unspec/1
	add! 92		# 959	[c=4]*adddi/0
	store8! &1 	#AR	# 3036	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 3037	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 2755	[c=6]*adddi/2
	add
	sigx4		# 3042	[c=6]*extendsidi2
	shift_l! 3	# 2761	[c=8]*ashldi3/0
	store8! &1 	#AR	# 2762	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 1166	[c=5]movdi_to_tr_unspec/1
	add! __malloc_av_		# 1168	[c=4]*adddi/0
	store8! &1 	#AR	# 1169	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 1171	[c=5]movdi_to_tr_unspec/1
	add! -16		# 1173	[c=4]*adddi/0
	store8! &7 	#X6	# 1174	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 1177	[c=5]movdi_to_tr_unspec/1
	add! -16		# 1179	[c=4]*adddi/0
	add! 16	# 2705	[c=4]*peep2_mov_from_mem_tr_to_tr_ind_offset_pushdi_unspec
	load8
	store8! &1 	#AR	# 1184	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ	# 1186	[c=12]cbranchdi4_internal
	load8! &6 	#X6
	load8! &1 	#AR
	xor	
	jump_zero! .L98.l_o51b7f2
	# END CBRANCH
.L30.l_o51b7f2:
	load8! &0 	#AR	# 2687	[c=11]movdi_to_tr_unspec/2
	add! 8	
	load8	
	#	
	and! 0xfffffffffffffffc		# 2689	[c=4]*anddi3/0
	store8! &5 	#X4	# 2690	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 1247	[c=12]cbranchdi4_internal
	load8! &1 	#X1
	load8! &5 	#X4
	lt_u	
	jump_zero! .L32.l_o51b7f2
	# END CBRANCH
	load8! &0 	#AR	# 1230	[c=11]movdi_to_tr_unspec/2
	add! 16	
	load8	
	#	
	store8! &1 	#AR	# 1232	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 1234	[c=12]cbranchdi4_internal
	load8! &6 	#X6
	load8! &1 	#AR
	xor	
	push! 1	
	lt_u	
	jump_zero! .L30.l_o51b7f2
	# END CBRANCH
.L32.l_o51b7f2:
	load8! &0 	#AR	# 1250	[c=11]movdi_to_tr_unspec/2
	add! 24	
	load8	
	#	
	store8! &7 	#X6	# 1252	[c=4]movdi_from_tr_unspec/0
	load8! (+ __malloc_av_ 8)	# 2686	[c=1]movdi_push_pop
	store8! &5 	#X4
	load8! &6 	#X6	# 1261	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 1263	[c=4]movdi_from_tr_unspec/1
	add! 24	
	store8	
	#	
	load8! &0 	#AR	# 1265	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 1267	[c=4]movdi_from_tr_unspec/1
	add! 16	
	store8	
	#	
	load8! &2 	#X2	# 1269	[c=5]movdi_to_tr_unspec/1
	load8! &7 	#X6	# 1271	[c=4]movdi_from_tr_unspec/1
	add! 16	
	store8	
	#	
	load8! &2 	#X2	# 1273	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 1275	[c=4]movdi_from_tr_unspec/1
	add! 24	
	store8	
	#	
.L105.l_o51b7f2:
	load4! &5 	#X5	# 3158	[c=5]movsi_to_tr_unspec/1
	sigx4		# 3160	[c=6]*extendsidi2
	shift_rs! 2	# 3161	[c=40]*ashrdi3/0
	and! 0xffffffff		# 3162	[c=4]*anddi3/0
	store8! &1 	#AR	# 3164	[c=4]movdi_from_tr_unspec/0
	push! 1		# 3165	[c=3]movdi_to_tr_unspec/0
	load8! &1 	#AR	# 3167	[c=10]*ashldi3/2
	shift_l
	store8! &2 	#X1	# 3168	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 3169	[c=12]cbranchdi4_internal
	load8! &4 	#X4
	load8! &2 	#X1
	lt_u	
	not	
	jump_zero! .L34.l_o51b7f2
	# END CBRANCH
	jump! .L99.l_o51b7f2		# 3341	[c=4]jump
.L12.l_o51b7f2:
	# CBRANCH	# 270	[c=12]cbranchdi4_internal
	push! 20	
	load8! &1 	#AR
	lt_u	
	jump_zero! .L100.l_o51b7f2
	# END CBRANCH
	# CBRANCH	# 323	[c=12]cbranchdi4_internal
	push! 84	
	load8! &1 	#AR
	lt_u	
	not	
	jump_zero! .L14.l_o51b7f2
	# END CBRANCH
	load8! &3 	#X3	# 325	[c=5]movdi_to_tr_unspec/1
	shift_ru! 12	# 327	[c=40]*lshrdi3/0
	store8! &1 	#AR	# 3089	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 3090	[c=5]movdi_to_tr_unspec/1
	add! 110		# 336	[c=4]*adddi/0
	store8! &7 	#X6	# 3093	[c=4]movsi_from_tr_unspec/0
	load8! &0 	#AR	# 344	[c=5]movdi_to_tr_unspec/1
	add! 111		# 346	[c=4]*adddi/0
	store8! &6 	#X5	# 3095	[c=4]movsi_from_tr_unspec/0
	load8! &5 	#X5	# 2888	[c=5]movdi_to_tr_unspec/1
	load8! &6 	#X5	# 2890	[c=6]*adddi/2
	add
	sigx4		# 3099	[c=6]*extendsidi2
	shift_l! 3	# 2895	[c=8]*ashldi3/0
	store8! &1 	#AR	# 2896	[c=4]movdi_from_tr_unspec/0
	jump! .L11.l_o51b7f2		# 3344	[c=4]jump
.L37.l_o51b7f2:
	load8! &6 	#X6	# 1596	[c=5]movdi_to_tr_unspec/1
	add! 16		# 1598	[c=4]*adddi/0
	store8! &7 	#X6	# 1599	[c=4]movdi_from_tr_unspec/0
	load8! &8 	#X8	# 1602	[c=5]movdi_to_tr_unspec/1
	add! 1		# 1604	[c=4]*adddi/0
	store8! &9 	#X8	# 2969	[c=4]movsi_from_tr_unspec/0
	load8! &8 	#X8	# 1611	[c=5]movdi_to_tr_unspec/1
	and! 0x3		# 1613	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 2972	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L43.l_o51b7f2
	# END CBRANCH
.L46.l_o51b7f2:
	load8! &5 	#X5	# 1625	[c=5]movdi_to_tr_unspec/1
	and! 0x3		# 1627	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 2967	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L101.l_o51b7f2
	# END CBRANCH
	load8! &5 	#X5	# 1660	[c=5]movdi_to_tr_unspec/1
	add! -1		# 1662	[c=4]*adddi/0
	store8! &6 	#X5	# 2964	[c=4]movsi_from_tr_unspec/0
	load8! &7 	#X7	# 1674	[c=5]movdi_to_tr_unspec/1
	add! -16		# 1676	[c=4]*adddi/0
	store8! &8 	#X7	# 1677	[c=4]movdi_from_tr_unspec/0
	load8! &7 	#X7	# 1681	[c=11]movdi_to_tr_unspec/2
	add! 16	
	load8	
	#	
	# CBRANCH - peep (modesize=8)
	# - EQ
	load8! &8 	#X7	# 2620	[c=12]*peep2_cbranchdi
	xor	
	jump_zero! .L46.l_o51b7f2
	# END CBRANCH
	load8! (+ __malloc_av_ 8)	# 2618	[c=1]movdi_push_pop
	store8! &3 	#X2
.L45.l_o51b7f2:
	load8! &1 	#X1	# 1695	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 1697	[c=6]*adddi/2
	add
	store8! &2 	#X1	# 1698	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 1701	[c=12]cbranchdi4_internal
	load8! &2 	#X2
	load8! &2 	#X1
	lt_u	
	not	
	jump_zero! .L34.l_o51b7f2
	# END CBRANCH
	# CBRANCH EQ0	# 1703	[c=12]cbranchdi4_internal
	load8! &1 	#X1
	jump_zero! .L34.l_o51b7f2
	# END CBRANCH
	load8! &1 	#X1	# 1705	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 1707	[c=6]*anddi3/2
	and
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_not_zero! .L47.l_o51b7f2	# 2617	[c=12]*peep2_cbranchdi
	# END CBRANCH
.L48.l_o51b7f2:
	load8! &8 	#X8	# 1712	[c=5]movdi_to_tr_unspec/1
	add! 4		# 1714	[c=4]*adddi/0
	store8! &9 	#X8	# 2962	[c=4]movsi_from_tr_unspec/0
	load8! &1 	#X1	# 1721	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 1723	[c=6]*adddi/2
	add
	store8! &2 	#X1	# 1724	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 1727	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 1729	[c=6]*anddi3/2
	and
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L48.l_o51b7f2	# 2616	[c=12]*peep2_cbranchdi
	# END CBRANCH
.L47.l_o51b7f2:
	load4! &8 	#X8	# 18	[c=4]movsi_push_pop
	store8! &6 	#X5
	load8! &5 	#X5	# 3172	[c=5]movdi_to_tr_unspec/1
	add! 1		# 3174	[c=4]*adddi/0
	store8! &1 	#AR	# 3175	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 3176	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 3178	[c=6]*adddi/2
	add
	sigx4		# 3179	[c=6]*extendsidi2
	shift_l! 3	# 3180	[c=8]*ashldi3/0
	add! -16		# 3181	[c=4]*adddi/0
	add! __malloc_av_		# 3183	[c=4]*adddi/0
	store8! &8 	#X7	# 3184	[c=4]movdi_from_tr_unspec/0
	load8! &7 	#X7	# 3185	[c=4]movdi_push_pop
	store8! &7 	#X6
	load4! &5 	#X5	# 3186	[c=4]movsi_push_pop
	store8! &9 	#X8
	jump! .L43.l_o51b7f2		# 3347	[c=4]jump
.L38.l_o51b7f2:
	load8! &2 	#X2	# 1457	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 1459	[c=6]*adddi/2
	add
	store8! &2 	#X1	# 1460	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 1462	[c=5]movdi_to_tr_unspec/1
	or! 0x1		# 1464	[c=4]*iordi3/0
	load8! &3 	#X2	# 1469	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &2 	#X2	# 1471	[c=11]movdi_to_tr_unspec/2
	add! 24	
	load8	
	#	
	store8! &4 	#X3	# 1473	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 1475	[c=11]movdi_to_tr_unspec/2
	add! 16	
	load8	
	#	
	store8! &6 	#X5	# 1477	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 1479	[c=5]movdi_to_tr_unspec/1
	load8! &6 	#X5	# 1481	[c=4]movdi_from_tr_unspec/1
	add! 24	
	store8	
	#	
	load8! &5 	#X5	# 1483	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 1485	[c=4]movdi_from_tr_unspec/1
	add! 16	
	store8	
	#	
	load8! &1 	#X1	# 2635	[c=4]movdi_push_pop
	store8! (+ __malloc_av_ 40)
	load8! &1 	#X1	# 2636	[c=4]movdi_push_pop
	store8! (+ __malloc_av_ 32)
	push! (+ __malloc_av_ 16)		# 1497	[c=3]movdi_to_tr_unspec/0
	load8! &2 	#X1	# 1499	[c=4]movdi_from_tr_unspec/1
	add! 24	
	store8	
	#	
	push! (+ __malloc_av_ 16)		# 1501	[c=3]movdi_to_tr_unspec/0
	load8! &2 	#X1	# 1503	[c=4]movdi_from_tr_unspec/1
	add! 16	
	store8	
	#	
	load8! &0 	#AR	# 1505	[c=5]movdi_to_tr_unspec/1
	or! 0x1		# 1507	[c=4]*iordi3/0
	load8! &2 	#X1	# 1513	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &0 	#AR	# 2638	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 2640	[c=5]movdi_to_tr_unspec/1
	load8! &6 	#X4	# 2642	[c=6]*adddi/2
	add
	store8		# 2643	[c=4]*peep2_mov_from_tr_to_mem_tr_ind_popdi_unspec
	load8! &10	# 1524	[c=2]pushdi1_not_fp/1
	call! __malloc_unlock		# 1525	[c=5]*call_pop_0/0
	set_sp! (+ &0 8)
	

	load8! &2 	#X2	# 1526	[c=5]movdi_to_tr_unspec/1
	add! 16		# 1528	[c=4]*adddi/0
	store8! &1 	#AR	# 1529	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 3189	[c=4]movdi_push_pop
	store8! &11
	jump! .L91.l_o51b7f2		# 3349	[c=4]jump
.L92.l_o51b7f2:
	load8! &2 	#X2	# 647	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 649	[c=6]*adddi/2
	add
	store8! &5 	#X4	# 650	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 652	[c=5]movdi_to_tr_unspec/1
	or! 0x1		# 654	[c=4]*iordi3/0
	load8! &3 	#X2	# 659	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &4 	#X4	# 2828	[c=4]movdi_push_pop
	store8! (+ __malloc_av_ 40)
	load8! &4 	#X4	# 2829	[c=4]movdi_push_pop
	store8! (+ __malloc_av_ 32)
	push! (+ __malloc_av_ 16)		# 671	[c=3]movdi_to_tr_unspec/0
	load8! &5 	#X4	# 673	[c=4]movdi_from_tr_unspec/1
	add! 24	
	store8	
	#	
	push! (+ __malloc_av_ 16)		# 675	[c=3]movdi_to_tr_unspec/0
	load8! &5 	#X4	# 677	[c=4]movdi_from_tr_unspec/1
	add! 16	
	store8	
	#	
	load8! &0 	#AR	# 679	[c=5]movdi_to_tr_unspec/1
	or! 0x1		# 681	[c=4]*iordi3/0
	load8! &5 	#X4	# 687	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &0 	#AR	# 2831	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 2833	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X1	# 2835	[c=6]*adddi/2
	add
	store8		# 2836	[c=4]*peep2_mov_from_tr_to_mem_tr_ind_popdi_unspec
	load8! &10	# 698	[c=2]pushdi1_not_fp/1
	call! __malloc_unlock		# 699	[c=5]*call_pop_0/0
	set_sp! (+ &0 8)
	

	load8! &2 	#X2	# 700	[c=5]movdi_to_tr_unspec/1
	add! 16		# 702	[c=4]*adddi/0
	store8! &1 	#AR	# 703	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 3192	[c=4]movdi_push_pop
	store8! &11
	jump! .L91.l_o51b7f2		# 3351	[c=4]jump
.L94.l_o51b7f2:
	load8! &3 	#X3	# 66	[c=5]movdi_to_tr_unspec/1
	shift_ru! 3	# 68	[c=40]*lshrdi3/0
	store8! &2 	#X1	# 3122	[c=4]movsi_from_tr_unspec/0
	load8! &1 	#X1	# 75	[c=5]movdi_to_tr_unspec/1
	add! 1		# 77	[c=4]*adddi/0
	store8! &1 	#AR	# 3123	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 3124	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 2940	[c=6]*adddi/2
	add
	sigx4		# 3129	[c=6]*extendsidi2
	shift_l! 3	# 2946	[c=8]*ashldi3/0
	store8! &1 	#AR	# 2947	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 3195	[c=5]movdi_to_tr_unspec/1
	add! __malloc_av_		# 3197	[c=4]*adddi/0
	store8! &1 	#AR	# 3198	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 3199	[c=5]movdi_to_tr_unspec/1
	add! -16		# 3201	[c=4]*adddi/0
	store8! &5 	#X4	# 3202	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 3203	[c=5]movdi_to_tr_unspec/1
	add! -16		# 3205	[c=4]*adddi/0
	add! 24	# 3206	[c=4]*peep2_mov_from_mem_tr_to_tr_ind_offset_pushdi_unspec
	load8
	store8! &3 	#X2	# 3208	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 3209	[c=12]cbranchdi4_internal
	load8! &4 	#X4
	load8! &3 	#X2
	xor	
	push! 1	
	lt_u	
	jump_zero! .L8.l_o51b7f2
	# END CBRANCH
	jump! .L90.l_o51b7f2		# 3354	[c=4]jump
.L97.l_o51b7f2:
	load8! &1 	#X1	# 885	[c=5]movdi_to_tr_unspec/1
	shift_ru! 6	# 887	[c=40]*lshrdi3/0
	store8! &1 	#AR	# 3043	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 3044	[c=5]movdi_to_tr_unspec/1
	add! 56		# 896	[c=4]*adddi/0
	store8! &5 	#X4	# 3046	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 3047	[c=5]movdi_to_tr_unspec/1
	add! 57		# 906	[c=4]*adddi/0
	store8! &1 	#AR	# 3049	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 3050	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 2769	[c=6]*adddi/2
	add
	sigx4		# 3055	[c=6]*extendsidi2
	shift_l! 3	# 2775	[c=8]*ashldi3/0
	store8! &1 	#AR	# 2776	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 3212	[c=5]movdi_to_tr_unspec/1
	add! __malloc_av_		# 3214	[c=4]*adddi/0
	store8! &1 	#AR	# 3215	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 3216	[c=5]movdi_to_tr_unspec/1
	add! -16		# 3218	[c=4]*adddi/0
	store8! &7 	#X6	# 3219	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 3220	[c=5]movdi_to_tr_unspec/1
	add! -16		# 3222	[c=4]*adddi/0
	add! 16	# 3223	[c=4]*peep2_mov_from_mem_tr_to_tr_ind_offset_pushdi_unspec
	load8
	store8! &1 	#AR	# 3225	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 3226	[c=12]cbranchdi4_internal
	load8! &6 	#X6
	load8! &1 	#AR
	xor	
	push! 1	
	lt_u	
	jump_zero! .L30.l_o51b7f2
	# END CBRANCH
	jump! .L98.l_o51b7f2		# 3357	[c=4]jump
.L56.l_o51b7f2:
	load4! __malloc_current_mallinfo	# 2598	[c=1]movsi_push_pop
	store8! &1 	#AR
	load4! &6 	#X6	# 2957	[c=5]movsi_to_tr_unspec/1
	load8! &1 	#AR	# 1854	[c=6]*adddi/2
	add
	store8! &2 	#X1	# 2960	[c=4]movsi_from_tr_unspec/0
	load4! &1 	#X1	# 1861	[c=4]movsi_push_pop
	store8! &1 	#AR
	load4! &1 	#X1	# 2602	[c=4]movsi_push_pop
	store4! __malloc_current_mallinfo
	# CBRANCH EQ	# 1867	[c=12]cbranchdi4_internal
	load8! &7 	#X7
	load8! &5 	#X4
	xor	
	jump_zero! .L102.l_o51b7f2
	# END CBRANCH
.L58.l_o51b7f2:
	# CBRANCH EQ	# 1901	[c=13]cbranchdi4_internal
	load8! __malloc_sbrk_base
	push! -1	
	xor	
	jump_zero! .L103.l_o51b7f2
	# END CBRANCH
	load8! &4 	#X4	# 1908	[c=5]movdi_to_tr_unspec/1
	load8! &8 	#X7	# 1910	[c=14]*subdi3/2
	sub
	load8! &2 	#X1	# 3131	[c=6]*adddi/2
	add
	store4! __malloc_current_mallinfo	# 3133	[c=4]movsi_from_tr_unspec/0
.L61.l_o51b7f2:
	load8! &4 	#X4	# 2587	[c=5]movdi_to_tr_unspec/1
	add! 16		# 2589	[c=4]*adddi/0
	and! 0xf		# 2590	[c=4]*anddi3/0
	store8! &8 	#X7	# 2591	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 1949	[c=12]cbranchdi4_internal
	load8! &7 	#X7
	jump_zero! .L62.l_o51b7f2
	# END CBRANCH
	push! 16		# 1951	[c=3]movdi_to_tr_unspec/0
	load8! &8 	#X7	# 1953	[c=14]*subdi3/2
	sub
	load8! &5 	#X4	# 2574	[c=6]*adddi/2
	add
	store8! &5 	#X4	# 2575	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 1967	[c=5]movdi_to_tr_unspec/1
	load8! &7 	#X6	# 1969	[c=6]*adddi/2
	add
	store8! &9 	#X8	# 1970	[c=4]movdi_from_tr_unspec/0
	load8! &8 	#X8	# 1973	[c=5]movdi_to_tr_unspec/1
	and! 0xfff		# 1975	[c=4]*anddi3/0
	store8! &1 	#AR	# 1976	[c=4]movdi_from_tr_unspec/0
	push! 4112		# 2581	[c=3]movdi_to_tr_unspec/0
	load8! &8 	#X7	# 2583	[c=14]*subdi3/2
	sub
	load8! &1 	#AR	# 2584	[c=14]*subdi3/2
	sub
	and! 0xfff		# 2585	[c=4]*anddi3/0
	store8! &7 	#X6	# 2586	[c=4]movdi_from_tr_unspec/0
	load8! &6 	#X6	# 1994	[c=4]pushdi1_not_fp/1
	load8! &11	# 1995	[c=2]pushdi1_not_fp/1
	call! _sbrk_r		# 1996	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH EQ	# 1998	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	push! -1	
	xor	
	jump_zero! .L63.l_o51b7f2
	# END CBRANCH
	load4! &6 	#X6	# 2569	[c=4]movsi_push_pop
	store8! &2 	#X1
	load8! &0 	#AR	# 2004	[c=5]movdi_to_tr_unspec/1
	load8! &5 	#X4	# 2006	[c=14]*subdi3/2
	sub
	load8! &7 	#X6	# 2571	[c=6]*adddi/2
	add
	store8! &7 	#X6	# 2572	[c=4]movdi_from_tr_unspec/0
.L64.l_o51b7f2:
	load4! __malloc_current_mallinfo	# 2557	[c=4]movsi_to_tr_unspec/1
	load8! &2 	#X1	# 2560	[c=6]*adddi/2
	add
	store8! &1 	#AR	# 2561	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 2953	[c=4]movsi_push_pop
	store4! __malloc_current_mallinfo
	load8! &4 	#X4	# 2564	[c=4]movdi_push_pop
	store8! (+ __malloc_av_ 16)
	load8! &6 	#X6	# 2067	[c=5]movdi_to_tr_unspec/1
	or! 0x1		# 2069	[c=4]*iordi3/0
	store8! &2 	#X1	# 2070	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 2072	[c=5]movdi_to_tr_unspec/1
	load8! &5 	#X4	# 2074	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	# CBRANCH EQ	# 2076	[c=12]cbranchdi4_internal
	load8! &2 	#X2
	push! __malloc_av_	
	xor	
	jump_zero! .L74.l_o51b7f2
	# END CBRANCH
	# CBRANCH	# 2078	[c=12]cbranchdi4_internal
	push! 31	
	load8! &6 	#X5
	lt_u	
	jump_zero! .L104.l_o51b7f2
	# END CBRANCH
	load8! &5 	#X5	# 2533	[c=5]movdi_to_tr_unspec/1
	add! -24		# 2535	[c=4]*adddi/0
	and! 0xfffffffffffffff0		# 2536	[c=4]*anddi3/0
	store8! &2 	#X1	# 2537	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 2538	[c=11]movdi_to_tr_unspec/2
	add! 8	
	load8	
	#	
	and! 0x1		# 2540	[c=4]*anddi3/0
	load8! &2 	#X1	# 2543	[c=6]*iordi3/2
	or
	load8! &3 	#X2	# 2114	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	push! 9		# 2546	[c=3]movdi_to_tr_unspec/0
	load8! &3 	#X2	# 2548	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X1	# 2550	[c=6]*adddi/2
	add
	add! 8		# 2551	[c=4]*adddi/0
	store8		# 2552	[c=4]*peep2_mov_from_tr_to_mem_tr_ind_popdi_unspec
	load8! &1 	#X1	# 2125	[c=5]movdi_to_tr_unspec/1
	add! 8		# 2127	[c=4]*adddi/0
	load8! &3 	#X2	# 2554	[c=6]*adddi/2
	add
	store8! &6 	#X5	# 2555	[c=4]movdi_from_tr_unspec/0
	push! 9		# 2135	[c=3]movdi_to_tr_unspec/0
	load8! &6 	#X5	# 2137	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	# CBRANCH	# 2139	[c=12]cbranchdi4_internal
	push! 31	
	load8! &2 	#X1
	lt_u	
	not	
	jump_zero! .L67.l_o51b7f2
	# END CBRANCH
	load8! &4 	#X4	# 2141	[c=11]movdi_to_tr_unspec/2
	add! 8	
	load8	
	#	
	store8! &2 	#X1	# 2143	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 23	[c=4]movdi_push_pop
	store8! &3 	#X2
.L59.l_o51b7f2:
	load4! &0 	#AR	# 2173	[c=5]movsi_to_tr_unspec/1
	sigx4		# 2175	[c=6]*extendsidi2
	store8! &1 	#AR	# 2176	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 2179	[c=13]cbranchdi4_internal
	load8! __malloc_max_sbrked_mem
	load8! &1 	#AR
	lt_u	
	jump_zero! .L68.l_o51b7f2
	# END CBRANCH
	load8! &0 	#AR	# 2181	[c=4]movdi_push_pop
	store8! __malloc_max_sbrked_mem
.L68.l_o51b7f2:
	# CBRANCH	# 2185	[c=13]cbranchdi4_internal
	load8! __malloc_max_total_mem
	load8! &1 	#AR
	lt_u	
	jump_zero! .L55.l_o51b7f2
	# END CBRANCH
	load8! &0 	#AR	# 2187	[c=4]movdi_push_pop
	store8! __malloc_max_total_mem
	jump! .L55.l_o51b7f2		# 3362	[c=4]jump
.L100.l_o51b7f2:
	load8! &0 	#AR	# 276	[c=5]movdi_to_tr_unspec/1
	add! 91		# 278	[c=4]*adddi/0
	store8! &7 	#X6	# 3101	[c=4]movsi_from_tr_unspec/0
	load8! &0 	#AR	# 286	[c=5]movdi_to_tr_unspec/1
	add! 92		# 288	[c=4]*adddi/0
	store8! &6 	#X5	# 3103	[c=4]movsi_from_tr_unspec/0
	load8! &5 	#X5	# 2901	[c=5]movdi_to_tr_unspec/1
	load8! &6 	#X5	# 2903	[c=6]*adddi/2
	add
	sigx4		# 3107	[c=6]*extendsidi2
	shift_l! 3	# 2908	[c=8]*ashldi3/0
	store8! &1 	#AR	# 2909	[c=4]movdi_from_tr_unspec/0
	jump! .L11.l_o51b7f2		# 3364	[c=4]jump
.L98.l_o51b7f2:
	load8! (+ __malloc_av_ 8)	# 2691	[c=1]movdi_push_pop
	store8! &8 	#X7
	load4! &4 	#X4	# 2692	[c=5]movsi_to_tr_unspec/1
	sigx4		# 2694	[c=6]*extendsidi2
	shift_rs! 2	# 2695	[c=40]*ashrdi3/0
	and! 0xffffffff		# 3136	[c=4]*anddi3/0
	store8! &2 	#X1	# 2700	[c=4]movdi_from_tr_unspec/0
	push! 1		# 1212	[c=3]movdi_to_tr_unspec/0
	load8! &2 	#X1	# 1214	[c=10]*ashldi3/2
	shift_l
	load8! &8 	#X7	# 2702	[c=6]*iordi3/2
	or
	store8! &5 	#X4	# 2703	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 2704	[c=4]movdi_push_pop
	store8! (+ __malloc_av_ 8)
	load8! &6 	#X6	# 3229	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 3231	[c=4]movdi_from_tr_unspec/1
	add! 24	
	store8	
	#	
	load8! &0 	#AR	# 3232	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 3234	[c=4]movdi_from_tr_unspec/1
	add! 16	
	store8	
	#	
	load8! &2 	#X2	# 3235	[c=5]movdi_to_tr_unspec/1
	load8! &7 	#X6	# 3237	[c=4]movdi_from_tr_unspec/1
	add! 16	
	store8	
	#	
	load8! &2 	#X2	# 3238	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 3240	[c=4]movdi_from_tr_unspec/1
	add! 24	
	store8	
	#	
	jump! .L105.l_o51b7f2		# 3367	[c=4]jump
.L102.l_o51b7f2:
	load8! &7 	#X7	# 1870	[c=5]movdi_to_tr_unspec/1
	and! 0xfff		# 1872	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_not_zero! .L58.l_o51b7f2	# 2597	[c=12]*peep2_cbranchdi
	# END CBRANCH
	load8! &5 	#X5	# 1877	[c=5]movdi_to_tr_unspec/1
	load8! &7 	#X6	# 1879	[c=6]*adddi/2
	add
	store8! &2 	#X1	# 1880	[c=4]movdi_from_tr_unspec/0
	load8! (+ __malloc_av_ 16)	# 2596	[c=1]movdi_push_pop
	store8! &3 	#X2
	load8! &1 	#X1	# 1887	[c=5]movdi_to_tr_unspec/1
	or! 0x1		# 1889	[c=4]*iordi3/0
	store8! &2 	#X1	# 1890	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 1892	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 1894	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	jump! .L59.l_o51b7f2		# 3369	[c=4]jump
.L104.l_o51b7f2:
	push! 1		# 2080	[c=3]movdi_to_tr_unspec/0
	load8! &5 	#X4	# 2082	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
.L66.l_o51b7f2:
	load8! &10	# 2206	[c=2]pushdi1_not_fp/1
	call! __malloc_unlock		# 2207	[c=5]*call_pop_0/0
	set_sp! (+ &0 8)
	

	push! 0		# 26	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 3243	[c=4]movdi_push_pop
	store8! &11
	jump! .L91.l_o51b7f2		# 3371	[c=4]jump
.L95.l_o51b7f2:
	load8! &0 	#AR	# 1780	[c=5]movdi_to_tr_unspec/1
	add! 32		# 1782	[c=4]*adddi/0
	store8! &7 	#X6	# 1783	[c=4]movdi_from_tr_unspec/0
	jump! .L53.l_o51b7f2		# 3373	[c=4]jump
.L62.l_o51b7f2:
	load8! &4 	#X4	# 2516	[c=5]movdi_to_tr_unspec/1
	load8! &7 	#X6	# 2518	[c=6]*adddi/2
	add
	and! 0xfff		# 2519	[c=4]*anddi3/0
	sub! 4096		# 2522	[c=12]*subdi3/0
	neg		# 2523	[c=4]*neg_tr
	and! 0xfff		# 2272	[c=4]*anddi3/0
	store8! &8 	#X7	# 2273	[c=4]movdi_from_tr_unspec/0
	load8! &7 	#X7	# 2276	[c=4]pushdi1_not_fp/1
	load8! &11	# 2277	[c=2]pushdi1_not_fp/1
	call! _sbrk_r		# 2278	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH EQ	# 2280	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	push! -1	
	xor	
	jump_zero! .L75.l_o51b7f2
	# END CBRANCH
	load4! &7 	#X7	# 2512	[c=4]movsi_push_pop
	store8! &2 	#X1
	load8! &0 	#AR	# 2286	[c=5]movdi_to_tr_unspec/1
	load8! &5 	#X4	# 2288	[c=14]*subdi3/2
	sub
	load8! &8 	#X7	# 2514	[c=6]*adddi/2
	add
	store8! &7 	#X6	# 2515	[c=4]movdi_from_tr_unspec/0
	jump! .L64.l_o51b7f2		# 3375	[c=4]jump
.L27.l_o51b7f2:
	# CBRANCH	# 994	[c=12]cbranchdi4_internal
	push! 84	
	load8! &1 	#AR
	lt_u	
	not	
	jump_zero! .L28.l_o51b7f2
	# END CBRANCH
	load8! &1 	#X1	# 996	[c=5]movdi_to_tr_unspec/1
	shift_ru! 12	# 998	[c=40]*lshrdi3/0
	store8! &1 	#AR	# 3020	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 3021	[c=5]movdi_to_tr_unspec/1
	add! 110		# 1007	[c=4]*adddi/0
	store8! &5 	#X4	# 3023	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 3024	[c=5]movdi_to_tr_unspec/1
	add! 111		# 1017	[c=4]*adddi/0
	store8! &1 	#AR	# 3026	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 3027	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 2741	[c=6]*adddi/2
	add
	sigx4		# 3032	[c=6]*extendsidi2
	shift_l! 3	# 2747	[c=8]*ashldi3/0
	store8! &1 	#AR	# 2748	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 3246	[c=5]movdi_to_tr_unspec/1
	add! __malloc_av_		# 3248	[c=4]*adddi/0
	store8! &1 	#AR	# 3249	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 3250	[c=5]movdi_to_tr_unspec/1
	add! -16		# 3252	[c=4]*adddi/0
	store8! &7 	#X6	# 3253	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 3254	[c=5]movdi_to_tr_unspec/1
	add! -16		# 3256	[c=4]*adddi/0
	add! 16	# 3257	[c=4]*peep2_mov_from_mem_tr_to_tr_ind_offset_pushdi_unspec
	load8
	store8! &1 	#AR	# 3259	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 3260	[c=12]cbranchdi4_internal
	load8! &6 	#X6
	load8! &1 	#AR
	xor	
	push! 1	
	lt_u	
	jump_zero! .L30.l_o51b7f2
	# END CBRANCH
	jump! .L98.l_o51b7f2		# 3378	[c=4]jump
.L14.l_o51b7f2:
	# CBRANCH	# 381	[c=12]cbranchdi4_internal
	push! 340	
	load8! &1 	#AR
	lt_u	
	not	
	jump_zero! .L15.l_o51b7f2
	# END CBRANCH
	load8! &3 	#X3	# 383	[c=5]movdi_to_tr_unspec/1
	shift_ru! 15	# 385	[c=40]*lshrdi3/0
	store8! &1 	#AR	# 3078	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 3079	[c=5]movdi_to_tr_unspec/1
	add! 119		# 394	[c=4]*adddi/0
	store8! &7 	#X6	# 3082	[c=4]movsi_from_tr_unspec/0
	load8! &0 	#AR	# 402	[c=5]movdi_to_tr_unspec/1
	add! 120		# 404	[c=4]*adddi/0
	store8! &6 	#X5	# 3084	[c=4]movsi_from_tr_unspec/0
	load8! &5 	#X5	# 2875	[c=5]movdi_to_tr_unspec/1
	load8! &6 	#X5	# 2877	[c=6]*adddi/2
	add
	sigx4		# 3088	[c=6]*extendsidi2
	shift_l! 3	# 2882	[c=8]*ashldi3/0
	store8! &1 	#AR	# 2883	[c=4]movdi_from_tr_unspec/0
	jump! .L11.l_o51b7f2		# 3380	[c=4]jump
.L57.l_o51b7f2:
	load4! __malloc_current_mallinfo	# 2503	[c=1]movsi_push_pop
	store8! &2 	#X1
	load4! &6 	#X6	# 2505	[c=5]movsi_to_tr_unspec/1
	load8! &2 	#X1	# 2508	[c=6]*adddi/2
	add
	store8! &2 	#X1	# 2951	[c=4]movsi_from_tr_unspec/0
	load4! &1 	#X1	# 2511	[c=4]movsi_push_pop
	store4! __malloc_current_mallinfo
	jump! .L58.l_o51b7f2		# 3382	[c=4]jump
.L96.l_o51b7f2:
	load8! (+ __malloc_av_ 16)	# 2604	[c=1]movdi_push_pop
	store8! &3 	#X2
	load8! &2 	#X2	# 1813	[c=11]movdi_to_tr_unspec/2
	add! 8	
	load8	
	#	
	store8! &2 	#X1	# 1815	[c=4]movdi_from_tr_unspec/0
	jump! .L55.l_o51b7f2		# 3384	[c=4]jump
.L74.l_o51b7f2:
	load8! &4 	#X4	# 24	[c=4]movdi_push_pop
	store8! &3 	#X2
	jump! .L59.l_o51b7f2		# 3386	[c=4]jump
.L103.l_o51b7f2:
	load8! &4 	#X4	# 1903	[c=4]movdi_push_pop
	store8! __malloc_sbrk_base
	jump! .L61.l_o51b7f2		# 3388	[c=4]jump
.L71.l_o51b7f2:
	load4! &6 	#X6	# 14	[c=4]movsi_push_pop
	store8! &6 	#X5
	jump! .L10.l_o51b7f2		# 3390	[c=4]jump
.L28.l_o51b7f2:
	# CBRANCH	# 1052	[c=12]cbranchdi4_internal
	push! 340	
	load8! &1 	#AR
	lt_u	
	not	
	jump_zero! .L29.l_o51b7f2
	# END CBRANCH
	load8! &1 	#X1	# 1054	[c=5]movdi_to_tr_unspec/1
	shift_ru! 15	# 1056	[c=40]*lshrdi3/0
	store8! &1 	#AR	# 3007	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 3008	[c=5]movdi_to_tr_unspec/1
	add! 119		# 1065	[c=4]*adddi/0
	store8! &5 	#X4	# 3010	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 3011	[c=5]movdi_to_tr_unspec/1
	add! 120		# 1075	[c=4]*adddi/0
	store8! &1 	#AR	# 3013	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 3014	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 2727	[c=6]*adddi/2
	add
	sigx4		# 3019	[c=6]*extendsidi2
	shift_l! 3	# 2733	[c=8]*ashldi3/0
	store8! &1 	#AR	# 2734	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 3263	[c=5]movdi_to_tr_unspec/1
	add! __malloc_av_		# 3265	[c=4]*adddi/0
	store8! &1 	#AR	# 3266	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 3267	[c=5]movdi_to_tr_unspec/1
	add! -16		# 3269	[c=4]*adddi/0
	store8! &7 	#X6	# 3270	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 3271	[c=5]movdi_to_tr_unspec/1
	add! -16		# 3273	[c=4]*adddi/0
	add! 16	# 3274	[c=4]*peep2_mov_from_mem_tr_to_tr_ind_offset_pushdi_unspec
	load8
	store8! &1 	#AR	# 3276	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 3277	[c=12]cbranchdi4_internal
	load8! &6 	#X6
	load8! &1 	#AR
	xor	
	push! 1	
	lt_u	
	jump_zero! .L30.l_o51b7f2
	# END CBRANCH
	jump! .L98.l_o51b7f2		# 3393	[c=4]jump
.L15.l_o51b7f2:
	# CBRANCH	# 439	[c=12]cbranchdi4_internal
	push! 1364	
	load8! &1 	#AR
	lt_u	
	not	
	jump_zero! .L70.l_o51b7f2
	# END CBRANCH
	load8! &3 	#X3	# 441	[c=5]movdi_to_tr_unspec/1
	shift_ru! 18	# 443	[c=40]*lshrdi3/0
	store8! &1 	#AR	# 3067	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 3068	[c=5]movdi_to_tr_unspec/1
	add! 124		# 452	[c=4]*adddi/0
	store8! &7 	#X6	# 3071	[c=4]movsi_from_tr_unspec/0
	load8! &0 	#AR	# 460	[c=5]movdi_to_tr_unspec/1
	add! 125		# 462	[c=4]*adddi/0
	store8! &6 	#X5	# 3073	[c=4]movsi_from_tr_unspec/0
	load8! &5 	#X5	# 2862	[c=5]movdi_to_tr_unspec/1
	load8! &6 	#X5	# 2864	[c=6]*adddi/2
	add
	sigx4		# 3077	[c=6]*extendsidi2
	shift_l! 3	# 2869	[c=8]*ashldi3/0
	store8! &1 	#AR	# 2870	[c=4]movdi_from_tr_unspec/0
	jump! .L11.l_o51b7f2		# 3395	[c=4]jump
.L75.l_o51b7f2:
	push! 0		# 22	[c=4]movsi_push_pop
	store8! &2 	#X1
	jump! .L64.l_o51b7f2		# 3397	[c=4]jump
.L63.l_o51b7f2:
	load8! &7 	#X7	# 2019	[c=5]movdi_to_tr_unspec/1
	add! -16		# 2021	[c=4]*adddi/0
	load8! &9 	#X8	# 2566	[c=6]*adddi/2
	add
	load8! &5 	#X4	# 2031	[c=14]*subdi3/2
	sub
	store8! &7 	#X6	# 2032	[c=4]movdi_from_tr_unspec/0
	push! 0		# 21	[c=4]movsi_push_pop
	store8! &2 	#X1
	jump! .L64.l_o51b7f2		# 3399	[c=4]jump
.L67.l_o51b7f2:
	load8! &2 	#X2	# 2149	[c=5]movdi_to_tr_unspec/1
	add! 16		# 2151	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 2530	[c=0]*peep2_pop_pusharg
	load8! &11	# 2155	[c=2]pushdi1_not_fp/1
	call! _free_r		# 2156	[c=5]*call_pop_0/0
	set_sp! (+ &0 16)
	

	load4! __malloc_current_mallinfo	# 2531	[c=1]movsi_push_pop
	store8! &1 	#AR
	load8! (+ __malloc_av_ 16)	# 2532	[c=1]movdi_push_pop
	store8! &3 	#X2
	load8! &2 	#X2	# 2167	[c=11]movdi_to_tr_unspec/2
	add! 8	
	load8	
	#	
	store8! &2 	#X1	# 2169	[c=4]movdi_from_tr_unspec/0
	jump! .L59.l_o51b7f2		# 3401	[c=4]jump
.L29.l_o51b7f2:
	# CBRANCH	# 1110	[c=12]cbranchdi4_internal
	push! 1364	
	load8! &1 	#AR
	lt_u	
	not	
	jump_zero! .L73.l_o51b7f2
	# END CBRANCH
	load8! &1 	#X1	# 1112	[c=5]movdi_to_tr_unspec/1
	shift_ru! 18	# 1114	[c=40]*lshrdi3/0
	store8! &1 	#AR	# 2994	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 2995	[c=5]movdi_to_tr_unspec/1
	add! 124		# 1123	[c=4]*adddi/0
	store8! &5 	#X4	# 2997	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 2998	[c=5]movdi_to_tr_unspec/1
	add! 125		# 1133	[c=4]*adddi/0
	store8! &1 	#AR	# 3000	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 3001	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 2713	[c=6]*adddi/2
	add
	sigx4		# 3006	[c=6]*extendsidi2
	shift_l! 3	# 2719	[c=8]*ashldi3/0
	store8! &1 	#AR	# 2720	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 3280	[c=5]movdi_to_tr_unspec/1
	add! __malloc_av_		# 3282	[c=4]*adddi/0
	store8! &1 	#AR	# 3283	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 3284	[c=5]movdi_to_tr_unspec/1
	add! -16		# 3286	[c=4]*adddi/0
	store8! &7 	#X6	# 3287	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 3288	[c=5]movdi_to_tr_unspec/1
	add! -16		# 3290	[c=4]*adddi/0
	add! 16	# 3291	[c=4]*peep2_mov_from_mem_tr_to_tr_ind_offset_pushdi_unspec
	load8
	store8! &1 	#AR	# 3293	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 3294	[c=12]cbranchdi4_internal
	load8! &6 	#X6
	load8! &1 	#AR
	xor	
	push! 1	
	lt_u	
	jump_zero! .L30.l_o51b7f2
	# END CBRANCH
	jump! .L98.l_o51b7f2		# 3404	[c=4]jump
.L70.l_o51b7f2:
	push! 2032		# 11	[c=4]movdi_push_pop
	store8! &1 	#AR
	push! 127		# 12	[c=4]movsi_push_pop
	store8! &6 	#X5
	push! 126		# 13	[c=4]movsi_push_pop
	store8! &7 	#X6
	jump! .L11.l_o51b7f2		# 3406	[c=4]jump
.L73.l_o51b7f2:
	push! 2032		# 16	[c=4]movdi_push_pop
	store8! &1 	#AR
	push! 126		# 17	[c=4]movsi_push_pop
	store8! &5 	#X4
	load8! &0 	#AR	# 3297	[c=5]movdi_to_tr_unspec/1
	add! __malloc_av_		# 3299	[c=4]*adddi/0
	store8! &1 	#AR	# 3300	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 3301	[c=5]movdi_to_tr_unspec/1
	add! -16		# 3303	[c=4]*adddi/0
	store8! &7 	#X6	# 3304	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 3305	[c=5]movdi_to_tr_unspec/1
	add! -16		# 3307	[c=4]*adddi/0
	add! 16	# 3308	[c=4]*peep2_mov_from_mem_tr_to_tr_ind_offset_pushdi_unspec
	load8
	store8! &1 	#AR	# 3310	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 3311	[c=12]cbranchdi4_internal
	load8! &6 	#X6
	load8! &1 	#AR
	xor	
	push! 1	
	lt_u	
	jump_zero! .L30.l_o51b7f2
	# END CBRANCH
	jump! .L98.l_o51b7f2		# 3409	[c=4]jump
.L101.l_o51b7f2:
	load8! (+ __malloc_av_ 8)	# 2621	[c=1]movdi_push_pop
	store8! &3 	#X2
	load8! &1 	#X1	# 1641	[c=5]movdi_to_tr_unspec/1
	not		# 1643	[c=2]*one_cmpldi2
	load8! &3 	#X2	# 2623	[c=6]*anddi3/2
	and
	store8! &3 	#X2	# 2624	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 2625	[c=4]movdi_push_pop
	store8! (+ __malloc_av_ 8)
	jump! .L45.l_o51b7f2		# 3411	[c=4]jump
.L91.l_o51b7f2:

	# epilogue
	set_sp! &9
	return

# FUNCTION ENDS:_malloc_r

	EXPORT	__malloc_current_mallinfo
#	.data
__malloc_current_mallinfo:
	data8 [0]*5

	EXPORT	__malloc_max_total_mem
__malloc_max_total_mem:
	data8 [0]

	EXPORT	__malloc_max_sbrked_mem
__malloc_max_sbrked_mem:
	data8 [0]

	EXPORT	__malloc_sbrk_base
__malloc_sbrk_base:
	data8 [-1]
	EXPORT	__malloc_top_pad
__malloc_top_pad:
	data8 [0]

	EXPORT	__malloc_trim_threshold
__malloc_trim_threshold:
	data8 [131072]
	EXPORT	__malloc_av_
__malloc_av_:
	data8 [0]
	data8 [0]
	data8 [__malloc_av_]
	data8 [__malloc_av_]
	data8 [(+ __malloc_av_ 16)]
	data8 [(+ __malloc_av_ 16)]
	data8 [(+ __malloc_av_ 32)]
	data8 [(+ __malloc_av_ 32)]
	data8 [(+ __malloc_av_ 48)]
	data8 [(+ __malloc_av_ 48)]
	data8 [(+ __malloc_av_ 64)]
	data8 [(+ __malloc_av_ 64)]
	data8 [(+ __malloc_av_ 80)]
	data8 [(+ __malloc_av_ 80)]
	data8 [(+ __malloc_av_ 96)]
	data8 [(+ __malloc_av_ 96)]
	data8 [(+ __malloc_av_ 112)]
	data8 [(+ __malloc_av_ 112)]
	data8 [(+ __malloc_av_ 128)]
	data8 [(+ __malloc_av_ 128)]
	data8 [(+ __malloc_av_ 144)]
	data8 [(+ __malloc_av_ 144)]
	data8 [(+ __malloc_av_ 160)]
	data8 [(+ __malloc_av_ 160)]
	data8 [(+ __malloc_av_ 176)]
	data8 [(+ __malloc_av_ 176)]
	data8 [(+ __malloc_av_ 192)]
	data8 [(+ __malloc_av_ 192)]
	data8 [(+ __malloc_av_ 208)]
	data8 [(+ __malloc_av_ 208)]
	data8 [(+ __malloc_av_ 224)]
	data8 [(+ __malloc_av_ 224)]
	data8 [(+ __malloc_av_ 240)]
	data8 [(+ __malloc_av_ 240)]
	data8 [(+ __malloc_av_ 256)]
	data8 [(+ __malloc_av_ 256)]
	data8 [(+ __malloc_av_ 272)]
	data8 [(+ __malloc_av_ 272)]
	data8 [(+ __malloc_av_ 288)]
	data8 [(+ __malloc_av_ 288)]
	data8 [(+ __malloc_av_ 304)]
	data8 [(+ __malloc_av_ 304)]
	data8 [(+ __malloc_av_ 320)]
	data8 [(+ __malloc_av_ 320)]
	data8 [(+ __malloc_av_ 336)]
	data8 [(+ __malloc_av_ 336)]
	data8 [(+ __malloc_av_ 352)]
	data8 [(+ __malloc_av_ 352)]
	data8 [(+ __malloc_av_ 368)]
	data8 [(+ __malloc_av_ 368)]
	data8 [(+ __malloc_av_ 384)]
	data8 [(+ __malloc_av_ 384)]
	data8 [(+ __malloc_av_ 400)]
	data8 [(+ __malloc_av_ 400)]
	data8 [(+ __malloc_av_ 416)]
	data8 [(+ __malloc_av_ 416)]
	data8 [(+ __malloc_av_ 432)]
	data8 [(+ __malloc_av_ 432)]
	data8 [(+ __malloc_av_ 448)]
	data8 [(+ __malloc_av_ 448)]
	data8 [(+ __malloc_av_ 464)]
	data8 [(+ __malloc_av_ 464)]
	data8 [(+ __malloc_av_ 480)]
	data8 [(+ __malloc_av_ 480)]
	data8 [(+ __malloc_av_ 496)]
	data8 [(+ __malloc_av_ 496)]
	data8 [(+ __malloc_av_ 512)]
	data8 [(+ __malloc_av_ 512)]
	data8 [(+ __malloc_av_ 528)]
	data8 [(+ __malloc_av_ 528)]
	data8 [(+ __malloc_av_ 544)]
	data8 [(+ __malloc_av_ 544)]
	data8 [(+ __malloc_av_ 560)]
	data8 [(+ __malloc_av_ 560)]
	data8 [(+ __malloc_av_ 576)]
	data8 [(+ __malloc_av_ 576)]
	data8 [(+ __malloc_av_ 592)]
	data8 [(+ __malloc_av_ 592)]
	data8 [(+ __malloc_av_ 608)]
	data8 [(+ __malloc_av_ 608)]
	data8 [(+ __malloc_av_ 624)]
	data8 [(+ __malloc_av_ 624)]
	data8 [(+ __malloc_av_ 640)]
	data8 [(+ __malloc_av_ 640)]
	data8 [(+ __malloc_av_ 656)]
	data8 [(+ __malloc_av_ 656)]
	data8 [(+ __malloc_av_ 672)]
	data8 [(+ __malloc_av_ 672)]
	data8 [(+ __malloc_av_ 688)]
	data8 [(+ __malloc_av_ 688)]
	data8 [(+ __malloc_av_ 704)]
	data8 [(+ __malloc_av_ 704)]
	data8 [(+ __malloc_av_ 720)]
	data8 [(+ __malloc_av_ 720)]
	data8 [(+ __malloc_av_ 736)]
	data8 [(+ __malloc_av_ 736)]
	data8 [(+ __malloc_av_ 752)]
	data8 [(+ __malloc_av_ 752)]
	data8 [(+ __malloc_av_ 768)]
	data8 [(+ __malloc_av_ 768)]
	data8 [(+ __malloc_av_ 784)]
	data8 [(+ __malloc_av_ 784)]
	data8 [(+ __malloc_av_ 800)]
	data8 [(+ __malloc_av_ 800)]
	data8 [(+ __malloc_av_ 816)]
	data8 [(+ __malloc_av_ 816)]
	data8 [(+ __malloc_av_ 832)]
	data8 [(+ __malloc_av_ 832)]
	data8 [(+ __malloc_av_ 848)]
	data8 [(+ __malloc_av_ 848)]
	data8 [(+ __malloc_av_ 864)]
	data8 [(+ __malloc_av_ 864)]
	data8 [(+ __malloc_av_ 880)]
	data8 [(+ __malloc_av_ 880)]
	data8 [(+ __malloc_av_ 896)]
	data8 [(+ __malloc_av_ 896)]
	data8 [(+ __malloc_av_ 912)]
	data8 [(+ __malloc_av_ 912)]
	data8 [(+ __malloc_av_ 928)]
	data8 [(+ __malloc_av_ 928)]
	data8 [(+ __malloc_av_ 944)]
	data8 [(+ __malloc_av_ 944)]
	data8 [(+ __malloc_av_ 960)]
	data8 [(+ __malloc_av_ 960)]
	data8 [(+ __malloc_av_ 976)]
	data8 [(+ __malloc_av_ 976)]
	data8 [(+ __malloc_av_ 992)]
	data8 [(+ __malloc_av_ 992)]
	data8 [(+ __malloc_av_ 1008)]
	data8 [(+ __malloc_av_ 1008)]
	data8 [(+ __malloc_av_ 1024)]
	data8 [(+ __malloc_av_ 1024)]
	data8 [(+ __malloc_av_ 1040)]
	data8 [(+ __malloc_av_ 1040)]
	data8 [(+ __malloc_av_ 1056)]
	data8 [(+ __malloc_av_ 1056)]
	data8 [(+ __malloc_av_ 1072)]
	data8 [(+ __malloc_av_ 1072)]
	data8 [(+ __malloc_av_ 1088)]
	data8 [(+ __malloc_av_ 1088)]
	data8 [(+ __malloc_av_ 1104)]
	data8 [(+ __malloc_av_ 1104)]
	data8 [(+ __malloc_av_ 1120)]
	data8 [(+ __malloc_av_ 1120)]
	data8 [(+ __malloc_av_ 1136)]
	data8 [(+ __malloc_av_ 1136)]
	data8 [(+ __malloc_av_ 1152)]
	data8 [(+ __malloc_av_ 1152)]
	data8 [(+ __malloc_av_ 1168)]
	data8 [(+ __malloc_av_ 1168)]
	data8 [(+ __malloc_av_ 1184)]
	data8 [(+ __malloc_av_ 1184)]
	data8 [(+ __malloc_av_ 1200)]
	data8 [(+ __malloc_av_ 1200)]
	data8 [(+ __malloc_av_ 1216)]
	data8 [(+ __malloc_av_ 1216)]
	data8 [(+ __malloc_av_ 1232)]
	data8 [(+ __malloc_av_ 1232)]
	data8 [(+ __malloc_av_ 1248)]
	data8 [(+ __malloc_av_ 1248)]
	data8 [(+ __malloc_av_ 1264)]
	data8 [(+ __malloc_av_ 1264)]
	data8 [(+ __malloc_av_ 1280)]
	data8 [(+ __malloc_av_ 1280)]
	data8 [(+ __malloc_av_ 1296)]
	data8 [(+ __malloc_av_ 1296)]
	data8 [(+ __malloc_av_ 1312)]
	data8 [(+ __malloc_av_ 1312)]
	data8 [(+ __malloc_av_ 1328)]
	data8 [(+ __malloc_av_ 1328)]
	data8 [(+ __malloc_av_ 1344)]
	data8 [(+ __malloc_av_ 1344)]
	data8 [(+ __malloc_av_ 1360)]
	data8 [(+ __malloc_av_ 1360)]
	data8 [(+ __malloc_av_ 1376)]
	data8 [(+ __malloc_av_ 1376)]
	data8 [(+ __malloc_av_ 1392)]
	data8 [(+ __malloc_av_ 1392)]
	data8 [(+ __malloc_av_ 1408)]
	data8 [(+ __malloc_av_ 1408)]
	data8 [(+ __malloc_av_ 1424)]
	data8 [(+ __malloc_av_ 1424)]
	data8 [(+ __malloc_av_ 1440)]
	data8 [(+ __malloc_av_ 1440)]
	data8 [(+ __malloc_av_ 1456)]
	data8 [(+ __malloc_av_ 1456)]
	data8 [(+ __malloc_av_ 1472)]
	data8 [(+ __malloc_av_ 1472)]
	data8 [(+ __malloc_av_ 1488)]
	data8 [(+ __malloc_av_ 1488)]
	data8 [(+ __malloc_av_ 1504)]
	data8 [(+ __malloc_av_ 1504)]
	data8 [(+ __malloc_av_ 1520)]
	data8 [(+ __malloc_av_ 1520)]
	data8 [(+ __malloc_av_ 1536)]
	data8 [(+ __malloc_av_ 1536)]
	data8 [(+ __malloc_av_ 1552)]
	data8 [(+ __malloc_av_ 1552)]
	data8 [(+ __malloc_av_ 1568)]
	data8 [(+ __malloc_av_ 1568)]
	data8 [(+ __malloc_av_ 1584)]
	data8 [(+ __malloc_av_ 1584)]
	data8 [(+ __malloc_av_ 1600)]
	data8 [(+ __malloc_av_ 1600)]
	data8 [(+ __malloc_av_ 1616)]
	data8 [(+ __malloc_av_ 1616)]
	data8 [(+ __malloc_av_ 1632)]
	data8 [(+ __malloc_av_ 1632)]
	data8 [(+ __malloc_av_ 1648)]
	data8 [(+ __malloc_av_ 1648)]
	data8 [(+ __malloc_av_ 1664)]
	data8 [(+ __malloc_av_ 1664)]
	data8 [(+ __malloc_av_ 1680)]
	data8 [(+ __malloc_av_ 1680)]
	data8 [(+ __malloc_av_ 1696)]
	data8 [(+ __malloc_av_ 1696)]
	data8 [(+ __malloc_av_ 1712)]
	data8 [(+ __malloc_av_ 1712)]
	data8 [(+ __malloc_av_ 1728)]
	data8 [(+ __malloc_av_ 1728)]
	data8 [(+ __malloc_av_ 1744)]
	data8 [(+ __malloc_av_ 1744)]
	data8 [(+ __malloc_av_ 1760)]
	data8 [(+ __malloc_av_ 1760)]
	data8 [(+ __malloc_av_ 1776)]
	data8 [(+ __malloc_av_ 1776)]
	data8 [(+ __malloc_av_ 1792)]
	data8 [(+ __malloc_av_ 1792)]
	data8 [(+ __malloc_av_ 1808)]
	data8 [(+ __malloc_av_ 1808)]
	data8 [(+ __malloc_av_ 1824)]
	data8 [(+ __malloc_av_ 1824)]
	data8 [(+ __malloc_av_ 1840)]
	data8 [(+ __malloc_av_ 1840)]
	data8 [(+ __malloc_av_ 1856)]
	data8 [(+ __malloc_av_ 1856)]
	data8 [(+ __malloc_av_ 1872)]
	data8 [(+ __malloc_av_ 1872)]
	data8 [(+ __malloc_av_ 1888)]
	data8 [(+ __malloc_av_ 1888)]
	data8 [(+ __malloc_av_ 1904)]
	data8 [(+ __malloc_av_ 1904)]
	data8 [(+ __malloc_av_ 1920)]
	data8 [(+ __malloc_av_ 1920)]
	data8 [(+ __malloc_av_ 1936)]
	data8 [(+ __malloc_av_ 1936)]
	data8 [(+ __malloc_av_ 1952)]
	data8 [(+ __malloc_av_ 1952)]
	data8 [(+ __malloc_av_ 1968)]
	data8 [(+ __malloc_av_ 1968)]
	data8 [(+ __malloc_av_ 1984)]
	data8 [(+ __malloc_av_ 1984)]
	data8 [(+ __malloc_av_ 2000)]
	data8 [(+ __malloc_av_ 2000)]
	data8 [(+ __malloc_av_ 2016)]
	data8 [(+ __malloc_av_ 2016)]
	data8 [(+ __malloc_av_ 2032)]
	data8 [(+ __malloc_av_ 2032)]
#	IMPORT _free_r
#	IMPORT _sbrk_r
#	IMPORT __malloc_unlock
#	IMPORT __malloc_lock
#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: ofa49d8
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"mbtowc_r.c"
#	.text
	#peephole move

# FUNCTION BEGINS:_mbtowc_r
	EXPORT	_mbtowc_r
_mbtowc_r:
	# prologue (1 GPRs)
	push! 0

	load8! (+ __global_locale 232)	# 31	[c=1]movdi_push_pop
	store8! &1 	#AR
	load8! &6	# 15	[c=2]pushdi1_not_fp/1
	load8! &6	# 16	[c=2]pushdi1_not_fp/1
	load8! &6	# 17	[c=2]pushdi1_not_fp/1
	load8! &6	# 18	[c=2]pushdi1_not_fp/1
	load8! &6	# 19	[c=2]pushdi1_not_fp/1
	load8! &5 	#AR	# 20	[c=0]*call_value_pop_1/1
	call	
	store8! &5

	set_sp! &4
	load4! &0 	#AR	# 25	[c=4]movsi_push_pop
	store4! &3

	# epilogue
	store8! &0 #set_sp! &1
	return

# FUNCTION ENDS:_mbtowc_r

	#peephole pop(deadreg)+push
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole zero_extend
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push

# FUNCTION BEGINS:__ascii_mbtowc
	EXPORT	__ascii_mbtowc
__ascii_mbtowc:
	# prologue (3 GPRs)
	push! 0
	push! 0
	push! 0
	push! 0

	load8! &6	# 3	[c=2]movdi_push_pop
	store8! &2 	#X1
	load8! &7	# 4	[c=2]movdi_push_pop
	store8! &1 	#AR
	# CBRANCH EQ0	# 17	[c=12]cbranchdi4_internal
	load8! &1 	#X1
	jump_zero! .L10.l_ofa49d8
	# END CBRANCH
	# CBRANCH EQ0	# 21	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L6.l_ofa49d8
	# END CBRANCH
.L12.l_ofa49d8:
	# CBRANCH EQ0	# 23	[c=14]cbranchdi4_internal
	load8! &8
	jump_zero! .L7.l_ofa49d8
	# END CBRANCH
	load8! &0 	#AR	# 145	[c=7]movqi_to_tr_unspec/2
	load1	
	#	
	load8! &2 	#X1	# 150	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	load8! &0 	#AR	# 42	[c=7]movqi_to_tr_unspec/2
	load1	
	#	
	and! 0x0ff	# 48	[c=1]*zero_extendqidi2
	neg		# 53	[c=3]*negdi2
	shift_ru! 63	# 58	[c=40]*lshrdi3/0
	and! 0xff		# 151	[c=4]*anddi3/0
	store8! &1 	#AR	# 119	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 79	[c=4]movsi_push_pop
	store4! &6
	jump! .L11.l_ofa49d8		# 167	[c=4]jump
.L10.l_ofa49d8:
	push! &0		# 129	[c=4]movdi_to_tr_unspec/1
	add! 24		# 136	[c=4]*adddi/0
	store8! &2 	#X1	# 134	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 156	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_not_zero! .L12.l_ofa49d8
	# END CBRANCH
.L6.l_ofa49d8:
	push! 0		# 13	[c=4]movsi_push_pop
	store8! &1 	#AR
	load4! &0 	#AR	# 159	[c=4]movsi_push_pop
	store4! &6
	jump! .L11.l_ofa49d8		# 170	[c=4]jump
.L7.l_ofa49d8:
	push! -2		# 14	[c=4]movsi_push_pop
	store8! &1 	#AR
	load4! &0 	#AR	# 162	[c=4]movsi_push_pop
	store4! &6
.L11.l_ofa49d8:

	# epilogue
	set_sp! &4
	return

# FUNCTION ENDS:__ascii_mbtowc

#	IMPORT __global_locale
#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: o316546
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"memchr.c"
#	.text
	#peephole pop+cmp
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop+cmp
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole move+push(pushable)
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole binop1+deadreg+binop2
	#peephole binop1+deadreg+binop2
	#peephole pop+cmprev
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole move+push(pushable)
	#peephole pop+cmp
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+push(deadreg)+sign_extend
	#peephole pop+block+push+block

# FUNCTION BEGINS:memchr
	EXPORT	memchr
memchr:
	# prologue (6 GPRs)

	set_sp! &-6

	load8! &7	# 2	[c=2]movdi_push_pop
	store8! &1 	#AR
	load4! &8	# 367	[c=5]movsi_to_tr_unspec/1
	store8! &4 	#X3	# 19	[c=4]movqi_from_tr_unspec/0
	load8! &0 	#AR	# 22	[c=5]movdi_to_tr_unspec/1
	and! 0x7		# 24	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L12.l_o316546	# 369	[c=12]*peep2_cbranchdi
	# END CBRANCH
	load8! &9	# 29	[c=5]movdi_to_tr_unspec/1
	add! -1		# 31	[c=4]*adddi/0
	store8! &2 	#X1	# 32	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 34	[c=14]cbranchdi4_internal
	load8! &9
	jump_zero! .L13.l_o316546
	# END CBRANCH
	load8! &0 	#AR	# 36	[c=7]movqi_to_tr_unspec/2
	load1	
	#	
	# CBRANCH - peep (modesize=1)
	and! 255		# 366	[c=12]*peep2_cbranchqi
	# - EQ
	load1! &4 	#X3
	xor	
	jump_zero! .L1.l_o316546
	# END CBRANCH
.L4.l_o316546:
	load8! &0 	#AR	# 70	[c=5]movdi_to_tr_unspec/1
	add! 1		# 72	[c=4]*adddi/0
	store8! &1 	#AR	# 73	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 77	[c=5]movdi_to_tr_unspec/1
	and! 0x7		# 79	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L2.l_o316546	# 364	[c=12]*peep2_cbranchdi
	# END CBRANCH
	load8! &1 	#X1	# 50	[c=5]movdi_to_tr_unspec/1
	add! -1		# 52	[c=4]*adddi/0
	store8! &2 	#X1	# 53	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ	# 56	[c=12]cbranchdi4_internal
	load8! &1 	#X1
	push! -1	
	xor	
	jump_zero! .L15.l_o316546
	# END CBRANCH
	load8! &0 	#AR	# 58	[c=7]movqi_to_tr_unspec/2
	load1	
	#	
	# CBRANCH - peep (modesize=1)
	and! 255		# 365	[c=12]*peep2_cbranchqi
	load1! &4 	#X3
	xor	
	push! 1	
	lt_u	
	jump_zero! .L4.l_o316546
	# END CBRANCH
.L1.l_o316546:
	load8! &0 	#AR	# 257	[c=4]movdi_push_pop
	store8! &8
	jump! .L23.l_o316546		# 407	[c=4]jump
.L12.l_o316546:
	load8! &9	# 6	[c=2]movdi_push_pop
	store8! &2 	#X1
.L2.l_o316546:
	# CBRANCH	# 86	[c=12]cbranchdi4_internal
	push! 7	
	load8! &2 	#X1
	lt_u	
	jump_zero! .L10.l_o316546
	# END CBRANCH
	load4! &8	# 344	[c=5]movsi_to_tr_unspec/1
	and! 0xff		# 107	[c=4]*anddi3/0
	store8! &5 	#X4	# 371	[c=4]movsi_from_tr_unspec/0
	load4! &8	# 347	[c=5]movsi_to_tr_unspec/1
	shift_l! 8	# 116	[c=8]*ashldi3/0
	and! 0xffff		# 125	[c=4]*anddi3/0
	store8! &3 	#X2	# 381	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 382	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 138	[c=6]*iordi3/2
	or
	sigx4		# 380	[c=6]*extendsidi2
	store8! &3 	#X2	# 148	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 353	[c=5]movdi_to_tr_unspec/1
	shift_l! 16	# 355	[c=8]*ashldi3/0
	load8! &3 	#X2	# 356	[c=6]*iordi3/2
	or
	store8! &3 	#X2	# 357	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 358	[c=5]movdi_to_tr_unspec/1
	shift_l! 32	# 360	[c=8]*ashldi3/0
	load8! &3 	#X2	# 361	[c=6]*iordi3/2
	or
	store8! &6 	#X5	# 362	[c=4]movdi_from_tr_unspec/0
.L9.l_o316546:
	load8! &0 	#AR	# 335	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	load8! &6 	#X5	# 337	[c=6]*xordi3/2
	xor
	store8! &3 	#X2	# 338	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 180	[c=5]movdi_to_tr_unspec/1
	add! -72340172838076673		# 182	[c=4]*adddi/0
	store8! &5 	#X4	# 183	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 185	[c=5]movdi_to_tr_unspec/1
	not		# 187	[c=2]*one_cmpldi2
	load8! &5 	#X4	# 340	[c=6]*anddi3/2
	and
	and! 0x8080808080808080		# 197	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_not_zero! .L8.l_o316546	# 343	[c=12]*peep2_cbranchdi
	# END CBRANCH
	load8! &1 	#X1	# 208	[c=5]movdi_to_tr_unspec/1
	add! -8		# 210	[c=4]*adddi/0
	store8! &2 	#X1	# 211	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 219	[c=5]movdi_to_tr_unspec/1
	add! 8		# 221	[c=4]*adddi/0
	store8! &1 	#AR	# 222	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 226	[c=12]cbranchdi4_internal
	push! 7	
	load8! &2 	#X1
	lt_u	
	not	
	jump_zero! .L9.l_o316546
	# END CBRANCH
.L10.l_o316546:
	# CBRANCH EQ0	# 88	[c=12]cbranchdi4_internal
	load8! &1 	#X1
	jump_zero! .L17.l_o316546
	# END CBRANCH
.L8.l_o316546:
	load8! &0 	#AR	# 90	[c=7]movqi_to_tr_unspec/2
	load1	
	#	
	# CBRANCH - peep (modesize=1)
	and! 255		# 363	[c=12]*peep2_cbranchqi_reverse
	# - EQ
	load1! &4 	#X3
	xor	
	jump_zero! .L1.l_o316546
	# END CBRANCH
	load8! &0 	#AR	# 96	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 98	[c=6]*adddi/2
	add
	store8! &3 	#X2	# 99	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 244	[c=5]movdi_to_tr_unspec/1
	add! 1		# 246	[c=4]*adddi/0
	store8! &1 	#AR	# 247	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ	# 251	[c=12]cbranchdi4_internal
	load8! &2 	#X2
	load8! &1 	#AR
	xor	
	jump_zero! .L24.l_o316546
	# END CBRANCH
.L11.l_o316546:
	load8! &0 	#AR	# 232	[c=7]movqi_to_tr_unspec/2
	load1	
	#	
	# CBRANCH - peep (modesize=1)
	and! 255		# 334	[c=12]*peep2_cbranchqi
	# - EQ
	load1! &4 	#X3
	xor	
	jump_zero! .L1.l_o316546
	# END CBRANCH
	load8! &0 	#AR	# 387	[c=5]movdi_to_tr_unspec/1
	add! 1		# 389	[c=4]*adddi/0
	store8! &1 	#AR	# 390	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 391	[c=12]cbranchdi4_internal
	load8! &2 	#X2
	load8! &1 	#AR
	xor	
	push! 1	
	lt_u	
	jump_zero! .L11.l_o316546
	# END CBRANCH
.L24.l_o316546:
	push! 0		# 14	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 394	[c=4]movdi_push_pop
	store8! &8
	jump! .L23.l_o316546		# 410	[c=4]jump
.L15.l_o316546:
	push! 0		# 11	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 397	[c=4]movdi_push_pop
	store8! &8
	jump! .L23.l_o316546		# 412	[c=4]jump
.L17.l_o316546:
	push! 0		# 9	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 400	[c=4]movdi_push_pop
	store8! &8
	jump! .L23.l_o316546		# 414	[c=4]jump
.L13.l_o316546:
	push! 0		# 7	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 403	[c=4]movdi_push_pop
	store8! &8
.L23.l_o316546:

	# epilogue
	set_sp! &6
	return

# FUNCTION ENDS:memchr

#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: oebe4ee
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"memcpy.c"
#	.text
	#peephole pop(deadreg)+push
	#peephole binop1+deadreg+binop2
	#peephole pop(deadreg)+push
	#peephole binop1+deadreg+binop2
	#peephole binop1+deadreg+binop2
	#peephole pop+cmp
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole binop1+deadreg+binop2
	#peephole pop+push+commut(di)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole pop(deadreg)+push
	#peephole binop1+deadreg+binop2
	#peephole pop+cmp
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn

# FUNCTION BEGINS:memcpy
	EXPORT	memcpy
memcpy:
	# prologue (8 GPRs)

	set_sp! &-8

	load8! &9	# 2	[c=2]movdi_push_pop
	store8! &5 	#X4
	load8! &10	# 3	[c=2]movdi_push_pop
	store8! &2 	#X1
	load8! &11	# 4	[c=2]movdi_push_pop
	store8! &4 	#X3
	# CBRANCH	# 13	[c=12]cbranchdi4_internal
	push! 31	
	load8! &4 	#X3
	lt_u	
	jump_zero! .L11.l_oebe4ee
	# END CBRANCH
	load8! &1 	#X1	# 15	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &4 	#X4	# 16	[c=4]movdi_push_pop
	store8! &3 	#X2
	load8! &1 	#X1	# 417	[c=5]movdi_to_tr_unspec/1
	load8! &5 	#X4	# 419	[c=6]*iordi3/2
	or
	and! 0x7		# 420	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_not_zero! .L21.l_oebe4ee	# 422	[c=12]*peep2_cbranchdi
	# END CBRANCH
	load8! &3 	#X3	# 397	[c=5]movdi_to_tr_unspec/1
	add! -32		# 399	[c=4]*adddi/0
	shift_ru! 5	# 400	[c=40]*lshrdi3/0
	store8! &8 	#X7	# 401	[c=4]movdi_from_tr_unspec/0
	load8! &7 	#X7	# 108	[c=5]movdi_to_tr_unspec/1
	shift_l! 5	# 110	[c=8]*ashldi3/0
	load8! &5 	#X4	# 403	[c=6]*adddi/2
	add
	store8! &7 	#X6	# 404	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 120	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	load8! &3 	#X2	# 127	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load8! &0 	#AR	# 129	[c=11]movdi_to_tr_unspec/2
	add! 8	
	load8	
	#	
	load8! &3 	#X2	# 135	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &0 	#AR	# 137	[c=11]movdi_to_tr_unspec/2
	add! 16	
	load8	
	#	
	load8! &3 	#X2	# 143	[c=4]movdi_from_tr_unspec/1
	add! 16	
	store8	
	#	
	load8! &0 	#AR	# 145	[c=11]movdi_to_tr_unspec/2
	add! 24	
	load8	
	#	
	load8! &3 	#X2	# 151	[c=4]movdi_from_tr_unspec/1
	add! 24	
	store8	
	#	
	load8! &2 	#X2	# 153	[c=5]movdi_to_tr_unspec/1
	add! 32		# 155	[c=4]*adddi/0
	store8! &6 	#X5	# 156	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 163	[c=5]movdi_to_tr_unspec/1
	add! 32		# 165	[c=4]*adddi/0
	store8! &1 	#AR	# 166	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ	# 170	[c=12]cbranchdi4_internal
	load8! &2 	#X2
	load8! &7 	#X6
	xor	
	jump_zero! .L22.l_oebe4ee
	# END CBRANCH
.L12.l_oebe4ee:
	load8! &5 	#X5	# 8	[c=4]movdi_push_pop
	store8! &3 	#X2
	load8! &0 	#AR	# 432	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	load8! &3 	#X2	# 434	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load8! &0 	#AR	# 435	[c=11]movdi_to_tr_unspec/2
	add! 8	
	load8	
	#	
	load8! &3 	#X2	# 437	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &0 	#AR	# 438	[c=11]movdi_to_tr_unspec/2
	add! 16	
	load8	
	#	
	load8! &3 	#X2	# 440	[c=4]movdi_from_tr_unspec/1
	add! 16	
	store8	
	#	
	load8! &0 	#AR	# 441	[c=11]movdi_to_tr_unspec/2
	add! 24	
	load8	
	#	
	load8! &3 	#X2	# 443	[c=4]movdi_from_tr_unspec/1
	add! 24	
	store8	
	#	
	load8! &2 	#X2	# 444	[c=5]movdi_to_tr_unspec/1
	add! 32		# 446	[c=4]*adddi/0
	store8! &6 	#X5	# 447	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 448	[c=5]movdi_to_tr_unspec/1
	add! 32		# 450	[c=4]*adddi/0
	store8! &1 	#AR	# 451	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 452	[c=12]cbranchdi4_internal
	load8! &2 	#X2
	load8! &7 	#X6
	xor	
	push! 1	
	lt_u	
	jump_zero! .L12.l_oebe4ee
	# END CBRANCH
.L22.l_oebe4ee:
	load8! &7 	#X7	# 387	[c=5]movdi_to_tr_unspec/1
	add! 1		# 389	[c=4]*adddi/0
	shift_l! 5	# 390	[c=8]*ashldi3/0
	store8! &1 	#AR	# 391	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 187	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 189	[c=6]*adddi/2
	add
	store8! &7 	#X6	# 190	[c=4]movdi_from_tr_unspec/0
	load8! &6 	#X6	# 192	[c=4]movdi_push_pop
	store8! &2 	#X1
	load8! &4 	#X4	# 193	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 195	[c=6]*adddi/2
	add
	store8! &1 	#AR	# 196	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 198	[c=5]movdi_to_tr_unspec/1
	and! 0x1f		# 200	[c=4]*anddi3/0
	store8! &8 	#X7	# 201	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 203	[c=5]movdi_to_tr_unspec/1
	and! 0x18		# 205	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L13.l_oebe4ee	# 392	[c=12]*peep2_cbranchdi
	# END CBRANCH
	load8! &0 	#AR	# 211	[c=4]movdi_push_pop
	store8! &3 	#X2
.L8.l_oebe4ee:
	load8! &1 	#X1	# 214	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	load8! &3 	#X2	# 221	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load8! &1 	#X1	# 228	[c=5]movdi_to_tr_unspec/1
	add! 8		# 230	[c=4]*adddi/0
	store8! &2 	#X1	# 231	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 239	[c=5]movdi_to_tr_unspec/1
	add! 8		# 241	[c=4]*adddi/0
	store8! &3 	#X2	# 242	[c=4]movdi_from_tr_unspec/0
	load8! &7 	#X7	# 382	[c=5]movdi_to_tr_unspec/1
	load8! &7 	#X6	# 384	[c=6]*adddi/2
	add
	load8! &2 	#X1	# 385	[c=14]*subdi3/2
	sub
	store8! &6 	#X5	# 386	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 256	[c=12]cbranchdi4_internal
	push! 7	
	load8! &6 	#X5
	lt_u	
	not	
	jump_zero! .L8.l_oebe4ee
	# END CBRANCH
	load8! &3 	#X3	# 37	[c=5]movdi_to_tr_unspec/1
	and! 0x7		# 39	[c=4]*anddi3/0
	store8! &4 	#X3	# 40	[c=4]movdi_from_tr_unspec/0
	load8! &7 	#X7	# 410	[c=5]movdi_to_tr_unspec/1
	add! -8		# 412	[c=4]*adddi/0
	shift_ru! 3	# 413	[c=40]*lshrdi3/0
	add! 1		# 414	[c=4]*adddi/0
	shift_l! 3	# 60	[c=8]*ashldi3/0
	store8! &2 	#X1	# 61	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 68	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 70	[c=6]*adddi/2
	add
	store8! &1 	#AR	# 71	[c=4]movdi_from_tr_unspec/0
	load8! &6 	#X6	# 79	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 81	[c=6]*adddi/2
	add
	store8! &2 	#X1	# 82	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 87	[c=5]movdi_to_tr_unspec/1
	add! -1		# 89	[c=4]*adddi/0
	store8! &3 	#X2	# 90	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 92	[c=12]cbranchdi4_internal
	load8! &3 	#X3
	jump_zero! .L17.l_oebe4ee
	# END CBRANCH
.L5.l_oebe4ee:
	load8! &2 	#X2	# 376	[c=5]movdi_to_tr_unspec/1
	add! 1		# 378	[c=4]*adddi/0
	load8! &1 	#AR	# 379	[c=6]*adddi/2
	add
	store8! &4 	#X3	# 380	[c=4]movdi_from_tr_unspec/0
.L10.l_oebe4ee:
	load8! &1 	#X1	# 277	[c=7]movqi_to_tr_unspec/2
	load1	
	#	
	load8! &1 	#AR	# 284	[c=4]movqi_from_tr_unspec/1
	store1	
	#	
	load8! &0 	#AR	# 291	[c=5]movdi_to_tr_unspec/1
	add! 1		# 293	[c=4]*adddi/0
	store8! &1 	#AR	# 294	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 302	[c=5]movdi_to_tr_unspec/1
	add! 1		# 304	[c=4]*adddi/0
	store8! &2 	#X1	# 305	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 309	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	load8! &4 	#X3
	xor	
	push! 1	
	lt_u	
	jump_zero! .L10.l_oebe4ee
	# END CBRANCH
	jump! .L17.l_oebe4ee		# 478	[c=4]jump
.L11.l_oebe4ee:
	load8! &4 	#X4	# 6	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &3 	#X3	# 455	[c=5]movdi_to_tr_unspec/1
	add! -1		# 457	[c=4]*adddi/0
	store8! &3 	#X2	# 458	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 459	[c=12]cbranchdi4_internal
	load8! &3 	#X3
	jump_not_zero! .L5.l_oebe4ee
	# END CBRANCH
	jump! .L17.l_oebe4ee		# 481	[c=4]jump
.L21.l_oebe4ee:
	load8! &3 	#X3	# 317	[c=5]movdi_to_tr_unspec/1
	add! -1		# 319	[c=4]*adddi/0
	store8! &3 	#X2	# 320	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 10	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &2 	#X2	# 462	[c=5]movdi_to_tr_unspec/1
	add! 1		# 464	[c=4]*adddi/0
	load8! &1 	#AR	# 465	[c=6]*adddi/2
	add
	store8! &4 	#X3	# 466	[c=4]movdi_from_tr_unspec/0
	jump! .L10.l_oebe4ee		# 483	[c=4]jump
.L13.l_oebe4ee:
	load8! &7 	#X7	# 7	[c=4]movdi_push_pop
	store8! &4 	#X3
	load8! &3 	#X3	# 469	[c=5]movdi_to_tr_unspec/1
	add! -1		# 471	[c=4]*adddi/0
	store8! &3 	#X2	# 472	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 473	[c=12]cbranchdi4_internal
	load8! &3 	#X3
	jump_not_zero! .L5.l_oebe4ee
	# END CBRANCH
.L17.l_oebe4ee:
	load8! &4 	#X4	# 325	[c=4]movdi_push_pop
	store8! &10

	# epilogue
	set_sp! &8
	return

# FUNCTION ENDS:memcpy

#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: o1b5ca5
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"memmove.c"
#	.text
	#peephole pop(deadreg)+push
	#peephole binop1+deadreg+binop2
	#peephole pop(deadreg)+push
	#peephole binop1+deadreg+binop2
	#peephole binop1+deadreg+binop2
	#peephole pop+cmp
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole binop1+deadreg+binop2
	#peephole pop+push+commut(di)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole pop(deadreg)+push
	#peephole binop1+deadreg+binop2
	#peephole pop+cmp
	#peephole pop(deadreg)+push
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn

# FUNCTION BEGINS:memmove
	EXPORT	memmove
memmove:
	# prologue (9 GPRs)

	set_sp! &-9

	load8! &10	# 2	[c=2]movdi_push_pop
	store8! &4 	#X3
	load8! &11	# 3	[c=2]movdi_push_pop
	store8! &1 	#AR
	load8! &12	# 4	[c=2]movdi_push_pop
	store8! &6 	#X5
	# CBRANCH	# 13	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	load8! &4 	#X3
	lt_u	
	jump_zero! .L2.l_o1b5ca5
	# END CBRANCH
	load8! &0 	#AR	# 15	[c=5]movdi_to_tr_unspec/1
	load8! &6 	#X5	# 17	[c=6]*adddi/2
	add
	store8! &2 	#X1	# 18	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 20	[c=12]cbranchdi4_internal
	load8! &3 	#X3
	load8! &2 	#X1
	lt_u	
	jump_zero! .L2.l_o1b5ca5
	# END CBRANCH
	load8! &3 	#X3	# 22	[c=5]movdi_to_tr_unspec/1
	load8! &6 	#X5	# 24	[c=6]*adddi/2
	add
	store8! &1 	#AR	# 25	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 27	[c=12]cbranchdi4_internal
	load8! &5 	#X5
	jump_zero! .L17.l_o1b5ca5
	# END CBRANCH
.L4.l_o1b5ca5:
	load8! &1 	#X1	# 34	[c=5]movdi_to_tr_unspec/1
	add! -1		# 36	[c=4]*adddi/0
	store8! &2 	#X1	# 37	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 45	[c=5]movdi_to_tr_unspec/1
	add! -1		# 47	[c=4]*adddi/0
	store8! &1 	#AR	# 48	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 51	[c=7]movqi_to_tr_unspec/2
	load1	
	#	
	load8! &1 	#AR	# 57	[c=4]movqi_from_tr_unspec/1
	store1	
	#	
	# CBRANCH	# 60	[c=12]cbranchdi4_internal
	load8! &3 	#X3
	load8! &1 	#AR
	xor	
	push! 1	
	lt_u	
	jump_zero! .L4.l_o1b5ca5
	# END CBRANCH
	jump! .L17.l_o1b5ca5		# 558	[c=4]jump
.L2.l_o1b5ca5:
	# CBRANCH	# 66	[c=12]cbranchdi4_internal
	push! 31	
	load8! &6 	#X5
	lt_u	
	jump_zero! .L13.l_o1b5ca5
	# END CBRANCH
	load8! &0 	#AR	# 68	[c=4]movdi_push_pop
	store8! &2 	#X1
	load8! &3 	#X3	# 69	[c=4]movdi_push_pop
	store8! &3 	#X2
	load8! &0 	#AR	# 482	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 484	[c=6]*iordi3/2
	or
	and! 0x7		# 485	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_not_zero! .L28.l_o1b5ca5	# 487	[c=12]*peep2_cbranchdi
	# END CBRANCH
	load8! &5 	#X5	# 462	[c=5]movdi_to_tr_unspec/1
	add! -32		# 464	[c=4]*adddi/0
	shift_ru! 5	# 465	[c=40]*lshrdi3/0
	store8! &8 	#X7	# 466	[c=4]movdi_from_tr_unspec/0
	load8! &7 	#X7	# 161	[c=5]movdi_to_tr_unspec/1
	shift_l! 5	# 163	[c=8]*ashldi3/0
	load8! &4 	#X3	# 468	[c=6]*adddi/2
	add
	store8! &7 	#X6	# 469	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 173	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	load8! &3 	#X2	# 180	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load8! &1 	#X1	# 182	[c=11]movdi_to_tr_unspec/2
	add! 8	
	load8	
	#	
	load8! &3 	#X2	# 188	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &1 	#X1	# 190	[c=11]movdi_to_tr_unspec/2
	add! 16	
	load8	
	#	
	load8! &3 	#X2	# 196	[c=4]movdi_from_tr_unspec/1
	add! 16	
	store8	
	#	
	load8! &1 	#X1	# 198	[c=11]movdi_to_tr_unspec/2
	add! 24	
	load8	
	#	
	load8! &3 	#X2	# 204	[c=4]movdi_from_tr_unspec/1
	add! 24	
	store8	
	#	
	load8! &2 	#X2	# 206	[c=5]movdi_to_tr_unspec/1
	add! 32		# 208	[c=4]*adddi/0
	store8! &5 	#X4	# 209	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 216	[c=5]movdi_to_tr_unspec/1
	add! 32		# 218	[c=4]*adddi/0
	store8! &2 	#X1	# 219	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ	# 223	[c=12]cbranchdi4_internal
	load8! &2 	#X2
	load8! &7 	#X6
	xor	
	jump_zero! .L29.l_o1b5ca5
	# END CBRANCH
.L14.l_o1b5ca5:
	load8! &4 	#X4	# 8	[c=4]movdi_push_pop
	store8! &3 	#X2
	load8! &1 	#X1	# 499	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	load8! &3 	#X2	# 501	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load8! &1 	#X1	# 502	[c=11]movdi_to_tr_unspec/2
	add! 8	
	load8	
	#	
	load8! &3 	#X2	# 504	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &1 	#X1	# 505	[c=11]movdi_to_tr_unspec/2
	add! 16	
	load8	
	#	
	load8! &3 	#X2	# 507	[c=4]movdi_from_tr_unspec/1
	add! 16	
	store8	
	#	
	load8! &1 	#X1	# 508	[c=11]movdi_to_tr_unspec/2
	add! 24	
	load8	
	#	
	load8! &3 	#X2	# 510	[c=4]movdi_from_tr_unspec/1
	add! 24	
	store8	
	#	
	load8! &2 	#X2	# 511	[c=5]movdi_to_tr_unspec/1
	add! 32		# 513	[c=4]*adddi/0
	store8! &5 	#X4	# 514	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 515	[c=5]movdi_to_tr_unspec/1
	add! 32		# 517	[c=4]*adddi/0
	store8! &2 	#X1	# 518	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 519	[c=12]cbranchdi4_internal
	load8! &2 	#X2
	load8! &7 	#X6
	xor	
	push! 1	
	lt_u	
	jump_zero! .L14.l_o1b5ca5
	# END CBRANCH
.L29.l_o1b5ca5:
	load8! &7 	#X7	# 452	[c=5]movdi_to_tr_unspec/1
	add! 1		# 454	[c=4]*adddi/0
	shift_l! 5	# 455	[c=8]*ashldi3/0
	store8! &2 	#X1	# 456	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 240	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 242	[c=6]*adddi/2
	add
	store8! &9 	#X8	# 243	[c=4]movdi_from_tr_unspec/0
	load8! &8 	#X8	# 245	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &3 	#X3	# 246	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 248	[c=6]*adddi/2
	add
	store8! &2 	#X1	# 249	[c=4]movdi_from_tr_unspec/0
	load8! &5 	#X5	# 251	[c=5]movdi_to_tr_unspec/1
	and! 0x1f		# 253	[c=4]*anddi3/0
	store8! &7 	#X6	# 254	[c=4]movdi_from_tr_unspec/0
	load8! &5 	#X5	# 256	[c=5]movdi_to_tr_unspec/1
	and! 0x18		# 258	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L15.l_o1b5ca5	# 457	[c=12]*peep2_cbranchdi
	# END CBRANCH
	load8! &1 	#X1	# 263	[c=4]movdi_push_pop
	store8! &8 	#X7
	load8! &1 	#X1	# 9	[c=4]movdi_push_pop
	store8! &3 	#X2
.L10.l_o1b5ca5:
	load8! &0 	#AR	# 267	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	load8! &3 	#X2	# 274	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load8! &2 	#X2	# 281	[c=5]movdi_to_tr_unspec/1
	add! 8		# 283	[c=4]*adddi/0
	store8! &3 	#X2	# 284	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 292	[c=5]movdi_to_tr_unspec/1
	add! 8		# 294	[c=4]*adddi/0
	store8! &1 	#AR	# 295	[c=4]movdi_from_tr_unspec/0
	load8! &6 	#X6	# 447	[c=5]movdi_to_tr_unspec/1
	load8! &8 	#X7	# 449	[c=6]*adddi/2
	add
	load8! &3 	#X2	# 450	[c=14]*subdi3/2
	sub
	store8! &5 	#X4	# 451	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 309	[c=12]cbranchdi4_internal
	push! 7	
	load8! &5 	#X4
	lt_u	
	not	
	jump_zero! .L10.l_o1b5ca5
	# END CBRANCH
	load8! &5 	#X5	# 90	[c=5]movdi_to_tr_unspec/1
	and! 0x7		# 92	[c=4]*anddi3/0
	store8! &6 	#X5	# 93	[c=4]movdi_from_tr_unspec/0
	load8! &6 	#X6	# 475	[c=5]movdi_to_tr_unspec/1
	add! -8		# 477	[c=4]*adddi/0
	shift_ru! 3	# 478	[c=40]*lshrdi3/0
	add! 1		# 479	[c=4]*adddi/0
	shift_l! 3	# 113	[c=8]*ashldi3/0
	store8! &1 	#AR	# 114	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 121	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 123	[c=6]*adddi/2
	add
	store8! &2 	#X1	# 124	[c=4]movdi_from_tr_unspec/0
	load8! &8 	#X8	# 132	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 134	[c=6]*adddi/2
	add
	store8! &1 	#AR	# 135	[c=4]movdi_from_tr_unspec/0
	load8! &5 	#X5	# 140	[c=5]movdi_to_tr_unspec/1
	add! -1		# 142	[c=4]*adddi/0
	store8! &3 	#X2	# 143	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 145	[c=12]cbranchdi4_internal
	load8! &5 	#X5
	jump_zero! .L17.l_o1b5ca5
	# END CBRANCH
.L8.l_o1b5ca5:
	load8! &2 	#X2	# 441	[c=5]movdi_to_tr_unspec/1
	add! 1		# 443	[c=4]*adddi/0
	load8! &1 	#AR	# 444	[c=6]*adddi/2
	add
	store8! &5 	#X4	# 445	[c=4]movdi_from_tr_unspec/0
.L12.l_o1b5ca5:
	load8! &0 	#AR	# 330	[c=7]movqi_to_tr_unspec/2
	load1	
	#	
	load8! &2 	#X1	# 337	[c=4]movqi_from_tr_unspec/1
	store1	
	#	
	load8! &0 	#AR	# 344	[c=5]movdi_to_tr_unspec/1
	add! 1		# 346	[c=4]*adddi/0
	store8! &1 	#AR	# 347	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 355	[c=5]movdi_to_tr_unspec/1
	add! 1		# 357	[c=4]*adddi/0
	store8! &2 	#X1	# 358	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ	# 362	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	load8! &5 	#X4
	xor	
	jump_zero! .L17.l_o1b5ca5
	# END CBRANCH
	load8! &0 	#AR	# 522	[c=7]movqi_to_tr_unspec/2
	load1	
	#	
	load8! &2 	#X1	# 524	[c=4]movqi_from_tr_unspec/1
	store1	
	#	
	load8! &0 	#AR	# 525	[c=5]movdi_to_tr_unspec/1
	add! 1		# 527	[c=4]*adddi/0
	store8! &1 	#AR	# 528	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 529	[c=5]movdi_to_tr_unspec/1
	add! 1		# 531	[c=4]*adddi/0
	store8! &2 	#X1	# 532	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 533	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	load8! &5 	#X4
	xor	
	push! 1	
	lt_u	
	jump_zero! .L12.l_o1b5ca5
	# END CBRANCH
	jump! .L17.l_o1b5ca5		# 563	[c=4]jump
.L13.l_o1b5ca5:
	load8! &3 	#X3	# 6	[c=4]movdi_push_pop
	store8! &2 	#X1
	load8! &5 	#X5	# 537	[c=5]movdi_to_tr_unspec/1
	add! -1		# 539	[c=4]*adddi/0
	store8! &3 	#X2	# 540	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 541	[c=12]cbranchdi4_internal
	load8! &5 	#X5
	jump_not_zero! .L8.l_o1b5ca5
	# END CBRANCH
	jump! .L17.l_o1b5ca5		# 566	[c=4]jump
.L28.l_o1b5ca5:
	load8! &5 	#X5	# 370	[c=5]movdi_to_tr_unspec/1
	add! -1		# 372	[c=4]*adddi/0
	store8! &3 	#X2	# 373	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 10	[c=4]movdi_push_pop
	store8! &2 	#X1
	load8! &2 	#X2	# 544	[c=5]movdi_to_tr_unspec/1
	add! 1		# 546	[c=4]*adddi/0
	load8! &1 	#AR	# 547	[c=6]*adddi/2
	add
	store8! &5 	#X4	# 548	[c=4]movdi_from_tr_unspec/0
	jump! .L12.l_o1b5ca5		# 568	[c=4]jump
.L15.l_o1b5ca5:
	load8! &6 	#X6	# 7	[c=4]movdi_push_pop
	store8! &6 	#X5
	load8! &5 	#X5	# 551	[c=5]movdi_to_tr_unspec/1
	add! -1		# 553	[c=4]*adddi/0
	store8! &3 	#X2	# 554	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 555	[c=12]cbranchdi4_internal
	load8! &5 	#X5
	jump_not_zero! .L8.l_o1b5ca5
	# END CBRANCH
.L17.l_o1b5ca5:
	load8! &3 	#X3	# 378	[c=4]movdi_push_pop
	store8! &11

	# epilogue
	set_sp! &9
	return

# FUNCTION ENDS:memmove

#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: o9a4b86
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"memset.c"
#	.text
	#peephole move+push(pushable)
	#peephole binop1+deadreg+binop2
	#peephole pop+push+commut(di)
	#peephole binop1+deadreg+binop2
	#peephole pop+push+commut(di)
	#peephole binop1+deadreg+binop2
	#peephole pop+push+commut(di)
	#peephole pop+cmp
	#peephole binop1+deadreg+binop2
	#peephole binop1+deadreg+binop2
	#peephole move+push(pushable)
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole binop1+deadreg+binop2
	#peephole binop1+deadreg+binop2
	#peephole pop+cmp
	#peephole move+push(pushable)
	#peephole pop+cmp
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+commut(di)
	#peephole popdi(deadreg)+push

# FUNCTION BEGINS:memset
	EXPORT	memset
memset:
	# prologue (8 GPRs)

	set_sp! &-8

	load8! &9	# 2	[c=2]movdi_push_pop
	store8! &5 	#X4
	load8! &4 	#X4	# 14	[c=5]movdi_to_tr_unspec/1
	and! 0x7		# 16	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L12.l_o9a4b86	# 457	[c=12]*peep2_cbranchdi
	# END CBRANCH
	load8! &11	# 21	[c=5]movdi_to_tr_unspec/1
	add! -1		# 23	[c=4]*adddi/0
	store8! &2 	#X1	# 24	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 26	[c=14]cbranchdi4_internal
	load8! &11
	jump_zero! .L17.l_o9a4b86
	# END CBRANCH
	load4! &10	# 455	[c=5]movsi_to_tr_unspec/1
	store8! &4 	#X3	# 35	[c=4]movqi_from_tr_unspec/0
	load8! &4 	#X4	# 6	[c=4]movdi_push_pop
	store8! &3 	#X2
.L4.l_o9a4b86:
	load8! &2 	#X2	# 56	[c=5]movdi_to_tr_unspec/1
	add! 1		# 58	[c=4]*adddi/0
	store8! &1 	#AR	# 59	[c=4]movdi_from_tr_unspec/0
	load1! &3 	#X3	# 61	[c=5]movqi_to_tr_unspec/1
	load8! &3 	#X2	# 63	[c=4]movqi_from_tr_unspec/1
	store1	
	#	
	load8! &0 	#AR	# 66	[c=5]movdi_to_tr_unspec/1
	and! 0x7		# 68	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L2.l_o9a4b86	# 454	[c=12]*peep2_cbranchdi
	# END CBRANCH
	load8! &1 	#X1	# 45	[c=5]movdi_to_tr_unspec/1
	add! -1		# 47	[c=4]*adddi/0
	store8! &2 	#X1	# 48	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 51	[c=4]movdi_push_pop
	store8! &3 	#X2
	# CBRANCH	# 53	[c=12]cbranchdi4_internal
	load8! &1 	#X1
	push! -1	
	xor	
	push! 1	
	lt_u	
	jump_zero! .L4.l_o9a4b86
	# END CBRANCH
	jump! .L17.l_o9a4b86		# 505	[c=4]jump
.L12.l_o9a4b86:
	load8! &4 	#X4	# 7	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &11	# 8	[c=2]movdi_push_pop
	store8! &2 	#X1
.L2.l_o9a4b86:
	# CBRANCH	# 75	[c=12]cbranchdi4_internal
	push! 7	
	load8! &2 	#X1
	lt_u	
	jump_zero! .L7.l_o9a4b86
	# END CBRANCH
	load4! &10	# 435	[c=5]movsi_to_tr_unspec/1
	and! 0xff		# 80	[c=4]*anddi3/0
	store8! &3 	#X2	# 458	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 459	[c=5]movdi_to_tr_unspec/1
	shift_l! 8	# 89	[c=8]*ashldi3/0
	load8! &3 	#X2	# 466	[c=6]*iordi3/2
	or
	and! 0xffffffff		# 468	[c=4]*anddi3/0
	store8! &3 	#X2	# 443	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 444	[c=5]movdi_to_tr_unspec/1
	shift_l! 16	# 446	[c=8]*ashldi3/0
	load8! &3 	#X2	# 447	[c=6]*iordi3/2
	or
	store8! &3 	#X2	# 448	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 449	[c=5]movdi_to_tr_unspec/1
	shift_l! 32	# 451	[c=8]*ashldi3/0
	load8! &3 	#X2	# 452	[c=6]*iordi3/2
	or
	store8! &4 	#X3	# 453	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 134	[c=12]cbranchdi4_internal
	push! 31	
	load8! &2 	#X1
	lt_u	
	jump_zero! .L13.l_o9a4b86
	# END CBRANCH
	load8! &0 	#AR	# 136	[c=4]movdi_push_pop
	store8! &3 	#X2
	load8! &1 	#X1	# 425	[c=5]movdi_to_tr_unspec/1
	add! -32		# 427	[c=4]*adddi/0
	shift_ru! 5	# 428	[c=40]*lshrdi3/0
	store8! &7 	#X6	# 429	[c=4]movdi_from_tr_unspec/0
	load8! &6 	#X6	# 147	[c=5]movdi_to_tr_unspec/1
	shift_l! 5	# 149	[c=8]*ashldi3/0
	store8! &6 	#X5	# 150	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 430	[c=5]movdi_to_tr_unspec/1
	add! 32		# 432	[c=4]*adddi/0
	load8! &6 	#X5	# 433	[c=6]*adddi/2
	add
	store8! &6 	#X5	# 434	[c=4]movdi_from_tr_unspec/0
.L9.l_o9a4b86:
	load8! &3 	#X3	# 164	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 166	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load8! &3 	#X3	# 168	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 170	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &3 	#X3	# 172	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 174	[c=4]movdi_from_tr_unspec/1
	add! 16	
	store8	
	#	
	load8! &3 	#X3	# 176	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 178	[c=4]movdi_from_tr_unspec/1
	add! 24	
	store8	
	#	
	load8! &2 	#X2	# 185	[c=5]movdi_to_tr_unspec/1
	add! 32		# 187	[c=4]*adddi/0
	store8! &3 	#X2	# 188	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 192	[c=12]cbranchdi4_internal
	load8! &2 	#X2
	load8! &6 	#X5
	xor	
	push! 1	
	lt_u	
	jump_zero! .L9.l_o9a4b86
	# END CBRANCH
	load8! &6 	#X6	# 416	[c=5]movdi_to_tr_unspec/1
	add! 1		# 418	[c=4]*adddi/0
	shift_l! 5	# 419	[c=8]*ashldi3/0
	load8! &1 	#AR	# 422	[c=6]*adddi/2
	add
	store8! &1 	#AR	# 423	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 215	[c=5]movdi_to_tr_unspec/1
	and! 0x1f		# 217	[c=4]*anddi3/0
	store8! &6 	#X5	# 218	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 220	[c=5]movdi_to_tr_unspec/1
	and! 0x18		# 222	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L28.l_o9a4b86	# 424	[c=12]*peep2_cbranchdi
	# END CBRANCH
	load8! &0 	#AR	# 228	[c=4]movdi_push_pop
	store8! &2 	#X1
	load8! &5 	#X5	# 408	[c=5]movdi_to_tr_unspec/1
	add! -8		# 410	[c=4]*adddi/0
	shift_ru! 3	# 411	[c=40]*lshrdi3/0
	store8! &7 	#X6	# 412	[c=4]movdi_from_tr_unspec/0
	load8! &6 	#X6	# 239	[c=5]movdi_to_tr_unspec/1
	shift_l! 3	# 241	[c=8]*ashldi3/0
	store8! &8 	#X7	# 242	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 244	[c=5]movdi_to_tr_unspec/1
	add! 8		# 246	[c=4]*adddi/0
	load8! &8 	#X7	# 414	[c=6]*adddi/2
	add
	store8! &3 	#X2	# 415	[c=4]movdi_from_tr_unspec/0
.L10.l_o9a4b86:
	load8! &3 	#X3	# 256	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 258	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load8! &1 	#X1	# 265	[c=5]movdi_to_tr_unspec/1
	add! 8		# 267	[c=4]*adddi/0
	store8! &2 	#X1	# 268	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 272	[c=12]cbranchdi4_internal
	load8! &1 	#X1
	load8! &3 	#X2
	xor	
	push! 1	
	lt_u	
	jump_zero! .L10.l_o9a4b86
	# END CBRANCH
	load8! &6 	#X6	# 400	[c=5]movdi_to_tr_unspec/1
	add! 1		# 402	[c=4]*adddi/0
	shift_l! 3	# 403	[c=8]*ashldi3/0
	load8! &1 	#AR	# 406	[c=6]*adddi/2
	add
	store8! &1 	#AR	# 407	[c=4]movdi_from_tr_unspec/0
	load8! &5 	#X5	# 295	[c=5]movdi_to_tr_unspec/1
	and! 0x7		# 297	[c=4]*anddi3/0
	store8! &2 	#X1	# 298	[c=4]movdi_from_tr_unspec/0
.L7.l_o9a4b86:
	# CBRANCH EQ0	# 302	[c=12]cbranchdi4_internal
	load8! &1 	#X1
	jump_zero! .L17.l_o9a4b86
	# END CBRANCH
.L29.l_o9a4b86:
	load4! &10	# 398	[c=5]movsi_to_tr_unspec/1
	store8! &3 	#X2	# 306	[c=4]movqi_from_tr_unspec/0
	load8! &1 	#X1	# 309	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 311	[c=6]*adddi/2
	add
	store8! &2 	#X1	# 312	[c=4]movdi_from_tr_unspec/0
.L11.l_o9a4b86:
	load1! &2 	#X2	# 316	[c=5]movqi_to_tr_unspec/1
	load8! &1 	#AR	# 318	[c=4]movqi_from_tr_unspec/1
	store1	
	#	
	load8! &0 	#AR	# 325	[c=5]movdi_to_tr_unspec/1
	add! 1		# 327	[c=4]*adddi/0
	store8! &1 	#AR	# 328	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ	# 332	[c=12]cbranchdi4_internal
	load8! &1 	#X1
	load8! &1 	#AR
	xor	
	jump_zero! .L17.l_o9a4b86
	# END CBRANCH
	load1! &2 	#X2	# 473	[c=5]movqi_to_tr_unspec/1
	load8! &1 	#AR	# 475	[c=4]movqi_from_tr_unspec/1
	store1	
	#	
	load8! &0 	#AR	# 476	[c=5]movdi_to_tr_unspec/1
	add! 1		# 478	[c=4]*adddi/0
	store8! &1 	#AR	# 479	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 480	[c=12]cbranchdi4_internal
	load8! &1 	#X1
	load8! &1 	#AR
	xor	
	push! 1	
	lt_u	
	jump_zero! .L11.l_o9a4b86
	# END CBRANCH
	jump! .L17.l_o9a4b86		# 509	[c=4]jump
.L28.l_o9a4b86:
	load8! &5 	#X5	# 10	[c=4]movdi_push_pop
	store8! &2 	#X1
	# CBRANCH EQ0	# 484	[c=12]cbranchdi4_internal
	load8! &1 	#X1
	jump_not_zero! .L29.l_o9a4b86
	# END CBRANCH
	jump! .L17.l_o9a4b86		# 513	[c=4]jump
.L13.l_o9a4b86:
	load8! &1 	#X1	# 9	[c=4]movdi_push_pop
	store8! &6 	#X5
	load8! &0 	#AR	# 487	[c=4]movdi_push_pop
	store8! &2 	#X1
	load8! &5 	#X5	# 488	[c=5]movdi_to_tr_unspec/1
	add! -8		# 490	[c=4]*adddi/0
	shift_ru! 3	# 491	[c=40]*lshrdi3/0
	store8! &7 	#X6	# 492	[c=4]movdi_from_tr_unspec/0
	load8! &6 	#X6	# 493	[c=5]movdi_to_tr_unspec/1
	shift_l! 3	# 495	[c=8]*ashldi3/0
	store8! &8 	#X7	# 496	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 497	[c=5]movdi_to_tr_unspec/1
	add! 8		# 499	[c=4]*adddi/0
	load8! &8 	#X7	# 501	[c=6]*adddi/2
	add
	store8! &3 	#X2	# 502	[c=4]movdi_from_tr_unspec/0
	jump! .L10.l_o9a4b86		# 515	[c=4]jump
.L17.l_o9a4b86:
	load8! &4 	#X4	# 337	[c=4]movdi_push_pop
	store8! &10

	# epilogue
	set_sp! &8
	return

# FUNCTION ENDS:memset

#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: o108979
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"mlock.c"
#	.text

# FUNCTION BEGINS:__malloc_lock
	EXPORT	__malloc_lock
__malloc_lock:
	# prologue (0 GPRs)


	# epilogue
	return

# FUNCTION ENDS:__malloc_lock


# FUNCTION BEGINS:__malloc_unlock
	EXPORT	__malloc_unlock
__malloc_unlock:
	# prologue (0 GPRs)


	# epilogue
	return

# FUNCTION ENDS:__malloc_unlock

#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: o072f5a
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"mprec.c"
#	.text
	#peephole move_dead
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole unary1+binop2+deadreg+binop3
	#peephole pop+pusharg
	#peephole pop(deadreg)+push
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+push(deadreg)+sign_extend
	#peephole redundant blockage insn

# FUNCTION BEGINS:_Balloc
	EXPORT	_Balloc
_Balloc:
	# prologue (4 GPRs)
	push! 0
	push! 0
	push! 0
	push! 0

	load8! &5	# 2	[c=2]movdi_push_pop
	store8! &3 	#X2
	load8! &2 	#X2	# 8	[c=11]movdi_to_tr_unspec/2
	add! 120	
	load8	
	#	
	store8! &1 	#AR	# 10	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 12	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L12.l_o072f5a
	# END CBRANCH
.L2.l_o072f5a:
	load4! &6	# 164	[c=5]movsi_to_tr_unspec/1
	sigx4		# 166	[c=6]*extendsidi2
	shift_l! 3	# 167	[c=8]*ashldi3/0
	load8! &1 	#AR	# 170	[c=6]*adddi/2
	add
	store8! &2 	#X1	# 171	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 44	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	store8! &1 	#AR	# 46	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 48	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L4.l_o072f5a
	# END CBRANCH
	load8! &0 	#AR	# 50	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	load8! &2 	#X1	# 56	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	push! 0		# 118	[c=3]movdi_to_tr_unspec/0
	load8! &1 	#AR	# 120	[c=4]movdi_from_tr_unspec/1
	add! 16	
	store8	
	#	
.L1.l_o072f5a:
	load8! &0 	#AR	# 127	[c=4]movdi_push_pop
	store8! &6
	jump! .L13.l_o072f5a		# 192	[c=4]jump
.L12.l_o072f5a:
	push! 65		# 14	[c=4]pushdi1_not_fp/0
	push! 8		# 15	[c=4]pushdi1_not_fp/0
	load8! &4 	#X2	# 16	[c=4]pushdi1_not_fp/1
	call! _calloc_r		# 17	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	load8! &0 	#AR	# 19	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 21	[c=4]movdi_from_tr_unspec/1
	add! 120	
	store8	
	#	
	# CBRANCH EQ0	# 23	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_not_zero! .L2.l_o072f5a
	# END CBRANCH
.L6.l_o072f5a:
	push! 0		# 5	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 182	[c=4]movdi_push_pop
	store8! &6
	jump! .L13.l_o072f5a		# 194	[c=4]jump
.L4.l_o072f5a:
	load4! &6	# 62	[c=5]movsi_to_tr_unspec/1
	sigx4		# 64	[c=6]*extendsidi2
	store8! &1 	#AR	# 65	[c=4]movdi_from_tr_unspec/0
	push! 1		# 67	[c=3]movdi_to_tr_unspec/0
	load8! &1 	#AR	# 69	[c=10]*ashldi3/2
	shift_l
	store8! &4 	#X3	# 173	[c=4]movsi_from_tr_unspec/0
	load8! &3 	#X3	# 76	[c=5]movdi_to_tr_unspec/1
	add! -1		# 78	[c=4]*adddi/0
	sigx4		# 177	[c=6]*extendsidi2
	add! 8		# 158	[c=4]*adddi/0
	shift_l! 2	# 159	[c=8]*ashldi3/0
	#peep - pop(deadreg)+pusharg	# 162	[c=0]*peep2_pop_pusharg
	push! 1		# 101	[c=4]pushdi1_not_fp/0
	load8! &4 	#X2	# 102	[c=4]pushdi1_not_fp/1
	call! _calloc_r		# 103	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	# CBRANCH EQ0	# 106	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L6.l_o072f5a
	# END CBRANCH
	load4! &6	# 108	[c=5]movsi_to_tr_unspec/1
	load8! &1 	#AR	# 110	[c=4]movsi_from_tr_unspec/1
	add! 8	
	store4	
	#	
	load4! &3 	#X3	# 112	[c=5]movsi_to_tr_unspec/1
	load8! &1 	#AR	# 114	[c=4]movsi_from_tr_unspec/1
	add! 12	
	store4	
	#	
	push! 0		# 185	[c=3]movdi_to_tr_unspec/0
	load8! &1 	#AR	# 187	[c=4]movdi_from_tr_unspec/1
	add! 16	
	store8	
	#	
	jump! .L1.l_o072f5a		# 196	[c=4]jump
.L13.l_o072f5a:

	# epilogue
	set_sp! &4
	return

# FUNCTION ENDS:_Balloc

	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole redundant blockage insn
	#peephole redundant blockage insn

# FUNCTION BEGINS:_Bfree
	EXPORT	_Bfree
_Bfree:
	# prologue (3 GPRs)
	push! 0
	push! 0
	push! 0

	load8! &5	# 3	[c=2]movdi_push_pop
	store8! &1 	#AR
	# CBRANCH EQ0	# 7	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L14.l_o072f5a
	# END CBRANCH
	load8! &4	# 9	[c=11]movdi_to_tr_unspec/2
	add! 120	
	load8	
	#	
	store8! &3 	#X2	# 11	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 13	[c=6]movsi_to_tr_unspec/2
	add! 8	
	load4	
	#	
	sigx4		# 19	[c=6]*extendsidi2
	shift_l! 3	# 24	[c=8]*ashldi3/0
	load8! &3 	#X2	# 61	[c=6]*adddi/2
	add
	store8! &2 	#X1	# 62	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 32	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	load8! &1 	#AR	# 38	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load8! &0 	#AR	# 40	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 42	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
.L14.l_o072f5a:

	# epilogue
	set_sp! &3
	return

# FUNCTION ENDS:_Bfree

.LC0.l_o072f5a:
#	.string "Balloc succeeded"
	data1 [ 66 97 108 108 111 99 32 115 117 99 99 101 101 100 101 100 0 ]
.LC1.l_o072f5a:
#	.string "../../../../../newlib/libc/stdlib/mprec.c"
	data1 [ 46 46 47 46 46 47 46 46 47 46 46 47 46 46 47 110 101 119 108 105 98 47 108 105 98 99 47 115 116 100 108 105 98 47 109 112 114 101 99 46 99 0 ]
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole unary1+binop2+deadreg+binop3
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole nop+pusharg
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole move_dead
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole 1
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+commut(di)
	#peephole pop+block+push+commut(di)
	#peephole pop+block+push+commut(di)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole redundant blockage insn
	#peephole popdi(deadreg)+push
	#peephole and+popsi

# FUNCTION BEGINS:__multadd
	EXPORT	__multadd
__multadd:
	# prologue (10 GPRs)

	set_sp! &-10

	load8! &12	# 3	[c=2]movdi_push_pop
	store8! &9 	#X8
	load4! &13	# 4	[c=2]movsi_push_pop
	store8! &6 	#X5
	load4! &14	# 5	[c=2]movsi_push_pop
	store8! &5 	#X4
	load8! &8 	#X8	# 14	[c=6]movsi_to_tr_unspec/2
	add! 20	
	load4	
	#	
	store8! &8 	#X7	# 16	[c=4]movsi_from_tr_unspec/0
	load8! &8 	#X8	# 19	[c=5]movdi_to_tr_unspec/1
	add! 24		# 21	[c=4]*adddi/0
	store8! &1 	#AR	# 22	[c=4]movdi_from_tr_unspec/0
	push! 0		# 7	[c=4]movsi_push_pop
	store8! &2 	#X1
.L22.l_o072f5a:
	load8! &0 	#AR	# 27	[c=7]movsi_to_tr_unspec/2
	load4	
	#	
	store8! &4 	#X3	# 29	[c=4]movsi_from_tr_unspec/0
	load8! &3 	#X3	# 31	[c=5]movdi_to_tr_unspec/1
	and! 0xffff		# 33	[c=4]*anddi3/0
	load8! &6 	#X5	# 464	[c=6]*muldi3/2
	mult
	load8! &5 	#X4	# 467	[c=6]*adddi/2
	add
	store8! &3 	#X2	# 468	[c=4]movdi_from_tr_unspec/0
	load4! &3 	#X3	# 440	[c=5]movsi_to_tr_unspec/1
	shift_ru! 16	# 399	[c=40]*lshrdi3/0
	load8! &6 	#X5	# 470	[c=6]*muldi3/2
	mult
	store8! &4 	#X3	# 471	[c=4]movdi_from_tr_unspec/0
	load4! &2 	#X2	# 444	[c=5]movsi_to_tr_unspec/1
	shift_ru! 16	# 409	[c=40]*lshrdi3/0
	load8! &4 	#X3	# 114	[c=6]*adddi/2
	add
	store8! &4 	#X3	# 447	[c=4]movdi_from_tr_unspec/0
	load4! &3 	#X3	# 448	[c=5]movsi_to_tr_unspec/1
	shift_ru! 16	# 419	[c=40]*lshrdi3/0
	store8! &7 	#X6	# 451	[c=4]movsi_from_tr_unspec/0
	load4! &6 	#X6	# 135	[c=4]movsi_push_pop
	store8! &5 	#X4
	load8! &3 	#X3	# 136	[c=5]movdi_to_tr_unspec/1
	shift_l! 16	# 138	[c=8]*ashldi3/0
	store8! &10 	#X9	# 453	[c=4]movsi_from_tr_unspec/0
	load8! &2 	#X2	# 145	[c=5]movdi_to_tr_unspec/1
	and! 0xffff		# 147	[c=4]*anddi3/0
	load8! &10 	#X9	# 427	[c=6]*adddi/2
	add
	load8! &1 	#AR	# 479	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	load8! &1 	#X1	# 171	[c=5]movdi_to_tr_unspec/1
	add! 1		# 173	[c=4]*adddi/0
	store8! &2 	#X1	# 460	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 461	[c=5]movdi_to_tr_unspec/1
	add! 4		# 187	[c=4]*adddi/0
	store8! &1 	#AR	# 188	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 192	[c=12]cbranchsi4_internal
	load4! &1 	#X1
	add! -2147483648	
	load4! &8 	#X7
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L22.l_o072f5a
	# END CBRANCH
	# CBRANCH EQ0	# 194	[c=12]cbranchsi4_internal
	load4! &6 	#X6
	jump_zero! .L21.l_o072f5a
	# END CBRANCH
	load8! &8 	#X8	# 196	[c=6]movsi_to_tr_unspec/2
	add! 12	
	load4	
	#	
	store8! &1 	#AR	# 198	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 200	[c=12]cbranchsi4_internal
	load4! &7 	#X7
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	jump_zero! .L32.l_o072f5a
	# END CBRANCH
	load8! &7 	#X7	# 300	[c=5]movdi_to_tr_unspec/1
	add! 1		# 302	[c=4]*adddi/0
	store8! &1 	#AR	# 430	[c=4]movdi_from_tr_unspec/0
	load4! &7 	#X7	# 431	[c=5]movsi_to_tr_unspec/1
	sigx4		# 370	[c=6]*extendsidi2
	add! 6		# 371	[c=4]*adddi/0
	shift_l! 2	# 372	[c=8]*ashldi3/0
	load8! &9 	#X8	# 375	[c=6]*adddi/2
	add
	store8! &2 	#X1	# 376	[c=4]movdi_from_tr_unspec/0
	load4! &6 	#X6	# 329	[c=5]movsi_to_tr_unspec/1
	load8! &2 	#X1	# 331	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	load4! &0 	#AR	# 333	[c=5]movsi_to_tr_unspec/1
	load8! &9 	#X8	# 335	[c=4]movsi_from_tr_unspec/1
	add! 20	
	store4	
	#	
	jump! .L21.l_o072f5a		# 523	[c=4]jump
.L32.l_o072f5a:
	load8! &8 	#X8	# 202	[c=6]movsi_to_tr_unspec/2
	add! 8	
	load4	
	#	
	add! 1		# 208	[c=4]*adddi/0
	store8! &1 	#AR	# 209	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 388	[c=4]pushsi1_not_fp/1
	load8! &12	# 216	[c=2]pushdi1_not_fp/1
	call! _Balloc		# 217	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load8! &0 	#AR	# 218	[c=4]movdi_push_pop
	store8! &3 	#X2
	# CBRANCH EQ0	# 219	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L33.l_o072f5a
	# END CBRANCH
.L25.l_o072f5a:
	load8! &8 	#X8	# 228	[c=6]movsi_to_tr_unspec/2
	add! 20	
	load4	
	#	
	sigx4		# 234	[c=6]*extendsidi2
	add! 2		# 239	[c=4]*adddi/0
	shift_l! 2	# 244	[c=8]*ashldi3/0
	store8! &4 	#X3	# 245	[c=4]movdi_from_tr_unspec/0
	load8! &8 	#X8	# 247	[c=5]movdi_to_tr_unspec/1
	add! 16		# 249	[c=4]*adddi/0
	store8! &2 	#X1	# 250	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 252	[c=5]movdi_to_tr_unspec/1
	add! 16		# 254	[c=4]*adddi/0
	store8! &1 	#AR	# 255	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 257	[c=4]pushdi1_not_fp/1
	load8! &2 	#X1	# 258	[c=4]pushdi1_not_fp/1
	load8! &2 	#AR	# 259	[c=4]pushdi1_not_fp/1
	call! memcpy		# 260	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	# CBRANCH EQ0	# 261	[c=12]cbranchdi4_internal
	load8! &8 	#X8
	jump_zero! .L27.l_o072f5a
	# END CBRANCH
	load8! &11	# 263	[c=11]movdi_to_tr_unspec/2
	add! 120	
	load8	
	#	
	store8! &2 	#X1	# 265	[c=4]movdi_from_tr_unspec/0
	load8! &8 	#X8	# 267	[c=6]movsi_to_tr_unspec/2
	add! 8	
	load4	
	#	
	sigx4		# 273	[c=6]*extendsidi2
	shift_l! 3	# 278	[c=8]*ashldi3/0
	load8! &2 	#X1	# 380	[c=6]*adddi/2
	add
	store8! &1 	#AR	# 381	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 286	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	load8! &9 	#X8	# 292	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load8! &8 	#X8	# 294	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 296	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load8! &2 	#X2	# 8	[c=4]movdi_push_pop
	store8! &9 	#X8
	load8! &7 	#X7	# 483	[c=5]movdi_to_tr_unspec/1
	add! 1		# 485	[c=4]*adddi/0
	store8! &1 	#AR	# 486	[c=4]movdi_from_tr_unspec/0
	load4! &7 	#X7	# 487	[c=5]movsi_to_tr_unspec/1
	sigx4		# 489	[c=6]*extendsidi2
	add! 6		# 490	[c=4]*adddi/0
	shift_l! 2	# 491	[c=8]*ashldi3/0
	load8! &9 	#X8	# 493	[c=6]*adddi/2
	add
	store8! &2 	#X1	# 494	[c=4]movdi_from_tr_unspec/0
	load4! &6 	#X6	# 495	[c=5]movsi_to_tr_unspec/1
	load8! &2 	#X1	# 497	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	load4! &0 	#AR	# 498	[c=5]movsi_to_tr_unspec/1
	load8! &9 	#X8	# 500	[c=4]movsi_from_tr_unspec/1
	add! 20	
	store4	
	#	
	jump! .L21.l_o072f5a		# 526	[c=4]jump
.L33.l_o072f5a:
	push! .LC0.l_o072f5a		# 221	[c=4]pushdi1_not_fp/0
	push! 0		# 222	[c=4]pushdi1_not_fp/0
	push! 181		# 223	[c=4]pushsi1_not_fp/0
	push! .LC1.l_o072f5a		# 224	[c=4]pushdi1_not_fp/0
	call! __assert_func		# 225	[c=5]*call_pop_0/0
	set_sp! (+ &0 32)
	

	jump! .L25.l_o072f5a		# 528	[c=4]jump
.L27.l_o072f5a:
	load8! &2 	#X2	# 9	[c=4]movdi_push_pop
	store8! &9 	#X8
	load8! &7 	#X7	# 503	[c=5]movdi_to_tr_unspec/1
	add! 1		# 505	[c=4]*adddi/0
	store8! &1 	#AR	# 506	[c=4]movdi_from_tr_unspec/0
	load4! &7 	#X7	# 507	[c=5]movsi_to_tr_unspec/1
	sigx4		# 509	[c=6]*extendsidi2
	add! 6		# 510	[c=4]*adddi/0
	shift_l! 2	# 511	[c=8]*ashldi3/0
	load8! &9 	#X8	# 513	[c=6]*adddi/2
	add
	store8! &2 	#X1	# 514	[c=4]movdi_from_tr_unspec/0
	load4! &6 	#X6	# 515	[c=5]movsi_to_tr_unspec/1
	load8! &2 	#X1	# 517	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	load4! &0 	#AR	# 518	[c=5]movsi_to_tr_unspec/1
	load8! &9 	#X8	# 520	[c=4]movsi_from_tr_unspec/1
	add! 20	
	store4	
	#	
.L21.l_o072f5a:
	load8! &8 	#X8	# 342	[c=4]movdi_push_pop
	store8! &12

	# epilogue
	set_sp! &10
	return

# FUNCTION ENDS:__multadd

	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole nop+pusharg
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+sub
	#peephole 1
	#peephole zero_extend
	#peephole binop1+deadreg+binop2
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole nop+pusharg
	#peephole 1
	#peephole zero_extend
	#peephole binop1+deadreg+binop2
	#peephole move
	#peephole move+binop
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole move_dead
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole pop+block+push+block
	#peephole pop+push(deadreg)+sign_extend
	#peephole pop+move(deadreg)
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push

# FUNCTION BEGINS:__s2b
	EXPORT	__s2b
__s2b:
	# prologue (9 GPRs)

	set_sp! &-10

	load8! &11	# 2	[c=2]movdi_push_pop
	store8! &4 	#X3
	load4! &13	# 4	[c=2]movsi_push_pop
	store8! &6 	#X5
	load4! &14	# 5	[c=2]movsi_push_pop
	store8! &7 	#X6
	load8! &6 	#X6	# 14	[c=5]movdi_to_tr_unspec/1
	add! 8		# 16	[c=4]*adddi/0
	sigx4		# 376	[c=6]*extendsidi2
	div_s! 9	# 347	[c=4]*divdi3/0
	store8! &5 	#X4	# 378	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 37	[c=12]cbranchsi4_internal
	push! 9	
	add! -2147483648	
	load4! &7 	#X6
	add! -2147483648	
	lt_u	
	jump_zero! .L43.l_o072f5a
	# END CBRANCH
	push! 1		# 8	[c=4]movsi_push_pop
	store8! &1 	#AR
	push! 0		# 9	[c=4]movsi_push_pop
	store8! &2 	#X1
.L36.l_o072f5a:
	load8! &0 	#AR	# 337	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 339	[c=6]*adddi/2
	add
	store8! &1 	#AR	# 368	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 369	[c=5]movdi_to_tr_unspec/1
	add! 1		# 54	[c=4]*adddi/0
	store8! &2 	#X1	# 371	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 372	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	add! -2147483648	
	load4! &5 	#X4
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L36.l_o072f5a
	# END CBRANCH
	load4! &1 	#X1	# 65	[c=4]pushsi1_not_fp/1
	load8! &4 	#X3	# 66	[c=4]pushdi1_not_fp/1
	call! _Balloc		# 67	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH EQ0	# 69	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L49.l_o072f5a
	# END CBRANCH
.L37.l_o072f5a:
	load4! &15	# 78	[c=5]movsi_to_tr_unspec/1
	load8! &1 	#AR	# 80	[c=4]movsi_from_tr_unspec/1
	add! 24	
	store4	
	#	
	push! 1		# 82	[c=3]movsi_to_tr_unspec/0
	load8! &1 	#AR	# 84	[c=4]movsi_from_tr_unspec/1
	add! 20	
	store4	
	#	
	# CBRANCH	# 86	[c=12]cbranchsi4_internal
	push! 9	
	add! -2147483648	
	load4! &6 	#X5
	add! -2147483648	
	lt_u	
	jump_zero! .L38.l_o072f5a
	# END CBRANCH
	load8! &12	# 88	[c=5]movdi_to_tr_unspec/1
	add! 9		# 90	[c=4]*adddi/0
	store8! &8 	#X7	# 91	[c=4]movdi_from_tr_unspec/0
	load8! &7 	#X7	# 93	[c=4]movdi_push_pop
	store8! &3 	#X2
	load8! &5 	#X5	# 95	[c=5]movdi_to_tr_unspec/1
	add! -10		# 97	[c=4]*adddi/0
	and! 0xffffffff		# 381	[c=4]*anddi3/0
	store8! &9 	#X8	# 330	[c=4]movdi_from_tr_unspec/0
	load8! &12	# 331	[c=5]movdi_to_tr_unspec/1
	add! 10		# 333	[c=4]*adddi/0
	load8! &9 	#X8	# 334	[c=6]*adddi/2
	add
	store8! &5 	#X4	# 335	[c=4]movdi_from_tr_unspec/0
.L39.l_o072f5a:
	load8! &2 	#X2	# 122	[c=7]movqi_to_tr_unspec/2
	load1	
	#	
	sigx1		# 128	[c=6]*extendqidi2
	add! -48		# 137	[c=4]*adddi/0
	store8! &2 	#X1	# 138	[c=4]movdi_from_tr_unspec/0
	load4! &1 	#X1	# 326	[c=4]pushsi1_not_fp/1
	push! 10		# 145	[c=4]pushsi1_not_fp/0
	load8! &2 	#AR	# 146	[c=4]pushdi1_not_fp/1
	load8! &6 	#X3	# 147	[c=4]pushdi1_not_fp/1
	call! __multadd		# 148	[c=0]*call_value_pop_1/0
	store8! &4

	set_sp! &3
	load8! &2 	#X2	# 155	[c=5]movdi_to_tr_unspec/1
	add! 1		# 157	[c=4]*adddi/0
	store8! &3 	#X2	# 158	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 162	[c=12]cbranchdi4_internal
	load8! &2 	#X2
	load8! &5 	#X4
	xor	
	push! 1	
	lt_u	
	jump_zero! .L39.l_o072f5a
	# END CBRANCH
	load8! &8 	#X8	# 164	[c=5]movdi_to_tr_unspec/1
	add! 2		# 166	[c=4]*adddi/0
	load8! &8 	#X7	# 321	[c=6]*adddi/2
	add
	store8! &3 	#X2	# 322	[c=4]movdi_from_tr_unspec/0
.L40.l_o072f5a:
	# CBRANCH	# 185	[c=12]cbranchsi4_internal
	load4! &5 	#X5
	add! -2147483648	
	load4! &7 	#X6
	add! -2147483648	
	lt_u	
	jump_zero! .L34.l_o072f5a
	# END CBRANCH
	load8! &6 	#X6	# 190	[c=5]movdi_to_tr_unspec/1
	add! -1		# 192	[c=4]*adddi/0
	store8! &5 	#X4	# 356	[c=4]movsi_from_tr_unspec/0
	load8! &5 	#X5	# 306	[c=5]movdi_to_tr_unspec/1
	load8! &5 	#X4	# 308	[c=14]*subdi3/2
	sub
	neg		# 309	[c=4]*neg_tr
	and! 0xffffffff		# 379	[c=4]*anddi3/0
	store8! &2 	#X1	# 314	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 315	[c=5]movdi_to_tr_unspec/1
	add! 1		# 317	[c=4]*adddi/0
	load8! &2 	#X1	# 318	[c=6]*adddi/2
	add
	store8! &5 	#X4	# 319	[c=4]movdi_from_tr_unspec/0
.L42.l_o072f5a:
	load8! &2 	#X2	# 229	[c=7]movqi_to_tr_unspec/2
	load1	
	#	
	sigx1		# 235	[c=6]*extendqidi2
	add! -48		# 244	[c=4]*adddi/0
	store8! &2 	#X1	# 245	[c=4]movdi_from_tr_unspec/0
	load4! &1 	#X1	# 303	[c=4]pushsi1_not_fp/1
	push! 10		# 252	[c=4]pushsi1_not_fp/0
	load8! &2 	#AR	# 253	[c=4]pushdi1_not_fp/1
	load8! &6 	#X3	# 254	[c=4]pushdi1_not_fp/1
	call! __multadd		# 255	[c=0]*call_value_pop_1/0
	store8! &4

	set_sp! &3
	load8! &2 	#X2	# 262	[c=5]movdi_to_tr_unspec/1
	add! 1		# 264	[c=4]*adddi/0
	store8! &3 	#X2	# 265	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 269	[c=12]cbranchdi4_internal
	load8! &2 	#X2
	load8! &5 	#X4
	xor	
	push! 1	
	lt_u	
	jump_zero! .L42.l_o072f5a
	# END CBRANCH
	jump! .L34.l_o072f5a		# 393	[c=4]jump
.L38.l_o072f5a:
	load8! &12	# 178	[c=5]movdi_to_tr_unspec/1
	add! 10		# 180	[c=4]*adddi/0
	store8! &3 	#X2	# 181	[c=4]movdi_from_tr_unspec/0
	push! 9		# 11	[c=4]movsi_push_pop
	store8! &6 	#X5
	jump! .L40.l_o072f5a		# 395	[c=4]jump
.L49.l_o072f5a:
	push! .LC0.l_o072f5a		# 71	[c=4]pushdi1_not_fp/0
	push! 0		# 72	[c=4]pushdi1_not_fp/0
	push! 206		# 73	[c=4]pushsi1_not_fp/0
	push! .LC1.l_o072f5a		# 74	[c=4]pushdi1_not_fp/0
	load8! &4 	#AR	# 295	[c=4]movdi_push_pop
	store8! &14
	call! __assert_func		# 75	[c=5]*call_pop_0/0
	set_sp! (+ &0 32)
	

	load8! &9	# 296	[c=2]movdi_push_pop
	store8! &1 	#AR
	jump! .L37.l_o072f5a		# 397	[c=4]jump
.L43.l_o072f5a:
	push! 0		# 10	[c=4]movsi_push_pop
	store8! &2 	#X1
	load4! &1 	#X1	# 386	[c=4]pushsi1_not_fp/1
	load8! &4 	#X3	# 387	[c=4]pushdi1_not_fp/1
	call! _Balloc		# 388	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH EQ0	# 389	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_not_zero! .L37.l_o072f5a
	# END CBRANCH
	jump! .L49.l_o072f5a		# 400	[c=4]jump
.L34.l_o072f5a:
	load8! &0 	#AR	# 275	[c=4]movdi_push_pop
	store8! &12

	# epilogue
	set_sp! &10
	return

# FUNCTION ENDS:__s2b

	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole nop+set
	#peephole 1
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+cmp
	#peephole popdi+cmp

# FUNCTION BEGINS:__hi0bits
	EXPORT	__hi0bits
__hi0bits:
	# prologue (3 GPRs)
	push! 0
	push! 0
	push! 0

	load4! &4	# 2	[c=2]movsi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 9	[c=5]movdi_to_tr_unspec/1
	and! 0xffffffffffff0000		# 11	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 204	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L56.l_o072f5a
	# END CBRANCH
	load8! &0 	#AR	# 20	[c=5]movdi_to_tr_unspec/1
	shift_l! 16	# 22	[c=8]*ashldi3/0
	store8! &1 	#AR	# 23	[c=4]movdi_from_tr_unspec/0
	push! 16		# 176	[c=4]movsi_push_pop
	store8! &2 	#X1
.L51.l_o072f5a:
	load8! &0 	#AR	# 31	[c=5]movdi_to_tr_unspec/1
	and! 0xffffffffff000000		# 33	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 201	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L52.l_o072f5a
	# END CBRANCH
	load8! &1 	#X1	# 42	[c=5]movdi_to_tr_unspec/1
	add! 8		# 44	[c=4]*adddi/0
	store8! &2 	#X1	# 196	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 197	[c=5]movdi_to_tr_unspec/1
	shift_l! 8	# 53	[c=8]*ashldi3/0
	store8! &1 	#AR	# 54	[c=4]movdi_from_tr_unspec/0
.L52.l_o072f5a:
	load8! &0 	#AR	# 62	[c=5]movdi_to_tr_unspec/1
	and! 0xfffffffff0000000		# 64	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 195	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L53.l_o072f5a
	# END CBRANCH
	load8! &1 	#X1	# 73	[c=5]movdi_to_tr_unspec/1
	add! 4		# 75	[c=4]*adddi/0
	store8! &2 	#X1	# 190	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 191	[c=5]movdi_to_tr_unspec/1
	shift_l! 4	# 84	[c=8]*ashldi3/0
	store8! &1 	#AR	# 85	[c=4]movdi_from_tr_unspec/0
.L53.l_o072f5a:
	load8! &0 	#AR	# 93	[c=5]movdi_to_tr_unspec/1
	and! 0xffffffffc0000000		# 95	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 189	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L54.l_o072f5a
	# END CBRANCH
	load8! &1 	#X1	# 104	[c=5]movdi_to_tr_unspec/1
	add! 2		# 106	[c=4]*adddi/0
	store8! &2 	#X1	# 184	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 185	[c=5]movdi_to_tr_unspec/1
	shift_l! 2	# 115	[c=8]*ashldi3/0
	store8! &1 	#AR	# 116	[c=4]movdi_from_tr_unspec/0
.L54.l_o072f5a:
	# CBRANCH	# 125	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	add! -2147483648	
	push! 0	
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L50.l_o072f5a
	# END CBRANCH
	load8! &1 	#X1	# 127	[c=5]movdi_to_tr_unspec/1
	add! 1		# 129	[c=4]*adddi/0
	store8! &2 	#X1	# 178	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 179	[c=5]movdi_to_tr_unspec/1
	and! 0x40000000		# 138	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 183	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L59.l_o072f5a
	# END CBRANCH
.L50.l_o072f5a:
	load4! &1 	#X1	# 152	[c=4]movsi_push_pop
	store4! &5
	jump! .L60.l_o072f5a		# 213	[c=4]jump
.L56.l_o072f5a:
	push! 0		# 5	[c=4]movsi_push_pop
	store8! &2 	#X1
	jump! .L51.l_o072f5a		# 215	[c=4]jump
.L59.l_o072f5a:
	push! 32		# 6	[c=4]movsi_push_pop
	store8! &2 	#X1
	load4! &1 	#X1	# 208	[c=4]movsi_push_pop
	store4! &5
.L60.l_o072f5a:

	# epilogue
	set_sp! &3
	return

# FUNCTION ENDS:__hi0bits

	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole nop+set
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole and+popsi

# FUNCTION BEGINS:__lo0bits
	EXPORT	__lo0bits
__lo0bits:
	# prologue (4 GPRs)
	push! 0
	push! 0
	push! 0
	push! 0

	load8! &5	# 2	[c=2]movdi_push_pop
	store8! &3 	#X2
	load8! &2 	#X2	# 12	[c=7]movsi_to_tr_unspec/2
	load4	
	#	
	store8! &1 	#AR	# 14	[c=4]movsi_from_tr_unspec/0
	load8! &0 	#AR	# 16	[c=5]movdi_to_tr_unspec/1
	and! 0x7		# 18	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 414	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L62.l_o072f5a
	# END CBRANCH
	load8! &0 	#AR	# 27	[c=5]movdi_to_tr_unspec/1
	and! 0x1		# 29	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 411	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L70.l_o072f5a
	# END CBRANCH
	load8! &0 	#AR	# 38	[c=5]movdi_to_tr_unspec/1
	and! 0x2		# 40	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 408	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L64.l_o072f5a
	# END CBRANCH
	load4! &0 	#AR	# 363	[c=5]movsi_to_tr_unspec/1
	shift_ru! 1	# 365	[c=40]*lshrdi3/0
	load8! &3 	#X2	# 420	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	push! 1		# 6	[c=4]movsi_push_pop
	store8! &2 	#X1
	load4! &1 	#X1	# 274	[c=4]movsi_push_pop
	store4! &6
	jump! .L75.l_o072f5a		# 437	[c=4]jump
.L62.l_o072f5a:
	load8! &0 	#AR	# 93	[c=5]movdi_to_tr_unspec/1
	and! 0xffff		# 95	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 399	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L71.l_o072f5a
	# END CBRANCH
	load4! &0 	#AR	# 345	[c=5]movsi_to_tr_unspec/1
	shift_ru! 16	# 347	[c=40]*lshrdi3/0
	store8! &1 	#AR	# 348	[c=4]movdi_from_tr_unspec/0
	push! 16		# 350	[c=4]movsi_push_pop
	store8! &2 	#X1
.L65.l_o072f5a:
	load8! &0 	#AR	# 120	[c=5]movdi_to_tr_unspec/1
	and! 0xff		# 122	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 396	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L66.l_o072f5a
	# END CBRANCH
	load8! &1 	#X1	# 131	[c=5]movdi_to_tr_unspec/1
	add! 8		# 133	[c=4]*adddi/0
	store8! &2 	#X1	# 391	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 392	[c=5]movsi_to_tr_unspec/1
	shift_ru! 8	# 338	[c=40]*lshrdi3/0
	store8! &1 	#AR	# 339	[c=4]movdi_from_tr_unspec/0
.L66.l_o072f5a:
	load8! &0 	#AR	# 156	[c=5]movdi_to_tr_unspec/1
	and! 0xf		# 158	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 390	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L67.l_o072f5a
	# END CBRANCH
	load8! &1 	#X1	# 167	[c=5]movdi_to_tr_unspec/1
	add! 4		# 169	[c=4]*adddi/0
	store8! &2 	#X1	# 385	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 386	[c=5]movsi_to_tr_unspec/1
	shift_ru! 4	# 328	[c=40]*lshrdi3/0
	store8! &1 	#AR	# 329	[c=4]movdi_from_tr_unspec/0
.L67.l_o072f5a:
	load8! &0 	#AR	# 192	[c=5]movdi_to_tr_unspec/1
	and! 0x3		# 194	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 384	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L68.l_o072f5a
	# END CBRANCH
	load8! &1 	#X1	# 203	[c=5]movdi_to_tr_unspec/1
	add! 2		# 205	[c=4]*adddi/0
	store8! &2 	#X1	# 379	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 380	[c=5]movsi_to_tr_unspec/1
	shift_ru! 2	# 318	[c=40]*lshrdi3/0
	store8! &1 	#AR	# 319	[c=4]movdi_from_tr_unspec/0
.L68.l_o072f5a:
	load8! &0 	#AR	# 228	[c=5]movdi_to_tr_unspec/1
	and! 0x1		# 230	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 378	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L69.l_o072f5a
	# END CBRANCH
	load8! &1 	#X1	# 239	[c=5]movdi_to_tr_unspec/1
	add! 1		# 241	[c=4]*adddi/0
	store8! &2 	#X1	# 371	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 372	[c=5]movsi_to_tr_unspec/1
	shift_ru! 1	# 308	[c=40]*lshrdi3/0
	store8! &1 	#AR	# 374	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 375	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_zero! .L72.l_o072f5a
	# END CBRANCH
.L69.l_o072f5a:
	load4! &0 	#AR	# 265	[c=5]movsi_to_tr_unspec/1
	load8! &3 	#X2	# 267	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	load4! &1 	#X1	# 424	[c=4]movsi_push_pop
	store4! &6
	jump! .L75.l_o072f5a		# 439	[c=4]jump
.L71.l_o072f5a:
	push! 0		# 5	[c=4]movsi_push_pop
	store8! &2 	#X1
	jump! .L65.l_o072f5a		# 441	[c=4]jump
.L70.l_o072f5a:
	push! 0		# 8	[c=4]movsi_push_pop
	store8! &2 	#X1
	load4! &1 	#X1	# 427	[c=4]movsi_push_pop
	store4! &6
	jump! .L75.l_o072f5a		# 443	[c=4]jump
.L72.l_o072f5a:
	push! 32		# 9	[c=4]movsi_push_pop
	store8! &2 	#X1
	load4! &1 	#X1	# 430	[c=4]movsi_push_pop
	store4! &6
	jump! .L75.l_o072f5a		# 445	[c=4]jump
.L64.l_o072f5a:
	load4! &0 	#AR	# 355	[c=5]movsi_to_tr_unspec/1
	shift_ru! 2	# 357	[c=40]*lshrdi3/0
	load8! &3 	#X2	# 417	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	push! 2		# 7	[c=4]movsi_push_pop
	store8! &2 	#X1
	load4! &1 	#X1	# 433	[c=4]movsi_push_pop
	store4! &6
.L75.l_o072f5a:

	# epilogue
	set_sp! &4
	return

# FUNCTION ENDS:__lo0bits


# FUNCTION BEGINS:__i2b
	EXPORT	__i2b
__i2b:
	# prologue (1 GPRs)
	push! 0
	push! 0

	push! 1		# 7	[c=4]pushsi1_not_fp/0
	load8! &4	# 8	[c=2]pushdi1_not_fp/1
	call! _Balloc		# 9	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH EQ0	# 11	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L80.l_o072f5a
	# END CBRANCH
	load4! &4	# 21	[c=5]movsi_to_tr_unspec/1
	load8! &1 	#AR	# 23	[c=4]movsi_from_tr_unspec/1
	add! 24	
	store4	
	#	
	push! 1		# 25	[c=3]movsi_to_tr_unspec/0
	load8! &1 	#AR	# 27	[c=4]movsi_from_tr_unspec/1
	add! 20	
	store4	
	#	
	load8! &0 	#AR	# 32	[c=4]movdi_push_pop
	store8! &4
	jump! .L81.l_o072f5a		# 54	[c=4]jump
.L80.l_o072f5a:
	push! .LC0.l_o072f5a		# 13	[c=4]pushdi1_not_fp/0
	push! 0		# 14	[c=4]pushdi1_not_fp/0
	push! 320		# 15	[c=4]pushsi1_not_fp/0
	push! .LC1.l_o072f5a		# 16	[c=4]pushdi1_not_fp/0
	load8! &4 	#AR	# 35	[c=4]movdi_push_pop
	store8! &6
	call! __assert_func		# 17	[c=5]*call_pop_0/0
	set_sp! (+ &0 32)
	

	load8! &1	# 36	[c=2]movdi_push_pop
	store8! &1 	#AR
	load4! &4	# 43	[c=5]movsi_to_tr_unspec/1
	load8! &1 	#AR	# 45	[c=4]movsi_from_tr_unspec/1
	add! 24	
	store4	
	#	
	push! 1		# 46	[c=3]movsi_to_tr_unspec/0
	load8! &1 	#AR	# 48	[c=4]movsi_from_tr_unspec/1
	add! 20	
	store4	
	#	
	load8! &0 	#AR	# 49	[c=4]movdi_push_pop
	store8! &4
.L81.l_o072f5a:

	# epilogue
	set_sp! &2
	return

# FUNCTION ENDS:__i2b

	#peephole pop+cmp
	#peephole move_dead
	#peephole pop(deadreg)+ind push
	#peephole pop+cmp
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole move_dead
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole 1
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole pop+cmp
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+commut(di)
	#peephole pop+block+push+commut(di)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+commut(di)
	#peephole pop+block+push+commut(di)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+commut(di)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+commut(di)
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole and+popsi

# FUNCTION BEGINS:__multiply
	EXPORT	__multiply
__multiply:
	# prologue (16 GPRs)

	set_sp! &-18

	load8! &20	# 3	[c=2]movdi_push_pop
	store8! &5 	#X4
	load8! &21	# 4	[c=2]movdi_push_pop
	store8! &16 	#X15
	load8! &4 	#X4	# 21	[c=6]movsi_to_tr_unspec/2
	add! 20	
	load4	
	#	
	store8! &3 	#X2	# 23	[c=4]movsi_from_tr_unspec/0
	load8! &15 	#X15	# 25	[c=6]movsi_to_tr_unspec/2
	add! 20	
	load4	
	#	
	store8! &4 	#X3	# 27	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 29	[c=12]cbranchsi4_internal
	load4! &2 	#X2
	add! -2147483648	
	load4! &4 	#X3
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L83.l_o072f5a
	# END CBRANCH
	load4! &3 	#X3	# 6	[c=4]movsi_push_pop
	store8! &1 	#AR
	load4! &2 	#X2	# 7	[c=4]movsi_push_pop
	store8! &4 	#X3
	load4! &0 	#AR	# 8	[c=4]movsi_push_pop
	store8! &3 	#X2
	load8! &15 	#X15	# 9	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &4 	#X4	# 10	[c=4]movdi_push_pop
	store8! &16 	#X15
	load8! &0 	#AR	# 11	[c=4]movdi_push_pop
	store8! &5 	#X4
.L83.l_o072f5a:
	load8! &15 	#X15	# 33	[c=6]movsi_to_tr_unspec/2
	add! 8	
	load4	
	#	
	store8! &1 	#AR	# 35	[c=4]movsi_from_tr_unspec/0
	load8! &2 	#X2	# 1047	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 1049	[c=6]*adddi/2
	add
	store8! &13 	#X12	# 1121	[c=4]movsi_from_tr_unspec/0
	load8! &15 	#X15	# 50	[c=6]movsi_to_tr_unspec/2
	add! 12	
	load4	
	#	
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 1051	[c=12]*peep2_cbranchsi
	add! -2147483648	
	load4! &13 	#X12
	add! -2147483648	
	lt_u	
	jump_zero! .L84.l_o072f5a
	# END CBRANCH
	load8! &0 	#AR	# 56	[c=5]movdi_to_tr_unspec/1
	add! 1		# 58	[c=4]*adddi/0
	store8! &1 	#AR	# 59	[c=4]movdi_from_tr_unspec/0
.L84.l_o072f5a:
	load4! &0 	#AR	# 67	[c=4]pushsi1_not_fp/1
	load8! &20	# 68	[c=2]pushdi1_not_fp/1
	call! _Balloc		# 69	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH EQ0	# 71	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L120.l_o072f5a
	# END CBRANCH
	load8! &0 	#AR	# 80	[c=5]movdi_to_tr_unspec/1
	add! 24		# 82	[c=4]*adddi/0
	store8! &9 	#X8	# 83	[c=4]movdi_from_tr_unspec/0
	load4! &12 	#X12	# 1037	[c=5]movsi_to_tr_unspec/1
	sigx4		# 1039	[c=6]*extendsidi2
	shift_l! 2	# 1040	[c=8]*ashldi3/0
	load8! &9 	#X8	# 1043	[c=6]*adddi/2
	add
	store8! &14 	#X13	# 1044	[c=4]movdi_from_tr_unspec/0
	load8! &8 	#X8	# 12	[c=4]movdi_push_pop
	store8! &2 	#X1
	# CBRANCH	# 100	[c=12]cbranchdi4_internal
	load8! &8 	#X8
	load8! &14 	#X13
	lt_u	
	jump_zero! .L89.l_o072f5a
	# END CBRANCH
.L86.l_o072f5a:
	push! 0		# 148	[c=3]movsi_to_tr_unspec/0
	load8! &2 	#X1	# 150	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	load8! &1 	#X1	# 157	[c=5]movdi_to_tr_unspec/1
	add! 4		# 159	[c=4]*adddi/0
	store8! &2 	#X1	# 160	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 163	[c=12]cbranchdi4_internal
	load8! &1 	#X1
	load8! &14 	#X13
	lt_u	
	not	
	jump_zero! .L86.l_o072f5a
	# END CBRANCH
.L89.l_o072f5a:
	load8! &15 	#X15	# 102	[c=5]movdi_to_tr_unspec/1
	add! 24		# 104	[c=4]*adddi/0
	store8! &18	# 105	[c=4]movdi_from_tr_unspec/0
	load4! &3 	#X3	# 1021	[c=5]movsi_to_tr_unspec/1
	sigx4		# 1023	[c=6]*extendsidi2
	shift_l! 2	# 1024	[c=8]*ashldi3/0
	load8! &18	# 1027	[c=6]*adddi/1
	add
	store8! &10 	#X9	# 1028	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 122	[c=5]movdi_to_tr_unspec/1
	add! 24		# 124	[c=4]*adddi/0
	store8! &7 	#X6	# 125	[c=4]movdi_from_tr_unspec/0
	load4! &2 	#X2	# 1029	[c=5]movsi_to_tr_unspec/1
	sigx4		# 1031	[c=6]*extendsidi2
	shift_l! 2	# 1032	[c=8]*ashldi3/0
	load8! &7 	#X6	# 1035	[c=6]*adddi/2
	add
	store8! &15 	#X14	# 1036	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 142	[c=12]cbranchdi4_internal
	load8! &6 	#X6
	load8! &15 	#X14
	lt_u	
	jump_zero! .L88.l_o072f5a
	# END CBRANCH
.L87.l_o072f5a:
	load8! &6 	#X6	# 176	[c=7]movsi_to_tr_unspec/2
	load4	
	#	
	store8! &2 	#X1	# 178	[c=4]movsi_from_tr_unspec/0
	load8! &1 	#X1	# 180	[c=5]movdi_to_tr_unspec/1
	and! 0xffff		# 182	[c=4]*anddi3/0
	store8! &6 	#X5	# 1119	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ0	# 189	[c=12]cbranchsi4_internal
	load4! &5 	#X5
	jump_not_zero! .L121.l_o072f5a
	# END CBRANCH
	load4! &1 	#X1	# 962	[c=5]movsi_to_tr_unspec/1
	shift_ru! 16	# 964	[c=40]*lshrdi3/0
	store8! &8 	#X7	# 1084	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ0	# 430	[c=12]cbranchsi4_internal
	load4! &7 	#X7
	jump_not_zero! .L122.l_o072f5a
	# END CBRANCH
.L94.l_o072f5a:
	load8! &6 	#X6	# 675	[c=5]movdi_to_tr_unspec/1
	add! 4		# 677	[c=4]*adddi/0
	store8! &7 	#X6	# 678	[c=4]movdi_from_tr_unspec/0
	load8! &8 	#X8	# 686	[c=5]movdi_to_tr_unspec/1
	add! 4		# 688	[c=4]*adddi/0
	store8! &9 	#X8	# 689	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 692	[c=12]cbranchdi4_internal
	load8! &6 	#X6
	load8! &15 	#X14
	lt_u	
	not	
	jump_zero! .L87.l_o072f5a
	# END CBRANCH
.L88.l_o072f5a:
	# CBRANCH	# 170	[c=12]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &13 	#X12
	add! -2147483648	
	lt_u	
	jump_zero! .L91.l_o072f5a
	# END CBRANCH
	load8! &13 	#X13	# 698	[c=5]movdi_to_tr_unspec/1
	add! -4		# 700	[c=4]*adddi/0
	store8! &2 	#X1	# 701	[c=4]movdi_from_tr_unspec/0
	load8! &13 	#X13	# 704	[c=5]movdi_to_tr_unspec/1
	add! -4		# 706	[c=4]*adddi/0
	load4		# 904	[c=4]*peep2_mov_from_mem_tr_to_tr_ind_pushsi_unspec
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 906	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L91.l_o072f5a
	# END CBRANCH
.L96.l_o072f5a:
	load8! &12 	#X12	# 715	[c=5]movdi_to_tr_unspec/1
	add! -1		# 717	[c=4]*adddi/0
	store8! &13 	#X12	# 1053	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ0	# 724	[c=12]cbranchsi4_internal
	load4! &12 	#X12
	jump_zero! .L91.l_o072f5a
	# END CBRANCH
	load8! &1 	#X1	# 731	[c=5]movdi_to_tr_unspec/1
	add! -4		# 733	[c=4]*adddi/0
	store8! &2 	#X1	# 734	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 737	[c=7]movsi_to_tr_unspec/2
	load4	
	#	
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 902	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L96.l_o072f5a
	# END CBRANCH
	jump! .L91.l_o072f5a		# 1202	[c=4]jump
.L122.l_o072f5a:
	load8! &8 	#X8	# 432	[c=7]movsi_to_tr_unspec/2
	load4	
	#	
	store8! &3 	#X2	# 434	[c=4]movsi_from_tr_unspec/0
	load8! &15 	#X15	# 436	[c=5]movdi_to_tr_unspec/1
	add! 24		# 438	[c=4]*adddi/0
	store8! &2 	#X1	# 439	[c=4]movdi_from_tr_unspec/0
	load4! &2 	#X2	# 16	[c=4]movsi_push_pop
	store8! &5 	#X4
	load8! &8 	#X8	# 17	[c=4]movdi_push_pop
	store8! &4 	#X3
	push! 0		# 18	[c=4]movsi_push_pop
	store8! &11 	#X10
.L95.l_o072f5a:
	load8! &1 	#X1	# 444	[c=7]movsi_to_tr_unspec/2
	load4	
	#	
	and! 0xffff		# 450	[c=4]*anddi3/0
	store8! &6 	#X5	# 1122	[c=4]movdi_from_tr_unspec/0
	load8! &7 	#X7	# 1123	[c=5]movdi_to_tr_unspec/1
	load8! &6 	#X5	# 463	[c=6]*muldi3/2
	mult
	store8! &12 	#X11	# 1057	[c=4]movsi_from_tr_unspec/0
	load4! &4 	#X4	# 914	[c=5]movsi_to_tr_unspec/1
	shift_ru! 16	# 916	[c=40]*lshrdi3/0
	load8! &12 	#X11	# 922	[c=6]*adddi/2
	add
	load8! &11 	#X10	# 1127	[c=6]*adddi/2
	add
	store8! &5 	#X4	# 1128	[c=4]movdi_from_tr_unspec/0
	load4! &4 	#X4	# 1063	[c=5]movsi_to_tr_unspec/1
	shift_ru! 16	# 931	[c=40]*lshrdi3/0
	store8! &11 	#X10	# 1066	[c=4]movsi_from_tr_unspec/0
	load8! &4 	#X4	# 524	[c=5]movdi_to_tr_unspec/1
	shift_l! 16	# 526	[c=8]*ashldi3/0
	store8! &12 	#X11	# 1068	[c=4]movsi_from_tr_unspec/0
	load8! &2 	#X2	# 533	[c=5]movdi_to_tr_unspec/1
	and! 0xffff		# 535	[c=4]*anddi3/0
	store8! &5 	#X4	# 1070	[c=4]movsi_from_tr_unspec/0
	load8! &3 	#X3	# 542	[c=5]movdi_to_tr_unspec/1
	add! 4		# 544	[c=4]*adddi/0
	store8! &6 	#X5	# 545	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 937	[c=5]movdi_to_tr_unspec/1
	load8! &12 	#X11	# 939	[c=6]*iordi3/2
	or
	load8! &4 	#X3	# 1158	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	load8! &1 	#X1	# 564	[c=7]movsi_to_tr_unspec/2
	load4	
	#	
	and! 0x0ffffffff	# 570	[c=1]*zero_extendsidi2
	shift_ru! 16	# 575	[c=40]*lshrdi3/0
	load8! &8 	#X7	# 1130	[c=6]*muldi3/2
	mult
	store8! &3 	#X2	# 1131	[c=4]movdi_from_tr_unspec/0
	load8! &5 	#X5	# 595	[c=7]movsi_to_tr_unspec/2
	load4	
	#	
	store8! &5 	#X4	# 597	[c=4]movsi_from_tr_unspec/0
	load8! &4 	#X4	# 599	[c=5]movdi_to_tr_unspec/1
	and! 0xffff		# 601	[c=4]*anddi3/0
	load8! &3 	#X2	# 614	[c=6]*adddi/2
	add
	load8! &11 	#X10	# 1137	[c=6]*adddi/2
	add
	store8! &3 	#X2	# 1138	[c=4]movdi_from_tr_unspec/0
	load4! &2 	#X2	# 1079	[c=5]movsi_to_tr_unspec/1
	shift_ru! 16	# 956	[c=40]*lshrdi3/0
	store8! &11 	#X10	# 1082	[c=4]movsi_from_tr_unspec/0
	load8! &1 	#X1	# 653	[c=5]movdi_to_tr_unspec/1
	add! 4		# 655	[c=4]*adddi/0
	store8! &2 	#X1	# 656	[c=4]movdi_from_tr_unspec/0
	load8! &5 	#X5	# 660	[c=4]movdi_push_pop
	store8! &4 	#X3
	# CBRANCH	# 662	[c=12]cbranchdi4_internal
	load8! &1 	#X1
	load8! &10 	#X9
	lt_u	
	not	
	jump_zero! .L95.l_o072f5a
	# END CBRANCH
	load4! &2 	#X2	# 664	[c=5]movsi_to_tr_unspec/1
	load8! &6 	#X5	# 666	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	load8! &6 	#X6	# 1165	[c=5]movdi_to_tr_unspec/1
	add! 4		# 1167	[c=4]*adddi/0
	store8! &7 	#X6	# 1168	[c=4]movdi_from_tr_unspec/0
	load8! &8 	#X8	# 1169	[c=5]movdi_to_tr_unspec/1
	add! 4		# 1171	[c=4]*adddi/0
	store8! &9 	#X8	# 1172	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 1173	[c=12]cbranchdi4_internal
	load8! &6 	#X6
	load8! &15 	#X14
	lt_u	
	not	
	jump_zero! .L87.l_o072f5a
	# END CBRANCH
	jump! .L88.l_o072f5a		# 1205	[c=4]jump
.L121.l_o072f5a:
	load8! &8 	#X8	# 13	[c=4]movdi_push_pop
	store8! &3 	#X2
	load8! &17	# 14	[c=2]movdi_push_pop
	store8! &2 	#X1
	push! 0		# 15	[c=4]movsi_push_pop
	store8! &8 	#X7
.L93.l_o072f5a:
	load8! &1 	#X1	# 191	[c=7]movsi_to_tr_unspec/2
	load4	
	#	
	store8! &11 	#X10	# 193	[c=4]movsi_from_tr_unspec/0
	load8! &10 	#X10	# 195	[c=5]movdi_to_tr_unspec/1
	and! 0xffff		# 197	[c=4]*anddi3/0
	load8! &6 	#X5	# 1140	[c=6]*muldi3/2
	mult
	store8! &4 	#X3	# 1141	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 217	[c=7]movsi_to_tr_unspec/2
	load4	
	#	
	store8! &5 	#X4	# 219	[c=4]movsi_from_tr_unspec/0
	load8! &4 	#X4	# 221	[c=5]movdi_to_tr_unspec/1
	and! 0xffff		# 223	[c=4]*anddi3/0
	load8! &4 	#X3	# 236	[c=6]*adddi/2
	add
	load8! &8 	#X7	# 1147	[c=6]*adddi/2
	add
	store8! &4 	#X3	# 1148	[c=4]movdi_from_tr_unspec/0
	load4! &3 	#X3	# 1089	[c=5]movsi_to_tr_unspec/1
	shift_ru! 16	# 980	[c=40]*lshrdi3/0
	store8! &8 	#X7	# 1091	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 1092	[c=5]movdi_to_tr_unspec/1
	add! 4		# 277	[c=4]*adddi/0
	store8! &2 	#X1	# 278	[c=4]movdi_from_tr_unspec/0
	load4! &10 	#X10	# 986	[c=5]movsi_to_tr_unspec/1
	shift_ru! 16	# 988	[c=40]*lshrdi3/0
	store8! &11 	#X10	# 1149	[c=4]movdi_from_tr_unspec/0
	load8! &5 	#X5	# 1150	[c=5]movdi_to_tr_unspec/1
	load8! &11 	#X10	# 301	[c=6]*muldi3/2
	mult
	store8! &12 	#X11	# 1096	[c=4]movsi_from_tr_unspec/0
	load4! &4 	#X4	# 996	[c=5]movsi_to_tr_unspec/1
	shift_ru! 16	# 998	[c=40]*lshrdi3/0
	load8! &12 	#X11	# 1004	[c=6]*adddi/2
	add
	load8! &8 	#X7	# 1154	[c=6]*adddi/2
	add
	store8! &5 	#X4	# 1155	[c=4]movdi_from_tr_unspec/0
	load4! &4 	#X4	# 1102	[c=5]movsi_to_tr_unspec/1
	shift_ru! 16	# 1013	[c=40]*lshrdi3/0
	store8! &8 	#X7	# 1104	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 1105	[c=5]movdi_to_tr_unspec/1
	shift_l! 16	# 364	[c=8]*ashldi3/0
	store8! &5 	#X4	# 1107	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 1108	[c=5]movdi_to_tr_unspec/1
	and! 0xffff		# 373	[c=4]*anddi3/0
	store8! &11 	#X10	# 1111	[c=4]movsi_from_tr_unspec/0
	load8! &2 	#X2	# 380	[c=5]movdi_to_tr_unspec/1
	add! 4		# 382	[c=4]*adddi/0
	store8! &4 	#X3	# 1112	[c=4]movdi_from_tr_unspec/0
	load8! &10 	#X10	# 1113	[c=5]movdi_to_tr_unspec/1
	load8! &5 	#X4	# 391	[c=6]*iordi3/2
	or
	load8! &3 	#X2	# 1161	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	load8! &3 	#X3	# 402	[c=4]movdi_push_pop
	store8! &3 	#X2
	# CBRANCH	# 404	[c=12]cbranchdi4_internal
	load8! &1 	#X1
	load8! &10 	#X9
	lt_u	
	not	
	jump_zero! .L93.l_o072f5a
	# END CBRANCH
	load4! &7 	#X7	# 406	[c=5]movsi_to_tr_unspec/1
	load8! &4 	#X3	# 408	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	load8! &6 	#X6	# 410	[c=7]movsi_to_tr_unspec/2
	load4	
	#	
	store8! &2 	#X1	# 412	[c=4]movsi_from_tr_unspec/0
	load4! &1 	#X1	# 1176	[c=5]movsi_to_tr_unspec/1
	shift_ru! 16	# 1178	[c=40]*lshrdi3/0
	store8! &8 	#X7	# 1180	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ0	# 1181	[c=12]cbranchsi4_internal
	load4! &7 	#X7
	jump_zero! .L94.l_o072f5a
	# END CBRANCH
	jump! .L122.l_o072f5a		# 1208	[c=4]jump
.L120.l_o072f5a:
	push! .LC0.l_o072f5a		# 73	[c=4]pushdi1_not_fp/0
	push! 0		# 74	[c=4]pushdi1_not_fp/0
	push! 349		# 75	[c=4]pushsi1_not_fp/0
	push! .LC1.l_o072f5a		# 76	[c=4]pushdi1_not_fp/0
	load8! &4 	#AR	# 897	[c=4]movdi_push_pop
	store8! &21
	call! __assert_func		# 77	[c=5]*call_pop_0/0
	set_sp! (+ &0 32)
	

	load8! &16	# 898	[c=2]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 1184	[c=5]movdi_to_tr_unspec/1
	add! 24		# 1186	[c=4]*adddi/0
	store8! &9 	#X8	# 1187	[c=4]movdi_from_tr_unspec/0
	load4! &12 	#X12	# 1188	[c=5]movsi_to_tr_unspec/1
	sigx4		# 1190	[c=6]*extendsidi2
	shift_l! 2	# 1191	[c=8]*ashldi3/0
	load8! &9 	#X8	# 1193	[c=6]*adddi/2
	add
	store8! &14 	#X13	# 1194	[c=4]movdi_from_tr_unspec/0
	load8! &8 	#X8	# 1195	[c=4]movdi_push_pop
	store8! &2 	#X1
	# CBRANCH	# 1196	[c=12]cbranchdi4_internal
	load8! &8 	#X8
	load8! &14 	#X13
	lt_u	
	not	
	jump_zero! .L86.l_o072f5a
	# END CBRANCH
	jump! .L89.l_o072f5a		# 1211	[c=4]jump
.L91.l_o072f5a:
	load4! &12 	#X12	# 745	[c=5]movsi_to_tr_unspec/1
	load8! &1 	#AR	# 747	[c=4]movsi_from_tr_unspec/1
	add! 20	
	store4	
	#	
	load8! &0 	#AR	# 752	[c=4]movdi_push_pop
	store8! &20

	# epilogue
	set_sp! &18
	return

# FUNCTION ENDS:__multiply

	#peephole unary+deadreg+binop
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole move_dead
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole move+push(pushable)
	#peephole 1
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+push(deadreg)+sign_extend
	#peephole pop+block+cmp

# FUNCTION BEGINS:__pow5mult
	EXPORT	__pow5mult
__pow5mult:
	# prologue (7 GPRs)

	set_sp! &-7

	load8! &8	# 2	[c=2]movdi_push_pop
	store8! &6 	#X5
	load8! &9	# 3	[c=2]movdi_push_pop
	store8! &5 	#X4
	load4! &10	# 267	[c=5]movsi_to_tr_unspec/1
	and! 0x3		# 15	[c=4]*anddi3/0
	store8! &1 	#AR	# 283	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 284	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L143.l_o072f5a
	# END CBRANCH
.L124.l_o072f5a:
	load4! &10	# 250	[c=5]movsi_to_tr_unspec/1
	sigx4		# 252	[c=6]*extendsidi2
	shift_rs! 2	# 253	[c=40]*ashrdi3/0
	store8! &3 	#X2	# 278	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ0	# 75	[c=12]cbranchsi4_internal
	load4! &2 	#X2
	jump_zero! .L123.l_o072f5a
	# END CBRANCH
	load8! &5 	#X5	# 77	[c=11]movdi_to_tr_unspec/2
	add! 112	
	load8	
	#	
	store8! &4 	#X3	# 79	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 81	[c=12]cbranchdi4_internal
	load8! &3 	#X3
	jump_zero! .L144.l_o072f5a
	# END CBRANCH
	load8! &2 	#X2	# 102	[c=5]movdi_to_tr_unspec/1
	and! 0x1		# 104	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 276	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L145.l_o072f5a
	# END CBRANCH
.L128.l_o072f5a:
	load4! &2 	#X2	# 237	[c=5]movsi_to_tr_unspec/1
	sigx4		# 239	[c=6]*extendsidi2
	shift_rs! 1	# 240	[c=40]*ashrdi3/0
	store8! &3 	#X2	# 271	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ0	# 171	[c=12]cbranchsi4_internal
	load4! &2 	#X2
	jump_zero! .L123.l_o072f5a
	# END CBRANCH
.L147.l_o072f5a:
	load8! &3 	#X3	# 173	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	store8! &1 	#AR	# 175	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 178	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L146.l_o072f5a
	# END CBRANCH
	load8! &0 	#AR	# 7	[c=4]movdi_push_pop
	store8! &4 	#X3
.L148.l_o072f5a:
	load8! &2 	#X2	# 288	[c=5]movdi_to_tr_unspec/1
	and! 0x1		# 290	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 291	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L128.l_o072f5a
	# END CBRANCH
.L145.l_o072f5a:
	load8! &3 	#X3	# 113	[c=4]pushdi1_not_fp/1
	load8! &5 	#X4	# 114	[c=4]pushdi1_not_fp/1
	load8! &7 	#X5	# 115	[c=4]pushdi1_not_fp/1
	call! __multiply		# 116	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	# CBRANCH EQ0	# 118	[c=12]cbranchdi4_internal
	load8! &4 	#X4
	jump_zero! .L131.l_o072f5a
	# END CBRANCH
	load8! &5 	#X5	# 120	[c=11]movdi_to_tr_unspec/2
	add! 120	
	load8	
	#	
	store8! &7 	#X6	# 122	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 124	[c=6]movsi_to_tr_unspec/2
	add! 8	
	load4	
	#	
	sigx4		# 130	[c=6]*extendsidi2
	shift_l! 3	# 135	[c=8]*ashldi3/0
	load8! &7 	#X6	# 246	[c=6]*adddi/2
	add
	store8! &2 	#X1	# 247	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 143	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	load8! &5 	#X4	# 149	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load8! &4 	#X4	# 151	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 153	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load8! &0 	#AR	# 8	[c=4]movdi_push_pop
	store8! &5 	#X4
	load4! &2 	#X2	# 294	[c=5]movsi_to_tr_unspec/1
	sigx4		# 296	[c=6]*extendsidi2
	shift_rs! 1	# 297	[c=40]*ashrdi3/0
	store8! &3 	#X2	# 299	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ0	# 300	[c=12]cbranchsi4_internal
	load4! &2 	#X2
	jump_not_zero! .L147.l_o072f5a
	# END CBRANCH
	jump! .L123.l_o072f5a		# 317	[c=4]jump
.L146.l_o072f5a:
	load8! &3 	#X3	# 180	[c=4]pushdi1_not_fp/1
	load8! &4 	#X3	# 181	[c=4]pushdi1_not_fp/1
	load8! &7 	#X5	# 182	[c=4]pushdi1_not_fp/1
	call! __multiply		# 183	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	load8! &0 	#AR	# 185	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 187	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	push! 0		# 189	[c=3]movdi_to_tr_unspec/0
	load8! &1 	#AR	# 191	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load8! &0 	#AR	# 303	[c=4]movdi_push_pop
	store8! &4 	#X3
	jump! .L148.l_o072f5a		# 320	[c=4]jump
.L131.l_o072f5a:
	load8! &0 	#AR	# 9	[c=4]movdi_push_pop
	store8! &5 	#X4
	jump! .L128.l_o072f5a		# 322	[c=4]jump
.L143.l_o072f5a:
	load8! &0 	#AR	# 24	[c=5]movdi_to_tr_unspec/1
	add! -1		# 26	[c=4]*adddi/0
	sigx4		# 282	[c=6]*extendsidi2
	shift_l! 2	# 260	[c=8]*ashldi3/0
	add! .Li_p05_3415.l_o072f5a		# 263	[c=4]*adddi/0
	load4		# 265	[c=4]*peep2_mov_from_mem_tr_to_tr_ind_pushsi_unspec
	store8! &1 	#AR	# 51	[c=4]movsi_from_tr_unspec/0
	push! 0		# 53	[c=4]pushsi1_not_fp/0
	load4! &1 	#AR	# 54	[c=4]pushsi1_not_fp/1
	load8! &6 	#X4	# 55	[c=4]pushdi1_not_fp/1
	load8! &8 	#X5	# 56	[c=4]pushdi1_not_fp/1
	call! __multadd		# 57	[c=0]*call_value_pop_1/0
	store8! &4

	set_sp! &3
	load8! &0 	#AR	# 58	[c=4]movdi_push_pop
	store8! &5 	#X4
	jump! .L124.l_o072f5a		# 324	[c=4]jump
.L144.l_o072f5a:
	push! 625		# 83	[c=4]pushsi1_not_fp/0
	load8! &6 	#X5	# 84	[c=4]pushdi1_not_fp/1
	call! __i2b		# 85	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load8! &0 	#AR	# 86	[c=4]movdi_push_pop
	store8! &4 	#X3
	load8! &0 	#AR	# 87	[c=5]movdi_to_tr_unspec/1
	load8! &6 	#X5	# 89	[c=4]movdi_from_tr_unspec/1
	add! 112	
	store8	
	#	
	push! 0		# 91	[c=3]movdi_to_tr_unspec/0
	load8! &1 	#AR	# 93	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load8! &2 	#X2	# 306	[c=5]movdi_to_tr_unspec/1
	and! 0x1		# 308	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 309	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L128.l_o072f5a
	# END CBRANCH
	jump! .L145.l_o072f5a		# 327	[c=4]jump
.L123.l_o072f5a:
	load8! &4 	#X4	# 200	[c=4]movdi_push_pop
	store8! &9

	# epilogue
	set_sp! &7
	return

# FUNCTION ENDS:__pow5mult

	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole move_dead
	#peephole move
	#peephole move+push+sub
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole binop1+deadreg+binop2
	#peephole pop+push+commut(di)
	#peephole 1
	#peephole zero_extend
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole 1
	#peephole move
	#peephole move+binop
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole move_dead
	#peephole pop(deadreg)+pushdi
	#peephole pop+push+commut(di)
	#peephole move_dead
	#peephole move_dead
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole zero_extend
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push

# FUNCTION BEGINS:__lshift
	EXPORT	__lshift
__lshift:
	# prologue (12 GPRs)

	set_sp! &-13

	load8! &15	# 3	[c=2]movdi_push_pop
	store8! &4 	#X3
	load4! &16	# 519	[c=5]movsi_to_tr_unspec/1
	sigx4		# 521	[c=6]*extendsidi2
	shift_rs! 5	# 522	[c=40]*ashrdi3/0
	store8! &6 	#X5	# 559	[c=4]movsi_from_tr_unspec/0
	load8! &3 	#X3	# 24	[c=6]movsi_to_tr_unspec/2
	add! 8	
	load4	
	#	
	store8! &2 	#X1	# 26	[c=4]movsi_from_tr_unspec/0
	load8! &3 	#X3	# 28	[c=6]movsi_to_tr_unspec/2
	add! 20	
	load4	
	#	
	load8! &6 	#X5	# 527	[c=6]*adddi/2
	add
	store8! &5 	#X4	# 563	[c=4]movsi_from_tr_unspec/0
	load8! &4 	#X4	# 45	[c=5]movdi_to_tr_unspec/1
	add! 1		# 47	[c=4]*adddi/0
	store8! &7 	#X6	# 565	[c=4]movsi_from_tr_unspec/0
	load8! &3 	#X3	# 54	[c=6]movsi_to_tr_unspec/2
	add! 12	
	load4	
	#	
	store8! &1 	#AR	# 56	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 58	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	add! -2147483648	
	load4! &7 	#X6
	add! -2147483648	
	lt_u	
	jump_zero! .L150.l_o072f5a
	# END CBRANCH
.L151.l_o072f5a:
	load8! &1 	#X1	# 60	[c=5]movdi_to_tr_unspec/1
	add! 1		# 62	[c=4]*adddi/0
	store8! &2 	#X1	# 553	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 554	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 516	[c=6]*adddi/2
	add
	store8! &1 	#AR	# 556	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 557	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	add! -2147483648	
	load4! &7 	#X6
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L151.l_o072f5a
	# END CBRANCH
.L150.l_o072f5a:
	load4! &1 	#X1	# 86	[c=4]pushsi1_not_fp/1
	load8! &15	# 87	[c=2]pushdi1_not_fp/1
	call! _Balloc		# 88	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH EQ0	# 90	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L173.l_o072f5a
	# END CBRANCH
.L152.l_o072f5a:
	load8! &0 	#AR	# 99	[c=5]movdi_to_tr_unspec/1
	add! 24		# 101	[c=4]*adddi/0
	store8! &3 	#X2	# 102	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 104	[c=12]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &6 	#X5
	add! -2147483648	
	lt_u	
	jump_zero! .L153.l_o072f5a
	# END CBRANCH
	load8! &0 	#AR	# 106	[c=5]movdi_to_tr_unspec/1
	add! 24		# 108	[c=4]*adddi/0
	store8! &2 	#X1	# 109	[c=4]movdi_from_tr_unspec/0
	load8! &5 	#X5	# 113	[c=5]movdi_to_tr_unspec/1
	add! -1		# 115	[c=4]*adddi/0
	and! 0xffffffff		# 572	[c=4]*anddi3/0
	store8! &8 	#X7	# 500	[c=4]movdi_from_tr_unspec/0
	load8! &7 	#X7	# 506	[c=5]movdi_to_tr_unspec/1
	shift_l! 2	# 508	[c=8]*ashldi3/0
	add! 28		# 509	[c=4]*adddi/0
	load8! &1 	#AR	# 510	[c=6]*adddi/2
	add
	store8! &6 	#X5	# 511	[c=4]movdi_from_tr_unspec/0
.L154.l_o072f5a:
	push! 0		# 145	[c=3]movsi_to_tr_unspec/0
	load8! &2 	#X1	# 147	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	load8! &1 	#X1	# 154	[c=5]movdi_to_tr_unspec/1
	add! 4		# 156	[c=4]*adddi/0
	store8! &2 	#X1	# 157	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 161	[c=12]cbranchdi4_internal
	load8! &1 	#X1
	load8! &6 	#X5
	xor	
	push! 1	
	lt_u	
	jump_zero! .L154.l_o072f5a
	# END CBRANCH
	load8! &7 	#X7	# 489	[c=5]movdi_to_tr_unspec/1
	add! 1		# 491	[c=4]*adddi/0
	shift_l! 2	# 492	[c=8]*ashldi3/0
	load8! &3 	#X2	# 495	[c=6]*adddi/2
	add
	store8! &3 	#X2	# 496	[c=4]movdi_from_tr_unspec/0
.L153.l_o072f5a:
	load8! &3 	#X3	# 186	[c=5]movdi_to_tr_unspec/1
	add! 24		# 188	[c=4]*adddi/0
	store8! &6 	#X5	# 189	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 191	[c=6]movsi_to_tr_unspec/2
	add! 20	
	load4	
	#	
	sigx4		# 197	[c=6]*extendsidi2
	shift_l! 2	# 202	[c=8]*ashldi3/0
	load8! &6 	#X5	# 484	[c=6]*adddi/2
	add
	store8! &8 	#X7	# 485	[c=4]movdi_from_tr_unspec/0
	load4! &16	# 486	[c=5]movsi_to_tr_unspec/1
	and! 0x1f		# 212	[c=4]*anddi3/0
	store8! &10 	#X9	# 549	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ0	# 219	[c=12]cbranchsi4_internal
	load4! &9 	#X9
	jump_zero! .L155.l_o072f5a
	# END CBRANCH
	load8! &9 	#X9	# 475	[c=5]movdi_to_tr_unspec/1
	sub! 32		# 477	[c=12]*subdi3/0
	neg		# 478	[c=4]*neg_tr
	store8! &11 	#X10	# 546	[c=4]movsi_from_tr_unspec/0
	load8! &3 	#X3	# 234	[c=5]movdi_to_tr_unspec/1
	add! 24		# 236	[c=4]*adddi/0
	store8! &2 	#X1	# 237	[c=4]movdi_from_tr_unspec/0
	push! 0		# 6	[c=4]movsi_push_pop
	store8! &6 	#X5
.L156.l_o072f5a:
	load8! &1 	#X1	# 242	[c=7]movsi_to_tr_unspec/2
	load4	
	#	
	store8! &12 	#X11	# 244	[c=4]movsi_from_tr_unspec/0
	load4! &9 	#X9	# 461	[c=5]movsi_to_tr_unspec/1
	pow2		# 464	[c=4]*pow_tr
	load8! &12 	#X11	# 465	[c=6]*muldi3/2
	mult
	store8! &12 	#X11	# 535	[c=4]movsi_from_tr_unspec/0
	load8! &2 	#X2	# 260	[c=5]movdi_to_tr_unspec/1
	add! 4		# 262	[c=4]*adddi/0
	store8! &9 	#X8	# 536	[c=4]movdi_from_tr_unspec/0
	load8! &5 	#X5	# 537	[c=5]movdi_to_tr_unspec/1
	load8! &12 	#X11	# 271	[c=6]*iordi3/2
	or
	load8! &3 	#X2	# 571	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	load8! &1 	#X1	# 566	[c=7]movsi_to_tr_unspec/2
	load4	
	#	
	store8! &6 	#X5	# 568	[c=4]movdi_from_tr_unspec/0
	load4! &10 	#X10	# 470	[c=5]movsi_to_tr_unspec/1
	store8! &3 	#X2	# 472	[c=4]movdi_from_tr_unspec/0
	load8! &5 	#X5	# 296	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 298	[c=42]*lshrdi3/2
	shift_ru
	store8! &6 	#X5	# 544	[c=4]movsi_from_tr_unspec/0
	load8! &1 	#X1	# 310	[c=5]movdi_to_tr_unspec/1
	add! 4		# 312	[c=4]*adddi/0
	store8! &2 	#X1	# 313	[c=4]movdi_from_tr_unspec/0
	load8! &8 	#X8	# 317	[c=4]movdi_push_pop
	store8! &3 	#X2
	# CBRANCH	# 319	[c=12]cbranchdi4_internal
	load8! &1 	#X1
	load8! &8 	#X7
	lt_u	
	not	
	jump_zero! .L156.l_o072f5a
	# END CBRANCH
	load4! &5 	#X5	# 321	[c=5]movsi_to_tr_unspec/1
	load8! &9 	#X8	# 323	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	# CBRANCH EQ0	# 325	[c=12]cbranchsi4_internal
	load4! &5 	#X5
	jump_zero! .L157.l_o072f5a
	# END CBRANCH
	load4! &6 	#X6	# 7	[c=4]movsi_push_pop
	store8! &5 	#X4
.L157.l_o072f5a:
	load4! &4 	#X4	# 376	[c=5]movsi_to_tr_unspec/1
	load8! &1 	#AR	# 378	[c=4]movsi_from_tr_unspec/1
	add! 20	
	store4	
	#	
	# CBRANCH EQ0	# 380	[c=12]cbranchdi4_internal
	load8! &3 	#X3
	jump_zero! .L149.l_o072f5a
	# END CBRANCH
	load8! &14	# 382	[c=11]movdi_to_tr_unspec/2
	add! 120	
	load8	
	#	
	store8! &3 	#X2	# 384	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 386	[c=6]movsi_to_tr_unspec/2
	add! 8	
	load4	
	#	
	sigx4		# 392	[c=6]*extendsidi2
	shift_l! 3	# 397	[c=8]*ashldi3/0
	load8! &3 	#X2	# 457	[c=6]*adddi/2
	add
	store8! &2 	#X1	# 458	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 405	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	load8! &4 	#X3	# 411	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load8! &3 	#X3	# 413	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 415	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	jump! .L149.l_o072f5a		# 592	[c=4]jump
.L155.l_o072f5a:
	load8! &3 	#X3	# 331	[c=5]movdi_to_tr_unspec/1
	add! 24		# 333	[c=4]*adddi/0
	store8! &2 	#X1	# 334	[c=4]movdi_from_tr_unspec/0
.L158.l_o072f5a:
	load8! &1 	#X1	# 340	[c=7]movsi_to_tr_unspec/2
	load4	
	#	
	load8! &3 	#X2	# 347	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	load8! &1 	#X1	# 354	[c=5]movdi_to_tr_unspec/1
	add! 4		# 356	[c=4]*adddi/0
	store8! &2 	#X1	# 357	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 365	[c=5]movdi_to_tr_unspec/1
	add! 4		# 367	[c=4]*adddi/0
	store8! &3 	#X2	# 368	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 373	[c=12]cbranchdi4_internal
	load8! &1 	#X1
	load8! &8 	#X7
	lt_u	
	jump_zero! .L157.l_o072f5a
	# END CBRANCH
	load8! &1 	#X1	# 577	[c=7]movsi_to_tr_unspec/2
	load4	
	#	
	load8! &3 	#X2	# 579	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	load8! &1 	#X1	# 580	[c=5]movdi_to_tr_unspec/1
	add! 4		# 582	[c=4]*adddi/0
	store8! &2 	#X1	# 583	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 584	[c=5]movdi_to_tr_unspec/1
	add! 4		# 586	[c=4]*adddi/0
	store8! &3 	#X2	# 587	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 588	[c=12]cbranchdi4_internal
	load8! &1 	#X1
	load8! &8 	#X7
	lt_u	
	not	
	jump_zero! .L158.l_o072f5a
	# END CBRANCH
	jump! .L157.l_o072f5a		# 595	[c=4]jump
.L173.l_o072f5a:
	push! .LC0.l_o072f5a		# 92	[c=4]pushdi1_not_fp/0
	push! 0		# 93	[c=4]pushdi1_not_fp/0
	push! 473		# 94	[c=4]pushsi1_not_fp/0
	push! .LC1.l_o072f5a		# 95	[c=4]pushdi1_not_fp/0
	load8! &4 	#AR	# 448	[c=4]movdi_push_pop
	store8! &17
	call! __assert_func		# 96	[c=5]*call_pop_0/0
	set_sp! (+ &0 32)
	

	load8! &12	# 449	[c=2]movdi_push_pop
	store8! &1 	#AR
	jump! .L152.l_o072f5a		# 597	[c=4]jump
.L149.l_o072f5a:
	load8! &0 	#AR	# 422	[c=4]movdi_push_pop
	store8! &15

	# epilogue
	set_sp! &13
	return

# FUNCTION ENDS:__lshift

	#peephole unary+deadreg+binop
	#peephole binop1+2
	#peephole move
	#peephole move+push+sub
	#peephole move_dead
	#peephole pop+move(deadreg)

# FUNCTION BEGINS:__mcmp
	EXPORT	__mcmp
__mcmp:
	# prologue (6 GPRs)

	set_sp! &-6

	load8! &7	# 2	[c=2]movdi_push_pop
	store8! &3 	#X2
	load8! &8	# 3	[c=2]movdi_push_pop
	store8! &2 	#X1
	load8! &2 	#X2	# 9	[c=6]movsi_to_tr_unspec/2
	add! 20	
	load4	
	#	
	store8! &5 	#X4	# 11	[c=4]movsi_from_tr_unspec/0
	load8! &1 	#X1	# 13	[c=6]movsi_to_tr_unspec/2
	add! 20	
	load4	
	#	
	store8! &1 	#AR	# 15	[c=4]movsi_from_tr_unspec/0
	load8! &0 	#AR	# 139	[c=5]movdi_to_tr_unspec/1
	load8! &5 	#X4	# 141	[c=14]*subdi3/2
	sub
	neg		# 142	[c=4]*neg_tr
	store8! &6 	#X5	# 146	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ0	# 30	[c=12]cbranchsi4_internal
	load4! &5 	#X5
	jump_not_zero! .L174.l_o072f5a
	# END CBRANCH
	load8! &2 	#X2	# 32	[c=5]movdi_to_tr_unspec/1
	add! 24		# 34	[c=4]*adddi/0
	store8! &5 	#X4	# 35	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 128	[c=5]movsi_to_tr_unspec/1
	sigx4		# 130	[c=6]*extendsidi2
	shift_l! 2	# 131	[c=8]*ashldi3/0
	store8! &3 	#X2	# 132	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 47	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 49	[c=6]*adddi/2
	add
	store8! &1 	#AR	# 50	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 133	[c=5]movdi_to_tr_unspec/1
	add! 24		# 135	[c=4]*adddi/0
	load8! &3 	#X2	# 136	[c=6]*adddi/2
	add
	store8! &2 	#X1	# 137	[c=4]movdi_from_tr_unspec/0
.L177.l_o072f5a:
	load8! &0 	#AR	# 68	[c=5]movdi_to_tr_unspec/1
	add! -4		# 70	[c=4]*adddi/0
	store8! &1 	#AR	# 71	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 74	[c=7]movsi_to_tr_unspec/2
	load4	
	#	
	store8! &4 	#X3	# 76	[c=4]movsi_from_tr_unspec/0
	load8! &1 	#X1	# 83	[c=5]movdi_to_tr_unspec/1
	add! -4		# 85	[c=4]*adddi/0
	store8! &2 	#X1	# 86	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 89	[c=7]movsi_to_tr_unspec/2
	load4	
	#	
	store8! &3 	#X2	# 91	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 93	[c=12]cbranchsi4_internal
	load4! &3 	#X3
	load4! &3 	#X2
	xor	
	push! 1	
	lt_u	
	jump_zero! .L182.l_o072f5a
	# END CBRANCH
	# CBRANCH	# 102	[c=12]cbranchdi4_internal
	load8! &4 	#X4
	load8! &1 	#AR
	lt_u	
	not	
	jump_zero! .L177.l_o072f5a
	# END CBRANCH
.L174.l_o072f5a:
	load4! &5 	#X5	# 108	[c=4]movsi_push_pop
	store4! &8
	jump! .L183.l_o072f5a		# 158	[c=4]jump
.L182.l_o072f5a:
	# CBRANCH	# 95	[c=12]cbranchsi4_internal
	load4! &3 	#X3
	load4! &3 	#X2
	lt_u	
	jump_zero! .L184.l_o072f5a
	# END CBRANCH
	push! -1		# 6	[c=4]movsi_push_pop
	store8! &6 	#X5
	load4! &5 	#X5	# 150	[c=4]movsi_push_pop
	store4! &8
	jump! .L183.l_o072f5a		# 161	[c=4]jump
.L184.l_o072f5a:
	push! 1		# 5	[c=4]movsi_push_pop
	store8! &6 	#X5
	load4! &5 	#X5	# 153	[c=4]movsi_push_pop
	store4! &8
.L183.l_o072f5a:

	# epilogue
	set_sp! &6
	return

# FUNCTION ENDS:__mcmp

	#peephole move_dead
	#peephole pop+cmp
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+sub
	#peephole move_dead
	#peephole unary+deadreg+binop
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop+pusharg
	#peephole unary+deadreg+binop
	#peephole move
	#peephole move+push+sub
	#peephole move_dead
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+commut(di)
	#peephole pop+block+push+commut(di)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+push+sub
	#peephole pop+block+push+commut(di)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push

# FUNCTION BEGINS:__mdiff
	EXPORT	__mdiff
__mdiff:
	# prologue (12 GPRs)

	set_sp! &-13

	load8! &15	# 3	[c=2]movdi_push_pop
	store8! &7 	#X6
	load8! &16	# 4	[c=2]movdi_push_pop
	store8! &8 	#X7
	load8! &6 	#X6	# 26	[c=6]movsi_to_tr_unspec/2
	add! 20	
	load4	
	#	
	store8! &3 	#X2	# 28	[c=4]movsi_from_tr_unspec/0
	load8! &7 	#X7	# 30	[c=6]movsi_to_tr_unspec/2
	add! 20	
	load4	
	#	
	store8! &1 	#AR	# 32	[c=4]movsi_from_tr_unspec/0
	load8! &0 	#AR	# 802	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 804	[c=14]*subdi3/2
	sub
	neg		# 805	[c=4]*neg_tr
	store8! &9 	#X8	# 861	[c=4]movsi_from_tr_unspec/0
	load8! &6 	#X6	# 47	[c=5]movdi_to_tr_unspec/1
	add! 24		# 49	[c=4]*adddi/0
	store8! &3 	#X2	# 50	[c=4]movdi_from_tr_unspec/0
	load8! &7 	#X7	# 52	[c=5]movdi_to_tr_unspec/1
	add! 24		# 54	[c=4]*adddi/0
	store8! &5 	#X4	# 55	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 57	[c=12]cbranchsi4_internal
	load4! &8 	#X8
	jump_not_zero! .L186.l_o072f5a
	# END CBRANCH
	load4! &0 	#AR	# 796	[c=5]movsi_to_tr_unspec/1
	sigx4		# 798	[c=6]*extendsidi2
	shift_l! 2	# 799	[c=8]*ashldi3/0
	store8! &2 	#X1	# 800	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 69	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 71	[c=6]*adddi/2
	add
	store8! &1 	#AR	# 72	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 74	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 76	[c=6]*adddi/2
	add
	store8! &2 	#X1	# 77	[c=4]movdi_from_tr_unspec/0
.L190.l_o072f5a:
	load8! &0 	#AR	# 85	[c=5]movdi_to_tr_unspec/1
	add! -4		# 87	[c=4]*adddi/0
	store8! &1 	#AR	# 88	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 91	[c=7]movsi_to_tr_unspec/2
	load4	
	#	
	store8! &6 	#X5	# 93	[c=4]movsi_from_tr_unspec/0
	load8! &1 	#X1	# 100	[c=5]movdi_to_tr_unspec/1
	add! -4		# 102	[c=4]*adddi/0
	store8! &2 	#X1	# 103	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 106	[c=7]movsi_to_tr_unspec/2
	load4	
	#	
	store8! &4 	#X3	# 108	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 110	[c=12]cbranchsi4_internal
	load4! &5 	#X5
	load4! &4 	#X3
	xor	
	push! 1	
	lt_u	
	jump_zero! .L207.l_o072f5a
	# END CBRANCH
	# CBRANCH	# 118	[c=12]cbranchdi4_internal
	load8! &2 	#X2
	load8! &1 	#AR
	lt_u	
	not	
	jump_zero! .L190.l_o072f5a
	# END CBRANCH
	push! 0		# 631	[c=4]pushsi1_not_fp/0
	load8! &15	# 632	[c=2]pushdi1_not_fp/1
	call! _Balloc		# 633	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH EQ0	# 636	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L208.l_o072f5a
	# END CBRANCH
	push! 1		# 130	[c=3]movsi_to_tr_unspec/0
	load8! &1 	#AR	# 132	[c=4]movsi_from_tr_unspec/1
	add! 20	
	store4	
	#	
	push! 0		# 134	[c=3]movsi_to_tr_unspec/0
	load8! &1 	#AR	# 136	[c=4]movsi_from_tr_unspec/1
	add! 24	
	store4	
	#	
.L185.l_o072f5a:
	load8! &0 	#AR	# 648	[c=4]movdi_push_pop
	store8! &15
	jump! .L209.l_o072f5a		# 1030	[c=4]jump
.L186.l_o072f5a:
	# CBRANCH	# 643	[c=12]cbranchsi4_internal
	load4! &8 	#X8
	add! -2147483648	
	push! 0	
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L210.l_o072f5a
	# END CBRANCH
	push! 0		# 13	[c=4]movsi_push_pop
	store8! &9 	#X8
.L188.l_o072f5a:
	load8! &6 	#X6	# 142	[c=6]movsi_to_tr_unspec/2
	add! 8	
	load4	
	#	
	and! 0x0ffffffff	# 794	[c=1]*zero_extendsidi2
	#peep - pop(deadreg)+pusharg	# 795	[c=0]*peep2_pop_pusharg
	load8! &15	# 147	[c=2]pushdi1_not_fp/1
	call! _Balloc		# 148	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH EQ0	# 150	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L211.l_o072f5a
	# END CBRANCH
.L192.l_o072f5a:
	load4! &8 	#X8	# 159	[c=5]movsi_to_tr_unspec/1
	load8! &1 	#AR	# 161	[c=4]movsi_from_tr_unspec/1
	add! 16	
	store4	
	#	
	load8! &6 	#X6	# 163	[c=6]movsi_to_tr_unspec/2
	add! 20	
	load4	
	#	
	store8! &9 	#X8	# 165	[c=4]movsi_from_tr_unspec/0
	load4! &8 	#X8	# 781	[c=5]movsi_to_tr_unspec/1
	sigx4		# 783	[c=6]*extendsidi2
	shift_l! 2	# 784	[c=8]*ashldi3/0
	load8! &3 	#X2	# 787	[c=6]*adddi/2
	add
	store8! &11 	#X10	# 788	[c=4]movdi_from_tr_unspec/0
	load8! &7 	#X7	# 182	[c=6]movsi_to_tr_unspec/2
	add! 20	
	load4	
	#	
	sigx4		# 188	[c=6]*extendsidi2
	shift_l! 2	# 193	[c=8]*ashldi3/0
	load8! &5 	#X4	# 792	[c=6]*adddi/2
	add
	store8! &12 	#X11	# 793	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 201	[c=5]movdi_to_tr_unspec/1
	add! 24		# 203	[c=4]*adddi/0
	store8! &4 	#X3	# 204	[c=4]movdi_from_tr_unspec/0
	push! 0		# 21	[c=4]movsi_push_pop
	store8! &6 	#X5
.L193.l_o072f5a:
	load8! &2 	#X2	# 207	[c=7]movsi_to_tr_unspec/2
	load4	
	#	
	store8! &8 	#X7	# 209	[c=4]movsi_from_tr_unspec/0
	load8! &7 	#X7	# 211	[c=5]movdi_to_tr_unspec/1
	and! 0xffff		# 213	[c=4]*anddi3/0
	store8! &7 	#X6	# 832	[c=4]movsi_from_tr_unspec/0
	load8! &4 	#X4	# 220	[c=7]movsi_to_tr_unspec/2
	load4	
	#	
	store8! &2 	#X1	# 222	[c=4]movsi_from_tr_unspec/0
	load8! &1 	#X1	# 224	[c=5]movdi_to_tr_unspec/1
	and! 0xffff		# 226	[c=4]*anddi3/0
	store8! &10 	#X9	# 872	[c=4]movdi_from_tr_unspec/0
	load8! &5 	#X5	# 873	[c=5]movdi_to_tr_unspec/1
	load8! &7 	#X6	# 240	[c=6]*adddi/2
	add
	store8! &7 	#X6	# 835	[c=4]movsi_from_tr_unspec/0
	load8! &9 	#X9	# 739	[c=5]movdi_to_tr_unspec/1
	load8! &7 	#X6	# 741	[c=14]*subdi3/2
	sub
	neg		# 742	[c=4]*neg_tr
	store8! &7 	#X6	# 837	[c=4]movsi_from_tr_unspec/0
	load4! &6 	#X6	# 745	[c=5]movsi_to_tr_unspec/1
	sigx4		# 747	[c=6]*extendsidi2
	shift_rs! 16	# 748	[c=40]*ashrdi3/0
	store8! &6 	#X5	# 838	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 839	[c=5]movdi_to_tr_unspec/1
	add! 4		# 282	[c=4]*adddi/0
	store8! &10 	#X9	# 283	[c=4]movdi_from_tr_unspec/0
	load8! &9 	#X9	# 285	[c=4]movdi_push_pop
	store8! &3 	#X2
	load4! &7 	#X7	# 754	[c=5]movsi_to_tr_unspec/1
	shift_ru! 16	# 756	[c=40]*lshrdi3/0
	store8! &8 	#X7	# 841	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 842	[c=5]movdi_to_tr_unspec/1
	add! 4		# 307	[c=4]*adddi/0
	store8! &5 	#X4	# 308	[c=4]movdi_from_tr_unspec/0
	load4! &1 	#X1	# 762	[c=5]movsi_to_tr_unspec/1
	shift_ru! 16	# 764	[c=40]*lshrdi3/0
	load8! &8 	#X7	# 879	[c=14]*subdi3/2
	sub
	neg		# 880	[c=4]*neg_tr
	load8! &6 	#X5	# 883	[c=6]*adddi/2
	add
	store8! &2 	#X1	# 884	[c=4]movdi_from_tr_unspec/0
	load4! &1 	#X1	# 847	[c=5]movsi_to_tr_unspec/1
	sigx4		# 773	[c=6]*extendsidi2
	shift_rs! 16	# 774	[c=40]*ashrdi3/0
	store8! &6 	#X5	# 849	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 850	[c=5]movdi_to_tr_unspec/1
	shift_l! 16	# 369	[c=8]*ashldi3/0
	store8! &2 	#X1	# 852	[c=4]movdi_from_tr_unspec/0
	load8! &6 	#X6	# 853	[c=5]movdi_to_tr_unspec/1
	and! 0xffff		# 378	[c=4]*anddi3/0
	load8! &2 	#X1	# 391	[c=6]*iordi3/2
	or
	store8! &2 	#X1	# 856	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 857	[c=5]movdi_to_tr_unspec/1
	add! 4		# 400	[c=4]*adddi/0
	store8! &7 	#X6	# 401	[c=4]movdi_from_tr_unspec/0
	load4! &1 	#X1	# 404	[c=5]movsi_to_tr_unspec/1
	load8! &4 	#X3	# 406	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	# CBRANCH	# 409	[c=12]cbranchdi4_internal
	load8! &4 	#X4
	load8! &12 	#X11
	lt_u	
	jump_zero! .L212.l_o072f5a
	# END CBRANCH
.L200.l_o072f5a:
	load8! &6 	#X6	# 22	[c=4]movdi_push_pop
	store8! &4 	#X3
	load8! &2 	#X2	# 892	[c=7]movsi_to_tr_unspec/2
	load4	
	#	
	store8! &8 	#X7	# 894	[c=4]movsi_from_tr_unspec/0
	load8! &7 	#X7	# 895	[c=5]movdi_to_tr_unspec/1
	and! 0xffff		# 897	[c=4]*anddi3/0
	store8! &7 	#X6	# 899	[c=4]movsi_from_tr_unspec/0
	load8! &4 	#X4	# 900	[c=7]movsi_to_tr_unspec/2
	load4	
	#	
	store8! &2 	#X1	# 902	[c=4]movsi_from_tr_unspec/0
	load8! &1 	#X1	# 903	[c=5]movdi_to_tr_unspec/1
	and! 0xffff		# 905	[c=4]*anddi3/0
	store8! &10 	#X9	# 906	[c=4]movdi_from_tr_unspec/0
	load8! &5 	#X5	# 907	[c=5]movdi_to_tr_unspec/1
	load8! &7 	#X6	# 909	[c=6]*adddi/2
	add
	store8! &7 	#X6	# 911	[c=4]movsi_from_tr_unspec/0
	load8! &9 	#X9	# 912	[c=5]movdi_to_tr_unspec/1
	load8! &7 	#X6	# 914	[c=14]*subdi3/2
	sub
	neg		# 915	[c=4]*neg_tr
	store8! &7 	#X6	# 917	[c=4]movsi_from_tr_unspec/0
	load4! &6 	#X6	# 918	[c=5]movsi_to_tr_unspec/1
	sigx4		# 920	[c=6]*extendsidi2
	shift_rs! 16	# 921	[c=40]*ashrdi3/0
	store8! &6 	#X5	# 922	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 923	[c=5]movdi_to_tr_unspec/1
	add! 4		# 925	[c=4]*adddi/0
	store8! &10 	#X9	# 926	[c=4]movdi_from_tr_unspec/0
	load8! &9 	#X9	# 927	[c=4]movdi_push_pop
	store8! &3 	#X2
	load4! &7 	#X7	# 928	[c=5]movsi_to_tr_unspec/1
	shift_ru! 16	# 930	[c=40]*lshrdi3/0
	store8! &8 	#X7	# 931	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 932	[c=5]movdi_to_tr_unspec/1
	add! 4		# 934	[c=4]*adddi/0
	store8! &5 	#X4	# 935	[c=4]movdi_from_tr_unspec/0
	load4! &1 	#X1	# 936	[c=5]movsi_to_tr_unspec/1
	shift_ru! 16	# 938	[c=40]*lshrdi3/0
	load8! &8 	#X7	# 940	[c=14]*subdi3/2
	sub
	neg		# 941	[c=4]*neg_tr
	load8! &6 	#X5	# 943	[c=6]*adddi/2
	add
	store8! &2 	#X1	# 944	[c=4]movdi_from_tr_unspec/0
	load4! &1 	#X1	# 945	[c=5]movsi_to_tr_unspec/1
	sigx4		# 947	[c=6]*extendsidi2
	shift_rs! 16	# 948	[c=40]*ashrdi3/0
	store8! &6 	#X5	# 949	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 950	[c=5]movdi_to_tr_unspec/1
	shift_l! 16	# 952	[c=8]*ashldi3/0
	store8! &2 	#X1	# 953	[c=4]movdi_from_tr_unspec/0
	load8! &6 	#X6	# 954	[c=5]movdi_to_tr_unspec/1
	and! 0xffff		# 956	[c=4]*anddi3/0
	load8! &2 	#X1	# 958	[c=6]*iordi3/2
	or
	store8! &2 	#X1	# 959	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 960	[c=5]movdi_to_tr_unspec/1
	add! 4		# 962	[c=4]*adddi/0
	store8! &7 	#X6	# 963	[c=4]movdi_from_tr_unspec/0
	load4! &1 	#X1	# 964	[c=5]movsi_to_tr_unspec/1
	load8! &4 	#X3	# 966	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	# CBRANCH	# 967	[c=12]cbranchdi4_internal
	load8! &4 	#X4
	load8! &12 	#X11
	lt_u	
	not	
	jump_zero! .L200.l_o072f5a
	# END CBRANCH
.L212.l_o072f5a:
	# CBRANCH	# 411	[c=12]cbranchdi4_internal
	load8! &9 	#X9
	load8! &11 	#X10
	lt_u	
	jump_zero! .L194.l_o072f5a
	# END CBRANCH
	load8! &6 	#X6	# 413	[c=4]movdi_push_pop
	store8! &4 	#X3
.L195.l_o072f5a:
	load8! &2 	#X2	# 415	[c=7]movsi_to_tr_unspec/2
	load4	
	#	
	store8! &2 	#X1	# 417	[c=4]movsi_from_tr_unspec/0
	load8! &1 	#X1	# 419	[c=5]movdi_to_tr_unspec/1
	and! 0xffff		# 421	[c=4]*anddi3/0
	load8! &6 	#X5	# 863	[c=6]*adddi/2
	add
	store8! &5 	#X4	# 864	[c=4]movdi_from_tr_unspec/0
	load4! &4 	#X4	# 812	[c=5]movsi_to_tr_unspec/1
	sigx4		# 710	[c=6]*extendsidi2
	shift_rs! 16	# 711	[c=40]*ashrdi3/0
	store8! &6 	#X5	# 814	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 815	[c=5]movdi_to_tr_unspec/1
	add! 4		# 464	[c=4]*adddi/0
	store8! &3 	#X2	# 465	[c=4]movdi_from_tr_unspec/0
	load4! &1 	#X1	# 717	[c=5]movsi_to_tr_unspec/1
	shift_ru! 16	# 719	[c=40]*lshrdi3/0
	load8! &6 	#X5	# 866	[c=6]*adddi/2
	add
	store8! &2 	#X1	# 867	[c=4]movdi_from_tr_unspec/0
	load4! &1 	#X1	# 819	[c=5]movsi_to_tr_unspec/1
	sigx4		# 726	[c=6]*extendsidi2
	shift_rs! 16	# 727	[c=40]*ashrdi3/0
	store8! &6 	#X5	# 821	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 822	[c=5]movdi_to_tr_unspec/1
	shift_l! 16	# 513	[c=8]*ashldi3/0
	store8! &2 	#X1	# 824	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 825	[c=5]movdi_to_tr_unspec/1
	and! 0xffff		# 522	[c=4]*anddi3/0
	load8! &2 	#X1	# 535	[c=6]*iordi3/2
	or
	store8! &2 	#X1	# 828	[c=4]movdi_from_tr_unspec/0
	load4! &1 	#X1	# 829	[c=5]movsi_to_tr_unspec/1
	load8! &4 	#X3	# 546	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	load8! &3 	#X3	# 553	[c=5]movdi_to_tr_unspec/1
	add! 4		# 555	[c=4]*adddi/0
	store8! &4 	#X3	# 556	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 560	[c=12]cbranchdi4_internal
	load8! &2 	#X2
	load8! &11 	#X10
	lt_u	
	not	
	jump_zero! .L195.l_o072f5a
	# END CBRANCH
	load8! &10 	#X10	# 695	[c=5]movdi_to_tr_unspec/1
	add! -1		# 697	[c=4]*adddi/0
	load8! &10 	#X9	# 698	[c=14]*subdi3/2
	sub
	shift_ru! 2	# 699	[c=40]*lshrdi3/0
	shift_l! 2	# 581	[c=8]*ashldi3/0
	load8! &7 	#X6	# 703	[c=6]*adddi/2
	add
	store8! &4 	#X3	# 704	[c=4]movdi_from_tr_unspec/0
.L194.l_o072f5a:
	# CBRANCH EQ0	# 591	[c=12]cbranchsi4_internal
	load4! &1 	#X1
	jump_not_zero! .L196.l_o072f5a
	# END CBRANCH
.L197.l_o072f5a:
	load8! &8 	#X8	# 593	[c=5]movdi_to_tr_unspec/1
	add! -1		# 595	[c=4]*adddi/0
	store8! &9 	#X8	# 809	[c=4]movsi_from_tr_unspec/0
	load8! &3 	#X3	# 607	[c=5]movdi_to_tr_unspec/1
	add! -4		# 609	[c=4]*adddi/0
	store8! &4 	#X3	# 610	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 613	[c=7]movsi_to_tr_unspec/2
	load4	
	#	
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 689	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L197.l_o072f5a
	# END CBRANCH
.L196.l_o072f5a:
	load4! &8 	#X8	# 621	[c=5]movsi_to_tr_unspec/1
	load8! &1 	#AR	# 623	[c=4]movsi_from_tr_unspec/1
	add! 20	
	store4	
	#	
	load8! &0 	#AR	# 970	[c=4]movdi_push_pop
	store8! &15
	jump! .L209.l_o072f5a		# 1035	[c=4]jump
.L207.l_o072f5a:
	# CBRANCH	# 112	[c=12]cbranchsi4_internal
	load4! &5 	#X5
	load4! &4 	#X3
	lt_u	
	jump_zero! .L188.l_o072f5a
	# END CBRANCH
	load8! &2 	#X2	# 6	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &4 	#X4	# 7	[c=4]movdi_push_pop
	store8! &3 	#X2
	load8! &0 	#AR	# 8	[c=4]movdi_push_pop
	store8! &5 	#X4
	load8! &6 	#X6	# 9	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &7 	#X7	# 10	[c=4]movdi_push_pop
	store8! &7 	#X6
	load8! &0 	#AR	# 11	[c=4]movdi_push_pop
	store8! &8 	#X7
	push! 1		# 12	[c=4]movsi_push_pop
	store8! &9 	#X8
	load8! &6 	#X6	# 973	[c=6]movsi_to_tr_unspec/2
	add! 8	
	load4	
	#	
	and! 0x0ffffffff	# 975	[c=1]*zero_extendsidi2
	#peep - pop(deadreg)+pusharg	# 976	[c=0]*peep2_pop_pusharg
	load8! &15	# 977	[c=2]pushdi1_not_fp/1
	call! _Balloc		# 978	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH EQ0	# 979	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_not_zero! .L192.l_o072f5a
	# END CBRANCH
	jump! .L211.l_o072f5a		# 1038	[c=4]jump
.L210.l_o072f5a:
	load8! &2 	#X2	# 14	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &4 	#X4	# 15	[c=4]movdi_push_pop
	store8! &3 	#X2
	load8! &0 	#AR	# 16	[c=4]movdi_push_pop
	store8! &5 	#X4
	load8! &6 	#X6	# 17	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &7 	#X7	# 18	[c=4]movdi_push_pop
	store8! &7 	#X6
	load8! &0 	#AR	# 19	[c=4]movdi_push_pop
	store8! &8 	#X7
	push! 1		# 20	[c=4]movsi_push_pop
	store8! &9 	#X8
	load8! &6 	#X6	# 982	[c=6]movsi_to_tr_unspec/2
	add! 8	
	load4	
	#	
	and! 0x0ffffffff	# 984	[c=1]*zero_extendsidi2
	#peep - pop(deadreg)+pusharg	# 985	[c=0]*peep2_pop_pusharg
	load8! &15	# 986	[c=2]pushdi1_not_fp/1
	call! _Balloc		# 987	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH EQ0	# 988	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_not_zero! .L192.l_o072f5a
	# END CBRANCH
.L211.l_o072f5a:
	push! .LC0.l_o072f5a		# 152	[c=4]pushdi1_not_fp/0
	push! 0		# 153	[c=4]pushdi1_not_fp/0
	push! 576		# 154	[c=4]pushsi1_not_fp/0
	push! .LC1.l_o072f5a		# 155	[c=4]pushdi1_not_fp/0
	load8! &4 	#AR	# 683	[c=4]movdi_push_pop
	store8! &17
	call! __assert_func		# 156	[c=5]*call_pop_0/0
	set_sp! (+ &0 32)
	

	load8! &12	# 684	[c=2]movdi_push_pop
	store8! &1 	#AR
	load4! &8 	#X8	# 991	[c=5]movsi_to_tr_unspec/1
	load8! &1 	#AR	# 993	[c=4]movsi_from_tr_unspec/1
	add! 16	
	store4	
	#	
	load8! &6 	#X6	# 994	[c=6]movsi_to_tr_unspec/2
	add! 20	
	load4	
	#	
	store8! &9 	#X8	# 996	[c=4]movsi_from_tr_unspec/0
	load4! &8 	#X8	# 997	[c=5]movsi_to_tr_unspec/1
	sigx4		# 999	[c=6]*extendsidi2
	shift_l! 2	# 1000	[c=8]*ashldi3/0
	load8! &3 	#X2	# 1002	[c=6]*adddi/2
	add
	store8! &11 	#X10	# 1003	[c=4]movdi_from_tr_unspec/0
	load8! &7 	#X7	# 1004	[c=6]movsi_to_tr_unspec/2
	add! 20	
	load4	
	#	
	sigx4		# 1006	[c=6]*extendsidi2
	shift_l! 2	# 1008	[c=8]*ashldi3/0
	load8! &5 	#X4	# 1010	[c=6]*adddi/2
	add
	store8! &12 	#X11	# 1011	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 1012	[c=5]movdi_to_tr_unspec/1
	add! 24		# 1014	[c=4]*adddi/0
	store8! &4 	#X3	# 1015	[c=4]movdi_from_tr_unspec/0
	push! 0		# 1016	[c=4]movsi_push_pop
	store8! &6 	#X5
	jump! .L193.l_o072f5a		# 1040	[c=4]jump
.L208.l_o072f5a:
	push! .LC0.l_o072f5a		# 124	[c=4]pushdi1_not_fp/0
	push! 0		# 125	[c=4]pushdi1_not_fp/0
	push! 562		# 126	[c=4]pushsi1_not_fp/0
	push! .LC1.l_o072f5a		# 127	[c=4]pushdi1_not_fp/0
	load8! &4 	#AR	# 681	[c=4]movdi_push_pop
	store8! &17
	call! __assert_func		# 128	[c=5]*call_pop_0/0
	set_sp! (+ &0 32)
	

	load8! &12	# 682	[c=2]movdi_push_pop
	store8! &1 	#AR
	push! 1		# 1019	[c=3]movsi_to_tr_unspec/0
	load8! &1 	#AR	# 1021	[c=4]movsi_from_tr_unspec/1
	add! 20	
	store4	
	#	
	push! 0		# 1022	[c=3]movsi_to_tr_unspec/0
	load8! &1 	#AR	# 1024	[c=4]movsi_from_tr_unspec/1
	add! 24	
	store4	
	#	
	jump! .L185.l_o072f5a		# 1042	[c=4]jump
.L209.l_o072f5a:

	# epilogue
	set_sp! &13
	return

# FUNCTION ENDS:__mdiff

	#peephole 1
	#peephole nop+set
	#peephole zero_extend
	#peephole binop1+deadreg+binop2
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole pop+block+cmp
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+push(deadreg)+sign_extend
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+cmp
	#peephole popdi(deadreg)+push

# FUNCTION BEGINS:__ulp
	EXPORT	__ulp
__ulp:
	# prologue (3 GPRs)
	push! 0
	push! 0
	push! 0

	load8! &4	# 282	[c=5]movdi_to_tr_unspec/1
	shift_ru! 32	# 284	[c=40]*lshrdi3/0
	and! 0x7ff00000		# 22	[c=4]*anddi3/0
	add! -54525952		# 31	[c=4]*adddi/0
	store8! &1 	#AR	# 308	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 309	[c=12]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	jump_zero! .L214.l_o072f5a
	# END CBRANCH
	load4! &0 	#AR	# 267	[c=5]movsi_to_tr_unspec/1
	shift_l! 32	# 269	[c=8]*ashldi3/0
	store8! &2 	#X1	# 270	[c=4]movdi_from_tr_unspec/0
	push! 0		# 276	[c=3]movdi_to_tr_unspec/0
	and! 0xffffffff		# 278	[c=4]*anddi3/0
	load8! &2 	#X1	# 279	[c=6]*iordi3/2
	or
	and! 0xffffffff00000000		# 280	[c=4]*anddi3/0
	store8! &1 	#AR	# 281	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 224	[c=4]movdf_push_pop
	store8! &5
	jump! .L221.l_o072f5a		# 332	[c=4]jump
.L214.l_o072f5a:
	load8! &0 	#AR	# 72	[c=5]movdi_to_tr_unspec/1
	neg		# 74	[c=3]*negdi2
	sigx4		# 297	[c=6]*extendsidi2
	shift_rs! 20	# 261	[c=40]*ashrdi3/0
	store8! &2 	#X1	# 299	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 95	[c=12]cbranchsi4_internal
	push! 19	
	add! -2147483648	
	load4! &2 	#X1
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L216.l_o072f5a
	# END CBRANCH
	load4! &1 	#X1	# 97	[c=5]movsi_to_tr_unspec/1
	sigx4		# 99	[c=6]*extendsidi2
	store8! &1 	#AR	# 100	[c=4]movdi_from_tr_unspec/0
	push! 524288		# 102	[c=3]movdi_to_tr_unspec/0
	load8! &1 	#AR	# 104	[c=42]*ashrdi3/2
	shift_rs
	and! 0xffffffff		# 310	[c=4]*anddi3/0
	shift_l! 32	# 244	[c=8]*ashldi3/0
	store8! &2 	#X1	# 245	[c=4]movdi_from_tr_unspec/0
	push! 0		# 251	[c=3]movdi_to_tr_unspec/0
	and! 0xffffffff		# 253	[c=4]*anddi3/0
	load8! &2 	#X1	# 254	[c=6]*iordi3/2
	or
	and! 0xffffffff00000000		# 255	[c=4]*anddi3/0
	store8! &1 	#AR	# 256	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 315	[c=4]movdf_push_pop
	store8! &5
	jump! .L221.l_o072f5a		# 334	[c=4]jump
.L216.l_o072f5a:
	push! 0		# 143	[c=3]movdi_to_tr_unspec/0
	and! 0xffffffff		# 145	[c=4]*anddi3/0
	store8! &3 	#X2	# 146	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 148	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &1 	#X1	# 149	[c=5]movdi_to_tr_unspec/1
	add! -20		# 151	[c=4]*adddi/0
	store8! &1 	#AR	# 289	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 290	[c=12]cbranchsi4_internal
	push! 30	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L218.l_o072f5a
	# END CBRANCH
	load4! &0 	#AR	# 233	[c=5]movsi_to_tr_unspec/1
	store8! &1 	#AR	# 235	[c=4]movdi_from_tr_unspec/0
	push! 2147483648		# 165	[c=3]movdi_to_tr_unspec/0
	load8! &1 	#AR	# 167	[c=42]*lshrdi3/2
	shift_ru
	store8! &1 	#AR	# 168	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 225	[c=5]movsi_to_tr_unspec/1
	store8! &1 	#AR	# 227	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 228	[c=5]movdi_to_tr_unspec/1
	and! 0xffffffff00000000		# 230	[c=4]*anddi3/0
	load8! &1 	#AR	# 231	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 232	[c=4]movdi_from_tr_unspec/0
.L222.l_o072f5a:
	load8! &0 	#AR	# 318	[c=4]movdf_push_pop
	store8! &5
	jump! .L221.l_o072f5a		# 336	[c=4]jump
.L218.l_o072f5a:
	push! 1		# 4	[c=4]movsi_push_pop
	store8! &1 	#AR
	load4! &0 	#AR	# 321	[c=5]movsi_to_tr_unspec/1
	store8! &1 	#AR	# 323	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 324	[c=5]movdi_to_tr_unspec/1
	and! 0xffffffff00000000		# 326	[c=4]*anddi3/0
	load8! &1 	#AR	# 327	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 328	[c=4]movdi_from_tr_unspec/0
	jump! .L222.l_o072f5a		# 339	[c=4]jump
.L221.l_o072f5a:

	# epilogue
	set_sp! &3
	return

# FUNCTION ENDS:__ulp

	#peephole move_dead
	#peephole move+move(allmodes x allmodes)
	#peephole move_dead
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole binop1+deadreg+binop2
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole binop1+deadreg+binop2
	#peephole zero_extend
	#peephole binop1+2
	#peephole zero_extend
	#peephole binop1+2
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole 1
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole zero_extend
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole binop1+deadreg+binop2
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole 1
	#peephole popdi+cmp rev
	#peephole pop(deadreg)+ind push
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole binop1+deadreg+binop2
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+push
	#peephole zero_extend
	#peephole 1
	#peephole move
	#peephole move+push+sub
	#peephole move_dead
	#peephole zero_extend
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole binop1+deadreg+binop2
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+commut(di)
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole and+popsi

# FUNCTION BEGINS:__b2d
	EXPORT	__b2d
__b2d:
	# prologue (8 GPRs)

	set_sp! &-8

	load8! &9	# 2	[c=2]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 10	[c=5]movdi_to_tr_unspec/1
	add! 24		# 12	[c=4]*adddi/0
	store8! &4 	#X3	# 13	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 15	[c=6]movsi_to_tr_unspec/2
	add! 20	
	load4	
	#	
	sigx4		# 21	[c=6]*extendsidi2
	shift_l! 2	# 26	[c=8]*ashldi3/0
	load8! &4 	#X3	# 728	[c=6]*adddi/2
	add
	store8! &5 	#X4	# 729	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 34	[c=5]movdi_to_tr_unspec/1
	add! -4		# 36	[c=4]*adddi/0
	store8! &3 	#X2	# 37	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 40	[c=5]movdi_to_tr_unspec/1
	add! -4		# 42	[c=4]*adddi/0
	load4		# 730	[c=4]*peep2_mov_from_mem_tr_to_tr_ind_pushsi_unspec
	store8! &6 	#X5	# 47	[c=4]movsi_from_tr_unspec/0
	load4! &5 	#X5	# 49	[c=4]pushsi1_not_fp/1
	call! __hi0bits		# 50	[c=0]*call_value_pop_1/0
	store8! &1

	load8! &0 	#AR	# 733	[c=5]movdi_to_tr_unspec/1
	sub! 32		# 735	[c=12]*subdi3/0
	neg		# 736	[c=4]*neg_tr
	load8! &11	# 816	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	# CBRANCH	# 69	[c=12]cbranchsi4_internal
	push! 10	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	jump_zero! .L238.l_o072f5a
	# END CBRANCH
	load8! &0 	#AR	# 222	[c=5]movdi_to_tr_unspec/1
	add! -11		# 224	[c=4]*adddi/0
	store8! &1 	#AR	# 768	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 769	[c=12]cbranchdi4_internal
	load8! &3 	#X3
	load8! &3 	#X2
	lt_u	
	jump_zero! .L227.l_o072f5a
	# END CBRANCH
	load8! &4 	#X4	# 234	[c=5]movdi_to_tr_unspec/1
	add! -8		# 236	[c=4]*adddi/0
	load4		# 671	[c=4]*peep2_mov_from_mem_tr_to_tr_ind_pushsi_unspec
	store8! &3 	#X2	# 241	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ0	# 243	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_zero! .L228.l_o072f5a
	# END CBRANCH
	load4! &0 	#AR	# 629	[c=5]movsi_to_tr_unspec/1
	pow2		# 632	[c=4]*pow_tr
	load8! &6 	#X5	# 633	[c=6]*muldi3/2
	mult
	store8! &2 	#X1	# 751	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 752	[c=5]movdi_to_tr_unspec/1
	sub! 32		# 638	[c=12]*subdi3/0
	neg		# 639	[c=4]*neg_tr
	store8! &6 	#X5	# 754	[c=4]movdi_from_tr_unspec/0
	load4! &2 	#X2	# 755	[c=5]movsi_to_tr_unspec/1
	store8! &8 	#X7	# 644	[c=4]movdi_from_tr_unspec/0
	load4! &5 	#X5	# 645	[c=5]movsi_to_tr_unspec/1
	store8! &7 	#X6	# 647	[c=4]movdi_from_tr_unspec/0
	load8! &7 	#X7	# 282	[c=5]movdi_to_tr_unspec/1
	load8! &7 	#X6	# 284	[c=42]*lshrdi3/2
	shift_ru
	load8! &2 	#X1	# 297	[c=6]*iordi3/2
	or
	or! 0x3ff00000		# 306	[c=4]*iordi3/0
	and! 0xffffffff		# 806	[c=4]*anddi3/0
	shift_l! 32	# 657	[c=8]*ashldi3/0
	store8! &7 	#X6	# 658	[c=4]movdi_from_tr_unspec/0
	push! 0		# 659	[c=3]movdi_to_tr_unspec/0
	and! 0xffffffff		# 661	[c=4]*anddi3/0
	load8! &7 	#X6	# 662	[c=6]*iordi3/2
	or
	store8! &2 	#X1	# 663	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 664	[c=5]movsi_to_tr_unspec/1
	pow2		# 667	[c=4]*pow_tr
	load8! &3 	#X2	# 668	[c=6]*muldi3/2
	mult
	store8! &1 	#AR	# 765	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 766	[c=5]movdi_to_tr_unspec/1
	add! -8		# 350	[c=4]*adddi/0
	# CBRANCH - peep (modesize=8)
	# - reverse 
	load8! &4 	#X3	# 670	[c=12]*peep2_cbranchdi_reverse
	gt_u	
	jump_zero! .L229.l_o072f5a
	# END CBRANCH
	load8! &4 	#X4	# 356	[c=5]movdi_to_tr_unspec/1
	add! -12		# 358	[c=4]*adddi/0
	load4		# 620	[c=4]*peep2_mov_from_mem_tr_to_tr_ind_pushsi_unspec
	and! 0x0ffffffff	# 367	[c=1]*zero_extendsidi2
	store8! &4 	#X3	# 368	[c=4]movdi_from_tr_unspec/0
	load4! &5 	#X5	# 623	[c=5]movsi_to_tr_unspec/1
	store8! &3 	#X2	# 625	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 375	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 377	[c=42]*lshrdi3/2
	shift_ru
	load8! &1 	#AR	# 390	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 391	[c=4]movdi_from_tr_unspec/0
.L229.l_o072f5a:
	load4! &0 	#AR	# 612	[c=5]movsi_to_tr_unspec/1
	store8! &1 	#AR	# 614	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 615	[c=5]movdi_to_tr_unspec/1
	and! 0xffffffff00000000		# 617	[c=4]*anddi3/0
	load8! &1 	#AR	# 618	[c=6]*iordi3/2
	or
	store8! &2 	#X1	# 619	[c=4]movdi_from_tr_unspec/0
.L226.l_o072f5a:
	load8! &1 	#X1	# 571	[c=4]movdf_push_pop
	store8! &10
	jump! .L239.l_o072f5a		# 857	[c=4]jump
.L227.l_o072f5a:
	# CBRANCH EQ0	# 523	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_zero! .L240.l_o072f5a
	# END CBRANCH
	load4! &0 	#AR	# 572	[c=5]movsi_to_tr_unspec/1
	pow2		# 575	[c=4]*pow_tr
	load8! &6 	#X5	# 576	[c=6]*muldi3/2
	mult
	or! 0x3ff00000		# 490	[c=4]*iordi3/0
	and! 0xffffffff		# 802	[c=4]*anddi3/0
	shift_l! 32	# 584	[c=8]*ashldi3/0
	store8! &1 	#AR	# 585	[c=4]movdi_from_tr_unspec/0
	push! 0		# 586	[c=3]movdi_to_tr_unspec/0
	and! 0xffffffff		# 588	[c=4]*anddi3/0
	load8! &1 	#AR	# 589	[c=6]*iordi3/2
	or
	store8! &2 	#X1	# 590	[c=4]movdi_from_tr_unspec/0
	push! 0		# 6	[c=4]movsi_push_pop
	store8! &1 	#AR
	load4! &0 	#AR	# 820	[c=5]movsi_to_tr_unspec/1
	store8! &1 	#AR	# 822	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 823	[c=5]movdi_to_tr_unspec/1
	and! 0xffffffff00000000		# 825	[c=4]*anddi3/0
	load8! &1 	#AR	# 826	[c=6]*iordi3/2
	or
	store8! &2 	#X1	# 827	[c=4]movdi_from_tr_unspec/0
	jump! .L226.l_o072f5a		# 860	[c=4]jump
.L240.l_o072f5a:
	push! 0		# 7	[c=4]movsi_push_pop
	store8! &3 	#X2
.L228.l_o072f5a:
	load8! &5 	#X5	# 419	[c=5]movdi_to_tr_unspec/1
	or! 0x3ff00000		# 421	[c=4]*iordi3/0
	and! 0xffffffff		# 804	[c=4]*anddi3/0
	shift_l! 32	# 597	[c=8]*ashldi3/0
	store8! &1 	#AR	# 598	[c=4]movdi_from_tr_unspec/0
	push! 0		# 599	[c=3]movdi_to_tr_unspec/0
	and! 0xffffffff		# 601	[c=4]*anddi3/0
	load8! &1 	#AR	# 602	[c=6]*iordi3/2
	or
	store8! &2 	#X1	# 603	[c=4]movdi_from_tr_unspec/0
	load4! &2 	#X2	# 604	[c=5]movsi_to_tr_unspec/1
	store8! &1 	#AR	# 606	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 607	[c=5]movdi_to_tr_unspec/1
	and! 0xffffffff00000000		# 609	[c=4]*anddi3/0
	load8! &1 	#AR	# 610	[c=6]*iordi3/2
	or
	store8! &2 	#X1	# 611	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 830	[c=4]movdf_push_pop
	store8! &10
	jump! .L239.l_o072f5a		# 862	[c=4]jump
.L238.l_o072f5a:
	load8! &0 	#AR	# 699	[c=5]movdi_to_tr_unspec/1
	sub! 11		# 701	[c=12]*subdi3/0
	neg		# 702	[c=4]*neg_tr
	store8! &8 	#X7	# 779	[c=4]movsi_from_tr_unspec/0
	load4! &5 	#X5	# 705	[c=5]movsi_to_tr_unspec/1
	store8! &7 	#X6	# 707	[c=4]movdi_from_tr_unspec/0
	load4! &7 	#X7	# 708	[c=5]movsi_to_tr_unspec/1
	store8! &2 	#X1	# 710	[c=4]movdi_from_tr_unspec/0
	load8! &6 	#X6	# 94	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 96	[c=42]*lshrdi3/2
	shift_ru
	or! 0x3ff00000		# 105	[c=4]*iordi3/0
	and! 0xffffffff		# 812	[c=4]*anddi3/0
	shift_l! 32	# 718	[c=8]*ashldi3/0
	store8! &7 	#X6	# 719	[c=4]movdi_from_tr_unspec/0
	push! 0		# 720	[c=3]movdi_to_tr_unspec/0
	and! 0xffffffff		# 722	[c=4]*anddi3/0
	load8! &7 	#X6	# 723	[c=6]*iordi3/2
	or
	store8! &7 	#X6	# 724	[c=4]movdi_from_tr_unspec/0
	load8! &6 	#X6	# 132	[c=4]movdi_push_pop
	store8! &2 	#X1
	# CBRANCH	# 133	[c=12]cbranchdi4_internal
	load8! &3 	#X3
	load8! &3 	#X2
	lt_u	
	jump_zero! .L231.l_o072f5a
	# END CBRANCH
	load8! &4 	#X4	# 136	[c=5]movdi_to_tr_unspec/1
	add! -8		# 138	[c=4]*adddi/0
	load4		# 691	[c=4]*peep2_mov_from_mem_tr_to_tr_ind_pushsi_unspec
	and! 0x0ffffffff	# 147	[c=1]*zero_extendsidi2
	store8! &3 	#X2	# 148	[c=4]movdi_from_tr_unspec/0
	load4! &7 	#X7	# 694	[c=5]movsi_to_tr_unspec/1
	store8! &2 	#X1	# 696	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 155	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 157	[c=42]*lshrdi3/2
	shift_ru
	store8! &2 	#X1	# 158	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 166	[c=5]movdi_to_tr_unspec/1
	add! 21		# 168	[c=4]*adddi/0
	and! 0xffffffff		# 808	[c=4]*anddi3/0
	pow2		# 678	[c=4]*pow_tr
	load8! &6 	#X5	# 679	[c=6]*muldi3/2
	mult
	load8! &2 	#X1	# 800	[c=6]*iordi3/2
	or
	and! 0xffffffff		# 810	[c=4]*anddi3/0
	store8! &1 	#AR	# 685	[c=4]movdi_from_tr_unspec/0
	load8! &6 	#X6	# 686	[c=5]movdi_to_tr_unspec/1
	and! 0xffffffff00000000		# 688	[c=4]*anddi3/0
	load8! &1 	#AR	# 689	[c=6]*iordi3/2
	or
	store8! &2 	#X1	# 690	[c=4]movdi_from_tr_unspec/0
.L241.l_o072f5a:
	load8! &1 	#X1	# 833	[c=4]movdf_push_pop
	store8! &10
	jump! .L239.l_o072f5a		# 864	[c=4]jump
.L231.l_o072f5a:
	push! 0		# 5	[c=4]movsi_push_pop
	store8! &2 	#X1
	load8! &0 	#AR	# 836	[c=5]movdi_to_tr_unspec/1
	add! 21		# 838	[c=4]*adddi/0
	and! 0xffffffff		# 839	[c=4]*anddi3/0
	pow2		# 841	[c=4]*pow_tr
	load8! &6 	#X5	# 842	[c=6]*muldi3/2
	mult
	load8! &2 	#X1	# 844	[c=6]*iordi3/2
	or
	and! 0xffffffff		# 845	[c=4]*anddi3/0
	store8! &1 	#AR	# 847	[c=4]movdi_from_tr_unspec/0
	load8! &6 	#X6	# 848	[c=5]movdi_to_tr_unspec/1
	and! 0xffffffff00000000		# 850	[c=4]*anddi3/0
	load8! &1 	#AR	# 851	[c=6]*iordi3/2
	or
	store8! &2 	#X1	# 852	[c=4]movdi_from_tr_unspec/0
	jump! .L241.l_o072f5a		# 867	[c=4]jump
.L239.l_o072f5a:

	# epilogue
	set_sp! &8
	return

# FUNCTION ENDS:__b2d

	#peephole 1
	#peephole nop+set
	#peephole move_dead
	#peephole unary+deadreg+binop
	#peephole unary1+binop2+deadreg+binop3
	#peephole binop1+deadreg+binop2
	#peephole pop(deadreg)+ind push
	#peephole pop+pusharg
	#peephole 1
	#peephole 1
	#peephole nop+set
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole nop+set
	#peephole 1
	#peephole 1
	#peephole nop+set
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole 1
	#peephole nop+set
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole nop+set
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole zero_extend
	#peephole 1
	#peephole nop+set
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole move
	#peephole move+push(pushable)
	#peephole 1
	#peephole nop+set
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole move_dead
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole set+nop
	#peephole move+push(pushable)
	#peephole pop+block+push+block
	#peephole pop+move2(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+move(deadreg)
	#peephole pop+block+push+commut(di)
	#peephole pop+push+commut(si)
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole and+popsi

# FUNCTION BEGINS:__d2b
	EXPORT	__d2b
__d2b:
	# prologue (6 GPRs)

	set_sp! &-8

	push! 1		# 12	[c=4]pushsi1_not_fp/0
	load8! &10	# 13	[c=2]pushdi1_not_fp/1
	call! _Balloc		# 14	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load8! &0 	#AR	# 15	[c=4]movdi_push_pop
	store8! &3 	#X2
	# CBRANCH EQ0	# 16	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L256.l_o072f5a
	# END CBRANCH
	load8! &10	# 508	[c=5]movdi_to_tr_unspec/1
	shift_ru! 32	# 510	[c=40]*lshrdi3/0
	store8! &1 	#AR	# 536	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 537	[c=5]movdi_to_tr_unspec/1
	and! 0xfffff		# 40	[c=4]*anddi3/0
	store8! &2 	#X1	# 539	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 540	[c=5]movsi_to_tr_unspec/1
	shift_ru! 20	# 519	[c=40]*lshrdi3/0
	and! 0x7ff		# 63	[c=4]*anddi3/0
	store8! &4 	#X3	# 547	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ0	# 70	[c=12]cbranchsi4_internal
	load4! &3 	#X3
	jump_zero! .L257.l_o072f5a
	# END CBRANCH
.L244.l_o072f5a:
	load8! &1 	#X1	# 77	[c=5]movdi_to_tr_unspec/1
	or! 0x100000		# 79	[c=4]*iordi3/0
	store4! &8	# 535	[c=4]movsi_from_tr_unspec/0
	load8! &10	# 504	[c=5]movdi_to_tr_unspec/1
	store8! &1 	#AR	# 95	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ0	# 97	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_zero! .L246.l_o072f5a
	# END CBRANCH
.L259.l_o072f5a:
	load4! &0 	#AR	# 99	[c=4]movsi_push_pop
	store4! &7
	push! &0		# 493	[c=4]movdi_to_tr_unspec/1
	add! 48		# 500	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 502	[c=0]*peep2_pop_pusharg
	call! __lo0bits		# 106	[c=0]*call_value_pop_1/0
	store8! &1

	# CBRANCH EQ0	# 108	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_zero! .L247.l_o072f5a
	# END CBRANCH
	load4! &7	# 110	[c=2]movsi_push_pop
	store8! &2 	#X1
	load8! &0 	#AR	# 464	[c=5]movdi_to_tr_unspec/1
	sub! 32		# 466	[c=12]*subdi3/0
	neg		# 467	[c=4]*neg_tr
	and! 0xffffffff		# 554	[c=4]*anddi3/0
	store8! &5 	#X4	# 472	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 129	[c=5]movdi_to_tr_unspec/1
	load8! &5 	#X4	# 131	[c=10]*ashldi3/2
	shift_l
	load4! &7	# 552	[c=6]*iorsi3/1
	or
	load8! &3 	#X2	# 558	[c=4]movsi_from_tr_unspec/1
	add! 24	
	store4	
	#	
	load4! &1 	#X1	# 477	[c=5]movsi_to_tr_unspec/1
	store8! &5 	#X4	# 479	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 480	[c=5]movsi_to_tr_unspec/1
	store8! &2 	#X1	# 482	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 166	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 168	[c=42]*lshrdi3/2
	shift_ru
	store8! &2 	#X1	# 169	[c=4]movdi_from_tr_unspec/0
	load4! &1 	#X1	# 484	[c=4]movsi_push_pop
	store4! &8
.L248.l_o072f5a:
	load4! &1 	#X1	# 188	[c=5]movsi_to_tr_unspec/1
	load8! &3 	#X2	# 190	[c=4]movsi_from_tr_unspec/1
	add! 28	
	store4	
	#	
	# CBRANCH EQ0	# 192	[c=12]cbranchsi4_internal
	load4! &1 	#X1
	jump_not_zero! .L253.l_o072f5a
	# END CBRANCH
	push! 1		# 8	[c=4]movsi_push_pop
	store8! &2 	#X1
	load4! &1 	#X1	# 196	[c=5]movsi_to_tr_unspec/1
	load8! &3 	#X2	# 198	[c=4]movsi_from_tr_unspec/1
	add! 20	
	store4	
	#	
.L250.l_o072f5a:
	# CBRANCH EQ0	# 232	[c=12]cbranchsi4_internal
	load4! &3 	#X3
	jump_zero! .L251.l_o072f5a
	# END CBRANCH
.L260.l_o072f5a:
	load8! &3 	#X3	# 235	[c=5]movdi_to_tr_unspec/1
	add! -1075		# 237	[c=4]*adddi/0
	load8! &1 	#AR	# 549	[c=6]*adddi/2
	add
	store8! &2 	#X1	# 550	[c=4]movdi_from_tr_unspec/0
	load4! &1 	#X1	# 257	[c=5]movsi_to_tr_unspec/1
	load8! &12	# 439	[c=2]movdi_push_pop
	store8! &3 	#X1
	load8! &2 	#X1	# 259	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	push! 53		# 265	[c=3]movdi_to_tr_unspec/0
	load8! &1 	#AR	# 267	[c=14]*subdi3/2
	sub
	store8! &1 	#AR	# 268	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 274	[c=5]movsi_to_tr_unspec/1
	load8! &13	# 442	[c=2]movdi_push_pop
	store8! &3 	#X1
	load8! &2 	#X1	# 276	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	load8! &2 	#X2	# 358	[c=4]movdi_push_pop
	store8! &10
	jump! .L258.l_o072f5a		# 600	[c=4]jump
.L257.l_o072f5a:
	load4! &1 	#X1	# 72	[c=4]movsi_push_pop
	store4! &8
	load8! &10	# 562	[c=5]movdi_to_tr_unspec/1
	store8! &1 	#AR	# 564	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ0	# 565	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L259.l_o072f5a
	# END CBRANCH
.L246.l_o072f5a:
	push! &0		# 451	[c=4]movdi_to_tr_unspec/1
	add! 56		# 458	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 460	[c=0]*peep2_pop_pusharg
	call! __lo0bits		# 210	[c=0]*call_value_pop_1/0
	store8! &1

	load4! &7	# 213	[c=5]movsi_to_tr_unspec/1
	load8! &3 	#X2	# 215	[c=4]movsi_from_tr_unspec/1
	add! 24	
	store4	
	#	
	push! 1		# 217	[c=3]movsi_to_tr_unspec/0
	load8! &3 	#X2	# 219	[c=4]movsi_from_tr_unspec/1
	add! 20	
	store4	
	#	
	load8! &0 	#AR	# 221	[c=5]movdi_to_tr_unspec/1
	add! 32		# 223	[c=4]*adddi/0
	store8! &1 	#AR	# 224	[c=4]movdi_from_tr_unspec/0
	push! 1		# 462	[c=4]movsi_push_pop
	store8! &2 	#X1
	# CBRANCH EQ0	# 568	[c=12]cbranchsi4_internal
	load4! &3 	#X3
	jump_not_zero! .L260.l_o072f5a
	# END CBRANCH
.L251.l_o072f5a:
	load8! &0 	#AR	# 282	[c=5]movdi_to_tr_unspec/1
	add! -1074		# 284	[c=4]*adddi/0
	store8! &1 	#AR	# 285	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 291	[c=5]movsi_to_tr_unspec/1
	load8! &12	# 411	[c=2]movdi_push_pop
	store8! &2 	#AR
	load8! &1 	#AR	# 293	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	load8! &1 	#X1	# 295	[c=5]movdi_to_tr_unspec/1
	shift_l! 5	# 297	[c=8]*ashldi3/0
	store8! &4 	#X3	# 524	[c=4]movsi_from_tr_unspec/0
	load4! &1 	#X1	# 418	[c=5]movsi_to_tr_unspec/1
	sigx4		# 420	[c=6]*extendsidi2
	shift_l! 2	# 421	[c=8]*ashldi3/0
	add! -4		# 422	[c=4]*adddi/0
	store8! &1 	#AR	# 423	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 424	[c=5]movdi_to_tr_unspec/1
	add! 24		# 426	[c=4]*adddi/0
	load8! &1 	#AR	# 427	[c=6]*adddi/2
	add
	load4		# 429	[c=4]*peep2_mov_from_mem_tr_to_tr_ind_pushsi_unspec
	and! 0x0ffffffff	# 431	[c=1]*zero_extendsidi2
	#peep - pop(deadreg)+pusharg	# 432	[c=0]*peep2_pop_pusharg
	call! __hi0bits		# 334	[c=0]*call_value_pop_1/0
	store8! &1

	load8! &3 	#X3	# 340	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 342	[c=14]*subdi3/2
	sub
	store8! &1 	#AR	# 343	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 349	[c=5]movsi_to_tr_unspec/1
	load8! &13	# 435	[c=2]movdi_push_pop
	store8! &3 	#X1
	load8! &2 	#X1	# 351	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	load8! &2 	#X2	# 571	[c=4]movdi_push_pop
	store8! &10
	jump! .L258.l_o072f5a		# 604	[c=4]jump
.L253.l_o072f5a:
	push! 2		# 7	[c=4]movsi_push_pop
	store8! &2 	#X1
	load4! &1 	#X1	# 574	[c=5]movsi_to_tr_unspec/1
	load8! &3 	#X2	# 576	[c=4]movsi_from_tr_unspec/1
	add! 20	
	store4	
	#	
	jump! .L250.l_o072f5a		# 606	[c=4]jump
.L247.l_o072f5a:
	load4! &6	# 181	[c=5]movsi_to_tr_unspec/1
	load8! &3 	#X2	# 183	[c=4]movsi_from_tr_unspec/1
	add! 24	
	store4	
	#	
	load4! &7	# 185	[c=2]movsi_push_pop
	store8! &2 	#X1
	jump! .L248.l_o072f5a		# 608	[c=4]jump
.L256.l_o072f5a:
	push! .LC0.l_o072f5a		# 18	[c=4]pushdi1_not_fp/0
	push! 0		# 19	[c=4]pushdi1_not_fp/0
	push! 778		# 20	[c=4]pushsi1_not_fp/0
	push! .LC1.l_o072f5a		# 21	[c=4]pushdi1_not_fp/0
	call! __assert_func		# 22	[c=5]*call_pop_0/0
	set_sp! (+ &0 32)
	

	load8! &10	# 579	[c=5]movdi_to_tr_unspec/1
	shift_ru! 32	# 581	[c=40]*lshrdi3/0
	store8! &1 	#AR	# 582	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 583	[c=5]movdi_to_tr_unspec/1
	and! 0xfffff		# 585	[c=4]*anddi3/0
	store8! &2 	#X1	# 586	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 587	[c=5]movsi_to_tr_unspec/1
	shift_ru! 20	# 589	[c=40]*lshrdi3/0
	and! 0x7ff		# 591	[c=4]*anddi3/0
	store8! &4 	#X3	# 593	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ0	# 594	[c=12]cbranchsi4_internal
	load4! &3 	#X3
	jump_not_zero! .L244.l_o072f5a
	# END CBRANCH
	jump! .L257.l_o072f5a		# 611	[c=4]jump
.L258.l_o072f5a:

	# epilogue
	set_sp! &8
	return

# FUNCTION ENDS:__d2b

	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole binop1+2
	#peephole move_dead
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole binop1+deadreg+binop2
	#peephole move_dead
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole move
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole move
	#peephole move+push(pushable)
	#peephole pop+push+sub
	#peephole 1
	#peephole pop(deadreg)+pushdi
	#peephole pop+push+sub
	#peephole 1
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+block+cmp
	#peephole pop+block+push+commut(di)
	#peephole pop+block+push+commut(di)
	#peephole redundant blockage insn
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push

# FUNCTION BEGINS:__ratio
	EXPORT	__ratio
__ratio:
	# prologue (8 GPRs)

	set_sp! &-10

	load8! &11	# 2	[c=2]movdi_push_pop
	store8! &6 	#X5
	load8! &12	# 3	[c=2]movdi_push_pop
	store8! &5 	#X4
	push! &0		# 309	[c=4]movdi_to_tr_unspec/1
	add! 64		# 316	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 318	[c=0]*peep2_pop_pusharg
	load8! &6 	#X5	# 13	[c=4]pushdi1_not_fp/1
	call! __b2d		# 14	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load8! &0 	#AR	# 15	[c=4]movdf_push_pop
	store8! &3 	#X2
	load8! &0 	#AR	# 319	[c=4]movdi_push_pop
	store8! &4 	#X3
	push! &0		# 328	[c=4]movdi_to_tr_unspec/1
	add! 72		# 335	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 337	[c=0]*peep2_pop_pusharg
	load8! &5 	#X4	# 26	[c=4]pushdi1_not_fp/1
	call! __b2d		# 27	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load8! &0 	#AR	# 338	[c=4]movdi_push_pop
	store8! &2 	#X1
	load4! &8	# 33	[c=2]movsi_push_pop
	store8! &8 	#X7
	load4! &9	# 339	[c=5]movsi_to_tr_unspec/1
	load8! &8 	#X7	# 342	[c=14]*subdi3/2
	sub
	neg		# 343	[c=4]*neg_tr
	store8! &7 	#X6	# 344	[c=4]movdi_from_tr_unspec/0
	load8! &5 	#X5	# 48	[c=6]movsi_to_tr_unspec/2
	add! 20	
	load4	
	#	
	store8! &6 	#X5	# 50	[c=4]movsi_from_tr_unspec/0
	load8! &4 	#X4	# 52	[c=6]movsi_to_tr_unspec/2
	add! 20	
	load4	
	#	
	load8! &6 	#X5	# 348	[c=14]*subdi3/2
	sub
	neg		# 349	[c=4]*neg_tr
	shift_l! 5	# 71	[c=8]*ashldi3/0
	load8! &7 	#X6	# 356	[c=6]*adddi/2
	add
	store8! &5 	#X4	# 384	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 385	[c=12]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &5 	#X4
	add! -2147483648	
	lt_u	
	jump_zero! .L262.l_o072f5a
	# END CBRANCH
	load8! &2 	#X2	# 280	[c=5]movdi_to_tr_unspec/1
	shift_ru! 32	# 282	[c=40]*lshrdi3/0
	store8! &3 	#X2	# 367	[c=4]movsi_from_tr_unspec/0
	load8! &4 	#X4	# 107	[c=5]movdi_to_tr_unspec/1
	shift_l! 20	# 109	[c=8]*ashldi3/0
	load8! &3 	#X2	# 390	[c=6]*adddi/2
	add
	and! 0xffffffff		# 395	[c=4]*anddi3/0
	shift_l! 32	# 293	[c=8]*ashldi3/0
	store8! &2 	#X1	# 294	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 295	[c=5]movdi_to_tr_unspec/1
	and! 0xffffffff		# 297	[c=4]*anddi3/0
	load8! &2 	#X1	# 298	[c=6]*iordi3/2
	or
	store8! &3 	#X2	# 373	[c=4]movdf_from_tr_unspec/0
	load8! &0 	#AR	# 221	[c=4]pushdf1_not_fp/1
	load8! &3 	#X2	# 222	[c=4]pushdf1_not_fp/1
	call! __divdf3		# 223	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load8! &0 	#AR	# 229	[c=4]movdf_push_pop
	store8! &12
	jump! .L266.l_o072f5a		# 407	[c=4]jump
.L262.l_o072f5a:
	load8! &0 	#AR	# 162	[c=5]movdi_to_tr_unspec/1
	shift_ru! 32	# 164	[c=40]*lshrdi3/0
	store8! &4 	#X3	# 359	[c=4]movsi_from_tr_unspec/0
	load8! &4 	#X4	# 172	[c=5]movdi_to_tr_unspec/1
	mult! -1048576		# 174	[c=4]*muldi3/0
	load8! &4 	#X3	# 387	[c=6]*adddi/2
	add
	and! 0xffffffff		# 393	[c=4]*anddi3/0
	shift_l! 32	# 272	[c=8]*ashldi3/0
	store8! &1 	#AR	# 273	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 274	[c=5]movdi_to_tr_unspec/1
	and! 0xffffffff		# 276	[c=4]*anddi3/0
	load8! &1 	#AR	# 277	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 365	[c=4]movdf_from_tr_unspec/0
	load8! &0 	#AR	# 400	[c=4]pushdf1_not_fp/1
	load8! &3 	#X2	# 401	[c=4]pushdf1_not_fp/1
	call! __divdf3		# 402	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load8! &0 	#AR	# 403	[c=4]movdf_push_pop
	store8! &12
.L266.l_o072f5a:

	# epilogue
	set_sp! &10
	return

# FUNCTION ENDS:__ratio

	#peephole move_dead
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole pop+move(deadreg)

# FUNCTION BEGINS:_mprec_log10
	EXPORT	_mprec_log10
_mprec_log10:
	# prologue (3 GPRs)
	push! 0
	push! 0
	push! 0

	load4! &4	# 2	[c=2]movsi_push_pop
	store8! &3 	#X2
	# CBRANCH	# 7	[c=12]cbranchsi4_internal
	push! 23	
	add! -2147483648	
	load4! &3 	#X2
	add! -2147483648	
	lt_u	
	jump_zero! .L274.l_o072f5a
	# END CBRANCH
	push! 0x3ff0000000000000		# 4	[c=4]movdf_push_pop
	store8! &1 	#AR
.L268.l_o072f5a:
	push! 0x4024000000000000		# 33	[c=4]pushdf1_not_fp/0
	load8! &1 	#AR	# 34	[c=4]pushdf1_not_fp/1
	call! __muldf3		# 35	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load8! &2 	#X2	# 38	[c=5]movdi_to_tr_unspec/1
	add! -1		# 40	[c=4]*adddi/0
	store8! &3 	#X2	# 80	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ0	# 47	[c=12]cbranchsi4_internal
	load4! &2 	#X2
	jump_not_zero! .L268.l_o072f5a
	# END CBRANCH
	load8! &0 	#AR	# 53	[c=4]movdf_push_pop
	store8! &5
	jump! .L275.l_o072f5a		# 89	[c=4]jump
.L274.l_o072f5a:
	load4! &2 	#X2	# 69	[c=5]movsi_to_tr_unspec/1
	sigx4		# 71	[c=6]*extendsidi2
	shift_l! 3	# 72	[c=8]*ashldi3/0
	add! __mprec_tens		# 75	[c=4]*adddi/0
	load8		# 77	[c=4]*peep2_mov_from_mem_tr_to_tr_ind_pushdf_unspec
	store8! &1 	#AR	# 27	[c=4]movdf_from_tr_unspec/0
	load8! &0 	#AR	# 84	[c=4]movdf_push_pop
	store8! &5
.L275.l_o072f5a:

	# epilogue
	set_sp! &3
	return

# FUNCTION ENDS:_mprec_log10

	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole move+push(pushable)
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole unary1+binop2+deadreg+binop3
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+push(deadreg)+sign_extend
	#peephole pop+block+push+block
	#peephole pop+push(deadreg)+sign_extend
	#peephole redundant blockage insn

# FUNCTION BEGINS:__copybits
	EXPORT	__copybits
__copybits:
	# prologue (7 GPRs)

	set_sp! &-7

	load8! &8	# 2	[c=2]movdi_push_pop
	store8! &1 	#AR
	load8! &10	# 4	[c=2]movdi_push_pop
	store8! &7 	#X6
	load4! &9	# 207	[c=5]movsi_to_tr_unspec/1
	add! -1		# 10	[c=4]*adddi/0
	sigx4		# 239	[c=6]*extendsidi2
	shift_rs! 5	# 213	[c=40]*ashrdi3/0
	sigx4		# 243	[c=6]*extendsidi2
	add! 1		# 224	[c=4]*adddi/0
	shift_l! 2	# 225	[c=8]*ashldi3/0
	load8! &1 	#AR	# 228	[c=6]*adddi/2
	add
	store8! &6 	#X5	# 229	[c=4]movdi_from_tr_unspec/0
	load8! &6 	#X6	# 51	[c=5]movdi_to_tr_unspec/1
	add! 24		# 53	[c=4]*adddi/0
	store8! &2 	#X1	# 54	[c=4]movdi_from_tr_unspec/0
	load8! &6 	#X6	# 56	[c=6]movsi_to_tr_unspec/2
	add! 20	
	load4	
	#	
	sigx4		# 62	[c=6]*extendsidi2
	shift_l! 2	# 67	[c=8]*ashldi3/0
	load8! &2 	#X1	# 233	[c=6]*adddi/2
	add
	store8! &5 	#X4	# 234	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 75	[c=12]cbranchdi4_internal
	load8! &1 	#X1
	load8! &5 	#X4
	lt_u	
	jump_zero! .L277.l_o072f5a
	# END CBRANCH
	load8! &0 	#AR	# 77	[c=4]movdi_push_pop
	store8! &3 	#X2
	load8! &6 	#X6	# 78	[c=5]movdi_to_tr_unspec/1
	add! 24		# 80	[c=4]*adddi/0
	store8! &2 	#X1	# 81	[c=4]movdi_from_tr_unspec/0
.L278.l_o072f5a:
	load8! &1 	#X1	# 86	[c=7]movsi_to_tr_unspec/2
	load4	
	#	
	load8! &3 	#X2	# 93	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	load8! &2 	#X2	# 100	[c=5]movdi_to_tr_unspec/1
	add! 4		# 102	[c=4]*adddi/0
	store8! &3 	#X2	# 103	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 111	[c=5]movdi_to_tr_unspec/1
	add! 4		# 113	[c=4]*adddi/0
	store8! &2 	#X1	# 114	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 119	[c=12]cbranchdi4_internal
	load8! &1 	#X1
	load8! &5 	#X4
	lt_u	
	not	
	jump_zero! .L278.l_o072f5a
	# END CBRANCH
	push! -25		# 123	[c=3]movdi_to_tr_unspec/0
	load8! &7 	#X6	# 125	[c=14]*subdi3/2
	sub
	load8! &5 	#X4	# 198	[c=6]*adddi/2
	add
	shift_ru! 2	# 135	[c=40]*lshrdi3/0
	add! 1		# 140	[c=4]*adddi/0
	shift_l! 2	# 145	[c=8]*ashldi3/0
	load8! &1 	#AR	# 204	[c=6]*adddi/2
	add
	store8! &1 	#AR	# 205	[c=4]movdi_from_tr_unspec/0
.L277.l_o072f5a:
	# CBRANCH	# 161	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	load8! &6 	#X5
	lt_u	
	jump_zero! .L276.l_o072f5a
	# END CBRANCH
.L280.l_o072f5a:
	push! 0		# 166	[c=3]movsi_to_tr_unspec/0
	load8! &1 	#AR	# 168	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	load8! &0 	#AR	# 175	[c=5]movdi_to_tr_unspec/1
	add! 4		# 177	[c=4]*adddi/0
	store8! &1 	#AR	# 178	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 183	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	load8! &6 	#X5
	lt_u	
	not	
	jump_zero! .L280.l_o072f5a
	# END CBRANCH
.L276.l_o072f5a:

	# epilogue
	set_sp! &7
	return

# FUNCTION ENDS:__copybits

	#peephole pop+cmp
	#peephole pop(deadreg)+ind push
	#peephole zero_extend
	#peephole zero_extend
	#peephole 1
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole 1
	#peephole move+push(pushable)
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole unary+deadreg+binop
	#peephole 1
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole popdi+cmp rev
	#peephole pop+block+cmp
	#peephole pop+block+cmp

# FUNCTION BEGINS:__any_on
	EXPORT	__any_on
__any_on:
	# prologue (6 GPRs)

	set_sp! &-6

	load8! &7	# 2	[c=2]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 11	[c=5]movdi_to_tr_unspec/1
	add! 24		# 13	[c=4]*adddi/0
	store8! &3 	#X2	# 14	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 16	[c=6]movsi_to_tr_unspec/2
	add! 20	
	load4	
	#	
	store8! &4 	#X3	# 18	[c=4]movsi_from_tr_unspec/0
	load4! &8	# 252	[c=5]movsi_to_tr_unspec/1
	sigx4		# 254	[c=6]*extendsidi2
	shift_rs! 5	# 255	[c=40]*ashrdi3/0
	store8! &1 	#AR	# 266	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 267	[c=12]cbranchsi4_internal
	load4! &3 	#X3
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	jump_zero! .L286.l_o072f5a
	# END CBRANCH
	load4! &3 	#X3	# 244	[c=5]movsi_to_tr_unspec/1
	sigx4		# 246	[c=6]*extendsidi2
	shift_l! 2	# 247	[c=8]*ashldi3/0
	load8! &3 	#X2	# 250	[c=6]*adddi/2
	add
	store8! &2 	#X1	# 251	[c=4]movdi_from_tr_unspec/0
.L287.l_o072f5a:
	# CBRANCH	# 123	[c=12]cbranchdi4_internal
	load8! &2 	#X2
	load8! &2 	#X1
	lt_u	
	jump_zero! .L292.l_o072f5a
	# END CBRANCH
	load8! &1 	#X1	# 125	[c=5]movdi_to_tr_unspec/1
	add! -4		# 127	[c=4]*adddi/0
	store8! &1 	#AR	# 128	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 131	[c=5]movdi_to_tr_unspec/1
	add! -4		# 133	[c=4]*adddi/0
	load4		# 218	[c=4]*peep2_mov_from_mem_tr_to_tr_ind_pushsi_unspec
	store8! &4 	#X3	# 138	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ0	# 140	[c=12]cbranchsi4_internal
	load4! &3 	#X3
	jump_not_zero! .L300.l_o072f5a
	# END CBRANCH
.L289.l_o072f5a:
	# CBRANCH	# 164	[c=12]cbranchdi4_internal
	load8! &2 	#X2
	load8! &1 	#AR
	lt_u	
	jump_zero! .L285.l_o072f5a
	# END CBRANCH
	load8! &0 	#AR	# 150	[c=5]movdi_to_tr_unspec/1
	add! -4		# 152	[c=4]*adddi/0
	store8! &1 	#AR	# 153	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 156	[c=7]movsi_to_tr_unspec/2
	load4	
	#	
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 217	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L289.l_o072f5a
	# END CBRANCH
	push! 1		# 7	[c=4]movsi_push_pop
	store8! &4 	#X3
.L285.l_o072f5a:
	load4! &3 	#X3	# 170	[c=4]movsi_push_pop
	store4! &8
	jump! .L301.l_o072f5a		# 282	[c=4]jump
.L286.l_o072f5a:
	load4! &0 	#AR	# 236	[c=5]movsi_to_tr_unspec/1
	sigx4		# 238	[c=6]*extendsidi2
	shift_l! 2	# 239	[c=8]*ashldi3/0
	load8! &3 	#X2	# 242	[c=6]*adddi/2
	add
	store8! &2 	#X1	# 243	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 70	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	add! -2147483648	
	load4! &4 	#X3
	add! -2147483648	
	lt_u	
	jump_zero! .L287.l_o072f5a
	# END CBRANCH
	load4! &8	# 233	[c=5]movsi_to_tr_unspec/1
	and! 0x1f		# 74	[c=4]*anddi3/0
	store8! &1 	#AR	# 264	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 265	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_zero! .L287.l_o072f5a
	# END CBRANCH
	load8! &1 	#X1	# 83	[c=7]movsi_to_tr_unspec/2
	load4	
	#	
	store8! &4 	#X3	# 85	[c=4]movsi_from_tr_unspec/0
	load4! &3 	#X3	# 220	[c=5]movsi_to_tr_unspec/1
	store8! &6 	#X5	# 222	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 223	[c=5]movsi_to_tr_unspec/1
	store8! &5 	#X4	# 225	[c=4]movdi_from_tr_unspec/0
	load8! &5 	#X5	# 97	[c=5]movdi_to_tr_unspec/1
	load8! &5 	#X4	# 99	[c=42]*lshrdi3/2
	shift_ru
	store8! &5 	#X4	# 258	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 259	[c=5]movsi_to_tr_unspec/1
	pow2		# 230	[c=4]*pow_tr
	load8! &5 	#X4	# 231	[c=6]*muldi3/2
	mult
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 263	[c=12]*peep2_cbranchsi_reverse
	# - EQ
	load4! &4 	#X3
	xor	
	jump_zero! .L287.l_o072f5a
	# END CBRANCH
	push! 1		# 5	[c=4]movsi_push_pop
	store8! &4 	#X3
	load4! &3 	#X3	# 271	[c=4]movsi_push_pop
	store4! &8
	jump! .L301.l_o072f5a		# 284	[c=4]jump
.L292.l_o072f5a:
	push! 0		# 8	[c=4]movsi_push_pop
	store8! &4 	#X3
	load4! &3 	#X3	# 274	[c=4]movsi_push_pop
	store4! &8
	jump! .L301.l_o072f5a		# 286	[c=4]jump
.L300.l_o072f5a:
	push! 1		# 6	[c=4]movsi_push_pop
	store8! &4 	#X3
	load4! &3 	#X3	# 277	[c=4]movsi_push_pop
	store4! &8
.L301.l_o072f5a:

	# epilogue
	set_sp! &6
	return

# FUNCTION ENDS:__any_on

.Li_p05_3415.l_o072f5a:
	data4 [5]
	data4 [25]
	data4 [125]
	EXPORT	__mprec_tinytens
__mprec_tinytens:
	data4 [2547550652]
	data4 [1016910514]
	data4 [3584599859]
	data4 [961148451]
	data4 [1156884285]
	data4 [849678333]
	data4 [3482097565]
	data4 [626768392]
	data4 [1689022275]
	data4 [180880936]
	EXPORT	__mprec_bigtens
__mprec_bigtens:
	data4 [937459712]
	data4 [1128383353]
	data4 [3037031959]
	data4 [1184086197]
	data4 [3913284085]
	data4 [1295535875]
	data4 [4180679986]
	data4 [1518499656]
	data4 [2138292028]
	data4 [1964330973]
	EXPORT	__mprec_tens
__mprec_tens:
	data4 [0]
	data4 [1072693248]
	data4 [0]
	data4 [1076101120]
	data4 [0]
	data4 [1079574528]
	data4 [0]
	data4 [1083129856]
	data4 [0]
	data4 [1086556160]
	data4 [0]
	data4 [1090021888]
	data4 [0]
	data4 [1093567616]
	data4 [0]
	data4 [1097011920]
	data4 [0]
	data4 [1100470148]
	data4 [0]
	data4 [1104006501]
	data4 [536870912]
	data4 [1107468383]
	data4 [3892314112]
	data4 [1110919286]
	data4 [2717908992]
	data4 [1114446484]
	data4 [3846176768]
	data4 [1117925532]
	data4 [512753664]
	data4 [1121369284]
	data4 [640942080]
	data4 [1124887541]
	data4 [937459712]
	data4 [1128383353]
	data4 [2245566464]
	data4 [1131820119]
	data4 [1733216256]
	data4 [1135329645]
	data4 [1620131072]
	data4 [1138841828]
	data4 [2025163840]
	data4 [1142271773]
	data4 [3605196624]
	data4 [1145772772]
	data4 [105764242]
	data4 [1149300943]
	data4 [3353430774]
	data4 [1152724226]
	data4 [2044304820]
	data4 [1156216899]
#	IMPORT __assert_func
#	IMPORT memcpy
#	IMPORT _calloc_r
#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: o19c873
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"readr.c"
#	.text

# FUNCTION BEGINS:_read_r
	EXPORT	_read_r
_read_r:
	# prologue (2 GPRs)
	push! 0
	push! 0

	push! 0		# 9	[c=4]movsi_push_pop
	store4! errno
	load8! &6	# 10	[c=2]pushdi1_not_fp/1
	load8! &6	# 11	[c=2]pushdi1_not_fp/1
	load4! &6	# 12	[c=2]pushsi1_not_fp/1
	call! read		# 13	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	load4! &0 	#AR	# 15	[c=5]movsi_to_tr_unspec/1
	sigx4		# 17	[c=6]*extendsidi2
	store8! &1 	#AR	# 18	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ	# 20	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	push! -1	
	xor	
	jump_zero! .L8.l_o19c873
	# END CBRANCH
.L1.l_o19c873:
	load8! &0 	#AR	# 34	[c=4]movdi_push_pop
	store8! &4
	jump! .L9.l_o19c873		# 56	[c=4]jump
.L8.l_o19c873:
	load4! errno	# 22	[c=1]movsi_push_pop
	store8! &2 	#X1
	# CBRANCH EQ0	# 23	[c=12]cbranchsi4_internal
	load4! &1 	#X1
	jump_zero! .L1.l_o19c873
	# END CBRANCH
	load4! &1 	#X1	# 25	[c=5]movsi_to_tr_unspec/1
	load8! &4	# 27	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	load8! &0 	#AR	# 51	[c=4]movdi_push_pop
	store8! &4
.L9.l_o19c873:

	# epilogue
	set_sp! &2
	return

# FUNCTION ENDS:_read_r

#	IMPORT read
#	IMPORT errno
#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: o4d62fc
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"mallocr.c"
#	.text
	#peephole popdi+cmp rev
	#peephole pop+cmp
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop+pusharg
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+ind push offset
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+ind push offset
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop+cmp
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole move
	#peephole binop1+deadreg+binop2
	#peephole pop(deadreg)+push
	#peephole push+pop+deadreg+binop
	#peephole binop1+deadreg+binop2
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push
	#peephole pop(deadreg)+push
	#peephole pop+push+commut(di)
	#peephole push+pop+deadreg+binop
	#peephole pop+cmp
	#peephole move
	#peephole binop1+deadreg+binop2
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+ind push offset
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole push+add+pop+push+ind pop offset
	#peephole rdx1+rdx2 (+)
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+ind push offset
	#peephole pop(deadreg)+push
	#peephole pop+cmp
	#peephole move
	#peephole nop+set
	#peephole pop(deadreg)+ind push offset
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop(deadreg)+push
	#peephole redundant blockage insn

# FUNCTION BEGINS:_realloc_r
	EXPORT	_realloc_r
_realloc_r:
	# prologue (10 GPRs)

	set_sp! &-10

	load8! &12	# 3	[c=2]movdi_push_pop
	store8! &3 	#X2
	# CBRANCH EQ0	# 39	[c=12]cbranchdi4_internal
	load8! &2 	#X2
	jump_zero! .L54.l_o4d62fc
	# END CBRANCH
	load8! &11	# 49	[c=2]pushdi1_not_fp/1
	call! __malloc_lock		# 50	[c=5]*call_pop_0/0
	set_sp! (+ &0 8)
	

	load8! &2 	#X2	# 51	[c=5]movdi_to_tr_unspec/1
	add! -16		# 53	[c=4]*adddi/0
	store8! &6 	#X5	# 54	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 57	[c=5]movdi_to_tr_unspec/1
	add! -16		# 59	[c=4]*adddi/0
	add! 8	# 1518	[c=4]*peep2_mov_from_mem_tr_to_tr_ind_offset_pushdi_unspec
	load8
	store8! &2 	#X1	# 64	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 66	[c=5]movdi_to_tr_unspec/1
	and! 0xfffffffffffffffc		# 68	[c=4]*anddi3/0
	store8! &5 	#X4	# 69	[c=4]movdi_from_tr_unspec/0
	load8! &13	# 71	[c=5]movdi_to_tr_unspec/1
	add! 23		# 73	[c=4]*adddi/0
	store8! &1 	#AR	# 74	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 76	[c=12]cbranchdi4_internal
	push! 46	
	load8! &1 	#AR
	lt_u	
	jump_zero! .L40.l_o4d62fc
	# END CBRANCH
	load8! &0 	#AR	# 78	[c=5]movdi_to_tr_unspec/1
	and! 0xfffffffffffffff0		# 80	[c=4]*anddi3/0
	store8! &4 	#X3	# 81	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 83	[c=12]cbranchdi4_internal
	push! 2147483647	
	load8! &4 	#X3
	lt_u	
	not	
	jump_zero! .L5.l_o4d62fc
	# END CBRANCH
	# CBRANCH	# 86	[c=14]cbranchdi4_internal
	load8! &3 	#X3
	load8! &14
	lt_u	
	not	
	jump_zero! .L5.l_o4d62fc
	# END CBRANCH
.L6.l_o4d62fc:
	load8! &5 	#X5	# 99	[c=5]movdi_to_tr_unspec/1
	load8! &5 	#X4	# 101	[c=6]*adddi/2
	add
	store8! &7 	#X6	# 102	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 104	[c=12]cbranchdi4_internal
	load8! &4 	#X4
	add! -9223372036854775808	
	load8! &4 	#X3
	add! -9223372036854775808	
	lt_u	
	jump_zero! .L7.l_o4d62fc
	# END CBRANCH
	load8! (+ __malloc_av_ 16)	# 1516	[c=1]movdi_push_pop
	store8! &1 	#AR
	load8! &6 	#X6	# 111	[c=11]movdi_to_tr_unspec/2
	add! 8	
	load8	
	#	
	store8! &8 	#X7	# 113	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ	# 115	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	load8! &7 	#X6
	xor	
	jump_zero! .L8.l_o4d62fc
	# END CBRANCH
	load8! &7 	#X7	# 117	[c=5]movdi_to_tr_unspec/1
	and! 0xfffffffffffffffe		# 119	[c=4]*anddi3/0
	load8! &7 	#X6	# 1510	[c=6]*adddi/2
	add
	add! 8	# 1512	[c=4]*peep2_mov_from_mem_tr_to_tr_ind_offset_pushdi_unspec
	load8
	and! 0x1		# 133	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_not_zero! .L55.l_o4d62fc	# 1515	[c=12]*peep2_cbranchdi
	# END CBRANCH
	load8! &7 	#X7	# 1231	[c=5]movdi_to_tr_unspec/1
	and! 0xfffffffffffffffc		# 1233	[c=4]*anddi3/0
	store8! &9 	#X8	# 1234	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 1236	[c=5]movdi_to_tr_unspec/1
	load8! &9 	#X8	# 1238	[c=6]*adddi/2
	add
	store8! &8 	#X7	# 1239	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 1243	[c=12]cbranchdi4_internal
	load8! &7 	#X7
	add! -9223372036854775808	
	load8! &4 	#X3
	add! -9223372036854775808	
	lt_u	
	jump_zero! .L56.l_o4d62fc
	# END CBRANCH
.L38.l_o4d62fc:
	load8! &1 	#X1	# 224	[c=5]movdi_to_tr_unspec/1
	and! 0x1		# 226	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_not_zero! .L11.l_o4d62fc	# 1489	[c=12]*peep2_cbranchdi
	# END CBRANCH
	load8! &2 	#X2	# 232	[c=5]movdi_to_tr_unspec/1
	add! -16		# 234	[c=4]*adddi/0
	load8		# 1479	[c=4]*peep2_mov_from_mem_tr_to_tr_ind_pushdi_unspec
	neg		# 243	[c=3]*negdi2
	load8! &6 	#X5	# 1483	[c=6]*adddi/2
	add
	store8! &8 	#X7	# 1484	[c=4]movdi_from_tr_unspec/0
	load8! &7 	#X7	# 1485	[c=11]movdi_to_tr_unspec/2
	add! 8	
	load8	
	#	
	and! 0xfffffffffffffffc		# 1487	[c=4]*anddi3/0
	store8! &2 	#X1	# 1488	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 260	[c=12]cbranchdi4_internal
	load8! &6 	#X6
	jump_zero! .L12.l_o4d62fc
	# END CBRANCH
	load8! &4 	#X4	# 262	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 264	[c=6]*adddi/2
	add
	load8! &9 	#X8	# 1477	[c=6]*adddi/2
	add
	store8! &9 	#X8	# 1478	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ	# 273	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	load8! &7 	#X6
	xor	
	jump_zero! .L57.l_o4d62fc
	# END CBRANCH
	# CBRANCH	# 495	[c=12]cbranchdi4_internal
	load8! &8 	#X8
	add! -9223372036854775808	
	load8! &4 	#X3
	add! -9223372036854775808	
	lt_u	
	jump_zero! .L58.l_o4d62fc
	# END CBRANCH
.L12.l_o4d62fc:
	# CBRANCH EQ0	# 684	[c=12]cbranchdi4_internal
	load8! &7 	#X7
	jump_zero! .L11.l_o4d62fc
	# END CBRANCH
	load8! &4 	#X4	# 686	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 688	[c=6]*adddi/2
	add
	store8! &9 	#X8	# 689	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 692	[c=12]cbranchdi4_internal
	load8! &8 	#X8
	add! -9223372036854775808	
	load8! &4 	#X3
	add! -9223372036854775808	
	lt_u	
	jump_zero! .L59.l_o4d62fc
	# END CBRANCH
.L11.l_o4d62fc:
	load8! &13	# 865	[c=2]pushdi1_not_fp/1
	load8! &12	# 866	[c=2]pushdi1_not_fp/1
	call! _malloc_r		# 867	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load8! &0 	#AR	# 868	[c=4]movdi_push_pop
	store8! &7 	#X6
	# CBRANCH EQ0	# 869	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L60.l_o4d62fc
	# END CBRANCH
	load8! &0 	#AR	# 877	[c=5]movdi_to_tr_unspec/1
	add! -16		# 879	[c=4]*adddi/0
	store8! &1 	#AR	# 880	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 883	[c=5]movdi_to_tr_unspec/1
	add! -16		# 885	[c=4]*adddi/0
	add! 8	# 1431	[c=4]*peep2_mov_from_mem_tr_to_tr_ind_offset_pushdi_unspec
	load8
	and! 0xfffffffffffffffe		# 894	[c=4]*anddi3/0
	load8! &6 	#X5	# 1435	[c=6]*adddi/2
	add
	# CBRANCH - peep (modesize=8)
	# - EQ
	load8! &1 	#AR	# 1437	[c=12]*peep2_cbranchdi
	xor	
	jump_zero! .L61.l_o4d62fc
	# END CBRANCH
	load8! &4 	#X4	# 939	[c=5]movdi_to_tr_unspec/1
	add! -8		# 941	[c=4]*adddi/0
	store8! &1 	#AR	# 942	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 944	[c=12]cbranchdi4_internal
	push! 72	
	load8! &1 	#AR
	lt_u	
	not	
	jump_zero! .L29.l_o4d62fc
	# END CBRANCH
	load8! &2 	#X2	# 946	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	store8! &4 	#X3	# 948	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 950	[c=12]cbranchdi4_internal
	push! 39	
	load8! &1 	#AR
	lt_u	
	jump_zero! .L44.l_o4d62fc
	# END CBRANCH
	load8! &3 	#X3	# 952	[c=5]movdi_to_tr_unspec/1
	load8! &7 	#X6	# 954	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load8! &2 	#X2	# 956	[c=11]movdi_to_tr_unspec/2
	add! 8	
	load8	
	#	
	load8! &7 	#X6	# 962	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	# CBRANCH	# 964	[c=12]cbranchdi4_internal
	push! 55	
	load8! &1 	#AR
	lt_u	
	not	
	jump_zero! .L31.l_o4d62fc
	# END CBRANCH
	load8! &2 	#X2	# 966	[c=5]movdi_to_tr_unspec/1
	add! 16		# 968	[c=4]*adddi/0
	store8! &2 	#X1	# 969	[c=4]movdi_from_tr_unspec/0
	load8! &6 	#X6	# 971	[c=5]movdi_to_tr_unspec/1
	add! 16		# 973	[c=4]*adddi/0
	store8! &1 	#AR	# 974	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 976	[c=11]movdi_to_tr_unspec/2
	add! 16	
	load8	
	#	
	store8! &4 	#X3	# 978	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 1052	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 1054	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load8! &1 	#X1	# 1056	[c=11]movdi_to_tr_unspec/2
	add! 8	
	load8	
	#	
	load8! &1 	#AR	# 1062	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &1 	#X1	# 1064	[c=11]movdi_to_tr_unspec/2
	add! 16	
	load8	
	#	
	load8! &1 	#AR	# 1070	[c=4]movdi_from_tr_unspec/1
	add! 16	
	store8	
	#	
.L33.l_o4d62fc:
	load8! &2 	#X2	# 1082	[c=4]pushdi1_not_fp/1
	load8! &12	# 1083	[c=2]pushdi1_not_fp/1
	call! _free_r		# 1084	[c=5]*call_pop_0/0
	set_sp! (+ &0 16)
	

	load8! &11	# 1085	[c=2]pushdi1_not_fp/1
	call! __malloc_unlock		# 1086	[c=5]*call_pop_0/0
	set_sp! (+ &0 8)
	

.L1.l_o4d62fc:
	load8! &6 	#X6	# 1273	[c=4]movdi_push_pop
	store8! &12
	jump! .L62.l_o4d62fc		# 1771	[c=4]jump
.L40.l_o4d62fc:
	push! 32		# 6	[c=4]movdi_push_pop
	store8! &4 	#X3
	# CBRANCH	# 1558	[c=14]cbranchdi4_internal
	load8! &3 	#X3
	load8! &14
	lt_u	
	jump_zero! .L6.l_o4d62fc
	# END CBRANCH
.L5.l_o4d62fc:
	push! 12		# 89	[c=3]movsi_to_tr_unspec/0
	load8! &12	# 1517	[c=2]movdi_push_pop
	store8! &2 	#AR
	load8! &1 	#AR	# 91	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	push! 0		# 34	[c=4]movdi_push_pop
	store8! &7 	#X6
	load8! &6 	#X6	# 1561	[c=4]movdi_push_pop
	store8! &12
	jump! .L62.l_o4d62fc		# 1773	[c=4]jump
.L56.l_o4d62fc:
	load8! &6 	#X6	# 200	[c=11]movdi_to_tr_unspec/2
	add! 24	
	load8	
	#	
	store8! &1 	#AR	# 202	[c=4]movdi_from_tr_unspec/0
	load8! &6 	#X6	# 204	[c=11]movdi_to_tr_unspec/2
	add! 16	
	load8	
	#	
	store8! &2 	#X1	# 206	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 208	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 210	[c=4]movdi_from_tr_unspec/1
	add! 24	
	store8	
	#	
	load8! &1 	#X1	# 212	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 214	[c=4]movdi_from_tr_unspec/1
	add! 16	
	store8	
	#	
	load8! &5 	#X5	# 216	[c=5]movdi_to_tr_unspec/1
	load8! &8 	#X7	# 218	[c=6]*adddi/2
	add
	store8! &7 	#X6	# 219	[c=4]movdi_from_tr_unspec/0
	load8! &7 	#X7	# 24	[c=4]movdi_push_pop
	store8! &5 	#X4
.L7.l_o4d62fc:
	load8! &4 	#X4	# 1091	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 1093	[c=14]*subdi3/2
	sub
	store8! &1 	#AR	# 1094	[c=4]movdi_from_tr_unspec/0
	load8! &5 	#X5	# 1416	[c=11]movdi_to_tr_unspec/2
	add! 8	
	load8	
	#	
	and! 0x1		# 1418	[c=4]*anddi3/0
	store8! &2 	#X1	# 1419	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 1105	[c=12]cbranchdi4_internal
	push! 31	
	load8! &1 	#AR
	lt_u	
	not	
	jump_zero! .L63.l_o4d62fc
	# END CBRANCH
	load8! &4 	#X4	# 1155	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 1157	[c=6]*iordi3/2
	or
	load8! &6 	#X5	# 1162	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &6 	#X6	# 1402	[c=11]movdi_to_tr_unspec/2
	add! 8	
	load8	
	#	
	or! 0x1		# 1404	[c=4]*iordi3/0
	load8! &7 	#X6	# 1175	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &11	# 1179	[c=2]pushdi1_not_fp/1
	call! __malloc_unlock		# 1180	[c=5]*call_pop_0/0
	set_sp! (+ &0 8)
	

	load8! &2 	#X2	# 36	[c=4]movdi_push_pop
	store8! &7 	#X6
.L64.l_o4d62fc:
	load8! &6 	#X6	# 1564	[c=4]movdi_push_pop
	store8! &12
	jump! .L62.l_o4d62fc		# 1776	[c=4]jump
.L55.l_o4d62fc:
	load8! &1 	#X1	# 1219	[c=5]movdi_to_tr_unspec/1
	and! 0x1		# 1221	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_not_zero! .L11.l_o4d62fc	# 1390	[c=12]*peep2_cbranchdi
	# END CBRANCH
	load8! &2 	#X2	# 1187	[c=5]movdi_to_tr_unspec/1
	add! -16		# 1189	[c=4]*adddi/0
	load8		# 1391	[c=4]*peep2_mov_from_mem_tr_to_tr_ind_pushdi_unspec
	neg		# 1198	[c=3]*negdi2
	load8! &6 	#X5	# 1395	[c=6]*adddi/2
	add
	store8! &8 	#X7	# 1396	[c=4]movdi_from_tr_unspec/0
	load8! &7 	#X7	# 1397	[c=11]movdi_to_tr_unspec/2
	add! 8	
	load8	
	#	
	and! 0xfffffffffffffffc		# 1399	[c=4]*anddi3/0
	store8! &2 	#X1	# 1400	[c=4]movdi_from_tr_unspec/0
	jump! .L12.l_o4d62fc		# 1778	[c=4]jump
.L54.l_o4d62fc:
	load8! &13	# 41	[c=2]pushdi1_not_fp/1
	load8! &12	# 42	[c=2]pushdi1_not_fp/1
	call! _malloc_r		# 43	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load8! &0 	#AR	# 44	[c=4]movdi_push_pop
	store8! &7 	#X6
	load8! &6 	#X6	# 1567	[c=4]movdi_push_pop
	store8! &12
	jump! .L62.l_o4d62fc		# 1780	[c=4]jump
.L63.l_o4d62fc:
	load8! &5 	#X5	# 1107	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 1109	[c=6]*adddi/2
	add
	store8! &5 	#X4	# 1110	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 1112	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 1114	[c=6]*iordi3/2
	or
	load8! &6 	#X5	# 1119	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &0 	#AR	# 1121	[c=5]movdi_to_tr_unspec/1
	or! 0x1		# 1123	[c=4]*iordi3/0
	load8! &5 	#X4	# 1128	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &6 	#X6	# 1409	[c=11]movdi_to_tr_unspec/2
	add! 8	
	load8	
	#	
	or! 0x1		# 1411	[c=4]*iordi3/0
	load8! &7 	#X6	# 1141	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &4 	#X4	# 1143	[c=5]movdi_to_tr_unspec/1
	add! 16		# 1145	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 1415	[c=0]*peep2_pop_pusharg
	load8! &12	# 1149	[c=2]pushdi1_not_fp/1
	call! _free_r		# 1150	[c=5]*call_pop_0/0
	set_sp! (+ &0 16)
	

	load8! &11	# 1570	[c=2]pushdi1_not_fp/1
	call! __malloc_unlock		# 1571	[c=5]*call_pop_0/0
	set_sp! (+ &0 8)
	

	load8! &2 	#X2	# 1572	[c=4]movdi_push_pop
	store8! &7 	#X6
	jump! .L64.l_o4d62fc		# 1783	[c=4]jump
.L8.l_o4d62fc:
	load8! &7 	#X7	# 1250	[c=5]movdi_to_tr_unspec/1
	and! 0xfffffffffffffffc		# 1252	[c=4]*anddi3/0
	store8! &9 	#X8	# 1253	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 1255	[c=5]movdi_to_tr_unspec/1
	load8! &9 	#X8	# 1257	[c=6]*adddi/2
	add
	store8! &8 	#X7	# 1258	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 1261	[c=5]movdi_to_tr_unspec/1
	add! 32		# 1263	[c=4]*adddi/0
	# CBRANCH - peep (modesize=8)
	# - reverse 
	add! -9223372036854775808		# 1389	[c=12]*peep2_cbranchdi_reverse
	load8! &8 	#X7
	add! -9223372036854775808	
	gt_u	
	not	
	jump_zero! .L38.l_o4d62fc
	# END CBRANCH
	load8! &5 	#X5	# 141	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 143	[c=6]*adddi/2
	add
	store8! &1 	#AR	# 144	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 1490	[c=4]movdi_push_pop
	store8! (+ __malloc_av_ 16)
	load8! &7 	#X7	# 1491	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 1493	[c=14]*subdi3/2
	sub
	or! 0x1		# 1494	[c=4]*iordi3/0
	load8! &1 	#AR	# 163	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &2 	#X2	# 166	[c=5]movdi_to_tr_unspec/1
	add! -16		# 168	[c=4]*adddi/0
	add! 8	# 1497	[c=4]*peep2_mov_from_mem_tr_to_tr_ind_offset_pushdi_unspec
	load8
	and! 0x1		# 177	[c=4]*anddi3/0
	load8! &4 	#X3	# 182	[c=6]*iordi3/2
	or
	load8! &3 	#X2	# 1503	[c=5]movdi_to_tr_unspec/1
	add! -8		# 1508	[c=4]*adddi/0
	store8		# 1507	[c=4]*peep2_mov_from_tr_to_mem_tr_ind_popdi_unspec
	load8! &11	# 195	[c=2]pushdi1_not_fp/1
	call! __malloc_unlock		# 196	[c=5]*call_pop_0/0
	set_sp! (+ &0 8)
	

	load8! &2 	#X2	# 35	[c=4]movdi_push_pop
	store8! &7 	#X6
	load8! &6 	#X6	# 1575	[c=4]movdi_push_pop
	store8! &12
	jump! .L62.l_o4d62fc		# 1785	[c=4]jump
.L61.l_o4d62fc:
	load8! &6 	#X6	# 905	[c=5]movdi_to_tr_unspec/1
	add! -16		# 907	[c=4]*adddi/0
	add! 8	# 1427	[c=4]*peep2_mov_from_mem_tr_to_tr_ind_offset_pushdi_unspec
	load8
	and! 0xfffffffffffffffc		# 916	[c=4]*anddi3/0
	load8! &5 	#X4	# 926	[c=6]*adddi/2
	add
	store8! &5 	#X4	# 927	[c=4]movdi_from_tr_unspec/0
	load8! &5 	#X5	# 930	[c=5]movdi_to_tr_unspec/1
	load8! &5 	#X4	# 932	[c=6]*adddi/2
	add
	store8! &7 	#X6	# 933	[c=4]movdi_from_tr_unspec/0
	jump! .L7.l_o4d62fc		# 1787	[c=4]jump
.L44.l_o4d62fc:
	load8! &6 	#X6	# 19	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &2 	#X2	# 20	[c=4]movdi_push_pop
	store8! &2 	#X1
	load8! &3 	#X3	# 1578	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 1580	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load8! &1 	#X1	# 1581	[c=11]movdi_to_tr_unspec/2
	add! 8	
	load8	
	#	
	load8! &1 	#AR	# 1583	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &1 	#X1	# 1584	[c=11]movdi_to_tr_unspec/2
	add! 16	
	load8	
	#	
	load8! &1 	#AR	# 1586	[c=4]movdi_from_tr_unspec/1
	add! 16	
	store8	
	#	
	jump! .L33.l_o4d62fc		# 1789	[c=4]jump
.L59.l_o4d62fc:
	load8! &7 	#X7	# 694	[c=11]movdi_to_tr_unspec/2
	add! 24	
	load8	
	#	
	store8! &1 	#AR	# 696	[c=4]movdi_from_tr_unspec/0
	load8! &7 	#X7	# 698	[c=11]movdi_to_tr_unspec/2
	add! 16	
	load8	
	#	
	store8! &2 	#X1	# 700	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 702	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 704	[c=4]movdi_from_tr_unspec/1
	add! 24	
	store8	
	#	
	load8! &1 	#X1	# 706	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 708	[c=4]movdi_from_tr_unspec/1
	add! 16	
	store8	
	#	
	load8! &7 	#X7	# 710	[c=5]movdi_to_tr_unspec/1
	add! 16		# 712	[c=4]*adddi/0
	store8! &6 	#X5	# 713	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 715	[c=5]movdi_to_tr_unspec/1
	add! -8		# 717	[c=4]*adddi/0
	store8! &1 	#AR	# 718	[c=4]movdi_from_tr_unspec/0
	load8! &7 	#X7	# 720	[c=5]movdi_to_tr_unspec/1
	load8! &9 	#X8	# 722	[c=6]*adddi/2
	add
	store8! &7 	#X6	# 723	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 725	[c=12]cbranchdi4_internal
	push! 72	
	load8! &1 	#AR
	lt_u	
	not	
	jump_zero! .L23.l_o4d62fc
	# END CBRANCH
	load8! &2 	#X2	# 727	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	store8! &2 	#X1	# 729	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 731	[c=12]cbranchdi4_internal
	push! 39	
	load8! &1 	#AR
	lt_u	
	jump_zero! .L43.l_o4d62fc
	# END CBRANCH
	load8! &1 	#X1	# 733	[c=5]movdi_to_tr_unspec/1
	load8! &8 	#X7	# 735	[c=4]movdi_from_tr_unspec/1
	add! 16	
	store8	
	#	
	load8! &2 	#X2	# 737	[c=11]movdi_to_tr_unspec/2
	add! 8	
	load8	
	#	
	load8! &8 	#X7	# 743	[c=4]movdi_from_tr_unspec/1
	add! 24	
	store8	
	#	
	# CBRANCH	# 745	[c=12]cbranchdi4_internal
	push! 55	
	load8! &1 	#AR
	lt_u	
	not	
	jump_zero! .L25.l_o4d62fc
	# END CBRANCH
	load8! &2 	#X2	# 747	[c=5]movdi_to_tr_unspec/1
	add! 16		# 749	[c=4]*adddi/0
	store8! &5 	#X4	# 750	[c=4]movdi_from_tr_unspec/0
	load8! &7 	#X7	# 752	[c=5]movdi_to_tr_unspec/1
	add! 32		# 754	[c=4]*adddi/0
	store8! &1 	#AR	# 755	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 757	[c=11]movdi_to_tr_unspec/2
	add! 16	
	load8	
	#	
	store8! &2 	#X1	# 759	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 16	[c=4]movdi_push_pop
	store8! &3 	#X2
	load8! &1 	#X1	# 833	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 835	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load8! &2 	#X2	# 837	[c=11]movdi_to_tr_unspec/2
	add! 8	
	load8	
	#	
	load8! &1 	#AR	# 843	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &2 	#X2	# 845	[c=11]movdi_to_tr_unspec/2
	add! 16	
	load8	
	#	
	load8! &1 	#AR	# 851	[c=4]movdi_from_tr_unspec/1
	add! 16	
	store8	
	#	
	load8! &5 	#X5	# 31	[c=4]movdi_push_pop
	store8! &3 	#X2
	load8! &8 	#X8	# 32	[c=4]movdi_push_pop
	store8! &5 	#X4
	load8! &7 	#X7	# 33	[c=4]movdi_push_pop
	store8! &6 	#X5
	jump! .L7.l_o4d62fc		# 1791	[c=4]jump
.L58.l_o4d62fc:
	load8! &6 	#X6	# 497	[c=11]movdi_to_tr_unspec/2
	add! 24	
	load8	
	#	
	store8! &1 	#AR	# 499	[c=4]movdi_from_tr_unspec/0
	load8! &6 	#X6	# 501	[c=11]movdi_to_tr_unspec/2
	add! 16	
	load8	
	#	
	store8! &2 	#X1	# 503	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 505	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 507	[c=4]movdi_from_tr_unspec/1
	add! 24	
	store8	
	#	
	load8! &1 	#X1	# 509	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 511	[c=4]movdi_from_tr_unspec/1
	add! 16	
	store8	
	#	
	load8! &7 	#X7	# 513	[c=11]movdi_to_tr_unspec/2
	add! 24	
	load8	
	#	
	store8! &1 	#AR	# 515	[c=4]movdi_from_tr_unspec/0
	load8! &7 	#X7	# 517	[c=11]movdi_to_tr_unspec/2
	add! 16	
	load8	
	#	
	store8! &2 	#X1	# 519	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 521	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 523	[c=4]movdi_from_tr_unspec/1
	add! 24	
	store8	
	#	
	load8! &1 	#X1	# 525	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 527	[c=4]movdi_from_tr_unspec/1
	add! 16	
	store8	
	#	
	load8! &7 	#X7	# 529	[c=5]movdi_to_tr_unspec/1
	add! 16		# 531	[c=4]*adddi/0
	store8! &6 	#X5	# 532	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 534	[c=5]movdi_to_tr_unspec/1
	add! -8		# 536	[c=4]*adddi/0
	store8! &1 	#AR	# 537	[c=4]movdi_from_tr_unspec/0
	load8! &7 	#X7	# 539	[c=5]movdi_to_tr_unspec/1
	load8! &9 	#X8	# 541	[c=6]*adddi/2
	add
	store8! &7 	#X6	# 542	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 544	[c=12]cbranchdi4_internal
	push! 72	
	load8! &1 	#AR
	lt_u	
	not	
	jump_zero! .L19.l_o4d62fc
	# END CBRANCH
	load8! &2 	#X2	# 546	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	store8! &2 	#X1	# 548	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 550	[c=12]cbranchdi4_internal
	push! 39	
	load8! &1 	#AR
	lt_u	
	jump_zero! .L42.l_o4d62fc
	# END CBRANCH
	load8! &1 	#X1	# 552	[c=5]movdi_to_tr_unspec/1
	load8! &8 	#X7	# 554	[c=4]movdi_from_tr_unspec/1
	add! 16	
	store8	
	#	
	load8! &2 	#X2	# 556	[c=11]movdi_to_tr_unspec/2
	add! 8	
	load8	
	#	
	load8! &8 	#X7	# 562	[c=4]movdi_from_tr_unspec/1
	add! 24	
	store8	
	#	
	# CBRANCH	# 564	[c=12]cbranchdi4_internal
	push! 55	
	load8! &1 	#AR
	lt_u	
	not	
	jump_zero! .L21.l_o4d62fc
	# END CBRANCH
	load8! &2 	#X2	# 566	[c=5]movdi_to_tr_unspec/1
	add! 16		# 568	[c=4]*adddi/0
	store8! &5 	#X4	# 569	[c=4]movdi_from_tr_unspec/0
	load8! &7 	#X7	# 571	[c=5]movdi_to_tr_unspec/1
	add! 32		# 573	[c=4]*adddi/0
	store8! &1 	#AR	# 574	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 576	[c=11]movdi_to_tr_unspec/2
	add! 16	
	load8	
	#	
	store8! &2 	#X1	# 578	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 12	[c=4]movdi_push_pop
	store8! &3 	#X2
	load8! &1 	#X1	# 652	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 654	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load8! &2 	#X2	# 656	[c=11]movdi_to_tr_unspec/2
	add! 8	
	load8	
	#	
	load8! &1 	#AR	# 662	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &2 	#X2	# 664	[c=11]movdi_to_tr_unspec/2
	add! 16	
	load8	
	#	
	load8! &1 	#AR	# 670	[c=4]movdi_from_tr_unspec/1
	add! 16	
	store8	
	#	
	load8! &5 	#X5	# 21	[c=4]movdi_push_pop
	store8! &3 	#X2
	load8! &8 	#X8	# 22	[c=4]movdi_push_pop
	store8! &5 	#X4
	load8! &7 	#X7	# 23	[c=4]movdi_push_pop
	store8! &6 	#X5
	jump! .L7.l_o4d62fc		# 1793	[c=4]jump
.L29.l_o4d62fc:
	load8! &0 	#AR	# 1076	[c=4]pushdi1_not_fp/1
	load8! &3 	#X2	# 1077	[c=4]pushdi1_not_fp/1
	load8! &8 	#X6	# 1078	[c=4]pushdi1_not_fp/1
	call! memmove		# 1079	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	load8! &2 	#X2	# 1589	[c=4]pushdi1_not_fp/1
	load8! &12	# 1590	[c=2]pushdi1_not_fp/1
	call! _free_r		# 1591	[c=5]*call_pop_0/0
	set_sp! (+ &0 16)
	

	load8! &11	# 1592	[c=2]pushdi1_not_fp/1
	call! __malloc_unlock		# 1593	[c=5]*call_pop_0/0
	set_sp! (+ &0 8)
	

	jump! .L1.l_o4d62fc		# 1795	[c=4]jump
.L57.l_o4d62fc:
	load8! &3 	#X3	# 275	[c=5]movdi_to_tr_unspec/1
	add! 32		# 277	[c=4]*adddi/0
	store8! &1 	#AR	# 278	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 281	[c=12]cbranchdi4_internal
	load8! &8 	#X8
	add! -9223372036854775808	
	load8! &1 	#AR
	add! -9223372036854775808	
	lt_u	
	not	
	jump_zero! .L12.l_o4d62fc
	# END CBRANCH
	load8! &7 	#X7	# 283	[c=11]movdi_to_tr_unspec/2
	add! 24	
	load8	
	#	
	store8! &1 	#AR	# 285	[c=4]movdi_from_tr_unspec/0
	load8! &7 	#X7	# 287	[c=11]movdi_to_tr_unspec/2
	add! 16	
	load8	
	#	
	store8! &2 	#X1	# 289	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 291	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 293	[c=4]movdi_from_tr_unspec/1
	add! 24	
	store8	
	#	
	load8! &1 	#X1	# 295	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 297	[c=4]movdi_from_tr_unspec/1
	add! 16	
	store8	
	#	
	load8! &7 	#X7	# 299	[c=5]movdi_to_tr_unspec/1
	add! 16		# 301	[c=4]*adddi/0
	store8! &7 	#X6	# 302	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 304	[c=5]movdi_to_tr_unspec/1
	add! -8		# 306	[c=4]*adddi/0
	store8! &1 	#AR	# 307	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 309	[c=12]cbranchdi4_internal
	push! 72	
	load8! &1 	#AR
	lt_u	
	not	
	jump_zero! .L14.l_o4d62fc
	# END CBRANCH
	load8! &2 	#X2	# 311	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	store8! &2 	#X1	# 313	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 315	[c=12]cbranchdi4_internal
	push! 39	
	load8! &1 	#AR
	lt_u	
	jump_zero! .L41.l_o4d62fc
	# END CBRANCH
	load8! &1 	#X1	# 317	[c=5]movdi_to_tr_unspec/1
	load8! &8 	#X7	# 319	[c=4]movdi_from_tr_unspec/1
	add! 16	
	store8	
	#	
	load8! &2 	#X2	# 321	[c=11]movdi_to_tr_unspec/2
	add! 8	
	load8	
	#	
	load8! &8 	#X7	# 327	[c=4]movdi_from_tr_unspec/1
	add! 24	
	store8	
	#	
	# CBRANCH	# 329	[c=12]cbranchdi4_internal
	push! 55	
	load8! &1 	#AR
	lt_u	
	not	
	jump_zero! .L16.l_o4d62fc
	# END CBRANCH
	load8! &2 	#X2	# 331	[c=5]movdi_to_tr_unspec/1
	add! 16		# 333	[c=4]*adddi/0
	store8! &5 	#X4	# 334	[c=4]movdi_from_tr_unspec/0
	load8! &7 	#X7	# 336	[c=5]movdi_to_tr_unspec/1
	add! 32		# 338	[c=4]*adddi/0
	store8! &1 	#AR	# 339	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 341	[c=11]movdi_to_tr_unspec/2
	add! 16	
	load8	
	#	
	store8! &2 	#X1	# 343	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 9	[c=4]movdi_push_pop
	store8! &3 	#X2
	load8! &1 	#X1	# 417	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 419	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load8! &2 	#X2	# 421	[c=11]movdi_to_tr_unspec/2
	add! 8	
	load8	
	#	
	load8! &1 	#AR	# 427	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &2 	#X2	# 429	[c=11]movdi_to_tr_unspec/2
	add! 16	
	load8	
	#	
	load8! &1 	#AR	# 435	[c=4]movdi_from_tr_unspec/1
	add! 16	
	store8	
	#	
.L18.l_o4d62fc:
	load8! &7 	#X7	# 447	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 449	[c=6]*adddi/2
	add
	store8! &1 	#AR	# 450	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 1452	[c=4]movdi_push_pop
	store8! (+ __malloc_av_ 16)
	load8! &8 	#X8	# 1453	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 1455	[c=14]*subdi3/2
	sub
	or! 0x1		# 1456	[c=4]*iordi3/0
	load8! &1 	#AR	# 469	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &7 	#X7	# 1463	[c=11]movdi_to_tr_unspec/2
	add! 8	
	load8	
	#	
	and! 0x1		# 1465	[c=4]*anddi3/0
	load8! &4 	#X3	# 1466	[c=6]*iordi3/2
	or
	load8! &8 	#X7	# 487	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &11	# 489	[c=2]pushdi1_not_fp/1
	call! __malloc_unlock		# 490	[c=5]*call_pop_0/0
	set_sp! (+ &0 8)
	

.L65.l_o4d62fc:
	load8! &6 	#X6	# 1596	[c=4]movdi_push_pop
	store8! &12
	jump! .L62.l_o4d62fc		# 1797	[c=4]jump
.L31.l_o4d62fc:
	load8! &2 	#X2	# 984	[c=11]movdi_to_tr_unspec/2
	add! 16	
	load8	
	#	
	load8! &7 	#X6	# 990	[c=4]movdi_from_tr_unspec/1
	add! 16	
	store8	
	#	
	load8! &2 	#X2	# 992	[c=11]movdi_to_tr_unspec/2
	add! 24	
	load8	
	#	
	load8! &7 	#X6	# 998	[c=4]movdi_from_tr_unspec/1
	add! 24	
	store8	
	#	
	# CBRANCH EQ	# 1000	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	push! 72	
	xor	
	jump_zero! .L32.l_o4d62fc
	# END CBRANCH
	load8! &2 	#X2	# 1002	[c=5]movdi_to_tr_unspec/1
	add! 32		# 1004	[c=4]*adddi/0
	store8! &2 	#X1	# 1005	[c=4]movdi_from_tr_unspec/0
	load8! &6 	#X6	# 1007	[c=5]movdi_to_tr_unspec/1
	add! 32		# 1009	[c=4]*adddi/0
	store8! &1 	#AR	# 1010	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 1012	[c=11]movdi_to_tr_unspec/2
	add! 32	
	load8	
	#	
	store8! &4 	#X3	# 1014	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 1599	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 1601	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load8! &1 	#X1	# 1602	[c=11]movdi_to_tr_unspec/2
	add! 8	
	load8	
	#	
	load8! &1 	#AR	# 1604	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &1 	#X1	# 1605	[c=11]movdi_to_tr_unspec/2
	add! 16	
	load8	
	#	
	load8! &1 	#AR	# 1607	[c=4]movdi_from_tr_unspec/1
	add! 16	
	store8	
	#	
	jump! .L33.l_o4d62fc		# 1799	[c=4]jump
.L43.l_o4d62fc:
	load8! &5 	#X5	# 18	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &1 	#X1	# 1610	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 1612	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load8! &2 	#X2	# 1613	[c=11]movdi_to_tr_unspec/2
	add! 8	
	load8	
	#	
	load8! &1 	#AR	# 1615	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &2 	#X2	# 1616	[c=11]movdi_to_tr_unspec/2
	add! 16	
	load8	
	#	
	load8! &1 	#AR	# 1618	[c=4]movdi_from_tr_unspec/1
	add! 16	
	store8	
	#	
	load8! &5 	#X5	# 1619	[c=4]movdi_push_pop
	store8! &3 	#X2
	load8! &8 	#X8	# 1620	[c=4]movdi_push_pop
	store8! &5 	#X4
	load8! &7 	#X7	# 1621	[c=4]movdi_push_pop
	store8! &6 	#X5
	jump! .L7.l_o4d62fc		# 1801	[c=4]jump
.L23.l_o4d62fc:
	load8! &0 	#AR	# 857	[c=4]pushdi1_not_fp/1
	load8! &3 	#X2	# 858	[c=4]pushdi1_not_fp/1
	load8! &7 	#X5	# 859	[c=4]pushdi1_not_fp/1
	call! memmove		# 860	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	load8! &5 	#X5	# 28	[c=4]movdi_push_pop
	store8! &3 	#X2
	load8! &8 	#X8	# 29	[c=4]movdi_push_pop
	store8! &5 	#X4
	load8! &7 	#X7	# 30	[c=4]movdi_push_pop
	store8! &6 	#X5
	jump! .L7.l_o4d62fc		# 1803	[c=4]jump
.L32.l_o4d62fc:
	load8! &2 	#X2	# 1020	[c=11]movdi_to_tr_unspec/2
	add! 32	
	load8	
	#	
	load8! &7 	#X6	# 1026	[c=4]movdi_from_tr_unspec/1
	add! 32	
	store8	
	#	
	load8! &2 	#X2	# 1028	[c=5]movdi_to_tr_unspec/1
	add! 48		# 1030	[c=4]*adddi/0
	store8! &2 	#X1	# 1031	[c=4]movdi_from_tr_unspec/0
	load8! &6 	#X6	# 1033	[c=5]movdi_to_tr_unspec/1
	add! 48		# 1035	[c=4]*adddi/0
	store8! &1 	#AR	# 1036	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 1038	[c=11]movdi_to_tr_unspec/2
	add! 40	
	load8	
	#	
	load8! &7 	#X6	# 1044	[c=4]movdi_from_tr_unspec/1
	add! 40	
	store8	
	#	
	load8! &2 	#X2	# 1046	[c=11]movdi_to_tr_unspec/2
	add! 48	
	load8	
	#	
	store8! &4 	#X3	# 1048	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 1624	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 1626	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load8! &1 	#X1	# 1627	[c=11]movdi_to_tr_unspec/2
	add! 8	
	load8	
	#	
	load8! &1 	#AR	# 1629	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &1 	#X1	# 1630	[c=11]movdi_to_tr_unspec/2
	add! 16	
	load8	
	#	
	load8! &1 	#AR	# 1632	[c=4]movdi_from_tr_unspec/1
	add! 16	
	store8	
	#	
	jump! .L33.l_o4d62fc		# 1805	[c=4]jump
.L42.l_o4d62fc:
	load8! &5 	#X5	# 14	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &1 	#X1	# 1635	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 1637	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load8! &2 	#X2	# 1638	[c=11]movdi_to_tr_unspec/2
	add! 8	
	load8	
	#	
	load8! &1 	#AR	# 1640	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &2 	#X2	# 1641	[c=11]movdi_to_tr_unspec/2
	add! 16	
	load8	
	#	
	load8! &1 	#AR	# 1643	[c=4]movdi_from_tr_unspec/1
	add! 16	
	store8	
	#	
	load8! &5 	#X5	# 1644	[c=4]movdi_push_pop
	store8! &3 	#X2
	load8! &8 	#X8	# 1645	[c=4]movdi_push_pop
	store8! &5 	#X4
	load8! &7 	#X7	# 1646	[c=4]movdi_push_pop
	store8! &6 	#X5
	jump! .L7.l_o4d62fc		# 1807	[c=4]jump
.L19.l_o4d62fc:
	load8! &0 	#AR	# 676	[c=4]pushdi1_not_fp/1
	load8! &3 	#X2	# 677	[c=4]pushdi1_not_fp/1
	load8! &7 	#X5	# 678	[c=4]pushdi1_not_fp/1
	call! memmove		# 679	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	load8! &5 	#X5	# 25	[c=4]movdi_push_pop
	store8! &3 	#X2
	load8! &8 	#X8	# 26	[c=4]movdi_push_pop
	store8! &5 	#X4
	load8! &7 	#X7	# 27	[c=4]movdi_push_pop
	store8! &6 	#X5
	jump! .L7.l_o4d62fc		# 1809	[c=4]jump
.L60.l_o4d62fc:
	load8! &11	# 871	[c=2]pushdi1_not_fp/1
	call! __malloc_unlock		# 872	[c=5]*call_pop_0/0
	set_sp! (+ &0 8)
	

	load8! &6 	#X6	# 1649	[c=4]movdi_push_pop
	store8! &12
	jump! .L62.l_o4d62fc		# 1811	[c=4]jump
.L25.l_o4d62fc:
	load8! &2 	#X2	# 765	[c=11]movdi_to_tr_unspec/2
	add! 16	
	load8	
	#	
	load8! &8 	#X7	# 771	[c=4]movdi_from_tr_unspec/1
	add! 32	
	store8	
	#	
	load8! &2 	#X2	# 773	[c=11]movdi_to_tr_unspec/2
	add! 24	
	load8	
	#	
	load8! &8 	#X7	# 779	[c=4]movdi_from_tr_unspec/1
	add! 40	
	store8	
	#	
	# CBRANCH EQ	# 781	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	push! 72	
	xor	
	jump_zero! .L26.l_o4d62fc
	# END CBRANCH
	load8! &2 	#X2	# 783	[c=5]movdi_to_tr_unspec/1
	add! 32		# 785	[c=4]*adddi/0
	store8! &5 	#X4	# 786	[c=4]movdi_from_tr_unspec/0
	load8! &7 	#X7	# 788	[c=5]movdi_to_tr_unspec/1
	add! 48		# 790	[c=4]*adddi/0
	store8! &1 	#AR	# 791	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 793	[c=11]movdi_to_tr_unspec/2
	add! 32	
	load8	
	#	
	store8! &2 	#X1	# 795	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 17	[c=4]movdi_push_pop
	store8! &3 	#X2
	load8! &1 	#X1	# 1652	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 1654	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load8! &2 	#X2	# 1655	[c=11]movdi_to_tr_unspec/2
	add! 8	
	load8	
	#	
	load8! &1 	#AR	# 1657	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &2 	#X2	# 1658	[c=11]movdi_to_tr_unspec/2
	add! 16	
	load8	
	#	
	load8! &1 	#AR	# 1660	[c=4]movdi_from_tr_unspec/1
	add! 16	
	store8	
	#	
	load8! &5 	#X5	# 1661	[c=4]movdi_push_pop
	store8! &3 	#X2
	load8! &8 	#X8	# 1662	[c=4]movdi_push_pop
	store8! &5 	#X4
	load8! &7 	#X7	# 1663	[c=4]movdi_push_pop
	store8! &6 	#X5
	jump! .L7.l_o4d62fc		# 1813	[c=4]jump
.L21.l_o4d62fc:
	load8! &2 	#X2	# 584	[c=11]movdi_to_tr_unspec/2
	add! 16	
	load8	
	#	
	load8! &8 	#X7	# 590	[c=4]movdi_from_tr_unspec/1
	add! 32	
	store8	
	#	
	load8! &2 	#X2	# 592	[c=11]movdi_to_tr_unspec/2
	add! 24	
	load8	
	#	
	load8! &8 	#X7	# 598	[c=4]movdi_from_tr_unspec/1
	add! 40	
	store8	
	#	
	# CBRANCH EQ	# 600	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	push! 72	
	xor	
	jump_zero! .L22.l_o4d62fc
	# END CBRANCH
	load8! &2 	#X2	# 602	[c=5]movdi_to_tr_unspec/1
	add! 32		# 604	[c=4]*adddi/0
	store8! &5 	#X4	# 605	[c=4]movdi_from_tr_unspec/0
	load8! &7 	#X7	# 607	[c=5]movdi_to_tr_unspec/1
	add! 48		# 609	[c=4]*adddi/0
	store8! &1 	#AR	# 610	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 612	[c=11]movdi_to_tr_unspec/2
	add! 32	
	load8	
	#	
	store8! &2 	#X1	# 614	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 13	[c=4]movdi_push_pop
	store8! &3 	#X2
	load8! &1 	#X1	# 1666	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 1668	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load8! &2 	#X2	# 1669	[c=11]movdi_to_tr_unspec/2
	add! 8	
	load8	
	#	
	load8! &1 	#AR	# 1671	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &2 	#X2	# 1672	[c=11]movdi_to_tr_unspec/2
	add! 16	
	load8	
	#	
	load8! &1 	#AR	# 1674	[c=4]movdi_from_tr_unspec/1
	add! 16	
	store8	
	#	
	load8! &5 	#X5	# 1675	[c=4]movdi_push_pop
	store8! &3 	#X2
	load8! &8 	#X8	# 1676	[c=4]movdi_push_pop
	store8! &5 	#X4
	load8! &7 	#X7	# 1677	[c=4]movdi_push_pop
	store8! &6 	#X5
	jump! .L7.l_o4d62fc		# 1815	[c=4]jump
.L41.l_o4d62fc:
	load8! &6 	#X6	# 10	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &1 	#X1	# 1680	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 1682	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load8! &2 	#X2	# 1683	[c=11]movdi_to_tr_unspec/2
	add! 8	
	load8	
	#	
	load8! &1 	#AR	# 1685	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &2 	#X2	# 1686	[c=11]movdi_to_tr_unspec/2
	add! 16	
	load8	
	#	
	load8! &1 	#AR	# 1688	[c=4]movdi_from_tr_unspec/1
	add! 16	
	store8	
	#	
	jump! .L18.l_o4d62fc		# 1817	[c=4]jump
.L14.l_o4d62fc:
	load8! &0 	#AR	# 441	[c=4]pushdi1_not_fp/1
	load8! &3 	#X2	# 442	[c=4]pushdi1_not_fp/1
	load8! &8 	#X6	# 443	[c=4]pushdi1_not_fp/1
	call! memmove		# 444	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	load8! &7 	#X7	# 1691	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 1693	[c=6]*adddi/2
	add
	store8! &1 	#AR	# 1694	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 1695	[c=4]movdi_push_pop
	store8! (+ __malloc_av_ 16)
	load8! &8 	#X8	# 1696	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 1698	[c=14]*subdi3/2
	sub
	or! 0x1		# 1699	[c=4]*iordi3/0
	load8! &1 	#AR	# 1701	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &7 	#X7	# 1702	[c=11]movdi_to_tr_unspec/2
	add! 8	
	load8	
	#	
	and! 0x1		# 1704	[c=4]*anddi3/0
	load8! &4 	#X3	# 1705	[c=6]*iordi3/2
	or
	load8! &8 	#X7	# 1707	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &11	# 1708	[c=2]pushdi1_not_fp/1
	call! __malloc_unlock		# 1709	[c=5]*call_pop_0/0
	set_sp! (+ &0 8)
	

	jump! .L65.l_o4d62fc		# 1820	[c=4]jump
.L26.l_o4d62fc:
	load8! &2 	#X2	# 801	[c=11]movdi_to_tr_unspec/2
	add! 32	
	load8	
	#	
	load8! &8 	#X7	# 807	[c=4]movdi_from_tr_unspec/1
	add! 48	
	store8	
	#	
	load8! &2 	#X2	# 809	[c=5]movdi_to_tr_unspec/1
	add! 48		# 811	[c=4]*adddi/0
	store8! &5 	#X4	# 812	[c=4]movdi_from_tr_unspec/0
	load8! &7 	#X7	# 814	[c=5]movdi_to_tr_unspec/1
	add! 64		# 816	[c=4]*adddi/0
	store8! &1 	#AR	# 817	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 819	[c=11]movdi_to_tr_unspec/2
	add! 40	
	load8	
	#	
	load8! &8 	#X7	# 825	[c=4]movdi_from_tr_unspec/1
	add! 56	
	store8	
	#	
	load8! &2 	#X2	# 827	[c=11]movdi_to_tr_unspec/2
	add! 48	
	load8	
	#	
	store8! &2 	#X1	# 829	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 15	[c=4]movdi_push_pop
	store8! &3 	#X2
	load8! &1 	#X1	# 1712	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 1714	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load8! &2 	#X2	# 1715	[c=11]movdi_to_tr_unspec/2
	add! 8	
	load8	
	#	
	load8! &1 	#AR	# 1717	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &2 	#X2	# 1718	[c=11]movdi_to_tr_unspec/2
	add! 16	
	load8	
	#	
	load8! &1 	#AR	# 1720	[c=4]movdi_from_tr_unspec/1
	add! 16	
	store8	
	#	
	load8! &5 	#X5	# 1721	[c=4]movdi_push_pop
	store8! &3 	#X2
	load8! &8 	#X8	# 1722	[c=4]movdi_push_pop
	store8! &5 	#X4
	load8! &7 	#X7	# 1723	[c=4]movdi_push_pop
	store8! &6 	#X5
	jump! .L7.l_o4d62fc		# 1822	[c=4]jump
.L22.l_o4d62fc:
	load8! &2 	#X2	# 620	[c=11]movdi_to_tr_unspec/2
	add! 32	
	load8	
	#	
	load8! &8 	#X7	# 626	[c=4]movdi_from_tr_unspec/1
	add! 48	
	store8	
	#	
	load8! &2 	#X2	# 628	[c=5]movdi_to_tr_unspec/1
	add! 48		# 630	[c=4]*adddi/0
	store8! &5 	#X4	# 631	[c=4]movdi_from_tr_unspec/0
	load8! &7 	#X7	# 633	[c=5]movdi_to_tr_unspec/1
	add! 64		# 635	[c=4]*adddi/0
	store8! &1 	#AR	# 636	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 638	[c=11]movdi_to_tr_unspec/2
	add! 40	
	load8	
	#	
	load8! &8 	#X7	# 644	[c=4]movdi_from_tr_unspec/1
	add! 56	
	store8	
	#	
	load8! &2 	#X2	# 646	[c=11]movdi_to_tr_unspec/2
	add! 48	
	load8	
	#	
	store8! &2 	#X1	# 648	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 11	[c=4]movdi_push_pop
	store8! &3 	#X2
	load8! &1 	#X1	# 1726	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 1728	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load8! &2 	#X2	# 1729	[c=11]movdi_to_tr_unspec/2
	add! 8	
	load8	
	#	
	load8! &1 	#AR	# 1731	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &2 	#X2	# 1732	[c=11]movdi_to_tr_unspec/2
	add! 16	
	load8	
	#	
	load8! &1 	#AR	# 1734	[c=4]movdi_from_tr_unspec/1
	add! 16	
	store8	
	#	
	load8! &5 	#X5	# 1735	[c=4]movdi_push_pop
	store8! &3 	#X2
	load8! &8 	#X8	# 1736	[c=4]movdi_push_pop
	store8! &5 	#X4
	load8! &7 	#X7	# 1737	[c=4]movdi_push_pop
	store8! &6 	#X5
	jump! .L7.l_o4d62fc		# 1824	[c=4]jump
.L16.l_o4d62fc:
	load8! &2 	#X2	# 349	[c=11]movdi_to_tr_unspec/2
	add! 16	
	load8	
	#	
	load8! &8 	#X7	# 355	[c=4]movdi_from_tr_unspec/1
	add! 32	
	store8	
	#	
	load8! &2 	#X2	# 357	[c=11]movdi_to_tr_unspec/2
	add! 24	
	load8	
	#	
	load8! &8 	#X7	# 363	[c=4]movdi_from_tr_unspec/1
	add! 40	
	store8	
	#	
	# CBRANCH EQ	# 365	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	push! 72	
	xor	
	jump_zero! .L17.l_o4d62fc
	# END CBRANCH
	load8! &2 	#X2	# 367	[c=5]movdi_to_tr_unspec/1
	add! 32		# 369	[c=4]*adddi/0
	store8! &5 	#X4	# 370	[c=4]movdi_from_tr_unspec/0
	load8! &7 	#X7	# 372	[c=5]movdi_to_tr_unspec/1
	add! 48		# 374	[c=4]*adddi/0
	store8! &1 	#AR	# 375	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 377	[c=11]movdi_to_tr_unspec/2
	add! 32	
	load8	
	#	
	store8! &2 	#X1	# 379	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 8	[c=4]movdi_push_pop
	store8! &3 	#X2
	load8! &1 	#X1	# 1740	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 1742	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load8! &2 	#X2	# 1743	[c=11]movdi_to_tr_unspec/2
	add! 8	
	load8	
	#	
	load8! &1 	#AR	# 1745	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &2 	#X2	# 1746	[c=11]movdi_to_tr_unspec/2
	add! 16	
	load8	
	#	
	load8! &1 	#AR	# 1748	[c=4]movdi_from_tr_unspec/1
	add! 16	
	store8	
	#	
	jump! .L18.l_o4d62fc		# 1826	[c=4]jump
.L17.l_o4d62fc:
	load8! &2 	#X2	# 385	[c=11]movdi_to_tr_unspec/2
	add! 32	
	load8	
	#	
	load8! &8 	#X7	# 391	[c=4]movdi_from_tr_unspec/1
	add! 48	
	store8	
	#	
	load8! &2 	#X2	# 393	[c=5]movdi_to_tr_unspec/1
	add! 48		# 395	[c=4]*adddi/0
	store8! &5 	#X4	# 396	[c=4]movdi_from_tr_unspec/0
	load8! &7 	#X7	# 398	[c=5]movdi_to_tr_unspec/1
	add! 64		# 400	[c=4]*adddi/0
	store8! &1 	#AR	# 401	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 403	[c=11]movdi_to_tr_unspec/2
	add! 40	
	load8	
	#	
	load8! &8 	#X7	# 409	[c=4]movdi_from_tr_unspec/1
	add! 56	
	store8	
	#	
	load8! &2 	#X2	# 411	[c=11]movdi_to_tr_unspec/2
	add! 48	
	load8	
	#	
	store8! &2 	#X1	# 413	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 7	[c=4]movdi_push_pop
	store8! &3 	#X2
	load8! &1 	#X1	# 1751	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 1753	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load8! &2 	#X2	# 1754	[c=11]movdi_to_tr_unspec/2
	add! 8	
	load8	
	#	
	load8! &1 	#AR	# 1756	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &2 	#X2	# 1757	[c=11]movdi_to_tr_unspec/2
	add! 16	
	load8	
	#	
	load8! &1 	#AR	# 1759	[c=4]movdi_from_tr_unspec/1
	add! 16	
	store8	
	#	
	jump! .L18.l_o4d62fc		# 1828	[c=4]jump
.L62.l_o4d62fc:

	# epilogue
	set_sp! &10
	return

# FUNCTION ENDS:_realloc_r

#	IMPORT memmove
#	IMPORT __malloc_unlock
#	IMPORT _free_r
#	IMPORT _malloc_r
#	IMPORT __malloc_av_
#	IMPORT __malloc_lock
#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: o4d86cf
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"reent.c"
#	.text

# FUNCTION BEGINS:cleanup_glue
	EXPORT	cleanup_glue
cleanup_glue:
	# prologue (3 GPRs)
	push! 0
	push! 0
	push! 0

	load8! &5	# 3	[c=2]movdi_push_pop
	store8! &3 	#X2
	load8! &2 	#X2	# 7	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	store8! &1 	#AR	# 9	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 11	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L2.l_o4d86cf
	# END CBRANCH
	load8! &0 	#AR	# 13	[c=4]pushdi1_not_fp/1
	load8! &5	# 14	[c=2]pushdi1_not_fp/1
	call! cleanup_glue		# 15	[c=5]*call_pop_0/0
	set_sp! (+ &0 16)
	

.L2.l_o4d86cf:
	load8! &2 	#X2	# 18	[c=4]pushdi1_not_fp/1
	load8! &5	# 19	[c=2]pushdi1_not_fp/1
	call! _free_r		# 20	[c=5]*call_pop_0/0
	set_sp! (+ &0 16)
	


	# epilogue
	set_sp! &3
	return

# FUNCTION ENDS:cleanup_glue

	#peephole pop+cmp
	#peephole pop(deadreg)+ind push

# FUNCTION BEGINS:_reclaim_reent
	EXPORT	_reclaim_reent
_reclaim_reent:
	# prologue (5 GPRs)

	set_sp! &-5

	load8! &6	# 2	[c=2]movdi_push_pop
	store8! &4 	#X3
	# CBRANCH EQ	# 8	[c=13]cbranchdi4_internal
	load8! _impure_ptr
	load8! &4 	#X3
	xor	
	jump_zero! .L8.l_o4d86cf
	# END CBRANCH
	load8! &3 	#X3	# 14	[c=11]movdi_to_tr_unspec/2
	add! 120	
	load8	
	#	
	store8! &2 	#X1	# 16	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 18	[c=12]cbranchdi4_internal
	load8! &1 	#X1
	jump_zero! .L11.l_o4d86cf
	# END CBRANCH
	push! 0		# 4	[c=4]movdi_push_pop
	store8! &5 	#X4
.L14.l_o4d86cf:
	load8! &1 	#X1	# 20	[c=5]movdi_to_tr_unspec/1
	load8! &5 	#X4	# 22	[c=6]*adddi/2
	add
	load8		# 204	[c=4]*peep2_mov_from_mem_tr_to_tr_ind_pushdi_unspec
	store8! &1 	#AR	# 27	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 29	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L12.l_o4d86cf
	# END CBRANCH
.L13.l_o4d86cf:
	load8! &0 	#AR	# 31	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	store8! &3 	#X2	# 33	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 35	[c=4]pushdi1_not_fp/1
	load8! &4 	#X3	# 36	[c=4]pushdi1_not_fp/1
	call! _free_r		# 37	[c=5]*call_pop_0/0
	set_sp! (+ &0 16)
	

	load8! &2 	#X2	# 38	[c=4]movdi_push_pop
	store8! &1 	#AR
	# CBRANCH EQ0	# 40	[c=12]cbranchdi4_internal
	load8! &2 	#X2
	jump_not_zero! .L13.l_o4d86cf
	# END CBRANCH
	load8! &3 	#X3	# 42	[c=11]movdi_to_tr_unspec/2
	add! 120	
	load8	
	#	
	store8! &2 	#X1	# 44	[c=4]movdi_from_tr_unspec/0
.L12.l_o4d86cf:
	load8! &4 	#X4	# 53	[c=5]movdi_to_tr_unspec/1
	add! 8		# 55	[c=4]*adddi/0
	store8! &5 	#X4	# 56	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 60	[c=12]cbranchdi4_internal
	load8! &4 	#X4
	push! 512	
	xor	
	push! 1	
	lt_u	
	jump_zero! .L14.l_o4d86cf
	# END CBRANCH
	load8! &1 	#X1	# 62	[c=4]pushdi1_not_fp/1
	load8! &4 	#X3	# 63	[c=4]pushdi1_not_fp/1
	call! _free_r		# 64	[c=5]*call_pop_0/0
	set_sp! (+ &0 16)
	

.L11.l_o4d86cf:
	load8! &3 	#X3	# 67	[c=11]movdi_to_tr_unspec/2
	add! 96	
	load8	
	#	
	store8! &1 	#AR	# 69	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 71	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L15.l_o4d86cf
	# END CBRANCH
	load8! &0 	#AR	# 73	[c=4]pushdi1_not_fp/1
	load8! &4 	#X3	# 74	[c=4]pushdi1_not_fp/1
	call! _free_r		# 75	[c=5]*call_pop_0/0
	set_sp! (+ &0 16)
	

.L15.l_o4d86cf:
	load8! &3 	#X3	# 78	[c=11]movdi_to_tr_unspec/2
	add! 504	
	load8	
	#	
	store8! &1 	#AR	# 80	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 82	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L19.l_o4d86cf
	# END CBRANCH
	load8! &3 	#X3	# 94	[c=5]movdi_to_tr_unspec/1
	add! 512		# 96	[c=4]*adddi/0
	store8! &5 	#X4	# 97	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ	# 100	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	load8! &5 	#X4
	xor	
	jump_zero! .L19.l_o4d86cf
	# END CBRANCH
.L20.l_o4d86cf:
	load8! &0 	#AR	# 102	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	store8! &3 	#X2	# 104	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 106	[c=4]pushdi1_not_fp/1
	load8! &4 	#X3	# 107	[c=4]pushdi1_not_fp/1
	call! _free_r		# 108	[c=5]*call_pop_0/0
	set_sp! (+ &0 16)
	

	load8! &2 	#X2	# 109	[c=4]movdi_push_pop
	store8! &1 	#AR
	# CBRANCH	# 111	[c=12]cbranchdi4_internal
	load8! &4 	#X4
	load8! &3 	#X2
	xor	
	push! 1	
	lt_u	
	jump_zero! .L20.l_o4d86cf
	# END CBRANCH
.L19.l_o4d86cf:
	load8! &3 	#X3	# 84	[c=11]movdi_to_tr_unspec/2
	add! 136	
	load8	
	#	
	store8! &1 	#AR	# 86	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 88	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L18.l_o4d86cf
	# END CBRANCH
	load8! &0 	#AR	# 117	[c=4]pushdi1_not_fp/1
	load8! &4 	#X3	# 118	[c=4]pushdi1_not_fp/1
	call! _free_r		# 119	[c=5]*call_pop_0/0
	set_sp! (+ &0 16)
	

.L18.l_o4d86cf:
	load8! &3 	#X3	# 122	[c=6]movsi_to_tr_unspec/2
	add! 80	
	load4	
	#	
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 203	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L8.l_o4d86cf
	# END CBRANCH
	load8! &3 	#X3	# 129	[c=11]movdi_to_tr_unspec/2
	add! 88	
	load8	
	#	
	store8! &1 	#AR	# 131	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 133	[c=4]pushdi1_not_fp/1
	load8! &1 	#AR	# 134	[c=5]*call_pop_0/1
	call	
	set_sp! (+ &0 8)
	

	load8! &3 	#X3	# 135	[c=11]movdi_to_tr_unspec/2
	add! 1312	
	load8	
	#	
	store8! &1 	#AR	# 137	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 139	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L8.l_o4d86cf
	# END CBRANCH
	load8! &0 	#AR	# 141	[c=4]pushdi1_not_fp/1
	load8! &4 	#X3	# 142	[c=4]pushdi1_not_fp/1
	call! cleanup_glue		# 143	[c=5]*call_pop_0/0
	set_sp! (+ &0 16)
	

.L8.l_o4d86cf:

	# epilogue
	set_sp! &5
	return

# FUNCTION ENDS:_reclaim_reent

#	.data
	EXPORT	errno
errno:
	data4 [0]

#	IMPORT _impure_ptr
#	IMPORT _free_r
#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: ob7bf30
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"sbrkr.c"
#	.text

# FUNCTION BEGINS:_sbrk_r
	EXPORT	_sbrk_r
_sbrk_r:
	# prologue (2 GPRs)
	push! 0
	push! 0

	push! 0		# 7	[c=4]movsi_push_pop
	store4! errno
	load8! &4	# 8	[c=2]pushdi1_not_fp/1
	call! sbrk		# 9	[c=0]*call_value_pop_1/0
	store8! &1

	# CBRANCH EQ	# 11	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	push! -1	
	xor	
	jump_zero! .L8.l_ob7bf30
	# END CBRANCH
.L1.l_ob7bf30:
	load8! &0 	#AR	# 25	[c=4]movdi_push_pop
	store8! &4
	jump! .L9.l_ob7bf30		# 47	[c=4]jump
.L8.l_ob7bf30:
	load4! errno	# 13	[c=1]movsi_push_pop
	store8! &2 	#X1
	# CBRANCH EQ0	# 14	[c=12]cbranchsi4_internal
	load4! &1 	#X1
	jump_zero! .L1.l_ob7bf30
	# END CBRANCH
	load4! &1 	#X1	# 16	[c=5]movsi_to_tr_unspec/1
	load8! &4	# 18	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	load8! &0 	#AR	# 42	[c=4]movdi_push_pop
	store8! &4
.L9.l_ob7bf30:

	# epilogue
	set_sp! &2
	return

# FUNCTION ENDS:_sbrk_r

#	IMPORT sbrk
#	IMPORT errno
#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: o94efed
# This is a GCC-generated ivm64 assembly object file
# 1 "setjmp.S"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "setjmp.S"
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
# .file "setjmp.c"
# .text

# FUNCTION BEGINS:setjmp
 EXPORT setjmp
setjmp:
 # prologue (2 GPRs)
 push! 0
 push! 0

 push! 24 # 45 [c=4]movdi_push_pop
 store8! &2 #X1
 push! &0 # 46 [c=4]movdi_to_tr_unspec/1
 load8! &2 #X1 # 48 [c=6]*adddi/2
 add
 store8! &2 #X1 # 49 [c=4]movdi_from_tr_unspec/0
 load8! &3 # 6 [c=2]movdi_push_pop
 store8! &1 #AR
 load8! &1 #X1 # 7 [c=5]movdi_to_tr_unspec/1
 add! 8 # 9 [c=4]*adddi/0
 store8! &2 #X1 # 10 [c=4]movdi_from_tr_unspec/0
 load8! &1 #X1 # 12 [c=5]movdi_to_tr_unspec/1
 load8! &1 #AR # 14 [c=4]movdi_from_tr_unspec/1
 store8

 push! 24 # 52 [c=4]movdi_push_pop
 store8! &1 #AR
 push! &0 # 53 [c=4]movdi_to_tr_unspec/1
 load8! &1 #AR # 55 [c=6]*adddi/2
 add
 store8! &1 #AR # 56 [c=4]movdi_from_tr_unspec/0
 load8! &0 #AR # 17 [c=5]movdi_to_tr_unspec/1
 add! -8 # 19 [c=4]*adddi/0
 store8! &1 #AR # 20 [c=4]movdi_from_tr_unspec/0
 load8! &0 #AR # 22 [c=4]movdi_push_pop
 store8! &2 #X1
 load8! &3 # 23 [c=2]movdi_push_pop
 store8! &1 #AR
 load8! &1 #X1 # 24 [c=7]movdi_to_tr_unspec/2
 load8

 store8! &2 #X1 # 26 [c=4]movdi_from_tr_unspec/0
 load8! &1 #X1 # 28 [c=5]movdi_to_tr_unspec/1
 load8! &1 #AR # 30 [c=4]movdi_from_tr_unspec/1
 add! 8
 store8

 push! 0 # 32 [c=4]movsi_push_pop
 store8! &1 #AR

 # epilogue
 store8! &3
 store8! &0 #set_sp! &1
 return

# FUNCTION ENDS:setjmp

# .data
j.s_o94efed:
 data8 [0]

s.s_o94efed:
 data8 [0]

v.s_o94efed:
 data4 [0]

# .text

# FUNCTION BEGINS:longjmp
 EXPORT longjmp
longjmp:
 # prologue (2 GPRs)
 push! 0
 push! 0
 push! 0

 # CBRANCH EQ0 # 5 [c=14]cbranchsi4_internal
 load4! &5
 jump_zero! .L4.l_o94efed
 # END CBRANCH
 load4! &5 # 7 [c=2]movsi_push_pop
 store8! &1 #AR
 jump! .L5.l_o94efed # 48 [c=4]jump
.L4.l_o94efed:
 push! 1 # 12 [c=4]movsi_push_pop
 store8! &1 #AR
.L5.l_o94efed:
 load4! &0 #AR # 15 [c=4]movsi_push_pop
 store4! v.s_o94efed
 push! 0 # 16 [c=4]movsi_push_pop
 store4! (+ &0 28)
 push! 8 # 17 [c=4]movsi_push_pop
 store4! (+ &0 28)
 load8! &4 # 18 [c=7]movdi_to_tr_unspec/2
 load8

 store8! &2 #X1 # 20 [c=4]movdi_from_tr_unspec/0
 load4! (+ &0 20)# 22 [c=5]movsi_to_tr_unspec/1
 sigx4 # 24 [c=6]*extendsidi2
 store8! &1 #AR # 25 [c=4]movdi_from_tr_unspec/0
 load8! &1 #X1 # 27 [c=5]movdi_to_tr_unspec/1
 load8! &1 #AR # 29 [c=14]*subdi3/2
 sub
 store8! &1 #AR # 30 [c=4]movdi_from_tr_unspec/0
 load8! &0 #AR # 33 [c=4]movdi_push_pop
 store8! s.s_o94efed
 load8! &4 # 34 [c=11]movdi_to_tr_unspec/2
 add! 8
 load8

 store8! &1 #AR # 36 [c=4]movdi_from_tr_unspec/0
 load8! &0 #AR # 39 [c=4]movdi_push_pop
 store8! j.s_o94efed
# Inline assembly starts
# 46 "../../../../../../newlib/libc/machine/ivm64/setjmp.c" 1
 load8! s.s_o94efed
# 0 "" 2
# 47 "../../../../../../newlib/libc/machine/ivm64/setjmp.c" 1
 set_sp
# 0 "" 2
# 49 "../../../../../../newlib/libc/machine/ivm64/setjmp.c" 1
 store8!! (load8 v.s_o94efed)&0
# 0 "" 2
# 51 "../../../../../../newlib/libc/machine/ivm64/setjmp.c" 1
 load8! j.s_o94efed
# 0 "" 2
# 52 "../../../../../../newlib/libc/machine/ivm64/setjmp.c" 1
 jump
# 0 "" 2
# Inline assembly ends
 # NOP # 47 [c=0]nop

 # epilogue
 set_sp! &3
 return

# FUNCTION ENDS:longjmp

# .ident "GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: o9ee99c
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"signal.c"
#	.text

# FUNCTION BEGINS:.Li__init_signal_r.part_0.l_o9ee99c
.Li__init_signal_r.part_0.l_o9ee99c:
	# prologue (3 GPRs)
	push! 0
	push! 0
	push! 0

	load8! &4	# 2	[c=2]movdi_push_pop
	store8! &3 	#X2
	push! 256		# 8	[c=4]pushdi1_not_fp/0
	load8! &3 	#X2	# 9	[c=4]pushdi1_not_fp/1
	call! _malloc_r		# 10	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load8! &0 	#AR	# 12	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 14	[c=4]movdi_from_tr_unspec/1
	add! 1304	
	store8	
	#	
	# CBRANCH EQ0	# 16	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L4.l_o9ee99c
	# END CBRANCH
	load8! &0 	#AR	# 19	[c=5]movdi_to_tr_unspec/1
	add! 256		# 21	[c=4]*adddi/0
	store8! &2 	#X1	# 22	[c=4]movdi_from_tr_unspec/0
.L3.l_o9ee99c:
	push! 0		# 26	[c=3]movdi_to_tr_unspec/0
	load8! &1 	#AR	# 28	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load8! &0 	#AR	# 35	[c=5]movdi_to_tr_unspec/1
	add! 8		# 37	[c=4]*adddi/0
	store8! &1 	#AR	# 38	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 42	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	load8! &2 	#X1
	xor	
	push! 1	
	lt_u	
	jump_zero! .L3.l_o9ee99c
	# END CBRANCH
	push! 0		# 5	[c=4]movsi_push_pop
	store8! &1 	#AR
	load4! &0 	#AR	# 48	[c=4]movsi_push_pop
	store4! &5
	jump! .L8.l_o9ee99c		# 72	[c=4]jump
.L4.l_o9ee99c:
	push! -1		# 4	[c=4]movsi_push_pop
	store8! &1 	#AR
	load4! &0 	#AR	# 68	[c=4]movsi_push_pop
	store4! &5
.L8.l_o9ee99c:

	# epilogue
	set_sp! &3
	return

# FUNCTION ENDS:.Li__init_signal_r.part_0.l_o9ee99c

	#peephole pop+cmp

# FUNCTION BEGINS:_init_signal_r
	EXPORT	_init_signal_r
_init_signal_r:
	# prologue (2 GPRs)
	push! 0
	push! 0

	load8! &3	# 2	[c=2]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 7	[c=11]movdi_to_tr_unspec/2
	add! 1304	
	load8	
	#	
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L14.l_o9ee99c	# 33	[c=12]*peep2_cbranchdi
	# END CBRANCH
	push! 0		# 4	[c=4]movsi_push_pop
	store8! &1 	#AR
	load4! &0 	#AR	# 21	[c=4]movsi_push_pop
	store4! &4
	jump! .L15.l_o9ee99c		# 42	[c=4]jump
.L14.l_o9ee99c:
	load8! &0 	#AR	# 13	[c=4]pushdi1_not_fp/1
	call! .Li__init_signal_r.part_0.l_o9ee99c		# 14	[c=0]*call_value_pop_1/0
	store8! &1

	load4! &0 	#AR	# 37	[c=4]movsi_push_pop
	store4! &4
.L15.l_o9ee99c:

	# epilogue
	set_sp! &2
	return

# FUNCTION ENDS:_init_signal_r

	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)

# FUNCTION BEGINS:_signal_r
	EXPORT	_signal_r
_signal_r:
	# prologue (3 GPRs)
	push! 0
	push! 0
	push! 0

	load8! &4	# 2	[c=2]movdi_push_pop
	store8! &3 	#X2
	# CBRANCH	# 11	[c=14]cbranchsi4_internal
	push! 31	
	load4! &6
	lt_u	
	not	
	jump_zero! .L23.l_o9ee99c
	# END CBRANCH
	load8! &2 	#X2	# 21	[c=11]movdi_to_tr_unspec/2
	add! 1304	
	load8	
	#	
	store8! &1 	#AR	# 23	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 25	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L24.l_o9ee99c
	# END CBRANCH
	load4! &5	# 80	[c=5]movsi_to_tr_unspec/1
	sigx4		# 82	[c=6]*extendsidi2
	shift_l! 3	# 83	[c=8]*ashldi3/0
	load8! &1 	#AR	# 86	[c=6]*adddi/2
	add
	store8! &2 	#X1	# 87	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 53	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	store8! &1 	#AR	# 55	[c=4]movdi_from_tr_unspec/0
	load8! &6	# 57	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 59	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
.L16.l_o9ee99c:
	load8! &0 	#AR	# 66	[c=4]movdi_push_pop
	store8! &5
	jump! .L25.l_o9ee99c		# 115	[c=4]jump
.L23.l_o9ee99c:
	push! 22		# 13	[c=3]movsi_to_tr_unspec/0
	load8! &3 	#X2	# 15	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	push! -1		# 6	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 91	[c=4]movdi_push_pop
	store8! &5
	jump! .L25.l_o9ee99c		# 117	[c=4]jump
.L24.l_o9ee99c:
	load8! &2 	#X2	# 27	[c=4]pushdi1_not_fp/1
	call! .Li__init_signal_r.part_0.l_o9ee99c		# 28	[c=0]*call_value_pop_1/0
	store8! &1

	# CBRANCH EQ0	# 30	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L20.l_o9ee99c
	# END CBRANCH
	load8! &2 	#X2	# 32	[c=11]movdi_to_tr_unspec/2
	add! 1304	
	load8	
	#	
	store8! &1 	#AR	# 34	[c=4]movdi_from_tr_unspec/0
	load4! &5	# 94	[c=5]movsi_to_tr_unspec/1
	sigx4		# 96	[c=6]*extendsidi2
	shift_l! 3	# 97	[c=8]*ashldi3/0
	load8! &1 	#AR	# 99	[c=6]*adddi/2
	add
	store8! &2 	#X1	# 100	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 101	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	store8! &1 	#AR	# 103	[c=4]movdi_from_tr_unspec/0
	load8! &6	# 104	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 106	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	jump! .L16.l_o9ee99c		# 119	[c=4]jump
.L20.l_o9ee99c:
	push! -1		# 7	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 109	[c=4]movdi_push_pop
	store8! &5
.L25.l_o9ee99c:

	# epilogue
	set_sp! &3
	return

# FUNCTION ENDS:_signal_r

	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)

# FUNCTION BEGINS:_raise_r
	EXPORT	_raise_r
_raise_r:
	# prologue (4 GPRs)
	push! 0
	push! 0
	push! 0
	push! 0

	load8! &5	# 2	[c=2]movdi_push_pop
	store8! &4 	#X3
	load4! &6	# 3	[c=2]movsi_push_pop
	store8! &3 	#X2
	# CBRANCH	# 12	[c=12]cbranchsi4_internal
	push! 31	
	load4! &3 	#X2
	lt_u	
	not	
	jump_zero! .L38.l_o9ee99c
	# END CBRANCH
	load8! &3 	#X3	# 22	[c=11]movdi_to_tr_unspec/2
	add! 1304	
	load8	
	#	
	store8! &1 	#AR	# 24	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 26	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L29.l_o9ee99c
	# END CBRANCH
	load4! &2 	#X2	# 112	[c=5]movsi_to_tr_unspec/1
	sigx4		# 114	[c=6]*extendsidi2
	shift_l! 3	# 115	[c=8]*ashldi3/0
	load8! &1 	#AR	# 118	[c=6]*adddi/2
	add
	store8! &2 	#X1	# 119	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 43	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	store8! &1 	#AR	# 45	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 47	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L29.l_o9ee99c
	# END CBRANCH
	# CBRANCH EQ	# 62	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	push! 1	
	xor	
	jump_zero! .L32.l_o9ee99c
	# END CBRANCH
	# CBRANCH EQ	# 64	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	push! -1	
	xor	
	jump_zero! .L39.l_o9ee99c
	# END CBRANCH
	push! 0		# 74	[c=3]movdi_to_tr_unspec/0
	load8! &2 	#X1	# 76	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load4! &2 	#X2	# 78	[c=4]pushsi1_not_fp/1
	load8! &1 	#AR	# 79	[c=5]*call_pop_0/1
	call	
	set_sp! (+ &0 8)
	

	push! 0		# 6	[c=4]movsi_push_pop
	store8! &1 	#AR
	load4! &0 	#AR	# 85	[c=4]movsi_push_pop
	store4! &6
	jump! .L40.l_o9ee99c		# 138	[c=4]jump
.L29.l_o9ee99c:
	load8! &3 	#X3	# 50	[c=4]pushdi1_not_fp/1
	call! _getpid_r		# 51	[c=0]*call_value_pop_1/0
	store8! &1

	load4! &2 	#X2	# 53	[c=4]pushsi1_not_fp/1
	load4! &1 	#AR	# 54	[c=4]pushsi1_not_fp/1
	load8! &5 	#X3	# 55	[c=4]pushdi1_not_fp/1
	call! _kill_r		# 56	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	load4! &0 	#AR	# 123	[c=4]movsi_push_pop
	store4! &6
	jump! .L40.l_o9ee99c		# 140	[c=4]jump
.L39.l_o9ee99c:
	push! 22		# 66	[c=3]movsi_to_tr_unspec/0
	load8! &4 	#X3	# 68	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	push! 1		# 7	[c=4]movsi_push_pop
	store8! &1 	#AR
	load4! &0 	#AR	# 126	[c=4]movsi_push_pop
	store4! &6
	jump! .L40.l_o9ee99c		# 142	[c=4]jump
.L32.l_o9ee99c:
	push! 0		# 8	[c=4]movsi_push_pop
	store8! &1 	#AR
	load4! &0 	#AR	# 129	[c=4]movsi_push_pop
	store4! &6
	jump! .L40.l_o9ee99c		# 144	[c=4]jump
.L38.l_o9ee99c:
	push! 22		# 14	[c=3]movsi_to_tr_unspec/0
	load8! &4 	#X3	# 16	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	push! -1		# 5	[c=4]movsi_push_pop
	store8! &1 	#AR
	load4! &0 	#AR	# 132	[c=4]movsi_push_pop
	store4! &6
.L40.l_o9ee99c:

	# epilogue
	set_sp! &4
	return

# FUNCTION ENDS:_raise_r

	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)

# FUNCTION BEGINS:__sigtramp_r
	EXPORT	__sigtramp_r
__sigtramp_r:
	# prologue (4 GPRs)
	push! 0
	push! 0
	push! 0
	push! 0

	load8! &5	# 2	[c=2]movdi_push_pop
	store8! &4 	#X3
	load4! &6	# 3	[c=2]movsi_push_pop
	store8! &3 	#X2
	# CBRANCH	# 13	[c=12]cbranchsi4_internal
	push! 31	
	load4! &3 	#X2
	lt_u	
	not	
	jump_zero! .L45.l_o9ee99c
	# END CBRANCH
	load8! &3 	#X3	# 19	[c=11]movdi_to_tr_unspec/2
	add! 1304	
	load8	
	#	
	store8! &1 	#AR	# 21	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 23	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L51.l_o9ee99c
	# END CBRANCH
	load4! &2 	#X2	# 99	[c=5]movsi_to_tr_unspec/1
	sigx4		# 101	[c=6]*extendsidi2
	shift_l! 3	# 102	[c=8]*ashldi3/0
	load8! &1 	#AR	# 105	[c=6]*adddi/2
	add
	store8! &2 	#X1	# 106	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 52	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	store8! &1 	#AR	# 54	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 56	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L46.l_o9ee99c
	# END CBRANCH
.L53.l_o9ee99c:
	# CBRANCH EQ	# 58	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	push! -1	
	xor	
	jump_zero! .L47.l_o9ee99c
	# END CBRANCH
	# CBRANCH EQ	# 60	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	push! 1	
	xor	
	jump_zero! .L48.l_o9ee99c
	# END CBRANCH
	push! 0		# 62	[c=3]movdi_to_tr_unspec/0
	load8! &2 	#X1	# 64	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load4! &2 	#X2	# 66	[c=4]pushsi1_not_fp/1
	load8! &1 	#AR	# 67	[c=5]*call_pop_0/1
	call	
	set_sp! (+ &0 8)
	

	push! 0		# 5	[c=4]movsi_push_pop
	store8! &1 	#AR
	load4! &0 	#AR	# 73	[c=4]movsi_push_pop
	store4! &6
	jump! .L52.l_o9ee99c		# 137	[c=4]jump
.L51.l_o9ee99c:
	load8! &3 	#X3	# 25	[c=4]pushdi1_not_fp/1
	call! .Li__init_signal_r.part_0.l_o9ee99c		# 26	[c=0]*call_value_pop_1/0
	store8! &1

	# CBRANCH EQ0	# 29	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L45.l_o9ee99c
	# END CBRANCH
	load8! &3 	#X3	# 31	[c=11]movdi_to_tr_unspec/2
	add! 1304	
	load8	
	#	
	store8! &1 	#AR	# 33	[c=4]movdi_from_tr_unspec/0
	load4! &2 	#X2	# 110	[c=5]movsi_to_tr_unspec/1
	sigx4		# 112	[c=6]*extendsidi2
	shift_l! 3	# 113	[c=8]*ashldi3/0
	load8! &1 	#AR	# 115	[c=6]*adddi/2
	add
	store8! &2 	#X1	# 116	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 117	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	store8! &1 	#AR	# 119	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 120	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_not_zero! .L53.l_o9ee99c
	# END CBRANCH
.L46.l_o9ee99c:
	push! 1		# 8	[c=4]movsi_push_pop
	store8! &1 	#AR
	load4! &0 	#AR	# 123	[c=4]movsi_push_pop
	store4! &6
	jump! .L52.l_o9ee99c		# 140	[c=4]jump
.L48.l_o9ee99c:
	push! 3		# 9	[c=4]movsi_push_pop
	store8! &1 	#AR
	load4! &0 	#AR	# 126	[c=4]movsi_push_pop
	store4! &6
	jump! .L52.l_o9ee99c		# 142	[c=4]jump
.L47.l_o9ee99c:
	push! 2		# 6	[c=4]movsi_push_pop
	store8! &1 	#AR
	load4! &0 	#AR	# 129	[c=4]movsi_push_pop
	store4! &6
	jump! .L52.l_o9ee99c		# 144	[c=4]jump
.L45.l_o9ee99c:
	push! -1		# 7	[c=4]movsi_push_pop
	store8! &1 	#AR
	load4! &0 	#AR	# 132	[c=4]movsi_push_pop
	store4! &6
.L52.l_o9ee99c:

	# epilogue
	set_sp! &4
	return

# FUNCTION ENDS:__sigtramp_r


# FUNCTION BEGINS:raise
	EXPORT	raise
raise:
	# prologue (1 GPRs)
	push! 0

	load4! &2	# 7	[c=2]pushsi1_not_fp/1
	load8! _impure_ptr	# 8	[c=1]pushdi1_not_fp/1
	call! _raise_r		# 9	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load4! &0 	#AR	# 14	[c=4]movsi_push_pop
	store4! &3

	# epilogue
	store8! &0 #set_sp! &1
	return

# FUNCTION ENDS:raise

	#peephole unary+deadreg+binop
	#peephole pop+push+commut(di)

# FUNCTION BEGINS:signal
	EXPORT	signal
signal:
	# prologue (3 GPRs)
	push! 0
	push! 0
	push! 0

	load8! _impure_ptr	# 9	[c=1]movdi_push_pop
	store8! &3 	#X2
	# CBRANCH	# 11	[c=14]cbranchsi4_internal
	push! 31	
	load4! &5
	lt_u	
	not	
	jump_zero! .L63.l_o9ee99c
	# END CBRANCH
	load8! &2 	#X2	# 21	[c=11]movdi_to_tr_unspec/2
	add! 1304	
	load8	
	#	
	store8! &1 	#AR	# 23	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 25	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L64.l_o9ee99c
	# END CBRANCH
	load4! &4	# 80	[c=5]movsi_to_tr_unspec/1
	sigx4		# 82	[c=6]*extendsidi2
	shift_l! 3	# 83	[c=8]*ashldi3/0
	load8! &1 	#AR	# 86	[c=6]*adddi/2
	add
	store8! &2 	#X1	# 87	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 53	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	store8! &1 	#AR	# 55	[c=4]movdi_from_tr_unspec/0
	load8! &5	# 57	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 59	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
.L56.l_o9ee99c:
	load8! &0 	#AR	# 66	[c=4]movdi_push_pop
	store8! &5
	jump! .L65.l_o9ee99c		# 115	[c=4]jump
.L63.l_o9ee99c:
	push! 22		# 13	[c=3]movsi_to_tr_unspec/0
	load8! &3 	#X2	# 15	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	push! -1		# 5	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 91	[c=4]movdi_push_pop
	store8! &5
	jump! .L65.l_o9ee99c		# 117	[c=4]jump
.L64.l_o9ee99c:
	load8! &2 	#X2	# 27	[c=4]pushdi1_not_fp/1
	call! .Li__init_signal_r.part_0.l_o9ee99c		# 28	[c=0]*call_value_pop_1/0
	store8! &1

	# CBRANCH EQ0	# 30	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L60.l_o9ee99c
	# END CBRANCH
	load8! &2 	#X2	# 32	[c=11]movdi_to_tr_unspec/2
	add! 1304	
	load8	
	#	
	store8! &1 	#AR	# 34	[c=4]movdi_from_tr_unspec/0
	load4! &4	# 94	[c=5]movsi_to_tr_unspec/1
	sigx4		# 96	[c=6]*extendsidi2
	shift_l! 3	# 97	[c=8]*ashldi3/0
	load8! &1 	#AR	# 99	[c=6]*adddi/2
	add
	store8! &2 	#X1	# 100	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 101	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	store8! &1 	#AR	# 103	[c=4]movdi_from_tr_unspec/0
	load8! &5	# 104	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 106	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	jump! .L56.l_o9ee99c		# 119	[c=4]jump
.L60.l_o9ee99c:
	push! -1		# 6	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 109	[c=4]movdi_push_pop
	store8! &5
.L65.l_o9ee99c:

	# epilogue
	set_sp! &3
	return

# FUNCTION ENDS:signal

	#peephole pop+cmp

# FUNCTION BEGINS:_init_signal
	EXPORT	_init_signal
_init_signal:
	# prologue (2 GPRs)
	push! 0
	push! 0

	load8! _impure_ptr	# 6	[c=1]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 7	[c=11]movdi_to_tr_unspec/2
	add! 1304	
	load8	
	#	
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L71.l_o9ee99c	# 33	[c=12]*peep2_cbranchdi
	# END CBRANCH
	push! 0		# 3	[c=4]movsi_push_pop
	store8! &1 	#AR
	load4! &0 	#AR	# 21	[c=4]movsi_push_pop
	store4! &4
	jump! .L72.l_o9ee99c		# 42	[c=4]jump
.L71.l_o9ee99c:
	load8! &0 	#AR	# 13	[c=4]pushdi1_not_fp/1
	call! .Li__init_signal_r.part_0.l_o9ee99c		# 14	[c=0]*call_value_pop_1/0
	store8! &1

	load4! &0 	#AR	# 37	[c=4]movsi_push_pop
	store4! &4
.L72.l_o9ee99c:

	# epilogue
	set_sp! &2
	return

# FUNCTION ENDS:_init_signal


# FUNCTION BEGINS:__sigtramp
	EXPORT	__sigtramp
__sigtramp:
	# prologue (1 GPRs)
	push! 0

	load4! &2	# 7	[c=2]pushsi1_not_fp/1
	load8! _impure_ptr	# 8	[c=1]pushdi1_not_fp/1
	call! __sigtramp_r		# 9	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load4! &0 	#AR	# 14	[c=4]movsi_push_pop
	store4! &3

	# epilogue
	store8! &0 #set_sp! &1
	return

# FUNCTION ENDS:__sigtramp

#	IMPORT _impure_ptr
#	IMPORT _kill_r
#	IMPORT _getpid_r
#	IMPORT _malloc_r
#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: o23d511
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"signalr.c"
#	.text

# FUNCTION BEGINS:_kill_r
	EXPORT	_kill_r
_kill_r:
	# prologue (2 GPRs)
	push! 0
	push! 0

	push! 0		# 8	[c=4]movsi_push_pop
	store4! errno
	load4! &5	# 9	[c=2]pushsi1_not_fp/1
	load4! &5	# 10	[c=2]pushsi1_not_fp/1
	call! kill		# 11	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH EQ	# 13	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	push! 4294967295	
	xor	
	jump_zero! .L8.l_o23d511
	# END CBRANCH
.L1.l_o23d511:
	load4! &0 	#AR	# 27	[c=4]movsi_push_pop
	store4! &4
	jump! .L9.l_o23d511		# 49	[c=4]jump
.L8.l_o23d511:
	load4! errno	# 15	[c=1]movsi_push_pop
	store8! &2 	#X1
	# CBRANCH EQ0	# 16	[c=12]cbranchsi4_internal
	load4! &1 	#X1
	jump_zero! .L1.l_o23d511
	# END CBRANCH
	load4! &1 	#X1	# 18	[c=5]movsi_to_tr_unspec/1
	load8! &4	# 20	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	load4! &0 	#AR	# 44	[c=4]movsi_push_pop
	store4! &4
.L9.l_o23d511:

	# epilogue
	set_sp! &2
	return

# FUNCTION ENDS:_kill_r


# FUNCTION BEGINS:_getpid_r
	EXPORT	_getpid_r
_getpid_r:
	# prologue (1 GPRs)
	push! 0

	# variadic *call_value
	call! getpid		# 6	[c=5]*call_value/0

	load4! &0 	#AR	# 11	[c=4]movsi_push_pop
	store4! &3

	# epilogue
	store8! &0 #set_sp! &1
	return

# FUNCTION ENDS:_getpid_r

#	IMPORT getpid
#	IMPORT kill
#	IMPORT errno
#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: o034a11
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"snprintf.c"
#	.text
	#peephole nop+set
	#peephole nop+set
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole 1
	#peephole 1
	#peephole nop+set
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole nop+set

# FUNCTION BEGINS:_snprintf_r
	EXPORT	_snprintf_r
_snprintf_r:
	# prologue (2 GPRs)

	set_sp! &-25

	load8! &27	# 3	[c=2]movdi_push_pop
	store8! &2 	#X1
	load8! &28	# 4	[c=2]movdi_push_pop
	store8! &1 	#AR
	# CBRANCH	# 10	[c=12]cbranchdi4_internal
	push! 2147483647	
	load8! &1 	#AR
	lt_u	
	not	
	jump_zero! .L10.l_o034a11
	# END CBRANCH
	push! 520		# 20	[c=4]movhi_push_pop
	store2! &5
	load8! &1 	#X1	# 21	[c=4]movdi_push_pop
	store8! &3
	load8! &1 	#X1	# 22	[c=4]movdi_push_pop
	store8! &6
	# CBRANCH EQ0	# 23	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L4.l_o034a11
	# END CBRANCH
	load8! &0 	#AR	# 29	[c=5]movdi_to_tr_unspec/1
	add! -1		# 31	[c=4]*adddi/0
	store8! &1 	#AR	# 32	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 205	[c=4]movsi_push_pop
	store4! (+ &0 36)
	load4! &0 	#AR	# 40	[c=4]movsi_push_pop
	store4! &7
	push! -1		# 41	[c=4]movhi_push_pop
	store2! (+ &0 42)
	push! &0		# 209	[c=4]movdi_to_tr_unspec/1
	add! 240		# 214	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 216	[c=0]*peep2_pop_pusharg
	load8! &30	# 49	[c=2]pushdi1_not_fp/1
	push! &0		# 225	[c=4]movdi_to_tr_unspec/1
	add! 32		# 232	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 234	[c=0]*peep2_pop_pusharg
	load8! &29	# 56	[c=2]pushdi1_not_fp/1
	call! _svfprintf_r		# 57	[c=0]*call_value_pop_1/0
	store8! &4

	set_sp! &3
	# CBRANCH	# 59	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	add! -2147483648	
	push! 4294967295	
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L5.l_o034a11
	# END CBRANCH
	push! 0		# 62	[c=3]movqi_to_tr_unspec/0
	load8! &3	# 64	[c=4]movqi_from_tr_unspec/1
	store1	
	#	
.L1.l_o034a11:
	load4! &0 	#AR	# 114	[c=4]movsi_push_pop
	store4! &27
	jump! .L11.l_o034a11		# 252	[c=4]jump
.L4.l_o034a11:
	push! 0		# 72	[c=4]movsi_push_pop
	store4! (+ &0 36)
	push! 0		# 73	[c=4]movsi_push_pop
	store4! &7
	push! -1		# 74	[c=4]movhi_push_pop
	store2! (+ &0 42)
	push! &0		# 177	[c=4]movdi_to_tr_unspec/1
	add! 240		# 182	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 184	[c=0]*peep2_pop_pusharg
	load8! &30	# 82	[c=2]pushdi1_not_fp/1
	push! &0		# 193	[c=4]movdi_to_tr_unspec/1
	add! 32		# 200	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 202	[c=0]*peep2_pop_pusharg
	load8! &29	# 89	[c=2]pushdi1_not_fp/1
	call! _svfprintf_r		# 90	[c=0]*call_value_pop_1/0
	store8! &4

	set_sp! &3
	# CBRANCH	# 92	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	add! -2147483648	
	push! 4294967295	
	add! -2147483648	
	lt_u	
	jump_zero! .L1.l_o034a11
	# END CBRANCH
	push! 139		# 107	[c=3]movsi_to_tr_unspec/0
	load8! &27	# 172	[c=2]movdi_push_pop
	store8! &3 	#X1
	load8! &2 	#X1	# 109	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	load4! &0 	#AR	# 239	[c=4]movsi_push_pop
	store4! &27
	jump! .L11.l_o034a11		# 254	[c=4]jump
.L5.l_o034a11:
	push! 139		# 98	[c=3]movsi_to_tr_unspec/0
	load8! &27	# 173	[c=2]movdi_push_pop
	store8! &3 	#X1
	load8! &2 	#X1	# 100	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	push! 0		# 242	[c=3]movqi_to_tr_unspec/0
	load8! &3	# 244	[c=4]movqi_from_tr_unspec/1
	store1	
	#	
	jump! .L1.l_o034a11		# 256	[c=4]jump
.L10.l_o034a11:
	push! 139		# 12	[c=3]movsi_to_tr_unspec/0
	load8! &27	# 235	[c=2]movdi_push_pop
	store8! &2 	#AR
	load8! &1 	#AR	# 14	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	push! -1		# 7	[c=4]movsi_push_pop
	store8! &1 	#AR
	load4! &0 	#AR	# 247	[c=4]movsi_push_pop
	store4! &27
.L11.l_o034a11:

	# epilogue
	set_sp! &25
	return

# FUNCTION ENDS:_snprintf_r

	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole 1
	#peephole 1
	#peephole nop+set
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg

# FUNCTION BEGINS:snprintf
	EXPORT	snprintf
snprintf:
	# prologue (3 GPRs)

	set_sp! &-26

	load8! &27	# 2	[c=2]movdi_push_pop
	store8! &2 	#X1
	load8! &28	# 3	[c=2]movdi_push_pop
	store8! &1 	#AR
	load8! _impure_ptr	# 9	[c=1]movdi_push_pop
	store8! &3 	#X2
	# CBRANCH	# 10	[c=12]cbranchdi4_internal
	push! 2147483647	
	load8! &1 	#AR
	lt_u	
	not	
	jump_zero! .L21.l_o034a11
	# END CBRANCH
	push! 520		# 20	[c=4]movhi_push_pop
	store2! &6
	load8! &1 	#X1	# 21	[c=4]movdi_push_pop
	store8! &4
	load8! &1 	#X1	# 22	[c=4]movdi_push_pop
	store8! &7
	# CBRANCH EQ0	# 23	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L15.l_o034a11
	# END CBRANCH
	load8! &0 	#AR	# 29	[c=5]movdi_to_tr_unspec/1
	add! -1		# 31	[c=4]*adddi/0
	store8! &1 	#AR	# 32	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 198	[c=4]movsi_push_pop
	store4! (+ &0 44)
	load4! &0 	#AR	# 40	[c=4]movsi_push_pop
	store4! &8
	push! -1		# 41	[c=4]movhi_push_pop
	store2! (+ &0 50)
	push! &0		# 202	[c=4]movdi_to_tr_unspec/1
	add! 240		# 207	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 209	[c=0]*peep2_pop_pusharg
	load8! &30	# 49	[c=2]pushdi1_not_fp/1
	push! &0		# 218	[c=4]movdi_to_tr_unspec/1
	add! 40		# 225	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 227	[c=0]*peep2_pop_pusharg
	load8! &5 	#X2	# 56	[c=4]pushdi1_not_fp/1
	call! _svfprintf_r		# 57	[c=0]*call_value_pop_1/0
	store8! &4

	set_sp! &3
	# CBRANCH	# 59	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	add! -2147483648	
	push! 4294967295	
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L16.l_o034a11
	# END CBRANCH
	push! 0		# 62	[c=3]movqi_to_tr_unspec/0
	load8! &4	# 64	[c=4]movqi_from_tr_unspec/1
	store1	
	#	
.L12.l_o034a11:
	load4! &0 	#AR	# 114	[c=4]movsi_push_pop
	store4! &28
	jump! .L22.l_o034a11		# 244	[c=4]jump
.L15.l_o034a11:
	push! 0		# 72	[c=4]movsi_push_pop
	store4! (+ &0 44)
	push! 0		# 73	[c=4]movsi_push_pop
	store4! &8
	push! -1		# 74	[c=4]movhi_push_pop
	store2! (+ &0 50)
	push! &0		# 170	[c=4]movdi_to_tr_unspec/1
	add! 240		# 175	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 177	[c=0]*peep2_pop_pusharg
	load8! &30	# 82	[c=2]pushdi1_not_fp/1
	push! &0		# 186	[c=4]movdi_to_tr_unspec/1
	add! 40		# 193	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 195	[c=0]*peep2_pop_pusharg
	load8! &5 	#X2	# 89	[c=4]pushdi1_not_fp/1
	call! _svfprintf_r		# 90	[c=0]*call_value_pop_1/0
	store8! &4

	set_sp! &3
	# CBRANCH	# 92	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	add! -2147483648	
	push! 4294967295	
	add! -2147483648	
	lt_u	
	jump_zero! .L12.l_o034a11
	# END CBRANCH
	push! 139		# 107	[c=3]movsi_to_tr_unspec/0
	load8! &3 	#X2	# 109	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	load4! &0 	#AR	# 231	[c=4]movsi_push_pop
	store4! &28
	jump! .L22.l_o034a11		# 246	[c=4]jump
.L16.l_o034a11:
	push! 139		# 98	[c=3]movsi_to_tr_unspec/0
	load8! &3 	#X2	# 100	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	push! 0		# 234	[c=3]movqi_to_tr_unspec/0
	load8! &4	# 236	[c=4]movqi_from_tr_unspec/1
	store1	
	#	
	jump! .L12.l_o034a11		# 248	[c=4]jump
.L21.l_o034a11:
	push! 139		# 12	[c=3]movsi_to_tr_unspec/0
	load8! &3 	#X2	# 14	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	push! -1		# 6	[c=4]movsi_push_pop
	store8! &1 	#AR
	load4! &0 	#AR	# 239	[c=4]movsi_push_pop
	store4! &28
.L22.l_o034a11:

	# epilogue
	set_sp! &26
	return

# FUNCTION ENDS:snprintf

#	IMPORT _impure_ptr
#	IMPORT _svfprintf_r
#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: o42f9f9
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"stdio.c"
#	.text
	#peephole 1
	#peephole nop+set
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole nop+pusharg
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole popdi(deadreg)+push
	#peephole and+pophi

# FUNCTION BEGINS:__sread
	EXPORT	__sread
__sread:
	# prologue (3 GPRs)
	push! 0
	push! 0
	push! 0

	load8! &5	# 3	[c=2]movdi_push_pop
	store8! &3 	#X2
	load4! &7	# 9	[c=5]movsi_to_tr_unspec/1
	sigx4		# 11	[c=6]*extendsidi2
	store8! &2 	#X1	# 12	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 14	[c=6]movhi_to_tr_unspec/2
	add! 18	
	load2	
	#	
	sigx2		# 20	[c=6]*extendhidi2
	store8! &1 	#AR	# 21	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 99	[c=4]pushdi1_not_fp/1
	load8! &7	# 28	[c=2]pushdi1_not_fp/1
	load4! &2 	#AR	# 29	[c=4]pushsi1_not_fp/1
	load8! &7	# 30	[c=2]pushdi1_not_fp/1
	call! _read_r		# 31	[c=0]*call_value_pop_1/0
	store8! &4

	set_sp! &3
	# CBRANCH	# 33	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	add! -9223372036854775808	
	push! 0	
	add! -9223372036854775808	
	lt_u	
	not	
	jump_zero! .L2.l_o42f9f9
	# END CBRANCH
	load8! &2 	#X2	# 92	[c=11]movdi_to_tr_unspec/2
	add! 144	
	load8	
	#	
	load8! &1 	#AR	# 94	[c=6]*adddi/2
	add
	load8! &3 	#X2	# 46	[c=4]movdi_from_tr_unspec/1
	add! 144	
	store8	
	#	
	load4! &0 	#AR	# 89	[c=4]movsi_push_pop
	store4! &5
	jump! .L6.l_o42f9f9		# 115	[c=4]jump
.L2.l_o42f9f9:
	load8! &2 	#X2	# 52	[c=6]movhi_to_tr_unspec/2
	add! 16	
	load2	
	#	
	and! 0xffffffffffffefff		# 58	[c=4]*anddi3/0
	load8! &3 	#X2	# 107	[c=4]movhi_from_tr_unspec/1
	add! 16	
	store2	
	#	
	load4! &0 	#AR	# 111	[c=4]movsi_push_pop
	store4! &5
.L6.l_o42f9f9:

	# epilogue
	set_sp! &3
	return

# FUNCTION ENDS:__sread


# FUNCTION BEGINS:__seofread
	EXPORT	__seofread
__seofread:
	# prologue (0 GPRs)

	push! 0		# 13	[c=4]movsi_push_pop
	store4! &2

	# epilogue
	return

# FUNCTION ENDS:__seofread

	#peephole 1
	#peephole pop+pusharg
	#peephole 1
	#peephole nop+set
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole popdi(deadreg)+push
	#peephole and+pophi

# FUNCTION BEGINS:__swrite
	EXPORT	__swrite
__swrite:
	# prologue (4 GPRs)
	push! 0
	push! 0
	push! 0
	push! 0

	load8! &6	# 3	[c=2]movdi_push_pop
	store8! &3 	#X2
	load8! &2 	#X2	# 9	[c=6]movhi_to_tr_unspec/2
	add! 16	
	load2	
	#	
	store8! &1 	#AR	# 11	[c=4]movhi_from_tr_unspec/0
	load8! &0 	#AR	# 13	[c=5]movdi_to_tr_unspec/1
	and! 0x100		# 15	[c=4]*anddi3/0
	store8! &4 	#X3	# 119	[c=4]movhi_from_tr_unspec/0
	load8! &2 	#X2	# 22	[c=6]movhi_to_tr_unspec/2
	add! 18	
	load2	
	#	
	sigx2		# 28	[c=6]*extendhidi2
	store8! &2 	#X1	# 121	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 122	[c=12]cbranchhi4_internal
	load2! &3 	#X3
	jump_not_zero! .L16.l_o42f9f9
	# END CBRANCH
	load8! &0 	#AR	# 61	[c=5]movdi_to_tr_unspec/1
	and! 0xffffffffffffefff		# 63	[c=4]*anddi3/0
	load8! &3 	#X2	# 125	[c=4]movhi_from_tr_unspec/1
	add! 16	
	store2	
	#	
	load4! &8	# 74	[c=5]movsi_to_tr_unspec/1
	sigx4		# 76	[c=6]*extendsidi2
	#peep - pop(deadreg)+pusharg	# 106	[c=0]*peep2_pop_pusharg
	load8! &8	# 80	[c=2]pushdi1_not_fp/1
	load4! &3 	#X1	# 81	[c=4]pushsi1_not_fp/1
	load8! &8	# 82	[c=2]pushdi1_not_fp/1
	call! _write_r		# 83	[c=0]*call_value_pop_1/0
	store8! &4

	set_sp! &3
	load4! &0 	#AR	# 108	[c=4]movsi_push_pop
	store4! &6
	jump! .L17.l_o42f9f9		# 147	[c=4]jump
.L16.l_o42f9f9:
	push! 2		# 37	[c=4]pushsi1_not_fp/0
	push! 0		# 38	[c=4]pushdi1_not_fp/0
	load4! &3 	#X1	# 39	[c=4]pushsi1_not_fp/1
	load8! &8	# 40	[c=2]pushdi1_not_fp/1
	call! _lseek_r		# 41	[c=0]*call_value_pop_1/0
	store8! &4

	set_sp! &3
	load8! &2 	#X2	# 42	[c=6]movhi_to_tr_unspec/2
	add! 16	
	load2	
	#	
	store8! &1 	#AR	# 44	[c=4]movhi_from_tr_unspec/0
	load8! &2 	#X2	# 46	[c=6]movhi_to_tr_unspec/2
	add! 18	
	load2	
	#	
	sigx2		# 52	[c=6]*extendhidi2
	store8! &2 	#X1	# 53	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 129	[c=5]movdi_to_tr_unspec/1
	and! 0xffffffffffffefff		# 131	[c=4]*anddi3/0
	load8! &3 	#X2	# 132	[c=4]movhi_from_tr_unspec/1
	add! 16	
	store2	
	#	
	load4! &8	# 133	[c=5]movsi_to_tr_unspec/1
	sigx4		# 135	[c=6]*extendsidi2
	#peep - pop(deadreg)+pusharg	# 137	[c=0]*peep2_pop_pusharg
	load8! &8	# 138	[c=2]pushdi1_not_fp/1
	load4! &3 	#X1	# 139	[c=4]pushsi1_not_fp/1
	load8! &8	# 140	[c=2]pushdi1_not_fp/1
	call! _write_r		# 141	[c=0]*call_value_pop_1/0
	store8! &4

	set_sp! &3
	load4! &0 	#AR	# 142	[c=4]movsi_push_pop
	store4! &6
.L17.l_o42f9f9:

	# epilogue
	set_sp! &4
	return

# FUNCTION ENDS:__swrite

	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole nop+pusharg
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole popdi(deadreg)+push
	#peephole and+pophi
	#peephole popdi(deadreg)+push
	#peephole and+pophi

# FUNCTION BEGINS:__sseek
	EXPORT	__sseek
__sseek:
	# prologue (3 GPRs)
	push! 0
	push! 0
	push! 0

	load8! &5	# 3	[c=2]movdi_push_pop
	store8! &3 	#X2
	load8! &2 	#X2	# 9	[c=6]movhi_to_tr_unspec/2
	add! 18	
	load2	
	#	
	sigx2		# 15	[c=6]*extendhidi2
	store8! &1 	#AR	# 16	[c=4]movdi_from_tr_unspec/0
	load4! &7	# 91	[c=2]pushsi1_not_fp/1
	load8! &7	# 23	[c=2]pushdi1_not_fp/1
	load4! &2 	#AR	# 24	[c=4]pushsi1_not_fp/1
	load8! &7	# 25	[c=2]pushdi1_not_fp/1
	call! _lseek_r		# 26	[c=0]*call_value_pop_1/0
	store8! &4

	set_sp! &3
	# CBRANCH EQ	# 28	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	push! -1	
	xor	
	jump_zero! .L23.l_o42f9f9
	# END CBRANCH
	load8! &2 	#X2	# 51	[c=6]movhi_to_tr_unspec/2
	add! 16	
	load2	
	#	
	or! 0x1000		# 57	[c=4]*iordi3/0
	load8! &3 	#X2	# 103	[c=4]movhi_from_tr_unspec/1
	add! 16	
	store2	
	#	
	load8! &0 	#AR	# 68	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 70	[c=4]movdi_from_tr_unspec/1
	add! 144	
	store8	
	#	
	load8! &0 	#AR	# 77	[c=4]movdi_push_pop
	store8! &5
	jump! .L24.l_o42f9f9		# 115	[c=4]jump
.L23.l_o42f9f9:
	load8! &2 	#X2	# 30	[c=6]movhi_to_tr_unspec/2
	add! 16	
	load2	
	#	
	and! 0xffffffffffffefff		# 36	[c=4]*anddi3/0
	load8! &3 	#X2	# 106	[c=4]movhi_from_tr_unspec/1
	add! 16	
	store2	
	#	
	load8! &0 	#AR	# 110	[c=4]movdi_push_pop
	store8! &5
.L24.l_o42f9f9:

	# epilogue
	set_sp! &3
	return

# FUNCTION ENDS:__sseek

	#peephole pop(deadreg)+push
	#peephole 1
	#peephole nop+pusharg
	#peephole redundant blockage insn

# FUNCTION BEGINS:__sclose
	EXPORT	__sclose
__sclose:
	# prologue (1 GPRs)
	push! 0

	load8! &3	# 7	[c=6]movhi_to_tr_unspec/2
	add! 18	
	load2	
	#	
	sigx2		# 13	[c=6]*extendhidi2
	store8! &1 	#AR	# 14	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 35	[c=4]pushsi1_not_fp/1
	load8! &3	# 21	[c=2]pushdi1_not_fp/1
	call! _close_r		# 22	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load4! &0 	#AR	# 27	[c=4]movsi_push_pop
	store4! &3

	# epilogue
	store8! &0 #set_sp! &1
	return

# FUNCTION ENDS:__sclose

#	IMPORT _close_r
#	IMPORT _lseek_r
#	IMPORT _write_r
#	IMPORT _read_r
#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: o909c71
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"strcmp.c"
#	.text
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole pop+cmprev
	#peephole pop+cmprev
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop+cmp
	#peephole zero_extend
	#peephole 1
	#peephole pop+cmprev
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop+cmp
	#peephole pop+cmprev
	#peephole binop1+deadreg+binop2
	#peephole pop+cmp
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole zero_extend
	#peephole pop+block+push+block
	#peephole pop+push+sub
	#peephole redundant blockage insn

# FUNCTION BEGINS:strcmp
	EXPORT	strcmp
strcmp:
	# prologue (4 GPRs)
	push! 0
	push! 0
	push! 0
	push! 0

	load8! &5	# 2	[c=2]movdi_push_pop
	store8! &2 	#X1
	load8! &6	# 3	[c=2]movdi_push_pop
	store8! &1 	#AR
	load8! &1 	#X1	# 296	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 298	[c=6]*iordi3/2
	or
	and! 0x7		# 299	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_not_zero! .L2.l_o909c71	# 301	[c=12]*peep2_cbranchdi
	# END CBRANCH
	load8! &1 	#X1	# 25	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	store8! &3 	#X2	# 27	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 29	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	# CBRANCH - peep (modesize=8)
	# - reverse 
	load8! &3 	#X2	# 295	[c=12]*peep2_cbranchdi_reverse
	xor	
	push! 1	
	lt_u	
	jump_zero! .L2.l_o909c71
	# END CBRANCH
	load8! &2 	#X2	# 35	[c=5]movdi_to_tr_unspec/1
	add! -72340172838076673		# 37	[c=4]*adddi/0
	store8! &4 	#X3	# 38	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 40	[c=5]movdi_to_tr_unspec/1
	not		# 42	[c=2]*one_cmpldi2
	load8! &4 	#X3	# 291	[c=6]*anddi3/2
	and
	and! 0x8080808080808080		# 52	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_not_zero! .L16.l_o909c71	# 294	[c=12]*peep2_cbranchdi
	# END CBRANCH
.L4.l_o909c71:
	load8! &1 	#X1	# 114	[c=5]movdi_to_tr_unspec/1
	add! 8		# 116	[c=4]*adddi/0
	store8! &2 	#X1	# 117	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 125	[c=5]movdi_to_tr_unspec/1
	add! 8		# 127	[c=4]*adddi/0
	store8! &1 	#AR	# 128	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 131	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	store8! &3 	#X2	# 133	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 135	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	# CBRANCH - peep (modesize=8)
	# - reverse 
	load8! &3 	#X2	# 279	[c=12]*peep2_cbranchdi_reverse
	xor	
	push! 1	
	lt_u	
	jump_zero! .L2.l_o909c71
	# END CBRANCH
	load8! &2 	#X2	# 86	[c=5]movdi_to_tr_unspec/1
	add! -72340172838076673		# 88	[c=4]*adddi/0
	store8! &4 	#X3	# 89	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 91	[c=5]movdi_to_tr_unspec/1
	not		# 93	[c=2]*one_cmpldi2
	load8! &4 	#X3	# 281	[c=6]*anddi3/2
	and
	and! 0x8080808080808080		# 103	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L4.l_o909c71	# 284	[c=12]*peep2_cbranchdi
	# END CBRANCH
	push! 0		# 8	[c=4]movsi_push_pop
	store8! &1 	#AR
	load4! &0 	#AR	# 223	[c=4]movsi_push_pop
	store4! &6
	jump! .L17.l_o909c71		# 350	[c=4]jump
.L2.l_o909c71:
	load8! &1 	#X1	# 61	[c=7]movqi_to_tr_unspec/2
	load1	
	#	
	store8! &3 	#X2	# 63	[c=4]movqi_from_tr_unspec/0
	# CBRANCH EQ0	# 65	[c=12]cbranchqi4_internal
	load1! &2 	#X2
	jump_zero! .L9.l_o909c71
	# END CBRANCH
	load8! &0 	#AR	# 67	[c=7]movqi_to_tr_unspec/2
	load1	
	#	
	# CBRANCH - peep (modesize=1)
	and! 255		# 289	[c=12]*peep2_cbranchqi_reverse
	# - reverse 
	load1! &3 	#X2
	xor	
	push! 1	
	lt_u	
	jump_zero! .L18.l_o909c71
	# END CBRANCH
.L6.l_o909c71:
	load8! &1 	#X1	# 151	[c=5]movdi_to_tr_unspec/1
	add! 1		# 153	[c=4]*adddi/0
	store8! &2 	#X1	# 154	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 162	[c=5]movdi_to_tr_unspec/1
	add! 1		# 164	[c=4]*adddi/0
	store8! &1 	#AR	# 165	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 168	[c=7]movqi_to_tr_unspec/2
	load1	
	#	
	store8! &3 	#X2	# 170	[c=4]movqi_from_tr_unspec/0
	# CBRANCH EQ0	# 172	[c=12]cbranchqi4_internal
	load1! &2 	#X2
	jump_zero! .L11.l_o909c71
	# END CBRANCH
	load8! &0 	#AR	# 174	[c=7]movqi_to_tr_unspec/2
	load1	
	#	
	# CBRANCH - peep (modesize=1)
	and! 255		# 278	[c=12]*peep2_cbranchqi_reverse
	# - EQ
	load1! &3 	#X2
	xor	
	jump_zero! .L6.l_o909c71
	# END CBRANCH
	load1! &2 	#X2	# 274	[c=5]movqi_to_tr_unspec/1
	store8! &2 	#X1	# 276	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 304	[c=7]movqi_to_tr_unspec/2
	load1	
	#	
	load8! &2 	#X1	# 311	[c=14]*subdi3/2
	sub
	neg		# 312	[c=4]*neg_tr
	store8! &1 	#AR	# 313	[c=4]movdi_from_tr_unspec/0
.L19.l_o909c71:
	load4! &0 	#AR	# 318	[c=4]movsi_push_pop
	store4! &6
	jump! .L17.l_o909c71		# 353	[c=4]jump
.L11.l_o909c71:
	push! 0		# 6	[c=4]movsi_push_pop
	store8! &2 	#X1
	load8! &0 	#AR	# 321	[c=7]movqi_to_tr_unspec/2
	load1	
	#	
	load8! &2 	#X1	# 323	[c=14]*subdi3/2
	sub
	neg		# 324	[c=4]*neg_tr
	store8! &1 	#AR	# 325	[c=4]movdi_from_tr_unspec/0
	jump! .L19.l_o909c71		# 356	[c=4]jump
.L18.l_o909c71:
	load1! &2 	#X2	# 285	[c=5]movqi_to_tr_unspec/1
	store8! &2 	#X1	# 287	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 329	[c=7]movqi_to_tr_unspec/2
	load1	
	#	
	load8! &2 	#X1	# 331	[c=14]*subdi3/2
	sub
	neg		# 332	[c=4]*neg_tr
	store8! &1 	#AR	# 333	[c=4]movdi_from_tr_unspec/0
	jump! .L19.l_o909c71		# 358	[c=4]jump
.L16.l_o909c71:
	push! 0		# 7	[c=4]movsi_push_pop
	store8! &1 	#AR
	load4! &0 	#AR	# 337	[c=4]movsi_push_pop
	store4! &6
	jump! .L17.l_o909c71		# 360	[c=4]jump
.L9.l_o909c71:
	push! 0		# 5	[c=4]movsi_push_pop
	store8! &2 	#X1
	load8! &0 	#AR	# 340	[c=7]movqi_to_tr_unspec/2
	load1	
	#	
	load8! &2 	#X1	# 342	[c=14]*subdi3/2
	sub
	neg		# 343	[c=4]*neg_tr
	store8! &1 	#AR	# 344	[c=4]movdi_from_tr_unspec/0
	jump! .L19.l_o909c71		# 362	[c=4]jump
.L17.l_o909c71:

	# epilogue
	set_sp! &4
	return

# FUNCTION ENDS:strcmp

#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: o074386
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"strerror.c"
#	.text
.LC0.l_o074386:
#	.string "Not owner"
	data1 [ 78 111 116 32 111 119 110 101 114 0 ]
.LC1.l_o074386:
#	.string "No such file or directory"
	data1 [ 78 111 32 115 117 99 104 32 102 105 108 101 32 111 114 32 100 105 114 101 99 116 111 114 121 0 ]
.LC2.l_o074386:
#	.string "No such process"
	data1 [ 78 111 32 115 117 99 104 32 112 114 111 99 101 115 115 0 ]
.LC3.l_o074386:
#	.string "Interrupted system call"
	data1 [ 73 110 116 101 114 114 117 112 116 101 100 32 115 121 115 116 101 109 32 99 97 108 108 0 ]
.LC4.l_o074386:
#	.string "I/O error"
	data1 [ 73 47 79 32 101 114 114 111 114 0 ]
.LC5.l_o074386:
#	.string "No such device or address"
	data1 [ 78 111 32 115 117 99 104 32 100 101 118 105 99 101 32 111 114 32 97 100 100 114 101 115 115 0 ]
.LC6.l_o074386:
#	.string "Arg list too long"
	data1 [ 65 114 103 32 108 105 115 116 32 116 111 111 32 108 111 110 103 0 ]
.LC7.l_o074386:
#	.string "Exec format error"
	data1 [ 69 120 101 99 32 102 111 114 109 97 116 32 101 114 114 111 114 0 ]
.LC8.l_o074386:
#	.string "Socket already connected"
	data1 [ 83 111 99 107 101 116 32 97 108 114 101 97 100 121 32 99 111 110 110 101 99 116 101 100 0 ]
.LC9.l_o074386:
#	.string "Bad file number"
	data1 [ 66 97 100 32 102 105 108 101 32 110 117 109 98 101 114 0 ]
.LC10.l_o074386:
#	.string "No children"
	data1 [ 78 111 32 99 104 105 108 100 114 101 110 0 ]
.LC11.l_o074386:
#	.string "Destination address required"
	data1 [ 68 101 115 116 105 110 97 116 105 111 110 32 97 100 100 114 101 115 115 32 114 101 113 117 105 114 101 100 0 ]
.LC12.l_o074386:
#	.string "No more processes"
	data1 [ 78 111 32 109 111 114 101 32 112 114 111 99 101 115 115 101 115 0 ]
.LC13.l_o074386:
#	.string "Not enough space"
	data1 [ 78 111 116 32 101 110 111 117 103 104 32 115 112 97 99 101 0 ]
.LC14.l_o074386:
#	.string "Permission denied"
	data1 [ 80 101 114 109 105 115 115 105 111 110 32 100 101 110 105 101 100 0 ]
.LC15.l_o074386:
#	.string "Bad address"
	data1 [ 66 97 100 32 97 100 100 114 101 115 115 0 ]
.LC16.l_o074386:
#	.string "Device or resource busy"
	data1 [ 68 101 118 105 99 101 32 111 114 32 114 101 115 111 117 114 99 101 32 98 117 115 121 0 ]
.LC17.l_o074386:
#	.string "File exists"
	data1 [ 70 105 108 101 32 101 120 105 115 116 115 0 ]
.LC18.l_o074386:
#	.string "Cross-device link"
	data1 [ 67 114 111 115 115 45 100 101 118 105 99 101 32 108 105 110 107 0 ]
.LC19.l_o074386:
#	.string "No such device"
	data1 [ 78 111 32 115 117 99 104 32 100 101 118 105 99 101 0 ]
.LC20.l_o074386:
#	.string "Not a directory"
	data1 [ 78 111 116 32 97 32 100 105 114 101 99 116 111 114 121 0 ]
.LC21.l_o074386:
#	.string "Host is down"
	data1 [ 72 111 115 116 32 105 115 32 100 111 119 110 0 ]
.LC22.l_o074386:
#	.string "Connection already in progress"
	data1 [ 67 111 110 110 101 99 116 105 111 110 32 97 108 114 101 97 100 121 32 105 110 32 112 114 111 103 114 101 115 115 0 ]
.LC23.l_o074386:
#	.string "Is a directory"
	data1 [ 73 115 32 97 32 100 105 114 101 99 116 111 114 121 0 ]
.LC24.l_o074386:
#	.string "Invalid argument"
	data1 [ 73 110 118 97 108 105 100 32 97 114 103 117 109 101 110 116 0 ]
.LC25.l_o074386:
#	.string "Network interface is not configured"
	data1 [ 78 101 116 119 111 114 107 32 105 110 116 101 114 102 97 99 101 32 105 115 32 110 111 116 32 99 111 110 102 105 103 117 114 101 100 0 ]
.LC26.l_o074386:
#	.string "Connection aborted by network"
	data1 [ 67 111 110 110 101 99 116 105 111 110 32 97 98 111 114 116 101 100 32 98 121 32 110 101 116 119 111 114 107 0 ]
.LC27.l_o074386:
#	.string "Too many open files in system"
	data1 [ 84 111 111 32 109 97 110 121 32 111 112 101 110 32 102 105 108 101 115 32 105 110 32 115 121 115 116 101 109 0 ]
.LC28.l_o074386:
#	.string "File descriptor value too large"
	data1 [ 70 105 108 101 32 100 101 115 99 114 105 112 116 111 114 32 118 97 108 117 101 32 116 111 111 32 108 97 114 103 101 0 ]
.LC29.l_o074386:
#	.string "Not a character device"
	data1 [ 78 111 116 32 97 32 99 104 97 114 97 99 116 101 114 32 100 101 118 105 99 101 0 ]
.LC30.l_o074386:
#	.string "Text file busy"
	data1 [ 84 101 120 116 32 102 105 108 101 32 98 117 115 121 0 ]
.LC31.l_o074386:
#	.string "File too large"
	data1 [ 70 105 108 101 32 116 111 111 32 108 97 114 103 101 0 ]
.LC32.l_o074386:
#	.string "Host is unreachable"
	data1 [ 72 111 115 116 32 105 115 32 117 110 114 101 97 99 104 97 98 108 101 0 ]
.LC33.l_o074386:
#	.string "No space left on device"
	data1 [ 78 111 32 115 112 97 99 101 32 108 101 102 116 32 111 110 32 100 101 118 105 99 101 0 ]
.LC34.l_o074386:
#	.string "Not supported"
	data1 [ 78 111 116 32 115 117 112 112 111 114 116 101 100 0 ]
.LC35.l_o074386:
#	.string "Illegal seek"
	data1 [ 73 108 108 101 103 97 108 32 115 101 101 107 0 ]
.LC36.l_o074386:
#	.string "Read-only file system"
	data1 [ 82 101 97 100 45 111 110 108 121 32 102 105 108 101 32 115 121 115 116 101 109 0 ]
.LC37.l_o074386:
#	.string "Too many links"
	data1 [ 84 111 111 32 109 97 110 121 32 108 105 110 107 115 0 ]
.LC38.l_o074386:
#	.string "Broken pipe"
	data1 [ 66 114 111 107 101 110 32 112 105 112 101 0 ]
.LC39.l_o074386:
#	.string "Mathematics argument out of domain of function"
	data1 [ 77 97 116 104 101 109 97 116 105 99 115 32 97 114 103 117 109 101 110 116 32 111 117 116 32 111 102 32 100 111 109 97 105 110 32 111 102 32 102 117 110 99 116 105 111 110 0 ]
.LC40.l_o074386:
#	.string "Result too large"
	data1 [ 82 101 115 117 108 116 32 116 111 111 32 108 97 114 103 101 0 ]
.LC41.l_o074386:
#	.string "No message of desired type"
	data1 [ 78 111 32 109 101 115 115 97 103 101 32 111 102 32 100 101 115 105 114 101 100 32 116 121 112 101 0 ]
.LC42.l_o074386:
#	.string "Identifier removed"
	data1 [ 73 100 101 110 116 105 102 105 101 114 32 114 101 109 111 118 101 100 0 ]
.LC43.l_o074386:
#	.string "Illegal byte sequence"
	data1 [ 73 108 108 101 103 97 108 32 98 121 116 101 32 115 101 113 117 101 110 99 101 0 ]
.LC44.l_o074386:
#	.string "Deadlock"
	data1 [ 68 101 97 100 108 111 99 107 0 ]
.LC45.l_o074386:
#	.string "Network is unreachable"
	data1 [ 78 101 116 119 111 114 107 32 105 115 32 117 110 114 101 97 99 104 97 98 108 101 0 ]
.LC46.l_o074386:
#	.string "No lock"
	data1 [ 78 111 32 108 111 99 107 0 ]
.LC47.l_o074386:
#	.string "Not a stream"
	data1 [ 78 111 116 32 97 32 115 116 114 101 97 109 0 ]
.LC48.l_o074386:
#	.string "Stream ioctl timeout"
	data1 [ 83 116 114 101 97 109 32 105 111 99 116 108 32 116 105 109 101 111 117 116 0 ]
.LC49.l_o074386:
#	.string "No stream resources"
	data1 [ 78 111 32 115 116 114 101 97 109 32 114 101 115 111 117 114 99 101 115 0 ]
.LC50.l_o074386:
#	.string "Virtual circuit is gone"
	data1 [ 86 105 114 116 117 97 108 32 99 105 114 99 117 105 116 32 105 115 32 103 111 110 101 0 ]
.LC51.l_o074386:
#	.string "Protocol error"
	data1 [ 80 114 111 116 111 99 111 108 32 101 114 114 111 114 0 ]
.LC52.l_o074386:
#	.string "Unknown protocol"
	data1 [ 85 110 107 110 111 119 110 32 112 114 111 116 111 99 111 108 0 ]
.LC53.l_o074386:
#	.string "Multihop attempted"
	data1 [ 77 117 108 116 105 104 111 112 32 97 116 116 101 109 112 116 101 100 0 ]
.LC54.l_o074386:
#	.string "Bad message"
	data1 [ 66 97 100 32 109 101 115 115 97 103 101 0 ]
.LC55.l_o074386:
#	.string "Function not implemented"
	data1 [ 70 117 110 99 116 105 111 110 32 110 111 116 32 105 109 112 108 101 109 101 110 116 101 100 0 ]
.LC56.l_o074386:
#	.string "Directory not empty"
	data1 [ 68 105 114 101 99 116 111 114 121 32 110 111 116 32 101 109 112 116 121 0 ]
.LC57.l_o074386:
#	.string "File or path name too long"
	data1 [ 70 105 108 101 32 111 114 32 112 97 116 104 32 110 97 109 101 32 116 111 111 32 108 111 110 103 0 ]
.LC58.l_o074386:
#	.string "Too many symbolic links"
	data1 [ 84 111 111 32 109 97 110 121 32 115 121 109 98 111 108 105 99 32 108 105 110 107 115 0 ]
.LC59.l_o074386:
#	.string "No buffer space available"
	data1 [ 78 111 32 98 117 102 102 101 114 32 115 112 97 99 101 32 97 118 97 105 108 97 98 108 101 0 ]
.LC60.l_o074386:
#	.string "No data"
	data1 [ 78 111 32 100 97 116 97 0 ]
.LC61.l_o074386:
#	.string "Address family not supported by protocol family"
	data1 [ 65 100 100 114 101 115 115 32 102 97 109 105 108 121 32 110 111 116 32 115 117 112 112 111 114 116 101 100 32 98 121 32 112 114 111 116 111 99 111 108 32 102 97 109 105 108 121 0 ]
.LC62.l_o074386:
#	.string "Protocol wrong type for socket"
	data1 [ 80 114 111 116 111 99 111 108 32 119 114 111 110 103 32 116 121 112 101 32 102 111 114 32 115 111 99 107 101 116 0 ]
.LC63.l_o074386:
#	.string "Socket operation on non-socket"
	data1 [ 83 111 99 107 101 116 32 111 112 101 114 97 116 105 111 110 32 111 110 32 110 111 110 45 115 111 99 107 101 116 0 ]
.LC64.l_o074386:
#	.string "Protocol not available"
	data1 [ 80 114 111 116 111 99 111 108 32 110 111 116 32 97 118 97 105 108 97 98 108 101 0 ]
.LC65.l_o074386:
#	.string "Connection refused"
	data1 [ 67 111 110 110 101 99 116 105 111 110 32 114 101 102 117 115 101 100 0 ]
.LC66.l_o074386:
#	.string "Connection reset by peer"
	data1 [ 67 111 110 110 101 99 116 105 111 110 32 114 101 115 101 116 32 98 121 32 112 101 101 114 0 ]
.LC67.l_o074386:
#	.string "Address already in use"
	data1 [ 65 100 100 114 101 115 115 32 97 108 114 101 97 100 121 32 105 110 32 117 115 101 0 ]
.LC68.l_o074386:
#	.string "Address not available"
	data1 [ 65 100 100 114 101 115 115 32 110 111 116 32 97 118 97 105 108 97 98 108 101 0 ]
.LC69.l_o074386:
#	.string "Software caused connection abort"
	data1 [ 83 111 102 116 119 97 114 101 32 99 97 117 115 101 100 32 99 111 110 110 101 99 116 105 111 110 32 97 98 111 114 116 0 ]
.LC70.l_o074386:
#	.string "Socket is not connected"
	data1 [ 83 111 99 107 101 116 32 105 115 32 110 111 116 32 99 111 110 110 101 99 116 101 100 0 ]
.LC71.l_o074386:
#	.string "Socket is already connected"
	data1 [ 83 111 99 107 101 116 32 105 115 32 97 108 114 101 97 100 121 32 99 111 110 110 101 99 116 101 100 0 ]
.LC72.l_o074386:
#	.string "Operation canceled"
	data1 [ 79 112 101 114 97 116 105 111 110 32 99 97 110 99 101 108 101 100 0 ]
.LC73.l_o074386:
#	.string "State not recoverable"
	data1 [ 83 116 97 116 101 32 110 111 116 32 114 101 99 111 118 101 114 97 98 108 101 0 ]
.LC74.l_o074386:
#	.string "Previous owner died"
	data1 [ 80 114 101 118 105 111 117 115 32 111 119 110 101 114 32 100 105 101 100 0 ]
.LC75.l_o074386:
#	.string "Operation not supported on socket"
	data1 [ 79 112 101 114 97 116 105 111 110 32 110 111 116 32 115 117 112 112 111 114 116 101 100 32 111 110 32 115 111 99 107 101 116 0 ]
.LC76.l_o074386:
#	.string "Value too large for defined data type"
	data1 [ 86 97 108 117 101 32 116 111 111 32 108 97 114 103 101 32 102 111 114 32 100 101 102 105 110 101 100 32 100 97 116 97 32 116 121 112 101 0 ]
.LC77.l_o074386:
#	.string "Message too long"
	data1 [ 77 101 115 115 97 103 101 32 116 111 111 32 108 111 110 103 0 ]
.LC78.l_o074386:
#	.string "Connection timed out"
	data1 [ 67 111 110 110 101 99 116 105 111 110 32 116 105 109 101 100 32 111 117 116 0 ]
.LC79.l_o074386:
#	.string "Success"
	data1 [ 83 117 99 99 101 115 115 0 ]
.LC80.l_o074386:
#	.string ""
	data1 [ 0 ]

# FUNCTION BEGINS:_strerror_r
	EXPORT	_strerror_r
_strerror_r:
	# prologue (1 GPRs)
	push! 0

	#CASESI		# 90	[c=43]casesi_internal
	push! 142	
	load4! &4
	sigx4	
	lt_u	
	not	
	jump_zero! .L2.l_o074386
	load4! &3
	sigx4	
	mult! 8	
	add! .L4.l_o074386	
	load8	
	jump	
	##	
.L4.l_o074386:
	data8 [.L85.l_o074386]#casesi entry
	data8 [.L82.l_o074386]#casesi entry
	data8 [.L81.l_o074386]#casesi entry
	data8 [.L80.l_o074386]#casesi entry
	data8 [.L79.l_o074386]#casesi entry
	data8 [.L78.l_o074386]#casesi entry
	data8 [.L77.l_o074386]#casesi entry
	data8 [.L76.l_o074386]#casesi entry
	data8 [.L75.l_o074386]#casesi entry
	data8 [.L74.l_o074386]#casesi entry
	data8 [.L73.l_o074386]#casesi entry
	data8 [.L72.l_o074386]#casesi entry
	data8 [.L71.l_o074386]#casesi entry
	data8 [.L70.l_o074386]#casesi entry
	data8 [.L69.l_o074386]#casesi entry
	data8 [.L2.l_o074386]#casesi entry
	data8 [.L68.l_o074386]#casesi entry
	data8 [.L67.l_o074386]#casesi entry
	data8 [.L66.l_o074386]#casesi entry
	data8 [.L65.l_o074386]#casesi entry
	data8 [.L64.l_o074386]#casesi entry
	data8 [.L63.l_o074386]#casesi entry
	data8 [.L62.l_o074386]#casesi entry
	data8 [.L61.l_o074386]#casesi entry
	data8 [.L60.l_o074386]#casesi entry
	data8 [.L59.l_o074386]#casesi entry
	data8 [.L58.l_o074386]#casesi entry
	data8 [.L57.l_o074386]#casesi entry
	data8 [.L56.l_o074386]#casesi entry
	data8 [.L55.l_o074386]#casesi entry
	data8 [.L54.l_o074386]#casesi entry
	data8 [.L53.l_o074386]#casesi entry
	data8 [.L52.l_o074386]#casesi entry
	data8 [.L51.l_o074386]#casesi entry
	data8 [.L50.l_o074386]#casesi entry
	data8 [.L49.l_o074386]#casesi entry
	data8 [.L48.l_o074386]#casesi entry
	data8 [.L2.l_o074386]#casesi entry
	data8 [.L2.l_o074386]#casesi entry
	data8 [.L2.l_o074386]#casesi entry
	data8 [.L2.l_o074386]#casesi entry
	data8 [.L2.l_o074386]#casesi entry
	data8 [.L2.l_o074386]#casesi entry
	data8 [.L2.l_o074386]#casesi entry
	data8 [.L2.l_o074386]#casesi entry
	data8 [.L47.l_o074386]#casesi entry
	data8 [.L46.l_o074386]#casesi entry
	data8 [.L2.l_o074386]#casesi entry
	data8 [.L2.l_o074386]#casesi entry
	data8 [.L2.l_o074386]#casesi entry
	data8 [.L2.l_o074386]#casesi entry
	data8 [.L2.l_o074386]#casesi entry
	data8 [.L2.l_o074386]#casesi entry
	data8 [.L2.l_o074386]#casesi entry
	data8 [.L2.l_o074386]#casesi entry
	data8 [.L2.l_o074386]#casesi entry
	data8 [.L2.l_o074386]#casesi entry
	data8 [.L2.l_o074386]#casesi entry
	data8 [.L2.l_o074386]#casesi entry
	data8 [.L2.l_o074386]#casesi entry
	data8 [.L45.l_o074386]#casesi entry
	data8 [.L44.l_o074386]#casesi entry
	data8 [.L43.l_o074386]#casesi entry
	data8 [.L42.l_o074386]#casesi entry
	data8 [.L2.l_o074386]#casesi entry
	data8 [.L2.l_o074386]#casesi entry
	data8 [.L2.l_o074386]#casesi entry
	data8 [.L41.l_o074386]#casesi entry
	data8 [.L2.l_o074386]#casesi entry
	data8 [.L2.l_o074386]#casesi entry
	data8 [.L2.l_o074386]#casesi entry
	data8 [.L40.l_o074386]#casesi entry
	data8 [.L2.l_o074386]#casesi entry
	data8 [.L2.l_o074386]#casesi entry
	data8 [.L39.l_o074386]#casesi entry
	data8 [.L2.l_o074386]#casesi entry
	data8 [.L2.l_o074386]#casesi entry
	data8 [.L38.l_o074386]#casesi entry
	data8 [.L2.l_o074386]#casesi entry
	data8 [.L2.l_o074386]#casesi entry
	data8 [.L2.l_o074386]#casesi entry
	data8 [.L2.l_o074386]#casesi entry
	data8 [.L2.l_o074386]#casesi entry
	data8 [.L2.l_o074386]#casesi entry
	data8 [.L2.l_o074386]#casesi entry
	data8 [.L2.l_o074386]#casesi entry
	data8 [.L2.l_o074386]#casesi entry
	data8 [.L2.l_o074386]#casesi entry
	data8 [.L37.l_o074386]#casesi entry
	data8 [.L2.l_o074386]#casesi entry
	data8 [.L36.l_o074386]#casesi entry
	data8 [.L35.l_o074386]#casesi entry
	data8 [.L34.l_o074386]#casesi entry
	data8 [.L2.l_o074386]#casesi entry
	data8 [.L2.l_o074386]#casesi entry
	data8 [.L33.l_o074386]#casesi entry
	data8 [.L2.l_o074386]#casesi entry
	data8 [.L2.l_o074386]#casesi entry
	data8 [.L2.l_o074386]#casesi entry
	data8 [.L2.l_o074386]#casesi entry
	data8 [.L2.l_o074386]#casesi entry
	data8 [.L2.l_o074386]#casesi entry
	data8 [.L2.l_o074386]#casesi entry
	data8 [.L2.l_o074386]#casesi entry
	data8 [.L32.l_o074386]#casesi entry
	data8 [.L31.l_o074386]#casesi entry
	data8 [.L30.l_o074386]#casesi entry
	data8 [.L29.l_o074386]#casesi entry
	data8 [.L28.l_o074386]#casesi entry
	data8 [.L27.l_o074386]#casesi entry
	data8 [.L2.l_o074386]#casesi entry
	data8 [.L26.l_o074386]#casesi entry
	data8 [.L25.l_o074386]#casesi entry
	data8 [.L24.l_o074386]#casesi entry
	data8 [.L23.l_o074386]#casesi entry
	data8 [.L22.l_o074386]#casesi entry
	data8 [.L21.l_o074386]#casesi entry
	data8 [.L20.l_o074386]#casesi entry
	data8 [.L19.l_o074386]#casesi entry
	data8 [.L18.l_o074386]#casesi entry
	data8 [.L17.l_o074386]#casesi entry
	data8 [.L16.l_o074386]#casesi entry
	data8 [.L15.l_o074386]#casesi entry
	data8 [.L14.l_o074386]#casesi entry
	data8 [.L2.l_o074386]#casesi entry
	data8 [.L13.l_o074386]#casesi entry
	data8 [.L12.l_o074386]#casesi entry
	data8 [.L11.l_o074386]#casesi entry
	data8 [.L10.l_o074386]#casesi entry
	data8 [.L2.l_o074386]#casesi entry
	data8 [.L2.l_o074386]#casesi entry
	data8 [.L2.l_o074386]#casesi entry
	data8 [.L2.l_o074386]#casesi entry
	data8 [.L2.l_o074386]#casesi entry
	data8 [.L9.l_o074386]#casesi entry
	data8 [.L2.l_o074386]#casesi entry
	data8 [.L2.l_o074386]#casesi entry
	data8 [.L2.l_o074386]#casesi entry
	data8 [.L8.l_o074386]#casesi entry
	data8 [.L7.l_o074386]#casesi entry
	data8 [.L6.l_o074386]#casesi entry
	data8 [.L5.l_o074386]#casesi entry
	data8 [.L3.l_o074386]#casesi entry
.L85.l_o074386:
	push! .LC79.l_o074386		# 86	[c=4]movdi_push_pop
	store8! &1 	#AR
.L1.l_o074386:
	load8! &0 	#AR	# 429	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 844	[c=4]jump
.L3.l_o074386:
	push! .LC74.l_o074386		# 81	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 603	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 846	[c=4]jump
.L5.l_o074386:
	push! .LC73.l_o074386		# 80	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 606	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 848	[c=4]jump
.L6.l_o074386:
	push! .LC72.l_o074386		# 79	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 609	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 850	[c=4]jump
.L7.l_o074386:
	push! .LC76.l_o074386		# 83	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 612	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 852	[c=4]jump
.L8.l_o074386:
	push! .LC43.l_o074386		# 50	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 615	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 854	[c=4]jump
.L9.l_o074386:
	push! .LC34.l_o074386		# 41	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 618	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 856	[c=4]jump
.L10.l_o074386:
	push! .LC70.l_o074386		# 77	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 621	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 858	[c=4]jump
.L11.l_o074386:
	push! .LC71.l_o074386		# 78	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 624	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 860	[c=4]jump
.L12.l_o074386:
	push! .LC26.l_o074386		# 33	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 627	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 862	[c=4]jump
.L13.l_o074386:
	push! .LC68.l_o074386		# 75	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 630	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 864	[c=4]jump
.L14.l_o074386:
	push! .LC52.l_o074386		# 59	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 633	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 866	[c=4]jump
.L15.l_o074386:
	push! .LC77.l_o074386		# 84	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 636	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 868	[c=4]jump
.L16.l_o074386:
	push! .LC11.l_o074386		# 18	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 639	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 870	[c=4]jump
.L17.l_o074386:
	push! .LC8.l_o074386		# 15	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 642	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 872	[c=4]jump
.L18.l_o074386:
	push! .LC22.l_o074386		# 29	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 645	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 874	[c=4]jump
.L19.l_o074386:
	push! .LC32.l_o074386		# 39	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 648	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 876	[c=4]jump
.L20.l_o074386:
	push! .LC21.l_o074386		# 28	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 651	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 878	[c=4]jump
.L21.l_o074386:
	push! .LC78.l_o074386		# 85	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 654	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 880	[c=4]jump
.L22.l_o074386:
	push! .LC25.l_o074386		# 32	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 657	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 882	[c=4]jump
.L23.l_o074386:
	push! .LC45.l_o074386		# 52	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 660	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 884	[c=4]jump
.L24.l_o074386:
	push! .LC69.l_o074386		# 76	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 663	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 886	[c=4]jump
.L25.l_o074386:
	push! .LC67.l_o074386		# 74	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 666	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 888	[c=4]jump
.L26.l_o074386:
	push! .LC65.l_o074386		# 72	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 669	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 890	[c=4]jump
.L27.l_o074386:
	push! .LC64.l_o074386		# 71	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 672	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 892	[c=4]jump
.L28.l_o074386:
	push! .LC63.l_o074386		# 70	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 675	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 894	[c=4]jump
.L29.l_o074386:
	push! .LC62.l_o074386		# 69	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 678	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 896	[c=4]jump
.L30.l_o074386:
	push! .LC61.l_o074386		# 68	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 681	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 898	[c=4]jump
.L31.l_o074386:
	push! .LC59.l_o074386		# 66	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 684	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 900	[c=4]jump
.L32.l_o074386:
	push! .LC66.l_o074386		# 73	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 687	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 902	[c=4]jump
.L33.l_o074386:
	push! .LC75.l_o074386		# 82	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 690	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 904	[c=4]jump
.L34.l_o074386:
	push! .LC58.l_o074386		# 65	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 693	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 906	[c=4]jump
.L35.l_o074386:
	push! .LC57.l_o074386		# 64	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 696	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 908	[c=4]jump
.L36.l_o074386:
	push! .LC56.l_o074386		# 63	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 699	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 910	[c=4]jump
.L37.l_o074386:
	push! .LC55.l_o074386		# 62	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 702	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 912	[c=4]jump
.L38.l_o074386:
	push! .LC54.l_o074386		# 61	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 705	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 914	[c=4]jump
.L39.l_o074386:
	push! .LC53.l_o074386		# 60	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 708	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 916	[c=4]jump
.L40.l_o074386:
	push! .LC51.l_o074386		# 58	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 711	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 918	[c=4]jump
.L41.l_o074386:
	push! .LC50.l_o074386		# 57	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 714	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 920	[c=4]jump
.L42.l_o074386:
	push! .LC49.l_o074386		# 56	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 717	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 922	[c=4]jump
.L43.l_o074386:
	push! .LC48.l_o074386		# 55	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 720	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 924	[c=4]jump
.L44.l_o074386:
	push! .LC60.l_o074386		# 67	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 723	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 926	[c=4]jump
.L45.l_o074386:
	push! .LC47.l_o074386		# 54	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 726	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 928	[c=4]jump
.L46.l_o074386:
	push! .LC46.l_o074386		# 53	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 729	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 930	[c=4]jump
.L47.l_o074386:
	push! .LC44.l_o074386		# 51	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 732	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 932	[c=4]jump
.L48.l_o074386:
	push! .LC42.l_o074386		# 49	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 735	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 934	[c=4]jump
.L49.l_o074386:
	push! .LC41.l_o074386		# 48	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 738	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 936	[c=4]jump
.L50.l_o074386:
	push! .LC40.l_o074386		# 47	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 741	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 938	[c=4]jump
.L51.l_o074386:
	push! .LC39.l_o074386		# 46	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 744	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 940	[c=4]jump
.L52.l_o074386:
	push! .LC38.l_o074386		# 45	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 747	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 942	[c=4]jump
.L53.l_o074386:
	push! .LC37.l_o074386		# 44	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 750	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 944	[c=4]jump
.L54.l_o074386:
	push! .LC36.l_o074386		# 43	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 753	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 946	[c=4]jump
.L55.l_o074386:
	push! .LC35.l_o074386		# 42	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 756	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 948	[c=4]jump
.L56.l_o074386:
	push! .LC33.l_o074386		# 40	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 759	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 950	[c=4]jump
.L57.l_o074386:
	push! .LC31.l_o074386		# 38	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 762	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 952	[c=4]jump
.L58.l_o074386:
	push! .LC30.l_o074386		# 37	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 765	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 954	[c=4]jump
.L59.l_o074386:
	push! .LC29.l_o074386		# 36	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 768	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 956	[c=4]jump
.L60.l_o074386:
	push! .LC28.l_o074386		# 35	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 771	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 958	[c=4]jump
.L61.l_o074386:
	push! .LC27.l_o074386		# 34	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 774	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 960	[c=4]jump
.L62.l_o074386:
	push! .LC24.l_o074386		# 31	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 777	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 962	[c=4]jump
.L63.l_o074386:
	push! .LC23.l_o074386		# 30	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 780	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 964	[c=4]jump
.L64.l_o074386:
	push! .LC20.l_o074386		# 27	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 783	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 966	[c=4]jump
.L65.l_o074386:
	push! .LC19.l_o074386		# 26	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 786	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 968	[c=4]jump
.L66.l_o074386:
	push! .LC18.l_o074386		# 25	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 789	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 970	[c=4]jump
.L67.l_o074386:
	push! .LC17.l_o074386		# 24	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 792	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 972	[c=4]jump
.L68.l_o074386:
	push! .LC16.l_o074386		# 23	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 795	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 974	[c=4]jump
.L69.l_o074386:
	push! .LC15.l_o074386		# 22	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 798	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 976	[c=4]jump
.L70.l_o074386:
	push! .LC14.l_o074386		# 21	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 801	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 978	[c=4]jump
.L71.l_o074386:
	push! .LC13.l_o074386		# 20	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 804	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 980	[c=4]jump
.L72.l_o074386:
	push! .LC12.l_o074386		# 19	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 807	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 982	[c=4]jump
.L73.l_o074386:
	push! .LC10.l_o074386		# 17	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 810	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 984	[c=4]jump
.L74.l_o074386:
	push! .LC9.l_o074386		# 16	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 813	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 986	[c=4]jump
.L75.l_o074386:
	push! .LC7.l_o074386		# 14	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 816	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 988	[c=4]jump
.L76.l_o074386:
	push! .LC6.l_o074386		# 13	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 819	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 990	[c=4]jump
.L77.l_o074386:
	push! .LC5.l_o074386		# 12	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 822	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 992	[c=4]jump
.L78.l_o074386:
	push! .LC4.l_o074386		# 11	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 825	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 994	[c=4]jump
.L79.l_o074386:
	push! .LC3.l_o074386		# 10	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 828	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 996	[c=4]jump
.L80.l_o074386:
	push! .LC2.l_o074386		# 9	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 831	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 998	[c=4]jump
.L81.l_o074386:
	push! .LC1.l_o074386		# 8	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 834	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 1000	[c=4]jump
.L82.l_o074386:
	push! .LC0.l_o074386		# 7	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 837	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 1002	[c=4]jump
.L2.l_o074386:
	# CBRANCH EQ0	# 412	[c=14]cbranchdi4_internal
	load8! &5
	jump_zero! .L89.l_o074386
	# END CBRANCH
.L84.l_o074386:
	load8! &5	# 417	[c=2]pushdi1_not_fp/1
	load4! &5	# 418	[c=2]pushsi1_not_fp/1
	load4! &5	# 419	[c=2]pushsi1_not_fp/1
	call! _user_strerror		# 420	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	# CBRANCH EQ0	# 422	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_not_zero! .L1.l_o074386
	# END CBRANCH
	push! .LC80.l_o074386		# 87	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 840	[c=4]movdi_push_pop
	store8! &3
	jump! .L88.l_o074386		# 1005	[c=4]jump
.L89.l_o074386:
	load8! &2	# 414	[c=2]movdi_push_pop
	store8! &6
	jump! .L84.l_o074386		# 1007	[c=4]jump
.L88.l_o074386:

	# epilogue
	store8! &0 #set_sp! &1
	return

# FUNCTION ENDS:_strerror_r


# FUNCTION BEGINS:strerror
	EXPORT	strerror
strerror:
	# prologue (1 GPRs)
	push! 0

	push! 0		# 7	[c=4]pushdi1_not_fp/0
	push! 0		# 8	[c=4]pushsi1_not_fp/0
	load4! &4	# 9	[c=2]pushsi1_not_fp/1
	load8! _impure_ptr	# 10	[c=1]pushdi1_not_fp/1
	call! _strerror_r		# 11	[c=0]*call_value_pop_1/0
	store8! &4

	set_sp! &3
	load8! &0 	#AR	# 16	[c=4]movdi_push_pop
	store8! &3

	# epilogue
	store8! &0 #set_sp! &1
	return

# FUNCTION ENDS:strerror


# FUNCTION BEGINS:strerror_l
	EXPORT	strerror_l
strerror_l:
	# prologue (1 GPRs)
	push! 0

	push! 0		# 8	[c=4]pushdi1_not_fp/0
	push! 0		# 9	[c=4]pushsi1_not_fp/0
	load4! &4	# 10	[c=2]pushsi1_not_fp/1
	load8! _impure_ptr	# 11	[c=1]pushdi1_not_fp/1
	call! _strerror_r		# 12	[c=0]*call_value_pop_1/0
	store8! &4

	set_sp! &3
	load8! &0 	#AR	# 17	[c=4]movdi_push_pop
	store8! &3

	# epilogue
	store8! &0 #set_sp! &1
	return

# FUNCTION ENDS:strerror_l

#	IMPORT _impure_ptr
#	IMPORT _user_strerror
#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: o88df78
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"strlen.c"
#	.text
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop+cmp
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole pop+cmp
	#peephole pop+cmp

# FUNCTION BEGINS:strlen
	EXPORT	strlen
strlen:
	# prologue (4 GPRs)
	push! 0
	push! 0
	push! 0
	push! 0

	load8! &5	# 2	[c=2]movdi_push_pop
	store8! &4 	#X3
	load8! &3 	#X3	# 10	[c=5]movdi_to_tr_unspec/1
	and! 0x7		# 12	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L11.l_o88df78	# 230	[c=12]*peep2_cbranchdi
	# END CBRANCH
	load8! &3 	#X3	# 17	[c=7]movqi_to_tr_unspec/2
	load1	
	#	
	# CBRANCH - peep (modesize=1)
	and! 255		# 229	[c=12]*peep2_cbranchqi
	# - EQ0
	jump_zero! .L12.l_o88df78
	# END CBRANCH
	load8! &3 	#X3	# 5	[c=4]movdi_push_pop
	store8! &1 	#AR
.L4.l_o88df78:
	load8! &0 	#AR	# 49	[c=5]movdi_to_tr_unspec/1
	add! 1		# 51	[c=4]*adddi/0
	store8! &1 	#AR	# 52	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 56	[c=5]movdi_to_tr_unspec/1
	and! 0x7		# 58	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L2.l_o88df78	# 227	[c=12]*peep2_cbranchdi
	# END CBRANCH
	load8! &0 	#AR	# 26	[c=7]movqi_to_tr_unspec/2
	load1	
	#	
	# CBRANCH - peep (modesize=1)
	and! 255		# 228	[c=12]*peep2_cbranchqi
	# - EQ0
	jump_not_zero! .L4.l_o88df78
	# END CBRANCH
	load8! &0 	#AR	# 32	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 34	[c=14]*subdi3/2
	sub
	store8! &1 	#AR	# 35	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 166	[c=4]movdi_push_pop
	store8! &6
	jump! .L22.l_o88df78		# 241	[c=4]jump
.L11.l_o88df78:
	load8! &3 	#X3	# 6	[c=4]movdi_push_pop
	store8! &1 	#AR
.L2.l_o88df78:
	load8! &0 	#AR	# 65	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	store8! &2 	#X1	# 67	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 69	[c=5]movdi_to_tr_unspec/1
	add! -72340172838076673		# 71	[c=4]*adddi/0
	store8! &3 	#X2	# 72	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 74	[c=5]movdi_to_tr_unspec/1
	not		# 76	[c=2]*one_cmpldi2
	load8! &3 	#X2	# 223	[c=6]*anddi3/2
	and
	and! 0x8080808080808080		# 86	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_not_zero! .L7.l_o88df78	# 226	[c=12]*peep2_cbranchdi
	# END CBRANCH
.L8.l_o88df78:
	load8! &0 	#AR	# 96	[c=5]movdi_to_tr_unspec/1
	add! 8		# 98	[c=4]*adddi/0
	store8! &1 	#AR	# 99	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 102	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	store8! &2 	#X1	# 104	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 106	[c=5]movdi_to_tr_unspec/1
	add! -72340172838076673		# 108	[c=4]*adddi/0
	store8! &3 	#X2	# 109	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 111	[c=5]movdi_to_tr_unspec/1
	not		# 113	[c=2]*one_cmpldi2
	load8! &3 	#X2	# 218	[c=6]*anddi3/2
	and
	and! 0x8080808080808080		# 123	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L8.l_o88df78	# 221	[c=12]*peep2_cbranchdi
	# END CBRANCH
.L7.l_o88df78:
	load8! &0 	#AR	# 130	[c=7]movqi_to_tr_unspec/2
	load1	
	#	
	# CBRANCH - peep (modesize=1)
	and! 255		# 216	[c=12]*peep2_cbranchqi
	# - EQ0
	jump_zero! .L9.l_o88df78
	# END CBRANCH
.L10.l_o88df78:
	load8! &0 	#AR	# 141	[c=5]movdi_to_tr_unspec/1
	add! 1		# 143	[c=4]*adddi/0
	store8! &1 	#AR	# 144	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 147	[c=7]movqi_to_tr_unspec/2
	load1	
	#	
	# CBRANCH - peep (modesize=1)
	and! 255		# 215	[c=12]*peep2_cbranchqi
	# - EQ0
	jump_not_zero! .L10.l_o88df78
	# END CBRANCH
.L9.l_o88df78:
	load8! &0 	#AR	# 155	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 157	[c=14]*subdi3/2
	sub
	store8! &1 	#AR	# 158	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 234	[c=4]movdi_push_pop
	store8! &6
	jump! .L22.l_o88df78		# 243	[c=4]jump
.L12.l_o88df78:
	push! 0		# 4	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 237	[c=4]movdi_push_pop
	store8! &6
.L22.l_o88df78:

	# epilogue
	set_sp! &4
	return

# FUNCTION ENDS:strlen

#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: o7ba9bc
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"vfprintf.c"
#	.text
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole move_dead
	#peephole move+push+sub
	#peephole move_dead
	#peephole push+pop+deadreg+binop
	#peephole push+pop+deadreg+binop
	#peephole move
	#peephole move
	#peephole move_dead
	#peephole move+push+sub
	#peephole 1
	#peephole pop+pusharg
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole unary+deadreg+binop
	#peephole move_dead
	#peephole pop+push+commut(di)
	#peephole popdi+cmp rev
	#peephole move
	#peephole move+push(pushable)
	#peephole 1
	#peephole pop+move(deadreg)
	#peephole pop+cmp
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+push(deadreg)+sign_extend
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole and+pophi
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole and+pophi

# FUNCTION BEGINS:__ssprint_r
	EXPORT	__ssprint_r
__ssprint_r:
	# prologue (14 GPRs)

	set_sp! &-14

	load8! &15	# 2	[c=2]movdi_push_pop
	store8! &10 	#X9
	load8! &16	# 3	[c=2]movdi_push_pop
	store8! &6 	#X5
	load8! &17	# 4	[c=2]movdi_push_pop
	store8! &9 	#X8
	load8! &8 	#X8	# 14	[c=11]movdi_to_tr_unspec/2
	add! 16	
	load8	
	#	
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L2.l_o7ba9bc	# 547	[c=12]*peep2_cbranchdi
	# END CBRANCH
	load8! &8 	#X8	# 20	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	store8! &7 	#X6	# 22	[c=4]movdi_from_tr_unspec/0
	load8! &5 	#X5	# 24	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	store8! &1 	#AR	# 26	[c=4]movdi_from_tr_unspec/0
	load8! &5 	#X5	# 28	[c=6]movsi_to_tr_unspec/2
	add! 12	
	load4	
	#	
	store8! &11 	#X10	# 30	[c=4]movsi_from_tr_unspec/0
	push! 0		# 6	[c=4]movdi_push_pop
	store8! &8 	#X7
	push! 0		# 7	[c=4]movdi_push_pop
	store8! &3 	#X2
.L3.l_o7ba9bc:
	# CBRANCH EQ0	# 66	[c=12]cbranchdi4_internal
	load8! &2 	#X2
	jump_zero! .L5.l_o7ba9bc
	# END CBRANCH
	load4! &10 	#X10	# 68	[c=5]movsi_to_tr_unspec/1
	sigx4		# 70	[c=6]*extendsidi2
	store8! &4 	#X3	# 71	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 73	[c=12]cbranchdi4_internal
	load8! &2 	#X2
	load8! &4 	#X3
	lt_u	
	not	
	jump_zero! .L6.l_o7ba9bc
	# END CBRANCH
	load8! &5 	#X5	# 75	[c=6]movhi_to_tr_unspec/2
	add! 16	
	load2	
	#	
	store8! &2 	#X1	# 77	[c=4]movhi_from_tr_unspec/0
	load8! &1 	#X1	# 79	[c=5]movdi_to_tr_unspec/1
	and! 0x480		# 81	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=2)
	and! 65535		# 580	[c=12]*peep2_cbranchhi
	# - EQ0
	jump_not_zero! .L7.l_o7ba9bc
	# END CBRANCH
	load4! &2 	#X2	# 542	[c=5]movsi_to_tr_unspec/1
	sigx4		# 96	[c=6]*extendsidi2
	store8! &5 	#X4	# 97	[c=4]movdi_from_tr_unspec/0
.L8.l_o7ba9bc:
	load8! &3 	#X3	# 345	[c=4]pushdi1_not_fp/1
	load8! &8 	#X7	# 346	[c=4]pushdi1_not_fp/1
	load8! &2 	#AR	# 347	[c=4]pushdi1_not_fp/1
	call! memmove		# 348	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	load8! &5 	#X5	# 349	[c=6]movsi_to_tr_unspec/2
	add! 12	
	load4	
	#	
	store8! &2 	#X1	# 351	[c=4]movsi_from_tr_unspec/0
	load8! &10 	#X10	# 494	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 496	[c=14]*subdi3/2
	sub
	neg		# 497	[c=4]*neg_tr
	store8! &11 	#X10	# 553	[c=4]movsi_from_tr_unspec/0
	load4! &10 	#X10	# 366	[c=5]movsi_to_tr_unspec/1
	load8! &6 	#X5	# 368	[c=4]movsi_from_tr_unspec/1
	add! 12	
	store4	
	#	
	load8! &5 	#X5	# 500	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	load8! &4 	#X3	# 502	[c=6]*adddi/2
	add
	store8! &1 	#AR	# 503	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 379	[c=5]movdi_to_tr_unspec/1
	load8! &6 	#X5	# 381	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load8! &7 	#X7	# 388	[c=5]movdi_to_tr_unspec/1
	load8! &5 	#X4	# 390	[c=6]*adddi/2
	add
	store8! &8 	#X7	# 391	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 399	[c=5]movdi_to_tr_unspec/1
	load8! &5 	#X4	# 401	[c=14]*subdi3/2
	sub
	store8! &3 	#X2	# 402	[c=4]movdi_from_tr_unspec/0
	load8! &8 	#X8	# 504	[c=11]movdi_to_tr_unspec/2
	add! 16	
	load8	
	#	
	load8! &5 	#X4	# 506	[c=14]*subdi3/2
	sub
	store8! &2 	#X1	# 507	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 414	[c=5]movdi_to_tr_unspec/1
	load8! &9 	#X8	# 416	[c=4]movdi_from_tr_unspec/1
	add! 16	
	store8	
	#	
	# CBRANCH EQ0	# 419	[c=12]cbranchdi4_internal
	load8! &1 	#X1
	jump_not_zero! .L3.l_o7ba9bc
	# END CBRANCH
.L2.l_o7ba9bc:
	push! 0		# 36	[c=3]movsi_to_tr_unspec/0
	load8! &9 	#X8	# 38	[c=4]movsi_from_tr_unspec/1
	add! 8	
	store4	
	#	
	push! 0		# 10	[c=4]movsi_push_pop
	store8! &1 	#AR
	load4! &0 	#AR	# 455	[c=4]movsi_push_pop
	store4! &16
	jump! .L21.l_o7ba9bc		# 655	[c=4]jump
.L5.l_o7ba9bc:
	load8! &6 	#X6	# 43	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	store8! &8 	#X7	# 45	[c=4]movdi_from_tr_unspec/0
	load8! &6 	#X6	# 47	[c=11]movdi_to_tr_unspec/2
	add! 8	
	load8	
	#	
	store8! &3 	#X2	# 49	[c=4]movdi_from_tr_unspec/0
	load8! &6 	#X6	# 56	[c=5]movdi_to_tr_unspec/1
	add! 16		# 58	[c=4]*adddi/0
	store8! &7 	#X6	# 546	[c=4]movdi_from_tr_unspec/0
	jump! .L3.l_o7ba9bc		# 657	[c=4]jump
.L7.l_o7ba9bc:
	load8! &5 	#X5	# 103	[c=11]movdi_to_tr_unspec/2
	add! 24	
	load8	
	#	
	store8! &5 	#X4	# 105	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 107	[c=5]movdi_to_tr_unspec/1
	load8! &5 	#X4	# 109	[c=14]*subdi3/2
	sub
	store8! &13 	#X12	# 110	[c=4]movdi_from_tr_unspec/0
	load4! &12 	#X12	# 528	[c=4]movsi_push_pop
	store8! &12 	#X11
	load8! &5 	#X5	# 116	[c=6]movsi_to_tr_unspec/2
	add! 32	
	load4	
	#	
	mult! 3		# 122	[c=4]*muldi3/0
	sigx4		# 575	[c=6]*extendsidi2
	div_s! 2	# 534	[c=4]*divdi3/0
	store8! &4 	#X3	# 577	[c=4]movsi_from_tr_unspec/0
	load4! &3 	#X3	# 143	[c=5]movsi_to_tr_unspec/1
	sigx4		# 145	[c=6]*extendsidi2
	store8! &1 	#AR	# 146	[c=4]movdi_from_tr_unspec/0
	load4! &12 	#X12	# 148	[c=5]movsi_to_tr_unspec/1
	sigx4		# 150	[c=6]*extendsidi2
	store8! &11 	#X10	# 151	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 153	[c=5]movdi_to_tr_unspec/1
	add! 1		# 155	[c=4]*adddi/0
	load8! &11 	#X10	# 538	[c=6]*adddi/2
	add
	# CBRANCH - peep (modesize=8)
	# - reverse 
	load8! &1 	#AR	# 540	[c=12]*peep2_cbranchdi_reverse
	gt_u	
	jump_zero! .L9.l_o7ba9bc
	# END CBRANCH
	load4! &2 	#X2	# 523	[c=4]movsi_push_pop
	store8! &4 	#X3
	load4! &12 	#X12	# 524	[c=4]movsi_push_pop
	store8! &1 	#AR
	load8! &3 	#X3	# 173	[c=5]movdi_to_tr_unspec/1
	add! 1		# 175	[c=4]*adddi/0
	load8! &1 	#AR	# 188	[c=6]*adddi/2
	add
	store8! &4 	#X3	# 570	[c=4]movsi_from_tr_unspec/0
	load4! &3 	#X3	# 196	[c=5]movsi_to_tr_unspec/1
	sigx4		# 198	[c=6]*extendsidi2
	store8! &1 	#AR	# 199	[c=4]movdi_from_tr_unspec/0
.L9.l_o7ba9bc:
	load8! &1 	#X1	# 203	[c=5]movdi_to_tr_unspec/1
	and! 0x400		# 205	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=2)
	and! 65535		# 567	[c=12]*peep2_cbranchhi
	# - EQ0
	jump_zero! .L10.l_o7ba9bc
	# END CBRANCH
	load8! &0 	#AR	# 214	[c=4]pushdi1_not_fp/1
	load8! &10 	#X9	# 215	[c=4]pushdi1_not_fp/1
	call! _malloc_r		# 216	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load8! &0 	#AR	# 217	[c=4]movdi_push_pop
	store8! &5 	#X4
	# CBRANCH EQ0	# 218	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L22.l_o7ba9bc
	# END CBRANCH
	load8! &5 	#X5	# 228	[c=11]movdi_to_tr_unspec/2
	add! 24	
	load8	
	#	
	store8! &1 	#AR	# 230	[c=4]movdi_from_tr_unspec/0
	load8! &10 	#X10	# 232	[c=4]pushdi1_not_fp/1
	load8! &1 	#AR	# 233	[c=4]pushdi1_not_fp/1
	load8! &6 	#X4	# 234	[c=4]pushdi1_not_fp/1
	call! memcpy		# 235	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	load8! &5 	#X5	# 236	[c=6]movhi_to_tr_unspec/2
	add! 16	
	load2	
	#	
	and! 0xfffffffffffffb7f		# 242	[c=4]*anddi3/0
	or! 0x80		# 251	[c=4]*iordi3/0
	load8! &6 	#X5	# 593	[c=4]movhi_from_tr_unspec/1
	add! 16	
	store2	
	#	
.L13.l_o7ba9bc:
	load8! &4 	#X4	# 288	[c=5]movdi_to_tr_unspec/1
	load8! &6 	#X5	# 290	[c=4]movdi_from_tr_unspec/1
	add! 24	
	store8	
	#	
	load8! &4 	#X4	# 292	[c=5]movdi_to_tr_unspec/1
	load8! &11 	#X10	# 294	[c=6]*adddi/2
	add
	store8! &1 	#AR	# 295	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 297	[c=5]movdi_to_tr_unspec/1
	load8! &6 	#X5	# 299	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load4! &3 	#X3	# 301	[c=5]movsi_to_tr_unspec/1
	load8! &6 	#X5	# 303	[c=4]movsi_from_tr_unspec/1
	add! 32	
	store4	
	#	
	load4! &2 	#X2	# 509	[c=4]movsi_push_pop
	store8! &11 	#X10
	load8! &11 	#X11	# 511	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 513	[c=14]*subdi3/2
	sub
	neg		# 514	[c=4]*neg_tr
	load8! &6 	#X5	# 590	[c=4]movsi_from_tr_unspec/1
	add! 12	
	store4	
	#	
	load4! &2 	#X2	# 326	[c=5]movsi_to_tr_unspec/1
	sigx4		# 328	[c=6]*extendsidi2
	store8! &4 	#X3	# 329	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 9	[c=4]movdi_push_pop
	store8! &5 	#X4
	# CBRANCH	# 331	[c=12]cbranchdi4_internal
	load8! &2 	#X2
	load8! &4 	#X3
	lt_u	
	jump_zero! .L8.l_o7ba9bc
	# END CBRANCH
.L6.l_o7ba9bc:
	load4! &2 	#X2	# 508	[c=4]movsi_push_pop
	store8! &11 	#X10
	load4! &2 	#X2	# 338	[c=5]movsi_to_tr_unspec/1
	sigx4		# 340	[c=6]*extendsidi2
	store8! &4 	#X3	# 341	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 8	[c=4]movdi_push_pop
	store8! &5 	#X4
	load8! &3 	#X3	# 597	[c=4]pushdi1_not_fp/1
	load8! &8 	#X7	# 598	[c=4]pushdi1_not_fp/1
	load8! &2 	#AR	# 599	[c=4]pushdi1_not_fp/1
	call! memmove		# 600	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	load8! &5 	#X5	# 601	[c=6]movsi_to_tr_unspec/2
	add! 12	
	load4	
	#	
	store8! &2 	#X1	# 603	[c=4]movsi_from_tr_unspec/0
	load8! &10 	#X10	# 604	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 606	[c=14]*subdi3/2
	sub
	neg		# 607	[c=4]*neg_tr
	store8! &11 	#X10	# 609	[c=4]movsi_from_tr_unspec/0
	load4! &10 	#X10	# 610	[c=5]movsi_to_tr_unspec/1
	load8! &6 	#X5	# 612	[c=4]movsi_from_tr_unspec/1
	add! 12	
	store4	
	#	
	load8! &5 	#X5	# 613	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	load8! &4 	#X3	# 615	[c=6]*adddi/2
	add
	store8! &1 	#AR	# 616	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 617	[c=5]movdi_to_tr_unspec/1
	load8! &6 	#X5	# 619	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load8! &7 	#X7	# 620	[c=5]movdi_to_tr_unspec/1
	load8! &5 	#X4	# 622	[c=6]*adddi/2
	add
	store8! &8 	#X7	# 623	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 624	[c=5]movdi_to_tr_unspec/1
	load8! &5 	#X4	# 626	[c=14]*subdi3/2
	sub
	store8! &3 	#X2	# 627	[c=4]movdi_from_tr_unspec/0
	load8! &8 	#X8	# 628	[c=11]movdi_to_tr_unspec/2
	add! 16	
	load8	
	#	
	load8! &5 	#X4	# 630	[c=14]*subdi3/2
	sub
	store8! &2 	#X1	# 631	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 632	[c=5]movdi_to_tr_unspec/1
	load8! &9 	#X8	# 634	[c=4]movdi_from_tr_unspec/1
	add! 16	
	store8	
	#	
	# CBRANCH EQ0	# 635	[c=12]cbranchdi4_internal
	load8! &1 	#X1
	jump_not_zero! .L3.l_o7ba9bc
	# END CBRANCH
	jump! .L2.l_o7ba9bc		# 661	[c=4]jump
.L10.l_o7ba9bc:
	load8! &0 	#AR	# 266	[c=4]pushdi1_not_fp/1
	load8! &5 	#X4	# 267	[c=4]pushdi1_not_fp/1
	load8! &11 	#X9	# 268	[c=4]pushdi1_not_fp/1
	call! _realloc_r		# 269	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	load8! &0 	#AR	# 270	[c=4]movdi_push_pop
	store8! &5 	#X4
	# CBRANCH EQ0	# 271	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_not_zero! .L13.l_o7ba9bc
	# END CBRANCH
	load8! &5 	#X5	# 273	[c=11]movdi_to_tr_unspec/2
	add! 24	
	load8	
	#	
	#peep - pop(deadreg)+pusharg	# 518	[c=0]*peep2_pop_pusharg
	load8! &10 	#X9	# 278	[c=4]pushdi1_not_fp/1
	call! _free_r		# 279	[c=5]*call_pop_0/0
	set_sp! (+ &0 16)
	

	push! 12		# 280	[c=3]movsi_to_tr_unspec/0
	load8! &10 	#X9	# 282	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
.L12.l_o7ba9bc:
	load8! &5 	#X5	# 425	[c=6]movhi_to_tr_unspec/2
	add! 16	
	load2	
	#	
	or! 0x40		# 431	[c=4]*iordi3/0
	load8! &6 	#X5	# 587	[c=4]movhi_from_tr_unspec/1
	add! 16	
	store2	
	#	
	push! 0		# 442	[c=3]movdi_to_tr_unspec/0
	load8! &9 	#X8	# 444	[c=4]movdi_from_tr_unspec/1
	add! 16	
	store8	
	#	
	push! 0		# 446	[c=3]movsi_to_tr_unspec/0
	load8! &9 	#X8	# 448	[c=4]movsi_from_tr_unspec/1
	add! 8	
	store4	
	#	
	push! -1		# 11	[c=4]movsi_push_pop
	store8! &1 	#AR
.L23.l_o7ba9bc:
	load4! &0 	#AR	# 638	[c=4]movsi_push_pop
	store4! &16
	jump! .L21.l_o7ba9bc		# 663	[c=4]jump
.L22.l_o7ba9bc:
	push! 12		# 220	[c=3]movsi_to_tr_unspec/0
	load8! &10 	#X9	# 222	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	load8! &5 	#X5	# 641	[c=6]movhi_to_tr_unspec/2
	add! 16	
	load2	
	#	
	or! 0x40		# 643	[c=4]*iordi3/0
	load8! &6 	#X5	# 644	[c=4]movhi_from_tr_unspec/1
	add! 16	
	store2	
	#	
	push! 0		# 645	[c=3]movdi_to_tr_unspec/0
	load8! &9 	#X8	# 647	[c=4]movdi_from_tr_unspec/1
	add! 16	
	store8	
	#	
	push! 0		# 648	[c=3]movsi_to_tr_unspec/0
	load8! &9 	#X8	# 650	[c=4]movsi_from_tr_unspec/1
	add! 8	
	store4	
	#	
	push! -1		# 651	[c=4]movsi_push_pop
	store8! &1 	#AR
	jump! .L23.l_o7ba9bc		# 666	[c=4]jump
.L21.l_o7ba9bc:

	# epilogue
	set_sp! &14
	return

# FUNCTION ENDS:__ssprint_r

.LC0.l_o7ba9bc:
#	.string "0123456789ABCDEF"
	data1 [ 48 49 50 51 52 53 54 55 56 57 65 66 67 68 69 70 0 ]
.LC1.l_o7ba9bc:
#	.string "0123456789abcdef"
	data1 [ 48 49 50 51 52 53 54 55 56 57 97 98 99 100 101 102 0 ]
.LC2.l_o7ba9bc:
#	.string "(null)"
	data1 [ 40 110 117 108 108 41 0 ]
	#peephole move_dead
	#peephole move_dead
	#peephole move_dead
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole 1
	#peephole nop+set
	#peephole 1
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole 1
	#peephole nop+set
	#peephole move
	#peephole move+push+sub
	#peephole move_dead
	#peephole 1
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole move_dead
	#peephole move_dead
	#peephole move_dead
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole 1
	#peephole nop+set
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole move_dead
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole move_dead
	#peephole 1
	#peephole move_dead
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole 1
	#peephole nop+set
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole move_dead
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole move_dead
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move_dead
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole move_dead
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move_dead
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole 1
	#peephole nop+set
	#peephole 1
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole 1
	#peephole nop+set
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole move_dead
	#peephole move_dead
	#peephole move_dead
	#peephole move_dead
	#peephole move_dead
	#peephole move+move(allmodes x allmodes)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole nop+set
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole push+add+pop+push+ind pop
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole 1
	#peephole move
	#peephole move+push(pushable)
	#peephole 1
	#peephole move_dead
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole 1
	#peephole nop+set
	#peephole move_dead
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole 1
	#peephole move_dead
	#peephole move_dead
	#peephole move_dead
	#peephole pop+pusharg
	#peephole move_dead
	#peephole zero_extend
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole 1
	#peephole move_dead
	#peephole move
	#peephole move+push(pushable)
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole pop+move2(deadreg)
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole nop+set
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move_dead
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole move_dead
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole nop+set
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move_dead
	#peephole move_dead
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole pop+cmp
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole pop+move2(deadreg)
	#peephole move+push(pushable)
	#peephole 1
	#peephole nop+set
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+cmp
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole pop+block+cmp
	#peephole pop+move2(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move2(deadreg)
	#peephole pop+move(deadreg)
	#peephole move_dead
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+move2(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+move(deadreg)
	#peephole pop+move2(deadreg)
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+move2(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block

# FUNCTION BEGINS:_svfiprintf_r
	EXPORT	_svfiprintf_r
_svfiprintf_r:
	# prologue (16 GPRs)

	set_sp! &-47

	load8! &48	# 2	[c=2]movdi_push_pop
	store8! &15 	#X14
	load8! &49	# 3	[c=2]movdi_push_pop
	store8! &14 	#X13
	load8! &50	# 4	[c=2]movdi_push_pop
	store8! &6 	#X5
	load8! &13 	#X13	# 303	[c=6]movhi_to_tr_unspec/2
	add! 16	
	load2	
	#	
	and! 0x80		# 309	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=2)
	and! 65535		# 5417	[c=12]*peep2_cbranchhi
	# - EQ0
	jump_zero! .L25.l_o7ba9bc
	# END CBRANCH
	load8! &13 	#X13	# 318	[c=11]movdi_to_tr_unspec/2
	add! 24	
	load8	
	#	
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L266.l_o7ba9bc	# 5234	[c=12]*peep2_cbranchdi
	# END CBRANCH
.L25.l_o7ba9bc:
	push! &0		# 5210	[c=4]movdi_to_tr_unspec/1
	add! 248		# 5217	[c=4]*adddi/0
	store8! &24	# 5215	[c=4]movdi_from_tr_unspec/0
	push! 0		# 357	[c=4]movdi_push_pop
	store8! &26
	push! 0		# 358	[c=4]movsi_push_pop
	store4! &25
	push! &0		# 5226	[c=4]movdi_to_tr_unspec/1
	add! 248		# 5233	[c=4]*adddi/0
	store8! &3 	#X2	# 5231	[c=4]movdi_from_tr_unspec/0
	push! 0		# 17	[c=4]movdi_push_pop
	store8! &21
	push! 0		# 18	[c=4]movsi_push_pop
	store8! &16 	#X15
.L28.l_o7ba9bc:
	load8! &5 	#X5	# 364	[c=7]movqi_to_tr_unspec/2
	load1	
	#	
	store8! &1 	#AR	# 366	[c=4]movqi_from_tr_unspec/0
	# CBRANCH EQ0	# 368	[c=12]cbranchqi4_internal
	load1! &0 	#AR
	jump_zero! .L29.l_o7ba9bc
	# END CBRANCH
	# CBRANCH EQ	# 370	[c=12]cbranchqi4_internal
	load1! &0 	#AR
	push! 37	
	xor	
	jump_zero! .L150.l_o7ba9bc
	# END CBRANCH
	load8! &5 	#X5	# 19	[c=4]movdi_push_pop
	store8! &5 	#X4
	load8! &4 	#X4	# 372	[c=5]movdi_to_tr_unspec/1
	add! 1		# 374	[c=4]*adddi/0
	store8! &4 	#X3	# 375	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 377	[c=7]movqi_to_tr_unspec/2
	load1	
	#	
	store8! &1 	#AR	# 379	[c=4]movqi_from_tr_unspec/0
	# CBRANCH EQ0	# 381	[c=12]cbranchqi4_internal
	load1! &0 	#AR
	jump_zero! .L31.l_o7ba9bc
	# END CBRANCH
.L268.l_o7ba9bc:
	# CBRANCH EQ	# 384	[c=12]cbranchqi4_internal
	load1! &0 	#AR
	push! 37	
	xor	
	jump_zero! .L267.l_o7ba9bc
	# END CBRANCH
	load8! &3 	#X3	# 20	[c=4]movdi_push_pop
	store8! &5 	#X4
	load8! &4 	#X4	# 5431	[c=5]movdi_to_tr_unspec/1
	add! 1		# 5433	[c=4]*adddi/0
	store8! &4 	#X3	# 5434	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 5435	[c=7]movqi_to_tr_unspec/2
	load1	
	#	
	store8! &1 	#AR	# 5437	[c=4]movqi_from_tr_unspec/0
	# CBRANCH EQ0	# 5438	[c=12]cbranchqi4_internal
	load1! &0 	#AR
	jump_not_zero! .L268.l_o7ba9bc
	# END CBRANCH
.L31.l_o7ba9bc:
	load8! &3 	#X3	# 2753	[c=5]movdi_to_tr_unspec/1
	load8! &6 	#X5	# 2755	[c=14]*subdi3/2
	sub
	store8! &7 	#X6	# 5240	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ0	# 2762	[c=12]cbranchsi4_internal
	load4! &6 	#X6
	jump_zero! .L29.l_o7ba9bc
	# END CBRANCH
.L149.l_o7ba9bc:
	load8! &5 	#X5	# 389	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 391	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load4! &6 	#X6	# 393	[c=5]movsi_to_tr_unspec/1
	sigx4		# 395	[c=6]*extendsidi2
	store8! &1 	#AR	# 396	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 398	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 400	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &0 	#AR	# 403	[c=5]movdi_to_tr_unspec/1
	load8! &26	# 405	[c=6]*adddi/1
	add
	store8! &26	# 5197	[c=4]movdi_from_tr_unspec/0
	load4! &24	# 5198	[c=5]movsi_to_tr_unspec/1
	add! 1		# 412	[c=4]*adddi/0
	store8! &1 	#AR	# 413	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 5201	[c=4]movsi_push_pop
	store4! &25
	# CBRANCH	# 420	[c=12]cbranchsi4_internal
	push! 7	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L34.l_o7ba9bc
	# END CBRANCH
	load8! &2 	#X2	# 427	[c=5]movdi_to_tr_unspec/1
	add! 16		# 429	[c=4]*adddi/0
	store8! &3 	#X2	# 430	[c=4]movdi_from_tr_unspec/0
	load8! &6 	#X6	# 5158	[c=5]movdi_to_tr_unspec/1
	load8! &16 	#X15	# 5160	[c=6]*adddi/2
	add
	store8! &16 	#X15	# 5413	[c=4]movsi_from_tr_unspec/0
	load8! &4 	#X4	# 463	[c=6]movqi_to_tr_unspec/2
	add! 1	
	load1	
	#	
	# CBRANCH - peep (modesize=1)
	and! 255		# 5162	[c=12]*peep2_cbranchqi
	# - EQ0
	jump_zero! .L29.l_o7ba9bc
	# END CBRANCH
.L30.l_o7ba9bc:
	load8! &3 	#X3	# 470	[c=5]movdi_to_tr_unspec/1
	add! 1		# 472	[c=4]*adddi/0
	store8! &1 	#AR	# 473	[c=4]movdi_from_tr_unspec/0
	push! 0		# 475	[c=4]movqi_push_pop
	store1! &22
	push! 0		# 35	[c=4]movqi_push_pop
	store8! &4 	#X3
	push! 0		# 36	[c=4]movqi_push_pop
	store8! &8 	#X7
	push! -1		# 37	[c=4]movsi_push_pop
	store8! &9 	#X8
	push! 0		# 38	[c=4]movsi_push_pop
	store8! &7 	#X6
	push! 0		# 39	[c=4]movsi_push_pop
	store8! &5 	#X4
.L37.l_o7ba9bc:
	load8! &0 	#AR	# 482	[c=5]movdi_to_tr_unspec/1
	add! 1		# 484	[c=4]*adddi/0
	store8! &6 	#X5	# 485	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 487	[c=7]movqi_to_tr_unspec/2
	load1	
	#	
	sigx1		# 493	[c=6]*extendqidi2
	store8! &2 	#X1	# 5411	[c=4]movsi_from_tr_unspec/0
.L39.l_o7ba9bc:
	#CASESI		# 505	[c=43]casesi_internal
	push! 88	
	load4! &2 	#X1
	sigx4	
	add! -32	
	lt_u	
	not	
	jump_zero! .L40.l_o7ba9bc
	load4! &1 	#X1
	sigx4	
	add! -32	
	mult! 8	
	add! .L42.l_o7ba9bc	
	load8	
	jump	
	##	
.L42.l_o7ba9bc:
	data8 [.L62.l_o7ba9bc]#casesi entry
	data8 [.L40.l_o7ba9bc]#casesi entry
	data8 [.L40.l_o7ba9bc]#casesi entry
	data8 [.L61.l_o7ba9bc]#casesi entry
	data8 [.L40.l_o7ba9bc]#casesi entry
	data8 [.L40.l_o7ba9bc]#casesi entry
	data8 [.L40.l_o7ba9bc]#casesi entry
	data8 [.L40.l_o7ba9bc]#casesi entry
	data8 [.L40.l_o7ba9bc]#casesi entry
	data8 [.L40.l_o7ba9bc]#casesi entry
	data8 [.L60.l_o7ba9bc]#casesi entry
	data8 [.L152.l_o7ba9bc]#casesi entry
	data8 [.L40.l_o7ba9bc]#casesi entry
	data8 [.L59.l_o7ba9bc]#casesi entry
	data8 [.L58.l_o7ba9bc]#casesi entry
	data8 [.L40.l_o7ba9bc]#casesi entry
	data8 [.L57.l_o7ba9bc]#casesi entry
	data8 [.L153.l_o7ba9bc]#casesi entry
	data8 [.L153.l_o7ba9bc]#casesi entry
	data8 [.L153.l_o7ba9bc]#casesi entry
	data8 [.L153.l_o7ba9bc]#casesi entry
	data8 [.L153.l_o7ba9bc]#casesi entry
	data8 [.L153.l_o7ba9bc]#casesi entry
	data8 [.L153.l_o7ba9bc]#casesi entry
	data8 [.L153.l_o7ba9bc]#casesi entry
	data8 [.L153.l_o7ba9bc]#casesi entry
	data8 [.L40.l_o7ba9bc]#casesi entry
	data8 [.L40.l_o7ba9bc]#casesi entry
	data8 [.L40.l_o7ba9bc]#casesi entry
	data8 [.L40.l_o7ba9bc]#casesi entry
	data8 [.L40.l_o7ba9bc]#casesi entry
	data8 [.L40.l_o7ba9bc]#casesi entry
	data8 [.L40.l_o7ba9bc]#casesi entry
	data8 [.L40.l_o7ba9bc]#casesi entry
	data8 [.L40.l_o7ba9bc]#casesi entry
	data8 [.L40.l_o7ba9bc]#casesi entry
	data8 [.L55.l_o7ba9bc]#casesi entry
	data8 [.L40.l_o7ba9bc]#casesi entry
	data8 [.L40.l_o7ba9bc]#casesi entry
	data8 [.L40.l_o7ba9bc]#casesi entry
	data8 [.L40.l_o7ba9bc]#casesi entry
	data8 [.L40.l_o7ba9bc]#casesi entry
	data8 [.L40.l_o7ba9bc]#casesi entry
	data8 [.L40.l_o7ba9bc]#casesi entry
	data8 [.L40.l_o7ba9bc]#casesi entry
	data8 [.L40.l_o7ba9bc]#casesi entry
	data8 [.L40.l_o7ba9bc]#casesi entry
	data8 [.L54.l_o7ba9bc]#casesi entry
	data8 [.L40.l_o7ba9bc]#casesi entry
	data8 [.L40.l_o7ba9bc]#casesi entry
	data8 [.L40.l_o7ba9bc]#casesi entry
	data8 [.L40.l_o7ba9bc]#casesi entry
	data8 [.L40.l_o7ba9bc]#casesi entry
	data8 [.L53.l_o7ba9bc]#casesi entry
	data8 [.L40.l_o7ba9bc]#casesi entry
	data8 [.L40.l_o7ba9bc]#casesi entry
	data8 [.L52.l_o7ba9bc]#casesi entry
	data8 [.L40.l_o7ba9bc]#casesi entry
	data8 [.L40.l_o7ba9bc]#casesi entry
	data8 [.L40.l_o7ba9bc]#casesi entry
	data8 [.L40.l_o7ba9bc]#casesi entry
	data8 [.L40.l_o7ba9bc]#casesi entry
	data8 [.L40.l_o7ba9bc]#casesi entry
	data8 [.L40.l_o7ba9bc]#casesi entry
	data8 [.L40.l_o7ba9bc]#casesi entry
	data8 [.L40.l_o7ba9bc]#casesi entry
	data8 [.L40.l_o7ba9bc]#casesi entry
	data8 [.L51.l_o7ba9bc]#casesi entry
	data8 [.L49.l_o7ba9bc]#casesi entry
	data8 [.L40.l_o7ba9bc]#casesi entry
	data8 [.L40.l_o7ba9bc]#casesi entry
	data8 [.L40.l_o7ba9bc]#casesi entry
	data8 [.L50.l_o7ba9bc]#casesi entry
	data8 [.L49.l_o7ba9bc]#casesi entry
	data8 [.L40.l_o7ba9bc]#casesi entry
	data8 [.L40.l_o7ba9bc]#casesi entry
	data8 [.L45.l_o7ba9bc]#casesi entry
	data8 [.L40.l_o7ba9bc]#casesi entry
	data8 [.L48.l_o7ba9bc]#casesi entry
	data8 [.L47.l_o7ba9bc]#casesi entry
	data8 [.L46.l_o7ba9bc]#casesi entry
	data8 [.L45.l_o7ba9bc]#casesi entry
	data8 [.L40.l_o7ba9bc]#casesi entry
	data8 [.L44.l_o7ba9bc]#casesi entry
	data8 [.L40.l_o7ba9bc]#casesi entry
	data8 [.L43.l_o7ba9bc]#casesi entry
	data8 [.L40.l_o7ba9bc]#casesi entry
	data8 [.L40.l_o7ba9bc]#casesi entry
	data8 [.L41.l_o7ba9bc]#casesi entry
.L45.l_o7ba9bc:
	load8! &4 	#X4	# 777	[c=5]movdi_to_tr_unspec/1
	or! 0x10		# 779	[c=4]*iordi3/0
	store8! &5 	#X4	# 5374	[c=4]movsi_from_tr_unspec/0
.L38.l_o7ba9bc:
	load8! &5 	#X5	# 34	[c=4]movdi_push_pop
	store8! &1 	#AR
	jump! .L37.l_o7ba9bc		# 5829	[c=4]jump
.L271.l_o7ba9bc:
	load8! &6 	#X6	# 550	[c=5]movdi_to_tr_unspec/1
	neg		# 552	[c=3]*negdi2
	store8! &7 	#X6	# 5406	[c=4]movsi_from_tr_unspec/0
	load8! &0 	#AR	# 43	[c=4]movdi_push_pop
	store8! &52
.L59.l_o7ba9bc:
	load8! &4 	#X4	# 561	[c=5]movdi_to_tr_unspec/1
	or! 0x4		# 563	[c=4]*iordi3/0
	store8! &5 	#X4	# 5404	[c=4]movsi_from_tr_unspec/0
	load8! &5 	#X5	# 5441	[c=4]movdi_push_pop
	store8! &1 	#AR
	jump! .L37.l_o7ba9bc		# 5831	[c=4]jump
.L267.l_o7ba9bc:
	load8! &3 	#X3	# 2737	[c=5]movdi_to_tr_unspec/1
	load8! &6 	#X5	# 2739	[c=14]*subdi3/2
	sub
	store8! &7 	#X6	# 5242	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ0	# 2747	[c=12]cbranchsi4_internal
	load4! &6 	#X6
	jump_not_zero! .L149.l_o7ba9bc
	# END CBRANCH
	load8! &3 	#X3	# 5444	[c=5]movdi_to_tr_unspec/1
	add! 1		# 5446	[c=4]*adddi/0
	store8! &1 	#AR	# 5447	[c=4]movdi_from_tr_unspec/0
	push! 0		# 5448	[c=4]movqi_push_pop
	store1! &22
	push! 0		# 5449	[c=4]movqi_push_pop
	store8! &4 	#X3
	push! 0		# 5450	[c=4]movqi_push_pop
	store8! &8 	#X7
	push! -1		# 5451	[c=4]movsi_push_pop
	store8! &9 	#X8
	push! 0		# 5452	[c=4]movsi_push_pop
	store8! &7 	#X6
	push! 0		# 5453	[c=4]movsi_push_pop
	store8! &5 	#X4
	jump! .L37.l_o7ba9bc		# 5833	[c=4]jump
.L34.l_o7ba9bc:
	push! &0		# 5187	[c=4]movdi_to_tr_unspec/1
	add! 184		# 5194	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 5196	[c=0]*peep2_pop_pusharg
	load8! &14 	#X13	# 443	[c=4]pushdi1_not_fp/1
	load8! &16 	#X14	# 444	[c=4]pushdi1_not_fp/1
	call! __ssprint_r		# 445	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	# CBRANCH EQ0	# 447	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L36.l_o7ba9bc
	# END CBRANCH
	push! &0		# 5171	[c=4]movdi_to_tr_unspec/1
	add! 248		# 5178	[c=4]*adddi/0
	store8! &3 	#X2	# 5176	[c=4]movdi_from_tr_unspec/0
	load8! &6 	#X6	# 5457	[c=5]movdi_to_tr_unspec/1
	load8! &16 	#X15	# 5459	[c=6]*adddi/2
	add
	store8! &16 	#X15	# 5461	[c=4]movsi_from_tr_unspec/0
	load8! &4 	#X4	# 5462	[c=6]movqi_to_tr_unspec/2
	add! 1	
	load1	
	#	
	# CBRANCH - peep (modesize=1)
	and! 255		# 5464	[c=12]*peep2_cbranchqi
	# - EQ0
	jump_not_zero! .L30.l_o7ba9bc
	# END CBRANCH
.L29.l_o7ba9bc:
	# CBRANCH EQ0	# 2682	[c=14]cbranchdi4_internal
	load8! &25
	jump_zero! .L36.l_o7ba9bc
	# END CBRANCH
	push! &0		# 4239	[c=4]movdi_to_tr_unspec/1
	add! 184		# 4246	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 4248	[c=0]*peep2_pop_pusharg
	load8! &14 	#X13	# 2690	[c=4]pushdi1_not_fp/1
	load8! &16 	#X14	# 2691	[c=4]pushdi1_not_fp/1
	call! __ssprint_r		# 2692	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
.L36.l_o7ba9bc:
	load8! &13 	#X13	# 2695	[c=6]movhi_to_tr_unspec/2
	add! 16	
	load2	
	#	
	and! 0x40		# 2701	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=2)
	and! 65535		# 5246	[c=12]*peep2_cbranchhi
	# - EQ0
	jump_not_zero! .L269.l_o7ba9bc
	# END CBRANCH
	load4! &15 	#X15	# 2784	[c=4]movsi_push_pop
	store4! &49
	jump! .L270.l_o7ba9bc		# 5837	[c=4]jump
.L153.l_o7ba9bc:
	push! 0		# 45	[c=4]movsi_push_pop
	store8! &7 	#X6
.L56.l_o7ba9bc:
	load8! &6 	#X6	# 698	[c=5]movdi_to_tr_unspec/1
	mult! 10		# 700	[c=4]*muldi3/0
	store8! &1 	#AR	# 5377	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 5378	[c=5]movdi_to_tr_unspec/1
	add! -48		# 709	[c=4]*adddi/0
	load8! &1 	#AR	# 722	[c=6]*adddi/2
	add
	store8! &7 	#X6	# 5382	[c=4]movsi_from_tr_unspec/0
	load8! &5 	#X5	# 729	[c=5]movdi_to_tr_unspec/1
	add! 1		# 731	[c=4]*adddi/0
	store8! &1 	#AR	# 732	[c=4]movdi_from_tr_unspec/0
	load8! &5 	#X5	# 734	[c=7]movqi_to_tr_unspec/2
	load1	
	#	
	sigx1		# 740	[c=6]*extendqidi2
	store8! &2 	#X1	# 5384	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 5385	[c=5]movdi_to_tr_unspec/1
	add! -48		# 749	[c=4]*adddi/0
	store8! &10 	#X9	# 5388	[c=4]movsi_from_tr_unspec/0
	load8! &0 	#AR	# 757	[c=4]movdi_push_pop
	store8! &6 	#X5
	# CBRANCH	# 758	[c=12]cbranchsi4_internal
	push! 9	
	load4! &10 	#X9
	lt_u	
	jump_zero! .L56.l_o7ba9bc
	# END CBRANCH
.L67.l_o7ba9bc:
	load8! &0 	#AR	# 42	[c=4]movdi_push_pop
	store8! &6 	#X5
	jump! .L39.l_o7ba9bc		# 5839	[c=4]jump
.L152.l_o7ba9bc:
	push! 1		# 27	[c=4]movqi_push_pop
	store8! &4 	#X3
	push! 43		# 28	[c=4]movqi_push_pop
	store8! &8 	#X7
	load8! &5 	#X5	# 5467	[c=4]movdi_push_pop
	store8! &1 	#AR
	jump! .L37.l_o7ba9bc		# 5841	[c=4]jump
.L61.l_o7ba9bc:
	load8! &4 	#X4	# 526	[c=5]movdi_to_tr_unspec/1
	or! 0x1		# 528	[c=4]*iordi3/0
	store8! &5 	#X4	# 5408	[c=4]movsi_from_tr_unspec/0
	load8! &5 	#X5	# 5470	[c=4]movdi_push_pop
	store8! &1 	#AR
	jump! .L37.l_o7ba9bc		# 5843	[c=4]jump
.L62.l_o7ba9bc:
	# CBRANCH EQ0	# 520	[c=12]cbranchqi4_internal
	load1! &7 	#X7
	jump_not_zero! .L38.l_o7ba9bc
	# END CBRANCH
	push! 1		# 31	[c=4]movqi_push_pop
	store8! &4 	#X3
	push! 32		# 32	[c=4]movqi_push_pop
	store8! &8 	#X7
	load8! &5 	#X5	# 5473	[c=4]movdi_push_pop
	store8! &1 	#AR
	jump! .L37.l_o7ba9bc		# 5845	[c=4]jump
.L57.l_o7ba9bc:
	load8! &4 	#X4	# 685	[c=5]movdi_to_tr_unspec/1
	or! 0x80		# 687	[c=4]*iordi3/0
	store8! &5 	#X4	# 5390	[c=4]movsi_from_tr_unspec/0
	load8! &5 	#X5	# 5476	[c=4]movdi_push_pop
	store8! &1 	#AR
	jump! .L37.l_o7ba9bc		# 5847	[c=4]jump
.L58.l_o7ba9bc:
	load8! &5 	#X5	# 574	[c=5]movdi_to_tr_unspec/1
	add! 1		# 576	[c=4]*adddi/0
	store8! &10 	#X9	# 577	[c=4]movdi_from_tr_unspec/0
	load8! &5 	#X5	# 579	[c=7]movqi_to_tr_unspec/2
	load1	
	#	
	sigx1		# 585	[c=6]*extendqidi2
	store8! &2 	#X1	# 5402	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ	# 592	[c=12]cbranchsi4_internal
	load4! &1 	#X1
	push! 42	
	xor	
	jump_zero! .L65.l_o7ba9bc
	# END CBRANCH
	load8! &1 	#X1	# 594	[c=5]movdi_to_tr_unspec/1
	add! -48		# 596	[c=4]*adddi/0
	store8! &6 	#X5	# 5399	[c=4]movsi_from_tr_unspec/0
	push! 0		# 44	[c=4]movsi_push_pop
	store8! &9 	#X8
	load8! &9 	#X9	# 40	[c=4]movdi_push_pop
	store8! &1 	#AR
	# CBRANCH	# 604	[c=12]cbranchsi4_internal
	push! 9	
	load4! &6 	#X5
	lt_u	
	not	
	jump_zero! .L67.l_o7ba9bc
	# END CBRANCH
.L66.l_o7ba9bc:
	load8! &8 	#X8	# 628	[c=5]movdi_to_tr_unspec/1
	mult! 10		# 630	[c=4]*muldi3/0
	store8! &1 	#AR	# 5425	[c=4]movdi_from_tr_unspec/0
	load8! &5 	#X5	# 5426	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 643	[c=6]*adddi/2
	add
	store8! &9 	#X8	# 5393	[c=4]movsi_from_tr_unspec/0
	load8! &9 	#X9	# 650	[c=5]movdi_to_tr_unspec/1
	add! 1		# 652	[c=4]*adddi/0
	store8! &1 	#AR	# 653	[c=4]movdi_from_tr_unspec/0
	load8! &9 	#X9	# 655	[c=7]movqi_to_tr_unspec/2
	load1	
	#	
	sigx1		# 661	[c=6]*extendqidi2
	store8! &2 	#X1	# 5395	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 5396	[c=5]movdi_to_tr_unspec/1
	add! -48		# 670	[c=4]*adddi/0
	store8! &6 	#X5	# 671	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 5148	[c=4]movdi_push_pop
	store8! &10 	#X9
	# CBRANCH	# 679	[c=12]cbranchsi4_internal
	push! 9	
	load4! &6 	#X5
	lt_u	
	not	
	jump_zero! .L67.l_o7ba9bc
	# END CBRANCH
	load8! &8 	#X8	# 5479	[c=5]movdi_to_tr_unspec/1
	mult! 10		# 5481	[c=4]*muldi3/0
	store8! &1 	#AR	# 5482	[c=4]movdi_from_tr_unspec/0
	load8! &5 	#X5	# 5483	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 5485	[c=6]*adddi/2
	add
	store8! &9 	#X8	# 5487	[c=4]movsi_from_tr_unspec/0
	load8! &9 	#X9	# 5488	[c=5]movdi_to_tr_unspec/1
	add! 1		# 5490	[c=4]*adddi/0
	store8! &1 	#AR	# 5491	[c=4]movdi_from_tr_unspec/0
	load8! &9 	#X9	# 5492	[c=7]movqi_to_tr_unspec/2
	load1	
	#	
	sigx1		# 5494	[c=6]*extendqidi2
	store8! &2 	#X1	# 5495	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 5496	[c=5]movdi_to_tr_unspec/1
	add! -48		# 5498	[c=4]*adddi/0
	store8! &6 	#X5	# 5499	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 5500	[c=4]movdi_push_pop
	store8! &10 	#X9
	# CBRANCH	# 5501	[c=12]cbranchsi4_internal
	push! 9	
	load4! &6 	#X5
	lt_u	
	jump_zero! .L66.l_o7ba9bc
	# END CBRANCH
	jump! .L67.l_o7ba9bc		# 5850	[c=4]jump
.L60.l_o7ba9bc:
	load8! &51	# 539	[c=5]movdi_to_tr_unspec/1
	add! 8		# 541	[c=4]*adddi/0
	store8! &1 	#AR	# 542	[c=4]movdi_from_tr_unspec/0
	load8! &51	# 3900	[c=2]movdi_push_pop
	store8! &12 	#X11
	load8! &11 	#X11	# 544	[c=7]movsi_to_tr_unspec/2
	load4	
	#	
	store8! &7 	#X6	# 546	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 548	[c=12]cbranchsi4_internal
	load4! &6 	#X6
	add! -2147483648	
	push! 0	
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L271.l_o7ba9bc
	# END CBRANCH
	load8! &0 	#AR	# 33	[c=4]movdi_push_pop
	store8! &52
	load8! &5 	#X5	# 5505	[c=4]movdi_push_pop
	store8! &1 	#AR
	jump! .L37.l_o7ba9bc		# 5853	[c=4]jump
.L43.l_o7ba9bc:
	# CBRANCH EQ0	# 1190	[c=12]cbranchqi4_internal
	load1! &3 	#X3
	jump_not_zero! .L272.l_o7ba9bc
	# END CBRANCH
.L93.l_o7ba9bc:
	load8! &4 	#X4	# 1195	[c=5]movdi_to_tr_unspec/1
	and! 0x10		# 1197	[c=4]*anddi3/0
	store8! &1 	#AR	# 5342	[c=4]movdi_from_tr_unspec/0
	load8! &51	# 5343	[c=5]movdi_to_tr_unspec/1
	add! 8		# 1206	[c=4]*adddi/0
	store8! &2 	#X1	# 1207	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 1209	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L92.l_o7ba9bc
	# END CBRANCH
	load8! &4 	#X4	# 1225	[c=5]movdi_to_tr_unspec/1
	and! 0x40		# 1227	[c=4]*anddi3/0
	store8! &4 	#X3	# 5341	[c=4]movsi_from_tr_unspec/0
	load8! &51	# 3919	[c=2]movdi_push_pop
	store8! &12 	#X11
	load8! &11 	#X11	# 1234	[c=7]movsi_to_tr_unspec/2
	load4	
	#	
	store8! &1 	#AR	# 1236	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ0	# 1238	[c=12]cbranchsi4_internal
	load4! &3 	#X3
	jump_zero! .L95.l_o7ba9bc
	# END CBRANCH
	load2! &0 	#AR	# 5082	[c=5]movhi_to_tr_unspec/1
	store8! &1 	#AR	# 5084	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 66	[c=4]movdi_push_pop
	store8! &52
	push! 1		# 67	[c=4]movsi_push_pop
	store8! &4 	#X3
.L85.l_o7ba9bc:
	push! 0		# 1358	[c=4]movqi_push_pop
	store1! &22
	push! 0		# 74	[c=4]movqi_push_pop
	store8! &2 	#X1
.L77.l_o7ba9bc:
	# CBRANCH EQ	# 1361	[c=12]cbranchsi4_internal
	load4! &8 	#X8
	push! 4294967295	
	xor	
	jump_zero! .L100.l_o7ba9bc
	# END CBRANCH
.L290.l_o7ba9bc:
	load8! &4 	#X4	# 1363	[c=5]movdi_to_tr_unspec/1
	and! 0xffffffffffffff7f		# 1365	[c=4]*anddi3/0
	store8! &11 	#X10	# 5329	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ0	# 1372	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_not_zero! .L159.l_o7ba9bc
	# END CBRANCH
	# CBRANCH EQ0	# 1374	[c=12]cbranchsi4_internal
	load4! &8 	#X8
	jump_not_zero! .L273.l_o7ba9bc
	# END CBRANCH
	# CBRANCH EQ0	# 1680	[c=12]cbranchsi4_internal
	load4! &3 	#X3
	jump_not_zero! .L163.l_o7ba9bc
	# END CBRANCH
	load8! &4 	#X4	# 1682	[c=5]movdi_to_tr_unspec/1
	and! 0x1		# 1684	[c=4]*anddi3/0
	store8! &13 	#X12	# 5299	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ0	# 1691	[c=12]cbranchsi4_internal
	load4! &12 	#X12
	jump_zero! .L164.l_o7ba9bc
	# END CBRANCH
	push! 48		# 1693	[c=4]movqi_push_pop
	store1! (+ &0 255)
	push! &0		# 4870	[c=4]movdi_to_tr_unspec/1
	add! 208		# 4877	[c=4]*adddi/0
	add! 39		# 147	[c=4]*adddi/0
	store8! &4 	#X3	# 148	[c=4]movdi_from_tr_unspec/0
.L91.l_o7ba9bc:
	load4! &8 	#X8	# 1720	[c=4]movsi_push_pop
	store8! &10 	#X9
	# CBRANCH	# 1721	[c=12]cbranchsi4_internal
	load4! &8 	#X8
	add! -2147483648	
	load4! &13 	#X12
	add! -2147483648	
	lt_u	
	jump_zero! .L112.l_o7ba9bc
	# END CBRANCH
	load4! &12 	#X12	# 1722	[c=4]movsi_push_pop
	store8! &10 	#X9
.L112.l_o7ba9bc:
	# CBRANCH EQ0	# 1724	[c=12]cbranchqi4_internal
	load1! &1 	#X1
	jump_zero! .L113.l_o7ba9bc
	# END CBRANCH
	load8! &9 	#X9	# 1726	[c=5]movdi_to_tr_unspec/1
	add! 1		# 1728	[c=4]*adddi/0
	store8! &10 	#X9	# 5296	[c=4]movsi_from_tr_unspec/0
.L113.l_o7ba9bc:
	load8! &10 	#X10	# 1737	[c=5]movdi_to_tr_unspec/1
	and! 0x2		# 1739	[c=4]*anddi3/0
	store4! &17	# 5294	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ0	# 1746	[c=14]cbranchsi4_internal
	load4! &16
	jump_zero! .L114.l_o7ba9bc
	# END CBRANCH
	load8! &9 	#X9	# 1748	[c=5]movdi_to_tr_unspec/1
	add! 2		# 1750	[c=4]*adddi/0
	store8! &10 	#X9	# 5293	[c=4]movsi_from_tr_unspec/0
.L114.l_o7ba9bc:
	load8! &10 	#X10	# 1759	[c=5]movdi_to_tr_unspec/1
	and! 0x84		# 1761	[c=4]*anddi3/0
	store4! &19	# 5291	[c=4]movsi_from_tr_unspec/0
	load8! &25	# 1768	[c=2]movdi_push_pop
	store8! &1 	#AR
	load4! &24	# 1769	[c=2]movsi_push_pop
	store8! &2 	#X1
	# CBRANCH EQ0	# 1770	[c=14]cbranchsi4_internal
	load4! &18
	jump_not_zero! .L115.l_o7ba9bc
	# END CBRANCH
	load8! &9 	#X9	# 4798	[c=5]movdi_to_tr_unspec/1
	load8! &7 	#X6	# 4800	[c=14]*subdi3/2
	sub
	neg		# 4801	[c=4]*neg_tr
	store8! &5 	#X4	# 5289	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 5290	[c=12]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &5 	#X4
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L274.l_o7ba9bc
	# END CBRANCH
.L115.l_o7ba9bc:
	load8! &1 	#X1	# 1934	[c=5]movdi_to_tr_unspec/1
	add! 1		# 1936	[c=4]*adddi/0
	store8! &8 	#X7	# 5286	[c=4]movsi_from_tr_unspec/0
	load8! &2 	#X2	# 1943	[c=5]movdi_to_tr_unspec/1
	add! 16		# 1945	[c=4]*adddi/0
	store8! &5 	#X4	# 1946	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 1948	[c=14]cbranchqi4_internal
	load1! &21
	jump_zero! .L121.l_o7ba9bc
	# END CBRANCH
	push! &0		# 4715	[c=4]movdi_to_tr_unspec/1
	add! 168		# 4722	[c=4]*adddi/0
	load8! &3 	#X2	# 4720	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	push! 1		# 1955	[c=3]movdi_to_tr_unspec/0
	load8! &3 	#X2	# 1957	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &0 	#AR	# 1964	[c=5]movdi_to_tr_unspec/1
	add! 1		# 1966	[c=4]*adddi/0
	store8! &1 	#AR	# 1967	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 1970	[c=4]movdi_push_pop
	store8! &26
	load4! &7 	#X7	# 1971	[c=4]movsi_push_pop
	store4! &25
	# CBRANCH	# 1972	[c=12]cbranchsi4_internal
	push! 7	
	add! -2147483648	
	load4! &8 	#X7
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L122.l_o7ba9bc
	# END CBRANCH
	load8! &1 	#X1	# 1974	[c=5]movdi_to_tr_unspec/1
	add! 2		# 1976	[c=4]*adddi/0
	store8! &12 	#X11	# 5284	[c=4]movsi_from_tr_unspec/0
	load8! &2 	#X2	# 1983	[c=5]movdi_to_tr_unspec/1
	add! 32		# 1985	[c=4]*adddi/0
	store8! &20	# 1986	[c=4]movdi_from_tr_unspec/0
	load4! &7 	#X7	# 188	[c=4]movsi_push_pop
	store8! &2 	#X1
	load4! &11 	#X11	# 189	[c=4]movsi_push_pop
	store8! &8 	#X7
	load8! &4 	#X4	# 190	[c=4]movdi_push_pop
	store8! &3 	#X2
	load8! &19	# 191	[c=2]movdi_push_pop
	store8! &5 	#X4
.L121.l_o7ba9bc:
	# CBRANCH EQ0	# 2017	[c=14]cbranchsi4_internal
	load4! &16
	jump_zero! .L123.l_o7ba9bc
	# END CBRANCH
	push! &0		# 4646	[c=4]movdi_to_tr_unspec/1
	add! 176		# 4653	[c=4]*adddi/0
	load8! &3 	#X2	# 4651	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	push! 2		# 2024	[c=3]movdi_to_tr_unspec/0
	load8! &3 	#X2	# 2026	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &0 	#AR	# 2033	[c=5]movdi_to_tr_unspec/1
	add! 2		# 2035	[c=4]*adddi/0
	store8! &1 	#AR	# 2036	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 2039	[c=4]movdi_push_pop
	store8! &26
	load4! &7 	#X7	# 2040	[c=4]movsi_push_pop
	store4! &25
	# CBRANCH	# 2041	[c=12]cbranchsi4_internal
	push! 7	
	add! -2147483648	
	load4! &8 	#X7
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L124.l_o7ba9bc
	# END CBRANCH
	load8! &7 	#X7	# 2043	[c=5]movdi_to_tr_unspec/1
	add! 1		# 2045	[c=4]*adddi/0
	store8! &3 	#X2	# 5280	[c=4]movsi_from_tr_unspec/0
	load8! &4 	#X4	# 2052	[c=5]movdi_to_tr_unspec/1
	add! 16		# 2054	[c=4]*adddi/0
	store8! &12 	#X11	# 2055	[c=4]movdi_from_tr_unspec/0
	load4! &7 	#X7	# 207	[c=4]movsi_push_pop
	store8! &2 	#X1
	load4! &2 	#X2	# 208	[c=4]movsi_push_pop
	store8! &8 	#X7
	load8! &4 	#X4	# 209	[c=4]movdi_push_pop
	store8! &3 	#X2
	load8! &11 	#X11	# 210	[c=4]movdi_push_pop
	store8! &5 	#X4
.L123.l_o7ba9bc:
	# CBRANCH EQ	# 2086	[c=14]cbranchsi4_internal
	load4! &18
	push! 128	
	xor	
	jump_zero! .L275.l_o7ba9bc
	# END CBRANCH
.L125.l_o7ba9bc:
	load8! &12 	#X12	# 4481	[c=5]movdi_to_tr_unspec/1
	load8! &9 	#X8	# 4483	[c=14]*subdi3/2
	sub
	neg		# 4484	[c=4]*neg_tr
	store8! &9 	#X8	# 5264	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 5265	[c=12]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &9 	#X8
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L276.l_o7ba9bc
	# END CBRANCH
.L131.l_o7ba9bc:
	load8! &3 	#X3	# 2446	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 2448	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load4! &12 	#X12	# 2450	[c=5]movsi_to_tr_unspec/1
	sigx4		# 2452	[c=6]*extendsidi2
	store8! &2 	#X1	# 2453	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 2455	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 2457	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &1 	#X1	# 2459	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 2461	[c=6]*adddi/2
	add
	store8! &1 	#AR	# 2462	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 2464	[c=4]movdi_push_pop
	store8! &26
	load4! &7 	#X7	# 2465	[c=4]movsi_push_pop
	store4! &25
	# CBRANCH	# 2466	[c=12]cbranchsi4_internal
	push! 7	
	add! -2147483648	
	load4! &8 	#X7
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L277.l_o7ba9bc
	# END CBRANCH
.L137.l_o7ba9bc:
	load8! &10 	#X10	# 2483	[c=5]movdi_to_tr_unspec/1
	and! 0x4		# 2485	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 5255	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L138.l_o7ba9bc
	# END CBRANCH
	load8! &9 	#X9	# 4346	[c=5]movdi_to_tr_unspec/1
	load8! &7 	#X6	# 4348	[c=14]*subdi3/2
	sub
	neg		# 4349	[c=4]*neg_tr
	store8! &3 	#X2	# 5252	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 2507	[c=12]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &3 	#X2
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L278.l_o7ba9bc
	# END CBRANCH
.L138.l_o7ba9bc:
	# CBRANCH	# 2641	[c=12]cbranchsi4_internal
	load4! &6 	#X6
	add! -2147483648	
	load4! &10 	#X9
	add! -2147483648	
	lt_u	
	jump_zero! .L143.l_o7ba9bc
	# END CBRANCH
	load4! &9 	#X9	# 2642	[c=4]movsi_push_pop
	store8! &7 	#X6
.L143.l_o7ba9bc:
	load8! &15 	#X15	# 4284	[c=5]movdi_to_tr_unspec/1
	load8! &7 	#X6	# 4286	[c=6]*adddi/2
	add
	store8! &16 	#X15	# 5248	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ0	# 2657	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_not_zero! .L144.l_o7ba9bc
	# END CBRANCH
	push! 0		# 2659	[c=4]movsi_push_pop
	store4! &25
	push! &0		# 4275	[c=4]movdi_to_tr_unspec/1
	add! 248		# 4282	[c=4]*adddi/0
	store8! &3 	#X2	# 4280	[c=4]movdi_from_tr_unspec/0
	jump! .L28.l_o7ba9bc		# 5862	[c=4]jump
.L44.l_o7ba9bc:
	load8! &51	# 1115	[c=5]movdi_to_tr_unspec/1
	add! 8		# 1117	[c=4]*adddi/0
	store8! &8 	#X7	# 1118	[c=4]movdi_from_tr_unspec/0
	load8! &51	# 3917	[c=2]movdi_push_pop
	store8! &12 	#X11
	load8! &11 	#X11	# 1120	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	store8! &4 	#X3	# 1122	[c=4]movdi_from_tr_unspec/0
	push! 0		# 1124	[c=4]movqi_push_pop
	store1! &22
	# CBRANCH EQ0	# 1125	[c=12]cbranchdi4_internal
	load8! &3 	#X3
	jump_zero! .L279.l_o7ba9bc
	# END CBRANCH
	# CBRANCH EQ	# 1137	[c=12]cbranchsi4_internal
	load4! &8 	#X8
	push! 4294967295	
	xor	
	jump_zero! .L89.l_o7ba9bc
	# END CBRANCH
	load4! &8 	#X8	# 1139	[c=5]movsi_to_tr_unspec/1
	sigx4		# 1141	[c=6]*extendsidi2
	#peep - pop(deadreg)+pusharg	# 5091	[c=0]*peep2_pop_pusharg
	push! 0		# 1145	[c=4]pushsi1_not_fp/0
	load8! &5 	#X3	# 1146	[c=4]pushdi1_not_fp/1
	call! memchr		# 1147	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	# CBRANCH EQ0	# 1149	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L90.l_o7ba9bc
	# END CBRANCH
	load8! &0 	#AR	# 1151	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 1153	[c=14]*subdi3/2
	sub
	store8! &13 	#X12	# 5348	[c=4]movsi_from_tr_unspec/0
	load1! &21	# 1160	[c=2]movqi_push_pop
	store8! &2 	#X1
	load8! &7 	#X7	# 169	[c=4]movdi_push_pop
	store8! &52
	load4! &4 	#X4	# 170	[c=4]movsi_push_pop
	store8! &11 	#X10
	push! 0		# 171	[c=4]movsi_push_pop
	store8! &9 	#X8
	jump! .L91.l_o7ba9bc		# 5865	[c=4]jump
.L41.l_o7ba9bc:
	# CBRANCH EQ0	# 511	[c=12]cbranchqi4_internal
	load1! &3 	#X3
	jump_not_zero! .L280.l_o7ba9bc
	# END CBRANCH
	push! .LC1.l_o7ba9bc		# 50	[c=4]movdi_push_pop
	store8! &21
.L64.l_o7ba9bc:
	load8! &4 	#X4	# 1269	[c=5]movdi_to_tr_unspec/1
	and! 0x10		# 1271	[c=4]*anddi3/0
	store8! &1 	#AR	# 5337	[c=4]movdi_from_tr_unspec/0
	load8! &51	# 5338	[c=5]movdi_to_tr_unspec/1
	add! 8		# 1280	[c=4]*adddi/0
	store8! &4 	#X3	# 1281	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 1283	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_zero! .L97.l_o7ba9bc
	# END CBRANCH
.L285.l_o7ba9bc:
	load8! &51	# 3920	[c=2]movdi_push_pop
	store8! &12 	#X11
	load8! &11 	#X11	# 1285	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	store8! &1 	#AR	# 1287	[c=4]movdi_from_tr_unspec/0
.L98.l_o7ba9bc:
	load8! &4 	#X4	# 1328	[c=5]movdi_to_tr_unspec/1
	and! 0x1		# 1330	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 5334	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L157.l_o7ba9bc
	# END CBRANCH
.L286.l_o7ba9bc:
	# CBRANCH EQ0	# 1339	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L158.l_o7ba9bc
	# END CBRANCH
	push! 48		# 1341	[c=4]movqi_push_pop
	store1! &23
	load1! &1 	#X1	# 5066	[c=4]movqi_push_pop
	store1! (+ &0 185)
	load8! &4 	#X4	# 1347	[c=5]movdi_to_tr_unspec/1
	or! 0x2		# 1349	[c=4]*iordi3/0
	store8! &5 	#X4	# 5331	[c=4]movsi_from_tr_unspec/0
	load8! &3 	#X3	# 62	[c=4]movdi_push_pop
	store8! &52
	push! 2		# 63	[c=4]movsi_push_pop
	store8! &4 	#X3
	push! 0		# 5508	[c=4]movqi_push_pop
	store1! &22
	push! 0		# 5509	[c=4]movqi_push_pop
	store8! &2 	#X1
	jump! .L77.l_o7ba9bc		# 5868	[c=4]jump
.L50.l_o7ba9bc:
	load8! &4 	#X4	# 764	[c=5]movdi_to_tr_unspec/1
	or! 0x40		# 766	[c=4]*iordi3/0
	store8! &5 	#X4	# 5376	[c=4]movsi_from_tr_unspec/0
	load8! &5 	#X5	# 5512	[c=4]movdi_push_pop
	store8! &1 	#AR
	jump! .L37.l_o7ba9bc		# 5870	[c=4]jump
.L49.l_o7ba9bc:
	# CBRANCH EQ0	# 827	[c=12]cbranchqi4_internal
	load1! &3 	#X3
	jump_not_zero! .L281.l_o7ba9bc
	# END CBRANCH
.L72.l_o7ba9bc:
	load8! &4 	#X4	# 832	[c=5]movdi_to_tr_unspec/1
	and! 0x10		# 834	[c=4]*anddi3/0
	store8! &1 	#AR	# 5367	[c=4]movdi_from_tr_unspec/0
	load8! &51	# 5368	[c=5]movdi_to_tr_unspec/1
	add! 8		# 843	[c=4]*adddi/0
	store8! &4 	#X3	# 844	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 846	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L71.l_o7ba9bc
	# END CBRANCH
	load8! &4 	#X4	# 863	[c=5]movdi_to_tr_unspec/1
	and! 0x40		# 865	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 5366	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L75.l_o7ba9bc
	# END CBRANCH
	load8! &51	# 3911	[c=2]movdi_push_pop
	store8! &12 	#X11
	load8! &11 	#X11	# 874	[c=7]movsi_to_tr_unspec/2
	load4	
	#	
	store8! &2 	#X1	# 5363	[c=4]movhi_from_tr_unspec/0
	load2! &1 	#X1	# 882	[c=5]movhi_to_tr_unspec/1
	sigx2		# 884	[c=6]*extendhidi2
	store8! &1 	#AR	# 885	[c=4]movdi_from_tr_unspec/0
	load2! &1 	#X1	# 887	[c=5]movhi_to_tr_unspec/1
	sigx2		# 889	[c=6]*extendhidi2
	store8! &2 	#X1	# 890	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 48	[c=4]movdi_push_pop
	store8! &52
.L74.l_o7ba9bc:
	# CBRANCH	# 912	[c=12]cbranchdi4_internal
	load8! &1 	#X1
	add! -9223372036854775808	
	push! 0	
	add! -9223372036854775808	
	lt_u	
	not	
	jump_zero! .L282.l_o7ba9bc
	# END CBRANCH
.L76.l_o7ba9bc:
	load1! &21	# 2730	[c=2]movqi_push_pop
	store8! &2 	#X1
	# CBRANCH EQ	# 2731	[c=12]cbranchsi4_internal
	load4! &8 	#X8
	push! 4294967295	
	xor	
	jump_zero! .L103.l_o7ba9bc
	# END CBRANCH
	load8! &4 	#X4	# 2768	[c=5]movdi_to_tr_unspec/1
	and! 0xffffffffffffff7f		# 2770	[c=4]*anddi3/0
	store8! &11 	#X10	# 5238	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ0	# 2777	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_not_zero! .L169.l_o7ba9bc
	# END CBRANCH
	# CBRANCH EQ0	# 2779	[c=12]cbranchsi4_internal
	load4! &8 	#X8
	jump_not_zero! .L170.l_o7ba9bc
	# END CBRANCH
	push! 1		# 113	[c=4]movsi_push_pop
	store8! &4 	#X3
.L163.l_o7ba9bc:
	push! 0		# 127	[c=4]movsi_push_pop
	store8! &9 	#X8
	push! 0		# 128	[c=4]movsi_push_pop
	store8! &13 	#X12
	push! &0		# 4853	[c=4]movdi_to_tr_unspec/1
	add! 208		# 4860	[c=4]*adddi/0
	add! 40		# 136	[c=4]*adddi/0
	store8! &4 	#X3	# 137	[c=4]movdi_from_tr_unspec/0
	jump! .L91.l_o7ba9bc		# 5874	[c=4]jump
.L51.l_o7ba9bc:
	load8! &51	# 790	[c=5]movdi_to_tr_unspec/1
	add! 8		# 792	[c=4]*adddi/0
	store8! &1 	#AR	# 793	[c=4]movdi_from_tr_unspec/0
	load8! &51	# 3902	[c=2]movdi_push_pop
	store8! &4 	#X3
	load8! &3 	#X3	# 795	[c=7]movsi_to_tr_unspec/2
	load4	
	#	
	store1! &27	# 5372	[c=4]movqi_from_tr_unspec/0
	push! 0		# 804	[c=4]movqi_push_pop
	store1! &22
	load8! &0 	#AR	# 293	[c=4]movdi_push_pop
	store8! &52
	push! 1		# 294	[c=4]movsi_push_pop
	store8! &10 	#X9
	push! 1		# 295	[c=4]movsi_push_pop
	store8! &13 	#X12
	push! &0		# 5124	[c=4]movdi_to_tr_unspec/1
	add! 208		# 5131	[c=4]*adddi/0
	store8! &4 	#X3	# 5129	[c=4]movdi_from_tr_unspec/0
	load4! &4 	#X4	# 176	[c=4]movsi_push_pop
	store8! &11 	#X10
	push! 0		# 177	[c=4]movsi_push_pop
	store8! &9 	#X8
	jump! .L113.l_o7ba9bc		# 5876	[c=4]jump
.L47.l_o7ba9bc:
	# CBRANCH EQ0	# 1019	[c=12]cbranchqi4_internal
	load1! &3 	#X3
	jump_not_zero! .L283.l_o7ba9bc
	# END CBRANCH
.L83.l_o7ba9bc:
	load8! &4 	#X4	# 1024	[c=5]movdi_to_tr_unspec/1
	and! 0x10		# 1026	[c=4]*anddi3/0
	store8! &1 	#AR	# 5353	[c=4]movdi_from_tr_unspec/0
	load8! &51	# 5354	[c=5]movdi_to_tr_unspec/1
	add! 8		# 1035	[c=4]*adddi/0
	store8! &2 	#X1	# 1036	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 1038	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L82.l_o7ba9bc
	# END CBRANCH
	load8! &4 	#X4	# 1054	[c=5]movdi_to_tr_unspec/1
	and! 0x40		# 1056	[c=4]*anddi3/0
	store8! &4 	#X3	# 5352	[c=4]movsi_from_tr_unspec/0
	load8! &51	# 3915	[c=2]movdi_push_pop
	store8! &12 	#X11
	load8! &11 	#X11	# 1063	[c=7]movsi_to_tr_unspec/2
	load4	
	#	
	store8! &1 	#AR	# 1065	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ0	# 1067	[c=12]cbranchsi4_internal
	load4! &3 	#X3
	jump_zero! .L86.l_o7ba9bc
	# END CBRANCH
	load2! &0 	#AR	# 5097	[c=5]movhi_to_tr_unspec/1
	store8! &1 	#AR	# 5099	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 58	[c=4]movdi_push_pop
	store8! &52
	push! 0		# 59	[c=4]movsi_push_pop
	store8! &4 	#X3
	push! 0		# 5515	[c=4]movqi_push_pop
	store1! &22
	push! 0		# 5516	[c=4]movqi_push_pop
	store8! &2 	#X1
	jump! .L77.l_o7ba9bc		# 5879	[c=4]jump
.L52.l_o7ba9bc:
	# CBRANCH EQ0	# 1262	[c=12]cbranchqi4_internal
	load1! &3 	#X3
	jump_not_zero! .L284.l_o7ba9bc
	# END CBRANCH
	push! .LC0.l_o7ba9bc		# 49	[c=4]movdi_push_pop
	store8! &21
.L301.l_o7ba9bc:
	load8! &4 	#X4	# 5519	[c=5]movdi_to_tr_unspec/1
	and! 0x10		# 5521	[c=4]*anddi3/0
	store8! &1 	#AR	# 5522	[c=4]movdi_from_tr_unspec/0
	load8! &51	# 5523	[c=5]movdi_to_tr_unspec/1
	add! 8		# 5525	[c=4]*adddi/0
	store8! &4 	#X3	# 5526	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 5527	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L285.l_o7ba9bc
	# END CBRANCH
.L97.l_o7ba9bc:
	load8! &4 	#X4	# 1293	[c=5]movdi_to_tr_unspec/1
	and! 0x40		# 1295	[c=4]*anddi3/0
	store8! &8 	#X7	# 5336	[c=4]movsi_from_tr_unspec/0
	load8! &51	# 3921	[c=2]movdi_push_pop
	store8! &12 	#X11
	load8! &11 	#X11	# 1302	[c=7]movsi_to_tr_unspec/2
	load4	
	#	
	store8! &1 	#AR	# 1304	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ0	# 1306	[c=12]cbranchsi4_internal
	load4! &7 	#X7
	jump_zero! .L99.l_o7ba9bc
	# END CBRANCH
	load2! &0 	#AR	# 5073	[c=5]movhi_to_tr_unspec/1
	store8! &1 	#AR	# 5075	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 5530	[c=5]movdi_to_tr_unspec/1
	and! 0x1		# 5532	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 5533	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L286.l_o7ba9bc
	# END CBRANCH
.L157.l_o7ba9bc:
	load8! &3 	#X3	# 60	[c=4]movdi_push_pop
	store8! &52
	push! 2		# 61	[c=4]movsi_push_pop
	store8! &4 	#X3
	push! 0		# 5536	[c=4]movqi_push_pop
	store1! &22
	push! 0		# 5537	[c=4]movqi_push_pop
	store8! &2 	#X1
	jump! .L77.l_o7ba9bc		# 5884	[c=4]jump
.L46.l_o7ba9bc:
	load8! &51	# 1091	[c=5]movdi_to_tr_unspec/1
	add! 8		# 1093	[c=4]*adddi/0
	store8! &2 	#X1	# 1094	[c=4]movdi_from_tr_unspec/0
	load8! &51	# 3916	[c=2]movdi_push_pop
	store8! &4 	#X3
	load8! &3 	#X3	# 1096	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	store8! &1 	#AR	# 1098	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 1101	[c=5]movdi_to_tr_unspec/1
	or! 0x2		# 1103	[c=4]*iordi3/0
	store8! &5 	#X4	# 5350	[c=4]movsi_from_tr_unspec/0
	push! 30768		# 1110	[c=4]movhi_push_pop
	store2! &23
	load8! &1 	#X1	# 53	[c=4]movdi_push_pop
	store8! &52
	push! .LC1.l_o7ba9bc		# 54	[c=4]movdi_push_pop
	store8! &21
	push! 2		# 55	[c=4]movsi_push_pop
	store8! &4 	#X3
	push! 0		# 5540	[c=4]movqi_push_pop
	store1! &22
	push! 0		# 5541	[c=4]movqi_push_pop
	store8! &2 	#X1
	jump! .L77.l_o7ba9bc		# 5886	[c=4]jump
.L54.l_o7ba9bc:
	load8! &4 	#X4	# 1006	[c=5]movdi_to_tr_unspec/1
	or! 0x10		# 1008	[c=4]*iordi3/0
	store8! &5 	#X4	# 5357	[c=4]movsi_from_tr_unspec/0
.L82.l_o7ba9bc:
	load8! &51	# 1041	[c=5]movdi_to_tr_unspec/1
	add! 8		# 1043	[c=4]*adddi/0
	store8! &2 	#X1	# 1044	[c=4]movdi_from_tr_unspec/0
	load8! &51	# 3914	[c=2]movdi_push_pop
	store8! &12 	#X11
	load8! &11 	#X11	# 1046	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	store8! &1 	#AR	# 1048	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 68	[c=4]movdi_push_pop
	store8! &52
	push! 0		# 69	[c=4]movsi_push_pop
	store8! &4 	#X3
	push! 0		# 5544	[c=4]movqi_push_pop
	store1! &22
	push! 0		# 5545	[c=4]movqi_push_pop
	store8! &2 	#X1
	jump! .L77.l_o7ba9bc		# 5888	[c=4]jump
.L48.l_o7ba9bc:
	# CBRANCH EQ0	# 930	[c=12]cbranchqi4_internal
	load1! &3 	#X3
	jump_not_zero! .L287.l_o7ba9bc
	# END CBRANCH
	load8! &4 	#X4	# 935	[c=5]movdi_to_tr_unspec/1
	and! 0x10		# 937	[c=4]*anddi3/0
	store8! &2 	#X1	# 5362	[c=4]movsi_from_tr_unspec/0
	load8! &51	# 3913	[c=2]movdi_push_pop
	store8! &4 	#X3
	load8! &3 	#X3	# 944	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	store8! &1 	#AR	# 946	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 953	[c=5]movdi_to_tr_unspec/1
	add! 8		# 955	[c=4]*adddi/0
	store8! &52	# 5109	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 959	[c=12]cbranchsi4_internal
	load4! &1 	#X1
	jump_not_zero! .L288.l_o7ba9bc
	# END CBRANCH
.L79.l_o7ba9bc:
	load8! &4 	#X4	# 975	[c=5]movdi_to_tr_unspec/1
	and! 0x40		# 977	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 5360	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L81.l_o7ba9bc
	# END CBRANCH
	load2! &15 	#X15	# 5104	[c=5]movhi_to_tr_unspec/1
	load8! &1 	#AR	# 992	[c=4]movhi_from_tr_unspec/1
	store2	
	#	
	jump! .L28.l_o7ba9bc		# 5892	[c=4]jump
.L53.l_o7ba9bc:
	load8! &4 	#X4	# 1177	[c=5]movdi_to_tr_unspec/1
	or! 0x10		# 1179	[c=4]*iordi3/0
	store8! &5 	#X4	# 5346	[c=4]movsi_from_tr_unspec/0
.L92.l_o7ba9bc:
	load8! &51	# 1212	[c=5]movdi_to_tr_unspec/1
	add! 8		# 1214	[c=4]*adddi/0
	store8! &2 	#X1	# 1215	[c=4]movdi_from_tr_unspec/0
	load8! &51	# 3918	[c=2]movdi_push_pop
	store8! &4 	#X3
	load8! &3 	#X3	# 1217	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	store8! &1 	#AR	# 1219	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 64	[c=4]movdi_push_pop
	store8! &52
	push! 1		# 65	[c=4]movsi_push_pop
	store8! &4 	#X3
	push! 0		# 5548	[c=4]movqi_push_pop
	store1! &22
	push! 0		# 5549	[c=4]movqi_push_pop
	store8! &2 	#X1
	jump! .L77.l_o7ba9bc		# 5894	[c=4]jump
.L55.l_o7ba9bc:
	# CBRANCH EQ0	# 809	[c=12]cbranchqi4_internal
	load1! &3 	#X3
	jump_not_zero! .L289.l_o7ba9bc
	# END CBRANCH
	load8! &4 	#X4	# 814	[c=5]movdi_to_tr_unspec/1
	or! 0x10		# 816	[c=4]*iordi3/0
	store8! &5 	#X4	# 5371	[c=4]movsi_from_tr_unspec/0
.L71.l_o7ba9bc:
	load8! &51	# 849	[c=5]movdi_to_tr_unspec/1
	add! 8		# 851	[c=4]*adddi/0
	store8! &4 	#X3	# 852	[c=4]movdi_from_tr_unspec/0
	load8! &51	# 3910	[c=2]movdi_push_pop
	store8! &2 	#X1
	load8! &1 	#X1	# 854	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	store8! &2 	#X1	# 856	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 858	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &3 	#X3	# 46	[c=4]movdi_push_pop
	store8! &52
	# CBRANCH	# 5552	[c=12]cbranchdi4_internal
	load8! &1 	#X1
	add! -9223372036854775808	
	push! 0	
	add! -9223372036854775808	
	lt_u	
	jump_zero! .L76.l_o7ba9bc
	# END CBRANCH
.L282.l_o7ba9bc:
	load8! &0 	#AR	# 919	[c=5]movdi_to_tr_unspec/1
	neg		# 921	[c=3]*negdi2
	store8! &1 	#AR	# 922	[c=4]movdi_from_tr_unspec/0
	push! 45		# 925	[c=4]movqi_push_pop
	store1! &22
	push! 45		# 72	[c=4]movqi_push_pop
	store8! &2 	#X1
	push! 1		# 73	[c=4]movsi_push_pop
	store8! &4 	#X3
	# CBRANCH	# 5555	[c=12]cbranchsi4_internal
	load4! &8 	#X8
	push! 4294967295	
	xor	
	push! 1	
	lt_u	
	jump_zero! .L290.l_o7ba9bc
	# END CBRANCH
.L100.l_o7ba9bc:
	# CBRANCH EQ	# 1380	[c=12]cbranchsi4_internal
	load4! &3 	#X3
	push! 1	
	xor	
	jump_zero! .L103.l_o7ba9bc
	# END CBRANCH
.L296.l_o7ba9bc:
	# CBRANCH EQ	# 1382	[c=12]cbranchsi4_internal
	load4! &3 	#X3
	push! 2	
	xor	
	jump_zero! .L104.l_o7ba9bc
	# END CBRANCH
	push! &0		# 5055	[c=4]movdi_to_tr_unspec/1
	add! 208		# 5062	[c=4]*adddi/0
	add! 40		# 84	[c=4]*adddi/0
	store8! &10 	#X9	# 85	[c=4]movdi_from_tr_unspec/0
.L105.l_o7ba9bc:
	load1! &0 	#AR	# 5043	[c=5]movqi_to_tr_unspec/1
	and! 0x7		# 1391	[c=4]*anddi3/0
	add! 48		# 1400	[c=4]*adddi/0
	store8! &8 	#X7	# 5327	[c=4]movqi_from_tr_unspec/0
	load8! &9 	#X9	# 1407	[c=5]movdi_to_tr_unspec/1
	add! -1		# 1409	[c=4]*adddi/0
	store8! &4 	#X3	# 1410	[c=4]movdi_from_tr_unspec/0
	load1! &7 	#X7	# 1413	[c=5]movqi_to_tr_unspec/1
	load8! &4 	#X3	# 1415	[c=4]movqi_from_tr_unspec/1
	store1	
	#	
	load8! &0 	#AR	# 1422	[c=5]movdi_to_tr_unspec/1
	shift_ru! 3	# 1424	[c=40]*lshrdi3/0
	store8! &1 	#AR	# 1425	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 1429	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L291.l_o7ba9bc
	# END CBRANCH
.L160.l_o7ba9bc:
	load8! &3 	#X3	# 87	[c=4]movdi_push_pop
	store8! &10 	#X9
	load1! &0 	#AR	# 5558	[c=5]movqi_to_tr_unspec/1
	and! 0x7		# 5560	[c=4]*anddi3/0
	add! 48		# 5562	[c=4]*adddi/0
	store8! &8 	#X7	# 5564	[c=4]movqi_from_tr_unspec/0
	load8! &9 	#X9	# 5565	[c=5]movdi_to_tr_unspec/1
	add! -1		# 5567	[c=4]*adddi/0
	store8! &4 	#X3	# 5568	[c=4]movdi_from_tr_unspec/0
	load1! &7 	#X7	# 5569	[c=5]movqi_to_tr_unspec/1
	load8! &4 	#X3	# 5571	[c=4]movqi_from_tr_unspec/1
	store1	
	#	
	load8! &0 	#AR	# 5572	[c=5]movdi_to_tr_unspec/1
	shift_ru! 3	# 5574	[c=40]*lshrdi3/0
	store8! &1 	#AR	# 5575	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 5576	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_not_zero! .L160.l_o7ba9bc
	# END CBRANCH
.L291.l_o7ba9bc:
	load8! &4 	#X4	# 1431	[c=5]movdi_to_tr_unspec/1
	and! 0x1		# 1433	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 5321	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L106.l_o7ba9bc
	# END CBRANCH
	push! &0		# 5030	[c=4]movdi_to_tr_unspec/1
	add! 208		# 5037	[c=4]*adddi/0
	add! 40		# 1449	[c=4]*adddi/0
	load8! &4 	#X3	# 1454	[c=14]*subdi3/2
	sub
	store8! &13 	#X12	# 5318	[c=4]movsi_from_tr_unspec/0
	load4! &4 	#X4	# 150	[c=4]movsi_push_pop
	store8! &11 	#X10
	jump! .L91.l_o7ba9bc		# 5899	[c=4]jump
.L275.l_o7ba9bc:
	load8! &9 	#X9	# 4579	[c=5]movdi_to_tr_unspec/1
	load8! &7 	#X6	# 4581	[c=14]*subdi3/2
	sub
	neg		# 4582	[c=4]*neg_tr
	store8! &12 	#X11	# 5275	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 5276	[c=12]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &12 	#X11
	add! -2147483648	
	lt_u	
	jump_zero! .L125.l_o7ba9bc
	# END CBRANCH
	# CBRANCH	# 2103	[c=12]cbranchsi4_internal
	push! 16	
	add! -2147483648	
	load4! &12 	#X11
	add! -2147483648	
	lt_u	
	jump_zero! .L165.l_o7ba9bc
	# END CBRANCH
.L129.l_o7ba9bc:
	push! .Li_zeroes_4562.l_o7ba9bc		# 2105	[c=3]movdi_to_tr_unspec/0
	load8! &3 	#X2	# 2107	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	push! 16		# 2109	[c=3]movdi_to_tr_unspec/0
	load8! &3 	#X2	# 2111	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &0 	#AR	# 2118	[c=5]movdi_to_tr_unspec/1
	add! 16		# 2120	[c=4]*adddi/0
	store8! &1 	#AR	# 2121	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 2124	[c=4]movdi_push_pop
	store8! &26
	load8! &1 	#X1	# 2125	[c=5]movdi_to_tr_unspec/1
	add! 1		# 2127	[c=4]*adddi/0
	store8! &2 	#X1	# 2128	[c=4]movdi_from_tr_unspec/0
	load4! &1 	#X1	# 4577	[c=4]movsi_push_pop
	store4! &25
	# CBRANCH	# 2135	[c=12]cbranchsi4_internal
	push! 7	
	add! -2147483648	
	load4! &2 	#X1
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L127.l_o7ba9bc
	# END CBRANCH
	load8! &2 	#X2	# 2142	[c=5]movdi_to_tr_unspec/1
	add! 16		# 2144	[c=4]*adddi/0
	store8! &3 	#X2	# 2145	[c=4]movdi_from_tr_unspec/0
	load8! &11 	#X11	# 2168	[c=5]movdi_to_tr_unspec/1
	add! -16		# 2170	[c=4]*adddi/0
	store8! &12 	#X11	# 5274	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 2178	[c=12]cbranchsi4_internal
	push! 16	
	add! -2147483648	
	load4! &12 	#X11
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L129.l_o7ba9bc
	# END CBRANCH
.L295.l_o7ba9bc:
	load8! &1 	#X1	# 2180	[c=5]movdi_to_tr_unspec/1
	add! 1		# 2182	[c=4]*adddi/0
	store8! &2 	#X1	# 5270	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 5271	[c=5]movdi_to_tr_unspec/1
	add! 16		# 2191	[c=4]*adddi/0
	store8! &19	# 2192	[c=4]movdi_from_tr_unspec/0
.L126.l_o7ba9bc:
	push! .Li_zeroes_4562.l_o7ba9bc		# 2196	[c=3]movdi_to_tr_unspec/0
	load8! &3 	#X2	# 2198	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load4! &11 	#X11	# 2200	[c=5]movsi_to_tr_unspec/1
	sigx4		# 2202	[c=6]*extendsidi2
	store8! &5 	#X4	# 2203	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 2205	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 2207	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &4 	#X4	# 2214	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 2216	[c=6]*adddi/2
	add
	store8! &1 	#AR	# 2217	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 2220	[c=4]movdi_push_pop
	store8! &26
	load4! &1 	#X1	# 2221	[c=4]movsi_push_pop
	store4! &25
	# CBRANCH	# 2222	[c=12]cbranchsi4_internal
	push! 7	
	add! -2147483648	
	load4! &2 	#X1
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L130.l_o7ba9bc
	# END CBRANCH
	load8! &1 	#X1	# 2224	[c=5]movdi_to_tr_unspec/1
	add! 1		# 2226	[c=4]*adddi/0
	store8! &8 	#X7	# 5269	[c=4]movsi_from_tr_unspec/0
	load8! &18	# 2233	[c=5]movdi_to_tr_unspec/1
	add! 16		# 2235	[c=4]*adddi/0
	store8! &5 	#X4	# 2236	[c=4]movdi_from_tr_unspec/0
	load8! &18	# 233	[c=2]movdi_push_pop
	store8! &3 	#X2
	load8! &12 	#X12	# 5579	[c=5]movdi_to_tr_unspec/1
	load8! &9 	#X8	# 5581	[c=14]*subdi3/2
	sub
	neg		# 5582	[c=4]*neg_tr
	store8! &9 	#X8	# 5583	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 5584	[c=12]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &9 	#X8
	add! -2147483648	
	lt_u	
	jump_zero! .L131.l_o7ba9bc
	# END CBRANCH
.L276.l_o7ba9bc:
	# CBRANCH	# 2282	[c=12]cbranchsi4_internal
	push! 16	
	add! -2147483648	
	load4! &9 	#X8
	add! -2147483648	
	lt_u	
	jump_zero! .L166.l_o7ba9bc
	# END CBRANCH
.L135.l_o7ba9bc:
	push! .Li_zeroes_4562.l_o7ba9bc		# 2284	[c=3]movdi_to_tr_unspec/0
	load8! &3 	#X2	# 2286	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	push! 16		# 2288	[c=3]movdi_to_tr_unspec/0
	load8! &3 	#X2	# 2290	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &0 	#AR	# 2297	[c=5]movdi_to_tr_unspec/1
	add! 16		# 2299	[c=4]*adddi/0
	store8! &1 	#AR	# 2300	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 2303	[c=4]movdi_push_pop
	store8! &26
	load8! &1 	#X1	# 2304	[c=5]movdi_to_tr_unspec/1
	add! 1		# 2306	[c=4]*adddi/0
	store8! &2 	#X1	# 2307	[c=4]movdi_from_tr_unspec/0
	load4! &1 	#X1	# 4479	[c=4]movsi_push_pop
	store4! &25
	# CBRANCH	# 2314	[c=12]cbranchsi4_internal
	push! 7	
	add! -2147483648	
	load4! &2 	#X1
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L133.l_o7ba9bc
	# END CBRANCH
	load8! &2 	#X2	# 2321	[c=5]movdi_to_tr_unspec/1
	add! 16		# 2323	[c=4]*adddi/0
	store8! &3 	#X2	# 2324	[c=4]movdi_from_tr_unspec/0
	load8! &8 	#X8	# 2347	[c=5]movdi_to_tr_unspec/1
	add! -16		# 2349	[c=4]*adddi/0
	store8! &9 	#X8	# 5263	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 2357	[c=12]cbranchsi4_internal
	push! 16	
	add! -2147483648	
	load4! &9 	#X8
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L135.l_o7ba9bc
	# END CBRANCH
.L293.l_o7ba9bc:
	load8! &1 	#X1	# 2359	[c=5]movdi_to_tr_unspec/1
	add! 1		# 2361	[c=4]*adddi/0
	store8! &8 	#X7	# 5261	[c=4]movsi_from_tr_unspec/0
	load8! &2 	#X2	# 2368	[c=5]movdi_to_tr_unspec/1
	add! 16		# 2370	[c=4]*adddi/0
	store8! &2 	#X1	# 2371	[c=4]movdi_from_tr_unspec/0
.L132.l_o7ba9bc:
	push! .Li_zeroes_4562.l_o7ba9bc		# 2375	[c=3]movdi_to_tr_unspec/0
	load8! &3 	#X2	# 2377	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load4! &8 	#X8	# 2379	[c=5]movsi_to_tr_unspec/1
	sigx4		# 2381	[c=6]*extendsidi2
	store8! &5 	#X4	# 2382	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 2384	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 2386	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &4 	#X4	# 2393	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 2395	[c=6]*adddi/2
	add
	store8! &1 	#AR	# 2396	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 2399	[c=4]movdi_push_pop
	store8! &26
	load4! &7 	#X7	# 2400	[c=4]movsi_push_pop
	store4! &25
	# CBRANCH	# 2401	[c=12]cbranchsi4_internal
	push! 7	
	add! -2147483648	
	load4! &8 	#X7
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L136.l_o7ba9bc
	# END CBRANCH
	load8! &7 	#X7	# 2403	[c=5]movdi_to_tr_unspec/1
	add! 1		# 2405	[c=4]*adddi/0
	store8! &8 	#X7	# 5259	[c=4]movsi_from_tr_unspec/0
	load8! &1 	#X1	# 2412	[c=5]movdi_to_tr_unspec/1
	add! 16		# 2414	[c=4]*adddi/0
	store8! &5 	#X4	# 2415	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 255	[c=4]movdi_push_pop
	store8! &3 	#X2
	load8! &3 	#X3	# 5587	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 5589	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load4! &12 	#X12	# 5590	[c=5]movsi_to_tr_unspec/1
	sigx4		# 5592	[c=6]*extendsidi2
	store8! &2 	#X1	# 5593	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 5594	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 5596	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &1 	#X1	# 5597	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 5599	[c=6]*adddi/2
	add
	store8! &1 	#AR	# 5600	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 5601	[c=4]movdi_push_pop
	store8! &26
	load4! &7 	#X7	# 5602	[c=4]movsi_push_pop
	store4! &25
	# CBRANCH	# 5603	[c=12]cbranchsi4_internal
	push! 7	
	add! -2147483648	
	load4! &8 	#X7
	add! -2147483648	
	lt_u	
	jump_zero! .L137.l_o7ba9bc
	# END CBRANCH
.L277.l_o7ba9bc:
	push! &0		# 4377	[c=4]movdi_to_tr_unspec/1
	add! 184		# 4384	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 4386	[c=0]*peep2_pop_pusharg
	load8! &14 	#X13	# 2474	[c=4]pushdi1_not_fp/1
	load8! &16 	#X14	# 2475	[c=4]pushdi1_not_fp/1
	call! __ssprint_r		# 2476	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	# CBRANCH EQ0	# 2478	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L36.l_o7ba9bc
	# END CBRANCH
	load8! &25	# 2480	[c=2]movdi_push_pop
	store8! &1 	#AR
	push! &0		# 4361	[c=4]movdi_to_tr_unspec/1
	add! 248		# 4368	[c=4]*adddi/0
	store8! &5 	#X4	# 4366	[c=4]movdi_from_tr_unspec/0
	jump! .L137.l_o7ba9bc		# 5901	[c=4]jump
.L144.l_o7ba9bc:
	push! &0		# 4257	[c=4]movdi_to_tr_unspec/1
	add! 184		# 4264	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 4266	[c=0]*peep2_pop_pusharg
	load8! &14 	#X13	# 2670	[c=4]pushdi1_not_fp/1
	load8! &16 	#X14	# 2671	[c=4]pushdi1_not_fp/1
	call! __ssprint_r		# 2672	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	# CBRANCH EQ0	# 2674	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L36.l_o7ba9bc
	# END CBRANCH
	push! 0		# 5606	[c=4]movsi_push_pop
	store4! &25
	push! &0		# 5607	[c=4]movdi_to_tr_unspec/1
	add! 248		# 5609	[c=4]*adddi/0
	store8! &3 	#X2	# 5610	[c=4]movdi_from_tr_unspec/0
	jump! .L28.l_o7ba9bc		# 5903	[c=4]jump
.L274.l_o7ba9bc:
	# CBRANCH	# 1787	[c=12]cbranchsi4_internal
	push! 16	
	add! -2147483648	
	load4! &5 	#X4
	add! -2147483648	
	lt_u	
	jump_zero! .L116.l_o7ba9bc
	# END CBRANCH
	load4! &16	# 3671	[c=2]movsi_push_pop
	store8! &12 	#X11
.L119.l_o7ba9bc:
	push! .Li_blanks_4561.l_o7ba9bc		# 1789	[c=3]movdi_to_tr_unspec/0
	load8! &3 	#X2	# 1791	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	push! 16		# 1793	[c=3]movdi_to_tr_unspec/0
	load8! &3 	#X2	# 1795	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &0 	#AR	# 1802	[c=5]movdi_to_tr_unspec/1
	add! 16		# 1804	[c=4]*adddi/0
	store8! &1 	#AR	# 1805	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 1808	[c=4]movdi_push_pop
	store8! &26
	load8! &1 	#X1	# 1809	[c=5]movdi_to_tr_unspec/1
	add! 1		# 1811	[c=4]*adddi/0
	store8! &2 	#X1	# 1812	[c=4]movdi_from_tr_unspec/0
	load4! &1 	#X1	# 4796	[c=4]movsi_push_pop
	store4! &25
	# CBRANCH	# 1819	[c=12]cbranchsi4_internal
	push! 7	
	add! -2147483648	
	load4! &2 	#X1
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L117.l_o7ba9bc
	# END CBRANCH
	load8! &2 	#X2	# 1826	[c=5]movdi_to_tr_unspec/1
	add! 16		# 1828	[c=4]*adddi/0
	store8! &3 	#X2	# 1829	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 1852	[c=5]movdi_to_tr_unspec/1
	add! -16		# 1854	[c=4]*adddi/0
	store8! &5 	#X4	# 5287	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 5288	[c=12]cbranchsi4_internal
	push! 16	
	add! -2147483648	
	load4! &5 	#X4
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L119.l_o7ba9bc
	# END CBRANCH
.L294.l_o7ba9bc:
	load4! &11 	#X11	# 3688	[c=4]movsi_push_pop
	store4! &17
.L116.l_o7ba9bc:
	push! .Li_blanks_4561.l_o7ba9bc		# 1865	[c=3]movdi_to_tr_unspec/0
	load8! &3 	#X2	# 1867	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load4! &4 	#X4	# 1869	[c=5]movsi_to_tr_unspec/1
	sigx4		# 1871	[c=6]*extendsidi2
	store8! &5 	#X4	# 1872	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 1874	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 1876	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &4 	#X4	# 1883	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 1885	[c=6]*adddi/2
	add
	store8! &1 	#AR	# 1886	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 1889	[c=4]movdi_push_pop
	store8! &26
	load8! &1 	#X1	# 1890	[c=5]movdi_to_tr_unspec/1
	add! 1		# 1892	[c=4]*adddi/0
	store8! &2 	#X1	# 1893	[c=4]movdi_from_tr_unspec/0
	load4! &1 	#X1	# 4759	[c=4]movsi_push_pop
	store4! &25
	# CBRANCH	# 1900	[c=12]cbranchsi4_internal
	push! 7	
	add! -2147483648	
	load4! &2 	#X1
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L120.l_o7ba9bc
	# END CBRANCH
	load8! &2 	#X2	# 1907	[c=5]movdi_to_tr_unspec/1
	add! 16		# 1909	[c=4]*adddi/0
	store8! &3 	#X2	# 1910	[c=4]movdi_from_tr_unspec/0
	jump! .L115.l_o7ba9bc		# 5905	[c=4]jump
.L278.l_o7ba9bc:
	load4! &24	# 2509	[c=2]movsi_push_pop
	store8! &2 	#X1
	# CBRANCH	# 2510	[c=12]cbranchsi4_internal
	push! 16	
	add! -2147483648	
	load4! &3 	#X2
	add! -2147483648	
	lt_u	
	jump_zero! .L139.l_o7ba9bc
	# END CBRANCH
.L142.l_o7ba9bc:
	push! .Li_blanks_4561.l_o7ba9bc		# 2512	[c=3]movdi_to_tr_unspec/0
	load8! &5 	#X4	# 2514	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	push! 16		# 2516	[c=3]movdi_to_tr_unspec/0
	load8! &5 	#X4	# 2518	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &0 	#AR	# 2525	[c=5]movdi_to_tr_unspec/1
	add! 16		# 2527	[c=4]*adddi/0
	store8! &1 	#AR	# 2528	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 2531	[c=4]movdi_push_pop
	store8! &26
	load8! &1 	#X1	# 2532	[c=5]movdi_to_tr_unspec/1
	add! 1		# 2534	[c=4]*adddi/0
	store8! &2 	#X1	# 2535	[c=4]movdi_from_tr_unspec/0
	load4! &1 	#X1	# 4344	[c=4]movsi_push_pop
	store4! &25
	# CBRANCH	# 2542	[c=12]cbranchsi4_internal
	push! 7	
	add! -2147483648	
	load4! &2 	#X1
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L140.l_o7ba9bc
	# END CBRANCH
	load8! &4 	#X4	# 2549	[c=5]movdi_to_tr_unspec/1
	add! 16		# 2551	[c=4]*adddi/0
	store8! &5 	#X4	# 2552	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 2575	[c=5]movdi_to_tr_unspec/1
	add! -16		# 2577	[c=4]*adddi/0
	store8! &3 	#X2	# 5249	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 5250	[c=12]cbranchsi4_internal
	push! 16	
	add! -2147483648	
	load4! &3 	#X2
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L142.l_o7ba9bc
	# END CBRANCH
.L139.l_o7ba9bc:
	push! .Li_blanks_4561.l_o7ba9bc		# 2588	[c=3]movdi_to_tr_unspec/0
	load8! &5 	#X4	# 2590	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load4! &2 	#X2	# 2592	[c=5]movsi_to_tr_unspec/1
	sigx4		# 2594	[c=6]*extendsidi2
	store8! &3 	#X2	# 2595	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 2597	[c=5]movdi_to_tr_unspec/1
	load8! &5 	#X4	# 2599	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &2 	#X2	# 2606	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 2608	[c=6]*adddi/2
	add
	store8! &1 	#AR	# 2609	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 2612	[c=4]movdi_push_pop
	store8! &26
	load8! &1 	#X1	# 2613	[c=5]movdi_to_tr_unspec/1
	add! 1		# 2615	[c=4]*adddi/0
	store8! &2 	#X1	# 2616	[c=4]movdi_from_tr_unspec/0
	load4! &1 	#X1	# 4307	[c=4]movsi_push_pop
	store4! &25
	# CBRANCH	# 2623	[c=12]cbranchsi4_internal
	push! 7	
	add! -2147483648	
	load4! &2 	#X1
	add! -2147483648	
	lt_u	
	jump_zero! .L138.l_o7ba9bc
	# END CBRANCH
	push! &0		# 4296	[c=4]movdi_to_tr_unspec/1
	add! 184		# 4303	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 4305	[c=0]*peep2_pop_pusharg
	load8! &14 	#X13	# 2631	[c=4]pushdi1_not_fp/1
	load8! &16 	#X14	# 2632	[c=4]pushdi1_not_fp/1
	call! __ssprint_r		# 2633	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	# CBRANCH EQ0	# 2635	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L36.l_o7ba9bc
	# END CBRANCH
	load8! &25	# 2637	[c=2]movdi_push_pop
	store8! &1 	#AR
	jump! .L138.l_o7ba9bc		# 5907	[c=4]jump
.L40.l_o7ba9bc:
	# CBRANCH EQ0	# 1700	[c=12]cbranchqi4_internal
	load1! &3 	#X3
	jump_not_zero! .L292.l_o7ba9bc
	# END CBRANCH
.L111.l_o7ba9bc:
	# CBRANCH EQ0	# 1705	[c=12]cbranchsi4_internal
	load4! &1 	#X1
	jump_zero! .L29.l_o7ba9bc
	# END CBRANCH
	load1! &1 	#X1	# 5297	[c=4]movqi_push_pop
	store1! &27
	push! 0		# 1712	[c=4]movqi_push_pop
	store1! &22
	push! 1		# 286	[c=4]movsi_push_pop
	store8! &10 	#X9
	push! 1		# 287	[c=4]movsi_push_pop
	store8! &13 	#X12
	push! &0		# 4820	[c=4]movdi_to_tr_unspec/1
	add! 208		# 4827	[c=4]*adddi/0
	store8! &4 	#X3	# 4825	[c=4]movdi_from_tr_unspec/0
	load4! &4 	#X4	# 5614	[c=4]movsi_push_pop
	store8! &11 	#X10
	push! 0		# 5615	[c=4]movsi_push_pop
	store8! &9 	#X8
	jump! .L113.l_o7ba9bc		# 5910	[c=4]jump
.L133.l_o7ba9bc:
	push! &0		# 4468	[c=4]movdi_to_tr_unspec/1
	add! 184		# 4475	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 4477	[c=0]*peep2_pop_pusharg
	load8! &14 	#X13	# 2337	[c=4]pushdi1_not_fp/1
	load8! &16 	#X14	# 2338	[c=4]pushdi1_not_fp/1
	call! __ssprint_r		# 2339	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	# CBRANCH EQ0	# 2341	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L36.l_o7ba9bc
	# END CBRANCH
	load8! &25	# 2343	[c=2]movdi_push_pop
	store8! &1 	#AR
	load4! &24	# 2344	[c=2]movsi_push_pop
	store8! &2 	#X1
	push! &0		# 4452	[c=4]movdi_to_tr_unspec/1
	add! 248		# 4459	[c=4]*adddi/0
	store8! &3 	#X2	# 4457	[c=4]movdi_from_tr_unspec/0
	load8! &8 	#X8	# 5618	[c=5]movdi_to_tr_unspec/1
	add! -16		# 5620	[c=4]*adddi/0
	store8! &9 	#X8	# 5622	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 5623	[c=12]cbranchsi4_internal
	push! 16	
	add! -2147483648	
	load4! &9 	#X8
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L135.l_o7ba9bc
	# END CBRANCH
	jump! .L293.l_o7ba9bc		# 5914	[c=4]jump
.L117.l_o7ba9bc:
	push! &0		# 4785	[c=4]movdi_to_tr_unspec/1
	add! 184		# 4792	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 4794	[c=0]*peep2_pop_pusharg
	load8! &14 	#X13	# 1842	[c=4]pushdi1_not_fp/1
	load8! &16 	#X14	# 1843	[c=4]pushdi1_not_fp/1
	call! __ssprint_r		# 1844	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	# CBRANCH EQ0	# 1846	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L36.l_o7ba9bc
	# END CBRANCH
	load8! &25	# 1848	[c=2]movdi_push_pop
	store8! &1 	#AR
	load4! &24	# 1849	[c=2]movsi_push_pop
	store8! &2 	#X1
	push! &0		# 4769	[c=4]movdi_to_tr_unspec/1
	add! 248		# 4776	[c=4]*adddi/0
	store8! &3 	#X2	# 4774	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 5626	[c=5]movdi_to_tr_unspec/1
	add! -16		# 5628	[c=4]*adddi/0
	store8! &5 	#X4	# 5629	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 5630	[c=12]cbranchsi4_internal
	push! 16	
	add! -2147483648	
	load4! &5 	#X4
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L119.l_o7ba9bc
	# END CBRANCH
	jump! .L294.l_o7ba9bc		# 5918	[c=4]jump
.L140.l_o7ba9bc:
	push! &0		# 4333	[c=4]movdi_to_tr_unspec/1
	add! 184		# 4340	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 4342	[c=0]*peep2_pop_pusharg
	load8! &14 	#X13	# 2565	[c=4]pushdi1_not_fp/1
	load8! &16 	#X14	# 2566	[c=4]pushdi1_not_fp/1
	call! __ssprint_r		# 2567	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	# CBRANCH EQ0	# 2569	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L36.l_o7ba9bc
	# END CBRANCH
	load8! &25	# 2571	[c=2]movdi_push_pop
	store8! &1 	#AR
	load4! &24	# 2572	[c=2]movsi_push_pop
	store8! &2 	#X1
	push! &0		# 4317	[c=4]movdi_to_tr_unspec/1
	add! 248		# 4324	[c=4]*adddi/0
	store8! &5 	#X4	# 4322	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 5633	[c=5]movdi_to_tr_unspec/1
	add! -16		# 5635	[c=4]*adddi/0
	store8! &3 	#X2	# 5636	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 5637	[c=12]cbranchsi4_internal
	push! 16	
	add! -2147483648	
	load4! &3 	#X2
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L142.l_o7ba9bc
	# END CBRANCH
	jump! .L139.l_o7ba9bc		# 5921	[c=4]jump
.L127.l_o7ba9bc:
	push! &0		# 4566	[c=4]movdi_to_tr_unspec/1
	add! 184		# 4573	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 4575	[c=0]*peep2_pop_pusharg
	load8! &14 	#X13	# 2158	[c=4]pushdi1_not_fp/1
	load8! &16 	#X14	# 2159	[c=4]pushdi1_not_fp/1
	call! __ssprint_r		# 2160	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	# CBRANCH EQ0	# 2162	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L36.l_o7ba9bc
	# END CBRANCH
	load8! &25	# 2164	[c=2]movdi_push_pop
	store8! &1 	#AR
	load4! &24	# 2165	[c=2]movsi_push_pop
	store8! &2 	#X1
	push! &0		# 4550	[c=4]movdi_to_tr_unspec/1
	add! 248		# 4557	[c=4]*adddi/0
	store8! &3 	#X2	# 4555	[c=4]movdi_from_tr_unspec/0
	load8! &11 	#X11	# 5640	[c=5]movdi_to_tr_unspec/1
	add! -16		# 5642	[c=4]*adddi/0
	store8! &12 	#X11	# 5644	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 5645	[c=12]cbranchsi4_internal
	push! 16	
	add! -2147483648	
	load4! &12 	#X11
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L129.l_o7ba9bc
	# END CBRANCH
	jump! .L295.l_o7ba9bc		# 5925	[c=4]jump
.L168.l_o7ba9bc:
	load4! &10 	#X10	# 102	[c=4]movsi_push_pop
	store8! &5 	#X4
.L104.l_o7ba9bc:
	push! &0		# 4911	[c=4]movdi_to_tr_unspec/1
	add! 208		# 4918	[c=4]*adddi/0
	add! 40		# 110	[c=4]*adddi/0
	store8! &4 	#X3	# 111	[c=4]movdi_from_tr_unspec/0
	load8! &20	# 3636	[c=2]movdi_push_pop
	store8! &10 	#X9
.L110.l_o7ba9bc:
	load8! &0 	#AR	# 1614	[c=5]movdi_to_tr_unspec/1
	and! 0xf		# 1616	[c=4]*anddi3/0
	load8! &10 	#X9	# 4900	[c=6]*adddi/2
	add
	store8! &8 	#X7	# 4901	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 1629	[c=5]movdi_to_tr_unspec/1
	add! -1		# 1631	[c=4]*adddi/0
	store8! &4 	#X3	# 1632	[c=4]movdi_from_tr_unspec/0
	load8! &7 	#X7	# 1635	[c=7]movqi_to_tr_unspec/2
	load1	
	#	
	load8! &4 	#X3	# 1641	[c=4]movqi_from_tr_unspec/1
	store1	
	#	
	load8! &0 	#AR	# 1648	[c=5]movdi_to_tr_unspec/1
	shift_ru! 4	# 1650	[c=40]*lshrdi3/0
	store8! &1 	#AR	# 1651	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 1655	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_not_zero! .L110.l_o7ba9bc
	# END CBRANCH
	push! &0		# 4888	[c=4]movdi_to_tr_unspec/1
	add! 208		# 4895	[c=4]*adddi/0
	add! 40		# 1664	[c=4]*adddi/0
	load8! &4 	#X3	# 1669	[c=14]*subdi3/2
	sub
	store8! &13 	#X12	# 5301	[c=4]movsi_from_tr_unspec/0
	load4! &4 	#X4	# 126	[c=4]movsi_push_pop
	store8! &11 	#X10
	jump! .L91.l_o7ba9bc		# 5927	[c=4]jump
.L159.l_o7ba9bc:
	load4! &10 	#X10	# 75	[c=4]movsi_push_pop
	store8! &5 	#X4
	# CBRANCH	# 5648	[c=12]cbranchsi4_internal
	load4! &3 	#X3
	push! 1	
	xor	
	push! 1	
	lt_u	
	jump_zero! .L296.l_o7ba9bc
	# END CBRANCH
.L103.l_o7ba9bc:
	# CBRANCH	# 1528	[c=12]cbranchdi4_internal
	push! 9	
	load8! &1 	#AR
	lt_u	
	not	
	jump_zero! .L297.l_o7ba9bc
	# END CBRANCH
.L146.l_o7ba9bc:
	load8! &0 	#AR	# 1534	[c=5]movdi_to_tr_unspec/1
	add! 48		# 1536	[c=4]*adddi/0
	store1! (+ &0 255)	# 5312	[c=4]movqi_from_tr_unspec/0
	load4! &4 	#X4	# 114	[c=4]movsi_push_pop
	store8! &11 	#X10
	push! 1		# 115	[c=4]movsi_push_pop
	store8! &13 	#X12
	push! &0		# 4969	[c=4]movdi_to_tr_unspec/1
	add! 208		# 4976	[c=4]*adddi/0
	add! 39		# 123	[c=4]*adddi/0
	store8! &4 	#X3	# 124	[c=4]movdi_from_tr_unspec/0
	jump! .L91.l_o7ba9bc		# 5931	[c=4]jump
.L122.l_o7ba9bc:
	push! &0		# 4696	[c=4]movdi_to_tr_unspec/1
	add! 184		# 4703	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 4705	[c=0]*peep2_pop_pusharg
	load8! &14 	#X13	# 1998	[c=4]pushdi1_not_fp/1
	load8! &16 	#X14	# 1999	[c=4]pushdi1_not_fp/1
	call! __ssprint_r		# 2000	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	# CBRANCH EQ0	# 2002	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L36.l_o7ba9bc
	# END CBRANCH
	load8! &25	# 2004	[c=2]movdi_push_pop
	store8! &1 	#AR
	load4! &24	# 2005	[c=2]movsi_push_pop
	store8! &2 	#X1
	load8! &1 	#X1	# 2006	[c=5]movdi_to_tr_unspec/1
	add! 1		# 2008	[c=4]*adddi/0
	store8! &8 	#X7	# 5282	[c=4]movsi_from_tr_unspec/0
	push! &0		# 4663	[c=4]movdi_to_tr_unspec/1
	add! 248		# 4670	[c=4]*adddi/0
	add! 16		# 199	[c=4]*adddi/0
	store8! &5 	#X4	# 200	[c=4]movdi_from_tr_unspec/0
	push! &0		# 4680	[c=4]movdi_to_tr_unspec/1
	add! 248		# 4687	[c=4]*adddi/0
	store8! &3 	#X2	# 4685	[c=4]movdi_from_tr_unspec/0
	jump! .L121.l_o7ba9bc		# 5933	[c=4]jump
.L124.l_o7ba9bc:
	push! &0		# 4627	[c=4]movdi_to_tr_unspec/1
	add! 184		# 4634	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 4636	[c=0]*peep2_pop_pusharg
	load8! &14 	#X13	# 2067	[c=4]pushdi1_not_fp/1
	load8! &16 	#X14	# 2068	[c=4]pushdi1_not_fp/1
	call! __ssprint_r		# 2069	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	# CBRANCH EQ0	# 2071	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L36.l_o7ba9bc
	# END CBRANCH
	load8! &25	# 2073	[c=2]movdi_push_pop
	store8! &1 	#AR
	load4! &24	# 2074	[c=2]movsi_push_pop
	store8! &2 	#X1
	load8! &1 	#X1	# 2075	[c=5]movdi_to_tr_unspec/1
	add! 1		# 2077	[c=4]*adddi/0
	store8! &8 	#X7	# 5278	[c=4]movsi_from_tr_unspec/0
	push! &0		# 4594	[c=4]movdi_to_tr_unspec/1
	add! 248		# 4601	[c=4]*adddi/0
	add! 16		# 218	[c=4]*adddi/0
	store8! &5 	#X4	# 219	[c=4]movdi_from_tr_unspec/0
	push! &0		# 4611	[c=4]movdi_to_tr_unspec/1
	add! 248		# 4618	[c=4]*adddi/0
	store8! &3 	#X2	# 4616	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 5651	[c=14]cbranchsi4_internal
	load4! &18
	push! 128	
	xor	
	push! 1	
	lt_u	
	jump_zero! .L125.l_o7ba9bc
	# END CBRANCH
	jump! .L275.l_o7ba9bc		# 5936	[c=4]jump
.L136.l_o7ba9bc:
	push! &0		# 4431	[c=4]movdi_to_tr_unspec/1
	add! 184		# 4438	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 4440	[c=0]*peep2_pop_pusharg
	load8! &14 	#X13	# 2427	[c=4]pushdi1_not_fp/1
	load8! &16 	#X14	# 2428	[c=4]pushdi1_not_fp/1
	call! __ssprint_r		# 2429	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	# CBRANCH EQ0	# 2431	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L36.l_o7ba9bc
	# END CBRANCH
	load8! &25	# 2433	[c=2]movdi_push_pop
	store8! &1 	#AR
	load4! &24	# 4387	[c=5]movsi_to_tr_unspec/1
	add! 1		# 2437	[c=4]*adddi/0
	store8! &8 	#X7	# 5257	[c=4]movsi_from_tr_unspec/0
	push! &0		# 4398	[c=4]movdi_to_tr_unspec/1
	add! 248		# 4405	[c=4]*adddi/0
	add! 16		# 263	[c=4]*adddi/0
	store8! &5 	#X4	# 264	[c=4]movdi_from_tr_unspec/0
	push! &0		# 4415	[c=4]movdi_to_tr_unspec/1
	add! 248		# 4422	[c=4]*adddi/0
	store8! &3 	#X2	# 4420	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 5654	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 5656	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load4! &12 	#X12	# 5657	[c=5]movsi_to_tr_unspec/1
	sigx4		# 5659	[c=6]*extendsidi2
	store8! &2 	#X1	# 5660	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 5661	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 5663	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &1 	#X1	# 5664	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 5666	[c=6]*adddi/2
	add
	store8! &1 	#AR	# 5667	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 5668	[c=4]movdi_push_pop
	store8! &26
	load4! &7 	#X7	# 5669	[c=4]movsi_push_pop
	store4! &25
	# CBRANCH	# 5670	[c=12]cbranchsi4_internal
	push! 7	
	add! -2147483648	
	load4! &8 	#X7
	add! -2147483648	
	lt_u	
	jump_zero! .L137.l_o7ba9bc
	# END CBRANCH
	jump! .L277.l_o7ba9bc		# 5939	[c=4]jump
.L106.l_o7ba9bc:
	# CBRANCH EQ	# 1465	[c=12]cbranchqi4_internal
	load1! &7 	#X7
	push! 48	
	xor	
	jump_zero! .L298.l_o7ba9bc
	# END CBRANCH
	load8! &9 	#X9	# 1490	[c=5]movdi_to_tr_unspec/1
	add! -2		# 1492	[c=4]*adddi/0
	store8! &1 	#AR	# 1493	[c=4]movdi_from_tr_unspec/0
	push! 48		# 4978	[c=3]movqi_to_tr_unspec/0
	load8! &4 	#X3	# 4980	[c=5]movdi_to_tr_unspec/1
	add! -1		# 4982	[c=4]*adddi/0
	store1		# 4983	[c=4]*peep2_mov_from_tr_to_mem_tr_ind_popqi_unspec
	push! &0		# 4992	[c=4]movdi_to_tr_unspec/1
	add! 208		# 4999	[c=4]*adddi/0
	add! 40		# 1512	[c=4]*adddi/0
	load8! &1 	#AR	# 1517	[c=14]*subdi3/2
	sub
	store8! &13 	#X12	# 5314	[c=4]movsi_from_tr_unspec/0
	load4! &4 	#X4	# 151	[c=4]movsi_push_pop
	store8! &11 	#X10
	load8! &0 	#AR	# 152	[c=4]movdi_push_pop
	store8! &4 	#X3
	jump! .L91.l_o7ba9bc		# 5942	[c=4]jump
.L150.l_o7ba9bc:
	load8! &5 	#X5	# 26	[c=4]movdi_push_pop
	store8! &4 	#X3
	load8! &3 	#X3	# 5673	[c=5]movdi_to_tr_unspec/1
	add! 1		# 5675	[c=4]*adddi/0
	store8! &1 	#AR	# 5676	[c=4]movdi_from_tr_unspec/0
	push! 0		# 5677	[c=4]movqi_push_pop
	store1! &22
	push! 0		# 5678	[c=4]movqi_push_pop
	store8! &4 	#X3
	push! 0		# 5679	[c=4]movqi_push_pop
	store8! &8 	#X7
	push! -1		# 5680	[c=4]movsi_push_pop
	store8! &9 	#X8
	push! 0		# 5681	[c=4]movsi_push_pop
	store8! &7 	#X6
	push! 0		# 5682	[c=4]movsi_push_pop
	store8! &5 	#X4
	jump! .L37.l_o7ba9bc		# 5944	[c=4]jump
.L164.l_o7ba9bc:
	push! &0		# 4836	[c=4]movdi_to_tr_unspec/1
	add! 208		# 4843	[c=4]*adddi/0
	add! 40		# 163	[c=4]*adddi/0
	store8! &4 	#X3	# 164	[c=4]movdi_from_tr_unspec/0
	jump! .L91.l_o7ba9bc		# 5946	[c=4]jump
.L99.l_o7ba9bc:
	load4! &0 	#AR	# 5069	[c=5]movsi_to_tr_unspec/1
	store8! &1 	#AR	# 5071	[c=4]movdi_from_tr_unspec/0
	jump! .L98.l_o7ba9bc		# 5948	[c=4]jump
.L288.l_o7ba9bc:
	load4! &15 	#X15	# 961	[c=5]movsi_to_tr_unspec/1
	sigx4		# 963	[c=6]*extendsidi2
	load8! &1 	#AR	# 968	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	jump! .L28.l_o7ba9bc		# 5950	[c=4]jump
.L75.l_o7ba9bc:
	load8! &51	# 3912	[c=2]movdi_push_pop
	store8! &2 	#X1
	load8! &1 	#X1	# 896	[c=7]movsi_to_tr_unspec/2
	load4	
	#	
	store8! &2 	#X1	# 898	[c=4]movsi_from_tr_unspec/0
	load4! &1 	#X1	# 900	[c=5]movsi_to_tr_unspec/1
	sigx4		# 902	[c=6]*extendsidi2
	store8! &1 	#AR	# 903	[c=4]movdi_from_tr_unspec/0
	load4! &1 	#X1	# 905	[c=5]movsi_to_tr_unspec/1
	sigx4		# 907	[c=6]*extendsidi2
	store8! &2 	#X1	# 908	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 47	[c=4]movdi_push_pop
	store8! &52
	jump! .L74.l_o7ba9bc		# 5952	[c=4]jump
.L158.l_o7ba9bc:
	load8! &3 	#X3	# 70	[c=4]movdi_push_pop
	store8! &52
	push! 2		# 71	[c=4]movsi_push_pop
	store8! &4 	#X3
	push! 0		# 5685	[c=4]movqi_push_pop
	store1! &22
	push! 0		# 5686	[c=4]movqi_push_pop
	store8! &2 	#X1
	jump! .L77.l_o7ba9bc		# 5954	[c=4]jump
.L95.l_o7ba9bc:
	load4! &0 	#AR	# 5078	[c=5]movsi_to_tr_unspec/1
	store8! &1 	#AR	# 5080	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 56	[c=4]movdi_push_pop
	store8! &52
	push! 1		# 57	[c=4]movsi_push_pop
	store8! &4 	#X3
	push! 0		# 5689	[c=4]movqi_push_pop
	store1! &22
	push! 0		# 5690	[c=4]movqi_push_pop
	store8! &2 	#X1
	jump! .L77.l_o7ba9bc		# 5956	[c=4]jump
.L86.l_o7ba9bc:
	load4! &0 	#AR	# 5093	[c=5]movsi_to_tr_unspec/1
	store8! &1 	#AR	# 5095	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 51	[c=4]movdi_push_pop
	store8! &52
	push! 0		# 52	[c=4]movsi_push_pop
	store8! &4 	#X3
	push! 0		# 5693	[c=4]movqi_push_pop
	store1! &22
	push! 0		# 5694	[c=4]movqi_push_pop
	store8! &2 	#X1
	jump! .L77.l_o7ba9bc		# 5958	[c=4]jump
.L297.l_o7ba9bc:
	push! &0		# 4949	[c=4]movdi_to_tr_unspec/1
	add! 208		# 4956	[c=4]*adddi/0
	add! 40		# 98	[c=4]*adddi/0
	store8! &4 	#X3	# 99	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 1549	[c=5]movdi_to_tr_unspec/1
	rem_u! 10	# 1551	[c=28]*umoddi3/0
	add! 48		# 1560	[c=4]*adddi/0
	store8! &8 	#X7	# 5309	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 5310	[c=5]movdi_to_tr_unspec/1
	add! -1		# 1574	[c=4]*adddi/0
	store8! &4 	#X3	# 1575	[c=4]movdi_from_tr_unspec/0
	load1! &7 	#X7	# 1579	[c=5]movqi_to_tr_unspec/1
	load8! &4 	#X3	# 1581	[c=4]movqi_from_tr_unspec/1
	store1	
	#	
	load8! &0 	#AR	# 1583	[c=5]movdi_to_tr_unspec/1
	div_u! 10	# 1585	[c=28]*udivdi3/0
	store8! &8 	#X7	# 1586	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 1588	[c=12]cbranchdi4_internal
	push! 9	
	load8! &1 	#AR
	lt_u	
	jump_zero! .L299.l_o7ba9bc
	# END CBRANCH
.L162.l_o7ba9bc:
	load8! &7 	#X7	# 101	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 5697	[c=5]movdi_to_tr_unspec/1
	rem_u! 10	# 5699	[c=28]*umoddi3/0
	add! 48		# 5701	[c=4]*adddi/0
	store8! &8 	#X7	# 5702	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 5703	[c=5]movdi_to_tr_unspec/1
	add! -1		# 5705	[c=4]*adddi/0
	store8! &4 	#X3	# 5706	[c=4]movdi_from_tr_unspec/0
	load1! &7 	#X7	# 5707	[c=5]movqi_to_tr_unspec/1
	load8! &4 	#X3	# 5709	[c=4]movqi_from_tr_unspec/1
	store1	
	#	
	load8! &0 	#AR	# 5710	[c=5]movdi_to_tr_unspec/1
	div_u! 10	# 5712	[c=28]*udivdi3/0
	store8! &8 	#X7	# 5713	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 5714	[c=12]cbranchdi4_internal
	push! 9	
	load8! &1 	#AR
	lt_u	
	not	
	jump_zero! .L162.l_o7ba9bc
	# END CBRANCH
.L299.l_o7ba9bc:
	push! &0		# 4928	[c=4]movdi_to_tr_unspec/1
	add! 208		# 4935	[c=4]*adddi/0
	add! 40		# 1597	[c=4]*adddi/0
	load8! &4 	#X3	# 1602	[c=14]*subdi3/2
	sub
	store8! &13 	#X12	# 5304	[c=4]movsi_from_tr_unspec/0
	load4! &4 	#X4	# 154	[c=4]movsi_push_pop
	store8! &11 	#X10
	jump! .L91.l_o7ba9bc		# 5961	[c=4]jump
.L169.l_o7ba9bc:
	load4! &10 	#X10	# 88	[c=4]movsi_push_pop
	store8! &5 	#X4
	# CBRANCH	# 5717	[c=12]cbranchdi4_internal
	push! 9	
	load8! &1 	#AR
	lt_u	
	jump_zero! .L146.l_o7ba9bc
	# END CBRANCH
	jump! .L297.l_o7ba9bc		# 5964	[c=4]jump
.L89.l_o7ba9bc:
	load8! &3 	#X3	# 1165	[c=4]pushdi1_not_fp/1
	call! strlen		# 1166	[c=0]*call_value_pop_1/0
	store8! &1

	load4! &0 	#AR	# 5088	[c=4]movsi_push_pop
	store8! &13 	#X12
	load1! &21	# 1172	[c=2]movqi_push_pop
	store8! &2 	#X1
	load8! &7 	#X7	# 166	[c=4]movdi_push_pop
	store8! &52
	load4! &4 	#X4	# 167	[c=4]movsi_push_pop
	store8! &11 	#X10
	push! 0		# 168	[c=4]movsi_push_pop
	store8! &9 	#X8
	jump! .L91.l_o7ba9bc		# 5966	[c=4]jump
.L266.l_o7ba9bc:
	push! 64		# 324	[c=4]pushdi1_not_fp/0
	load8! &15 	#X14	# 325	[c=4]pushdi1_not_fp/1
	call! _malloc_r		# 326	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load8! &0 	#AR	# 328	[c=5]movdi_to_tr_unspec/1
	load8! &14 	#X13	# 330	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load8! &0 	#AR	# 332	[c=5]movdi_to_tr_unspec/1
	load8! &14 	#X13	# 334	[c=4]movdi_from_tr_unspec/1
	add! 24	
	store8	
	#	
	# CBRANCH EQ0	# 336	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L300.l_o7ba9bc
	# END CBRANCH
	push! 64		# 346	[c=3]movsi_to_tr_unspec/0
	load8! &14 	#X13	# 348	[c=4]movsi_from_tr_unspec/1
	add! 32	
	store4	
	#	
	push! &0		# 5720	[c=4]movdi_to_tr_unspec/1
	add! 248		# 5722	[c=4]*adddi/0
	store8! &24	# 5723	[c=4]movdi_from_tr_unspec/0
	push! 0		# 5724	[c=4]movdi_push_pop
	store8! &26
	push! 0		# 5725	[c=4]movsi_push_pop
	store4! &25
	push! &0		# 5726	[c=4]movdi_to_tr_unspec/1
	add! 248		# 5728	[c=4]*adddi/0
	store8! &3 	#X2	# 5729	[c=4]movdi_from_tr_unspec/0
	push! 0		# 5730	[c=4]movdi_push_pop
	store8! &21
	push! 0		# 5731	[c=4]movsi_push_pop
	store8! &16 	#X15
	jump! .L28.l_o7ba9bc		# 5969	[c=4]jump
.L166.l_o7ba9bc:
	load8! &4 	#X4	# 254	[c=4]movdi_push_pop
	store8! &2 	#X1
	jump! .L132.l_o7ba9bc		# 5971	[c=4]jump
.L120.l_o7ba9bc:
	push! &0		# 4748	[c=4]movdi_to_tr_unspec/1
	add! 184		# 4755	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 4757	[c=0]*peep2_pop_pusharg
	load8! &14 	#X13	# 1923	[c=4]pushdi1_not_fp/1
	load8! &16 	#X14	# 1924	[c=4]pushdi1_not_fp/1
	call! __ssprint_r		# 1925	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	# CBRANCH EQ0	# 1927	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L36.l_o7ba9bc
	# END CBRANCH
	load8! &25	# 1929	[c=2]movdi_push_pop
	store8! &1 	#AR
	load4! &24	# 1930	[c=2]movsi_push_pop
	store8! &2 	#X1
	push! &0		# 4732	[c=4]movdi_to_tr_unspec/1
	add! 248		# 4739	[c=4]*adddi/0
	store8! &3 	#X2	# 4737	[c=4]movdi_from_tr_unspec/0
	jump! .L115.l_o7ba9bc		# 5973	[c=4]jump
.L273.l_o7ba9bc:
	# CBRANCH EQ	# 2721	[c=12]cbranchsi4_internal
	load4! &3 	#X3
	push! 1	
	xor	
	jump_zero! .L167.l_o7ba9bc
	# END CBRANCH
	# CBRANCH EQ	# 2723	[c=12]cbranchsi4_internal
	load4! &3 	#X3
	push! 2	
	xor	
	jump_zero! .L168.l_o7ba9bc
	# END CBRANCH
	load4! &10 	#X10	# 76	[c=4]movsi_push_pop
	store8! &5 	#X4
	push! &0		# 5734	[c=4]movdi_to_tr_unspec/1
	add! 208		# 5736	[c=4]*adddi/0
	add! 40		# 5738	[c=4]*adddi/0
	store8! &10 	#X9	# 5739	[c=4]movdi_from_tr_unspec/0
	jump! .L105.l_o7ba9bc		# 5975	[c=4]jump
.L130.l_o7ba9bc:
	push! &0		# 4529	[c=4]movdi_to_tr_unspec/1
	add! 184		# 4536	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 4538	[c=0]*peep2_pop_pusharg
	load8! &14 	#X13	# 2248	[c=4]pushdi1_not_fp/1
	load8! &16 	#X14	# 2249	[c=4]pushdi1_not_fp/1
	call! __ssprint_r		# 2250	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	# CBRANCH EQ0	# 2252	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L36.l_o7ba9bc
	# END CBRANCH
	load8! &25	# 2254	[c=2]movdi_push_pop
	store8! &1 	#AR
	load4! &24	# 2255	[c=2]movsi_push_pop
	store8! &2 	#X1
	load8! &1 	#X1	# 2256	[c=5]movdi_to_tr_unspec/1
	add! 1		# 2258	[c=4]*adddi/0
	store8! &8 	#X7	# 5267	[c=4]movsi_from_tr_unspec/0
	push! &0		# 4496	[c=4]movdi_to_tr_unspec/1
	add! 248		# 4503	[c=4]*adddi/0
	add! 16		# 241	[c=4]*adddi/0
	store8! &5 	#X4	# 242	[c=4]movdi_from_tr_unspec/0
	push! &0		# 4513	[c=4]movdi_to_tr_unspec/1
	add! 248		# 4520	[c=4]*adddi/0
	store8! &3 	#X2	# 4518	[c=4]movdi_from_tr_unspec/0
	load8! &12 	#X12	# 5742	[c=5]movdi_to_tr_unspec/1
	load8! &9 	#X8	# 5744	[c=14]*subdi3/2
	sub
	neg		# 5745	[c=4]*neg_tr
	store8! &9 	#X8	# 5746	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 5747	[c=12]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &9 	#X8
	add! -2147483648	
	lt_u	
	jump_zero! .L131.l_o7ba9bc
	# END CBRANCH
	jump! .L276.l_o7ba9bc		# 5978	[c=4]jump
.L279.l_o7ba9bc:
	# CBRANCH	# 1129	[c=12]cbranchsi4_internal
	push! 6	
	load4! &9 	#X8
	lt_u	
	jump_zero! .L88.l_o7ba9bc
	# END CBRANCH
	push! 6		# 1130	[c=4]movsi_push_pop
	store8! &9 	#X8
.L88.l_o7ba9bc:
	load4! &8 	#X8	# 1132	[c=4]movsi_push_pop
	store8! &13 	#X12
	load4! &8 	#X8	# 283	[c=4]movsi_push_pop
	store8! &10 	#X9
	load8! &7 	#X7	# 284	[c=4]movdi_push_pop
	store8! &52
	push! .LC2.l_o7ba9bc		# 285	[c=4]movdi_push_pop
	store8! &4 	#X3
	load4! &4 	#X4	# 5750	[c=4]movsi_push_pop
	store8! &11 	#X10
	push! 0		# 5751	[c=4]movsi_push_pop
	store8! &9 	#X8
	jump! .L113.l_o7ba9bc		# 5980	[c=4]jump
.L298.l_o7ba9bc:
	push! &0		# 5011	[c=4]movdi_to_tr_unspec/1
	add! 208		# 5018	[c=4]*adddi/0
	add! 40		# 1474	[c=4]*adddi/0
	load8! &4 	#X3	# 1479	[c=14]*subdi3/2
	sub
	store8! &13 	#X12	# 5316	[c=4]movsi_from_tr_unspec/0
	load4! &4 	#X4	# 153	[c=4]movsi_push_pop
	store8! &11 	#X10
	jump! .L91.l_o7ba9bc		# 5982	[c=4]jump
.L81.l_o7ba9bc:
	load4! &15 	#X15	# 998	[c=5]movsi_to_tr_unspec/1
	load8! &1 	#AR	# 1000	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	jump! .L28.l_o7ba9bc		# 5984	[c=4]jump
.L292.l_o7ba9bc:
	load1! &7 	#X7	# 1702	[c=4]movqi_push_pop
	store1! &22
	jump! .L111.l_o7ba9bc		# 5986	[c=4]jump
.L280.l_o7ba9bc:
	load1! &7 	#X7	# 513	[c=4]movqi_push_pop
	store1! &22
	push! .LC1.l_o7ba9bc		# 5754	[c=4]movdi_push_pop
	store8! &21
	jump! .L64.l_o7ba9bc		# 5988	[c=4]jump
.L281.l_o7ba9bc:
	load1! &7 	#X7	# 829	[c=4]movqi_push_pop
	store1! &22
	jump! .L72.l_o7ba9bc		# 5990	[c=4]jump
.L283.l_o7ba9bc:
	load1! &7 	#X7	# 1021	[c=4]movqi_push_pop
	store1! &22
	jump! .L83.l_o7ba9bc		# 5992	[c=4]jump
.L284.l_o7ba9bc:
	load1! &7 	#X7	# 1264	[c=4]movqi_push_pop
	store1! &22
	push! .LC0.l_o7ba9bc		# 5757	[c=4]movdi_push_pop
	store8! &21
	jump! .L301.l_o7ba9bc		# 5995	[c=4]jump
.L287.l_o7ba9bc:
	load1! &7 	#X7	# 932	[c=4]movqi_push_pop
	store1! &22
	load8! &4 	#X4	# 5760	[c=5]movdi_to_tr_unspec/1
	and! 0x10		# 5762	[c=4]*anddi3/0
	store8! &2 	#X1	# 5764	[c=4]movsi_from_tr_unspec/0
	load8! &51	# 5765	[c=2]movdi_push_pop
	store8! &4 	#X3
	load8! &3 	#X3	# 5766	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	store8! &1 	#AR	# 5768	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 5769	[c=5]movdi_to_tr_unspec/1
	add! 8		# 5771	[c=4]*adddi/0
	store8! &52	# 5772	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 5773	[c=12]cbranchsi4_internal
	load4! &1 	#X1
	jump_zero! .L79.l_o7ba9bc
	# END CBRANCH
	jump! .L288.l_o7ba9bc		# 5998	[c=4]jump
.L289.l_o7ba9bc:
	load1! &7 	#X7	# 811	[c=4]movqi_push_pop
	store1! &22
	load8! &4 	#X4	# 5776	[c=5]movdi_to_tr_unspec/1
	or! 0x10		# 5778	[c=4]*iordi3/0
	store8! &5 	#X4	# 5780	[c=4]movsi_from_tr_unspec/0
	jump! .L71.l_o7ba9bc		# 6000	[c=4]jump
.L272.l_o7ba9bc:
	load1! &7 	#X7	# 1192	[c=4]movqi_push_pop
	store1! &22
	jump! .L93.l_o7ba9bc		# 6002	[c=4]jump
.L165.l_o7ba9bc:
	load8! &4 	#X4	# 231	[c=4]movdi_push_pop
	store8! &19
	load4! &7 	#X7	# 232	[c=4]movsi_push_pop
	store8! &2 	#X1
	jump! .L126.l_o7ba9bc		# 6004	[c=4]jump
.L269.l_o7ba9bc:
	push! -1		# 282	[c=4]movsi_push_pop
	store8! &16 	#X15
	load4! &15 	#X15	# 5783	[c=4]movsi_push_pop
	store4! &49
	jump! .L270.l_o7ba9bc		# 6006	[c=4]jump
.L90.l_o7ba9bc:
	load1! &21	# 1717	[c=2]movqi_push_pop
	store8! &2 	#X1
	load8! &7 	#X7	# 172	[c=4]movdi_push_pop
	store8! &52
	load4! &8 	#X8	# 173	[c=4]movsi_push_pop
	store8! &13 	#X12
	load4! &4 	#X4	# 174	[c=4]movsi_push_pop
	store8! &11 	#X10
	push! 0		# 175	[c=4]movsi_push_pop
	store8! &9 	#X8
	jump! .L91.l_o7ba9bc		# 6008	[c=4]jump
.L167.l_o7ba9bc:
	load4! &10 	#X10	# 89	[c=4]movsi_push_pop
	store8! &5 	#X4
	load8! &0 	#AR	# 5787	[c=5]movdi_to_tr_unspec/1
	add! 48		# 5789	[c=4]*adddi/0
	store1! (+ &0 255)	# 5790	[c=4]movqi_from_tr_unspec/0
	load4! &4 	#X4	# 5791	[c=4]movsi_push_pop
	store8! &11 	#X10
	push! 1		# 5792	[c=4]movsi_push_pop
	store8! &13 	#X12
	push! &0		# 5793	[c=4]movdi_to_tr_unspec/1
	add! 208		# 5795	[c=4]*adddi/0
	add! 39		# 5797	[c=4]*adddi/0
	store8! &4 	#X3	# 5798	[c=4]movdi_from_tr_unspec/0
	jump! .L91.l_o7ba9bc		# 6010	[c=4]jump
.L170.l_o7ba9bc:
	load4! &10 	#X10	# 90	[c=4]movsi_push_pop
	store8! &5 	#X4
	load8! &0 	#AR	# 5802	[c=5]movdi_to_tr_unspec/1
	add! 48		# 5804	[c=4]*adddi/0
	store1! (+ &0 255)	# 5805	[c=4]movqi_from_tr_unspec/0
	load4! &4 	#X4	# 5806	[c=4]movsi_push_pop
	store8! &11 	#X10
	push! 1		# 5807	[c=4]movsi_push_pop
	store8! &13 	#X12
	push! &0		# 5808	[c=4]movdi_to_tr_unspec/1
	add! 208		# 5810	[c=4]*adddi/0
	add! 39		# 5812	[c=4]*adddi/0
	store8! &4 	#X3	# 5813	[c=4]movdi_from_tr_unspec/0
	jump! .L91.l_o7ba9bc		# 6012	[c=4]jump
.L65.l_o7ba9bc:
	load8! &51	# 611	[c=5]movdi_to_tr_unspec/1
	add! 8		# 613	[c=4]*adddi/0
	store8! &1 	#AR	# 614	[c=4]movdi_from_tr_unspec/0
	load8! &51	# 3901	[c=2]movdi_push_pop
	store8! &2 	#X1
	load8! &1 	#X1	# 616	[c=7]movsi_to_tr_unspec/2
	load4	
	#	
	store8! &9 	#X8	# 618	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 621	[c=12]cbranchsi4_internal
	load4! &8 	#X8
	add! -2147483648	
	push! 0	
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L302.l_o7ba9bc
	# END CBRANCH
	load8! &0 	#AR	# 29	[c=4]movdi_push_pop
	store8! &52
	load8! &9 	#X9	# 30	[c=4]movdi_push_pop
	store8! &6 	#X5
.L303.l_o7ba9bc:
	load8! &5 	#X5	# 5816	[c=4]movdi_push_pop
	store8! &1 	#AR
	jump! .L37.l_o7ba9bc		# 6015	[c=4]jump
.L302.l_o7ba9bc:
	push! -1		# 622	[c=4]movsi_push_pop
	store8! &9 	#X8
	load8! &0 	#AR	# 5819	[c=4]movdi_push_pop
	store8! &52
	load8! &9 	#X9	# 5820	[c=4]movdi_push_pop
	store8! &6 	#X5
	jump! .L303.l_o7ba9bc		# 6018	[c=4]jump
.L300.l_o7ba9bc:
	push! 12		# 338	[c=3]movsi_to_tr_unspec/0
	load8! &15 	#X14	# 340	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	push! -1		# 281	[c=4]movsi_push_pop
	store8! &16 	#X15
	load4! &15 	#X15	# 5823	[c=4]movsi_push_pop
	store4! &49
.L270.l_o7ba9bc:

	# epilogue
	set_sp! &47
	return

# FUNCTION ENDS:_svfiprintf_r

.Li_zeroes_4562.l_o7ba9bc:
	data1 [48]
	data1 [48]
	data1 [48]
	data1 [48]
	data1 [48]
	data1 [48]
	data1 [48]
	data1 [48]
	data1 [48]
	data1 [48]
	data1 [48]
	data1 [48]
	data1 [48]
	data1 [48]
	data1 [48]
	data1 [48]
.Li_blanks_4561.l_o7ba9bc:
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
#	IMPORT strlen
#	IMPORT memchr
#	IMPORT _free_r
#	IMPORT _realloc_r
#	IMPORT memcpy
#	IMPORT _malloc_r
#	IMPORT memmove
#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: ocf5a76
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"vfprintf.c"
#	.text
.LC0.l_ocf5a76:
#	.string "INF"
	data1 [ 73 78 70 0 ]
.LC1.l_ocf5a76:
#	.string "inf"
	data1 [ 105 110 102 0 ]
.LC2.l_ocf5a76:
#	.string "NAN"
	data1 [ 78 65 78 0 ]
.LC3.l_ocf5a76:
#	.string "nan"
	data1 [ 110 97 110 0 ]
.LC4.l_ocf5a76:
#	.string "0123456789ABCDEF"
	data1 [ 48 49 50 51 52 53 54 55 56 57 65 66 67 68 69 70 0 ]
.LC5.l_ocf5a76:
#	.string "0123456789abcdef"
	data1 [ 48 49 50 51 52 53 54 55 56 57 97 98 99 100 101 102 0 ]
.LC6.l_ocf5a76:
#	.string "(null)"
	data1 [ 40 110 117 108 108 41 0 ]
.LC7.l_ocf5a76:
#	.string "0"
	data1 [ 48 0 ]
	#peephole pop+push+commut(di)
	#peephole move_dead
	#peephole move+push(pushable)
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole nop+set
	#peephole move_dead
	#peephole move_dead
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole pop+push+commut(di)
	#peephole move
	#peephole 1
	#peephole pop+push+commut(di)
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move_dead
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole 1
	#peephole nop+set
	#peephole move_dead
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole 1
	#peephole nop+set
	#peephole move
	#peephole move+push+sub
	#peephole move_dead
	#peephole 1
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole move_dead
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole move_dead
	#peephole move_dead
	#peephole move_dead
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole move_dead
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole move
	#peephole move_dead
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole move_dead
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole 1
	#peephole 1
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole 1
	#peephole nop+set
	#peephole move_dead
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole 1
	#peephole nop+set
	#peephole move_dead
	#peephole move+push+sub
	#peephole move_dead
	#peephole move+push(pushable)
	#peephole move+push(pushable)
	#peephole 1
	#peephole nop+set
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole move+push(pushable)
	#peephole 1
	#peephole nop+set
	#peephole move+push(pushable)
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole nop+set
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole move+push(pushable)
	#peephole 1
	#peephole nop+set
	#peephole 1
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole 1
	#peephole nop+set
	#peephole move_dead
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole 1
	#peephole nop+set
	#peephole move_dead
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole move+push(pushable)
	#peephole 1
	#peephole nop+set
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole 1
	#peephole nop+set
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole move_dead
	#peephole 1
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole move_dead
	#peephole 1
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole nop+set
	#peephole move+push(pushable)
	#peephole 1
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole move+push(pushable)
	#peephole 1
	#peephole nop+set
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole 1
	#peephole nop+set
	#peephole move_dead
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole 1
	#peephole nop+set
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole move+push(pushable)
	#peephole 1
	#peephole nop+set
	#peephole 1
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole pop+move2(deadreg)
	#peephole move+push(pushable)
	#peephole 1
	#peephole nop+set
	#peephole move
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole move+push(pushable)
	#peephole 1
	#peephole nop+set
	#peephole 1
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole 1
	#peephole nop+set
	#peephole move_dead
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole 1
	#peephole nop+set
	#peephole move
	#peephole move+push+sub
	#peephole move_dead
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole 1
	#peephole nop+set
	#peephole move_dead
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole 1
	#peephole nop+set
	#peephole move
	#peephole move+push+sub
	#peephole move_dead
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move+push(pushable)
	#peephole 1
	#peephole nop+set
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move+push(pushable)
	#peephole 1
	#peephole nop+set
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole 1
	#peephole nop+set
	#peephole move_dead
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole 1
	#peephole nop+set
	#peephole move
	#peephole move+push+sub
	#peephole move_dead
	#peephole move_dead
	#peephole move_dead
	#peephole move_dead
	#peephole move_dead
	#peephole move
	#peephole move+move(allmodes x allmodes)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole nop+set
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole push+add+pop+push+ind pop
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole 1
	#peephole move
	#peephole move+push(pushable)
	#peephole 1
	#peephole 1
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move
	#peephole move+move(allmodes x allmodes)
	#peephole move_dead
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole move+push(pushable)
	#peephole zero_extend
	#peephole 1
	#peephole nop+set
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole move+push(pushable)
	#peephole zero_extend
	#peephole 1
	#peephole nop+set
	#peephole 1
	#peephole move_dead
	#peephole move_dead
	#peephole move_dead
	#peephole pop+pusharg
	#peephole move_dead
	#peephole zero_extend
	#peephole move_dead
	#peephole move+push(pushable)
	#peephole zero_extend
	#peephole 1
	#peephole nop+set
	#peephole 1
	#peephole move_dead
	#peephole move+push(pushable)
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole nop+set
	#peephole pop+move2(deadreg)
	#peephole move+push(pushable)
	#peephole pop+push+sub
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole move+push(pushable)
	#peephole pop(deadreg)+pushdi
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole 1
	#peephole move+push(pushable)
	#peephole pop(deadreg)+pushdi
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole move+push(pushable)
	#peephole pop(deadreg)+pushdi
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole move_dead
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole move+push(pushable)
	#peephole pop(deadreg)+pushdi
	#peephole pop+push+commut(di)
	#peephole move_dead
	#peephole move_dead
	#peephole move
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole nop+set
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+push+sub
	#peephole move_dead
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole pop+cmprev
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole push+add+pop+push+ind pop
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole popdi+cmp rev
	#peephole unary+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole unary+deadreg+binop
	#peephole 1
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole move+push(pushable)
	#peephole pop+push+sub
	#peephole 1
	#peephole nop+set
	#peephole move+push(pushable)
	#peephole 1
	#peephole nop+set
	#peephole move
	#peephole move+move(allmodes x allmodes)
	#peephole move
	#peephole move_dead
	#peephole move
	#peephole pop+move2(deadreg)
	#peephole pop+push+commut(di)
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole nop+set
	#peephole pop+cmp
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole move_dead
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole move_dead
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole move_dead
	#peephole move_dead
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move
	#peephole move
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole nop+set
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move_dead
	#peephole move_dead
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole 1
	#peephole nop+set
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole 1
	#peephole nop+set
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move_dead
	#peephole move_dead
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move_dead
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole pop+cmp
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole pop+move2(deadreg)
	#peephole move+push(pushable)
	#peephole 1
	#peephole nop+set
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+cmp
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+move2(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole pop+block+push+commut(si)
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole move
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+move2(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole move
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole move+push(pushable)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+push+commut(si)
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+push+commut(si)
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+block+cmp
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move2(deadreg)
	#peephole pop+move(deadreg)
	#peephole set+nop
	#peephole pop+move2(deadreg)
	#peephole pop+move2(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+move2(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move2(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block

# FUNCTION BEGINS:_svfprintf_r
	EXPORT	_svfprintf_r
_svfprintf_r:
	# prologue (16 GPRs)

	set_sp! &-56

	load8! &57	# 2	[c=2]movdi_push_pop
	store8! &16 	#X15
	load8! &58	# 3	[c=2]movdi_push_pop
	store8! &11 	#X10
	load8! &59	# 4	[c=2]movdi_push_pop
	store8! &7 	#X6
	load8! &15 	#X15	# 459	[c=4]pushdi1_not_fp/1
	call! _localeconv_r		# 460	[c=0]*call_value_pop_1/0
	store8! &1

	load8! &0 	#AR	# 462	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	store8! &22	# 464	[c=4]movdi_from_tr_unspec/0
	load8! &21	# 466	[c=2]pushdi1_not_fp/1
	call! strlen		# 467	[c=0]*call_value_pop_1/0
	store8! &1

	load8! &0 	#AR	# 468	[c=4]movdi_push_pop
	store8! &21
	push! 0		# 469	[c=4]movdi_push_pop
	store8! &23
	load8! &10 	#X10	# 470	[c=6]movhi_to_tr_unspec/2
	add! 16	
	load2	
	#	
	and! 0x80		# 476	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=2)
	and! 65535		# 12787	[c=12]*peep2_cbranchhi
	# - EQ0
	jump_zero! .L2.l_ocf5a76
	# END CBRANCH
	load8! &10 	#X10	# 485	[c=11]movdi_to_tr_unspec/2
	add! 24	
	load8	
	#	
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L433.l_ocf5a76	# 12478	[c=12]*peep2_cbranchdi
	# END CBRANCH
.L2.l_ocf5a76:
	push! &0		# 12454	[c=4]movdi_to_tr_unspec/1
	add! 320		# 12461	[c=4]*adddi/0
	store8! &33	# 12459	[c=4]movdi_from_tr_unspec/0
	push! 0		# 524	[c=4]movdi_push_pop
	store8! &35
	push! 0		# 525	[c=4]movsi_push_pop
	store4! &34
	push! 0		# 12	[c=4]movsi_push_pop
	store4! &20
	push! &0		# 12470	[c=4]movdi_to_tr_unspec/1
	add! 320		# 12477	[c=4]*adddi/0
	store8! &4 	#X3	# 12475	[c=4]movdi_from_tr_unspec/0
	push! 0		# 18	[c=4]movdi_push_pop
	store8! &24
	push! 0		# 19	[c=4]movsi_push_pop
	store4! &26
	push! 0		# 20	[c=4]movsi_push_pop
	store4! &18
.L5.l_ocf5a76:
	load8! &6 	#X6	# 531	[c=7]movqi_to_tr_unspec/2
	load1	
	#	
	store8! &1 	#AR	# 533	[c=4]movqi_from_tr_unspec/0
	# CBRANCH EQ0	# 535	[c=12]cbranchqi4_internal
	load1! &0 	#AR
	jump_zero! .L6.l_ocf5a76
	# END CBRANCH
	# CBRANCH EQ	# 537	[c=12]cbranchqi4_internal
	load1! &0 	#AR
	push! 37	
	xor	
	jump_zero! .L260.l_ocf5a76
	# END CBRANCH
	load8! &6 	#X6	# 21	[c=4]movdi_push_pop
	store8! &5 	#X4
	load8! &4 	#X4	# 539	[c=5]movdi_to_tr_unspec/1
	add! 1		# 541	[c=4]*adddi/0
	store8! &3 	#X2	# 542	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 544	[c=7]movqi_to_tr_unspec/2
	load1	
	#	
	store8! &1 	#AR	# 546	[c=4]movqi_from_tr_unspec/0
	# CBRANCH EQ0	# 548	[c=12]cbranchqi4_internal
	load1! &0 	#AR
	jump_zero! .L8.l_ocf5a76
	# END CBRANCH
.L435.l_ocf5a76:
	# CBRANCH EQ	# 551	[c=12]cbranchqi4_internal
	load1! &0 	#AR
	push! 37	
	xor	
	jump_zero! .L434.l_ocf5a76
	# END CBRANCH
	load8! &2 	#X2	# 22	[c=4]movdi_push_pop
	store8! &5 	#X4
	load8! &4 	#X4	# 12819	[c=5]movdi_to_tr_unspec/1
	add! 1		# 12821	[c=4]*adddi/0
	store8! &3 	#X2	# 12822	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 12823	[c=7]movqi_to_tr_unspec/2
	load1	
	#	
	store8! &1 	#AR	# 12825	[c=4]movqi_from_tr_unspec/0
	# CBRANCH EQ0	# 12826	[c=12]cbranchqi4_internal
	load1! &0 	#AR
	jump_not_zero! .L435.l_ocf5a76
	# END CBRANCH
.L8.l_ocf5a76:
	load8! &2 	#X2	# 5799	[c=5]movdi_to_tr_unspec/1
	load8! &7 	#X6	# 5801	[c=14]*subdi3/2
	sub
	store8! &6 	#X5	# 12487	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ0	# 5809	[c=12]cbranchsi4_internal
	load4! &5 	#X5
	jump_zero! .L6.l_ocf5a76
	# END CBRANCH
.L256.l_ocf5a76:
	load8! &6 	#X6	# 556	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 558	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load4! &5 	#X5	# 560	[c=5]movsi_to_tr_unspec/1
	sigx4		# 562	[c=6]*extendsidi2
	store8! &1 	#AR	# 563	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 565	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 567	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &0 	#AR	# 570	[c=5]movdi_to_tr_unspec/1
	load8! &35	# 572	[c=6]*adddi/1
	add
	store8! &35	# 12441	[c=4]movdi_from_tr_unspec/0
	load4! &33	# 12442	[c=5]movsi_to_tr_unspec/1
	add! 1		# 579	[c=4]*adddi/0
	store8! &1 	#AR	# 580	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 12445	[c=4]movsi_push_pop
	store4! &34
	# CBRANCH	# 587	[c=12]cbranchsi4_internal
	push! 7	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L11.l_ocf5a76
	# END CBRANCH
	load8! &3 	#X3	# 594	[c=5]movdi_to_tr_unspec/1
	add! 16		# 596	[c=4]*adddi/0
	store8! &4 	#X3	# 597	[c=4]movdi_from_tr_unspec/0
	load8! &5 	#X5	# 12402	[c=4]movdi_push_pop
	store8! &1 	#AR
	load4! &17	# 12403	[c=5]movsi_to_tr_unspec/1
	load8! &6 	#X5	# 623	[c=6]*adddi/2
	add
	store4! &18	# 12783	[c=4]movsi_from_tr_unspec/0
	load8! &4 	#X4	# 630	[c=6]movqi_to_tr_unspec/2
	add! 1	
	load1	
	#	
	# CBRANCH - peep (modesize=1)
	and! 255		# 12406	[c=12]*peep2_cbranchqi
	# - EQ0
	jump_zero! .L6.l_ocf5a76
	# END CBRANCH
.L7.l_ocf5a76:
	load8! &2 	#X2	# 637	[c=5]movdi_to_tr_unspec/1
	add! 1		# 639	[c=4]*adddi/0
	store8! &1 	#AR	# 640	[c=4]movdi_from_tr_unspec/0
	push! 0		# 642	[c=4]movqi_push_pop
	store1! &27
	push! 0		# 37	[c=4]movqi_push_pop
	store8! &2 	#X1
	push! 0		# 38	[c=4]movqi_push_pop
	store8! &3 	#X2
	push! -1		# 39	[c=4]movsi_push_pop
	store8! &10 	#X9
	push! 0		# 40	[c=4]movsi_push_pop
	store8! &9 	#X8
	push! 0		# 41	[c=4]movsi_push_pop
	store8! &8 	#X7
.L14.l_ocf5a76:
	load8! &0 	#AR	# 649	[c=5]movdi_to_tr_unspec/1
	add! 1		# 651	[c=4]*adddi/0
	store8! &7 	#X6	# 652	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 654	[c=7]movqi_to_tr_unspec/2
	load1	
	#	
	sigx1		# 660	[c=6]*extendqidi2
	store8! &6 	#X5	# 12782	[c=4]movsi_from_tr_unspec/0
.L16.l_ocf5a76:
	#CASESI		# 672	[c=43]casesi_internal
	push! 88	
	load4! &6 	#X5
	sigx4	
	add! -32	
	lt_u	
	not	
	jump_zero! .L17.l_ocf5a76
	load4! &5 	#X5
	sigx4	
	add! -32	
	mult! 8	
	add! .L19.l_ocf5a76	
	load8	
	jump	
	##	
.L19.l_ocf5a76:
	data8 [.L41.l_ocf5a76]#casesi entry
	data8 [.L17.l_ocf5a76]#casesi entry
	data8 [.L17.l_ocf5a76]#casesi entry
	data8 [.L40.l_ocf5a76]#casesi entry
	data8 [.L17.l_ocf5a76]#casesi entry
	data8 [.L17.l_ocf5a76]#casesi entry
	data8 [.L17.l_ocf5a76]#casesi entry
	data8 [.L17.l_ocf5a76]#casesi entry
	data8 [.L17.l_ocf5a76]#casesi entry
	data8 [.L17.l_ocf5a76]#casesi entry
	data8 [.L39.l_ocf5a76]#casesi entry
	data8 [.L262.l_ocf5a76]#casesi entry
	data8 [.L17.l_ocf5a76]#casesi entry
	data8 [.L38.l_ocf5a76]#casesi entry
	data8 [.L37.l_ocf5a76]#casesi entry
	data8 [.L17.l_ocf5a76]#casesi entry
	data8 [.L36.l_ocf5a76]#casesi entry
	data8 [.L263.l_ocf5a76]#casesi entry
	data8 [.L263.l_ocf5a76]#casesi entry
	data8 [.L263.l_ocf5a76]#casesi entry
	data8 [.L263.l_ocf5a76]#casesi entry
	data8 [.L263.l_ocf5a76]#casesi entry
	data8 [.L263.l_ocf5a76]#casesi entry
	data8 [.L263.l_ocf5a76]#casesi entry
	data8 [.L263.l_ocf5a76]#casesi entry
	data8 [.L263.l_ocf5a76]#casesi entry
	data8 [.L17.l_ocf5a76]#casesi entry
	data8 [.L17.l_ocf5a76]#casesi entry
	data8 [.L17.l_ocf5a76]#casesi entry
	data8 [.L17.l_ocf5a76]#casesi entry
	data8 [.L17.l_ocf5a76]#casesi entry
	data8 [.L17.l_ocf5a76]#casesi entry
	data8 [.L17.l_ocf5a76]#casesi entry
	data8 [.L17.l_ocf5a76]#casesi entry
	data8 [.L17.l_ocf5a76]#casesi entry
	data8 [.L17.l_ocf5a76]#casesi entry
	data8 [.L34.l_ocf5a76]#casesi entry
	data8 [.L28.l_ocf5a76]#casesi entry
	data8 [.L17.l_ocf5a76]#casesi entry
	data8 [.L28.l_ocf5a76]#casesi entry
	data8 [.L17.l_ocf5a76]#casesi entry
	data8 [.L17.l_ocf5a76]#casesi entry
	data8 [.L17.l_ocf5a76]#casesi entry
	data8 [.L17.l_ocf5a76]#casesi entry
	data8 [.L33.l_ocf5a76]#casesi entry
	data8 [.L17.l_ocf5a76]#casesi entry
	data8 [.L17.l_ocf5a76]#casesi entry
	data8 [.L32.l_ocf5a76]#casesi entry
	data8 [.L17.l_ocf5a76]#casesi entry
	data8 [.L17.l_ocf5a76]#casesi entry
	data8 [.L17.l_ocf5a76]#casesi entry
	data8 [.L17.l_ocf5a76]#casesi entry
	data8 [.L17.l_ocf5a76]#casesi entry
	data8 [.L31.l_ocf5a76]#casesi entry
	data8 [.L17.l_ocf5a76]#casesi entry
	data8 [.L17.l_ocf5a76]#casesi entry
	data8 [.L30.l_ocf5a76]#casesi entry
	data8 [.L17.l_ocf5a76]#casesi entry
	data8 [.L17.l_ocf5a76]#casesi entry
	data8 [.L17.l_ocf5a76]#casesi entry
	data8 [.L17.l_ocf5a76]#casesi entry
	data8 [.L17.l_ocf5a76]#casesi entry
	data8 [.L17.l_ocf5a76]#casesi entry
	data8 [.L17.l_ocf5a76]#casesi entry
	data8 [.L17.l_ocf5a76]#casesi entry
	data8 [.L17.l_ocf5a76]#casesi entry
	data8 [.L17.l_ocf5a76]#casesi entry
	data8 [.L29.l_ocf5a76]#casesi entry
	data8 [.L26.l_ocf5a76]#casesi entry
	data8 [.L28.l_ocf5a76]#casesi entry
	data8 [.L28.l_ocf5a76]#casesi entry
	data8 [.L28.l_ocf5a76]#casesi entry
	data8 [.L27.l_ocf5a76]#casesi entry
	data8 [.L26.l_ocf5a76]#casesi entry
	data8 [.L17.l_ocf5a76]#casesi entry
	data8 [.L17.l_ocf5a76]#casesi entry
	data8 [.L22.l_ocf5a76]#casesi entry
	data8 [.L17.l_ocf5a76]#casesi entry
	data8 [.L25.l_ocf5a76]#casesi entry
	data8 [.L24.l_ocf5a76]#casesi entry
	data8 [.L23.l_ocf5a76]#casesi entry
	data8 [.L22.l_ocf5a76]#casesi entry
	data8 [.L17.l_ocf5a76]#casesi entry
	data8 [.L21.l_ocf5a76]#casesi entry
	data8 [.L17.l_ocf5a76]#casesi entry
	data8 [.L20.l_ocf5a76]#casesi entry
	data8 [.L17.l_ocf5a76]#casesi entry
	data8 [.L17.l_ocf5a76]#casesi entry
	data8 [.L18.l_ocf5a76]#casesi entry
.L22.l_ocf5a76:
	load8! &7 	#X7	# 957	[c=5]movdi_to_tr_unspec/1
	or! 0x10		# 959	[c=4]*iordi3/0
	store8! &8 	#X7	# 12747	[c=4]movsi_from_tr_unspec/0
.L15.l_ocf5a76:
	load8! &6 	#X6	# 36	[c=4]movdi_push_pop
	store8! &1 	#AR
	jump! .L14.l_ocf5a76		# 13457	[c=4]jump
.L434.l_ocf5a76:
	load8! &2 	#X2	# 5815	[c=5]movdi_to_tr_unspec/1
	load8! &7 	#X6	# 5817	[c=14]*subdi3/2
	sub
	store8! &6 	#X5	# 12485	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ0	# 5824	[c=12]cbranchsi4_internal
	load4! &5 	#X5
	jump_not_zero! .L256.l_ocf5a76
	# END CBRANCH
	load8! &2 	#X2	# 12829	[c=5]movdi_to_tr_unspec/1
	add! 1		# 12831	[c=4]*adddi/0
	store8! &1 	#AR	# 12832	[c=4]movdi_from_tr_unspec/0
	push! 0		# 12833	[c=4]movqi_push_pop
	store1! &27
	push! 0		# 12834	[c=4]movqi_push_pop
	store8! &2 	#X1
	push! 0		# 12835	[c=4]movqi_push_pop
	store8! &3 	#X2
	push! -1		# 12836	[c=4]movsi_push_pop
	store8! &10 	#X9
	push! 0		# 12837	[c=4]movsi_push_pop
	store8! &9 	#X8
	push! 0		# 12838	[c=4]movsi_push_pop
	store8! &8 	#X7
	jump! .L14.l_ocf5a76		# 13459	[c=4]jump
.L11.l_ocf5a76:
	push! &0		# 12431	[c=4]movdi_to_tr_unspec/1
	add! 256		# 12438	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 12440	[c=0]*peep2_pop_pusharg
	load8! &11 	#X10	# 610	[c=4]pushdi1_not_fp/1
	load8! &17 	#X15	# 611	[c=4]pushdi1_not_fp/1
	call! __ssprint_r		# 612	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	# CBRANCH EQ0	# 614	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L13.l_ocf5a76
	# END CBRANCH
	push! &0		# 12415	[c=4]movdi_to_tr_unspec/1
	add! 320		# 12422	[c=4]*adddi/0
	store8! &4 	#X3	# 12420	[c=4]movdi_from_tr_unspec/0
	load8! &5 	#X5	# 12842	[c=4]movdi_push_pop
	store8! &1 	#AR
	load4! &17	# 12843	[c=5]movsi_to_tr_unspec/1
	load8! &6 	#X5	# 12845	[c=6]*adddi/2
	add
	store4! &18	# 12846	[c=4]movsi_from_tr_unspec/0
	load8! &4 	#X4	# 12847	[c=6]movqi_to_tr_unspec/2
	add! 1	
	load1	
	#	
	# CBRANCH - peep (modesize=1)
	and! 255		# 12849	[c=12]*peep2_cbranchqi
	# - EQ0
	jump_not_zero! .L7.l_ocf5a76
	# END CBRANCH
.L6.l_ocf5a76:
	# CBRANCH EQ0	# 5587	[c=14]cbranchdi4_internal
	load8! &34
	jump_zero! .L13.l_ocf5a76
	# END CBRANCH
	push! &0		# 10198	[c=4]movdi_to_tr_unspec/1
	add! 256		# 10205	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 10207	[c=0]*peep2_pop_pusharg
	load8! &11 	#X10	# 5595	[c=4]pushdi1_not_fp/1
	load8! &17 	#X15	# 5596	[c=4]pushdi1_not_fp/1
	call! __ssprint_r		# 5597	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
.L13.l_ocf5a76:
	load8! &10 	#X10	# 5600	[c=6]movhi_to_tr_unspec/2
	add! 16	
	load2	
	#	
	and! 0x40		# 5606	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=2)
	and! 65535		# 12496	[c=12]*peep2_cbranchhi
	# - EQ0
	jump_not_zero! .L436.l_ocf5a76
	# END CBRANCH
	load4! &17	# 5907	[c=2]movsi_push_pop
	store4! &58
	jump! .L437.l_ocf5a76		# 13463	[c=4]jump
.L39.l_ocf5a76:
	load8! &60	# 706	[c=5]movdi_to_tr_unspec/1
	add! 8		# 708	[c=4]*adddi/0
	store8! &1 	#AR	# 709	[c=4]movdi_from_tr_unspec/0
	load8! &60	# 9232	[c=2]movdi_push_pop
	store8! &12 	#X11
	load8! &11 	#X11	# 711	[c=7]movsi_to_tr_unspec/2
	load4	
	#	
	store8! &9 	#X8	# 713	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 715	[c=12]cbranchsi4_internal
	load4! &8 	#X8
	add! -2147483648	
	push! 0	
	add! -2147483648	
	lt_u	
	jump_zero! .L265.l_ocf5a76
	# END CBRANCH
	load8! &8 	#X8	# 717	[c=5]movdi_to_tr_unspec/1
	neg		# 719	[c=3]*negdi2
	store8! &9 	#X8	# 12777	[c=4]movsi_from_tr_unspec/0
	load8! &0 	#AR	# 45	[c=4]movdi_push_pop
	store8! &61
.L38.l_ocf5a76:
	load8! &7 	#X7	# 728	[c=5]movdi_to_tr_unspec/1
	or! 0x4		# 730	[c=4]*iordi3/0
	store8! &8 	#X7	# 12775	[c=4]movsi_from_tr_unspec/0
	load8! &6 	#X6	# 12852	[c=4]movdi_push_pop
	store8! &1 	#AR
	jump! .L14.l_ocf5a76		# 13465	[c=4]jump
.L262.l_ocf5a76:
	push! 1		# 29	[c=4]movqi_push_pop
	store8! &2 	#X1
	push! 43		# 30	[c=4]movqi_push_pop
	store8! &3 	#X2
	load8! &6 	#X6	# 12855	[c=4]movdi_push_pop
	store8! &1 	#AR
	jump! .L14.l_ocf5a76		# 13467	[c=4]jump
.L263.l_ocf5a76:
	push! 0		# 47	[c=4]movsi_push_pop
	store8! &9 	#X8
.L35.l_ocf5a76:
	load8! &8 	#X8	# 865	[c=5]movdi_to_tr_unspec/1
	mult! 10		# 867	[c=4]*muldi3/0
	store8! &1 	#AR	# 12752	[c=4]movdi_from_tr_unspec/0
	load8! &5 	#X5	# 12753	[c=5]movdi_to_tr_unspec/1
	add! -48		# 876	[c=4]*adddi/0
	load8! &1 	#AR	# 889	[c=6]*adddi/2
	add
	store8! &9 	#X8	# 12757	[c=4]movsi_from_tr_unspec/0
	load8! &6 	#X6	# 896	[c=5]movdi_to_tr_unspec/1
	add! 1		# 898	[c=4]*adddi/0
	store8! &1 	#AR	# 899	[c=4]movdi_from_tr_unspec/0
	load8! &6 	#X6	# 901	[c=7]movqi_to_tr_unspec/2
	load1	
	#	
	sigx1		# 907	[c=6]*extendqidi2
	store8! &6 	#X5	# 12760	[c=4]movsi_from_tr_unspec/0
	load8! &5 	#X5	# 914	[c=5]movdi_to_tr_unspec/1
	add! -48		# 916	[c=4]*adddi/0
	store8! &5 	#X4	# 917	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 12385	[c=4]movdi_push_pop
	store8! &7 	#X6
	# CBRANCH	# 925	[c=12]cbranchsi4_internal
	push! 9	
	load4! &5 	#X4
	lt_u	
	jump_zero! .L35.l_ocf5a76
	# END CBRANCH
.L46.l_ocf5a76:
	load8! &0 	#AR	# 44	[c=4]movdi_push_pop
	store8! &7 	#X6
	jump! .L16.l_ocf5a76		# 13469	[c=4]jump
.L34.l_ocf5a76:
	# CBRANCH EQ0	# 989	[c=12]cbranchqi4_internal
	load1! &1 	#X1
	jump_not_zero! .L438.l_ocf5a76
	# END CBRANCH
	load8! &7 	#X7	# 994	[c=5]movdi_to_tr_unspec/1
	or! 0x10		# 996	[c=4]*iordi3/0
	store8! &8 	#X7	# 12744	[c=4]movsi_from_tr_unspec/0
.L50.l_ocf5a76:
	load8! &60	# 1029	[c=5]movdi_to_tr_unspec/1
	add! 8		# 1031	[c=4]*adddi/0
	store8! &3 	#X2	# 1032	[c=4]movdi_from_tr_unspec/0
	load8! &60	# 9242	[c=2]movdi_push_pop
	store8! &2 	#X1
	load8! &1 	#X1	# 1034	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	store8! &1 	#AR	# 1036	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 1038	[c=4]movdi_push_pop
	store8! &2 	#X1
	load8! &2 	#X2	# 48	[c=4]movdi_push_pop
	store8! &61
.L53.l_ocf5a76:
	# CBRANCH	# 1092	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	add! -9223372036854775808	
	push! 0	
	add! -9223372036854775808	
	lt_u	
	not	
	jump_zero! .L439.l_ocf5a76
	# END CBRANCH
.L55.l_ocf5a76:
	load1! &26	# 5710	[c=2]movqi_push_pop
	store8! &1 	#AR
	# CBRANCH EQ	# 5711	[c=12]cbranchsi4_internal
	load4! &9 	#X9
	push! 4294967295	
	xor	
	jump_zero! .L139.l_ocf5a76
	# END CBRANCH
	load8! &7 	#X7	# 5867	[c=5]movdi_to_tr_unspec/1
	and! 0xffffffffffffff7f		# 5869	[c=4]*anddi3/0
	store8! &13 	#X12	# 12482	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ0	# 5876	[c=12]cbranchdi4_internal
	load8! &1 	#X1
	jump_not_zero! .L440.l_ocf5a76
	# END CBRANCH
	# CBRANCH EQ0	# 5902	[c=12]cbranchsi4_internal
	load4! &9 	#X9
	jump_not_zero! .L289.l_ocf5a76
	# END CBRANCH
	push! 1		# 151	[c=4]movsi_push_pop
	store8! &3 	#X2
.L283.l_ocf5a76:
	push! 0		# 165	[c=4]movsi_push_pop
	store8! &10 	#X9
	push! 0		# 166	[c=4]movsi_push_pop
	store8! &14 	#X13
	push! &0		# 11708	[c=4]movdi_to_tr_unspec/1
	add! 280		# 11715	[c=4]*adddi/0
	add! 40		# 174	[c=4]*adddi/0
	store8! &5 	#X4	# 175	[c=4]movdi_from_tr_unspec/0
.L143.l_ocf5a76:
	load4! &9 	#X9	# 2825	[c=4]movsi_push_pop
	store8! &12 	#X11
	# CBRANCH	# 2826	[c=12]cbranchsi4_internal
	load4! &9 	#X9
	add! -2147483648	
	load4! &14 	#X13
	add! -2147483648	
	lt_u	
	jump_zero! .L147.l_ocf5a76
	# END CBRANCH
	load4! &13 	#X13	# 2827	[c=4]movsi_push_pop
	store8! &12 	#X11
.L147.l_ocf5a76:
	push! 0		# 224	[c=4]movsi_push_pop
	store4! &19
.L66.l_ocf5a76:
	# CBRANCH EQ0	# 2853	[c=12]cbranchqi4_internal
	load1! &0 	#AR
	jump_zero! .L149.l_ocf5a76
	# END CBRANCH
.L112.l_ocf5a76:
	load8! &11 	#X11	# 2856	[c=5]movdi_to_tr_unspec/1
	add! 1		# 2858	[c=4]*adddi/0
	store8! &12 	#X11	# 12592	[c=4]movsi_from_tr_unspec/0
.L149.l_ocf5a76:
	load8! &12 	#X12	# 2867	[c=5]movdi_to_tr_unspec/1
	and! 0x2		# 2869	[c=4]*anddi3/0
	store8! &2 	#X1	# 12590	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ0	# 2876	[c=12]cbranchsi4_internal
	load4! &1 	#X1
	jump_zero! .L150.l_ocf5a76
	# END CBRANCH
	load8! &11 	#X11	# 2878	[c=5]movdi_to_tr_unspec/1
	add! 2		# 2880	[c=4]*adddi/0
	store8! &12 	#X11	# 12588	[c=4]movsi_from_tr_unspec/0
.L150.l_ocf5a76:
	load8! &12 	#X12	# 2889	[c=5]movdi_to_tr_unspec/1
	and! 0x84		# 2891	[c=4]*anddi3/0
	store8! &15 	#X14	# 12586	[c=4]movsi_from_tr_unspec/0
	load8! &34	# 2898	[c=2]movdi_push_pop
	store8! &3 	#X2
	# CBRANCH EQ0	# 2899	[c=12]cbranchsi4_internal
	load4! &14 	#X14
	jump_not_zero! .L151.l_ocf5a76
	# END CBRANCH
	load8! &11 	#X11	# 11653	[c=5]movdi_to_tr_unspec/1
	load8! &9 	#X8	# 11655	[c=14]*subdi3/2
	sub
	neg		# 11656	[c=4]*neg_tr
	store8! &8 	#X7	# 12584	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 2914	[c=12]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &8 	#X7
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L441.l_ocf5a76
	# END CBRANCH
.L151.l_ocf5a76:
	# CBRANCH EQ0	# 3063	[c=14]cbranchqi4_internal
	load1! &26
	jump_zero! .L157.l_ocf5a76
	# END CBRANCH
	push! &0		# 11567	[c=4]movdi_to_tr_unspec/1
	add! 208		# 11574	[c=4]*adddi/0
	load8! &4 	#X3	# 11572	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	push! 1		# 3070	[c=3]movdi_to_tr_unspec/0
	load8! &4 	#X3	# 3072	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &2 	#X2	# 3079	[c=5]movdi_to_tr_unspec/1
	add! 1		# 3081	[c=4]*adddi/0
	store8! &3 	#X2	# 3082	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 3085	[c=4]movdi_push_pop
	store8! &35
	load4! &33	# 11575	[c=5]movsi_to_tr_unspec/1
	add! 1		# 3089	[c=4]*adddi/0
	store8! &1 	#AR	# 3090	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 11578	[c=4]movsi_push_pop
	store4! &34
	# CBRANCH	# 3097	[c=12]cbranchsi4_internal
	push! 7	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L158.l_ocf5a76
	# END CBRANCH
	load8! &3 	#X3	# 3104	[c=5]movdi_to_tr_unspec/1
	add! 16		# 3106	[c=4]*adddi/0
	store8! &4 	#X3	# 3107	[c=4]movdi_from_tr_unspec/0
.L157.l_ocf5a76:
	# CBRANCH EQ0	# 3129	[c=12]cbranchsi4_internal
	load4! &1 	#X1
	jump_zero! .L159.l_ocf5a76
	# END CBRANCH
	push! &0		# 11513	[c=4]movdi_to_tr_unspec/1
	add! 216		# 11520	[c=4]*adddi/0
	load8! &4 	#X3	# 11518	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	push! 2		# 3136	[c=3]movdi_to_tr_unspec/0
	load8! &4 	#X3	# 3138	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &2 	#X2	# 3145	[c=5]movdi_to_tr_unspec/1
	add! 2		# 3147	[c=4]*adddi/0
	store8! &3 	#X2	# 3148	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 3151	[c=4]movdi_push_pop
	store8! &35
	load4! &33	# 11521	[c=5]movsi_to_tr_unspec/1
	add! 1		# 3155	[c=4]*adddi/0
	store8! &1 	#AR	# 3156	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 11524	[c=4]movsi_push_pop
	store4! &34
	# CBRANCH	# 3163	[c=12]cbranchsi4_internal
	push! 7	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L160.l_ocf5a76
	# END CBRANCH
	load8! &3 	#X3	# 3170	[c=5]movdi_to_tr_unspec/1
	add! 16		# 3172	[c=4]*adddi/0
	store8! &4 	#X3	# 3173	[c=4]movdi_from_tr_unspec/0
.L159.l_ocf5a76:
	# CBRANCH EQ	# 3195	[c=12]cbranchsi4_internal
	load4! &14 	#X14
	push! 128	
	xor	
	jump_zero! .L442.l_ocf5a76
	# END CBRANCH
.L161.l_ocf5a76:
	load8! &13 	#X13	# 11385	[c=5]movdi_to_tr_unspec/1
	load8! &10 	#X9	# 11387	[c=14]*subdi3/2
	sub
	neg		# 11388	[c=4]*neg_tr
	store8! &8 	#X7	# 12576	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 3371	[c=12]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &8 	#X7
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L443.l_ocf5a76
	# END CBRANCH
.L167.l_ocf5a76:
	load8! &12 	#X12	# 3519	[c=5]movdi_to_tr_unspec/1
	and! 0x100		# 3521	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 12572	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L173.l_ocf5a76
	# END CBRANCH
.L461.l_ocf5a76:
	load8! &4 	#X4	# 3530	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 3532	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load4! &13 	#X13	# 3534	[c=5]movsi_to_tr_unspec/1
	sigx4		# 3536	[c=6]*extendsidi2
	store8! &1 	#AR	# 3537	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 3539	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 3541	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &0 	#AR	# 3548	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 3550	[c=6]*adddi/2
	add
	store8! &3 	#X2	# 3551	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 3554	[c=4]movdi_push_pop
	store8! &35
	load4! &33	# 11306	[c=5]movsi_to_tr_unspec/1
	add! 1		# 3558	[c=4]*adddi/0
	store8! &1 	#AR	# 3559	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 11309	[c=4]movsi_push_pop
	store4! &34
	# CBRANCH	# 3566	[c=12]cbranchsi4_internal
	push! 7	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L174.l_ocf5a76
	# END CBRANCH
	load8! &3 	#X3	# 3573	[c=5]movdi_to_tr_unspec/1
	add! 16		# 3575	[c=4]*adddi/0
	store8! &4 	#X3	# 3576	[c=4]movdi_from_tr_unspec/0
.L175.l_ocf5a76:
	load8! &12 	#X12	# 5388	[c=5]movdi_to_tr_unspec/1
	and! 0x4		# 5390	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 12504	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L241.l_ocf5a76
	# END CBRANCH
	load8! &11 	#X11	# 10304	[c=5]movdi_to_tr_unspec/1
	load8! &9 	#X8	# 10306	[c=14]*subdi3/2
	sub
	neg		# 10307	[c=4]*neg_tr
	store8! &5 	#X4	# 12501	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 5412	[c=12]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &5 	#X4
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L444.l_ocf5a76
	# END CBRANCH
.L241.l_ocf5a76:
	# CBRANCH	# 5546	[c=12]cbranchsi4_internal
	load4! &8 	#X8
	add! -2147483648	
	load4! &12 	#X11
	add! -2147483648	
	lt_u	
	jump_zero! .L246.l_ocf5a76
	# END CBRANCH
	load4! &11 	#X11	# 5547	[c=4]movsi_push_pop
	store8! &9 	#X8
.L246.l_ocf5a76:
	load8! &8 	#X8	# 10242	[c=4]movdi_push_pop
	store8! &1 	#AR
	load4! &17	# 10243	[c=5]movsi_to_tr_unspec/1
	load8! &9 	#X8	# 5555	[c=6]*adddi/2
	add
	store4! &18	# 12497	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ0	# 5562	[c=12]cbranchdi4_internal
	load8! &2 	#X2
	jump_not_zero! .L247.l_ocf5a76
	# END CBRANCH
	push! 0		# 5564	[c=4]movsi_push_pop
	store4! &34
	push! &0		# 10234	[c=4]movdi_to_tr_unspec/1
	add! 320		# 10241	[c=4]*adddi/0
	store8! &4 	#X3	# 10239	[c=4]movdi_from_tr_unspec/0
	jump! .L5.l_ocf5a76		# 13478	[c=4]jump
.L41.l_ocf5a76:
	# CBRANCH EQ0	# 687	[c=12]cbranchqi4_internal
	load1! &2 	#X2
	jump_not_zero! .L15.l_ocf5a76
	# END CBRANCH
	push! 1		# 33	[c=4]movqi_push_pop
	store8! &2 	#X1
	push! 32		# 34	[c=4]movqi_push_pop
	store8! &3 	#X2
	load8! &6 	#X6	# 12858	[c=4]movdi_push_pop
	store8! &1 	#AR
	jump! .L14.l_ocf5a76		# 13480	[c=4]jump
.L20.l_ocf5a76:
	# CBRANCH EQ0	# 2319	[c=12]cbranchqi4_internal
	load1! &1 	#X1
	jump_not_zero! .L445.l_ocf5a76
	# END CBRANCH
.L129.l_ocf5a76:
	load8! &7 	#X7	# 2324	[c=5]movdi_to_tr_unspec/1
	and! 0x10		# 2326	[c=4]*anddi3/0
	store8! &1 	#AR	# 12636	[c=4]movdi_from_tr_unspec/0
	load8! &60	# 12637	[c=5]movdi_to_tr_unspec/1
	add! 8		# 2335	[c=4]*adddi/0
	store8! &3 	#X2	# 2336	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 2338	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L128.l_ocf5a76
	# END CBRANCH
	load8! &7 	#X7	# 2354	[c=5]movdi_to_tr_unspec/1
	and! 0x40		# 2356	[c=4]*anddi3/0
	store8! &1 	#AR	# 2357	[c=4]movdi_from_tr_unspec/0
	load8! &60	# 11948	[c=2]movdi_push_pop
	store8! &2 	#X1
	load8! &1 	#X1	# 2363	[c=7]movsi_to_tr_unspec/2
	load4	
	#	
	store8! &2 	#X1	# 2365	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ0	# 2367	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_zero! .L131.l_ocf5a76
	# END CBRANCH
	load2! &1 	#X1	# 11944	[c=5]movhi_to_tr_unspec/1
	store8! &2 	#X1	# 11946	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 104	[c=4]movdi_push_pop
	store8! &61
	push! 1		# 105	[c=4]movsi_push_pop
	store8! &3 	#X2
.L120.l_ocf5a76:
	push! 0		# 2487	[c=4]movqi_push_pop
	store1! &27
	push! 0		# 112	[c=4]movqi_push_pop
	store8! &1 	#AR
.L56.l_ocf5a76:
	# CBRANCH EQ	# 2490	[c=12]cbranchsi4_internal
	load4! &9 	#X9
	push! 4294967295	
	xor	
	jump_zero! .L136.l_ocf5a76
	# END CBRANCH
.L455.l_ocf5a76:
	load8! &7 	#X7	# 2492	[c=5]movdi_to_tr_unspec/1
	and! 0xffffffffffffff7f		# 2494	[c=4]*anddi3/0
	store8! &13 	#X12	# 12626	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ0	# 2501	[c=12]cbranchdi4_internal
	load8! &1 	#X1
	jump_not_zero! .L279.l_ocf5a76
	# END CBRANCH
	# CBRANCH EQ0	# 2503	[c=12]cbranchsi4_internal
	load4! &9 	#X9
	jump_not_zero! .L446.l_ocf5a76
	# END CBRANCH
	# CBRANCH EQ0	# 2809	[c=12]cbranchsi4_internal
	load4! &2 	#X2
	jump_not_zero! .L283.l_ocf5a76
	# END CBRANCH
	load8! &7 	#X7	# 2811	[c=5]movdi_to_tr_unspec/1
	and! 0x1		# 2813	[c=4]*anddi3/0
	store8! &14 	#X13	# 12595	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ0	# 2820	[c=12]cbranchsi4_internal
	load4! &13 	#X13
	jump_zero! .L284.l_ocf5a76
	# END CBRANCH
	push! 48		# 2822	[c=4]movqi_push_pop
	store1! (+ &0 327)
	push! &0		# 11725	[c=4]movdi_to_tr_unspec/1
	add! 280		# 11732	[c=4]*adddi/0
	add! 39		# 185	[c=4]*adddi/0
	store8! &5 	#X4	# 186	[c=4]movdi_from_tr_unspec/0
	jump! .L143.l_ocf5a76		# 13484	[c=4]jump
.L21.l_ocf5a76:
	load8! &60	# 2231	[c=5]movdi_to_tr_unspec/1
	add! 8		# 2233	[c=4]*adddi/0
	store8! &3 	#X2	# 2234	[c=4]movdi_from_tr_unspec/0
	load8! &60	# 9355	[c=2]movdi_push_pop
	store8! &5 	#X4
	load8! &4 	#X4	# 2236	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	store8! &5 	#X4	# 2238	[c=4]movdi_from_tr_unspec/0
	push! 0		# 2240	[c=4]movqi_push_pop
	store1! &27
	# CBRANCH EQ0	# 2241	[c=12]cbranchdi4_internal
	load8! &4 	#X4
	jump_zero! .L447.l_ocf5a76
	# END CBRANCH
	# CBRANCH EQ	# 2253	[c=12]cbranchsi4_internal
	load4! &9 	#X9
	push! 4294967295	
	xor	
	jump_zero! .L124.l_ocf5a76
	# END CBRANCH
	load4! &9 	#X9	# 2255	[c=5]movsi_to_tr_unspec/1
	sigx4		# 2257	[c=6]*extendsidi2
	#peep - pop(deadreg)+pusharg	# 11954	[c=0]*peep2_pop_pusharg
	push! 0		# 2261	[c=4]pushsi1_not_fp/0
	load8! &6 	#X4	# 2262	[c=4]pushdi1_not_fp/1
	call! memchr		# 2263	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	# CBRANCH EQ0	# 2265	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L448.l_ocf5a76
	# END CBRANCH
	load8! &0 	#AR	# 2272	[c=5]movdi_to_tr_unspec/1
	load8! &5 	#X4	# 2274	[c=14]*subdi3/2
	sub
	store8! &14 	#X13	# 12642	[c=4]movsi_from_tr_unspec/0
	load1! &26	# 2281	[c=2]movqi_push_pop
	store8! &1 	#AR
	load4! &13 	#X13	# 2282	[c=4]movsi_push_pop
	store8! &12 	#X11
	# CBRANCH	# 2283	[c=12]cbranchsi4_internal
	load4! &13 	#X13
	add! -2147483648	
	push! 0	
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L449.l_ocf5a76
	# END CBRANCH
	load8! &2 	#X2	# 218	[c=4]movdi_push_pop
	store8! &61
	load4! &7 	#X7	# 219	[c=4]movsi_push_pop
	store8! &13 	#X12
	push! 0		# 220	[c=4]movsi_push_pop
	store8! &10 	#X9
	push! 0		# 221	[c=4]movsi_push_pop
	store4! &19
.L493.l_ocf5a76:
	# CBRANCH EQ0	# 12861	[c=12]cbranchqi4_internal
	load1! &0 	#AR
	jump_not_zero! .L112.l_ocf5a76
	# END CBRANCH
	jump! .L149.l_ocf5a76		# 13490	[c=4]jump
.L40.l_ocf5a76:
	load8! &7 	#X7	# 693	[c=5]movdi_to_tr_unspec/1
	or! 0x1		# 695	[c=4]*iordi3/0
	store8! &8 	#X7	# 12779	[c=4]movsi_from_tr_unspec/0
	load8! &6 	#X6	# 12864	[c=4]movdi_push_pop
	store8! &1 	#AR
	jump! .L14.l_ocf5a76		# 13492	[c=4]jump
.L36.l_ocf5a76:
	load8! &7 	#X7	# 852	[c=5]movdi_to_tr_unspec/1
	or! 0x80		# 854	[c=4]*iordi3/0
	store8! &8 	#X7	# 12762	[c=4]movsi_from_tr_unspec/0
	load8! &6 	#X6	# 12867	[c=4]movdi_push_pop
	store8! &1 	#AR
	jump! .L14.l_ocf5a76		# 13494	[c=4]jump
.L37.l_ocf5a76:
	load8! &6 	#X6	# 741	[c=5]movdi_to_tr_unspec/1
	add! 1		# 743	[c=4]*adddi/0
	store8! &12 	#X11	# 744	[c=4]movdi_from_tr_unspec/0
	load8! &6 	#X6	# 746	[c=7]movqi_to_tr_unspec/2
	load1	
	#	
	sigx1		# 752	[c=6]*extendqidi2
	store8! &6 	#X5	# 12773	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ	# 759	[c=12]cbranchsi4_internal
	load4! &5 	#X5
	push! 42	
	xor	
	jump_zero! .L44.l_ocf5a76
	# END CBRANCH
	load8! &5 	#X5	# 761	[c=5]movdi_to_tr_unspec/1
	add! -48		# 763	[c=4]*adddi/0
	store8! &5 	#X4	# 12770	[c=4]movsi_from_tr_unspec/0
	push! 0		# 46	[c=4]movsi_push_pop
	store8! &10 	#X9
	load8! &11 	#X11	# 42	[c=4]movdi_push_pop
	store8! &1 	#AR
	# CBRANCH	# 771	[c=12]cbranchsi4_internal
	push! 9	
	load4! &5 	#X4
	lt_u	
	not	
	jump_zero! .L46.l_ocf5a76
	# END CBRANCH
.L45.l_ocf5a76:
	load8! &9 	#X9	# 795	[c=5]movdi_to_tr_unspec/1
	mult! 10		# 797	[c=4]*muldi3/0
	store8! &1 	#AR	# 12813	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 12814	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 810	[c=6]*adddi/2
	add
	store8! &10 	#X9	# 12765	[c=4]movsi_from_tr_unspec/0
	load8! &11 	#X11	# 817	[c=5]movdi_to_tr_unspec/1
	add! 1		# 819	[c=4]*adddi/0
	store8! &1 	#AR	# 820	[c=4]movdi_from_tr_unspec/0
	load8! &11 	#X11	# 822	[c=7]movqi_to_tr_unspec/2
	load1	
	#	
	sigx1		# 828	[c=6]*extendqidi2
	store8! &6 	#X5	# 12768	[c=4]movsi_from_tr_unspec/0
	load8! &5 	#X5	# 835	[c=5]movdi_to_tr_unspec/1
	add! -48		# 837	[c=4]*adddi/0
	store8! &5 	#X4	# 838	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 12393	[c=4]movdi_push_pop
	store8! &12 	#X11
	# CBRANCH	# 846	[c=12]cbranchsi4_internal
	push! 9	
	load4! &5 	#X4
	lt_u	
	not	
	jump_zero! .L46.l_ocf5a76
	# END CBRANCH
	load8! &9 	#X9	# 12870	[c=5]movdi_to_tr_unspec/1
	mult! 10		# 12872	[c=4]*muldi3/0
	store8! &1 	#AR	# 12873	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 12874	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 12876	[c=6]*adddi/2
	add
	store8! &10 	#X9	# 12878	[c=4]movsi_from_tr_unspec/0
	load8! &11 	#X11	# 12879	[c=5]movdi_to_tr_unspec/1
	add! 1		# 12881	[c=4]*adddi/0
	store8! &1 	#AR	# 12882	[c=4]movdi_from_tr_unspec/0
	load8! &11 	#X11	# 12883	[c=7]movqi_to_tr_unspec/2
	load1	
	#	
	sigx1		# 12885	[c=6]*extendqidi2
	store8! &6 	#X5	# 12887	[c=4]movsi_from_tr_unspec/0
	load8! &5 	#X5	# 12888	[c=5]movdi_to_tr_unspec/1
	add! -48		# 12890	[c=4]*adddi/0
	store8! &5 	#X4	# 12891	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 12892	[c=4]movdi_push_pop
	store8! &12 	#X11
	# CBRANCH	# 12893	[c=12]cbranchsi4_internal
	push! 9	
	load4! &5 	#X4
	lt_u	
	jump_zero! .L45.l_ocf5a76
	# END CBRANCH
	jump! .L46.l_ocf5a76		# 13497	[c=4]jump
.L31.l_ocf5a76:
	load8! &7 	#X7	# 2306	[c=5]movdi_to_tr_unspec/1
	or! 0x10		# 2308	[c=4]*iordi3/0
	store8! &8 	#X7	# 12640	[c=4]movsi_from_tr_unspec/0
.L128.l_ocf5a76:
	load8! &60	# 2341	[c=5]movdi_to_tr_unspec/1
	add! 8		# 2343	[c=4]*adddi/0
	store8! &1 	#AR	# 2344	[c=4]movdi_from_tr_unspec/0
	load8! &60	# 9356	[c=2]movdi_push_pop
	store8! &12 	#X11
	load8! &11 	#X11	# 2346	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	store8! &2 	#X1	# 2348	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 102	[c=4]movdi_push_pop
	store8! &61
	push! 1		# 103	[c=4]movsi_push_pop
	store8! &3 	#X2
	push! 0		# 12897	[c=4]movqi_push_pop
	store1! &27
	push! 0		# 12898	[c=4]movqi_push_pop
	store8! &1 	#AR
	jump! .L56.l_ocf5a76		# 13499	[c=4]jump
.L32.l_ocf5a76:
	load8! &7 	#X7	# 2122	[c=5]movdi_to_tr_unspec/1
	or! 0x10		# 2124	[c=4]*iordi3/0
	store8! &8 	#X7	# 12649	[c=4]movsi_from_tr_unspec/0
.L117.l_ocf5a76:
	load8! &60	# 2157	[c=5]movdi_to_tr_unspec/1
	add! 8		# 2159	[c=4]*adddi/0
	store8! &1 	#AR	# 2160	[c=4]movdi_from_tr_unspec/0
	load8! &60	# 9352	[c=2]movdi_push_pop
	store8! &12 	#X11
	load8! &11 	#X11	# 2162	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	store8! &2 	#X1	# 2164	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 106	[c=4]movdi_push_pop
	store8! &61
	push! 0		# 107	[c=4]movsi_push_pop
	store8! &3 	#X2
	push! 0		# 12901	[c=4]movqi_push_pop
	store1! &27
	push! 0		# 12902	[c=4]movqi_push_pop
	store8! &1 	#AR
	jump! .L56.l_ocf5a76		# 13501	[c=4]jump
.L33.l_ocf5a76:
	load8! &7 	#X7	# 931	[c=5]movdi_to_tr_unspec/1
	or! 0x8		# 933	[c=4]*iordi3/0
	store8! &8 	#X7	# 12751	[c=4]movsi_from_tr_unspec/0
	load8! &6 	#X6	# 12905	[c=4]movdi_push_pop
	store8! &1 	#AR
	jump! .L14.l_ocf5a76		# 13503	[c=4]jump
.L28.l_ocf5a76:
	# CBRANCH EQ0	# 1110	[c=12]cbranchqi4_internal
	load1! &1 	#X1
	jump_not_zero! .L450.l_ocf5a76
	# END CBRANCH
	load8! &7 	#X7	# 1115	[c=5]movdi_to_tr_unspec/1
	and! 0x8		# 1117	[c=4]*anddi3/0
	store8! &1 	#AR	# 12731	[c=4]movdi_from_tr_unspec/0
	load8! &60	# 12732	[c=5]movdi_to_tr_unspec/1
	add! 8		# 1126	[c=4]*adddi/0
	store8! &3 	#X2	# 1127	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 1129	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_zero! .L58.l_ocf5a76
	# END CBRANCH
.L495.l_ocf5a76:
	load8! &60	# 9245	[c=2]movdi_push_pop
	store8! &2 	#X1
	load8! &1 	#X1	# 1131	[c=7]movdf_to_tr_unspec/2
	load8	
	#	
	store8! &14 	#X13	# 1133	[c=4]movdf_from_tr_unspec/0
	load8! &13 	#X13	# 12351	[c=4]movdi_push_pop
	store8! &23
.L59.l_ocf5a76:
	load8! &13 	#X13	# 1153	[c=5]movdi_to_tr_unspec/1
	and! 0x7fffffffffffffff		# 1155	[c=4]*anddi3/0
	store8! &5 	#X4	# 1156	[c=4]movdi_from_tr_unspec/0
	push! 0x7fefffffffffffff		# 1158	[c=4]pushdf1_not_fp/0
	load8! &5 	#X4	# 1159	[c=4]pushdf1_not_fp/1
	call! __unorddf2		# 1160	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH EQ0	# 1162	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_not_zero! .L60.l_ocf5a76
	# END CBRANCH
	push! 0x7fefffffffffffff		# 1163	[c=4]pushdf1_not_fp/0
	load8! &5 	#X4	# 1164	[c=4]pushdf1_not_fp/1
	call! __ledf2		# 1165	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH	# 1167	[c=12]cbranchdi4_internal
	push! 0	
	add! -9223372036854775808	
	load8! &1 	#AR
	add! -9223372036854775808	
	lt_u	
	jump_zero! .L60.l_ocf5a76
	# END CBRANCH
	push! 0x0000000000000000		# 1169	[c=4]pushdf1_not_fp/0
	load8! &14 	#X13	# 1170	[c=4]pushdf1_not_fp/1
	call! __ltdf2		# 1171	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH	# 1173	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	add! -9223372036854775808	
	push! 0	
	add! -9223372036854775808	
	lt_u	
	not	
	jump_zero! .L61.l_ocf5a76
	# END CBRANCH
	load1! &26	# 1175	[c=2]movqi_push_pop
	store8! &1 	#AR
.L62.l_ocf5a76:
	# CBRANCH	# 1193	[c=12]cbranchsi4_internal
	push! 71	
	add! -2147483648	
	load4! &6 	#X5
	add! -2147483648	
	lt_u	
	jump_zero! .L267.l_ocf5a76
	# END CBRANCH
	push! .LC1.l_ocf5a76		# 53	[c=4]movdi_push_pop
	store8! &5 	#X4
	load8! &7 	#X7	# 1197	[c=5]movdi_to_tr_unspec/1
	and! 0xffffffffffffff7f		# 1199	[c=4]*anddi3/0
	store8! &13 	#X12	# 12730	[c=4]movsi_from_tr_unspec/0
	load8! &2 	#X2	# 208	[c=4]movdi_push_pop
	store8! &61
	push! 3		# 209	[c=4]movsi_push_pop
	store8! &12 	#X11
	push! 3		# 210	[c=4]movsi_push_pop
	store8! &14 	#X13
	push! 0		# 211	[c=4]movsi_push_pop
	store8! &10 	#X9
	push! 0		# 212	[c=4]movsi_push_pop
	store4! &19
.L490.l_ocf5a76:
	# CBRANCH EQ0	# 12908	[c=12]cbranchqi4_internal
	load1! &0 	#AR
	jump_not_zero! .L112.l_ocf5a76
	# END CBRANCH
	jump! .L149.l_ocf5a76		# 13507	[c=4]jump
.L23.l_ocf5a76:
	load8! &60	# 2207	[c=5]movdi_to_tr_unspec/1
	add! 8		# 2209	[c=4]*adddi/0
	store8! &1 	#AR	# 2210	[c=4]movdi_from_tr_unspec/0
	load8! &60	# 9354	[c=2]movdi_push_pop
	store8! &3 	#X2
	load8! &2 	#X2	# 2212	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	store8! &2 	#X1	# 2214	[c=4]movdi_from_tr_unspec/0
	load8! &7 	#X7	# 2217	[c=5]movdi_to_tr_unspec/1
	or! 0x2		# 2219	[c=4]*iordi3/0
	store8! &8 	#X7	# 12644	[c=4]movsi_from_tr_unspec/0
	push! 30768		# 2226	[c=4]movhi_push_pop
	store2! &28
	load8! &0 	#AR	# 90	[c=4]movdi_push_pop
	store8! &61
	push! .LC5.l_ocf5a76		# 91	[c=4]movdi_push_pop
	store8! &24
	push! 2		# 92	[c=4]movsi_push_pop
	store8! &3 	#X2
	push! 120		# 93	[c=4]movsi_push_pop
	store8! &6 	#X5
	push! 0		# 12911	[c=4]movqi_push_pop
	store1! &27
	push! 0		# 12912	[c=4]movqi_push_pop
	store8! &1 	#AR
	jump! .L56.l_ocf5a76		# 13509	[c=4]jump
.L27.l_ocf5a76:
	load8! &7 	#X7	# 944	[c=5]movdi_to_tr_unspec/1
	or! 0x40		# 946	[c=4]*iordi3/0
	store8! &8 	#X7	# 12749	[c=4]movsi_from_tr_unspec/0
	load8! &6 	#X6	# 12915	[c=4]movdi_push_pop
	store8! &1 	#AR
	jump! .L14.l_ocf5a76		# 13511	[c=4]jump
.L29.l_ocf5a76:
	load8! &60	# 970	[c=5]movdi_to_tr_unspec/1
	add! 8		# 972	[c=4]*adddi/0
	store8! &1 	#AR	# 973	[c=4]movdi_from_tr_unspec/0
	load8! &60	# 9234	[c=2]movdi_push_pop
	store8! &12 	#X11
	load8! &11 	#X11	# 975	[c=7]movsi_to_tr_unspec/2
	load4	
	#	
	store1! &36	# 12745	[c=4]movqi_from_tr_unspec/0
	push! 0		# 984	[c=4]movqi_push_pop
	store1! &27
	load8! &0 	#AR	# 447	[c=4]movdi_push_pop
	store8! &61
	push! 1		# 448	[c=4]movsi_push_pop
	store8! &12 	#X11
	push! 1		# 449	[c=4]movsi_push_pop
	store8! &14 	#X13
	push! &0		# 12367	[c=4]movdi_to_tr_unspec/1
	add! 280		# 12374	[c=4]*adddi/0
	store8! &5 	#X4	# 12372	[c=4]movdi_from_tr_unspec/0
	load4! &7 	#X7	# 233	[c=4]movsi_push_pop
	store8! &13 	#X12
	push! 0		# 234	[c=4]movsi_push_pop
	store8! &10 	#X9
	push! 0		# 235	[c=4]movsi_push_pop
	store4! &19
	jump! .L149.l_ocf5a76		# 13513	[c=4]jump
.L30.l_ocf5a76:
	# CBRANCH EQ0	# 2391	[c=12]cbranchqi4_internal
	load1! &1 	#X1
	jump_not_zero! .L451.l_ocf5a76
	# END CBRANCH
	push! .LC4.l_ocf5a76		# 86	[c=4]movdi_push_pop
	store8! &24
.L43.l_ocf5a76:
	load8! &7 	#X7	# 2398	[c=5]movdi_to_tr_unspec/1
	and! 0x10		# 2400	[c=4]*anddi3/0
	store8! &1 	#AR	# 12633	[c=4]movdi_from_tr_unspec/0
	load8! &60	# 12634	[c=5]movdi_to_tr_unspec/1
	add! 8		# 2409	[c=4]*adddi/0
	store8! &3 	#X2	# 2410	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 2412	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_zero! .L133.l_ocf5a76
	# END CBRANCH
.L459.l_ocf5a76:
	load8! &60	# 9358	[c=2]movdi_push_pop
	store8! &5 	#X4
	load8! &4 	#X4	# 2414	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	store8! &2 	#X1	# 2416	[c=4]movdi_from_tr_unspec/0
.L134.l_ocf5a76:
	load8! &7 	#X7	# 2457	[c=5]movdi_to_tr_unspec/1
	and! 0x1		# 2459	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 12632	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L277.l_ocf5a76
	# END CBRANCH
.L460.l_ocf5a76:
	# CBRANCH EQ0	# 2468	[c=12]cbranchdi4_internal
	load8! &1 	#X1
	jump_zero! .L278.l_ocf5a76
	# END CBRANCH
	push! 48		# 2470	[c=4]movqi_push_pop
	store1! &28
	load1! &5 	#X5	# 12627	[c=4]movqi_push_pop
	store1! (+ &0 225)
	load8! &7 	#X7	# 2476	[c=5]movdi_to_tr_unspec/1
	or! 0x2		# 2478	[c=4]*iordi3/0
	store8! &8 	#X7	# 12629	[c=4]movsi_from_tr_unspec/0
	load8! &2 	#X2	# 100	[c=4]movdi_push_pop
	store8! &61
	push! 2		# 101	[c=4]movsi_push_pop
	store8! &3 	#X2
	push! 0		# 12918	[c=4]movqi_push_pop
	store1! &27
	push! 0		# 12919	[c=4]movqi_push_pop
	store8! &1 	#AR
	jump! .L56.l_ocf5a76		# 13516	[c=4]jump
.L25.l_ocf5a76:
	# CBRANCH EQ0	# 2046	[c=12]cbranchqi4_internal
	load1! &1 	#X1
	jump_not_zero! .L452.l_ocf5a76
	# END CBRANCH
	load8! &7 	#X7	# 2051	[c=5]movdi_to_tr_unspec/1
	and! 0x10		# 2053	[c=4]*anddi3/0
	store8! &1 	#AR	# 2054	[c=4]movdi_from_tr_unspec/0
	load8! &60	# 11975	[c=2]movdi_push_pop
	store8! &3 	#X2
	load8! &2 	#X2	# 2060	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	store8! &3 	#X2	# 2062	[c=4]movdi_from_tr_unspec/0
	load8! &60	# 2069	[c=5]movdi_to_tr_unspec/1
	add! 8		# 2071	[c=4]*adddi/0
	store8! &61	# 11976	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 2075	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L453.l_ocf5a76
	# END CBRANCH
.L114.l_ocf5a76:
	load8! &7 	#X7	# 2091	[c=5]movdi_to_tr_unspec/1
	and! 0x40		# 2093	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 12653	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L116.l_ocf5a76
	# END CBRANCH
	load4! &17	# 11969	[c=5]movsi_to_tr_unspec/1
	load8! &3 	#X2	# 2108	[c=4]movhi_from_tr_unspec/1
	store2	
	#	
	jump! .L5.l_ocf5a76		# 13520	[c=4]jump
.L26.l_ocf5a76:
	# CBRANCH EQ0	# 1007	[c=12]cbranchqi4_internal
	load1! &1 	#X1
	jump_not_zero! .L454.l_ocf5a76
	# END CBRANCH
.L51.l_ocf5a76:
	load8! &7 	#X7	# 1012	[c=5]movdi_to_tr_unspec/1
	and! 0x10		# 1014	[c=4]*anddi3/0
	store8! &1 	#AR	# 12740	[c=4]movdi_from_tr_unspec/0
	load8! &60	# 12741	[c=5]movdi_to_tr_unspec/1
	add! 8		# 1023	[c=4]*adddi/0
	store8! &3 	#X2	# 1024	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 1026	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L50.l_ocf5a76
	# END CBRANCH
	load8! &7 	#X7	# 1043	[c=5]movdi_to_tr_unspec/1
	and! 0x40		# 1045	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 12739	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L54.l_ocf5a76
	# END CBRANCH
	load8! &60	# 9243	[c=2]movdi_push_pop
	store8! &5 	#X4
	load8! &4 	#X4	# 1054	[c=7]movsi_to_tr_unspec/2
	load4	
	#	
	store8! &1 	#AR	# 12734	[c=4]movsi_from_tr_unspec/0
	load2! &0 	#AR	# 12735	[c=5]movhi_to_tr_unspec/1
	sigx2		# 1064	[c=6]*extendhidi2
	store8! &2 	#X1	# 1065	[c=4]movdi_from_tr_unspec/0
	load2! &0 	#AR	# 1067	[c=5]movhi_to_tr_unspec/1
	sigx2		# 1069	[c=6]*extendhidi2
	store8! &1 	#AR	# 1070	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 50	[c=4]movdi_push_pop
	store8! &61
	# CBRANCH	# 12922	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	add! -9223372036854775808	
	push! 0	
	add! -9223372036854775808	
	lt_u	
	jump_zero! .L55.l_ocf5a76
	# END CBRANCH
.L439.l_ocf5a76:
	load8! &1 	#X1	# 1099	[c=5]movdi_to_tr_unspec/1
	neg		# 1101	[c=3]*negdi2
	store8! &2 	#X1	# 1102	[c=4]movdi_from_tr_unspec/0
	push! 45		# 1105	[c=4]movqi_push_pop
	store1! &27
	push! 45		# 110	[c=4]movqi_push_pop
	store8! &1 	#AR
	push! 1		# 111	[c=4]movsi_push_pop
	store8! &3 	#X2
	# CBRANCH	# 12925	[c=12]cbranchsi4_internal
	load4! &9 	#X9
	push! 4294967295	
	xor	
	push! 1	
	lt_u	
	jump_zero! .L455.l_ocf5a76
	# END CBRANCH
.L136.l_ocf5a76:
	# CBRANCH EQ	# 2509	[c=12]cbranchsi4_internal
	load4! &2 	#X2
	push! 1	
	xor	
	jump_zero! .L139.l_ocf5a76
	# END CBRANCH
.L469.l_ocf5a76:
	# CBRANCH EQ	# 2511	[c=12]cbranchsi4_internal
	load4! &2 	#X2
	push! 2	
	xor	
	jump_zero! .L140.l_ocf5a76
	# END CBRANCH
	push! &0		# 11910	[c=4]movdi_to_tr_unspec/1
	add! 280		# 11917	[c=4]*adddi/0
	add! 40		# 122	[c=4]*adddi/0
	store8! &12 	#X11	# 123	[c=4]movdi_from_tr_unspec/0
.L141.l_ocf5a76:
	load1! &1 	#X1	# 11898	[c=5]movqi_to_tr_unspec/1
	and! 0x7		# 2520	[c=4]*anddi3/0
	add! 48		# 2529	[c=4]*adddi/0
	store8! &3 	#X2	# 12622	[c=4]movdi_from_tr_unspec/0
	load8! &11 	#X11	# 12623	[c=5]movdi_to_tr_unspec/1
	add! -1		# 2538	[c=4]*adddi/0
	store8! &5 	#X4	# 2539	[c=4]movdi_from_tr_unspec/0
	load1! &2 	#X2	# 2542	[c=5]movqi_to_tr_unspec/1
	load8! &5 	#X4	# 2544	[c=4]movqi_from_tr_unspec/1
	store1	
	#	
	load8! &1 	#X1	# 2551	[c=5]movdi_to_tr_unspec/1
	shift_ru! 3	# 2553	[c=40]*lshrdi3/0
	store8! &2 	#X1	# 2554	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 2558	[c=12]cbranchdi4_internal
	load8! &1 	#X1
	jump_zero! .L456.l_ocf5a76
	# END CBRANCH
.L280.l_ocf5a76:
	load8! &4 	#X4	# 125	[c=4]movdi_push_pop
	store8! &12 	#X11
	load1! &1 	#X1	# 12928	[c=5]movqi_to_tr_unspec/1
	and! 0x7		# 12930	[c=4]*anddi3/0
	add! 48		# 12932	[c=4]*adddi/0
	store8! &3 	#X2	# 12933	[c=4]movdi_from_tr_unspec/0
	load8! &11 	#X11	# 12934	[c=5]movdi_to_tr_unspec/1
	add! -1		# 12936	[c=4]*adddi/0
	store8! &5 	#X4	# 12937	[c=4]movdi_from_tr_unspec/0
	load1! &2 	#X2	# 12938	[c=5]movqi_to_tr_unspec/1
	load8! &5 	#X4	# 12940	[c=4]movqi_from_tr_unspec/1
	store1	
	#	
	load8! &1 	#X1	# 12941	[c=5]movdi_to_tr_unspec/1
	shift_ru! 3	# 12943	[c=40]*lshrdi3/0
	store8! &2 	#X1	# 12944	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 12945	[c=12]cbranchdi4_internal
	load8! &1 	#X1
	jump_not_zero! .L280.l_ocf5a76
	# END CBRANCH
.L456.l_ocf5a76:
	load8! &7 	#X7	# 2560	[c=5]movdi_to_tr_unspec/1
	and! 0x1		# 2562	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 12617	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L142.l_ocf5a76
	# END CBRANCH
	push! &0		# 11885	[c=4]movdi_to_tr_unspec/1
	add! 280		# 11892	[c=4]*adddi/0
	add! 40		# 2578	[c=4]*adddi/0
	load8! &5 	#X4	# 2583	[c=14]*subdi3/2
	sub
	store8! &14 	#X13	# 12614	[c=4]movsi_from_tr_unspec/0
	load4! &7 	#X7	# 188	[c=4]movsi_push_pop
	store8! &13 	#X12
	jump! .L143.l_ocf5a76		# 13525	[c=4]jump
.L24.l_ocf5a76:
	# CBRANCH EQ0	# 2135	[c=12]cbranchqi4_internal
	load1! &1 	#X1
	jump_not_zero! .L457.l_ocf5a76
	# END CBRANCH
.L118.l_ocf5a76:
	load8! &7 	#X7	# 2140	[c=5]movdi_to_tr_unspec/1
	and! 0x10		# 2142	[c=4]*anddi3/0
	store8! &1 	#AR	# 12645	[c=4]movdi_from_tr_unspec/0
	load8! &60	# 12646	[c=5]movdi_to_tr_unspec/1
	add! 8		# 2151	[c=4]*adddi/0
	store8! &3 	#X2	# 2152	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 2154	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L117.l_ocf5a76
	# END CBRANCH
	load8! &7 	#X7	# 2170	[c=5]movdi_to_tr_unspec/1
	and! 0x40		# 2172	[c=4]*anddi3/0
	store8! &1 	#AR	# 2173	[c=4]movdi_from_tr_unspec/0
	load8! &60	# 11966	[c=2]movdi_push_pop
	store8! &2 	#X1
	load8! &1 	#X1	# 2179	[c=7]movsi_to_tr_unspec/2
	load4	
	#	
	store8! &2 	#X1	# 2181	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ0	# 2183	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_zero! .L121.l_ocf5a76
	# END CBRANCH
	load2! &1 	#X1	# 11962	[c=5]movhi_to_tr_unspec/1
	store8! &2 	#X1	# 11964	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 96	[c=4]movdi_push_pop
	store8! &61
	push! 0		# 97	[c=4]movsi_push_pop
	store8! &3 	#X2
	push! 0		# 12948	[c=4]movqi_push_pop
	store1! &27
	push! 0		# 12949	[c=4]movqi_push_pop
	store8! &1 	#AR
	jump! .L56.l_ocf5a76		# 13528	[c=4]jump
.L18.l_ocf5a76:
	# CBRANCH EQ0	# 678	[c=12]cbranchqi4_internal
	load1! &1 	#X1
	jump_not_zero! .L458.l_ocf5a76
	# END CBRANCH
	push! .LC5.l_ocf5a76		# 87	[c=4]movdi_push_pop
	store8! &24
.L494.l_ocf5a76:
	load8! &7 	#X7	# 12952	[c=5]movdi_to_tr_unspec/1
	and! 0x10		# 12954	[c=4]*anddi3/0
	store8! &1 	#AR	# 12955	[c=4]movdi_from_tr_unspec/0
	load8! &60	# 12956	[c=5]movdi_to_tr_unspec/1
	add! 8		# 12958	[c=4]*adddi/0
	store8! &3 	#X2	# 12959	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 12960	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L459.l_ocf5a76
	# END CBRANCH
.L133.l_ocf5a76:
	load8! &7 	#X7	# 2422	[c=5]movdi_to_tr_unspec/1
	and! 0x40		# 2424	[c=4]*anddi3/0
	store8! &1 	#AR	# 2425	[c=4]movdi_from_tr_unspec/0
	load8! &60	# 11936	[c=2]movdi_push_pop
	store8! &12 	#X11
	load8! &11 	#X11	# 2431	[c=7]movsi_to_tr_unspec/2
	load4	
	#	
	store8! &2 	#X1	# 2433	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ0	# 2435	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_zero! .L135.l_ocf5a76
	# END CBRANCH
	load2! &1 	#X1	# 11932	[c=5]movhi_to_tr_unspec/1
	store8! &2 	#X1	# 11934	[c=4]movdi_from_tr_unspec/0
	load8! &7 	#X7	# 12963	[c=5]movdi_to_tr_unspec/1
	and! 0x1		# 12965	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 12966	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L460.l_ocf5a76
	# END CBRANCH
.L277.l_ocf5a76:
	load8! &2 	#X2	# 98	[c=4]movdi_push_pop
	store8! &61
	push! 2		# 99	[c=4]movsi_push_pop
	store8! &3 	#X2
	push! 0		# 12969	[c=4]movqi_push_pop
	store1! &27
	push! 0		# 12970	[c=4]movqi_push_pop
	store8! &1 	#AR
	jump! .L56.l_ocf5a76		# 13533	[c=4]jump
.L442.l_ocf5a76:
	load8! &11 	#X11	# 11465	[c=5]movdi_to_tr_unspec/1
	load8! &9 	#X8	# 11467	[c=14]*subdi3/2
	sub
	neg		# 11468	[c=4]*neg_tr
	store8! &8 	#X7	# 12580	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 3210	[c=12]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &8 	#X7
	add! -2147483648	
	lt_u	
	jump_zero! .L161.l_ocf5a76
	# END CBRANCH
	load4! &33	# 3212	[c=2]movsi_push_pop
	store8! &1 	#AR
	# CBRANCH	# 3213	[c=12]cbranchsi4_internal
	push! 16	
	add! -2147483648	
	load4! &8 	#X7
	add! -2147483648	
	lt_u	
	jump_zero! .L162.l_ocf5a76
	# END CBRANCH
.L165.l_ocf5a76:
	push! .Li_zeroes_4582.l_ocf5a76		# 3215	[c=3]movdi_to_tr_unspec/0
	load8! &4 	#X3	# 3217	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	push! 16		# 3219	[c=3]movdi_to_tr_unspec/0
	load8! &4 	#X3	# 3221	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &2 	#X2	# 3228	[c=5]movdi_to_tr_unspec/1
	add! 16		# 3230	[c=4]*adddi/0
	store8! &3 	#X2	# 3231	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 3234	[c=4]movdi_push_pop
	store8! &35
	load8! &0 	#AR	# 3235	[c=5]movdi_to_tr_unspec/1
	add! 1		# 3237	[c=4]*adddi/0
	store8! &1 	#AR	# 3238	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 11463	[c=4]movsi_push_pop
	store4! &34
	# CBRANCH	# 3245	[c=12]cbranchsi4_internal
	push! 7	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L163.l_ocf5a76
	# END CBRANCH
	load8! &3 	#X3	# 3252	[c=5]movdi_to_tr_unspec/1
	add! 16		# 3254	[c=4]*adddi/0
	store8! &4 	#X3	# 3255	[c=4]movdi_from_tr_unspec/0
	load8! &7 	#X7	# 3278	[c=5]movdi_to_tr_unspec/1
	add! -16		# 3280	[c=4]*adddi/0
	store8! &8 	#X7	# 12578	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 3288	[c=12]cbranchsi4_internal
	push! 16	
	add! -2147483648	
	load4! &8 	#X7
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L165.l_ocf5a76
	# END CBRANCH
.L162.l_ocf5a76:
	push! .Li_zeroes_4582.l_ocf5a76		# 3291	[c=3]movdi_to_tr_unspec/0
	load8! &4 	#X3	# 3293	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load4! &7 	#X7	# 3295	[c=5]movsi_to_tr_unspec/1
	sigx4		# 3297	[c=6]*extendsidi2
	store8! &2 	#X1	# 3298	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 3300	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 3302	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &1 	#X1	# 3309	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 3311	[c=6]*adddi/2
	add
	store8! &3 	#X2	# 3312	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 3315	[c=4]movdi_push_pop
	store8! &35
	load8! &0 	#AR	# 3316	[c=5]movdi_to_tr_unspec/1
	add! 1		# 3318	[c=4]*adddi/0
	store8! &1 	#AR	# 3319	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 11426	[c=4]movsi_push_pop
	store4! &34
	# CBRANCH	# 3326	[c=12]cbranchsi4_internal
	push! 7	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L166.l_ocf5a76
	# END CBRANCH
	load8! &3 	#X3	# 3333	[c=5]movdi_to_tr_unspec/1
	add! 16		# 3335	[c=4]*adddi/0
	store8! &4 	#X3	# 3336	[c=4]movdi_from_tr_unspec/0
	load8! &13 	#X13	# 12973	[c=5]movdi_to_tr_unspec/1
	load8! &10 	#X9	# 12975	[c=14]*subdi3/2
	sub
	neg		# 12976	[c=4]*neg_tr
	store8! &8 	#X7	# 12978	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 12979	[c=12]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &8 	#X7
	add! -2147483648	
	lt_u	
	jump_zero! .L167.l_ocf5a76
	# END CBRANCH
.L443.l_ocf5a76:
	load4! &33	# 3373	[c=2]movsi_push_pop
	store8! &1 	#AR
	# CBRANCH	# 3374	[c=12]cbranchsi4_internal
	push! 16	
	add! -2147483648	
	load4! &8 	#X7
	add! -2147483648	
	lt_u	
	jump_zero! .L168.l_ocf5a76
	# END CBRANCH
.L171.l_ocf5a76:
	push! .Li_zeroes_4582.l_ocf5a76		# 3376	[c=3]movdi_to_tr_unspec/0
	load8! &4 	#X3	# 3378	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	push! 16		# 3380	[c=3]movdi_to_tr_unspec/0
	load8! &4 	#X3	# 3382	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &2 	#X2	# 3389	[c=5]movdi_to_tr_unspec/1
	add! 16		# 3391	[c=4]*adddi/0
	store8! &3 	#X2	# 3392	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 3395	[c=4]movdi_push_pop
	store8! &35
	load8! &0 	#AR	# 3396	[c=5]movdi_to_tr_unspec/1
	add! 1		# 3398	[c=4]*adddi/0
	store8! &1 	#AR	# 3399	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 11383	[c=4]movsi_push_pop
	store4! &34
	# CBRANCH	# 3406	[c=12]cbranchsi4_internal
	push! 7	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L169.l_ocf5a76
	# END CBRANCH
	load8! &3 	#X3	# 3413	[c=5]movdi_to_tr_unspec/1
	add! 16		# 3415	[c=4]*adddi/0
	store8! &4 	#X3	# 3416	[c=4]movdi_from_tr_unspec/0
	load8! &7 	#X7	# 3439	[c=5]movdi_to_tr_unspec/1
	add! -16		# 3441	[c=4]*adddi/0
	store8! &8 	#X7	# 12574	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 3449	[c=12]cbranchsi4_internal
	push! 16	
	add! -2147483648	
	load4! &8 	#X7
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L171.l_ocf5a76
	# END CBRANCH
.L168.l_ocf5a76:
	push! .Li_zeroes_4582.l_ocf5a76		# 3452	[c=3]movdi_to_tr_unspec/0
	load8! &4 	#X3	# 3454	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load4! &7 	#X7	# 3456	[c=5]movsi_to_tr_unspec/1
	sigx4		# 3458	[c=6]*extendsidi2
	store8! &2 	#X1	# 3459	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 3461	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 3463	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &1 	#X1	# 3470	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 3472	[c=6]*adddi/2
	add
	store8! &3 	#X2	# 3473	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 3476	[c=4]movdi_push_pop
	store8! &35
	load8! &0 	#AR	# 3477	[c=5]movdi_to_tr_unspec/1
	add! 1		# 3479	[c=4]*adddi/0
	store8! &1 	#AR	# 3480	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 11346	[c=4]movsi_push_pop
	store4! &34
	# CBRANCH	# 3487	[c=12]cbranchsi4_internal
	push! 7	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L172.l_ocf5a76
	# END CBRANCH
	load8! &3 	#X3	# 3494	[c=5]movdi_to_tr_unspec/1
	add! 16		# 3496	[c=4]*adddi/0
	store8! &4 	#X3	# 3497	[c=4]movdi_from_tr_unspec/0
	load8! &12 	#X12	# 12982	[c=5]movdi_to_tr_unspec/1
	and! 0x100		# 12984	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 12985	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L461.l_ocf5a76
	# END CBRANCH
.L173.l_ocf5a76:
	# CBRANCH	# 3600	[c=12]cbranchsi4_internal
	push! 101	
	add! -2147483648	
	load4! &6 	#X5
	add! -2147483648	
	lt_u	
	jump_zero! .L176.l_ocf5a76
	# END CBRANCH
	load8! &22	# 11271	[c=2]movdf_push_pop
	store8! &1 	#AR
	push! 0x0000000000000000		# 3606	[c=4]pushdf1_not_fp/0
	load8! &1 	#AR	# 3607	[c=4]pushdf1_not_fp/1
	call! __eqdf2		# 3608	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH EQ0	# 3610	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_not_zero! .L384.l_ocf5a76
	# END CBRANCH
	push! .LC7.l_ocf5a76		# 3615	[c=3]movdi_to_tr_unspec/0
	load8! &4 	#X3	# 3617	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	push! 1		# 3619	[c=3]movdi_to_tr_unspec/0
	load8! &4 	#X3	# 3621	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &2 	#X2	# 3623	[c=5]movdi_to_tr_unspec/1
	add! 1		# 3625	[c=4]*adddi/0
	store8! &35	# 11266	[c=4]movdi_from_tr_unspec/0
	load4! &33	# 11267	[c=5]movsi_to_tr_unspec/1
	add! 1		# 3632	[c=4]*adddi/0
	store8! &1 	#AR	# 3633	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 11270	[c=4]movsi_push_pop
	store4! &34
	# CBRANCH	# 3640	[c=12]cbranchsi4_internal
	push! 7	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L179.l_ocf5a76
	# END CBRANCH
	load8! &3 	#X3	# 3647	[c=5]movdi_to_tr_unspec/1
	add! 16		# 3649	[c=4]*adddi/0
	store8! &4 	#X3	# 3650	[c=4]movdi_from_tr_unspec/0
.L180.l_ocf5a76:
	# CBRANCH	# 3671	[c=16]cbranchsi4_internal
	load4! &28
	add! -2147483648	
	load4! &20
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L181.l_ocf5a76
	# END CBRANCH
	load8! &12 	#X12	# 3673	[c=5]movdi_to_tr_unspec/1
	and! 0x1		# 3675	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 12569	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L462.l_ocf5a76
	# END CBRANCH
.L181.l_ocf5a76:
	load8! &21	# 3689	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 3691	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load8! &20	# 3693	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 3695	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &34	# 3698	[c=5]movdi_to_tr_unspec/1
	load8! &21	# 3700	[c=6]*adddi/1
	add
	store8! &3 	#X2	# 3701	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 3703	[c=4]movdi_push_pop
	store8! &35
	load4! &33	# 11227	[c=5]movsi_to_tr_unspec/1
	add! 1		# 3707	[c=4]*adddi/0
	store8! &1 	#AR	# 3708	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 11230	[c=4]movsi_push_pop
	store4! &34
	# CBRANCH	# 3715	[c=12]cbranchsi4_internal
	push! 7	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L182.l_ocf5a76
	# END CBRANCH
	load8! &3 	#X3	# 3722	[c=5]movdi_to_tr_unspec/1
	add! 16		# 3724	[c=4]*adddi/0
	store8! &4 	#X3	# 3725	[c=4]movdi_from_tr_unspec/0
	load4! &19	# 11190	[c=5]movsi_to_tr_unspec/1
	add! -1		# 3749	[c=4]*adddi/0
	store8! &5 	#X4	# 12566	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 3756	[c=12]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &5 	#X4
	add! -2147483648	
	lt_u	
	jump_zero! .L175.l_ocf5a76
	# END CBRANCH
.L488.l_ocf5a76:
	load4! &33	# 3758	[c=2]movsi_push_pop
	store8! &1 	#AR
	# CBRANCH	# 3759	[c=12]cbranchsi4_internal
	push! 16	
	add! -2147483648	
	load4! &5 	#X4
	add! -2147483648	
	lt_u	
	jump_zero! .L184.l_ocf5a76
	# END CBRANCH
.L187.l_ocf5a76:
	push! .Li_zeroes_4582.l_ocf5a76		# 3761	[c=3]movdi_to_tr_unspec/0
	load8! &4 	#X3	# 3763	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	push! 16		# 3765	[c=3]movdi_to_tr_unspec/0
	load8! &4 	#X3	# 3767	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &2 	#X2	# 3774	[c=5]movdi_to_tr_unspec/1
	add! 16		# 3776	[c=4]*adddi/0
	store8! &3 	#X2	# 3777	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 3780	[c=4]movdi_push_pop
	store8! &35
	load8! &0 	#AR	# 3781	[c=5]movdi_to_tr_unspec/1
	add! 1		# 3783	[c=4]*adddi/0
	store8! &1 	#AR	# 3784	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 11189	[c=4]movsi_push_pop
	store4! &34
	# CBRANCH	# 3791	[c=12]cbranchsi4_internal
	push! 7	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L185.l_ocf5a76
	# END CBRANCH
	load8! &3 	#X3	# 3798	[c=5]movdi_to_tr_unspec/1
	add! 16		# 3800	[c=4]*adddi/0
	store8! &4 	#X3	# 3801	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 3824	[c=5]movdi_to_tr_unspec/1
	add! -16		# 3826	[c=4]*adddi/0
	store8! &5 	#X4	# 12564	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 3834	[c=12]cbranchsi4_internal
	push! 16	
	add! -2147483648	
	load4! &5 	#X4
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L187.l_ocf5a76
	# END CBRANCH
.L184.l_ocf5a76:
	push! .Li_zeroes_4582.l_ocf5a76		# 3837	[c=3]movdi_to_tr_unspec/0
	load8! &4 	#X3	# 3839	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load4! &4 	#X4	# 3841	[c=5]movsi_to_tr_unspec/1
	sigx4		# 3843	[c=6]*extendsidi2
	store8! &2 	#X1	# 3844	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 3846	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 3848	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &1 	#X1	# 3855	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 3857	[c=6]*adddi/2
	add
	store8! &3 	#X2	# 3858	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 3861	[c=4]movdi_push_pop
	store8! &35
	load8! &0 	#AR	# 3862	[c=5]movdi_to_tr_unspec/1
	add! 1		# 3864	[c=4]*adddi/0
	store8! &1 	#AR	# 3865	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 11152	[c=4]movsi_push_pop
	store4! &34
	# CBRANCH	# 3872	[c=12]cbranchsi4_internal
	push! 7	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L188.l_ocf5a76
	# END CBRANCH
	load8! &3 	#X3	# 3879	[c=5]movdi_to_tr_unspec/1
	add! 16		# 3881	[c=4]*adddi/0
	store8! &4 	#X3	# 3882	[c=4]movdi_from_tr_unspec/0
	jump! .L175.l_ocf5a76		# 13537	[c=4]jump
.L247.l_ocf5a76:
	push! &0		# 10216	[c=4]movdi_to_tr_unspec/1
	add! 256		# 10223	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 10225	[c=0]*peep2_pop_pusharg
	load8! &11 	#X10	# 5575	[c=4]pushdi1_not_fp/1
	load8! &17 	#X15	# 5576	[c=4]pushdi1_not_fp/1
	call! __ssprint_r		# 5577	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	# CBRANCH EQ0	# 5579	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L13.l_ocf5a76
	# END CBRANCH
	push! 0		# 12988	[c=4]movsi_push_pop
	store4! &34
	push! &0		# 12989	[c=4]movdi_to_tr_unspec/1
	add! 320		# 12991	[c=4]*adddi/0
	store8! &4 	#X3	# 12992	[c=4]movdi_from_tr_unspec/0
	jump! .L5.l_ocf5a76		# 13539	[c=4]jump
.L441.l_ocf5a76:
	load4! &33	# 2916	[c=2]movsi_push_pop
	store8! &1 	#AR
	# CBRANCH	# 2917	[c=12]cbranchsi4_internal
	push! 16	
	add! -2147483648	
	load4! &8 	#X7
	add! -2147483648	
	lt_u	
	jump_zero! .L152.l_ocf5a76
	# END CBRANCH
	load4! &1 	#X1	# 8766	[c=4]movsi_push_pop
	store4! &25
	load8! &6 	#X6	# 8779	[c=4]movdi_push_pop
	store8! &2 	#X1
	load8! &4 	#X4	# 8780	[c=4]movdi_push_pop
	store8! &7 	#X6
	load4! &7 	#X7	# 8781	[c=4]movsi_push_pop
	store8! &5 	#X4
	load8! &1 	#X1	# 8782	[c=4]movdi_push_pop
	store8! &8 	#X7
.L155.l_ocf5a76:
	push! .Li_blanks_4581.l_ocf5a76		# 2919	[c=3]movdi_to_tr_unspec/0
	load8! &4 	#X3	# 2921	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	push! 16		# 2923	[c=3]movdi_to_tr_unspec/0
	load8! &4 	#X3	# 2925	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &2 	#X2	# 2932	[c=5]movdi_to_tr_unspec/1
	add! 16		# 2934	[c=4]*adddi/0
	store8! &3 	#X2	# 2935	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 2938	[c=4]movdi_push_pop
	store8! &35
	load8! &0 	#AR	# 2939	[c=5]movdi_to_tr_unspec/1
	add! 1		# 2941	[c=4]*adddi/0
	store8! &1 	#AR	# 2942	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 11651	[c=4]movsi_push_pop
	store4! &34
	# CBRANCH	# 2949	[c=12]cbranchsi4_internal
	push! 7	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L153.l_ocf5a76
	# END CBRANCH
	load8! &3 	#X3	# 2956	[c=5]movdi_to_tr_unspec/1
	add! 16		# 2958	[c=4]*adddi/0
	store8! &4 	#X3	# 2959	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 2982	[c=5]movdi_to_tr_unspec/1
	add! -16		# 2984	[c=4]*adddi/0
	store8! &5 	#X4	# 12582	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 2992	[c=12]cbranchsi4_internal
	push! 16	
	add! -2147483648	
	load4! &5 	#X4
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L155.l_ocf5a76
	# END CBRANCH
.L464.l_ocf5a76:
	load4! &24	# 8784	[c=2]movsi_push_pop
	store8! &2 	#X1
	load8! &7 	#X7	# 8797	[c=4]movdi_push_pop
	store8! &25
	load4! &4 	#X4	# 8798	[c=4]movsi_push_pop
	store8! &8 	#X7
	load8! &6 	#X6	# 8799	[c=4]movdi_push_pop
	store8! &5 	#X4
	load8! &24	# 8800	[c=2]movdi_push_pop
	store8! &7 	#X6
.L152.l_ocf5a76:
	push! .Li_blanks_4581.l_ocf5a76		# 2995	[c=3]movdi_to_tr_unspec/0
	load8! &4 	#X3	# 2997	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load4! &7 	#X7	# 2999	[c=5]movsi_to_tr_unspec/1
	sigx4		# 3001	[c=6]*extendsidi2
	store8! &8 	#X7	# 3002	[c=4]movdi_from_tr_unspec/0
	load8! &7 	#X7	# 3004	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 3006	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &7 	#X7	# 3013	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 3015	[c=6]*adddi/2
	add
	store8! &3 	#X2	# 3016	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 3019	[c=4]movdi_push_pop
	store8! &35
	load8! &0 	#AR	# 3020	[c=5]movdi_to_tr_unspec/1
	add! 1		# 3022	[c=4]*adddi/0
	store8! &1 	#AR	# 3023	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 11614	[c=4]movsi_push_pop
	store4! &34
	# CBRANCH	# 3030	[c=12]cbranchsi4_internal
	push! 7	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L156.l_ocf5a76
	# END CBRANCH
	load8! &3 	#X3	# 3037	[c=5]movdi_to_tr_unspec/1
	add! 16		# 3039	[c=4]*adddi/0
	store8! &4 	#X3	# 3040	[c=4]movdi_from_tr_unspec/0
	jump! .L151.l_ocf5a76		# 13541	[c=4]jump
.L444.l_ocf5a76:
	load4! &33	# 5414	[c=2]movsi_push_pop
	store8! &1 	#AR
	# CBRANCH	# 5415	[c=12]cbranchsi4_internal
	push! 16	
	add! -2147483648	
	load4! &5 	#X4
	add! -2147483648	
	lt_u	
	jump_zero! .L242.l_ocf5a76
	# END CBRANCH
.L245.l_ocf5a76:
	push! .Li_blanks_4581.l_ocf5a76		# 5417	[c=3]movdi_to_tr_unspec/0
	load8! &4 	#X3	# 5419	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	push! 16		# 5421	[c=3]movdi_to_tr_unspec/0
	load8! &4 	#X3	# 5423	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &2 	#X2	# 5430	[c=5]movdi_to_tr_unspec/1
	add! 16		# 5432	[c=4]*adddi/0
	store8! &3 	#X2	# 5433	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 5436	[c=4]movdi_push_pop
	store8! &35
	load8! &0 	#AR	# 5437	[c=5]movdi_to_tr_unspec/1
	add! 1		# 5439	[c=4]*adddi/0
	store8! &1 	#AR	# 5440	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 10302	[c=4]movsi_push_pop
	store4! &34
	# CBRANCH	# 5447	[c=12]cbranchsi4_internal
	push! 7	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L243.l_ocf5a76
	# END CBRANCH
	load8! &3 	#X3	# 5454	[c=5]movdi_to_tr_unspec/1
	add! 16		# 5456	[c=4]*adddi/0
	store8! &4 	#X3	# 5457	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 5480	[c=5]movdi_to_tr_unspec/1
	add! -16		# 5482	[c=4]*adddi/0
	store8! &5 	#X4	# 12499	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 5490	[c=12]cbranchsi4_internal
	push! 16	
	add! -2147483648	
	load4! &5 	#X4
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L245.l_ocf5a76
	# END CBRANCH
.L242.l_ocf5a76:
	push! .Li_blanks_4581.l_ocf5a76		# 5493	[c=3]movdi_to_tr_unspec/0
	load8! &4 	#X3	# 5495	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load4! &4 	#X4	# 5497	[c=5]movsi_to_tr_unspec/1
	sigx4		# 5499	[c=6]*extendsidi2
	store8! &2 	#X1	# 5500	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 5502	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 5504	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &1 	#X1	# 5511	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 5513	[c=6]*adddi/2
	add
	store8! &3 	#X2	# 5514	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 5517	[c=4]movdi_push_pop
	store8! &35
	load8! &0 	#AR	# 5518	[c=5]movdi_to_tr_unspec/1
	add! 1		# 5520	[c=4]*adddi/0
	store8! &1 	#AR	# 5521	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 10265	[c=4]movsi_push_pop
	store4! &34
	# CBRANCH	# 5528	[c=12]cbranchsi4_internal
	push! 7	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	jump_zero! .L241.l_ocf5a76
	# END CBRANCH
	push! &0		# 10254	[c=4]movdi_to_tr_unspec/1
	add! 256		# 10261	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 10263	[c=0]*peep2_pop_pusharg
	load8! &11 	#X10	# 5536	[c=4]pushdi1_not_fp/1
	load8! &17 	#X15	# 5537	[c=4]pushdi1_not_fp/1
	call! __ssprint_r		# 5538	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	# CBRANCH EQ0	# 5540	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L13.l_ocf5a76
	# END CBRANCH
	load8! &34	# 5542	[c=2]movdi_push_pop
	store8! &3 	#X2
	jump! .L241.l_ocf5a76		# 13543	[c=4]jump
.L17.l_ocf5a76:
	# CBRANCH EQ0	# 2833	[c=12]cbranchqi4_internal
	load1! &1 	#X1
	jump_not_zero! .L463.l_ocf5a76
	# END CBRANCH
.L148.l_ocf5a76:
	# CBRANCH EQ0	# 2838	[c=12]cbranchsi4_internal
	load4! &5 	#X5
	jump_zero! .L6.l_ocf5a76
	# END CBRANCH
	load1! &5 	#X5	# 12593	[c=4]movqi_push_pop
	store1! &36
	push! 0		# 2845	[c=4]movqi_push_pop
	store1! &27
	push! 1		# 440	[c=4]movsi_push_pop
	store8! &12 	#X11
	push! 1		# 441	[c=4]movsi_push_pop
	store8! &14 	#X13
	push! &0		# 11675	[c=4]movdi_to_tr_unspec/1
	add! 280		# 11682	[c=4]*adddi/0
	store8! &5 	#X4	# 11680	[c=4]movdi_from_tr_unspec/0
	load4! &7 	#X7	# 12996	[c=4]movsi_push_pop
	store8! &13 	#X12
	push! 0		# 12997	[c=4]movsi_push_pop
	store8! &10 	#X9
	push! 0		# 12998	[c=4]movsi_push_pop
	store4! &19
	jump! .L149.l_ocf5a76		# 13546	[c=4]jump
.L169.l_ocf5a76:
	push! &0		# 11372	[c=4]movdi_to_tr_unspec/1
	add! 256		# 11379	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 11381	[c=0]*peep2_pop_pusharg
	load8! &11 	#X10	# 3429	[c=4]pushdi1_not_fp/1
	load8! &17 	#X15	# 3430	[c=4]pushdi1_not_fp/1
	call! __ssprint_r		# 3431	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	# CBRANCH EQ0	# 3433	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L13.l_ocf5a76
	# END CBRANCH
	load8! &34	# 3435	[c=2]movdi_push_pop
	store8! &3 	#X2
	load4! &33	# 3436	[c=2]movsi_push_pop
	store8! &1 	#AR
	push! &0		# 11356	[c=4]movdi_to_tr_unspec/1
	add! 320		# 11363	[c=4]*adddi/0
	store8! &4 	#X3	# 11361	[c=4]movdi_from_tr_unspec/0
	load8! &7 	#X7	# 13001	[c=5]movdi_to_tr_unspec/1
	add! -16		# 13003	[c=4]*adddi/0
	store8! &8 	#X7	# 13005	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 13006	[c=12]cbranchsi4_internal
	push! 16	
	add! -2147483648	
	load4! &8 	#X7
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L171.l_ocf5a76
	# END CBRANCH
	jump! .L168.l_ocf5a76		# 13549	[c=4]jump
.L153.l_ocf5a76:
	push! &0		# 11640	[c=4]movdi_to_tr_unspec/1
	add! 256		# 11647	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 11649	[c=0]*peep2_pop_pusharg
	load8! &11 	#X10	# 2972	[c=4]pushdi1_not_fp/1
	load8! &17 	#X15	# 2973	[c=4]pushdi1_not_fp/1
	call! __ssprint_r		# 2974	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	# CBRANCH EQ0	# 2976	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L13.l_ocf5a76
	# END CBRANCH
	load8! &34	# 2978	[c=2]movdi_push_pop
	store8! &3 	#X2
	load4! &33	# 2979	[c=2]movsi_push_pop
	store8! &1 	#AR
	push! &0		# 11624	[c=4]movdi_to_tr_unspec/1
	add! 320		# 11631	[c=4]*adddi/0
	store8! &4 	#X3	# 11629	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 13009	[c=5]movdi_to_tr_unspec/1
	add! -16		# 13011	[c=4]*adddi/0
	store8! &5 	#X4	# 13013	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 13014	[c=12]cbranchsi4_internal
	push! 16	
	add! -2147483648	
	load4! &5 	#X4
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L155.l_ocf5a76
	# END CBRANCH
	jump! .L464.l_ocf5a76		# 13553	[c=4]jump
.L243.l_ocf5a76:
	push! &0		# 10291	[c=4]movdi_to_tr_unspec/1
	add! 256		# 10298	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 10300	[c=0]*peep2_pop_pusharg
	load8! &11 	#X10	# 5470	[c=4]pushdi1_not_fp/1
	load8! &17 	#X15	# 5471	[c=4]pushdi1_not_fp/1
	call! __ssprint_r		# 5472	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	# CBRANCH EQ0	# 5474	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L13.l_ocf5a76
	# END CBRANCH
	load8! &34	# 5476	[c=2]movdi_push_pop
	store8! &3 	#X2
	load4! &33	# 5477	[c=2]movsi_push_pop
	store8! &1 	#AR
	push! &0		# 10275	[c=4]movdi_to_tr_unspec/1
	add! 320		# 10282	[c=4]*adddi/0
	store8! &4 	#X3	# 10280	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 13017	[c=5]movdi_to_tr_unspec/1
	add! -16		# 13019	[c=4]*adddi/0
	store8! &5 	#X4	# 13021	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 13022	[c=12]cbranchsi4_internal
	push! 16	
	add! -2147483648	
	load4! &5 	#X4
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L245.l_ocf5a76
	# END CBRANCH
	jump! .L242.l_ocf5a76		# 13556	[c=4]jump
.L163.l_ocf5a76:
	push! &0		# 11452	[c=4]movdi_to_tr_unspec/1
	add! 256		# 11459	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 11461	[c=0]*peep2_pop_pusharg
	load8! &11 	#X10	# 3268	[c=4]pushdi1_not_fp/1
	load8! &17 	#X15	# 3269	[c=4]pushdi1_not_fp/1
	call! __ssprint_r		# 3270	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	# CBRANCH EQ0	# 3272	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L13.l_ocf5a76
	# END CBRANCH
	load8! &34	# 3274	[c=2]movdi_push_pop
	store8! &3 	#X2
	load4! &33	# 3275	[c=2]movsi_push_pop
	store8! &1 	#AR
	push! &0		# 11436	[c=4]movdi_to_tr_unspec/1
	add! 320		# 11443	[c=4]*adddi/0
	store8! &4 	#X3	# 11441	[c=4]movdi_from_tr_unspec/0
	load8! &7 	#X7	# 13025	[c=5]movdi_to_tr_unspec/1
	add! -16		# 13027	[c=4]*adddi/0
	store8! &8 	#X7	# 13029	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 13030	[c=12]cbranchsi4_internal
	push! 16	
	add! -2147483648	
	load4! &8 	#X7
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L165.l_ocf5a76
	# END CBRANCH
	jump! .L162.l_ocf5a76		# 13559	[c=4]jump
.L287.l_ocf5a76:
	load4! &12 	#X12	# 140	[c=4]movsi_push_pop
	store8! &8 	#X7
.L140.l_ocf5a76:
	push! &0		# 11766	[c=4]movdi_to_tr_unspec/1
	add! 280		# 11773	[c=4]*adddi/0
	add! 40		# 148	[c=4]*adddi/0
	store8! &5 	#X4	# 149	[c=4]movdi_from_tr_unspec/0
	load8! &23	# 8733	[c=2]movdi_push_pop
	store8! &12 	#X11
.L146.l_ocf5a76:
	load8! &1 	#X1	# 2743	[c=5]movdi_to_tr_unspec/1
	and! 0xf		# 2745	[c=4]*anddi3/0
	load8! &12 	#X11	# 11755	[c=6]*adddi/2
	add
	store8! &3 	#X2	# 11756	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 2758	[c=5]movdi_to_tr_unspec/1
	add! -1		# 2760	[c=4]*adddi/0
	store8! &5 	#X4	# 2761	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 2764	[c=7]movqi_to_tr_unspec/2
	load1	
	#	
	load8! &5 	#X4	# 2770	[c=4]movqi_from_tr_unspec/1
	store1	
	#	
	load8! &1 	#X1	# 2777	[c=5]movdi_to_tr_unspec/1
	shift_ru! 4	# 2779	[c=40]*lshrdi3/0
	store8! &2 	#X1	# 2780	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 2784	[c=12]cbranchdi4_internal
	load8! &1 	#X1
	jump_not_zero! .L146.l_ocf5a76
	# END CBRANCH
	push! &0		# 11743	[c=4]movdi_to_tr_unspec/1
	add! 280		# 11750	[c=4]*adddi/0
	add! 40		# 2793	[c=4]*adddi/0
	load8! &5 	#X4	# 2798	[c=14]*subdi3/2
	sub
	store8! &14 	#X13	# 12597	[c=4]movsi_from_tr_unspec/0
	load4! &7 	#X7	# 164	[c=4]movsi_push_pop
	store8! &13 	#X12
	jump! .L143.l_ocf5a76		# 13561	[c=4]jump
.L176.l_ocf5a76:
	load8! &2 	#X2	# 4882	[c=5]movdi_to_tr_unspec/1
	add! 1		# 4884	[c=4]*adddi/0
	store8! &3 	#X2	# 4885	[c=4]movdi_from_tr_unspec/0
	load4! &33	# 4887	[c=2]movsi_push_pop
	store8! &2 	#X1
	load8! &1 	#X1	# 4888	[c=5]movdi_to_tr_unspec/1
	add! 1		# 4890	[c=4]*adddi/0
	store8! &1 	#AR	# 12532	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 12533	[c=5]movdi_to_tr_unspec/1
	add! 16		# 4899	[c=4]*adddi/0
	store8! &6 	#X5	# 4900	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 4902	[c=14]cbranchsi4_internal
	push! 1	
	add! -2147483648	
	load4! &20
	add! -2147483648	
	lt_u	
	jump_zero! .L465.l_ocf5a76
	# END CBRANCH
.L226.l_ocf5a76:
	load8! &4 	#X4	# 4916	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 4918	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	push! 1		# 4920	[c=3]movdi_to_tr_unspec/0
	load8! &4 	#X3	# 4922	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &2 	#X2	# 4924	[c=4]movdi_push_pop
	store8! &35
	load4! &0 	#AR	# 4925	[c=4]movsi_push_pop
	store4! &34
	# CBRANCH	# 4926	[c=12]cbranchsi4_internal
	push! 7	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L466.l_ocf5a76
	# END CBRANCH
	load8! &21	# 4944	[c=5]movdi_to_tr_unspec/1
	load8! &6 	#X5	# 4946	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load8! &20	# 4948	[c=5]movdi_to_tr_unspec/1
	load8! &6 	#X5	# 4950	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &20	# 4957	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 4959	[c=6]*adddi/2
	add
	store8! &3 	#X2	# 4960	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 4963	[c=4]movdi_push_pop
	store8! &35
	load8! &0 	#AR	# 4964	[c=5]movdi_to_tr_unspec/1
	add! 1		# 4966	[c=4]*adddi/0
	store8! &8 	#X7	# 12528	[c=4]movsi_from_tr_unspec/0
	load4! &7 	#X7	# 4973	[c=4]movsi_push_pop
	store4! &34
	# CBRANCH	# 4974	[c=12]cbranchsi4_internal
	push! 7	
	add! -2147483648	
	load4! &8 	#X7
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L229.l_ocf5a76
	# END CBRANCH
.L467.l_ocf5a76:
	load8! &5 	#X5	# 4981	[c=5]movdi_to_tr_unspec/1
	add! 16		# 4983	[c=4]*adddi/0
	store8! &6 	#X5	# 4984	[c=4]movdi_from_tr_unspec/0
	load8! &22	# 10564	[c=2]movdf_push_pop
	store8! &1 	#AR
	load8! &7 	#X7	# 5011	[c=5]movdi_to_tr_unspec/1
	add! 1		# 5013	[c=4]*adddi/0
	store8! &10 	#X9	# 12524	[c=4]movsi_from_tr_unspec/0
	load8! &5 	#X5	# 5020	[c=5]movdi_to_tr_unspec/1
	add! 16		# 5022	[c=4]*adddi/0
	store8! &4 	#X3	# 5023	[c=4]movdi_from_tr_unspec/0
	load4! &19	# 10566	[c=5]movsi_to_tr_unspec/1
	add! -1		# 5027	[c=4]*adddi/0
	store8! &14 	#X13	# 12526	[c=4]movsi_from_tr_unspec/0
	push! 0x0000000000000000		# 5034	[c=4]pushdf1_not_fp/0
	load8! &1 	#AR	# 5035	[c=4]pushdf1_not_fp/1
	call! __nedf2		# 5036	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH EQ0	# 5038	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L385.l_ocf5a76
	# END CBRANCH
.L468.l_ocf5a76:
	load8! &4 	#X4	# 5043	[c=5]movdi_to_tr_unspec/1
	add! 1		# 5045	[c=4]*adddi/0
	load8! &6 	#X5	# 5050	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load4! &13 	#X13	# 5052	[c=5]movsi_to_tr_unspec/1
	sigx4		# 5054	[c=6]*extendsidi2
	store8! &1 	#AR	# 5055	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 5057	[c=5]movdi_to_tr_unspec/1
	load8! &6 	#X5	# 5059	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &0 	#AR	# 5066	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 5068	[c=6]*adddi/2
	add
	store8! &3 	#X2	# 5069	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 5072	[c=4]movdi_push_pop
	store8! &35
	load4! &9 	#X9	# 5073	[c=4]movsi_push_pop
	store4! &34
	# CBRANCH	# 5074	[c=12]cbranchsi4_internal
	push! 7	
	add! -2147483648	
	load4! &10 	#X9
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L233.l_ocf5a76
	# END CBRANCH
	load8! &7 	#X7	# 5076	[c=5]movdi_to_tr_unspec/1
	add! 2		# 5078	[c=4]*adddi/0
	store8! &10 	#X9	# 12522	[c=4]movsi_from_tr_unspec/0
	load8! &5 	#X5	# 5085	[c=5]movdi_to_tr_unspec/1
	add! 32		# 5087	[c=4]*adddi/0
	store8! &1 	#AR	# 5088	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 387	[c=4]movdi_push_pop
	store8! &6 	#X5
	load8! &0 	#AR	# 388	[c=4]movdi_push_pop
	store8! &4 	#X3
.L234.l_ocf5a76:
	push! &0		# 10353	[c=4]movdi_to_tr_unspec/1
	add! 240		# 10360	[c=4]*adddi/0
	load8! &6 	#X5	# 10358	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load4! &25	# 5355	[c=5]movsi_to_tr_unspec/1
	sigx4		# 5357	[c=6]*extendsidi2
	store8! &1 	#AR	# 5358	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 5360	[c=5]movdi_to_tr_unspec/1
	load8! &6 	#X5	# 5362	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &0 	#AR	# 5364	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 5366	[c=6]*adddi/2
	add
	store8! &3 	#X2	# 5367	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 5369	[c=4]movdi_push_pop
	store8! &35
	load4! &9 	#X9	# 5370	[c=4]movsi_push_pop
	store4! &34
	# CBRANCH	# 5371	[c=12]cbranchsi4_internal
	push! 7	
	add! -2147483648	
	load4! &10 	#X9
	add! -2147483648	
	lt_u	
	jump_zero! .L175.l_ocf5a76
	# END CBRANCH
	push! &0		# 10335	[c=4]movdi_to_tr_unspec/1
	add! 256		# 10342	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 10344	[c=0]*peep2_pop_pusharg
	load8! &11 	#X10	# 5379	[c=4]pushdi1_not_fp/1
	load8! &17 	#X15	# 5380	[c=4]pushdi1_not_fp/1
	call! __ssprint_r		# 5381	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	# CBRANCH EQ0	# 5383	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L13.l_ocf5a76
	# END CBRANCH
	load8! &34	# 5385	[c=2]movdi_push_pop
	store8! &3 	#X2
	push! &0		# 10319	[c=4]movdi_to_tr_unspec/1
	add! 320		# 10326	[c=4]*adddi/0
	store8! &4 	#X3	# 10324	[c=4]movdi_from_tr_unspec/0
	jump! .L175.l_ocf5a76		# 13565	[c=4]jump
.L465.l_ocf5a76:
	load8! &12 	#X12	# 4904	[c=5]movdi_to_tr_unspec/1
	and! 0x1		# 4906	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 12531	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L226.l_ocf5a76
	# END CBRANCH
	load8! &4 	#X4	# 5289	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 5291	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	push! 1		# 5293	[c=3]movdi_to_tr_unspec/0
	load8! &4 	#X3	# 5295	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &2 	#X2	# 5297	[c=4]movdi_push_pop
	store8! &35
	load4! &0 	#AR	# 5298	[c=4]movsi_push_pop
	store4! &34
	# CBRANCH	# 5299	[c=12]cbranchsi4_internal
	push! 7	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L240.l_ocf5a76
	# END CBRANCH
	load8! &1 	#X1	# 5301	[c=5]movdi_to_tr_unspec/1
	add! 2		# 5303	[c=4]*adddi/0
	store8! &10 	#X9	# 12508	[c=4]movsi_from_tr_unspec/0
	load8! &3 	#X3	# 5315	[c=5]movdi_to_tr_unspec/1
	add! 32		# 5317	[c=4]*adddi/0
	store8! &4 	#X3	# 5318	[c=4]movdi_from_tr_unspec/0
	jump! .L234.l_ocf5a76		# 13567	[c=4]jump
.L466.l_ocf5a76:
	push! &0		# 10628	[c=4]movdi_to_tr_unspec/1
	add! 256		# 10635	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 10637	[c=0]*peep2_pop_pusharg
	load8! &11 	#X10	# 4934	[c=4]pushdi1_not_fp/1
	load8! &17 	#X15	# 4935	[c=4]pushdi1_not_fp/1
	call! __ssprint_r		# 4936	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	# CBRANCH EQ0	# 4938	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L13.l_ocf5a76
	# END CBRANCH
	load8! &34	# 4940	[c=2]movdi_push_pop
	store8! &3 	#X2
	load4! &33	# 4941	[c=2]movsi_push_pop
	store8! &1 	#AR
	push! &0		# 10612	[c=4]movdi_to_tr_unspec/1
	add! 320		# 10619	[c=4]*adddi/0
	store8! &6 	#X5	# 10617	[c=4]movdi_from_tr_unspec/0
	load8! &21	# 13033	[c=5]movdi_to_tr_unspec/1
	load8! &6 	#X5	# 13035	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load8! &20	# 13036	[c=5]movdi_to_tr_unspec/1
	load8! &6 	#X5	# 13038	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &20	# 13039	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 13041	[c=6]*adddi/2
	add
	store8! &3 	#X2	# 13042	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 13043	[c=4]movdi_push_pop
	store8! &35
	load8! &0 	#AR	# 13044	[c=5]movdi_to_tr_unspec/1
	add! 1		# 13046	[c=4]*adddi/0
	store8! &8 	#X7	# 13048	[c=4]movsi_from_tr_unspec/0
	load4! &7 	#X7	# 13049	[c=4]movsi_push_pop
	store4! &34
	# CBRANCH	# 13050	[c=12]cbranchsi4_internal
	push! 7	
	add! -2147483648	
	load4! &8 	#X7
	add! -2147483648	
	lt_u	
	jump_zero! .L467.l_ocf5a76
	# END CBRANCH
.L229.l_ocf5a76:
	push! &0		# 10593	[c=4]movdi_to_tr_unspec/1
	add! 256		# 10600	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 10602	[c=0]*peep2_pop_pusharg
	load8! &11 	#X10	# 4997	[c=4]pushdi1_not_fp/1
	load8! &17 	#X15	# 4998	[c=4]pushdi1_not_fp/1
	call! __ssprint_r		# 4999	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	# CBRANCH EQ0	# 5001	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L13.l_ocf5a76
	# END CBRANCH
	load8! &34	# 5003	[c=2]movdi_push_pop
	store8! &3 	#X2
	load4! &33	# 5004	[c=2]movsi_push_pop
	store8! &8 	#X7
	push! &0		# 10577	[c=4]movdi_to_tr_unspec/1
	add! 320		# 10584	[c=4]*adddi/0
	store8! &6 	#X5	# 10582	[c=4]movdi_from_tr_unspec/0
	load8! &22	# 13053	[c=2]movdf_push_pop
	store8! &1 	#AR
	load8! &7 	#X7	# 13054	[c=5]movdi_to_tr_unspec/1
	add! 1		# 13056	[c=4]*adddi/0
	store8! &10 	#X9	# 13058	[c=4]movsi_from_tr_unspec/0
	load8! &5 	#X5	# 13059	[c=5]movdi_to_tr_unspec/1
	add! 16		# 13061	[c=4]*adddi/0
	store8! &4 	#X3	# 13062	[c=4]movdi_from_tr_unspec/0
	load4! &19	# 13063	[c=5]movsi_to_tr_unspec/1
	add! -1		# 13065	[c=4]*adddi/0
	store8! &14 	#X13	# 13067	[c=4]movsi_from_tr_unspec/0
	push! 0x0000000000000000		# 13068	[c=4]pushdf1_not_fp/0
	load8! &1 	#AR	# 13069	[c=4]pushdf1_not_fp/1
	call! __nedf2		# 13070	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH EQ0	# 13071	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_not_zero! .L468.l_ocf5a76
	# END CBRANCH
.L385.l_ocf5a76:
	# CBRANCH	# 5121	[c=12]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &14 	#X13
	add! -2147483648	
	lt_u	
	jump_zero! .L234.l_ocf5a76
	# END CBRANCH
	# CBRANCH	# 5123	[c=12]cbranchsi4_internal
	push! 16	
	add! -2147483648	
	load4! &14 	#X13
	add! -2147483648	
	lt_u	
	jump_zero! .L285.l_ocf5a76
	# END CBRANCH
.L238.l_ocf5a76:
	push! .Li_zeroes_4582.l_ocf5a76		# 5125	[c=3]movdi_to_tr_unspec/0
	load8! &6 	#X5	# 5127	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	push! 16		# 5129	[c=3]movdi_to_tr_unspec/0
	load8! &6 	#X5	# 5131	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &2 	#X2	# 5138	[c=5]movdi_to_tr_unspec/1
	add! 16		# 5140	[c=4]*adddi/0
	store8! &3 	#X2	# 5141	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 5144	[c=4]movdi_push_pop
	store8! &35
	load8! &7 	#X7	# 5145	[c=5]movdi_to_tr_unspec/1
	add! 1		# 5147	[c=4]*adddi/0
	store8! &8 	#X7	# 12518	[c=4]movsi_from_tr_unspec/0
	load4! &7 	#X7	# 5154	[c=4]movsi_push_pop
	store4! &34
	# CBRANCH	# 5155	[c=12]cbranchsi4_internal
	push! 7	
	add! -2147483648	
	load4! &8 	#X7
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L236.l_ocf5a76
	# END CBRANCH
	load8! &5 	#X5	# 5162	[c=5]movdi_to_tr_unspec/1
	add! 16		# 5164	[c=4]*adddi/0
	store8! &6 	#X5	# 5165	[c=4]movdi_from_tr_unspec/0
	load8! &13 	#X13	# 5188	[c=5]movdi_to_tr_unspec/1
	add! -16		# 5190	[c=4]*adddi/0
	store8! &14 	#X13	# 12516	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 5198	[c=12]cbranchsi4_internal
	push! 16	
	add! -2147483648	
	load4! &14 	#X13
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L238.l_ocf5a76
	# END CBRANCH
.L482.l_ocf5a76:
	load8! &7 	#X7	# 5200	[c=5]movdi_to_tr_unspec/1
	add! 1		# 5202	[c=4]*adddi/0
	store8! &10 	#X9	# 12514	[c=4]movsi_from_tr_unspec/0
	load8! &5 	#X5	# 5209	[c=5]movdi_to_tr_unspec/1
	add! 16		# 5211	[c=4]*adddi/0
	store8! &2 	#X1	# 5212	[c=4]movdi_from_tr_unspec/0
.L235.l_ocf5a76:
	push! .Li_zeroes_4582.l_ocf5a76		# 5216	[c=3]movdi_to_tr_unspec/0
	load8! &6 	#X5	# 5218	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load4! &13 	#X13	# 5220	[c=5]movsi_to_tr_unspec/1
	sigx4		# 5222	[c=6]*extendsidi2
	store8! &1 	#AR	# 5223	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 5225	[c=5]movdi_to_tr_unspec/1
	load8! &6 	#X5	# 5227	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &0 	#AR	# 5234	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 5236	[c=6]*adddi/2
	add
	store8! &3 	#X2	# 5237	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 5240	[c=4]movdi_push_pop
	store8! &35
	load4! &9 	#X9	# 5241	[c=4]movsi_push_pop
	store4! &34
	# CBRANCH	# 5242	[c=12]cbranchsi4_internal
	push! 7	
	add! -2147483648	
	load4! &10 	#X9
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L239.l_ocf5a76
	# END CBRANCH
	load8! &9 	#X9	# 5244	[c=5]movdi_to_tr_unspec/1
	add! 1		# 5246	[c=4]*adddi/0
	store8! &10 	#X9	# 12512	[c=4]movsi_from_tr_unspec/0
	load8! &1 	#X1	# 5253	[c=5]movdi_to_tr_unspec/1
	add! 16		# 5255	[c=4]*adddi/0
	store8! &4 	#X3	# 5256	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 404	[c=4]movdi_push_pop
	store8! &6 	#X5
	jump! .L234.l_ocf5a76		# 13571	[c=4]jump
.L279.l_ocf5a76:
	load4! &12 	#X12	# 113	[c=4]movsi_push_pop
	store8! &8 	#X7
	# CBRANCH	# 13074	[c=12]cbranchsi4_internal
	load4! &2 	#X2
	push! 1	
	xor	
	push! 1	
	lt_u	
	jump_zero! .L469.l_ocf5a76
	# END CBRANCH
.L139.l_ocf5a76:
	# CBRANCH	# 2657	[c=12]cbranchdi4_internal
	push! 9	
	load8! &2 	#X1
	lt_u	
	not	
	jump_zero! .L470.l_ocf5a76
	# END CBRANCH
.L250.l_ocf5a76:
	load8! &1 	#X1	# 2663	[c=5]movdi_to_tr_unspec/1
	add! 48		# 2665	[c=4]*adddi/0
	store1! (+ &0 327)	# 12608	[c=4]movqi_from_tr_unspec/0
	load4! &7 	#X7	# 152	[c=4]movsi_push_pop
	store8! &13 	#X12
	push! 1		# 153	[c=4]movsi_push_pop
	store8! &14 	#X13
	push! &0		# 11824	[c=4]movdi_to_tr_unspec/1
	add! 280		# 11831	[c=4]*adddi/0
	add! 39		# 161	[c=4]*adddi/0
	store8! &5 	#X4	# 162	[c=4]movdi_from_tr_unspec/0
	jump! .L143.l_ocf5a76		# 13575	[c=4]jump
.L158.l_ocf5a76:
	push! &0		# 11549	[c=4]movdi_to_tr_unspec/1
	add! 256		# 11556	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 11558	[c=0]*peep2_pop_pusharg
	load8! &11 	#X10	# 3120	[c=4]pushdi1_not_fp/1
	load8! &17 	#X15	# 3121	[c=4]pushdi1_not_fp/1
	load8! &4 	#X1	# 9199	[c=4]movdi_push_pop
	store8! &20
	call! __ssprint_r		# 3122	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	load8! &16	# 9200	[c=2]movdi_push_pop
	store8! &2 	#X1
	# CBRANCH EQ0	# 3124	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L13.l_ocf5a76
	# END CBRANCH
	load8! &34	# 3126	[c=2]movdi_push_pop
	store8! &3 	#X2
	push! &0		# 11533	[c=4]movdi_to_tr_unspec/1
	add! 320		# 11540	[c=4]*adddi/0
	store8! &4 	#X3	# 11538	[c=4]movdi_from_tr_unspec/0
	jump! .L157.l_ocf5a76		# 13577	[c=4]jump
.L160.l_ocf5a76:
	push! &0		# 11495	[c=4]movdi_to_tr_unspec/1
	add! 256		# 11502	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 11504	[c=0]*peep2_pop_pusharg
	load8! &11 	#X10	# 3186	[c=4]pushdi1_not_fp/1
	load8! &17 	#X15	# 3187	[c=4]pushdi1_not_fp/1
	call! __ssprint_r		# 3188	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	# CBRANCH EQ0	# 3190	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L13.l_ocf5a76
	# END CBRANCH
	load8! &34	# 3192	[c=2]movdi_push_pop
	store8! &3 	#X2
	push! &0		# 11479	[c=4]movdi_to_tr_unspec/1
	add! 320		# 11486	[c=4]*adddi/0
	store8! &4 	#X3	# 11484	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 13077	[c=12]cbranchsi4_internal
	load4! &14 	#X14
	push! 128	
	xor	
	push! 1	
	lt_u	
	jump_zero! .L161.l_ocf5a76
	# END CBRANCH
	jump! .L442.l_ocf5a76		# 13580	[c=4]jump
.L174.l_ocf5a76:
	push! &0		# 11296	[c=4]movdi_to_tr_unspec/1
	add! 256		# 11303	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 11305	[c=0]*peep2_pop_pusharg
	load8! &11 	#X10	# 3589	[c=4]pushdi1_not_fp/1
	load8! &17 	#X15	# 3590	[c=4]pushdi1_not_fp/1
	call! __ssprint_r		# 3591	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	# CBRANCH EQ0	# 3593	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L13.l_ocf5a76
	# END CBRANCH
	load8! &34	# 3595	[c=2]movdi_push_pop
	store8! &3 	#X2
	push! &0		# 11280	[c=4]movdi_to_tr_unspec/1
	add! 320		# 11287	[c=4]*adddi/0
	store8! &4 	#X3	# 11285	[c=4]movdi_from_tr_unspec/0
	jump! .L175.l_ocf5a76		# 13582	[c=4]jump
.L384.l_ocf5a76:
	load4! &28	# 3906	[c=2]movsi_push_pop
	store8! &6 	#X5
	# CBRANCH	# 3907	[c=12]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &6 	#X5
	add! -2147483648	
	lt_u	
	jump_zero! .L471.l_ocf5a76
	# END CBRANCH
	load4! &19	# 4270	[c=2]movsi_push_pop
	store8! &6 	#X5
	# CBRANCH	# 4271	[c=14]cbranchsi4_internal
	load4! &18
	add! -2147483648	
	load4! &6 	#X5
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L472.l_ocf5a76
	# END CBRANCH
	# CBRANCH	# 4274	[c=12]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &6 	#X5
	add! -2147483648	
	lt_u	
	jump_zero! .L204.l_ocf5a76
	# END CBRANCH
.L479.l_ocf5a76:
	load8! &4 	#X4	# 4276	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 4278	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load4! &5 	#X5	# 4280	[c=5]movsi_to_tr_unspec/1
	sigx4		# 4282	[c=6]*extendsidi2
	store8! &1 	#AR	# 4283	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 4285	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 4287	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &0 	#AR	# 4294	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 4296	[c=6]*adddi/2
	add
	store8! &3 	#X2	# 4297	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 4300	[c=4]movdi_push_pop
	store8! &35
	load4! &33	# 10924	[c=5]movsi_to_tr_unspec/1
	add! 1		# 4304	[c=4]*adddi/0
	store8! &1 	#AR	# 4305	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 10927	[c=4]movsi_push_pop
	store4! &34
	# CBRANCH	# 4312	[c=12]cbranchsi4_internal
	push! 7	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L205.l_ocf5a76
	# END CBRANCH
	load8! &3 	#X3	# 4319	[c=5]movdi_to_tr_unspec/1
	add! 16		# 4321	[c=4]*adddi/0
	store8! &4 	#X3	# 4322	[c=4]movdi_from_tr_unspec/0
.L204.l_ocf5a76:
	# CBRANCH	# 4345	[c=12]cbranchsi4_internal
	load4! &5 	#X5
	add! -2147483648	
	push! 0	
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L473.l_ocf5a76
	# END CBRANCH
.L206.l_ocf5a76:
	load8! &5 	#X5	# 10886	[c=4]movdi_push_pop
	store8! &1 	#AR
	load4! &18	# 10887	[c=5]movsi_to_tr_unspec/1
	load8! &6 	#X5	# 4354	[c=14]*subdi3/2
	sub
	store8! &6 	#X5	# 12546	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 4361	[c=12]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &6 	#X5
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L474.l_ocf5a76
	# END CBRANCH
.L207.l_ocf5a76:
	load4! &28	# 4509	[c=2]movsi_push_pop
	store8! &1 	#AR
	# CBRANCH	# 4510	[c=14]cbranchsi4_internal
	load4! &0 	#AR
	add! -2147483648	
	load4! &20
	add! -2147483648	
	lt_u	
	jump_zero! .L475.l_ocf5a76
	# END CBRANCH
.L213.l_ocf5a76:
	load8! &21	# 4524	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 4526	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load8! &20	# 4528	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 4530	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &20	# 4537	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 4539	[c=6]*adddi/2
	add
	store8! &3 	#X2	# 4540	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 4543	[c=4]movdi_push_pop
	store8! &35
	load4! &33	# 10808	[c=5]movsi_to_tr_unspec/1
	add! 1		# 4547	[c=4]*adddi/0
	store8! &2 	#X1	# 4548	[c=4]movdi_from_tr_unspec/0
	load4! &1 	#X1	# 10811	[c=4]movsi_push_pop
	store4! &34
	# CBRANCH	# 4555	[c=12]cbranchsi4_internal
	push! 7	
	add! -2147483648	
	load4! &2 	#X1
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L215.l_ocf5a76
	# END CBRANCH
	load8! &3 	#X3	# 4562	[c=5]movdi_to_tr_unspec/1
	add! 16		# 4564	[c=4]*adddi/0
	store8! &4 	#X3	# 4565	[c=4]movdi_from_tr_unspec/0
.L216.l_ocf5a76:
	load4! &18	# 10768	[c=5]movsi_to_tr_unspec/1
	store8! &2 	#X1	# 4592	[c=4]movdi_from_tr_unspec/0
	load4! &19	# 9787	[c=2]movsi_push_pop
	store8! &6 	#X5
	load8! &5 	#X5	# 4594	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 4596	[c=14]*subdi3/2
	sub
	store8! &2 	#X1	# 12794	[c=4]movdi_from_tr_unspec/0
	load8! &5 	#X5	# 12795	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 4610	[c=14]*subdi3/2
	sub
	store8! &1 	#AR	# 4611	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 10773	[c=4]movsi_push_pop
	store8! &6 	#X5
	# CBRANCH	# 4618	[c=12]cbranchsi4_internal
	load4! &1 	#X1
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	jump_zero! .L217.l_ocf5a76
	# END CBRANCH
	load4! &1 	#X1	# 4619	[c=4]movsi_push_pop
	store8! &6 	#X5
.L217.l_ocf5a76:
	# CBRANCH	# 4621	[c=12]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &6 	#X5
	add! -2147483648	
	lt_u	
	jump_zero! .L218.l_ocf5a76
	# END CBRANCH
	load4! &18	# 4623	[c=5]movsi_to_tr_unspec/1
	sigx4		# 4625	[c=6]*extendsidi2
	load8! &5 	#X4	# 10761	[c=6]*adddi/2
	add
	load8! &4 	#X3	# 4635	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load4! &5 	#X5	# 4637	[c=5]movsi_to_tr_unspec/1
	sigx4		# 4639	[c=6]*extendsidi2
	store8! &2 	#X1	# 4640	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 4642	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 4644	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &1 	#X1	# 4651	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 4653	[c=6]*adddi/2
	add
	store8! &3 	#X2	# 4654	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 4657	[c=4]movdi_push_pop
	store8! &35
	load4! &33	# 10764	[c=5]movsi_to_tr_unspec/1
	add! 1		# 4661	[c=4]*adddi/0
	store8! &2 	#X1	# 4662	[c=4]movdi_from_tr_unspec/0
	load4! &1 	#X1	# 10767	[c=4]movsi_push_pop
	store4! &34
	# CBRANCH	# 4669	[c=12]cbranchsi4_internal
	push! 7	
	add! -2147483648	
	load4! &2 	#X1
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L219.l_ocf5a76
	# END CBRANCH
	load8! &3 	#X3	# 4676	[c=5]movdi_to_tr_unspec/1
	add! 16		# 4678	[c=4]*adddi/0
	store8! &4 	#X3	# 4679	[c=4]movdi_from_tr_unspec/0
.L218.l_ocf5a76:
	# CBRANCH	# 4716	[c=12]cbranchsi4_internal
	load4! &5 	#X5
	add! -2147483648	
	push! 0	
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L476.l_ocf5a76
	# END CBRANCH
.L220.l_ocf5a76:
	load8! &5 	#X5	# 10714	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 10716	[c=14]*subdi3/2
	sub
	neg		# 10717	[c=4]*neg_tr
	store8! &5 	#X4	# 12538	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 4732	[c=12]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &5 	#X4
	add! -2147483648	
	lt_u	
	jump_zero! .L175.l_ocf5a76
	# END CBRANCH
	load4! &33	# 4734	[c=2]movsi_push_pop
	store8! &1 	#AR
	# CBRANCH	# 4735	[c=12]cbranchsi4_internal
	push! 16	
	add! -2147483648	
	load4! &5 	#X4
	add! -2147483648	
	lt_u	
	jump_zero! .L221.l_ocf5a76
	# END CBRANCH
.L224.l_ocf5a76:
	push! .Li_zeroes_4582.l_ocf5a76		# 4737	[c=3]movdi_to_tr_unspec/0
	load8! &4 	#X3	# 4739	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	push! 16		# 4741	[c=3]movdi_to_tr_unspec/0
	load8! &4 	#X3	# 4743	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &2 	#X2	# 4750	[c=5]movdi_to_tr_unspec/1
	add! 16		# 4752	[c=4]*adddi/0
	store8! &3 	#X2	# 4753	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 4756	[c=4]movdi_push_pop
	store8! &35
	load8! &0 	#AR	# 4757	[c=5]movdi_to_tr_unspec/1
	add! 1		# 4759	[c=4]*adddi/0
	store8! &1 	#AR	# 4760	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 10712	[c=4]movsi_push_pop
	store4! &34
	# CBRANCH	# 4767	[c=12]cbranchsi4_internal
	push! 7	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L222.l_ocf5a76
	# END CBRANCH
	load8! &3 	#X3	# 4774	[c=5]movdi_to_tr_unspec/1
	add! 16		# 4776	[c=4]*adddi/0
	store8! &4 	#X3	# 4777	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 4800	[c=5]movdi_to_tr_unspec/1
	add! -16		# 4802	[c=4]*adddi/0
	store8! &5 	#X4	# 12536	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 4810	[c=12]cbranchsi4_internal
	push! 16	
	add! -2147483648	
	load4! &5 	#X4
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L224.l_ocf5a76
	# END CBRANCH
.L221.l_ocf5a76:
	push! .Li_zeroes_4582.l_ocf5a76		# 4813	[c=3]movdi_to_tr_unspec/0
	load8! &4 	#X3	# 4815	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load4! &4 	#X4	# 4817	[c=5]movsi_to_tr_unspec/1
	sigx4		# 4819	[c=6]*extendsidi2
	store8! &2 	#X1	# 4820	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 4822	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 4824	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &1 	#X1	# 4831	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 4833	[c=6]*adddi/2
	add
	store8! &3 	#X2	# 4834	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 4837	[c=4]movdi_push_pop
	store8! &35
	load8! &0 	#AR	# 4838	[c=5]movdi_to_tr_unspec/1
	add! 1		# 4840	[c=4]*adddi/0
	store8! &1 	#AR	# 4841	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 10675	[c=4]movsi_push_pop
	store4! &34
	# CBRANCH	# 4848	[c=12]cbranchsi4_internal
	push! 7	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L225.l_ocf5a76
	# END CBRANCH
	load8! &3 	#X3	# 4855	[c=5]movdi_to_tr_unspec/1
	add! 16		# 4857	[c=4]*adddi/0
	store8! &4 	#X3	# 4858	[c=4]movdi_from_tr_unspec/0
	jump! .L175.l_ocf5a76		# 13590	[c=4]jump
.L172.l_ocf5a76:
	push! &0		# 11335	[c=4]movdi_to_tr_unspec/1
	add! 256		# 11342	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 11344	[c=0]*peep2_pop_pusharg
	load8! &11 	#X10	# 3510	[c=4]pushdi1_not_fp/1
	load8! &17 	#X15	# 3511	[c=4]pushdi1_not_fp/1
	call! __ssprint_r		# 3512	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	# CBRANCH EQ0	# 3514	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L13.l_ocf5a76
	# END CBRANCH
	load8! &34	# 3516	[c=2]movdi_push_pop
	store8! &3 	#X2
	push! &0		# 11319	[c=4]movdi_to_tr_unspec/1
	add! 320		# 11326	[c=4]*adddi/0
	store8! &4 	#X3	# 11324	[c=4]movdi_from_tr_unspec/0
	jump! .L167.l_ocf5a76		# 13592	[c=4]jump
.L142.l_ocf5a76:
	# CBRANCH EQ	# 2594	[c=12]cbranchqi4_internal
	load1! &2 	#X2
	push! 48	
	xor	
	jump_zero! .L477.l_ocf5a76
	# END CBRANCH
	load8! &11 	#X11	# 2619	[c=5]movdi_to_tr_unspec/1
	add! -2		# 2621	[c=4]*adddi/0
	store8! &2 	#X1	# 2622	[c=4]movdi_from_tr_unspec/0
	push! 48		# 11833	[c=3]movqi_to_tr_unspec/0
	load8! &5 	#X4	# 11835	[c=5]movdi_to_tr_unspec/1
	add! -1		# 11837	[c=4]*adddi/0
	store1		# 11838	[c=4]*peep2_mov_from_tr_to_mem_tr_ind_popqi_unspec
	push! &0		# 11847	[c=4]movdi_to_tr_unspec/1
	add! 280		# 11854	[c=4]*adddi/0
	add! 40		# 2641	[c=4]*adddi/0
	load8! &2 	#X1	# 2646	[c=14]*subdi3/2
	sub
	store8! &14 	#X13	# 12610	[c=4]movsi_from_tr_unspec/0
	load4! &7 	#X7	# 189	[c=4]movsi_push_pop
	store8! &13 	#X12
	load8! &1 	#X1	# 190	[c=4]movdi_push_pop
	store8! &5 	#X4
	jump! .L143.l_ocf5a76		# 13595	[c=4]jump
.L260.l_ocf5a76:
	load8! &6 	#X6	# 28	[c=4]movdi_push_pop
	store8! &3 	#X2
	load8! &2 	#X2	# 13080	[c=5]movdi_to_tr_unspec/1
	add! 1		# 13082	[c=4]*adddi/0
	store8! &1 	#AR	# 13083	[c=4]movdi_from_tr_unspec/0
	push! 0		# 13084	[c=4]movqi_push_pop
	store1! &27
	push! 0		# 13085	[c=4]movqi_push_pop
	store8! &2 	#X1
	push! 0		# 13086	[c=4]movqi_push_pop
	store8! &3 	#X2
	push! -1		# 13087	[c=4]movsi_push_pop
	store8! &10 	#X9
	push! 0		# 13088	[c=4]movsi_push_pop
	store8! &9 	#X8
	push! 0		# 13089	[c=4]movsi_push_pop
	store8! &8 	#X7
	jump! .L14.l_ocf5a76		# 13597	[c=4]jump
.L265.l_ocf5a76:
	load8! &0 	#AR	# 35	[c=4]movdi_push_pop
	store8! &61
	load8! &6 	#X6	# 13092	[c=4]movdi_push_pop
	store8! &1 	#AR
	jump! .L14.l_ocf5a76		# 13599	[c=4]jump
.L284.l_ocf5a76:
	push! &0		# 11691	[c=4]movdi_to_tr_unspec/1
	add! 280		# 11698	[c=4]*adddi/0
	add! 40		# 201	[c=4]*adddi/0
	store8! &5 	#X4	# 202	[c=4]movdi_from_tr_unspec/0
	jump! .L143.l_ocf5a76		# 13601	[c=4]jump
.L135.l_ocf5a76:
	load4! &1 	#X1	# 11926	[c=5]movsi_to_tr_unspec/1
	store8! &2 	#X1	# 11928	[c=4]movdi_from_tr_unspec/0
	jump! .L134.l_ocf5a76		# 13603	[c=4]jump
.L131.l_ocf5a76:
	load4! &1 	#X1	# 11938	[c=5]movsi_to_tr_unspec/1
	store8! &2 	#X1	# 11940	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 94	[c=4]movdi_push_pop
	store8! &61
	push! 1		# 95	[c=4]movsi_push_pop
	store8! &3 	#X2
	push! 0		# 13095	[c=4]movqi_push_pop
	store1! &27
	push! 0		# 13096	[c=4]movqi_push_pop
	store8! &1 	#AR
	jump! .L56.l_ocf5a76		# 13605	[c=4]jump
.L121.l_ocf5a76:
	load4! &1 	#X1	# 11956	[c=5]movsi_to_tr_unspec/1
	store8! &2 	#X1	# 11958	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 88	[c=4]movdi_push_pop
	store8! &61
	push! 0		# 89	[c=4]movsi_push_pop
	store8! &3 	#X2
	push! 0		# 13099	[c=4]movqi_push_pop
	store1! &27
	push! 0		# 13100	[c=4]movqi_push_pop
	store8! &1 	#AR
	jump! .L56.l_ocf5a76		# 13607	[c=4]jump
.L54.l_ocf5a76:
	load8! &60	# 9244	[c=2]movdi_push_pop
	store8! &12 	#X11
	load8! &11 	#X11	# 1076	[c=7]movsi_to_tr_unspec/2
	load4	
	#	
	store8! &1 	#AR	# 1078	[c=4]movsi_from_tr_unspec/0
	load4! &0 	#AR	# 1080	[c=5]movsi_to_tr_unspec/1
	sigx4		# 1082	[c=6]*extendsidi2
	store8! &2 	#X1	# 1083	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 1085	[c=5]movsi_to_tr_unspec/1
	sigx4		# 1087	[c=6]*extendsidi2
	store8! &1 	#AR	# 1088	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 49	[c=4]movdi_push_pop
	store8! &61
	jump! .L53.l_ocf5a76		# 13609	[c=4]jump
.L58.l_ocf5a76:
	load8! &60	# 9246	[c=2]movdi_push_pop
	store8! &5 	#X4
	load8! &4 	#X4	# 1143	[c=7]movdf_to_tr_unspec/2
	load8	
	#	
	store8! &14 	#X13	# 1145	[c=4]movdf_from_tr_unspec/0
	load8! &13 	#X13	# 12350	[c=4]movdi_push_pop
	store8! &23
	jump! .L59.l_ocf5a76		# 13611	[c=4]jump
.L453.l_ocf5a76:
	load4! &17	# 2077	[c=5]movsi_to_tr_unspec/1
	sigx4		# 2079	[c=6]*extendsidi2
	load8! &3 	#X2	# 2084	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	jump! .L5.l_ocf5a76		# 13613	[c=4]jump
.L278.l_ocf5a76:
	load8! &2 	#X2	# 108	[c=4]movdi_push_pop
	store8! &61
	push! 2		# 109	[c=4]movsi_push_pop
	store8! &3 	#X2
	push! 0		# 13103	[c=4]movqi_push_pop
	store1! &27
	push! 0		# 13104	[c=4]movqi_push_pop
	store8! &1 	#AR
	jump! .L56.l_ocf5a76		# 13615	[c=4]jump
.L470.l_ocf5a76:
	push! &0		# 11804	[c=4]movdi_to_tr_unspec/1
	add! 280		# 11811	[c=4]*adddi/0
	add! 40		# 136	[c=4]*adddi/0
	store8! &5 	#X4	# 137	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 2678	[c=5]movdi_to_tr_unspec/1
	rem_u! 10	# 2680	[c=28]*umoddi3/0
	add! 48		# 2689	[c=4]*adddi/0
	store8! &3 	#X2	# 12605	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 12606	[c=5]movdi_to_tr_unspec/1
	add! -1		# 2703	[c=4]*adddi/0
	store8! &5 	#X4	# 2704	[c=4]movdi_from_tr_unspec/0
	load1! &2 	#X2	# 2708	[c=5]movqi_to_tr_unspec/1
	load8! &5 	#X4	# 2710	[c=4]movqi_from_tr_unspec/1
	store1	
	#	
	load8! &1 	#X1	# 2712	[c=5]movdi_to_tr_unspec/1
	div_u! 10	# 2714	[c=28]*udivdi3/0
	store8! &3 	#X2	# 2715	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 2717	[c=12]cbranchdi4_internal
	push! 9	
	load8! &2 	#X1
	lt_u	
	jump_zero! .L478.l_ocf5a76
	# END CBRANCH
.L282.l_ocf5a76:
	load8! &2 	#X2	# 139	[c=4]movdi_push_pop
	store8! &2 	#X1
	load8! &1 	#X1	# 13107	[c=5]movdi_to_tr_unspec/1
	rem_u! 10	# 13109	[c=28]*umoddi3/0
	add! 48		# 13111	[c=4]*adddi/0
	store8! &3 	#X2	# 13112	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 13113	[c=5]movdi_to_tr_unspec/1
	add! -1		# 13115	[c=4]*adddi/0
	store8! &5 	#X4	# 13116	[c=4]movdi_from_tr_unspec/0
	load1! &2 	#X2	# 13117	[c=5]movqi_to_tr_unspec/1
	load8! &5 	#X4	# 13119	[c=4]movqi_from_tr_unspec/1
	store1	
	#	
	load8! &1 	#X1	# 13120	[c=5]movdi_to_tr_unspec/1
	div_u! 10	# 13122	[c=28]*udivdi3/0
	store8! &3 	#X2	# 13123	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 13124	[c=12]cbranchdi4_internal
	push! 9	
	load8! &2 	#X1
	lt_u	
	not	
	jump_zero! .L282.l_ocf5a76
	# END CBRANCH
.L478.l_ocf5a76:
	push! &0		# 11783	[c=4]movdi_to_tr_unspec/1
	add! 280		# 11790	[c=4]*adddi/0
	add! 40		# 2726	[c=4]*adddi/0
	load8! &5 	#X4	# 2731	[c=14]*subdi3/2
	sub
	store8! &14 	#X13	# 12600	[c=4]movsi_from_tr_unspec/0
	load4! &7 	#X7	# 192	[c=4]movsi_push_pop
	store8! &13 	#X12
	jump! .L143.l_ocf5a76		# 13618	[c=4]jump
.L472.l_ocf5a76:
	load4! &18	# 4272	[c=2]movsi_push_pop
	store8! &6 	#X5
	# CBRANCH	# 13127	[c=12]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &6 	#X5
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L479.l_ocf5a76
	# END CBRANCH
	jump! .L204.l_ocf5a76		# 13622	[c=4]jump
.L475.l_ocf5a76:
	load8! &12 	#X12	# 4512	[c=5]movdi_to_tr_unspec/1
	and! 0x1		# 4514	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 12542	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L213.l_ocf5a76
	# END CBRANCH
	load4! &18	# 10058	[c=5]movsi_to_tr_unspec/1
	store8! &2 	#X1	# 5834	[c=4]movdi_from_tr_unspec/0
	load4! &19	# 10051	[c=2]movsi_push_pop
	store8! &6 	#X5
	load8! &5 	#X5	# 5836	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 5838	[c=14]*subdi3/2
	sub
	store8! &2 	#X1	# 12791	[c=4]movdi_from_tr_unspec/0
	load8! &5 	#X5	# 12792	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 5852	[c=14]*subdi3/2
	sub
	store8! &1 	#AR	# 5853	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 10063	[c=4]movsi_push_pop
	store8! &6 	#X5
	# CBRANCH	# 5860	[c=12]cbranchsi4_internal
	load4! &1 	#X1
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	jump_zero! .L218.l_ocf5a76
	# END CBRANCH
	load4! &1 	#X1	# 5861	[c=4]movsi_push_pop
	store8! &6 	#X5
	# CBRANCH	# 13130	[c=12]cbranchsi4_internal
	load4! &5 	#X5
	add! -2147483648	
	push! 0	
	add! -2147483648	
	lt_u	
	jump_zero! .L220.l_ocf5a76
	# END CBRANCH
	jump! .L476.l_ocf5a76		# 13625	[c=4]jump
.L440.l_ocf5a76:
	load4! &12 	#X12	# 126	[c=4]movsi_push_pop
	store8! &8 	#X7
	# CBRANCH	# 13133	[c=12]cbranchdi4_internal
	push! 9	
	load8! &2 	#X1
	lt_u	
	jump_zero! .L250.l_ocf5a76
	# END CBRANCH
	jump! .L470.l_ocf5a76		# 13628	[c=4]jump
.L473.l_ocf5a76:
	push! 0		# 4346	[c=4]movsi_push_pop
	store8! &6 	#X5
	load8! &5 	#X5	# 13136	[c=4]movdi_push_pop
	store8! &1 	#AR
	load4! &18	# 13137	[c=5]movsi_to_tr_unspec/1
	load8! &6 	#X5	# 13139	[c=14]*subdi3/2
	sub
	store8! &6 	#X5	# 13141	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 13142	[c=12]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &6 	#X5
	add! -2147483648	
	lt_u	
	jump_zero! .L207.l_ocf5a76
	# END CBRANCH
	jump! .L474.l_ocf5a76		# 13631	[c=4]jump
.L462.l_ocf5a76:
	load8! &34	# 3684	[c=2]movdi_push_pop
	store8! &3 	#X2
	jump! .L175.l_ocf5a76		# 13633	[c=4]jump
.L476.l_ocf5a76:
	push! 0		# 4717	[c=4]movsi_push_pop
	store8! &6 	#X5
	jump! .L220.l_ocf5a76		# 13635	[c=4]jump
.L474.l_ocf5a76:
	load4! &33	# 4363	[c=2]movsi_push_pop
	store8! &1 	#AR
	# CBRANCH	# 4364	[c=12]cbranchsi4_internal
	push! 16	
	add! -2147483648	
	load4! &6 	#X5
	add! -2147483648	
	lt_u	
	jump_zero! .L208.l_ocf5a76
	# END CBRANCH
.L211.l_ocf5a76:
	push! .Li_zeroes_4582.l_ocf5a76		# 4366	[c=3]movdi_to_tr_unspec/0
	load8! &4 	#X3	# 4368	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	push! 16		# 4370	[c=3]movdi_to_tr_unspec/0
	load8! &4 	#X3	# 4372	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &2 	#X2	# 4379	[c=5]movdi_to_tr_unspec/1
	add! 16		# 4381	[c=4]*adddi/0
	store8! &3 	#X2	# 4382	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 4385	[c=4]movdi_push_pop
	store8! &35
	load8! &0 	#AR	# 4386	[c=5]movdi_to_tr_unspec/1
	add! 1		# 4388	[c=4]*adddi/0
	store8! &1 	#AR	# 4389	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 10885	[c=4]movsi_push_pop
	store4! &34
	# CBRANCH	# 4396	[c=12]cbranchsi4_internal
	push! 7	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L209.l_ocf5a76
	# END CBRANCH
	load8! &3 	#X3	# 4403	[c=5]movdi_to_tr_unspec/1
	add! 16		# 4405	[c=4]*adddi/0
	store8! &4 	#X3	# 4406	[c=4]movdi_from_tr_unspec/0
	load8! &5 	#X5	# 4429	[c=5]movdi_to_tr_unspec/1
	add! -16		# 4431	[c=4]*adddi/0
	store8! &6 	#X5	# 12544	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 4439	[c=12]cbranchsi4_internal
	push! 16	
	add! -2147483648	
	load4! &6 	#X5
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L211.l_ocf5a76
	# END CBRANCH
.L208.l_ocf5a76:
	push! .Li_zeroes_4582.l_ocf5a76		# 4442	[c=3]movdi_to_tr_unspec/0
	load8! &4 	#X3	# 4444	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load4! &5 	#X5	# 4446	[c=5]movsi_to_tr_unspec/1
	sigx4		# 4448	[c=6]*extendsidi2
	store8! &2 	#X1	# 4449	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 4451	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 4453	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &1 	#X1	# 4460	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 4462	[c=6]*adddi/2
	add
	store8! &3 	#X2	# 4463	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 4466	[c=4]movdi_push_pop
	store8! &35
	load8! &0 	#AR	# 4467	[c=5]movdi_to_tr_unspec/1
	add! 1		# 4469	[c=4]*adddi/0
	store8! &1 	#AR	# 4470	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 10848	[c=4]movsi_push_pop
	store4! &34
	# CBRANCH	# 4477	[c=12]cbranchsi4_internal
	push! 7	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L212.l_ocf5a76
	# END CBRANCH
	load8! &3 	#X3	# 4484	[c=5]movdi_to_tr_unspec/1
	add! 16		# 4486	[c=4]*adddi/0
	store8! &4 	#X3	# 4487	[c=4]movdi_from_tr_unspec/0
	load4! &28	# 13145	[c=2]movsi_push_pop
	store8! &1 	#AR
	# CBRANCH	# 13146	[c=14]cbranchsi4_internal
	load4! &0 	#AR
	add! -2147483648	
	load4! &20
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L213.l_ocf5a76
	# END CBRANCH
	jump! .L475.l_ocf5a76		# 13638	[c=4]jump
.L433.l_ocf5a76:
	push! 64		# 491	[c=4]pushdi1_not_fp/0
	load8! &16 	#X15	# 492	[c=4]pushdi1_not_fp/1
	call! _malloc_r		# 493	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load8! &0 	#AR	# 495	[c=5]movdi_to_tr_unspec/1
	load8! &11 	#X10	# 497	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load8! &0 	#AR	# 499	[c=5]movdi_to_tr_unspec/1
	load8! &11 	#X10	# 501	[c=4]movdi_from_tr_unspec/1
	add! 24	
	store8	
	#	
	# CBRANCH EQ0	# 503	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L480.l_ocf5a76
	# END CBRANCH
	push! 64		# 513	[c=3]movsi_to_tr_unspec/0
	load8! &11 	#X10	# 515	[c=4]movsi_from_tr_unspec/1
	add! 32	
	store4	
	#	
	push! &0		# 13149	[c=4]movdi_to_tr_unspec/1
	add! 320		# 13151	[c=4]*adddi/0
	store8! &33	# 13152	[c=4]movdi_from_tr_unspec/0
	push! 0		# 13153	[c=4]movdi_push_pop
	store8! &35
	push! 0		# 13154	[c=4]movsi_push_pop
	store4! &34
	push! 0		# 13155	[c=4]movsi_push_pop
	store4! &20
	push! &0		# 13156	[c=4]movdi_to_tr_unspec/1
	add! 320		# 13158	[c=4]*adddi/0
	store8! &4 	#X3	# 13159	[c=4]movdi_from_tr_unspec/0
	push! 0		# 13160	[c=4]movdi_push_pop
	store8! &24
	push! 0		# 13161	[c=4]movsi_push_pop
	store4! &26
	push! 0		# 13162	[c=4]movsi_push_pop
	store4! &18
	jump! .L5.l_ocf5a76		# 13641	[c=4]jump
.L477.l_ocf5a76:
	push! &0		# 11866	[c=4]movdi_to_tr_unspec/1
	add! 280		# 11873	[c=4]*adddi/0
	add! 40		# 2603	[c=4]*adddi/0
	load8! &5 	#X4	# 2608	[c=14]*subdi3/2
	sub
	store8! &14 	#X13	# 12612	[c=4]movsi_from_tr_unspec/0
	load4! &7 	#X7	# 191	[c=4]movsi_push_pop
	store8! &13 	#X12
	jump! .L143.l_ocf5a76		# 13643	[c=4]jump
.L124.l_ocf5a76:
	load8! &4 	#X4	# 2290	[c=4]pushdi1_not_fp/1
	call! strlen		# 2291	[c=0]*call_value_pop_1/0
	store8! &1

	load4! &0 	#AR	# 11951	[c=4]movsi_push_pop
	store8! &14 	#X13
	load1! &26	# 2297	[c=2]movqi_push_pop
	store8! &1 	#AR
	load4! &13 	#X13	# 2298	[c=4]movsi_push_pop
	store8! &12 	#X11
	# CBRANCH	# 2299	[c=12]cbranchsi4_internal
	load4! &13 	#X13
	add! -2147483648	
	push! 0	
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L481.l_ocf5a76
	# END CBRANCH
	load8! &2 	#X2	# 204	[c=4]movdi_push_pop
	store8! &61
	load4! &7 	#X7	# 205	[c=4]movsi_push_pop
	store8! &13 	#X12
	push! 0		# 206	[c=4]movsi_push_pop
	store8! &10 	#X9
	push! 0		# 207	[c=4]movsi_push_pop
	store4! &19
.L492.l_ocf5a76:
	# CBRANCH EQ0	# 13165	[c=12]cbranchqi4_internal
	load1! &0 	#AR
	jump_not_zero! .L112.l_ocf5a76
	# END CBRANCH
	jump! .L149.l_ocf5a76		# 13647	[c=4]jump
.L236.l_ocf5a76:
	push! &0		# 10497	[c=4]movdi_to_tr_unspec/1
	add! 256		# 10504	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 10506	[c=0]*peep2_pop_pusharg
	load8! &11 	#X10	# 5178	[c=4]pushdi1_not_fp/1
	load8! &17 	#X15	# 5179	[c=4]pushdi1_not_fp/1
	call! __ssprint_r		# 5180	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	# CBRANCH EQ0	# 5182	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L13.l_ocf5a76
	# END CBRANCH
	load8! &34	# 5184	[c=2]movdi_push_pop
	store8! &3 	#X2
	load4! &33	# 5185	[c=2]movsi_push_pop
	store8! &8 	#X7
	push! &0		# 10481	[c=4]movdi_to_tr_unspec/1
	add! 320		# 10488	[c=4]*adddi/0
	store8! &6 	#X5	# 10486	[c=4]movdi_from_tr_unspec/0
	load8! &13 	#X13	# 13168	[c=5]movdi_to_tr_unspec/1
	add! -16		# 13170	[c=4]*adddi/0
	store8! &14 	#X13	# 13172	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 13173	[c=12]cbranchsi4_internal
	push! 16	
	add! -2147483648	
	load4! &14 	#X13
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L238.l_ocf5a76
	# END CBRANCH
	jump! .L482.l_ocf5a76		# 13651	[c=4]jump
.L185.l_ocf5a76:
	push! &0		# 11178	[c=4]movdi_to_tr_unspec/1
	add! 256		# 11185	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 11187	[c=0]*peep2_pop_pusharg
	load8! &11 	#X10	# 3814	[c=4]pushdi1_not_fp/1
	load8! &17 	#X15	# 3815	[c=4]pushdi1_not_fp/1
	call! __ssprint_r		# 3816	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	# CBRANCH EQ0	# 3818	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L13.l_ocf5a76
	# END CBRANCH
	load8! &34	# 3820	[c=2]movdi_push_pop
	store8! &3 	#X2
	load4! &33	# 3821	[c=2]movsi_push_pop
	store8! &1 	#AR
	push! &0		# 11162	[c=4]movdi_to_tr_unspec/1
	add! 320		# 11169	[c=4]*adddi/0
	store8! &4 	#X3	# 11167	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 13176	[c=5]movdi_to_tr_unspec/1
	add! -16		# 13178	[c=4]*adddi/0
	store8! &5 	#X4	# 13180	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 13181	[c=12]cbranchsi4_internal
	push! 16	
	add! -2147483648	
	load4! &5 	#X4
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L187.l_ocf5a76
	# END CBRANCH
	jump! .L184.l_ocf5a76		# 13654	[c=4]jump
.L209.l_ocf5a76:
	push! &0		# 10874	[c=4]movdi_to_tr_unspec/1
	add! 256		# 10881	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 10883	[c=0]*peep2_pop_pusharg
	load8! &11 	#X10	# 4419	[c=4]pushdi1_not_fp/1
	load8! &17 	#X15	# 4420	[c=4]pushdi1_not_fp/1
	call! __ssprint_r		# 4421	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	# CBRANCH EQ0	# 4423	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L13.l_ocf5a76
	# END CBRANCH
	load8! &34	# 4425	[c=2]movdi_push_pop
	store8! &3 	#X2
	load4! &33	# 4426	[c=2]movsi_push_pop
	store8! &1 	#AR
	push! &0		# 10858	[c=4]movdi_to_tr_unspec/1
	add! 320		# 10865	[c=4]*adddi/0
	store8! &4 	#X3	# 10863	[c=4]movdi_from_tr_unspec/0
	load8! &5 	#X5	# 13184	[c=5]movdi_to_tr_unspec/1
	add! -16		# 13186	[c=4]*adddi/0
	store8! &6 	#X5	# 13188	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 13189	[c=12]cbranchsi4_internal
	push! 16	
	add! -2147483648	
	load4! &6 	#X5
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L211.l_ocf5a76
	# END CBRANCH
	jump! .L208.l_ocf5a76		# 13657	[c=4]jump
.L222.l_ocf5a76:
	push! &0		# 10701	[c=4]movdi_to_tr_unspec/1
	add! 256		# 10708	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 10710	[c=0]*peep2_pop_pusharg
	load8! &11 	#X10	# 4790	[c=4]pushdi1_not_fp/1
	load8! &17 	#X15	# 4791	[c=4]pushdi1_not_fp/1
	call! __ssprint_r		# 4792	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	# CBRANCH EQ0	# 4794	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L13.l_ocf5a76
	# END CBRANCH
	load8! &34	# 4796	[c=2]movdi_push_pop
	store8! &3 	#X2
	load4! &33	# 4797	[c=2]movsi_push_pop
	store8! &1 	#AR
	push! &0		# 10685	[c=4]movdi_to_tr_unspec/1
	add! 320		# 10692	[c=4]*adddi/0
	store8! &4 	#X3	# 10690	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 13192	[c=5]movdi_to_tr_unspec/1
	add! -16		# 13194	[c=4]*adddi/0
	store8! &5 	#X4	# 13196	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 13197	[c=12]cbranchsi4_internal
	push! 16	
	add! -2147483648	
	load4! &5 	#X4
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L224.l_ocf5a76
	# END CBRANCH
	jump! .L221.l_ocf5a76		# 13660	[c=4]jump
.L156.l_ocf5a76:
	push! &0		# 11603	[c=4]movdi_to_tr_unspec/1
	add! 256		# 11610	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 11612	[c=0]*peep2_pop_pusharg
	load8! &11 	#X10	# 3053	[c=4]pushdi1_not_fp/1
	load8! &17 	#X15	# 3054	[c=4]pushdi1_not_fp/1
	load8! &4 	#X1	# 9197	[c=4]movdi_push_pop
	store8! &20
	call! __ssprint_r		# 3055	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	load8! &16	# 9198	[c=2]movdi_push_pop
	store8! &2 	#X1
	# CBRANCH EQ0	# 3057	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L13.l_ocf5a76
	# END CBRANCH
	load8! &34	# 3059	[c=2]movdi_push_pop
	store8! &3 	#X2
	push! &0		# 11587	[c=4]movdi_to_tr_unspec/1
	add! 320		# 11594	[c=4]*adddi/0
	store8! &4 	#X3	# 11592	[c=4]movdi_from_tr_unspec/0
	jump! .L151.l_ocf5a76		# 13662	[c=4]jump
.L471.l_ocf5a76:
	push! .LC7.l_ocf5a76		# 3909	[c=3]movdi_to_tr_unspec/0
	load8! &4 	#X3	# 3911	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	push! 1		# 3913	[c=3]movdi_to_tr_unspec/0
	load8! &4 	#X3	# 3915	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &2 	#X2	# 3922	[c=5]movdi_to_tr_unspec/1
	add! 1		# 3924	[c=4]*adddi/0
	store8! &3 	#X2	# 3925	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 3928	[c=4]movdi_push_pop
	store8! &35
	load4! &33	# 11113	[c=5]movsi_to_tr_unspec/1
	add! 1		# 3932	[c=4]*adddi/0
	store8! &1 	#AR	# 3933	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 11116	[c=4]movsi_push_pop
	store4! &34
	# CBRANCH	# 3940	[c=12]cbranchsi4_internal
	push! 7	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L190.l_ocf5a76
	# END CBRANCH
	load8! &3 	#X3	# 3947	[c=5]movdi_to_tr_unspec/1
	add! 16		# 3949	[c=4]*adddi/0
	store8! &4 	#X3	# 3950	[c=4]movdi_from_tr_unspec/0
.L191.l_ocf5a76:
	# CBRANCH EQ0	# 3973	[c=12]cbranchsi4_internal
	load4! &5 	#X5
	jump_not_zero! .L192.l_ocf5a76
	# END CBRANCH
	load8! &12 	#X12	# 3975	[c=5]movdi_to_tr_unspec/1
	and! 0x1		# 3977	[c=4]*anddi3/0
	load4! &20	# 12558	[c=6]*iorsi3/1
	or
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 12562	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L175.l_ocf5a76
	# END CBRANCH
	load8! &21	# 5660	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 5662	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load8! &20	# 5664	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 5666	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &20	# 5668	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 5670	[c=6]*adddi/2
	add
	store8! &1 	#AR	# 5671	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 5673	[c=4]movdi_push_pop
	store8! &35
	load4! &33	# 10128	[c=5]movsi_to_tr_unspec/1
	add! 1		# 5677	[c=4]*adddi/0
	store8! &8 	#X7	# 12492	[c=4]movsi_from_tr_unspec/0
	load4! &7 	#X7	# 5684	[c=4]movsi_push_pop
	store4! &34
	# CBRANCH	# 5685	[c=12]cbranchsi4_internal
	push! 7	
	add! -2147483648	
	load4! &8 	#X7
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L194.l_ocf5a76
	# END CBRANCH
	load8! &3 	#X3	# 5687	[c=5]movdi_to_tr_unspec/1
	add! 16		# 5689	[c=4]*adddi/0
	store8! &2 	#X1	# 5690	[c=4]movdi_from_tr_unspec/0
.L196.l_ocf5a76:
	load8! &4 	#X4	# 4213	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 4215	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load4! &19	# 4217	[c=5]movsi_to_tr_unspec/1
	sigx4		# 4219	[c=6]*extendsidi2
	store8! &3 	#X2	# 4220	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 4222	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 4224	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &2 	#X2	# 4226	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 4228	[c=6]*adddi/2
	add
	store8! &3 	#X2	# 4229	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 4231	[c=4]movdi_push_pop
	store8! &35
	load8! &7 	#X7	# 4232	[c=5]movdi_to_tr_unspec/1
	add! 1		# 4234	[c=4]*adddi/0
	store8! &1 	#AR	# 4235	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 10963	[c=4]movsi_push_pop
	store4! &34
	# CBRANCH	# 4242	[c=12]cbranchsi4_internal
	push! 7	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L202.l_ocf5a76
	# END CBRANCH
	load8! &1 	#X1	# 4244	[c=5]movdi_to_tr_unspec/1
	add! 16		# 4246	[c=4]*adddi/0
	store8! &4 	#X3	# 4247	[c=4]movdi_from_tr_unspec/0
	jump! .L175.l_ocf5a76		# 13664	[c=4]jump
.L60.l_ocf5a76:
	load8! &13 	#X13	# 1180	[c=4]pushdf1_not_fp/1
	load8! &14 	#X13	# 1181	[c=4]pushdf1_not_fp/1
	call! __unorddf2		# 1182	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH EQ0	# 1184	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_not_zero! .L483.l_ocf5a76
	# END CBRANCH
	load8! &5 	#X5	# 1259	[c=5]movdi_to_tr_unspec/1
	and! 0xffffffffffffffdf		# 1261	[c=4]*anddi3/0
	store8! &12 	#X11	# 12719	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ	# 1268	[c=12]cbranchsi4_internal
	load4! &9 	#X9
	push! 4294967295	
	xor	
	jump_zero! .L269.l_ocf5a76
	# END CBRANCH
	# CBRANCH EQ	# 1270	[c=12]cbranchsi4_internal
	load4! &11 	#X11
	push! 71	
	xor	
	jump_zero! .L484.l_ocf5a76
	# END CBRANCH
.L70.l_ocf5a76:
	load8! &7 	#X7	# 1276	[c=5]movdi_to_tr_unspec/1
	or! 0x100		# 1278	[c=4]*iordi3/0
	store8! &13 	#X12	# 12714	[c=4]movsi_from_tr_unspec/0
	load8! &13 	#X13	# 12336	[c=5]movdi_to_tr_unspec/1
	shift_ru! 32	# 12338	[c=40]*lshrdi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 12717	[c=12]*peep2_cbranchsi
	add! -2147483648	
	push! 0	
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L485.l_ocf5a76
	# END CBRANCH
	push! 0		# 60	[c=4]movqi_push_pop
	store8! &15 	#X14
.L71.l_ocf5a76:
	# CBRANCH EQ	# 1309	[c=12]cbranchsi4_internal
	load4! &5 	#X5
	push! 102	
	xor	
	jump_zero! .L72.l_ocf5a76
	# END CBRANCH
	# CBRANCH EQ	# 1311	[c=12]cbranchsi4_internal
	load4! &5 	#X5
	push! 70	
	xor	
	jump_zero! .L73.l_ocf5a76
	# END CBRANCH
	# CBRANCH EQ	# 1313	[c=12]cbranchsi4_internal
	load4! &11 	#X11
	push! 69	
	xor	
	jump_zero! .L486.l_ocf5a76
	# END CBRANCH
	push! &0		# 12234	[c=4]movdi_to_tr_unspec/1
	add! 248		# 12241	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 12243	[c=0]*peep2_pop_pusharg
	push! &0		# 12252	[c=4]movdi_to_tr_unspec/1
	add! 240		# 12259	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 12261	[c=0]*peep2_pop_pusharg
	push! &0		# 12270	[c=4]movdi_to_tr_unspec/1
	add! 240		# 12277	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 12279	[c=0]*peep2_pop_pusharg
	load4! &12 	#X9	# 1370	[c=4]pushsi1_not_fp/1
	push! 2		# 1371	[c=4]pushsi1_not_fp/0
	load8! &18 	#X13	# 1372	[c=4]pushdf1_not_fp/1
	load8! &21 	#X15	# 1373	[c=4]pushdi1_not_fp/1
	call! _dtoa_r		# 1374	[c=0]*call_value_pop_1/0
	store8! &7

	set_sp! &6
	load8! &0 	#AR	# 1375	[c=4]movdi_push_pop
	store8! &5 	#X4
	# CBRANCH	# 1376	[c=12]cbranchsi4_internal
	load4! &5 	#X5
	push! 103	
	xor	
	push! 1	
	lt_u	
	jump_zero! .L271.l_ocf5a76
	# END CBRANCH
	load4! &9 	#X9	# 455	[c=4]movsi_push_pop
	store8! &2 	#X1
.L76.l_ocf5a76:
	load8! &7 	#X7	# 5731	[c=5]movdi_to_tr_unspec/1
	and! 0x1		# 5733	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 12490	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L254.l_ocf5a76
	# END CBRANCH
	load8! &31	# 5744	[c=5]movdi_to_tr_unspec/1
	load8! &5 	#X4	# 5746	[c=14]*subdi3/2
	sub
	store8! &1 	#AR	# 5747	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 10123	[c=4]movsi_push_pop
	store4! &20
	load4! &28	# 5753	[c=2]movsi_push_pop
	store4! &19
	# CBRANCH	# 5755	[c=12]cbranchsi4_internal
	load4! &11 	#X11
	push! 71	
	xor	
	push! 1	
	lt_u	
	jump_zero! .L87.l_ocf5a76
	# END CBRANCH
.L255.l_ocf5a76:
	# CBRANCH	# 1472	[c=14]cbranchsi4_internal
	load4! &18
	add! -2147483648	
	push! 4294967293	
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L85.l_ocf5a76
	# END CBRANCH
	# CBRANCH	# 1474	[c=14]cbranchsi4_internal
	load4! &9 	#X9
	add! -2147483648	
	load4! &19
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L85.l_ocf5a76
	# END CBRANCH
	# CBRANCH	# 1925	[c=16]cbranchsi4_internal
	load4! &18
	add! -2147483648	
	load4! &20
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L104.l_ocf5a76
	# END CBRANCH
	load8! &7 	#X7	# 1927	[c=5]movdi_to_tr_unspec/1
	and! 0x1		# 1929	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 12670	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L105.l_ocf5a76
	# END CBRANCH
	load4! &18	# 1938	[c=2]movsi_push_pop
	store8! &12 	#X11
	# CBRANCH	# 1939	[c=12]cbranchsi4_internal
	load4! &11 	#X11
	add! -2147483648	
	push! 0	
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L487.l_ocf5a76
	# END CBRANCH
	load4! &18	# 80	[c=2]movsi_push_pop
	store8! &14 	#X13
	push! 103		# 81	[c=4]movsi_push_pop
	store8! &6 	#X5
.L98.l_ocf5a76:
	# CBRANCH EQ0	# 2039	[c=12]cbranchqi4_internal
	load1! &14 	#X14
	jump_zero! .L111.l_ocf5a76
	# END CBRANCH
	push! 45		# 2041	[c=4]movqi_push_pop
	store1! &27
	load8! &2 	#X2	# 231	[c=4]movdi_push_pop
	store8! &61
	push! 0		# 232	[c=4]movsi_push_pop
	store8! &10 	#X9
	load8! &11 	#X11	# 13200	[c=5]movdi_to_tr_unspec/1
	add! 1		# 13202	[c=4]*adddi/0
	store8! &12 	#X11	# 13204	[c=4]movsi_from_tr_unspec/0
	jump! .L149.l_ocf5a76		# 13671	[c=4]jump
.L484.l_ocf5a76:
	# CBRANCH EQ0	# 1272	[c=12]cbranchsi4_internal
	load4! &9 	#X9
	jump_not_zero! .L70.l_ocf5a76
	# END CBRANCH
	push! 1		# 58	[c=4]movsi_push_pop
	store8! &10 	#X9
	jump! .L70.l_ocf5a76		# 13673	[c=4]jump
.L179.l_ocf5a76:
	push! &0		# 11256	[c=4]movdi_to_tr_unspec/1
	add! 256		# 11263	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 11265	[c=0]*peep2_pop_pusharg
	load8! &11 	#X10	# 3663	[c=4]pushdi1_not_fp/1
	load8! &17 	#X15	# 3664	[c=4]pushdi1_not_fp/1
	call! __ssprint_r		# 3665	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	# CBRANCH EQ0	# 3667	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L13.l_ocf5a76
	# END CBRANCH
	push! &0		# 11240	[c=4]movdi_to_tr_unspec/1
	add! 320		# 11247	[c=4]*adddi/0
	store8! &4 	#X3	# 11245	[c=4]movdi_from_tr_unspec/0
	jump! .L180.l_ocf5a76		# 13675	[c=4]jump
.L166.l_ocf5a76:
	push! &0		# 11415	[c=4]movdi_to_tr_unspec/1
	add! 256		# 11422	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 11424	[c=0]*peep2_pop_pusharg
	load8! &11 	#X10	# 3349	[c=4]pushdi1_not_fp/1
	load8! &17 	#X15	# 3350	[c=4]pushdi1_not_fp/1
	call! __ssprint_r		# 3351	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	# CBRANCH EQ0	# 3353	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L13.l_ocf5a76
	# END CBRANCH
	load8! &34	# 3355	[c=2]movdi_push_pop
	store8! &3 	#X2
	push! &0		# 11399	[c=4]movdi_to_tr_unspec/1
	add! 320		# 11406	[c=4]*adddi/0
	store8! &4 	#X3	# 11404	[c=4]movdi_from_tr_unspec/0
	load8! &13 	#X13	# 13207	[c=5]movdi_to_tr_unspec/1
	load8! &10 	#X9	# 13209	[c=14]*subdi3/2
	sub
	neg		# 13210	[c=4]*neg_tr
	store8! &8 	#X7	# 13212	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 13213	[c=12]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &8 	#X7
	add! -2147483648	
	lt_u	
	jump_zero! .L167.l_ocf5a76
	# END CBRANCH
	jump! .L443.l_ocf5a76		# 13678	[c=4]jump
.L233.l_ocf5a76:
	push! &0		# 10552	[c=4]movdi_to_tr_unspec/1
	add! 256		# 10559	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 10561	[c=0]*peep2_pop_pusharg
	load8! &11 	#X10	# 5100	[c=4]pushdi1_not_fp/1
	load8! &17 	#X15	# 5101	[c=4]pushdi1_not_fp/1
	call! __ssprint_r		# 5102	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	# CBRANCH EQ0	# 5104	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L13.l_ocf5a76
	# END CBRANCH
	load8! &34	# 5106	[c=2]movdi_push_pop
	store8! &3 	#X2
	load4! &33	# 10508	[c=5]movsi_to_tr_unspec/1
	add! 1		# 5110	[c=4]*adddi/0
	store8! &10 	#X9	# 12520	[c=4]movsi_from_tr_unspec/0
	push! &0		# 10519	[c=4]movdi_to_tr_unspec/1
	add! 320		# 10526	[c=4]*adddi/0
	add! 16		# 364	[c=4]*adddi/0
	store8! &4 	#X3	# 365	[c=4]movdi_from_tr_unspec/0
	push! &0		# 10536	[c=4]movdi_to_tr_unspec/1
	add! 320		# 10543	[c=4]*adddi/0
	store8! &6 	#X5	# 10541	[c=4]movdi_from_tr_unspec/0
	jump! .L234.l_ocf5a76		# 13680	[c=4]jump
.L446.l_ocf5a76:
	# CBRANCH EQ	# 5701	[c=12]cbranchsi4_internal
	load4! &2 	#X2
	push! 1	
	xor	
	jump_zero! .L286.l_ocf5a76
	# END CBRANCH
	# CBRANCH EQ	# 5703	[c=12]cbranchsi4_internal
	load4! &2 	#X2
	push! 2	
	xor	
	jump_zero! .L287.l_ocf5a76
	# END CBRANCH
	load4! &12 	#X12	# 114	[c=4]movsi_push_pop
	store8! &8 	#X7
	push! &0		# 13216	[c=4]movdi_to_tr_unspec/1
	add! 280		# 13218	[c=4]*adddi/0
	add! 40		# 13220	[c=4]*adddi/0
	store8! &12 	#X11	# 13221	[c=4]movdi_from_tr_unspec/0
	jump! .L141.l_ocf5a76		# 13682	[c=4]jump
.L182.l_ocf5a76:
	push! &0		# 11217	[c=4]movdi_to_tr_unspec/1
	add! 256		# 11224	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 11226	[c=0]*peep2_pop_pusharg
	load8! &11 	#X10	# 3738	[c=4]pushdi1_not_fp/1
	load8! &17 	#X15	# 3739	[c=4]pushdi1_not_fp/1
	call! __ssprint_r		# 3740	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	# CBRANCH EQ0	# 3742	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L13.l_ocf5a76
	# END CBRANCH
	load8! &34	# 3744	[c=2]movdi_push_pop
	store8! &3 	#X2
	push! &0		# 11201	[c=4]movdi_to_tr_unspec/1
	add! 320		# 11208	[c=4]*adddi/0
	store8! &4 	#X3	# 11206	[c=4]movdi_from_tr_unspec/0
	load4! &19	# 13224	[c=5]movsi_to_tr_unspec/1
	add! -1		# 13226	[c=4]*adddi/0
	store8! &5 	#X4	# 13228	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 13229	[c=12]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &5 	#X4
	add! -2147483648	
	lt_u	
	jump_zero! .L175.l_ocf5a76
	# END CBRANCH
	jump! .L488.l_ocf5a76		# 13686	[c=4]jump
.L447.l_ocf5a76:
	# CBRANCH	# 2245	[c=12]cbranchsi4_internal
	push! 6	
	load4! &10 	#X9
	lt_u	
	not	
	jump_zero! .L489.l_ocf5a76
	# END CBRANCH
	load4! &9 	#X9	# 2248	[c=4]movsi_push_pop
	store8! &14 	#X13
	load4! &9 	#X9	# 437	[c=4]movsi_push_pop
	store8! &12 	#X11
	load8! &2 	#X2	# 438	[c=4]movdi_push_pop
	store8! &61
	push! .LC6.l_ocf5a76		# 439	[c=4]movdi_push_pop
	store8! &5 	#X4
.L491.l_ocf5a76:
	load4! &7 	#X7	# 13232	[c=4]movsi_push_pop
	store8! &13 	#X12
	push! 0		# 13233	[c=4]movsi_push_pop
	store8! &10 	#X9
	push! 0		# 13234	[c=4]movsi_push_pop
	store4! &19
	jump! .L149.l_ocf5a76		# 13689	[c=4]jump
.L192.l_ocf5a76:
	load8! &21	# 4003	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 4005	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load8! &20	# 4007	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 4009	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &20	# 4011	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 4013	[c=6]*adddi/2
	add
	store8! &1 	#AR	# 4014	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 4016	[c=4]movdi_push_pop
	store8! &35
	load4! &33	# 11070	[c=5]movsi_to_tr_unspec/1
	add! 1		# 4020	[c=4]*adddi/0
	store8! &8 	#X7	# 12556	[c=4]movsi_from_tr_unspec/0
	load4! &7 	#X7	# 4027	[c=4]movsi_push_pop
	store4! &34
	# CBRANCH	# 4028	[c=12]cbranchsi4_internal
	push! 7	
	add! -2147483648	
	load4! &8 	#X7
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L194.l_ocf5a76
	# END CBRANCH
	load8! &3 	#X3	# 4030	[c=5]movdi_to_tr_unspec/1
	add! 16		# 4032	[c=4]*adddi/0
	store8! &2 	#X1	# 4033	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 4056	[c=12]cbranchsi4_internal
	load4! &5 	#X5
	add! -2147483648	
	push! 0	
	add! -2147483648	
	lt_u	
	jump_zero! .L196.l_ocf5a76
	# END CBRANCH
.L498.l_ocf5a76:
	load8! &5 	#X5	# 4058	[c=5]movdi_to_tr_unspec/1
	neg		# 4060	[c=3]*negdi2
	store8! &3 	#X2	# 12553	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 12554	[c=12]cbranchsi4_internal
	load4! &5 	#X5
	add! -2147483648	
	push! 4294967280	
	add! -2147483648	
	lt_u	
	jump_zero! .L197.l_ocf5a76
	# END CBRANCH
.L200.l_ocf5a76:
	push! .Li_zeroes_4582.l_ocf5a76		# 4069	[c=3]movdi_to_tr_unspec/0
	load8! &2 	#X1	# 4071	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	push! 16		# 4073	[c=3]movdi_to_tr_unspec/0
	load8! &2 	#X1	# 4075	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &0 	#AR	# 4082	[c=5]movdi_to_tr_unspec/1
	add! 16		# 4084	[c=4]*adddi/0
	store8! &1 	#AR	# 4085	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 4088	[c=4]movdi_push_pop
	store8! &35
	load8! &7 	#X7	# 4089	[c=5]movdi_to_tr_unspec/1
	add! 1		# 4091	[c=4]*adddi/0
	store8! &8 	#X7	# 12552	[c=4]movsi_from_tr_unspec/0
	load4! &7 	#X7	# 4098	[c=4]movsi_push_pop
	store4! &34
	# CBRANCH	# 4099	[c=12]cbranchsi4_internal
	push! 7	
	add! -2147483648	
	load4! &8 	#X7
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L198.l_ocf5a76
	# END CBRANCH
	load8! &1 	#X1	# 4106	[c=5]movdi_to_tr_unspec/1
	add! 16		# 4108	[c=4]*adddi/0
	store8! &2 	#X1	# 4109	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 4132	[c=5]movdi_to_tr_unspec/1
	add! -16		# 4134	[c=4]*adddi/0
	store8! &3 	#X2	# 12549	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 12550	[c=12]cbranchsi4_internal
	push! 16	
	add! -2147483648	
	load4! &3 	#X2
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L200.l_ocf5a76
	# END CBRANCH
.L197.l_ocf5a76:
	push! .Li_zeroes_4582.l_ocf5a76		# 4145	[c=3]movdi_to_tr_unspec/0
	load8! &2 	#X1	# 4147	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load4! &2 	#X2	# 4149	[c=5]movsi_to_tr_unspec/1
	sigx4		# 4151	[c=6]*extendsidi2
	store8! &3 	#X2	# 4152	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 4154	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 4156	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &2 	#X2	# 4163	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 4165	[c=6]*adddi/2
	add
	store8! &1 	#AR	# 4166	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 4169	[c=4]movdi_push_pop
	store8! &35
	load8! &7 	#X7	# 4170	[c=5]movdi_to_tr_unspec/1
	add! 1		# 4172	[c=4]*adddi/0
	store8! &8 	#X7	# 12548	[c=4]movsi_from_tr_unspec/0
	load4! &7 	#X7	# 4179	[c=4]movsi_push_pop
	store4! &34
	# CBRANCH	# 4180	[c=12]cbranchsi4_internal
	push! 7	
	add! -2147483648	
	load4! &8 	#X7
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L201.l_ocf5a76
	# END CBRANCH
	load8! &1 	#X1	# 4187	[c=5]movdi_to_tr_unspec/1
	add! 16		# 4189	[c=4]*adddi/0
	store8! &2 	#X1	# 4190	[c=4]movdi_from_tr_unspec/0
	jump! .L196.l_ocf5a76		# 13691	[c=4]jump
.L267.l_ocf5a76:
	push! .LC0.l_ocf5a76		# 52	[c=4]movdi_push_pop
	store8! &5 	#X4
	load8! &7 	#X7	# 13237	[c=5]movdi_to_tr_unspec/1
	and! 0xffffffffffffff7f		# 13239	[c=4]*anddi3/0
	store8! &13 	#X12	# 13241	[c=4]movsi_from_tr_unspec/0
	load8! &2 	#X2	# 13242	[c=4]movdi_push_pop
	store8! &61
	push! 3		# 13243	[c=4]movsi_push_pop
	store8! &12 	#X11
	push! 3		# 13244	[c=4]movsi_push_pop
	store8! &14 	#X13
	push! 0		# 13245	[c=4]movsi_push_pop
	store8! &10 	#X9
	push! 0		# 13246	[c=4]movsi_push_pop
	store4! &19
	jump! .L490.l_ocf5a76		# 13694	[c=4]jump
.L116.l_ocf5a76:
	load4! &17	# 2114	[c=5]movsi_to_tr_unspec/1
	load8! &3 	#X2	# 2116	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	jump! .L5.l_ocf5a76		# 13696	[c=4]jump
.L61.l_ocf5a76:
	push! 45		# 1190	[c=4]movqi_push_pop
	store1! &27
	push! 45		# 51	[c=4]movqi_push_pop
	store8! &1 	#AR
	jump! .L62.l_ocf5a76		# 13698	[c=4]jump
.L240.l_ocf5a76:
	push! &0		# 10405	[c=4]movdi_to_tr_unspec/1
	add! 256		# 10412	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 10414	[c=0]*peep2_pop_pusharg
	load8! &11 	#X10	# 5331	[c=4]pushdi1_not_fp/1
	load8! &17 	#X15	# 5332	[c=4]pushdi1_not_fp/1
	call! __ssprint_r		# 5333	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	# CBRANCH EQ0	# 5335	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L13.l_ocf5a76
	# END CBRANCH
	load8! &34	# 5337	[c=2]movdi_push_pop
	store8! &3 	#X2
	load4! &33	# 10361	[c=5]movsi_to_tr_unspec/1
	add! 1		# 5341	[c=4]*adddi/0
	store8! &10 	#X9	# 12506	[c=4]movsi_from_tr_unspec/0
	push! &0		# 10372	[c=4]movdi_to_tr_unspec/1
	add! 320		# 10379	[c=4]*adddi/0
	add! 16		# 396	[c=4]*adddi/0
	store8! &4 	#X3	# 397	[c=4]movdi_from_tr_unspec/0
	push! &0		# 10389	[c=4]movdi_to_tr_unspec/1
	add! 320		# 10396	[c=4]*adddi/0
	store8! &6 	#X5	# 10394	[c=4]movdi_from_tr_unspec/0
	jump! .L234.l_ocf5a76		# 13700	[c=4]jump
.L485.l_ocf5a76:
	load8! &13 	#X13	# 1301	[c=5]movdi_to_tr_unspec/1
	add! -9223372036854775808		# 1303	[c=4]*adddi/0
	store8! &14 	#X13	# 1304	[c=4]movdi_from_tr_unspec/0
	push! 45		# 59	[c=4]movqi_push_pop
	store8! &15 	#X14
	jump! .L71.l_ocf5a76		# 13702	[c=4]jump
.L190.l_ocf5a76:
	push! &0		# 11103	[c=4]movdi_to_tr_unspec/1
	add! 256		# 11110	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 11112	[c=0]*peep2_pop_pusharg
	load8! &11 	#X10	# 3963	[c=4]pushdi1_not_fp/1
	load8! &17 	#X15	# 3964	[c=4]pushdi1_not_fp/1
	call! __ssprint_r		# 3965	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	# CBRANCH EQ0	# 3967	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L13.l_ocf5a76
	# END CBRANCH
	load4! &28	# 3969	[c=2]movsi_push_pop
	store8! &6 	#X5
	load8! &34	# 3970	[c=2]movdi_push_pop
	store8! &3 	#X2
	push! &0		# 11087	[c=4]movdi_to_tr_unspec/1
	add! 320		# 11094	[c=4]*adddi/0
	store8! &4 	#X3	# 11092	[c=4]movdi_from_tr_unspec/0
	jump! .L191.l_ocf5a76		# 13704	[c=4]jump
.L215.l_ocf5a76:
	push! &0		# 10798	[c=4]movdi_to_tr_unspec/1
	add! 256		# 10805	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 10807	[c=0]*peep2_pop_pusharg
	load8! &11 	#X10	# 4578	[c=4]pushdi1_not_fp/1
	load8! &17 	#X15	# 4579	[c=4]pushdi1_not_fp/1
	call! __ssprint_r		# 4580	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	# CBRANCH EQ0	# 4582	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L13.l_ocf5a76
	# END CBRANCH
	load4! &28	# 4584	[c=2]movsi_push_pop
	store8! &1 	#AR
	load8! &34	# 4585	[c=2]movdi_push_pop
	store8! &3 	#X2
	push! &0		# 10782	[c=4]movdi_to_tr_unspec/1
	add! 320		# 10789	[c=4]*adddi/0
	store8! &4 	#X3	# 10787	[c=4]movdi_from_tr_unspec/0
	jump! .L216.l_ocf5a76		# 13706	[c=4]jump
.L489.l_ocf5a76:
	push! 6		# 2246	[c=4]movsi_push_pop
	store8! &10 	#X9
	load4! &9 	#X9	# 13249	[c=4]movsi_push_pop
	store8! &14 	#X13
	load4! &9 	#X9	# 13250	[c=4]movsi_push_pop
	store8! &12 	#X11
	load8! &2 	#X2	# 13251	[c=4]movdi_push_pop
	store8! &61
	push! .LC6.l_ocf5a76		# 13252	[c=4]movdi_push_pop
	store8! &5 	#X4
	jump! .L491.l_ocf5a76		# 13709	[c=4]jump
.L481.l_ocf5a76:
	push! 0		# 2300	[c=4]movsi_push_pop
	store8! &12 	#X11
	load8! &2 	#X2	# 13255	[c=4]movdi_push_pop
	store8! &61
	load4! &7 	#X7	# 13256	[c=4]movsi_push_pop
	store8! &13 	#X12
	push! 0		# 13257	[c=4]movsi_push_pop
	store8! &10 	#X9
	push! 0		# 13258	[c=4]movsi_push_pop
	store4! &19
	jump! .L492.l_ocf5a76		# 13712	[c=4]jump
.L449.l_ocf5a76:
	push! 0		# 2284	[c=4]movsi_push_pop
	store8! &12 	#X11
	load8! &2 	#X2	# 13261	[c=4]movdi_push_pop
	store8! &61
	load4! &7 	#X7	# 13262	[c=4]movsi_push_pop
	store8! &13 	#X12
	push! 0		# 13263	[c=4]movsi_push_pop
	store8! &10 	#X9
	push! 0		# 13264	[c=4]movsi_push_pop
	store4! &19
	jump! .L493.l_ocf5a76		# 13715	[c=4]jump
.L458.l_ocf5a76:
	load1! &2 	#X2	# 680	[c=4]movqi_push_pop
	store1! &27
	push! .LC5.l_ocf5a76		# 13267	[c=4]movdi_push_pop
	store8! &24
	jump! .L494.l_ocf5a76		# 13718	[c=4]jump
.L452.l_ocf5a76:
	load1! &2 	#X2	# 2048	[c=4]movqi_push_pop
	store1! &27
	load8! &7 	#X7	# 13270	[c=5]movdi_to_tr_unspec/1
	and! 0x10		# 13272	[c=4]*anddi3/0
	store8! &1 	#AR	# 13273	[c=4]movdi_from_tr_unspec/0
	load8! &60	# 13274	[c=2]movdi_push_pop
	store8! &3 	#X2
	load8! &2 	#X2	# 13275	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	store8! &3 	#X2	# 13277	[c=4]movdi_from_tr_unspec/0
	load8! &60	# 13278	[c=5]movdi_to_tr_unspec/1
	add! 8		# 13280	[c=4]*adddi/0
	store8! &61	# 13281	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 13282	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_zero! .L114.l_ocf5a76
	# END CBRANCH
	jump! .L453.l_ocf5a76		# 13721	[c=4]jump
.L450.l_ocf5a76:
	load1! &2 	#X2	# 1112	[c=4]movqi_push_pop
	store1! &27
	load8! &7 	#X7	# 13285	[c=5]movdi_to_tr_unspec/1
	and! 0x8		# 13287	[c=4]*anddi3/0
	store8! &1 	#AR	# 13288	[c=4]movdi_from_tr_unspec/0
	load8! &60	# 13289	[c=5]movdi_to_tr_unspec/1
	add! 8		# 13291	[c=4]*adddi/0
	store8! &3 	#X2	# 13292	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 13293	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_zero! .L58.l_ocf5a76
	# END CBRANCH
	jump! .L495.l_ocf5a76		# 13725	[c=4]jump
.L454.l_ocf5a76:
	load1! &2 	#X2	# 1009	[c=4]movqi_push_pop
	store1! &27
	jump! .L51.l_ocf5a76		# 13727	[c=4]jump
.L457.l_ocf5a76:
	load1! &2 	#X2	# 2137	[c=4]movqi_push_pop
	store1! &27
	jump! .L118.l_ocf5a76		# 13729	[c=4]jump
.L463.l_ocf5a76:
	load1! &2 	#X2	# 2835	[c=4]movqi_push_pop
	store1! &27
	jump! .L148.l_ocf5a76		# 13731	[c=4]jump
.L445.l_ocf5a76:
	load1! &2 	#X2	# 2321	[c=4]movqi_push_pop
	store1! &27
	jump! .L129.l_ocf5a76		# 13733	[c=4]jump
.L438.l_ocf5a76:
	load1! &2 	#X2	# 991	[c=4]movqi_push_pop
	store1! &27
	load8! &7 	#X7	# 13296	[c=5]movdi_to_tr_unspec/1
	or! 0x10		# 13298	[c=4]*iordi3/0
	store8! &8 	#X7	# 13300	[c=4]movsi_from_tr_unspec/0
	jump! .L50.l_ocf5a76		# 13735	[c=4]jump
.L451.l_ocf5a76:
	load1! &2 	#X2	# 2393	[c=4]movqi_push_pop
	store1! &27
	push! .LC4.l_ocf5a76		# 13303	[c=4]movdi_push_pop
	store8! &24
	jump! .L43.l_ocf5a76		# 13737	[c=4]jump
.L85.l_ocf5a76:
	load8! &5 	#X5	# 1477	[c=5]movdi_to_tr_unspec/1
	add! -2		# 1479	[c=4]*adddi/0
	store8! &6 	#X5	# 12710	[c=4]movsi_from_tr_unspec/0
.L87.l_ocf5a76:
	load4! &18	# 12202	[c=5]movsi_to_tr_unspec/1
	add! -1		# 1495	[c=4]*adddi/0
	store8! &1 	#AR	# 1496	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 12205	[c=4]movsi_push_pop
	store4! &29
	load1! &5 	#X5	# 12210	[c=4]movqi_push_pop
	store1! &31
	# CBRANCH	# 1508	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	add! -2147483648	
	push! 0	
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L496.l_ocf5a76
	# END CBRANCH
	push! 43		# 1528	[c=4]movqi_push_pop
	store1! (+ &0 249)
.L90.l_ocf5a76:
	# CBRANCH	# 1531	[c=12]cbranchsi4_internal
	push! 9	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	jump_zero! .L91.l_ocf5a76
	# END CBRANCH
	push! &0		# 12185	[c=4]movdi_to_tr_unspec/1
	add! 248		# 12192	[c=4]*adddi/0
	add! 7		# 69	[c=4]*adddi/0
	store8! &10 	#X9	# 70	[c=4]movdi_from_tr_unspec/0
.L92.l_ocf5a76:
	load4! &0 	#AR	# 12163	[c=5]movsi_to_tr_unspec/1
	sigx4		# 12165	[c=6]*extendsidi2
	rem_s! 10	# 12166	[c=4]*moddi3/0
	add! 48		# 1553	[c=4]*adddi/0
	store8! &12 	#X11	# 12705	[c=4]movqi_from_tr_unspec/0
	load8! &9 	#X9	# 1560	[c=5]movdi_to_tr_unspec/1
	add! -1		# 1562	[c=4]*adddi/0
	store8! &2 	#X1	# 1563	[c=4]movdi_from_tr_unspec/0
	load1! &11 	#X11	# 1566	[c=5]movqi_to_tr_unspec/1
	load8! &2 	#X1	# 1568	[c=4]movqi_from_tr_unspec/1
	store1	
	#	
	load4! &0 	#AR	# 12171	[c=5]movsi_to_tr_unspec/1
	sigx4		# 12173	[c=6]*extendsidi2
	div_s! 10	# 12174	[c=4]*divdi3/0
	store8! &12 	#X11	# 12706	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 12707	[c=12]cbranchsi4_internal
	push! 99	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	jump_zero! .L497.l_ocf5a76
	# END CBRANCH
	load8! &1 	#X1	# 72	[c=4]movdi_push_pop
	store8! &10 	#X9
	load4! &11 	#X11	# 73	[c=4]movsi_push_pop
	store8! &1 	#AR
	jump! .L92.l_ocf5a76		# 13741	[c=4]jump
.L194.l_ocf5a76:
	push! &0		# 11060	[c=4]movdi_to_tr_unspec/1
	add! 256		# 11067	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 11069	[c=0]*peep2_pop_pusharg
	load8! &11 	#X10	# 4045	[c=4]pushdi1_not_fp/1
	load8! &17 	#X15	# 4046	[c=4]pushdi1_not_fp/1
	call! __ssprint_r		# 4047	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	# CBRANCH EQ0	# 4049	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L13.l_ocf5a76
	# END CBRANCH
	load4! &28	# 4051	[c=2]movsi_push_pop
	store8! &6 	#X5
	load8! &34	# 4052	[c=2]movdi_push_pop
	store8! &1 	#AR
	load4! &33	# 4053	[c=2]movsi_push_pop
	store8! &8 	#X7
	push! &0		# 11044	[c=4]movdi_to_tr_unspec/1
	add! 320		# 11051	[c=4]*adddi/0
	store8! &2 	#X1	# 11049	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 13306	[c=12]cbranchsi4_internal
	load4! &5 	#X5
	add! -2147483648	
	push! 0	
	add! -2147483648	
	lt_u	
	jump_zero! .L196.l_ocf5a76
	# END CBRANCH
	jump! .L498.l_ocf5a76		# 13745	[c=4]jump
.L436.l_ocf5a76:
	push! -1		# 436	[c=4]movsi_push_pop
	store4! &18
	load4! &17	# 13309	[c=2]movsi_push_pop
	store4! &58
	jump! .L437.l_ocf5a76		# 13747	[c=4]jump
.L212.l_ocf5a76:
	push! &0		# 10837	[c=4]movdi_to_tr_unspec/1
	add! 256		# 10844	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 10846	[c=0]*peep2_pop_pusharg
	load8! &11 	#X10	# 4500	[c=4]pushdi1_not_fp/1
	load8! &17 	#X15	# 4501	[c=4]pushdi1_not_fp/1
	call! __ssprint_r		# 4502	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	# CBRANCH EQ0	# 4504	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L13.l_ocf5a76
	# END CBRANCH
	load8! &34	# 4506	[c=2]movdi_push_pop
	store8! &3 	#X2
	push! &0		# 10821	[c=4]movdi_to_tr_unspec/1
	add! 320		# 10828	[c=4]*adddi/0
	store8! &4 	#X3	# 10826	[c=4]movdi_from_tr_unspec/0
	load4! &28	# 13312	[c=2]movsi_push_pop
	store8! &1 	#AR
	# CBRANCH	# 13313	[c=14]cbranchsi4_internal
	load4! &0 	#AR
	add! -2147483648	
	load4! &20
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L213.l_ocf5a76
	# END CBRANCH
	jump! .L475.l_ocf5a76		# 13750	[c=4]jump
.L225.l_ocf5a76:
	push! &0		# 10664	[c=4]movdi_to_tr_unspec/1
	add! 256		# 10671	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 10673	[c=0]*peep2_pop_pusharg
	load8! &11 	#X10	# 4871	[c=4]pushdi1_not_fp/1
	load8! &17 	#X15	# 4872	[c=4]pushdi1_not_fp/1
	call! __ssprint_r		# 4873	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	# CBRANCH EQ0	# 4875	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L13.l_ocf5a76
	# END CBRANCH
	load8! &34	# 4877	[c=2]movdi_push_pop
	store8! &3 	#X2
	push! &0		# 10648	[c=4]movdi_to_tr_unspec/1
	add! 320		# 10655	[c=4]*adddi/0
	store8! &4 	#X3	# 10653	[c=4]movdi_from_tr_unspec/0
	jump! .L175.l_ocf5a76		# 13752	[c=4]jump
.L486.l_ocf5a76:
	load8! &9 	#X9	# 1315	[c=5]movdi_to_tr_unspec/1
	add! 1		# 1317	[c=4]*adddi/0
	store8! &2 	#X1	# 12712	[c=4]movsi_from_tr_unspec/0
	push! &0		# 12289	[c=4]movdi_to_tr_unspec/1
	add! 248		# 12296	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 12298	[c=0]*peep2_pop_pusharg
	push! &0		# 12307	[c=4]movdi_to_tr_unspec/1
	add! 240		# 12314	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 12316	[c=0]*peep2_pop_pusharg
	push! &0		# 12325	[c=4]movdi_to_tr_unspec/1
	add! 240		# 12332	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 12334	[c=0]*peep2_pop_pusharg
	load4! &4 	#X1	# 1342	[c=4]pushsi1_not_fp/1
	push! 2		# 1343	[c=4]pushsi1_not_fp/0
	load8! &18 	#X13	# 1344	[c=4]pushdf1_not_fp/1
	load8! &21 	#X15	# 1345	[c=4]pushdi1_not_fp/1
	load8! &8 	#X1	# 9191	[c=4]movdi_push_pop
	store8! &24
	call! _dtoa_r		# 1346	[c=0]*call_value_pop_1/0
	store8! &7

	set_sp! &6
	load8! &0 	#AR	# 1347	[c=4]movdi_push_pop
	store8! &5 	#X4
	load8! &16	# 9192	[c=2]movdi_push_pop
	store8! &2 	#X1
	# CBRANCH EQ	# 5896	[c=12]cbranchsi4_internal
	load4! &5 	#X5
	push! 71	
	xor	
	jump_zero! .L76.l_ocf5a76
	# END CBRANCH
.L511.l_ocf5a76:
	load4! &1 	#X1	# 5881	[c=5]movsi_to_tr_unspec/1
	sigx4		# 5883	[c=6]*extendsidi2
	load8! &5 	#X4	# 10055	[c=6]*adddi/2
	add
	store8! &2 	#X1	# 10056	[c=4]movdi_from_tr_unspec/0
.L253.l_ocf5a76:
	push! 0x0000000000000000		# 1429	[c=4]pushdf1_not_fp/0
	load8! &14 	#X13	# 1430	[c=4]pushdf1_not_fp/1
	load8! &3 	#X1	# 9195	[c=4]movdi_push_pop
	store8! &19
	call! __eqdf2		# 1431	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load8! &16	# 9196	[c=2]movdi_push_pop
	store8! &2 	#X1
	# CBRANCH EQ0	# 1433	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_not_zero! .L499.l_ocf5a76
	# END CBRANCH
	load8! &1 	#X1	# 61	[c=4]movdi_push_pop
	store8! &1 	#AR
.L81.l_ocf5a76:
	load8! &0 	#AR	# 1460	[c=5]movdi_to_tr_unspec/1
	load8! &5 	#X4	# 1462	[c=14]*subdi3/2
	sub
	store8! &1 	#AR	# 1463	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 12212	[c=4]movsi_push_pop
	store4! &20
	load4! &28	# 1469	[c=2]movsi_push_pop
	store4! &19
	# CBRANCH EQ	# 1470	[c=12]cbranchsi4_internal
	load4! &11 	#X11
	push! 71	
	xor	
	jump_zero! .L255.l_ocf5a76
	# END CBRANCH
	# CBRANCH	# 1490	[c=12]cbranchsi4_internal
	load4! &5 	#X5
	push! 102	
	xor	
	push! 1	
	lt_u	
	jump_zero! .L87.l_ocf5a76
	# END CBRANCH
	load8! &7 	#X7	# 1820	[c=5]movdi_to_tr_unspec/1
	and! 0x1		# 1822	[c=4]*anddi3/0
	load8! &10 	#X9	# 12025	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 12689	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 12690	[c=14]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &19
	add! -2147483648	
	lt_u	
	jump_zero! .L100.l_ocf5a76
	# END CBRANCH
	# CBRANCH EQ0	# 1844	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L500.l_ocf5a76
	# END CBRANCH
	load4! &18	# 76	[c=2]movsi_push_pop
	store8! &12 	#X11
	load4! &11 	#X11	# 77	[c=4]movsi_push_pop
	store8! &14 	#X13
	jump! .L98.l_ocf5a76		# 13756	[c=4]jump
.L285.l_ocf5a76:
	load8! &3 	#X3	# 356	[c=4]movdi_push_pop
	store8! &2 	#X1
	jump! .L235.l_ocf5a76		# 13758	[c=4]jump
.L487.l_ocf5a76:
	push! 0		# 1940	[c=4]movsi_push_pop
	store8! &12 	#X11
	load4! &18	# 13316	[c=2]movsi_push_pop
	store8! &14 	#X13
	push! 103		# 13317	[c=4]movsi_push_pop
	store8! &6 	#X5
	jump! .L98.l_ocf5a76		# 13760	[c=4]jump
.L198.l_ocf5a76:
	push! &0		# 11024	[c=4]movdi_to_tr_unspec/1
	add! 256		# 11031	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 11033	[c=0]*peep2_pop_pusharg
	load8! &11 	#X10	# 4122	[c=4]pushdi1_not_fp/1
	load8! &17 	#X15	# 4123	[c=4]pushdi1_not_fp/1
	call! __ssprint_r		# 4124	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	# CBRANCH EQ0	# 4126	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L13.l_ocf5a76
	# END CBRANCH
	load8! &34	# 4128	[c=2]movdi_push_pop
	store8! &1 	#AR
	load4! &33	# 4129	[c=2]movsi_push_pop
	store8! &8 	#X7
	push! &0		# 11008	[c=4]movdi_to_tr_unspec/1
	add! 320		# 11015	[c=4]*adddi/0
	store8! &2 	#X1	# 11013	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 13320	[c=5]movdi_to_tr_unspec/1
	add! -16		# 13322	[c=4]*adddi/0
	store8! &3 	#X2	# 13323	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 13324	[c=12]cbranchsi4_internal
	push! 16	
	add! -2147483648	
	load4! &3 	#X2
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L200.l_ocf5a76
	# END CBRANCH
	jump! .L197.l_ocf5a76		# 13763	[c=4]jump
.L111.l_ocf5a76:
	load1! &26	# 2850	[c=2]movqi_push_pop
	store8! &1 	#AR
	load8! &2 	#X2	# 222	[c=4]movdi_push_pop
	store8! &61
	push! 0		# 223	[c=4]movsi_push_pop
	store8! &10 	#X9
	# CBRANCH EQ0	# 13327	[c=12]cbranchqi4_internal
	load1! &0 	#AR
	jump_not_zero! .L112.l_ocf5a76
	# END CBRANCH
	jump! .L149.l_ocf5a76		# 13766	[c=4]jump
.L205.l_ocf5a76:
	push! &0		# 10914	[c=4]movdi_to_tr_unspec/1
	add! 256		# 10921	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 10923	[c=0]*peep2_pop_pusharg
	load8! &11 	#X10	# 4335	[c=4]pushdi1_not_fp/1
	load8! &17 	#X15	# 4336	[c=4]pushdi1_not_fp/1
	call! __ssprint_r		# 4337	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	# CBRANCH EQ0	# 4339	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L13.l_ocf5a76
	# END CBRANCH
	load8! &34	# 4341	[c=2]movdi_push_pop
	store8! &3 	#X2
	push! &0		# 10898	[c=4]movdi_to_tr_unspec/1
	add! 320		# 10905	[c=4]*adddi/0
	store8! &4 	#X3	# 10903	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 13330	[c=12]cbranchsi4_internal
	load4! &5 	#X5
	add! -2147483648	
	push! 0	
	add! -2147483648	
	lt_u	
	jump_zero! .L206.l_ocf5a76
	# END CBRANCH
	jump! .L473.l_ocf5a76		# 13769	[c=4]jump
.L202.l_ocf5a76:
	push! &0		# 10952	[c=4]movdi_to_tr_unspec/1
	add! 256		# 10959	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 10961	[c=0]*peep2_pop_pusharg
	load8! &11 	#X10	# 4259	[c=4]pushdi1_not_fp/1
	load8! &17 	#X15	# 4260	[c=4]pushdi1_not_fp/1
	call! __ssprint_r		# 4261	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	# CBRANCH EQ0	# 4263	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L13.l_ocf5a76
	# END CBRANCH
	load8! &34	# 4265	[c=2]movdi_push_pop
	store8! &3 	#X2
	push! &0		# 10936	[c=4]movdi_to_tr_unspec/1
	add! 320		# 10943	[c=4]*adddi/0
	store8! &4 	#X3	# 10941	[c=4]movdi_from_tr_unspec/0
	jump! .L175.l_ocf5a76		# 13771	[c=4]jump
.L72.l_ocf5a76:
	push! &0		# 10139	[c=4]movdi_to_tr_unspec/1
	add! 248		# 10146	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 10148	[c=0]*peep2_pop_pusharg
	push! &0		# 10157	[c=4]movdi_to_tr_unspec/1
	add! 240		# 10164	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 10166	[c=0]*peep2_pop_pusharg
	push! &0		# 10175	[c=4]movdi_to_tr_unspec/1
	add! 240		# 10182	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 10184	[c=0]*peep2_pop_pusharg
	load4! &12 	#X9	# 5639	[c=4]pushsi1_not_fp/1
	push! 3		# 5640	[c=4]pushsi1_not_fp/0
	load8! &18 	#X13	# 5641	[c=4]pushdf1_not_fp/1
	load8! &21 	#X15	# 5642	[c=4]pushdi1_not_fp/1
	call! _dtoa_r		# 5643	[c=0]*call_value_pop_1/0
	store8! &7

	set_sp! &6
	load8! &0 	#AR	# 5644	[c=4]movdi_push_pop
	store8! &5 	#X4
	load4! &9 	#X9	# 5645	[c=5]movsi_to_tr_unspec/1
	sigx4		# 5647	[c=6]*extendsidi2
	load8! &1 	#AR	# 10186	[c=6]*adddi/2
	add
	store8! &2 	#X1	# 10187	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 1381	[c=7]movqi_to_tr_unspec/2
	load1	
	#	
	# CBRANCH - peep (modesize=1)
	and! 255		# 12225	[c=12]*peep2_cbranchqi
	# - EQ
	push! 48	
	xor	
	jump_zero! .L77.l_ocf5a76
	# END CBRANCH
.L79.l_ocf5a76:
	load4! &28	# 1387	[c=2]movsi_push_pop
	store8! &1 	#AR
	load4! &0 	#AR	# 1418	[c=5]movsi_to_tr_unspec/1
	sigx4		# 1420	[c=6]*extendsidi2
	load8! &2 	#X1	# 12215	[c=6]*adddi/2
	add
	store8! &2 	#X1	# 12216	[c=4]movdi_from_tr_unspec/0
	jump! .L253.l_ocf5a76		# 13773	[c=4]jump
.L77.l_ocf5a76:
	push! 0x0000000000000000		# 1393	[c=4]pushdf1_not_fp/0
	load8! &14 	#X13	# 1394	[c=4]pushdf1_not_fp/1
	load8! &3 	#X1	# 9193	[c=4]movdi_push_pop
	store8! &19
	call! __nedf2		# 1395	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	load8! &16	# 9194	[c=2]movdi_push_pop
	store8! &2 	#X1
	# CBRANCH EQ0	# 1397	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L79.l_ocf5a76
	# END CBRANCH
	load8! &9 	#X9	# 12218	[c=5]movdi_to_tr_unspec/1
	sub! 1		# 12220	[c=12]*subdi3/0
	neg		# 12221	[c=4]*neg_tr
	store8! &1 	#AR	# 12222	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 12224	[c=4]movsi_push_pop
	store4! &29
	load4! &0 	#AR	# 13333	[c=5]movsi_to_tr_unspec/1
	sigx4		# 13335	[c=6]*extendsidi2
	load8! &2 	#X1	# 13337	[c=6]*adddi/2
	add
	store8! &2 	#X1	# 13338	[c=4]movdi_from_tr_unspec/0
	jump! .L253.l_ocf5a76		# 13775	[c=4]jump
.L499.l_ocf5a76:
	load8! &31	# 1456	[c=2]movdi_push_pop
	store8! &1 	#AR
	# CBRANCH	# 1457	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	load8! &2 	#X1
	lt_u	
	jump_zero! .L81.l_ocf5a76
	# END CBRANCH
.L83.l_ocf5a76:
	load8! &0 	#AR	# 1438	[c=5]movdi_to_tr_unspec/1
	add! 1		# 1440	[c=4]*adddi/0
	store8! &32	# 12213	[c=4]movdi_from_tr_unspec/0
	push! 48		# 1444	[c=3]movqi_to_tr_unspec/0
	load8! &1 	#AR	# 1446	[c=4]movqi_from_tr_unspec/1
	store1	
	#	
	load8! &31	# 1448	[c=2]movdi_push_pop
	store8! &1 	#AR
	# CBRANCH	# 1450	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	load8! &2 	#X1
	lt_u	
	jump_zero! .L81.l_ocf5a76
	# END CBRANCH
	load8! &0 	#AR	# 13341	[c=5]movdi_to_tr_unspec/1
	add! 1		# 13343	[c=4]*adddi/0
	store8! &32	# 13344	[c=4]movdi_from_tr_unspec/0
	push! 48		# 13345	[c=3]movqi_to_tr_unspec/0
	load8! &1 	#AR	# 13347	[c=4]movqi_from_tr_unspec/1
	store1	
	#	
	load8! &31	# 13348	[c=2]movdi_push_pop
	store8! &1 	#AR
	# CBRANCH	# 13349	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	load8! &2 	#X1
	lt_u	
	not	
	jump_zero! .L83.l_ocf5a76
	# END CBRANCH
	jump! .L81.l_ocf5a76		# 13778	[c=4]jump
.L269.l_ocf5a76:
	push! 6		# 57	[c=4]movsi_push_pop
	store8! &10 	#X9
	jump! .L70.l_ocf5a76		# 13780	[c=4]jump
.L219.l_ocf5a76:
	push! &0		# 10750	[c=4]movdi_to_tr_unspec/1
	add! 256		# 10757	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 10759	[c=0]*peep2_pop_pusharg
	load8! &11 	#X10	# 4692	[c=4]pushdi1_not_fp/1
	load8! &17 	#X15	# 4693	[c=4]pushdi1_not_fp/1
	call! __ssprint_r		# 4694	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	# CBRANCH EQ0	# 4696	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L13.l_ocf5a76
	# END CBRANCH
	load4! &28	# 10720	[c=5]movsi_to_tr_unspec/1
	store8! &1 	#AR	# 4701	[c=4]movdi_from_tr_unspec/0
	load4! &19	# 10722	[c=5]movsi_to_tr_unspec/1
	load8! &1 	#AR	# 4705	[c=14]*subdi3/2
	sub
	store8! &1 	#AR	# 4706	[c=4]movdi_from_tr_unspec/0
	load8! &34	# 10725	[c=2]movdi_push_pop
	store8! &3 	#X2
	push! &0		# 10734	[c=4]movdi_to_tr_unspec/1
	add! 320		# 10741	[c=4]*adddi/0
	store8! &4 	#X3	# 10739	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 13353	[c=12]cbranchsi4_internal
	load4! &5 	#X5
	add! -2147483648	
	push! 0	
	add! -2147483648	
	lt_u	
	jump_zero! .L220.l_ocf5a76
	# END CBRANCH
	jump! .L476.l_ocf5a76		# 13783	[c=4]jump
.L448.l_ocf5a76:
	load1! &26	# 2267	[c=2]movqi_push_pop
	store8! &1 	#AR
	load4! &9 	#X9	# 225	[c=4]movsi_push_pop
	store8! &12 	#X11
	load8! &2 	#X2	# 226	[c=4]movdi_push_pop
	store8! &61
	load4! &9 	#X9	# 227	[c=4]movsi_push_pop
	store8! &14 	#X13
	load4! &7 	#X7	# 228	[c=4]movsi_push_pop
	store8! &13 	#X12
	push! 0		# 229	[c=4]movsi_push_pop
	store8! &10 	#X9
	push! 0		# 230	[c=4]movsi_push_pop
	store4! &19
	# CBRANCH EQ0	# 13356	[c=12]cbranchqi4_internal
	load1! &0 	#AR
	jump_not_zero! .L112.l_ocf5a76
	# END CBRANCH
	jump! .L149.l_ocf5a76		# 13786	[c=4]jump
.L254.l_ocf5a76:
	load4! &1 	#X1	# 5716	[c=5]movsi_to_tr_unspec/1
	sigx4		# 5718	[c=6]*extendsidi2
	load8! &5 	#X4	# 10126	[c=6]*adddi/2
	add
	store8! &2 	#X1	# 10127	[c=4]movdi_from_tr_unspec/0
	jump! .L253.l_ocf5a76		# 13788	[c=4]jump
.L73.l_ocf5a76:
	push! &0		# 10074	[c=4]movdi_to_tr_unspec/1
	add! 248		# 10081	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 10083	[c=0]*peep2_pop_pusharg
	push! &0		# 10092	[c=4]movdi_to_tr_unspec/1
	add! 240		# 10099	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 10101	[c=0]*peep2_pop_pusharg
	push! &0		# 10110	[c=4]movdi_to_tr_unspec/1
	add! 240		# 10117	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 10119	[c=0]*peep2_pop_pusharg
	load4! &12 	#X9	# 5779	[c=4]pushsi1_not_fp/1
	push! 3		# 5780	[c=4]pushsi1_not_fp/0
	load8! &18 	#X13	# 5781	[c=4]pushdf1_not_fp/1
	load8! &21 	#X15	# 5782	[c=4]pushdi1_not_fp/1
	call! _dtoa_r		# 5783	[c=0]*call_value_pop_1/0
	store8! &7

	set_sp! &6
	load8! &0 	#AR	# 5784	[c=4]movdi_push_pop
	store8! &5 	#X4
	load4! &9 	#X9	# 5785	[c=5]movsi_to_tr_unspec/1
	sigx4		# 5787	[c=6]*extendsidi2
	load8! &1 	#AR	# 10121	[c=6]*adddi/2
	add
	store8! &2 	#X1	# 10122	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 13359	[c=7]movqi_to_tr_unspec/2
	load1	
	#	
	# CBRANCH - peep (modesize=1)
	and! 255		# 13361	[c=12]*peep2_cbranchqi
	# - EQ
	push! 48	
	xor	
	jump_zero! .L77.l_ocf5a76
	# END CBRANCH
	jump! .L79.l_ocf5a76		# 13791	[c=4]jump
.L104.l_ocf5a76:
	load8! &20	# 11986	[c=5]movdi_to_tr_unspec/1
	store8! &6 	#X5	# 1975	[c=4]movsi_from_tr_unspec/0
	load4! &0 	#AR	# 12658	[c=5]movsi_to_tr_unspec/1
	load8! &6 	#X5	# 11992	[c=6]*adddi/2
	add
	store8! &14 	#X13	# 12661	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 1995	[c=14]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &19
	add! -2147483648	
	lt_u	
	jump_zero! .L108.l_ocf5a76
	# END CBRANCH
	load4! &13 	#X13	# 1997	[c=4]movsi_push_pop
	store8! &12 	#X11
	# CBRANCH	# 1998	[c=12]cbranchsi4_internal
	load4! &13 	#X13
	add! -2147483648	
	push! 0	
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L501.l_ocf5a76
	# END CBRANCH
	push! 103		# 82	[c=4]movsi_push_pop
	store8! &6 	#X5
	jump! .L98.l_ocf5a76		# 13794	[c=4]jump
.L501.l_ocf5a76:
	push! 0		# 1999	[c=4]movsi_push_pop
	store8! &12 	#X11
	push! 103		# 13364	[c=4]movsi_push_pop
	store8! &6 	#X5
	jump! .L98.l_ocf5a76		# 13796	[c=4]jump
.L188.l_ocf5a76:
	push! &0		# 11141	[c=4]movdi_to_tr_unspec/1
	add! 256		# 11148	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 11150	[c=0]*peep2_pop_pusharg
	load8! &11 	#X10	# 3895	[c=4]pushdi1_not_fp/1
	load8! &17 	#X15	# 3896	[c=4]pushdi1_not_fp/1
	call! __ssprint_r		# 3897	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	# CBRANCH EQ0	# 3899	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L13.l_ocf5a76
	# END CBRANCH
	load8! &34	# 3901	[c=2]movdi_push_pop
	store8! &3 	#X2
	push! &0		# 11125	[c=4]movdi_to_tr_unspec/1
	add! 320		# 11132	[c=4]*adddi/0
	store8! &4 	#X3	# 11130	[c=4]movdi_from_tr_unspec/0
	jump! .L175.l_ocf5a76		# 13798	[c=4]jump
.L239.l_ocf5a76:
	push! &0		# 10460	[c=4]movdi_to_tr_unspec/1
	add! 256		# 10467	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 10469	[c=0]*peep2_pop_pusharg
	load8! &11 	#X10	# 5268	[c=4]pushdi1_not_fp/1
	load8! &17 	#X15	# 5269	[c=4]pushdi1_not_fp/1
	call! __ssprint_r		# 5270	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	# CBRANCH EQ0	# 5272	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L13.l_ocf5a76
	# END CBRANCH
	load8! &34	# 5274	[c=2]movdi_push_pop
	store8! &3 	#X2
	load4! &33	# 10416	[c=5]movsi_to_tr_unspec/1
	add! 1		# 5278	[c=4]*adddi/0
	store8! &10 	#X9	# 12510	[c=4]movsi_from_tr_unspec/0
	push! &0		# 10427	[c=4]movdi_to_tr_unspec/1
	add! 320		# 10434	[c=4]*adddi/0
	add! 16		# 379	[c=4]*adddi/0
	store8! &4 	#X3	# 380	[c=4]movdi_from_tr_unspec/0
	push! &0		# 10444	[c=4]movdi_to_tr_unspec/1
	add! 320		# 10451	[c=4]*adddi/0
	store8! &6 	#X5	# 10449	[c=4]movdi_from_tr_unspec/0
	jump! .L234.l_ocf5a76		# 13800	[c=4]jump
.L91.l_ocf5a76:
	push! 48		# 12698	[c=4]movqi_push_pop
	store1! (+ &0 250)
	load8! &0 	#AR	# 1746	[c=5]movdi_to_tr_unspec/1
	add! 48		# 1748	[c=4]*adddi/0
	store1! (+ &0 251)	# 12699	[c=4]movqi_from_tr_unspec/0
	push! 4		# 74	[c=4]movsi_push_pop
	store4! &26
	load4! &19	# 9340	[c=2]movsi_push_pop
	store8! &2 	#X1
	load8! &1 	#X1	# 12035	[c=4]movdi_push_pop
	store8! &1 	#AR
	load4! &25	# 12036	[c=5]movsi_to_tr_unspec/1
	load8! &1 	#AR	# 1765	[c=6]*adddi/2
	add
	store8! &14 	#X13	# 12697	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 1772	[c=12]cbranchsi4_internal
	push! 1	
	add! -2147483648	
	load4! &2 	#X1
	add! -2147483648	
	lt_u	
	jump_zero! .L502.l_ocf5a76
	# END CBRANCH
.L96.l_ocf5a76:
	load8! &20	# 12027	[c=5]movdi_to_tr_unspec/1
	load8! &14 	#X13	# 12031	[c=6]*adddi/2
	add
	store8! &14 	#X13	# 12694	[c=4]movsi_from_tr_unspec/0
	load4! &13 	#X13	# 1812	[c=4]movsi_push_pop
	store8! &12 	#X11
	# CBRANCH	# 1813	[c=12]cbranchsi4_internal
	load4! &13 	#X13
	add! -2147483648	
	push! 0	
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L503.l_ocf5a76
	# END CBRANCH
	push! 0		# 85	[c=4]movsi_push_pop
	store4! &19
	jump! .L98.l_ocf5a76		# 13804	[c=4]jump
.L502.l_ocf5a76:
	load8! &7 	#X7	# 1774	[c=5]movdi_to_tr_unspec/1
	and! 0x1		# 1776	[c=4]*anddi3/0
	store4! &19	# 12695	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ0	# 1783	[c=14]cbranchsi4_internal
	load4! &18
	jump_not_zero! .L96.l_ocf5a76
	# END CBRANCH
	load4! &13 	#X13	# 1785	[c=4]movsi_push_pop
	store8! &12 	#X11
	# CBRANCH	# 1786	[c=12]cbranchsi4_internal
	load4! &13 	#X13
	add! -2147483648	
	push! 0	
	add! -2147483648	
	lt_u	
	jump_zero! .L98.l_ocf5a76
	# END CBRANCH
	push! 0		# 1787	[c=4]movsi_push_pop
	store8! &12 	#X11
	jump! .L98.l_ocf5a76		# 13806	[c=4]jump
.L503.l_ocf5a76:
	push! 0		# 1814	[c=4]movsi_push_pop
	store8! &12 	#X11
	push! 0		# 13367	[c=4]movsi_push_pop
	store4! &19
	jump! .L98.l_ocf5a76		# 13808	[c=4]jump
.L286.l_ocf5a76:
	load4! &12 	#X12	# 127	[c=4]movsi_push_pop
	store8! &8 	#X7
	load8! &1 	#X1	# 13371	[c=5]movdi_to_tr_unspec/1
	add! 48		# 13373	[c=4]*adddi/0
	store1! (+ &0 327)	# 13374	[c=4]movqi_from_tr_unspec/0
	load4! &7 	#X7	# 13375	[c=4]movsi_push_pop
	store8! &13 	#X12
	push! 1		# 13376	[c=4]movsi_push_pop
	store8! &14 	#X13
	push! &0		# 13377	[c=4]movdi_to_tr_unspec/1
	add! 280		# 13379	[c=4]*adddi/0
	add! 39		# 13381	[c=4]*adddi/0
	store8! &5 	#X4	# 13382	[c=4]movdi_from_tr_unspec/0
	jump! .L143.l_ocf5a76		# 13810	[c=4]jump
.L497.l_ocf5a76:
	load1! &11 	#X11	# 12136	[c=5]movqi_to_tr_unspec/1
	add! 48		# 1593	[c=4]*adddi/0
	store8! &12 	#X11	# 12702	[c=4]movqi_from_tr_unspec/0
	load8! &9 	#X9	# 1600	[c=5]movdi_to_tr_unspec/1
	add! -2		# 1602	[c=4]*adddi/0
	store8! &1 	#AR	# 1603	[c=4]movdi_from_tr_unspec/0
	load1! &11 	#X11	# 12139	[c=5]movqi_to_tr_unspec/1
	load8! &2 	#X1	# 12141	[c=5]movdi_to_tr_unspec/1
	add! -1		# 12143	[c=4]*adddi/0
	store1		# 12144	[c=4]*peep2_mov_from_tr_to_mem_tr_ind_popqi_unspec
	push! &0		# 12153	[c=4]movdi_to_tr_unspec/1
	add! 248		# 12160	[c=4]*adddi/0
	add! 7		# 1623	[c=4]*adddi/0
	# CBRANCH - peep (modesize=8)
	# - reverse 
	load8! &1 	#AR	# 12162	[c=12]*peep2_cbranchdi_reverse
	gt_u	
	jump_zero! .L274.l_ocf5a76
	# END CBRANCH
	push! &0		# 12126	[c=4]movdi_to_tr_unspec/1
	add! 240		# 12133	[c=4]*adddi/0
	add! 2		# 1635	[c=4]*adddi/0
	store8! &2 	#X1	# 1636	[c=4]movdi_from_tr_unspec/0
.L95.l_ocf5a76:
	load8! &0 	#AR	# 1644	[c=5]movdi_to_tr_unspec/1
	add! 1		# 1646	[c=4]*adddi/0
	store8! &1 	#AR	# 1647	[c=4]movdi_from_tr_unspec/0
	load1! &11 	#X11	# 1651	[c=5]movqi_to_tr_unspec/1
	load8! &2 	#X1	# 1653	[c=4]movqi_from_tr_unspec/1
	store1	
	#	
	load8! &1 	#X1	# 1660	[c=5]movdi_to_tr_unspec/1
	add! 1		# 1662	[c=4]*adddi/0
	store8! &2 	#X1	# 1663	[c=4]movdi_from_tr_unspec/0
	push! &0		# 12108	[c=4]movdi_to_tr_unspec/1
	add! 248		# 12115	[c=4]*adddi/0
	add! 7		# 1673	[c=4]*adddi/0
	# CBRANCH - peep (modesize=8)
	# - EQ
	load8! &1 	#AR	# 12117	[c=12]*peep2_cbranchdi_reverse
	xor	
	jump_zero! .L504.l_ocf5a76
	# END CBRANCH
	load8! &0 	#AR	# 1732	[c=7]movqi_to_tr_unspec/2
	load1	
	#	
	store8! &12 	#X11	# 1734	[c=4]movqi_from_tr_unspec/0
	jump! .L95.l_ocf5a76		# 13813	[c=4]jump
.L483.l_ocf5a76:
	load8! &13 	#X13	# 12343	[c=5]movdi_to_tr_unspec/1
	shift_ru! 63	# 12345	[c=40]*lshrdi3/0
	and! 0x1		# 1225	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 12728	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L67.l_ocf5a76
	# END CBRANCH
	load1! &26	# 1234	[c=2]movqi_push_pop
	store8! &1 	#AR
.L68.l_ocf5a76:
	# CBRANCH	# 1242	[c=12]cbranchsi4_internal
	push! 71	
	add! -2147483648	
	load4! &6 	#X5
	add! -2147483648	
	lt_u	
	jump_zero! .L268.l_ocf5a76
	# END CBRANCH
	push! .LC3.l_ocf5a76		# 56	[c=4]movdi_push_pop
	store8! &5 	#X4
	load8! &7 	#X7	# 1246	[c=5]movdi_to_tr_unspec/1
	and! 0xffffffffffffff7f		# 1248	[c=4]*anddi3/0
	store8! &13 	#X12	# 12721	[c=4]movsi_from_tr_unspec/0
	load8! &2 	#X2	# 213	[c=4]movdi_push_pop
	store8! &61
	push! 3		# 214	[c=4]movsi_push_pop
	store8! &12 	#X11
	push! 3		# 215	[c=4]movsi_push_pop
	store8! &14 	#X13
	push! 0		# 216	[c=4]movsi_push_pop
	store8! &10 	#X9
	push! 0		# 217	[c=4]movsi_push_pop
	store4! &19
.L508.l_ocf5a76:
	# CBRANCH EQ0	# 13385	[c=12]cbranchqi4_internal
	load1! &0 	#AR
	jump_not_zero! .L112.l_ocf5a76
	# END CBRANCH
	jump! .L149.l_ocf5a76		# 13816	[c=4]jump
.L289.l_ocf5a76:
	load4! &12 	#X12	# 128	[c=4]movsi_push_pop
	store8! &8 	#X7
	load8! &1 	#X1	# 13389	[c=5]movdi_to_tr_unspec/1
	add! 48		# 13391	[c=4]*adddi/0
	store1! (+ &0 327)	# 13392	[c=4]movqi_from_tr_unspec/0
	load4! &7 	#X7	# 13393	[c=4]movsi_push_pop
	store8! &13 	#X12
	push! 1		# 13394	[c=4]movsi_push_pop
	store8! &14 	#X13
	push! &0		# 13395	[c=4]movdi_to_tr_unspec/1
	add! 280		# 13397	[c=4]*adddi/0
	add! 39		# 13399	[c=4]*adddi/0
	store8! &5 	#X4	# 13400	[c=4]movdi_from_tr_unspec/0
	jump! .L143.l_ocf5a76		# 13818	[c=4]jump
.L504.l_ocf5a76:
	push! &0		# 12050	[c=4]movdi_to_tr_unspec/1
	add! 248		# 12057	[c=4]*adddi/0
	add! 7		# 1685	[c=4]*adddi/0
	add! 2		# 1691	[c=4]*adddi/0
	load8! &10 	#X9	# 1696	[c=14]*subdi3/2
	sub
	store8! &1 	#AR	# 1697	[c=4]movdi_from_tr_unspec/0
	push! &0		# 12069	[c=4]movdi_to_tr_unspec/1
	add! 240		# 12076	[c=4]*adddi/0
	add! 2		# 1706	[c=4]*adddi/0
	load8! &1 	#AR	# 1711	[c=6]*adddi/2
	add
	store8! &2 	#X1	# 1712	[c=4]movdi_from_tr_unspec/0
	push! &0		# 12087	[c=4]movdi_to_tr_unspec/1
	add! 240		# 12094	[c=4]*adddi/0
	load8! &2 	#X1	# 12096	[c=14]*subdi3/2
	sub
	neg		# 12097	[c=4]*neg_tr
	store4! &26	# 12700	[c=4]movsi_from_tr_unspec/0
	load4! &19	# 13403	[c=2]movsi_push_pop
	store8! &2 	#X1
	load8! &1 	#X1	# 13404	[c=4]movdi_push_pop
	store8! &1 	#AR
	load4! &25	# 13405	[c=5]movsi_to_tr_unspec/1
	load8! &1 	#AR	# 13407	[c=6]*adddi/2
	add
	store8! &14 	#X13	# 13409	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 13410	[c=12]cbranchsi4_internal
	push! 1	
	add! -2147483648	
	load4! &2 	#X1
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L96.l_ocf5a76
	# END CBRANCH
	jump! .L502.l_ocf5a76		# 13821	[c=4]jump
.L105.l_ocf5a76:
	load8! &20	# 11994	[c=5]movdi_to_tr_unspec/1
	load4! &19	# 12664	[c=6]*addsi/1
	add
	store8! &14 	#X13	# 12667	[c=4]movsi_from_tr_unspec/0
	load4! &13 	#X13	# 1965	[c=4]movsi_push_pop
	store8! &12 	#X11
	# CBRANCH	# 1966	[c=12]cbranchsi4_internal
	load4! &13 	#X13
	add! -2147483648	
	push! 0	
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L505.l_ocf5a76
	# END CBRANCH
	push! 103		# 78	[c=4]movsi_push_pop
	store8! &6 	#X5
	jump! .L98.l_ocf5a76		# 13824	[c=4]jump
.L505.l_ocf5a76:
	push! 0		# 1967	[c=4]movsi_push_pop
	store8! &12 	#X11
	push! 103		# 13413	[c=4]movsi_push_pop
	store8! &6 	#X5
	jump! .L98.l_ocf5a76		# 13826	[c=4]jump
.L500.l_ocf5a76:
	load8! &20	# 12010	[c=5]movdi_to_tr_unspec/1
	load4! &19	# 12679	[c=6]*addsi/1
	add
	load8! &10 	#X9	# 12019	[c=6]*adddi/2
	add
	store8! &14 	#X13	# 12685	[c=4]movsi_from_tr_unspec/0
	load4! &13 	#X13	# 1879	[c=4]movsi_push_pop
	store8! &12 	#X11
	# CBRANCH	# 1880	[c=12]cbranchsi4_internal
	load4! &13 	#X13
	add! -2147483648	
	push! 0	
	add! -2147483648	
	lt_u	
	jump_zero! .L98.l_ocf5a76
	# END CBRANCH
	push! 0		# 1881	[c=4]movsi_push_pop
	store8! &12 	#X11
	jump! .L98.l_ocf5a76		# 13828	[c=4]jump
.L496.l_ocf5a76:
	load4! &18	# 12194	[c=5]movsi_to_tr_unspec/1
	sub! 1		# 12197	[c=12]*subdi3/0
	neg		# 12198	[c=4]*neg_tr
	store8! &1 	#AR	# 12199	[c=4]movdi_from_tr_unspec/0
	push! 45		# 12201	[c=4]movqi_push_pop
	store1! (+ &0 249)
	jump! .L90.l_ocf5a76		# 13830	[c=4]jump
.L108.l_ocf5a76:
	load4! &18	# 11977	[c=5]movsi_to_tr_unspec/1
	sub! 1		# 11980	[c=12]*subdi3/0
	neg		# 11981	[c=4]*neg_tr
	store8! &1 	#AR	# 12797	[c=4]movdi_from_tr_unspec/0
	load8! &13 	#X13	# 12798	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 2024	[c=6]*adddi/2
	add
	store8! &14 	#X13	# 12657	[c=4]movsi_from_tr_unspec/0
	load4! &13 	#X13	# 2031	[c=4]movsi_push_pop
	store8! &12 	#X11
	# CBRANCH	# 2032	[c=12]cbranchsi4_internal
	load4! &13 	#X13
	add! -2147483648	
	push! 0	
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L506.l_ocf5a76
	# END CBRANCH
	push! 103		# 79	[c=4]movsi_push_pop
	store8! &6 	#X5
	jump! .L98.l_ocf5a76		# 13833	[c=4]jump
.L506.l_ocf5a76:
	push! 0		# 2033	[c=4]movsi_push_pop
	store8! &12 	#X11
	push! 103		# 13416	[c=4]movsi_push_pop
	store8! &6 	#X5
	jump! .L98.l_ocf5a76		# 13835	[c=4]jump
.L100.l_ocf5a76:
	# CBRANCH EQ0	# 1887	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L507.l_ocf5a76
	# END CBRANCH
	push! 1		# 83	[c=4]movsi_push_pop
	store8! &12 	#X11
	push! 1		# 84	[c=4]movsi_push_pop
	store8! &14 	#X13
	jump! .L98.l_ocf5a76		# 13838	[c=4]jump
.L507.l_ocf5a76:
	load8! &20	# 12001	[c=5]movdi_to_tr_unspec/1
	add! 1		# 1896	[c=4]*adddi/0
	load8! &10 	#X9	# 12008	[c=6]*adddi/2
	add
	store8! &14 	#X13	# 12676	[c=4]movsi_from_tr_unspec/0
	load4! &13 	#X13	# 1917	[c=4]movsi_push_pop
	store8! &12 	#X11
	# CBRANCH	# 1918	[c=12]cbranchsi4_internal
	load4! &13 	#X13
	add! -2147483648	
	push! 0	
	add! -2147483648	
	lt_u	
	jump_zero! .L98.l_ocf5a76
	# END CBRANCH
	push! 0		# 1919	[c=4]movsi_push_pop
	store8! &12 	#X11
	jump! .L98.l_ocf5a76		# 13840	[c=4]jump
.L201.l_ocf5a76:
	push! &0		# 10988	[c=4]movdi_to_tr_unspec/1
	add! 256		# 10995	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 10997	[c=0]*peep2_pop_pusharg
	load8! &11 	#X10	# 4203	[c=4]pushdi1_not_fp/1
	load8! &17 	#X15	# 4204	[c=4]pushdi1_not_fp/1
	call! __ssprint_r		# 4205	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	# CBRANCH EQ0	# 4207	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L13.l_ocf5a76
	# END CBRANCH
	load8! &34	# 4209	[c=2]movdi_push_pop
	store8! &1 	#AR
	load4! &33	# 4210	[c=2]movsi_push_pop
	store8! &8 	#X7
	push! &0		# 10972	[c=4]movdi_to_tr_unspec/1
	add! 320		# 10979	[c=4]*adddi/0
	store8! &2 	#X1	# 10977	[c=4]movdi_from_tr_unspec/0
	jump! .L196.l_ocf5a76		# 13842	[c=4]jump
.L67.l_ocf5a76:
	push! 45		# 1239	[c=4]movqi_push_pop
	store1! &27
	push! 45		# 54	[c=4]movqi_push_pop
	store8! &1 	#AR
	jump! .L68.l_ocf5a76		# 13844	[c=4]jump
.L268.l_ocf5a76:
	push! .LC2.l_ocf5a76		# 55	[c=4]movdi_push_pop
	store8! &5 	#X4
	load8! &7 	#X7	# 13419	[c=5]movdi_to_tr_unspec/1
	and! 0xffffffffffffff7f		# 13421	[c=4]*anddi3/0
	store8! &13 	#X12	# 13423	[c=4]movsi_from_tr_unspec/0
	load8! &2 	#X2	# 13424	[c=4]movdi_push_pop
	store8! &61
	push! 3		# 13425	[c=4]movsi_push_pop
	store8! &12 	#X11
	push! 3		# 13426	[c=4]movsi_push_pop
	store8! &14 	#X13
	push! 0		# 13427	[c=4]movsi_push_pop
	store8! &10 	#X9
	push! 0		# 13428	[c=4]movsi_push_pop
	store4! &19
	jump! .L508.l_ocf5a76		# 13847	[c=4]jump
.L44.l_ocf5a76:
	load8! &60	# 778	[c=5]movdi_to_tr_unspec/1
	add! 8		# 780	[c=4]*adddi/0
	store8! &1 	#AR	# 781	[c=4]movdi_from_tr_unspec/0
	load8! &60	# 9233	[c=2]movdi_push_pop
	store8! &5 	#X4
	load8! &4 	#X4	# 783	[c=7]movsi_to_tr_unspec/2
	load4	
	#	
	store8! &10 	#X9	# 785	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 788	[c=12]cbranchsi4_internal
	load4! &9 	#X9
	add! -2147483648	
	push! 0	
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L509.l_ocf5a76
	# END CBRANCH
	load8! &0 	#AR	# 31	[c=4]movdi_push_pop
	store8! &61
	load8! &11 	#X11	# 32	[c=4]movdi_push_pop
	store8! &7 	#X6
.L510.l_ocf5a76:
	load8! &6 	#X6	# 13431	[c=4]movdi_push_pop
	store8! &1 	#AR
	jump! .L14.l_ocf5a76		# 13850	[c=4]jump
.L509.l_ocf5a76:
	push! -1		# 789	[c=4]movsi_push_pop
	store8! &10 	#X9
	load8! &0 	#AR	# 13434	[c=4]movdi_push_pop
	store8! &61
	load8! &11 	#X11	# 13435	[c=4]movdi_push_pop
	store8! &7 	#X6
	jump! .L510.l_ocf5a76		# 13853	[c=4]jump
.L274.l_ocf5a76:
	push! 2		# 75	[c=4]movsi_push_pop
	store4! &26
	load4! &19	# 13438	[c=2]movsi_push_pop
	store8! &2 	#X1
	load8! &1 	#X1	# 13439	[c=4]movdi_push_pop
	store8! &1 	#AR
	load4! &25	# 13440	[c=5]movsi_to_tr_unspec/1
	load8! &1 	#AR	# 13442	[c=6]*adddi/2
	add
	store8! &14 	#X13	# 13444	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 13445	[c=12]cbranchsi4_internal
	push! 1	
	add! -2147483648	
	load4! &2 	#X1
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L96.l_ocf5a76
	# END CBRANCH
	jump! .L502.l_ocf5a76		# 13856	[c=4]jump
.L480.l_ocf5a76:
	push! 12		# 505	[c=3]movsi_to_tr_unspec/0
	load8! &16 	#X15	# 507	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	push! -1		# 435	[c=4]movsi_push_pop
	store4! &18
	load4! &17	# 13448	[c=2]movsi_push_pop
	store4! &58
	jump! .L437.l_ocf5a76		# 13858	[c=4]jump
.L271.l_ocf5a76:
	load4! &9 	#X9	# 456	[c=4]movsi_push_pop
	store8! &2 	#X1
	# CBRANCH EQ	# 13451	[c=12]cbranchsi4_internal
	load4! &5 	#X5
	push! 71	
	xor	
	jump_zero! .L76.l_ocf5a76
	# END CBRANCH
	jump! .L511.l_ocf5a76		# 13862	[c=4]jump
.L437.l_ocf5a76:

	# epilogue
	set_sp! &56
	return

# FUNCTION ENDS:_svfprintf_r

.Li_zeroes_4582.l_ocf5a76:
	data1 [48]
	data1 [48]
	data1 [48]
	data1 [48]
	data1 [48]
	data1 [48]
	data1 [48]
	data1 [48]
	data1 [48]
	data1 [48]
	data1 [48]
	data1 [48]
	data1 [48]
	data1 [48]
	data1 [48]
	data1 [48]
.Li_blanks_4581.l_ocf5a76:
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
#	IMPORT _dtoa_r
#	IMPORT _malloc_r
#	IMPORT memchr
#	IMPORT __ssprint_r
#	IMPORT strlen
#	IMPORT _localeconv_r
#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: od9936b
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"u_strerr.c"
#	.text

# FUNCTION BEGINS:_user_strerror
	EXPORT	_user_strerror
_user_strerror:
	# prologue (0 GPRs)

	push! 0		# 12	[c=4]movdi_push_pop
	store8! &2

	# epilogue
	return

# FUNCTION ENDS:_user_strerror

#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: o7bf303
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"vfprintf.c"
#	.text
	#peephole unary+deadreg+binop
	#peephole pop+push+sub
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop+push+commut(di)
	#peephole push+pop+deadreg+binop
	#peephole move
	#peephole pop+cmp
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole popdi(deadreg)+push

# FUNCTION BEGINS:.Li___sprint_r.part_0.l_o7bf303
.Li___sprint_r.part_0.l_o7bf303:
	# prologue (9 GPRs)

	set_sp! &-9

	load8! &10	# 2	[c=2]movdi_push_pop
	store8! &5 	#X4
	load8! &11	# 3	[c=2]movdi_push_pop
	store8! &4 	#X3
	load8! &12	# 4	[c=2]movdi_push_pop
	store8! &7 	#X6
	load8! &3 	#X3	# 10	[c=6]movsi_to_tr_unspec/2
	add! 176	
	load4	
	#	
	and! 0x2000		# 16	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 245	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L2.l_o7bf303
	# END CBRANCH
	load8! &6 	#X6	# 25	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	store8! &8 	#X7	# 27	[c=4]movdi_from_tr_unspec/0
	load8! &6 	#X6	# 29	[c=11]movdi_to_tr_unspec/2
	add! 16	
	load8	
	#	
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L7.l_o7bf303	# 236	[c=12]*peep2_cbranchdi
	# END CBRANCH
.L3.l_o7bf303:
	load8! &7 	#X7	# 39	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	store8! &3 	#X2	# 41	[c=4]movdi_from_tr_unspec/0
	load8! &7 	#X7	# 231	[c=11]movdi_to_tr_unspec/2
	add! 8	
	load8	
	#	
	shift_ru! 2	# 233	[c=40]*lshrdi3/0
	store8! &1 	#AR	# 234	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 235	[c=4]movsi_push_pop
	store8! &9 	#X8
	# CBRANCH	# 56	[c=12]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	jump_zero! .L5.l_o7bf303
	# END CBRANCH
	load8! &0 	#AR	# 63	[c=5]movdi_to_tr_unspec/1
	add! -1		# 65	[c=4]*adddi/0
	and! 0xffffffff		# 246	[c=4]*anddi3/0
	shift_l! 2	# 226	[c=8]*ashldi3/0
	store8! &2 	#X1	# 227	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 82	[c=5]movdi_to_tr_unspec/1
	add! 4		# 84	[c=4]*adddi/0
	load8! &2 	#X1	# 229	[c=6]*adddi/2
	add
	store8! &6 	#X5	# 230	[c=4]movdi_from_tr_unspec/0
.L6.l_o7bf303:
	load8! &2 	#X2	# 94	[c=7]movsi_to_tr_unspec/2
	load4	
	#	
	store8! &1 	#AR	# 96	[c=4]movsi_from_tr_unspec/0
	load8! &3 	#X3	# 98	[c=4]pushdi1_not_fp/1
	load4! &1 	#AR	# 99	[c=4]pushsi1_not_fp/1
	load8! &6 	#X4	# 100	[c=4]pushdi1_not_fp/1
	call! _fputwc_r		# 101	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	# CBRANCH EQ	# 103	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	push! 4294967295	
	xor	
	jump_zero! .L8.l_o7bf303
	# END CBRANCH
	load8! &2 	#X2	# 110	[c=5]movdi_to_tr_unspec/1
	add! 4		# 112	[c=4]*adddi/0
	store8! &3 	#X2	# 113	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 117	[c=12]cbranchdi4_internal
	load8! &5 	#X5
	load8! &3 	#X2
	xor	
	push! 1	
	lt_u	
	jump_zero! .L6.l_o7bf303
	# END CBRANCH
.L5.l_o7bf303:
	load8! &6 	#X6	# 120	[c=11]movdi_to_tr_unspec/2
	add! 16	
	load8	
	#	
	store8! &2 	#X1	# 122	[c=4]movdi_from_tr_unspec/0
	load4! &8 	#X8	# 210	[c=5]movsi_to_tr_unspec/1
	sigx4		# 212	[c=6]*extendsidi2
	shift_l! 2	# 213	[c=8]*ashldi3/0
	load8! &2 	#X1	# 216	[c=14]*subdi3/2
	sub
	neg		# 217	[c=4]*neg_tr
	store8! &1 	#AR	# 218	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 139	[c=5]movdi_to_tr_unspec/1
	load8! &7 	#X6	# 141	[c=4]movdi_from_tr_unspec/1
	add! 16	
	store8	
	#	
	load8! &7 	#X7	# 148	[c=5]movdi_to_tr_unspec/1
	add! 16		# 150	[c=4]*adddi/0
	store8! &8 	#X7	# 151	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 154	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_not_zero! .L3.l_o7bf303
	# END CBRANCH
.L7.l_o7bf303:
	push! 0		# 6	[c=4]movsi_push_pop
	store8! &1 	#AR
.L4.l_o7bf303:
	push! 0		# 168	[c=3]movdi_to_tr_unspec/0
	load8! &7 	#X6	# 170	[c=4]movdi_from_tr_unspec/1
	add! 16	
	store8	
	#	
	push! 0		# 172	[c=3]movsi_to_tr_unspec/0
	load8! &7 	#X6	# 174	[c=4]movsi_from_tr_unspec/1
	add! 8	
	store4	
	#	
	load4! &0 	#AR	# 179	[c=4]movsi_push_pop
	store4! &11
	jump! .L14.l_o7bf303		# 270	[c=4]jump
.L8.l_o7bf303:
	push! -1		# 7	[c=4]movsi_push_pop
	store8! &1 	#AR
	push! 0		# 251	[c=3]movdi_to_tr_unspec/0
	load8! &7 	#X6	# 253	[c=4]movdi_from_tr_unspec/1
	add! 16	
	store8	
	#	
	push! 0		# 254	[c=3]movsi_to_tr_unspec/0
	load8! &7 	#X6	# 256	[c=4]movsi_from_tr_unspec/1
	add! 8	
	store4	
	#	
	load4! &0 	#AR	# 257	[c=4]movsi_push_pop
	store4! &11
	jump! .L14.l_o7bf303		# 272	[c=4]jump
.L2.l_o7bf303:
	load8! &6 	#X6	# 161	[c=4]pushdi1_not_fp/1
	load8! &4 	#X3	# 162	[c=4]pushdi1_not_fp/1
	load8! &6 	#X4	# 163	[c=4]pushdi1_not_fp/1
	call! __sfvwrite_r		# 164	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	push! 0		# 260	[c=3]movdi_to_tr_unspec/0
	load8! &7 	#X6	# 262	[c=4]movdi_from_tr_unspec/1
	add! 16	
	store8	
	#	
	push! 0		# 263	[c=3]movsi_to_tr_unspec/0
	load8! &7 	#X6	# 265	[c=4]movsi_from_tr_unspec/1
	add! 8	
	store4	
	#	
	load4! &0 	#AR	# 266	[c=4]movsi_push_pop
	store4! &11
.L14.l_o7bf303:

	# epilogue
	set_sp! &9
	return

# FUNCTION ENDS:.Li___sprint_r.part_0.l_o7bf303

	#peephole pop+cmp

# FUNCTION BEGINS:__sprint_r
	EXPORT	__sprint_r
__sprint_r:
	# prologue (2 GPRs)
	push! 0
	push! 0

	load8! &5	# 4	[c=2]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 9	[c=11]movdi_to_tr_unspec/2
	add! 16	
	load8	
	#	
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L20.l_o7bf303	# 41	[c=12]*peep2_cbranchdi
	# END CBRANCH
	load8! &0 	#AR	# 23	[c=4]pushdi1_not_fp/1
	load8! &5	# 24	[c=2]pushdi1_not_fp/1
	load8! &5	# 25	[c=2]pushdi1_not_fp/1
	call! .Li___sprint_r.part_0.l_o7bf303		# 26	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	load4! &0 	#AR	# 33	[c=4]movsi_push_pop
	store4! &4
	jump! .L21.l_o7bf303		# 50	[c=4]jump
.L20.l_o7bf303:
	push! 0		# 15	[c=3]movsi_to_tr_unspec/0
	load8! &1 	#AR	# 17	[c=4]movsi_from_tr_unspec/1
	add! 8	
	store4	
	#	
	push! 0		# 6	[c=4]movsi_push_pop
	store8! &1 	#AR
	load4! &0 	#AR	# 45	[c=4]movsi_push_pop
	store4! &4
.L21.l_o7bf303:

	# epilogue
	set_sp! &2
	return

# FUNCTION ENDS:__sprint_r

.LC0.l_o7bf303:
#	.string "0123456789ABCDEF"
	data1 [ 48 49 50 51 52 53 54 55 56 57 65 66 67 68 69 70 0 ]
.LC1.l_o7bf303:
#	.string "0123456789abcdef"
	data1 [ 48 49 50 51 52 53 54 55 56 57 97 98 99 100 101 102 0 ]
.LC2.l_o7bf303:
#	.string "(null)"
	data1 [ 40 110 117 108 108 41 0 ]
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole move
	#peephole move+push+sub
	#peephole move_dead
	#peephole move+push(pushable)
	#peephole pop+push+commut(di)
	#peephole move_dead
	#peephole move_dead
	#peephole move_dead
	#peephole move+push(pushable)
	#peephole pop+push+commut(di)
	#peephole move_dead
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole move+push(pushable)
	#peephole pop+push+commut(di)
	#peephole move_dead
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole move+push(pushable)
	#peephole pop+push+commut(di)
	#peephole move_dead
	#peephole move_dead
	#peephole move_dead
	#peephole move_dead
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move_dead
	#peephole 1
	#peephole nop+set
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move
	#peephole move+push+sub
	#peephole move_dead
	#peephole 1
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole 1
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move_dead
	#peephole move_dead
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move_dead
	#peephole 1
	#peephole nop+set
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole move_dead
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move_dead
	#peephole move_dead
	#peephole move_dead
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move_dead
	#peephole 1
	#peephole nop+set
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole move_dead
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move_dead
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move_dead
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move_dead
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move_dead
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole move_dead
	#peephole 1
	#peephole move_dead
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move_dead
	#peephole 1
	#peephole nop+set
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole move_dead
	#peephole move_dead
	#peephole move_dead
	#peephole move_dead
	#peephole move_dead
	#peephole move_dead
	#peephole move+move(allmodes x allmodes)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole pop+push+commut(di)
	#peephole pop(deadreg)+push
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole nop+set
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole push+add+pop+push+ind pop
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole 1
	#peephole move
	#peephole move+push(pushable)
	#peephole 1
	#peephole move_dead
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole 1
	#peephole nop+set
	#peephole move_dead
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole 1
	#peephole move_dead
	#peephole move_dead
	#peephole move_dead
	#peephole pop+pusharg
	#peephole move_dead
	#peephole zero_extend
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole 1
	#peephole move_dead
	#peephole move+push(pushable)
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole pop+move2(deadreg)
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole nop+set
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move_dead
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole move_dead
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole 1
	#peephole nop+set
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move_dead
	#peephole move_dead
	#peephole move_dead
	#peephole pop(deadreg)+push
	#peephole move_dead
	#peephole move+push(pushable)
	#peephole pop+push+commut(di)
	#peephole move_dead
	#peephole pop+cmp
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move+push(pushable)
	#peephole 1
	#peephole nop+set
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+cmp
	#peephole 1
	#peephole pop+cmp
	#peephole 1
	#peephole 1
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole 1
	#peephole pop+cmp
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move2(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move2(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole redundant blockage insn
	#peephole pop+move2(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move2(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move2(deadreg)
	#peephole pop+move(deadreg)
	#peephole move_dead
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+move2(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+move(deadreg)
	#peephole pop+move2(deadreg)
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+move2(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move2(deadreg)
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole popdi(deadreg)+push
	#peephole and+popsi

# FUNCTION BEGINS:_vfiprintf_r
	EXPORT	_vfiprintf_r
_vfiprintf_r:
	# prologue (16 GPRs)

	set_sp! &-45

	load8! &46	# 2	[c=2]movdi_push_pop
	store8! &16 	#X15
	load8! &47	# 3	[c=2]movdi_push_pop
	store8! &10 	#X9
	load8! &48	# 4	[c=2]movdi_push_pop
	store8! &7 	#X6
	# CBRANCH EQ0	# 461	[c=12]cbranchdi4_internal
	load8! &15 	#X15
	jump_zero! .L23.l_o7bf303
	# END CBRANCH
	load8! &15 	#X15	# 463	[c=6]movsi_to_tr_unspec/2
	add! 80	
	load4	
	#	
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 6438	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L304.l_o7bf303
	# END CBRANCH
.L23.l_o7bf303:
	load8! &9 	#X9	# 473	[c=6]movhi_to_tr_unspec/2
	add! 16	
	load2	
	#	
	store8! &1 	#AR	# 475	[c=4]movhi_from_tr_unspec/0
	load8! &0 	#AR	# 477	[c=5]movdi_to_tr_unspec/1
	and! 0x2000		# 479	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=2)
	and! 65535		# 6661	[c=12]*peep2_cbranchhi
	# - EQ0
	jump_not_zero! .L24.l_o7bf303
	# END CBRANCH
	load8! &0 	#AR	# 488	[c=5]movdi_to_tr_unspec/1
	or! 0x2000		# 490	[c=4]*iordi3/0
	store8! &1 	#AR	# 6652	[c=4]movdi_from_tr_unspec/0
	load2! &0 	#AR	# 6653	[c=5]movhi_to_tr_unspec/1
	load8! &10 	#X9	# 499	[c=4]movhi_from_tr_unspec/1
	add! 16	
	store2	
	#	
	load8! &9 	#X9	# 501	[c=6]movsi_to_tr_unspec/2
	add! 176	
	load4	
	#	
	and! 0xffffffffffffdfff		# 507	[c=4]*anddi3/0
	load8! &10 	#X9	# 6674	[c=4]movsi_from_tr_unspec/1
	add! 176	
	store4	
	#	
.L24.l_o7bf303:
	load8! &0 	#AR	# 520	[c=5]movdi_to_tr_unspec/1
	and! 0x8		# 522	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=2)
	and! 65535		# 6651	[c=12]*peep2_cbranchhi
	# - EQ0
	jump_zero! .L25.l_o7bf303
	# END CBRANCH
	load8! &9 	#X9	# 531	[c=11]movdi_to_tr_unspec/2
	add! 24	
	load8	
	#	
	# CBRANCH - peep (modesize=8)
	# - EQ0
	jump_zero! .L25.l_o7bf303	# 6432	[c=12]*peep2_cbranchdi
	# END CBRANCH
	load8! &0 	#AR	# 554	[c=5]movdi_to_tr_unspec/1
	and! 0x1a		# 556	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=2)
	and! 65535		# 6648	[c=12]*peep2_cbranchhi
	# - EQ
	push! 10	
	xor	
	jump_zero! .L305.l_o7bf303
	# END CBRANCH
.L29.l_o7bf303:
	push! &0		# 6406	[c=4]movdi_to_tr_unspec/1
	add! 232		# 6413	[c=4]*adddi/0
	store8! &22	# 6411	[c=4]movdi_from_tr_unspec/0
	push! 0		# 586	[c=4]movdi_push_pop
	store8! &24
	push! 0		# 587	[c=4]movsi_push_pop
	store4! &23
	push! &0		# 6422	[c=4]movdi_to_tr_unspec/1
	add! 232		# 6429	[c=4]*adddi/0
	store8! &3 	#X2	# 6427	[c=4]movdi_from_tr_unspec/0
	push! 0		# 17	[c=4]movdi_push_pop
	store8! &19
	push! 0		# 18	[c=4]movsi_push_pop
	store4! &17
.L30.l_o7bf303:
	load8! &6 	#X6	# 593	[c=7]movqi_to_tr_unspec/2
	load1	
	#	
	store8! &1 	#AR	# 595	[c=4]movqi_from_tr_unspec/0
	# CBRANCH EQ0	# 597	[c=12]cbranchqi4_internal
	load1! &0 	#AR
	jump_zero! .L31.l_o7bf303
	# END CBRANCH
	# CBRANCH EQ	# 599	[c=12]cbranchqi4_internal
	load1! &0 	#AR
	push! 37	
	xor	
	jump_zero! .L179.l_o7bf303
	# END CBRANCH
	load8! &6 	#X6	# 19	[c=4]movdi_push_pop
	store8! &5 	#X4
	load8! &4 	#X4	# 601	[c=5]movdi_to_tr_unspec/1
	add! 1		# 603	[c=4]*adddi/0
	store8! &4 	#X3	# 604	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 606	[c=7]movqi_to_tr_unspec/2
	load1	
	#	
	store8! &1 	#AR	# 608	[c=4]movqi_from_tr_unspec/0
	# CBRANCH EQ0	# 610	[c=12]cbranchqi4_internal
	load1! &0 	#AR
	jump_zero! .L33.l_o7bf303
	# END CBRANCH
.L307.l_o7bf303:
	# CBRANCH EQ	# 613	[c=12]cbranchqi4_internal
	load1! &0 	#AR
	push! 37	
	xor	
	jump_zero! .L306.l_o7bf303
	# END CBRANCH
	load8! &3 	#X3	# 20	[c=4]movdi_push_pop
	store8! &5 	#X4
	load8! &4 	#X4	# 6678	[c=5]movdi_to_tr_unspec/1
	add! 1		# 6680	[c=4]*adddi/0
	store8! &4 	#X3	# 6681	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 6682	[c=7]movqi_to_tr_unspec/2
	load1	
	#	
	store8! &1 	#AR	# 6684	[c=4]movqi_from_tr_unspec/0
	# CBRANCH EQ0	# 6685	[c=12]cbranchqi4_internal
	load1! &0 	#AR
	jump_not_zero! .L307.l_o7bf303
	# END CBRANCH
.L33.l_o7bf303:
	load8! &3 	#X3	# 3175	[c=5]movdi_to_tr_unspec/1
	load8! &7 	#X6	# 3177	[c=14]*subdi3/2
	sub
	store8! &6 	#X5	# 6448	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ0	# 3185	[c=12]cbranchsi4_internal
	load4! &5 	#X5
	jump_zero! .L31.l_o7bf303
	# END CBRANCH
.L171.l_o7bf303:
	load8! &6 	#X6	# 618	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 620	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load4! &5 	#X5	# 622	[c=5]movsi_to_tr_unspec/1
	sigx4		# 624	[c=6]*extendsidi2
	store8! &1 	#AR	# 625	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 627	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 629	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &0 	#AR	# 632	[c=5]movdi_to_tr_unspec/1
	load8! &24	# 634	[c=6]*adddi/1
	add
	store8! &2 	#X1	# 635	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 637	[c=4]movdi_push_pop
	store8! &24
	load4! &22	# 6394	[c=5]movsi_to_tr_unspec/1
	add! 1		# 641	[c=4]*adddi/0
	store8! &1 	#AR	# 642	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 6397	[c=4]movsi_push_pop
	store4! &23
	# CBRANCH	# 649	[c=12]cbranchsi4_internal
	push! 7	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L36.l_o7bf303
	# END CBRANCH
	load8! &2 	#X2	# 656	[c=5]movdi_to_tr_unspec/1
	add! 16		# 658	[c=4]*adddi/0
	store8! &3 	#X2	# 659	[c=4]movdi_from_tr_unspec/0
	load4! &16	# 6337	[c=5]movsi_to_tr_unspec/1
	load8! &6 	#X5	# 6340	[c=6]*adddi/2
	add
	store4! &17	# 6645	[c=4]movsi_from_tr_unspec/0
	load8! &4 	#X4	# 699	[c=6]movqi_to_tr_unspec/2
	add! 1	
	load1	
	#	
	# CBRANCH - peep (modesize=1)
	and! 255		# 6343	[c=12]*peep2_cbranchqi
	# - EQ0
	jump_zero! .L31.l_o7bf303
	# END CBRANCH
.L32.l_o7bf303:
	load8! &3 	#X3	# 706	[c=5]movdi_to_tr_unspec/1
	add! 1		# 708	[c=4]*adddi/0
	store8! &1 	#AR	# 709	[c=4]movdi_from_tr_unspec/0
	push! 0		# 711	[c=4]movqi_push_pop
	store1! &20
	push! 0		# 40	[c=4]movqi_push_pop
	store8! &4 	#X3
	push! 0		# 41	[c=4]movqi_push_pop
	store8! &6 	#X5
	push! -1		# 42	[c=4]movsi_push_pop
	store8! &9 	#X8
	push! 0		# 43	[c=4]movsi_push_pop
	store8! &8 	#X7
	push! 0		# 44	[c=4]movsi_push_pop
	store8! &5 	#X4
.L40.l_o7bf303:
	load8! &0 	#AR	# 718	[c=5]movdi_to_tr_unspec/1
	add! 1		# 720	[c=4]*adddi/0
	store8! &7 	#X6	# 721	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 723	[c=7]movqi_to_tr_unspec/2
	load1	
	#	
	sigx1		# 729	[c=6]*extendqidi2
	store8! &2 	#X1	# 6643	[c=4]movsi_from_tr_unspec/0
.L42.l_o7bf303:
	#CASESI		# 741	[c=43]casesi_internal
	push! 88	
	load4! &2 	#X1
	sigx4	
	add! -32	
	lt_u	
	not	
	jump_zero! .L43.l_o7bf303
	load4! &1 	#X1
	sigx4	
	add! -32	
	mult! 8	
	add! .L45.l_o7bf303	
	load8	
	jump	
	##	
.L45.l_o7bf303:
	data8 [.L65.l_o7bf303]#casesi entry
	data8 [.L43.l_o7bf303]#casesi entry
	data8 [.L43.l_o7bf303]#casesi entry
	data8 [.L64.l_o7bf303]#casesi entry
	data8 [.L43.l_o7bf303]#casesi entry
	data8 [.L43.l_o7bf303]#casesi entry
	data8 [.L43.l_o7bf303]#casesi entry
	data8 [.L43.l_o7bf303]#casesi entry
	data8 [.L43.l_o7bf303]#casesi entry
	data8 [.L43.l_o7bf303]#casesi entry
	data8 [.L63.l_o7bf303]#casesi entry
	data8 [.L181.l_o7bf303]#casesi entry
	data8 [.L43.l_o7bf303]#casesi entry
	data8 [.L62.l_o7bf303]#casesi entry
	data8 [.L61.l_o7bf303]#casesi entry
	data8 [.L43.l_o7bf303]#casesi entry
	data8 [.L60.l_o7bf303]#casesi entry
	data8 [.L182.l_o7bf303]#casesi entry
	data8 [.L182.l_o7bf303]#casesi entry
	data8 [.L182.l_o7bf303]#casesi entry
	data8 [.L182.l_o7bf303]#casesi entry
	data8 [.L182.l_o7bf303]#casesi entry
	data8 [.L182.l_o7bf303]#casesi entry
	data8 [.L182.l_o7bf303]#casesi entry
	data8 [.L182.l_o7bf303]#casesi entry
	data8 [.L182.l_o7bf303]#casesi entry
	data8 [.L43.l_o7bf303]#casesi entry
	data8 [.L43.l_o7bf303]#casesi entry
	data8 [.L43.l_o7bf303]#casesi entry
	data8 [.L43.l_o7bf303]#casesi entry
	data8 [.L43.l_o7bf303]#casesi entry
	data8 [.L43.l_o7bf303]#casesi entry
	data8 [.L43.l_o7bf303]#casesi entry
	data8 [.L43.l_o7bf303]#casesi entry
	data8 [.L43.l_o7bf303]#casesi entry
	data8 [.L43.l_o7bf303]#casesi entry
	data8 [.L58.l_o7bf303]#casesi entry
	data8 [.L43.l_o7bf303]#casesi entry
	data8 [.L43.l_o7bf303]#casesi entry
	data8 [.L43.l_o7bf303]#casesi entry
	data8 [.L43.l_o7bf303]#casesi entry
	data8 [.L43.l_o7bf303]#casesi entry
	data8 [.L43.l_o7bf303]#casesi entry
	data8 [.L43.l_o7bf303]#casesi entry
	data8 [.L43.l_o7bf303]#casesi entry
	data8 [.L43.l_o7bf303]#casesi entry
	data8 [.L43.l_o7bf303]#casesi entry
	data8 [.L57.l_o7bf303]#casesi entry
	data8 [.L43.l_o7bf303]#casesi entry
	data8 [.L43.l_o7bf303]#casesi entry
	data8 [.L43.l_o7bf303]#casesi entry
	data8 [.L43.l_o7bf303]#casesi entry
	data8 [.L43.l_o7bf303]#casesi entry
	data8 [.L56.l_o7bf303]#casesi entry
	data8 [.L43.l_o7bf303]#casesi entry
	data8 [.L43.l_o7bf303]#casesi entry
	data8 [.L55.l_o7bf303]#casesi entry
	data8 [.L43.l_o7bf303]#casesi entry
	data8 [.L43.l_o7bf303]#casesi entry
	data8 [.L43.l_o7bf303]#casesi entry
	data8 [.L43.l_o7bf303]#casesi entry
	data8 [.L43.l_o7bf303]#casesi entry
	data8 [.L43.l_o7bf303]#casesi entry
	data8 [.L43.l_o7bf303]#casesi entry
	data8 [.L43.l_o7bf303]#casesi entry
	data8 [.L43.l_o7bf303]#casesi entry
	data8 [.L43.l_o7bf303]#casesi entry
	data8 [.L54.l_o7bf303]#casesi entry
	data8 [.L52.l_o7bf303]#casesi entry
	data8 [.L43.l_o7bf303]#casesi entry
	data8 [.L43.l_o7bf303]#casesi entry
	data8 [.L43.l_o7bf303]#casesi entry
	data8 [.L53.l_o7bf303]#casesi entry
	data8 [.L52.l_o7bf303]#casesi entry
	data8 [.L43.l_o7bf303]#casesi entry
	data8 [.L43.l_o7bf303]#casesi entry
	data8 [.L48.l_o7bf303]#casesi entry
	data8 [.L43.l_o7bf303]#casesi entry
	data8 [.L51.l_o7bf303]#casesi entry
	data8 [.L50.l_o7bf303]#casesi entry
	data8 [.L49.l_o7bf303]#casesi entry
	data8 [.L48.l_o7bf303]#casesi entry
	data8 [.L43.l_o7bf303]#casesi entry
	data8 [.L47.l_o7bf303]#casesi entry
	data8 [.L43.l_o7bf303]#casesi entry
	data8 [.L46.l_o7bf303]#casesi entry
	data8 [.L43.l_o7bf303]#casesi entry
	data8 [.L43.l_o7bf303]#casesi entry
	data8 [.L44.l_o7bf303]#casesi entry
.L25.l_o7bf303:
	load8! &9 	#X9	# 538	[c=4]pushdi1_not_fp/1
	load8! &16 	#X15	# 539	[c=4]pushdi1_not_fp/1
	call! __swsetup_r		# 540	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH EQ0	# 542	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L166.l_o7bf303
	# END CBRANCH
	load8! &9 	#X9	# 548	[c=6]movhi_to_tr_unspec/2
	add! 16	
	load2	
	#	
	store8! &1 	#AR	# 550	[c=4]movhi_from_tr_unspec/0
	load8! &0 	#AR	# 6688	[c=5]movdi_to_tr_unspec/1
	and! 0x1a		# 6690	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=2)
	and! 65535		# 6691	[c=12]*peep2_cbranchhi
	push! 10	
	xor	
	push! 1	
	lt_u	
	jump_zero! .L29.l_o7bf303
	# END CBRANCH
	jump! .L305.l_o7bf303		# 7160	[c=4]jump
.L48.l_o7bf303:
	load8! &4 	#X4	# 1013	[c=5]movdi_to_tr_unspec/1
	or! 0x10		# 1015	[c=4]*iordi3/0
	store8! &5 	#X4	# 6606	[c=4]movsi_from_tr_unspec/0
.L41.l_o7bf303:
	load8! &6 	#X6	# 39	[c=4]movdi_push_pop
	store8! &1 	#AR
	jump! .L40.l_o7bf303		# 7162	[c=4]jump
.L306.l_o7bf303:
	load8! &3 	#X3	# 3191	[c=5]movdi_to_tr_unspec/1
	load8! &7 	#X6	# 3193	[c=14]*subdi3/2
	sub
	store8! &6 	#X5	# 6446	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ0	# 3200	[c=12]cbranchsi4_internal
	load4! &5 	#X5
	jump_not_zero! .L171.l_o7bf303
	# END CBRANCH
	load8! &3 	#X3	# 6694	[c=5]movdi_to_tr_unspec/1
	add! 1		# 6696	[c=4]*adddi/0
	store8! &1 	#AR	# 6697	[c=4]movdi_from_tr_unspec/0
	push! 0		# 6698	[c=4]movqi_push_pop
	store1! &20
	push! 0		# 6699	[c=4]movqi_push_pop
	store8! &4 	#X3
	push! 0		# 6700	[c=4]movqi_push_pop
	store8! &6 	#X5
	push! -1		# 6701	[c=4]movsi_push_pop
	store8! &9 	#X8
	push! 0		# 6702	[c=4]movsi_push_pop
	store8! &8 	#X7
	push! 0		# 6703	[c=4]movsi_push_pop
	store8! &5 	#X4
	jump! .L40.l_o7bf303		# 7164	[c=4]jump
.L36.l_o7bf303:
	# CBRANCH EQ0	# 666	[c=12]cbranchdi4_internal
	load8! &1 	#X1
	jump_zero! .L308.l_o7bf303
	# END CBRANCH
	push! &0		# 6368	[c=4]movdi_to_tr_unspec/1
	add! 168		# 6375	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 6377	[c=0]*peep2_pop_pusharg
	load8! &10 	#X9	# 679	[c=4]pushdi1_not_fp/1
	load8! &17 	#X15	# 680	[c=4]pushdi1_not_fp/1
	call! .Li___sprint_r.part_0.l_o7bf303		# 681	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	# CBRANCH EQ0	# 683	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L39.l_o7bf303
	# END CBRANCH
	push! &0		# 6352	[c=4]movdi_to_tr_unspec/1
	add! 232		# 6359	[c=4]*adddi/0
	store8! &3 	#X2	# 6357	[c=4]movdi_from_tr_unspec/0
	load4! &16	# 6707	[c=5]movsi_to_tr_unspec/1
	load8! &6 	#X5	# 6709	[c=6]*adddi/2
	add
	store4! &17	# 6710	[c=4]movsi_from_tr_unspec/0
	load8! &4 	#X4	# 6711	[c=6]movqi_to_tr_unspec/2
	add! 1	
	load1	
	#	
	# CBRANCH - peep (modesize=1)
	and! 255		# 6713	[c=12]*peep2_cbranchqi
	# - EQ0
	jump_not_zero! .L32.l_o7bf303
	# END CBRANCH
.L31.l_o7bf303:
	# CBRANCH EQ0	# 3099	[c=14]cbranchdi4_internal
	load8! &23
	jump_zero! .L39.l_o7bf303
	# END CBRANCH
	push! &0		# 5210	[c=4]movdi_to_tr_unspec/1
	add! 168		# 5217	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 5219	[c=0]*peep2_pop_pusharg
	load8! &10 	#X9	# 3107	[c=4]pushdi1_not_fp/1
	load8! &17 	#X15	# 3108	[c=4]pushdi1_not_fp/1
	call! .Li___sprint_r.part_0.l_o7bf303		# 3109	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
.L39.l_o7bf303:
	load8! &9 	#X9	# 3112	[c=6]movhi_to_tr_unspec/2
	add! 16	
	load2	
	#	
	and! 0x40		# 3118	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=2)
	and! 65535		# 6454	[c=12]*peep2_cbranchhi
	# - EQ0
	jump_not_zero! .L166.l_o7bf303
	# END CBRANCH
	load4! &16	# 3311	[c=2]movsi_push_pop
	store4! &47
	jump! .L309.l_o7bf303		# 7168	[c=4]jump
.L63.l_o7bf303:
	load8! &49	# 775	[c=5]movdi_to_tr_unspec/1
	add! 8		# 777	[c=4]*adddi/0
	store8! &1 	#AR	# 778	[c=4]movdi_from_tr_unspec/0
	load8! &49	# 4575	[c=2]movdi_push_pop
	store8! &2 	#X1
	load8! &1 	#X1	# 780	[c=7]movsi_to_tr_unspec/2
	load4	
	#	
	store8! &8 	#X7	# 782	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 784	[c=12]cbranchsi4_internal
	load4! &7 	#X7
	add! -2147483648	
	push! 0	
	add! -2147483648	
	lt_u	
	jump_zero! .L184.l_o7bf303
	# END CBRANCH
	load8! &7 	#X7	# 786	[c=5]movdi_to_tr_unspec/1
	neg		# 788	[c=3]*negdi2
	store8! &8 	#X7	# 6638	[c=4]movsi_from_tr_unspec/0
	load8! &0 	#AR	# 48	[c=4]movdi_push_pop
	store8! &50
.L62.l_o7bf303:
	load8! &4 	#X4	# 797	[c=5]movdi_to_tr_unspec/1
	or! 0x4		# 799	[c=4]*iordi3/0
	store8! &5 	#X4	# 6636	[c=4]movsi_from_tr_unspec/0
	load8! &6 	#X6	# 6716	[c=4]movdi_push_pop
	store8! &1 	#AR
	jump! .L40.l_o7bf303		# 7170	[c=4]jump
.L181.l_o7bf303:
	push! 1		# 32	[c=4]movqi_push_pop
	store8! &4 	#X3
	push! 43		# 33	[c=4]movqi_push_pop
	store8! &6 	#X5
	load8! &6 	#X6	# 6719	[c=4]movdi_push_pop
	store8! &1 	#AR
	jump! .L40.l_o7bf303		# 7172	[c=4]jump
.L182.l_o7bf303:
	push! 0		# 50	[c=4]movsi_push_pop
	store8! &8 	#X7
.L59.l_o7bf303:
	load8! &7 	#X7	# 934	[c=5]movdi_to_tr_unspec/1
	mult! 10		# 936	[c=4]*muldi3/0
	store8! &1 	#AR	# 6609	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 6610	[c=5]movdi_to_tr_unspec/1
	add! -48		# 945	[c=4]*adddi/0
	load8! &1 	#AR	# 958	[c=6]*adddi/2
	add
	store8! &8 	#X7	# 6614	[c=4]movsi_from_tr_unspec/0
	load8! &6 	#X6	# 965	[c=5]movdi_to_tr_unspec/1
	add! 1		# 967	[c=4]*adddi/0
	store8! &1 	#AR	# 968	[c=4]movdi_from_tr_unspec/0
	load8! &6 	#X6	# 970	[c=7]movqi_to_tr_unspec/2
	load1	
	#	
	sigx1		# 976	[c=6]*extendqidi2
	store8! &2 	#X1	# 6616	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 6617	[c=5]movdi_to_tr_unspec/1
	add! -48		# 985	[c=4]*adddi/0
	store8! &11 	#X10	# 6620	[c=4]movsi_from_tr_unspec/0
	load8! &0 	#AR	# 993	[c=4]movdi_push_pop
	store8! &7 	#X6
	# CBRANCH	# 994	[c=12]cbranchsi4_internal
	push! 9	
	load4! &11 	#X10
	lt_u	
	jump_zero! .L59.l_o7bf303
	# END CBRANCH
.L70.l_o7bf303:
	load8! &0 	#AR	# 47	[c=4]movdi_push_pop
	store8! &7 	#X6
	jump! .L42.l_o7bf303		# 7174	[c=4]jump
.L58.l_o7bf303:
	# CBRANCH EQ0	# 1045	[c=12]cbranchqi4_internal
	load1! &3 	#X3
	jump_not_zero! .L310.l_o7bf303
	# END CBRANCH
	load8! &4 	#X4	# 1050	[c=5]movdi_to_tr_unspec/1
	or! 0x10		# 1052	[c=4]*iordi3/0
	store8! &5 	#X4	# 6603	[c=4]movsi_from_tr_unspec/0
.L74.l_o7bf303:
	load8! &49	# 1085	[c=5]movdi_to_tr_unspec/1
	add! 8		# 1087	[c=4]*adddi/0
	store8! &4 	#X3	# 1088	[c=4]movdi_from_tr_unspec/0
	load8! &49	# 4585	[c=2]movdi_push_pop
	store8! &2 	#X1
	load8! &1 	#X1	# 1090	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	store8! &2 	#X1	# 1092	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 1094	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &3 	#X3	# 51	[c=4]movdi_push_pop
	store8! &50
.L77.l_o7bf303:
	# CBRANCH	# 1148	[c=12]cbranchdi4_internal
	load8! &1 	#X1
	add! -9223372036854775808	
	push! 0	
	add! -9223372036854775808	
	lt_u	
	not	
	jump_zero! .L311.l_o7bf303
	# END CBRANCH
.L79.l_o7bf303:
	load1! &19	# 3168	[c=2]movqi_push_pop
	store8! &2 	#X1
	# CBRANCH EQ	# 3169	[c=12]cbranchsi4_internal
	load4! &8 	#X8
	push! 4294967295	
	xor	
	jump_zero! .L106.l_o7bf303
	# END CBRANCH
	load8! &4 	#X4	# 3273	[c=5]movdi_to_tr_unspec/1
	and! 0xffffffffffffff7f		# 3275	[c=4]*anddi3/0
	store8! &12 	#X11	# 6440	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ0	# 3282	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_not_zero! .L312.l_o7bf303
	# END CBRANCH
	# CBRANCH EQ0	# 3306	[c=12]cbranchsi4_internal
	load4! &8 	#X8
	jump_not_zero! .L201.l_o7bf303
	# END CBRANCH
	push! 1		# 118	[c=4]movsi_push_pop
	store8! &4 	#X3
.L192.l_o7bf303:
	push! 0		# 132	[c=4]movsi_push_pop
	store8! &9 	#X8
	push! 0		# 133	[c=4]movsi_push_pop
	store8! &13 	#X12
	push! &0		# 6033	[c=4]movdi_to_tr_unspec/1
	add! 192		# 6040	[c=4]*adddi/0
	add! 40		# 141	[c=4]*adddi/0
	store8! &4 	#X3	# 142	[c=4]movdi_from_tr_unspec/0
.L94.l_o7bf303:
	load4! &8 	#X8	# 1956	[c=4]movsi_push_pop
	store8! &11 	#X10
	# CBRANCH	# 1957	[c=12]cbranchsi4_internal
	load4! &8 	#X8
	add! -2147483648	
	load4! &13 	#X12
	add! -2147483648	
	lt_u	
	jump_zero! .L115.l_o7bf303
	# END CBRANCH
	load4! &12 	#X12	# 1958	[c=4]movsi_push_pop
	store8! &11 	#X10
.L115.l_o7bf303:
	# CBRANCH EQ0	# 1960	[c=12]cbranchqi4_internal
	load1! &1 	#X1
	jump_zero! .L116.l_o7bf303
	# END CBRANCH
	load8! &10 	#X10	# 1962	[c=5]movdi_to_tr_unspec/1
	add! 1		# 1964	[c=4]*adddi/0
	store8! &11 	#X10	# 6527	[c=4]movsi_from_tr_unspec/0
.L116.l_o7bf303:
	load8! &11 	#X11	# 1973	[c=5]movdi_to_tr_unspec/1
	and! 0x2		# 1975	[c=4]*anddi3/0
	store4! &18	# 6525	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ0	# 1982	[c=14]cbranchsi4_internal
	load4! &17
	jump_zero! .L117.l_o7bf303
	# END CBRANCH
	load8! &10 	#X10	# 1984	[c=5]movdi_to_tr_unspec/1
	add! 2		# 1986	[c=4]*adddi/0
	store8! &11 	#X10	# 6524	[c=4]movsi_from_tr_unspec/0
.L117.l_o7bf303:
	load8! &11 	#X11	# 1995	[c=5]movdi_to_tr_unspec/1
	and! 0x84		# 1997	[c=4]*anddi3/0
	store8! &14 	#X13	# 6520	[c=4]movsi_from_tr_unspec/0
	load8! &23	# 2004	[c=2]movdi_push_pop
	store8! &1 	#AR
	load4! &22	# 2005	[c=2]movsi_push_pop
	store8! &2 	#X1
	load8! &1 	#X1	# 2006	[c=5]movdi_to_tr_unspec/1
	add! 1		# 2008	[c=4]*adddi/0
	store8! &6 	#X5	# 6522	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ0	# 2015	[c=12]cbranchsi4_internal
	load4! &13 	#X13
	jump_not_zero! .L118.l_o7bf303
	# END CBRANCH
	load8! &10 	#X10	# 5977	[c=5]movdi_to_tr_unspec/1
	load8! &8 	#X7	# 5979	[c=14]*subdi3/2
	sub
	neg		# 5980	[c=4]*neg_tr
	store8! &5 	#X4	# 6517	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 6518	[c=12]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &5 	#X4
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L313.l_o7bf303
	# END CBRANCH
.L118.l_o7bf303:
	load8! &2 	#X2	# 2223	[c=5]movdi_to_tr_unspec/1
	add! 16		# 2225	[c=4]*adddi/0
	store8! &5 	#X4	# 2226	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 2228	[c=14]cbranchqi4_internal
	load1! &19
	jump_zero! .L128.l_o7bf303
	# END CBRANCH
	push! &0		# 5877	[c=4]movdi_to_tr_unspec/1
	add! 152		# 5884	[c=4]*adddi/0
	load8! &3 	#X2	# 5882	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	push! 1		# 2235	[c=3]movdi_to_tr_unspec/0
	load8! &3 	#X2	# 2237	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &0 	#AR	# 2244	[c=5]movdi_to_tr_unspec/1
	add! 1		# 2246	[c=4]*adddi/0
	store8! &1 	#AR	# 2247	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 2250	[c=4]movdi_push_pop
	store8! &24
	load4! &5 	#X5	# 2251	[c=4]movsi_push_pop
	store4! &23
	# CBRANCH	# 2252	[c=12]cbranchsi4_internal
	push! 7	
	add! -2147483648	
	load4! &6 	#X5
	add! -2147483648	
	lt_u	
	jump_zero! .L176.l_o7bf303
	# END CBRANCH
	# CBRANCH EQ0	# 2272	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L314.l_o7bf303
	# END CBRANCH
	push! &0		# 5825	[c=4]movdi_to_tr_unspec/1
	add! 168		# 5832	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 5834	[c=0]*peep2_pop_pusharg
	load8! &10 	#X9	# 2287	[c=4]pushdi1_not_fp/1
	load8! &17 	#X15	# 2288	[c=4]pushdi1_not_fp/1
	call! .Li___sprint_r.part_0.l_o7bf303		# 2289	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	# CBRANCH EQ0	# 2291	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L39.l_o7bf303
	# END CBRANCH
	load8! &23	# 2293	[c=2]movdi_push_pop
	store8! &1 	#AR
	load4! &22	# 2294	[c=2]movsi_push_pop
	store8! &2 	#X1
	load8! &1 	#X1	# 2295	[c=5]movdi_to_tr_unspec/1
	add! 1		# 2297	[c=4]*adddi/0
	store8! &6 	#X5	# 6504	[c=4]movsi_from_tr_unspec/0
	push! &0		# 5792	[c=4]movdi_to_tr_unspec/1
	add! 232		# 5799	[c=4]*adddi/0
	add! 16		# 226	[c=4]*adddi/0
	store8! &5 	#X4	# 227	[c=4]movdi_from_tr_unspec/0
	push! &0		# 5809	[c=4]movdi_to_tr_unspec/1
	add! 232		# 5816	[c=4]*adddi/0
	store8! &3 	#X2	# 5814	[c=4]movdi_from_tr_unspec/0
.L128.l_o7bf303:
	# CBRANCH EQ0	# 2306	[c=14]cbranchsi4_internal
	load4! &17
	jump_zero! .L132.l_o7bf303
	# END CBRANCH
	push! &0		# 5775	[c=4]movdi_to_tr_unspec/1
	add! 160		# 5782	[c=4]*adddi/0
	load8! &3 	#X2	# 5780	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	push! 2		# 2313	[c=3]movdi_to_tr_unspec/0
	load8! &3 	#X2	# 2315	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &0 	#AR	# 2322	[c=5]movdi_to_tr_unspec/1
	add! 2		# 2324	[c=4]*adddi/0
	store8! &1 	#AR	# 2325	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 2328	[c=4]movdi_push_pop
	store8! &24
	load4! &5 	#X5	# 2329	[c=4]movsi_push_pop
	store4! &23
	# CBRANCH	# 2330	[c=12]cbranchsi4_internal
	push! 7	
	add! -2147483648	
	load4! &6 	#X5
	add! -2147483648	
	lt_u	
	jump_zero! .L175.l_o7bf303
	# END CBRANCH
	# CBRANCH EQ0	# 2350	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L315.l_o7bf303
	# END CBRANCH
	push! &0		# 5723	[c=4]movdi_to_tr_unspec/1
	add! 168		# 5730	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 5732	[c=0]*peep2_pop_pusharg
	load8! &10 	#X9	# 2363	[c=4]pushdi1_not_fp/1
	load8! &17 	#X15	# 2364	[c=4]pushdi1_not_fp/1
	call! .Li___sprint_r.part_0.l_o7bf303		# 2365	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	# CBRANCH EQ0	# 2367	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L39.l_o7bf303
	# END CBRANCH
	load8! &23	# 2369	[c=2]movdi_push_pop
	store8! &1 	#AR
	load4! &22	# 2370	[c=2]movsi_push_pop
	store8! &2 	#X1
	load8! &1 	#X1	# 2371	[c=5]movdi_to_tr_unspec/1
	add! 1		# 2373	[c=4]*adddi/0
	store8! &6 	#X5	# 6500	[c=4]movsi_from_tr_unspec/0
	push! &0		# 5690	[c=4]movdi_to_tr_unspec/1
	add! 232		# 5697	[c=4]*adddi/0
	add! 16		# 282	[c=4]*adddi/0
	store8! &5 	#X4	# 283	[c=4]movdi_from_tr_unspec/0
	push! &0		# 5707	[c=4]movdi_to_tr_unspec/1
	add! 232		# 5714	[c=4]*adddi/0
	store8! &3 	#X2	# 5712	[c=4]movdi_from_tr_unspec/0
.L132.l_o7bf303:
	# CBRANCH EQ	# 2382	[c=12]cbranchsi4_internal
	load4! &13 	#X13
	push! 128	
	xor	
	jump_zero! .L316.l_o7bf303
	# END CBRANCH
.L135.l_o7bf303:
	load8! &12 	#X12	# 5527	[c=5]movdi_to_tr_unspec/1
	load8! &9 	#X8	# 5529	[c=14]*subdi3/2
	sub
	neg		# 5530	[c=4]*neg_tr
	store8! &9 	#X8	# 6485	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 6486	[c=12]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &9 	#X8
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L317.l_o7bf303
	# END CBRANCH
.L143.l_o7bf303:
	load8! &3 	#X3	# 2796	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 2798	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load4! &12 	#X12	# 2800	[c=5]movsi_to_tr_unspec/1
	sigx4		# 2802	[c=6]*extendsidi2
	store8! &2 	#X1	# 2803	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 2805	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 2807	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &1 	#X1	# 2809	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 2811	[c=6]*adddi/2
	add
	store8! &1 	#AR	# 2812	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 2814	[c=4]movdi_push_pop
	store8! &24
	load4! &5 	#X5	# 2815	[c=4]movsi_push_pop
	store4! &23
	# CBRANCH	# 2816	[c=12]cbranchsi4_internal
	push! 7	
	add! -2147483648	
	load4! &6 	#X5
	add! -2147483648	
	lt_u	
	jump_zero! .L151.l_o7bf303
	# END CBRANCH
	# CBRANCH EQ0	# 2818	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L318.l_o7bf303
	# END CBRANCH
	push! &0		# 5388	[c=4]movdi_to_tr_unspec/1
	add! 168		# 5395	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 5397	[c=0]*peep2_pop_pusharg
	load8! &10 	#X9	# 2842	[c=4]pushdi1_not_fp/1
	load8! &17 	#X15	# 2843	[c=4]pushdi1_not_fp/1
	call! .Li___sprint_r.part_0.l_o7bf303		# 2844	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	# CBRANCH EQ0	# 2846	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L39.l_o7bf303
	# END CBRANCH
	load8! &23	# 2848	[c=2]movdi_push_pop
	store8! &1 	#AR
	push! &0		# 5372	[c=4]movdi_to_tr_unspec/1
	add! 232		# 5379	[c=4]*adddi/0
	store8! &5 	#X4	# 5377	[c=4]movdi_from_tr_unspec/0
.L151.l_o7bf303:
	load8! &11 	#X11	# 2851	[c=5]movdi_to_tr_unspec/1
	and! 0x4		# 2853	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 6471	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L155.l_o7bf303
	# END CBRANCH
	load8! &10 	#X10	# 5357	[c=5]movdi_to_tr_unspec/1
	load8! &8 	#X7	# 5359	[c=14]*subdi3/2
	sub
	neg		# 5360	[c=4]*neg_tr
	store8! &3 	#X2	# 6468	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 2875	[c=12]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &3 	#X2
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L173.l_o7bf303
	# END CBRANCH
.L155.l_o7bf303:
	# CBRANCH	# 3062	[c=12]cbranchsi4_internal
	load4! &7 	#X7
	add! -2147483648	
	load4! &11 	#X10
	add! -2147483648	
	lt_u	
	jump_zero! .L165.l_o7bf303
	# END CBRANCH
	load4! &10 	#X10	# 3063	[c=4]movsi_push_pop
	store8! &8 	#X7
.L165.l_o7bf303:
	load4! &16	# 5254	[c=5]movsi_to_tr_unspec/1
	load8! &8 	#X7	# 5257	[c=6]*adddi/2
	add
	store4! &17	# 6456	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ0	# 3078	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_not_zero! .L319.l_o7bf303
	# END CBRANCH
	push! 0		# 3093	[c=4]movsi_push_pop
	store4! &23
	push! &0		# 5228	[c=4]movdi_to_tr_unspec/1
	add! 232		# 5235	[c=4]*adddi/0
	store8! &3 	#X2	# 5233	[c=4]movdi_from_tr_unspec/0
	jump! .L30.l_o7bf303		# 7186	[c=4]jump
.L65.l_o7bf303:
	# CBRANCH EQ0	# 756	[c=12]cbranchqi4_internal
	load1! &5 	#X5
	jump_not_zero! .L41.l_o7bf303
	# END CBRANCH
	push! 1		# 36	[c=4]movqi_push_pop
	store8! &4 	#X3
	push! 32		# 37	[c=4]movqi_push_pop
	store8! &6 	#X5
	load8! &6 	#X6	# 6722	[c=4]movdi_push_pop
	store8! &1 	#AR
	jump! .L40.l_o7bf303		# 7188	[c=4]jump
.L64.l_o7bf303:
	load8! &4 	#X4	# 762	[c=5]movdi_to_tr_unspec/1
	or! 0x1		# 764	[c=4]*iordi3/0
	store8! &5 	#X4	# 6640	[c=4]movsi_from_tr_unspec/0
	load8! &6 	#X6	# 6725	[c=4]movdi_push_pop
	store8! &1 	#AR
	jump! .L40.l_o7bf303		# 7190	[c=4]jump
.L60.l_o7bf303:
	load8! &4 	#X4	# 921	[c=5]movdi_to_tr_unspec/1
	or! 0x80		# 923	[c=4]*iordi3/0
	store8! &5 	#X4	# 6622	[c=4]movsi_from_tr_unspec/0
	load8! &6 	#X6	# 6728	[c=4]movdi_push_pop
	store8! &1 	#AR
	jump! .L40.l_o7bf303		# 7192	[c=4]jump
.L61.l_o7bf303:
	load8! &6 	#X6	# 810	[c=5]movdi_to_tr_unspec/1
	add! 1		# 812	[c=4]*adddi/0
	store8! &11 	#X10	# 813	[c=4]movdi_from_tr_unspec/0
	load8! &6 	#X6	# 815	[c=7]movqi_to_tr_unspec/2
	load1	
	#	
	sigx1		# 821	[c=6]*extendqidi2
	store8! &2 	#X1	# 6634	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ	# 828	[c=12]cbranchsi4_internal
	load4! &1 	#X1
	push! 42	
	xor	
	jump_zero! .L68.l_o7bf303
	# END CBRANCH
	load8! &1 	#X1	# 830	[c=5]movdi_to_tr_unspec/1
	add! -48		# 832	[c=4]*adddi/0
	store8! &7 	#X6	# 6631	[c=4]movsi_from_tr_unspec/0
	push! 0		# 49	[c=4]movsi_push_pop
	store8! &9 	#X8
	load8! &10 	#X10	# 45	[c=4]movdi_push_pop
	store8! &1 	#AR
	# CBRANCH	# 840	[c=12]cbranchsi4_internal
	push! 9	
	load4! &7 	#X6
	lt_u	
	not	
	jump_zero! .L70.l_o7bf303
	# END CBRANCH
.L69.l_o7bf303:
	load8! &8 	#X8	# 864	[c=5]movdi_to_tr_unspec/1
	mult! 10		# 866	[c=4]*muldi3/0
	store8! &1 	#AR	# 6669	[c=4]movdi_from_tr_unspec/0
	load8! &6 	#X6	# 6670	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 879	[c=6]*adddi/2
	add
	store8! &9 	#X8	# 6625	[c=4]movsi_from_tr_unspec/0
	load8! &10 	#X10	# 886	[c=5]movdi_to_tr_unspec/1
	add! 1		# 888	[c=4]*adddi/0
	store8! &1 	#AR	# 889	[c=4]movdi_from_tr_unspec/0
	load8! &10 	#X10	# 891	[c=7]movqi_to_tr_unspec/2
	load1	
	#	
	sigx1		# 897	[c=6]*extendqidi2
	store8! &2 	#X1	# 6627	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 6628	[c=5]movdi_to_tr_unspec/1
	add! -48		# 906	[c=4]*adddi/0
	store8! &7 	#X6	# 907	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 6328	[c=4]movdi_push_pop
	store8! &11 	#X10
	# CBRANCH	# 915	[c=12]cbranchsi4_internal
	push! 9	
	load4! &7 	#X6
	lt_u	
	not	
	jump_zero! .L70.l_o7bf303
	# END CBRANCH
	load8! &8 	#X8	# 6731	[c=5]movdi_to_tr_unspec/1
	mult! 10		# 6733	[c=4]*muldi3/0
	store8! &1 	#AR	# 6734	[c=4]movdi_from_tr_unspec/0
	load8! &6 	#X6	# 6735	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 6737	[c=6]*adddi/2
	add
	store8! &9 	#X8	# 6739	[c=4]movsi_from_tr_unspec/0
	load8! &10 	#X10	# 6740	[c=5]movdi_to_tr_unspec/1
	add! 1		# 6742	[c=4]*adddi/0
	store8! &1 	#AR	# 6743	[c=4]movdi_from_tr_unspec/0
	load8! &10 	#X10	# 6744	[c=7]movqi_to_tr_unspec/2
	load1	
	#	
	sigx1		# 6746	[c=6]*extendqidi2
	store8! &2 	#X1	# 6747	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 6748	[c=5]movdi_to_tr_unspec/1
	add! -48		# 6750	[c=4]*adddi/0
	store8! &7 	#X6	# 6751	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 6752	[c=4]movdi_push_pop
	store8! &11 	#X10
	# CBRANCH	# 6753	[c=12]cbranchsi4_internal
	push! 9	
	load4! &7 	#X6
	lt_u	
	jump_zero! .L69.l_o7bf303
	# END CBRANCH
	jump! .L70.l_o7bf303		# 7195	[c=4]jump
.L54.l_o7bf303:
	load8! &49	# 1026	[c=5]movdi_to_tr_unspec/1
	add! 8		# 1028	[c=4]*adddi/0
	store8! &1 	#AR	# 1029	[c=4]movdi_from_tr_unspec/0
	load8! &49	# 4577	[c=2]movdi_push_pop
	store8! &4 	#X3
	load8! &3 	#X3	# 1031	[c=7]movsi_to_tr_unspec/2
	load4	
	#	
	store1! &25	# 6604	[c=4]movqi_from_tr_unspec/0
	push! 0		# 1040	[c=4]movqi_push_pop
	store1! &20
	load8! &0 	#AR	# 451	[c=4]movdi_push_pop
	store8! &50
	push! 1		# 452	[c=4]movsi_push_pop
	store8! &11 	#X10
	push! 1		# 453	[c=4]movsi_push_pop
	store8! &13 	#X12
	push! &0		# 6304	[c=4]movdi_to_tr_unspec/1
	add! 192		# 6311	[c=4]*adddi/0
	store8! &4 	#X3	# 6309	[c=4]movdi_from_tr_unspec/0
	load4! &4 	#X4	# 181	[c=4]movsi_push_pop
	store8! &12 	#X11
	push! 0		# 182	[c=4]movsi_push_pop
	store8! &9 	#X8
	jump! .L116.l_o7bf303		# 7197	[c=4]jump
.L55.l_o7bf303:
	# CBRANCH EQ0	# 1498	[c=12]cbranchqi4_internal
	load1! &3 	#X3
	jump_not_zero! .L320.l_o7bf303
	# END CBRANCH
	push! .LC0.l_o7bf303		# 54	[c=4]movdi_push_pop
	store8! &19
.L67.l_o7bf303:
	load8! &4 	#X4	# 1505	[c=5]movdi_to_tr_unspec/1
	and! 0x10		# 1507	[c=4]*anddi3/0
	store8! &1 	#AR	# 6568	[c=4]movdi_from_tr_unspec/0
	load8! &49	# 6569	[c=5]movdi_to_tr_unspec/1
	add! 8		# 1516	[c=4]*adddi/0
	store8! &4 	#X3	# 1517	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 1519	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_zero! .L100.l_o7bf303
	# END CBRANCH
.L326.l_o7bf303:
	load8! &49	# 4596	[c=2]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 1521	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	store8! &1 	#AR	# 1523	[c=4]movdi_from_tr_unspec/0
.L101.l_o7bf303:
	load8! &4 	#X4	# 1564	[c=5]movdi_to_tr_unspec/1
	and! 0x1		# 1566	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 6565	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L186.l_o7bf303
	# END CBRANCH
.L327.l_o7bf303:
	# CBRANCH EQ0	# 1575	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L187.l_o7bf303
	# END CBRANCH
	push! 48		# 1577	[c=4]movqi_push_pop
	store1! &21
	load1! &1 	#X1	# 6246	[c=4]movqi_push_pop
	store1! (+ &0 169)
	load8! &4 	#X4	# 1583	[c=5]movdi_to_tr_unspec/1
	or! 0x2		# 1585	[c=4]*iordi3/0
	store8! &5 	#X4	# 6562	[c=4]movsi_from_tr_unspec/0
	load8! &3 	#X3	# 67	[c=4]movdi_push_pop
	store8! &50
	push! 2		# 68	[c=4]movsi_push_pop
	store8! &4 	#X3
.L88.l_o7bf303:
	push! 0		# 1594	[c=4]movqi_push_pop
	store1! &20
	push! 0		# 79	[c=4]movqi_push_pop
	store8! &2 	#X1
.L80.l_o7bf303:
	# CBRANCH EQ	# 1597	[c=12]cbranchsi4_internal
	load4! &8 	#X8
	push! 4294967295	
	xor	
	jump_zero! .L103.l_o7bf303
	# END CBRANCH
.L330.l_o7bf303:
	load8! &4 	#X4	# 1599	[c=5]movdi_to_tr_unspec/1
	and! 0xffffffffffffff7f		# 1601	[c=4]*anddi3/0
	store8! &12 	#X11	# 6560	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ0	# 1608	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_not_zero! .L188.l_o7bf303
	# END CBRANCH
	# CBRANCH EQ0	# 1610	[c=12]cbranchsi4_internal
	load4! &8 	#X8
	jump_not_zero! .L321.l_o7bf303
	# END CBRANCH
	# CBRANCH EQ0	# 1916	[c=12]cbranchsi4_internal
	load4! &3 	#X3
	jump_not_zero! .L192.l_o7bf303
	# END CBRANCH
	load8! &4 	#X4	# 1918	[c=5]movdi_to_tr_unspec/1
	and! 0x1		# 1920	[c=4]*anddi3/0
	store8! &13 	#X12	# 6530	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ0	# 1927	[c=12]cbranchsi4_internal
	load4! &12 	#X12
	jump_zero! .L193.l_o7bf303
	# END CBRANCH
	push! 48		# 1929	[c=4]movqi_push_pop
	store1! (+ &0 239)
	push! &0		# 6050	[c=4]movdi_to_tr_unspec/1
	add! 192		# 6057	[c=4]*adddi/0
	add! 39		# 152	[c=4]*adddi/0
	store8! &4 	#X3	# 153	[c=4]movdi_from_tr_unspec/0
	jump! .L94.l_o7bf303		# 7201	[c=4]jump
.L56.l_o7bf303:
	load8! &4 	#X4	# 1413	[c=5]movdi_to_tr_unspec/1
	or! 0x10		# 1415	[c=4]*iordi3/0
	store8! &5 	#X4	# 6577	[c=4]movsi_from_tr_unspec/0
.L95.l_o7bf303:
	load8! &49	# 1448	[c=5]movdi_to_tr_unspec/1
	add! 8		# 1450	[c=4]*adddi/0
	store8! &2 	#X1	# 1451	[c=4]movdi_from_tr_unspec/0
	load8! &49	# 4594	[c=2]movdi_push_pop
	store8! &4 	#X3
	load8! &3 	#X3	# 1453	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	store8! &1 	#AR	# 1455	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 69	[c=4]movdi_push_pop
	store8! &50
	push! 1		# 70	[c=4]movsi_push_pop
	store8! &4 	#X3
	push! 0		# 6757	[c=4]movqi_push_pop
	store1! &20
	push! 0		# 6758	[c=4]movqi_push_pop
	store8! &2 	#X1
	jump! .L80.l_o7bf303		# 7203	[c=4]jump
.L57.l_o7bf303:
	load8! &4 	#X4	# 1242	[c=5]movdi_to_tr_unspec/1
	or! 0x10		# 1244	[c=4]*iordi3/0
	store8! &5 	#X4	# 6588	[c=4]movsi_from_tr_unspec/0
.L85.l_o7bf303:
	load8! &49	# 1277	[c=5]movdi_to_tr_unspec/1
	add! 8		# 1279	[c=4]*adddi/0
	store8! &2 	#X1	# 1280	[c=4]movdi_from_tr_unspec/0
	load8! &49	# 4590	[c=2]movdi_push_pop
	store8! &4 	#X3
	load8! &3 	#X3	# 1282	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	store8! &1 	#AR	# 1284	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 73	[c=4]movdi_push_pop
	store8! &50
	push! 0		# 74	[c=4]movsi_push_pop
	store8! &4 	#X3
	push! 0		# 6761	[c=4]movqi_push_pop
	store1! &20
	push! 0		# 6762	[c=4]movqi_push_pop
	store8! &2 	#X1
	jump! .L80.l_o7bf303		# 7205	[c=4]jump
.L46.l_o7bf303:
	# CBRANCH EQ0	# 1426	[c=12]cbranchqi4_internal
	load1! &3 	#X3
	jump_not_zero! .L322.l_o7bf303
	# END CBRANCH
.L96.l_o7bf303:
	load8! &4 	#X4	# 1431	[c=5]movdi_to_tr_unspec/1
	and! 0x10		# 1433	[c=4]*anddi3/0
	store8! &1 	#AR	# 6573	[c=4]movdi_from_tr_unspec/0
	load8! &49	# 6574	[c=5]movdi_to_tr_unspec/1
	add! 8		# 1442	[c=4]*adddi/0
	store8! &2 	#X1	# 1443	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 1445	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L95.l_o7bf303
	# END CBRANCH
	load8! &4 	#X4	# 1461	[c=5]movdi_to_tr_unspec/1
	and! 0x40		# 1463	[c=4]*anddi3/0
	store8! &4 	#X3	# 6572	[c=4]movsi_from_tr_unspec/0
	load8! &49	# 4595	[c=2]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 1470	[c=7]movsi_to_tr_unspec/2
	load4	
	#	
	store8! &1 	#AR	# 1472	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ0	# 1474	[c=12]cbranchsi4_internal
	load4! &3 	#X3
	jump_zero! .L98.l_o7bf303
	# END CBRANCH
	load2! &0 	#AR	# 6262	[c=5]movhi_to_tr_unspec/1
	store8! &1 	#AR	# 6264	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 71	[c=4]movdi_push_pop
	store8! &50
	push! 1		# 72	[c=4]movsi_push_pop
	store8! &4 	#X3
	push! 0		# 6765	[c=4]movqi_push_pop
	store1! &20
	push! 0		# 6766	[c=4]movqi_push_pop
	store8! &2 	#X1
	jump! .L80.l_o7bf303		# 7208	[c=4]jump
.L51.l_o7bf303:
	# CBRANCH EQ0	# 1166	[c=12]cbranchqi4_internal
	load1! &3 	#X3
	jump_not_zero! .L323.l_o7bf303
	# END CBRANCH
	load8! &4 	#X4	# 1171	[c=5]movdi_to_tr_unspec/1
	and! 0x10		# 1173	[c=4]*anddi3/0
	store8! &2 	#X1	# 6594	[c=4]movsi_from_tr_unspec/0
	load8! &49	# 4588	[c=2]movdi_push_pop
	store8! &4 	#X3
	load8! &3 	#X3	# 1180	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	store8! &1 	#AR	# 1182	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 1189	[c=5]movdi_to_tr_unspec/1
	add! 8		# 1191	[c=4]*adddi/0
	store8! &50	# 6289	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 1195	[c=12]cbranchsi4_internal
	load4! &1 	#X1
	jump_not_zero! .L324.l_o7bf303
	# END CBRANCH
.L82.l_o7bf303:
	load8! &4 	#X4	# 1211	[c=5]movdi_to_tr_unspec/1
	and! 0x40		# 1213	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 6592	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L84.l_o7bf303
	# END CBRANCH
	load4! &16	# 6283	[c=5]movsi_to_tr_unspec/1
	load8! &1 	#AR	# 1228	[c=4]movhi_from_tr_unspec/1
	store2	
	#	
	jump! .L30.l_o7bf303		# 7212	[c=4]jump
.L49.l_o7bf303:
	load8! &49	# 1327	[c=5]movdi_to_tr_unspec/1
	add! 8		# 1329	[c=4]*adddi/0
	store8! &2 	#X1	# 1330	[c=4]movdi_from_tr_unspec/0
	load8! &49	# 4592	[c=2]movdi_push_pop
	store8! &4 	#X3
	load8! &3 	#X3	# 1332	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	store8! &1 	#AR	# 1334	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 1337	[c=5]movdi_to_tr_unspec/1
	or! 0x2		# 1339	[c=4]*iordi3/0
	store8! &5 	#X4	# 6581	[c=4]movsi_from_tr_unspec/0
	push! 30768		# 1346	[c=4]movhi_push_pop
	store2! &21
	load8! &1 	#X1	# 58	[c=4]movdi_push_pop
	store8! &50
	push! .LC1.l_o7bf303		# 59	[c=4]movdi_push_pop
	store8! &19
	push! 2		# 60	[c=4]movsi_push_pop
	store8! &4 	#X3
	push! 0		# 6769	[c=4]movqi_push_pop
	store1! &20
	push! 0		# 6770	[c=4]movqi_push_pop
	store8! &2 	#X1
	jump! .L80.l_o7bf303		# 7214	[c=4]jump
.L53.l_o7bf303:
	load8! &4 	#X4	# 1000	[c=5]movdi_to_tr_unspec/1
	or! 0x40		# 1002	[c=4]*iordi3/0
	store8! &5 	#X4	# 6608	[c=4]movsi_from_tr_unspec/0
	load8! &6 	#X6	# 6773	[c=4]movdi_push_pop
	store8! &1 	#AR
	jump! .L40.l_o7bf303		# 7216	[c=4]jump
.L44.l_o7bf303:
	# CBRANCH EQ0	# 747	[c=12]cbranchqi4_internal
	load1! &3 	#X3
	jump_not_zero! .L325.l_o7bf303
	# END CBRANCH
	push! .LC1.l_o7bf303		# 55	[c=4]movdi_push_pop
	store8! &19
.L353.l_o7bf303:
	load8! &4 	#X4	# 6776	[c=5]movdi_to_tr_unspec/1
	and! 0x10		# 6778	[c=4]*anddi3/0
	store8! &1 	#AR	# 6779	[c=4]movdi_from_tr_unspec/0
	load8! &49	# 6780	[c=5]movdi_to_tr_unspec/1
	add! 8		# 6782	[c=4]*adddi/0
	store8! &4 	#X3	# 6783	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 6784	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L326.l_o7bf303
	# END CBRANCH
.L100.l_o7bf303:
	load8! &4 	#X4	# 1529	[c=5]movdi_to_tr_unspec/1
	and! 0x40		# 1531	[c=4]*anddi3/0
	store8! &6 	#X5	# 6567	[c=4]movsi_from_tr_unspec/0
	load8! &49	# 4597	[c=2]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 1538	[c=7]movsi_to_tr_unspec/2
	load4	
	#	
	store8! &1 	#AR	# 1540	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ0	# 1542	[c=12]cbranchsi4_internal
	load4! &5 	#X5
	jump_zero! .L102.l_o7bf303
	# END CBRANCH
	load2! &0 	#AR	# 6253	[c=5]movhi_to_tr_unspec/1
	store8! &1 	#AR	# 6255	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 6787	[c=5]movdi_to_tr_unspec/1
	and! 0x1		# 6789	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 6790	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L327.l_o7bf303
	# END CBRANCH
.L186.l_o7bf303:
	load8! &3 	#X3	# 65	[c=4]movdi_push_pop
	store8! &50
	push! 2		# 66	[c=4]movsi_push_pop
	store8! &4 	#X3
	push! 0		# 6793	[c=4]movqi_push_pop
	store1! &20
	push! 0		# 6794	[c=4]movqi_push_pop
	store8! &2 	#X1
	jump! .L80.l_o7bf303		# 7221	[c=4]jump
.L47.l_o7bf303:
	load8! &49	# 1351	[c=5]movdi_to_tr_unspec/1
	add! 8		# 1353	[c=4]*adddi/0
	store8! &6 	#X5	# 1354	[c=4]movdi_from_tr_unspec/0
	load8! &49	# 4593	[c=2]movdi_push_pop
	store8! &2 	#X1
	load8! &1 	#X1	# 1356	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	store8! &4 	#X3	# 1358	[c=4]movdi_from_tr_unspec/0
	push! 0		# 1360	[c=4]movqi_push_pop
	store1! &20
	# CBRANCH EQ0	# 1361	[c=12]cbranchdi4_internal
	load8! &3 	#X3
	jump_zero! .L328.l_o7bf303
	# END CBRANCH
	# CBRANCH EQ	# 1373	[c=12]cbranchsi4_internal
	load4! &8 	#X8
	push! 4294967295	
	xor	
	jump_zero! .L92.l_o7bf303
	# END CBRANCH
	load4! &8 	#X8	# 1375	[c=5]movsi_to_tr_unspec/1
	sigx4		# 1377	[c=6]*extendsidi2
	#peep - pop(deadreg)+pusharg	# 6271	[c=0]*peep2_pop_pusharg
	push! 0		# 1381	[c=4]pushsi1_not_fp/0
	load8! &5 	#X3	# 1382	[c=4]pushdi1_not_fp/1
	call! memchr		# 1383	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	# CBRANCH EQ0	# 1385	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L93.l_o7bf303
	# END CBRANCH
	load8! &0 	#AR	# 1387	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 1389	[c=14]*subdi3/2
	sub
	store8! &13 	#X12	# 6579	[c=4]movsi_from_tr_unspec/0
	load1! &19	# 1396	[c=2]movqi_push_pop
	store8! &2 	#X1
	load8! &5 	#X5	# 174	[c=4]movdi_push_pop
	store8! &50
	load4! &4 	#X4	# 175	[c=4]movsi_push_pop
	store8! &12 	#X11
	push! 0		# 176	[c=4]movsi_push_pop
	store8! &9 	#X8
	jump! .L94.l_o7bf303		# 7224	[c=4]jump
.L52.l_o7bf303:
	# CBRANCH EQ0	# 1063	[c=12]cbranchqi4_internal
	load1! &3 	#X3
	jump_not_zero! .L329.l_o7bf303
	# END CBRANCH
.L75.l_o7bf303:
	load8! &4 	#X4	# 1068	[c=5]movdi_to_tr_unspec/1
	and! 0x10		# 1070	[c=4]*anddi3/0
	store8! &1 	#AR	# 6599	[c=4]movdi_from_tr_unspec/0
	load8! &49	# 6600	[c=5]movdi_to_tr_unspec/1
	add! 8		# 1079	[c=4]*adddi/0
	store8! &4 	#X3	# 1080	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 1082	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L74.l_o7bf303
	# END CBRANCH
	load8! &4 	#X4	# 1099	[c=5]movdi_to_tr_unspec/1
	and! 0x40		# 1101	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 6598	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L78.l_o7bf303
	# END CBRANCH
	load8! &49	# 4586	[c=2]movdi_push_pop
	store8! &2 	#X1
	load8! &1 	#X1	# 1110	[c=7]movsi_to_tr_unspec/2
	load4	
	#	
	store8! &2 	#X1	# 6595	[c=4]movhi_from_tr_unspec/0
	load2! &1 	#X1	# 1118	[c=5]movhi_to_tr_unspec/1
	sigx2		# 1120	[c=6]*extendhidi2
	store8! &1 	#AR	# 1121	[c=4]movdi_from_tr_unspec/0
	load2! &1 	#X1	# 1123	[c=5]movhi_to_tr_unspec/1
	sigx2		# 1125	[c=6]*extendhidi2
	store8! &2 	#X1	# 1126	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 53	[c=4]movdi_push_pop
	store8! &50
	# CBRANCH	# 6797	[c=12]cbranchdi4_internal
	load8! &1 	#X1
	add! -9223372036854775808	
	push! 0	
	add! -9223372036854775808	
	lt_u	
	jump_zero! .L79.l_o7bf303
	# END CBRANCH
.L311.l_o7bf303:
	load8! &0 	#AR	# 1155	[c=5]movdi_to_tr_unspec/1
	neg		# 1157	[c=3]*negdi2
	store8! &1 	#AR	# 1158	[c=4]movdi_from_tr_unspec/0
	push! 45		# 1161	[c=4]movqi_push_pop
	store1! &20
	push! 45		# 77	[c=4]movqi_push_pop
	store8! &2 	#X1
	push! 1		# 78	[c=4]movsi_push_pop
	store8! &4 	#X3
	# CBRANCH	# 6800	[c=12]cbranchsi4_internal
	load4! &8 	#X8
	push! 4294967295	
	xor	
	push! 1	
	lt_u	
	jump_zero! .L330.l_o7bf303
	# END CBRANCH
.L103.l_o7bf303:
	# CBRANCH EQ	# 1616	[c=12]cbranchsi4_internal
	load4! &3 	#X3
	push! 1	
	xor	
	jump_zero! .L106.l_o7bf303
	# END CBRANCH
.L345.l_o7bf303:
	# CBRANCH EQ	# 1618	[c=12]cbranchsi4_internal
	load4! &3 	#X3
	push! 2	
	xor	
	jump_zero! .L107.l_o7bf303
	# END CBRANCH
	push! &0		# 6235	[c=4]movdi_to_tr_unspec/1
	add! 192		# 6242	[c=4]*adddi/0
	add! 40		# 89	[c=4]*adddi/0
	store8! &11 	#X10	# 90	[c=4]movdi_from_tr_unspec/0
.L108.l_o7bf303:
	load1! &0 	#AR	# 6223	[c=5]movqi_to_tr_unspec/1
	and! 0x7		# 1627	[c=4]*anddi3/0
	add! 48		# 1636	[c=4]*adddi/0
	store8! &6 	#X5	# 6558	[c=4]movqi_from_tr_unspec/0
	load8! &10 	#X10	# 1643	[c=5]movdi_to_tr_unspec/1
	add! -1		# 1645	[c=4]*adddi/0
	store8! &4 	#X3	# 1646	[c=4]movdi_from_tr_unspec/0
	load1! &5 	#X5	# 1649	[c=5]movqi_to_tr_unspec/1
	load8! &4 	#X3	# 1651	[c=4]movqi_from_tr_unspec/1
	store1	
	#	
	load8! &0 	#AR	# 1658	[c=5]movdi_to_tr_unspec/1
	shift_ru! 3	# 1660	[c=40]*lshrdi3/0
	store8! &1 	#AR	# 1661	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 1665	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L331.l_o7bf303
	# END CBRANCH
.L189.l_o7bf303:
	load8! &3 	#X3	# 92	[c=4]movdi_push_pop
	store8! &11 	#X10
	load1! &0 	#AR	# 6803	[c=5]movqi_to_tr_unspec/1
	and! 0x7		# 6805	[c=4]*anddi3/0
	add! 48		# 6807	[c=4]*adddi/0
	store8! &6 	#X5	# 6809	[c=4]movqi_from_tr_unspec/0
	load8! &10 	#X10	# 6810	[c=5]movdi_to_tr_unspec/1
	add! -1		# 6812	[c=4]*adddi/0
	store8! &4 	#X3	# 6813	[c=4]movdi_from_tr_unspec/0
	load1! &5 	#X5	# 6814	[c=5]movqi_to_tr_unspec/1
	load8! &4 	#X3	# 6816	[c=4]movqi_from_tr_unspec/1
	store1	
	#	
	load8! &0 	#AR	# 6817	[c=5]movdi_to_tr_unspec/1
	shift_ru! 3	# 6819	[c=40]*lshrdi3/0
	store8! &1 	#AR	# 6820	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 6821	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_not_zero! .L189.l_o7bf303
	# END CBRANCH
.L331.l_o7bf303:
	load8! &4 	#X4	# 1667	[c=5]movdi_to_tr_unspec/1
	and! 0x1		# 1669	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 6552	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L109.l_o7bf303
	# END CBRANCH
	push! &0		# 6210	[c=4]movdi_to_tr_unspec/1
	add! 192		# 6217	[c=4]*adddi/0
	add! 40		# 1685	[c=4]*adddi/0
	load8! &4 	#X3	# 1690	[c=14]*subdi3/2
	sub
	store8! &13 	#X12	# 6549	[c=4]movsi_from_tr_unspec/0
	load4! &4 	#X4	# 155	[c=4]movsi_push_pop
	store8! &12 	#X11
	jump! .L94.l_o7bf303		# 7229	[c=4]jump
.L50.l_o7bf303:
	# CBRANCH EQ0	# 1255	[c=12]cbranchqi4_internal
	load1! &3 	#X3
	jump_not_zero! .L332.l_o7bf303
	# END CBRANCH
.L86.l_o7bf303:
	load8! &4 	#X4	# 1260	[c=5]movdi_to_tr_unspec/1
	and! 0x10		# 1262	[c=4]*anddi3/0
	store8! &1 	#AR	# 6584	[c=4]movdi_from_tr_unspec/0
	load8! &49	# 6585	[c=5]movdi_to_tr_unspec/1
	add! 8		# 1271	[c=4]*adddi/0
	store8! &2 	#X1	# 1272	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 1274	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L85.l_o7bf303
	# END CBRANCH
	load8! &4 	#X4	# 1290	[c=5]movdi_to_tr_unspec/1
	and! 0x40		# 1292	[c=4]*anddi3/0
	store8! &4 	#X3	# 6583	[c=4]movsi_from_tr_unspec/0
	load8! &49	# 4591	[c=2]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 1299	[c=7]movsi_to_tr_unspec/2
	load4	
	#	
	store8! &1 	#AR	# 1301	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ0	# 1303	[c=12]cbranchsi4_internal
	load4! &3 	#X3
	jump_zero! .L89.l_o7bf303
	# END CBRANCH
	load2! &0 	#AR	# 6277	[c=5]movhi_to_tr_unspec/1
	store8! &1 	#AR	# 6279	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 63	[c=4]movdi_push_pop
	store8! &50
	push! 0		# 64	[c=4]movsi_push_pop
	store8! &4 	#X3
	push! 0		# 6824	[c=4]movqi_push_pop
	store1! &20
	push! 0		# 6825	[c=4]movqi_push_pop
	store8! &2 	#X1
	jump! .L80.l_o7bf303		# 7232	[c=4]jump
.L124.l_o7bf303:
	# CBRANCH EQ0	# 2187	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_not_zero! .L125.l_o7bf303
	# END CBRANCH
	push! 0		# 2189	[c=4]movsi_push_pop
	store4! &23
	# CBRANCH EQ0	# 2191	[c=14]cbranchqi4_internal
	load1! &19
	jump_zero! .L281.l_o7bf303
	# END CBRANCH
	push! &0		# 5121	[c=4]movdi_to_tr_unspec/1
	add! 152		# 5128	[c=4]*adddi/0
	store8! &30	# 5126	[c=4]movdi_from_tr_unspec/0
	push! 1		# 3265	[c=4]movdi_push_pop
	store8! &31
	push! 1		# 3266	[c=4]movdi_push_pop
	store8! &24
	push! 1		# 3267	[c=4]movsi_push_pop
	store4! &23
	push! &0		# 5137	[c=4]movdi_to_tr_unspec/1
	add! 232		# 5144	[c=4]*adddi/0
	add! 16		# 210	[c=4]*adddi/0
	store8! &5 	#X4	# 211	[c=4]movdi_from_tr_unspec/0
	push! 1		# 213	[c=4]movsi_push_pop
	store8! &6 	#X5
	push! 1		# 214	[c=4]movdi_push_pop
	store8! &1 	#AR
.L176.l_o7bf303:
	load8! &5 	#X5	# 2254	[c=5]movdi_to_tr_unspec/1
	add! 1		# 2256	[c=4]*adddi/0
	store8! &3 	#X2	# 6506	[c=4]movsi_from_tr_unspec/0
	load8! &4 	#X4	# 2263	[c=5]movdi_to_tr_unspec/1
	add! 16		# 2265	[c=4]*adddi/0
	store8! &15 	#X14	# 2266	[c=4]movdi_from_tr_unspec/0
	load4! &5 	#X5	# 215	[c=4]movsi_push_pop
	store8! &2 	#X1
	load4! &2 	#X2	# 216	[c=4]movsi_push_pop
	store8! &6 	#X5
	load8! &4 	#X4	# 217	[c=4]movdi_push_pop
	store8! &3 	#X2
	load8! &14 	#X14	# 218	[c=4]movdi_push_pop
	store8! &5 	#X4
	jump! .L128.l_o7bf303		# 7234	[c=4]jump
.L313.l_o7bf303:
	# CBRANCH	# 2032	[c=12]cbranchsi4_internal
	push! 16	
	add! -2147483648	
	load4! &5 	#X4
	add! -2147483648	
	lt_u	
	jump_zero! .L194.l_o7bf303
	# END CBRANCH
.L123.l_o7bf303:
	push! .Li_blanks_4575.l_o7bf303		# 2034	[c=3]movdi_to_tr_unspec/0
	load8! &3 	#X2	# 2036	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	push! 16		# 2038	[c=3]movdi_to_tr_unspec/0
	load8! &3 	#X2	# 2040	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &0 	#AR	# 2047	[c=5]movdi_to_tr_unspec/1
	add! 16		# 2049	[c=4]*adddi/0
	store8! &1 	#AR	# 2050	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 2053	[c=4]movdi_push_pop
	store8! &24
	load8! &1 	#X1	# 2054	[c=5]movdi_to_tr_unspec/1
	add! 1		# 2056	[c=4]*adddi/0
	store8! &6 	#X5	# 2057	[c=4]movdi_from_tr_unspec/0
	load4! &5 	#X5	# 5975	[c=4]movsi_push_pop
	store4! &23
	# CBRANCH	# 2064	[c=12]cbranchsi4_internal
	push! 7	
	add! -2147483648	
	load4! &6 	#X5
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L120.l_o7bf303
	# END CBRANCH
	load8! &2 	#X2	# 2071	[c=5]movdi_to_tr_unspec/1
	add! 16		# 2073	[c=4]*adddi/0
	store8! &3 	#X2	# 2074	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 2077	[c=5]movdi_to_tr_unspec/1
	add! 2		# 2079	[c=4]*adddi/0
	store8! &15 	#X14	# 6516	[c=4]movsi_from_tr_unspec/0
	load4! &5 	#X5	# 190	[c=4]movsi_push_pop
	store8! &2 	#X1
	load8! &4 	#X4	# 2122	[c=5]movdi_to_tr_unspec/1
	add! -16		# 2124	[c=4]*adddi/0
	store8! &5 	#X4	# 6511	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 6512	[c=12]cbranchsi4_internal
	push! 16	
	add! -2147483648	
	load4! &5 	#X4
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L123.l_o7bf303
	# END CBRANCH
.L119.l_o7bf303:
	push! .Li_blanks_4575.l_o7bf303		# 2135	[c=3]movdi_to_tr_unspec/0
	load8! &3 	#X2	# 2137	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load4! &4 	#X4	# 2139	[c=5]movsi_to_tr_unspec/1
	sigx4		# 2141	[c=6]*extendsidi2
	store8! &2 	#X1	# 2142	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 2144	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 2146	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &1 	#X1	# 2153	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 2155	[c=6]*adddi/2
	add
	store8! &1 	#AR	# 2156	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 2159	[c=4]movdi_push_pop
	store8! &24
	load4! &14 	#X14	# 2160	[c=4]movsi_push_pop
	store4! &23
	# CBRANCH	# 2161	[c=12]cbranchsi4_internal
	push! 7	
	add! -2147483648	
	load4! &15 	#X14
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L124.l_o7bf303
	# END CBRANCH
	load8! &2 	#X2	# 2168	[c=5]movdi_to_tr_unspec/1
	add! 16		# 2170	[c=4]*adddi/0
	store8! &3 	#X2	# 2171	[c=4]movdi_from_tr_unspec/0
	load8! &14 	#X14	# 2174	[c=5]movdi_to_tr_unspec/1
	add! 1		# 2176	[c=4]*adddi/0
	store8! &6 	#X5	# 6510	[c=4]movsi_from_tr_unspec/0
	load4! &14 	#X14	# 202	[c=4]movsi_push_pop
	store8! &2 	#X1
	jump! .L118.l_o7bf303		# 7236	[c=4]jump
.L316.l_o7bf303:
	load8! &10 	#X10	# 5675	[c=5]movdi_to_tr_unspec/1
	load8! &8 	#X7	# 5677	[c=14]*subdi3/2
	sub
	neg		# 5678	[c=4]*neg_tr
	store8! &14 	#X13	# 6497	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 6498	[c=12]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &14 	#X13
	add! -2147483648	
	lt_u	
	jump_zero! .L135.l_o7bf303
	# END CBRANCH
	# CBRANCH	# 2399	[c=12]cbranchsi4_internal
	push! 16	
	add! -2147483648	
	load4! &14 	#X13
	add! -2147483648	
	lt_u	
	jump_zero! .L195.l_o7bf303
	# END CBRANCH
.L140.l_o7bf303:
	push! .Li_zeroes_4576.l_o7bf303		# 2401	[c=3]movdi_to_tr_unspec/0
	load8! &3 	#X2	# 2403	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	push! 16		# 2405	[c=3]movdi_to_tr_unspec/0
	load8! &3 	#X2	# 2407	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &0 	#AR	# 2414	[c=5]movdi_to_tr_unspec/1
	add! 16		# 2416	[c=4]*adddi/0
	store8! &1 	#AR	# 2417	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 2420	[c=4]movdi_push_pop
	store8! &24
	load8! &1 	#X1	# 2421	[c=5]movdi_to_tr_unspec/1
	add! 1		# 2423	[c=4]*adddi/0
	store8! &5 	#X4	# 2424	[c=4]movdi_from_tr_unspec/0
	load4! &4 	#X4	# 5673	[c=4]movsi_push_pop
	store4! &23
	# CBRANCH	# 2431	[c=12]cbranchsi4_internal
	push! 7	
	add! -2147483648	
	load4! &5 	#X4
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L137.l_o7bf303
	# END CBRANCH
	load8! &2 	#X2	# 2438	[c=5]movdi_to_tr_unspec/1
	add! 16		# 2440	[c=4]*adddi/0
	store8! &3 	#X2	# 2441	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 2444	[c=5]movdi_to_tr_unspec/1
	add! 2		# 2446	[c=4]*adddi/0
	store8! &15 	#X14	# 6496	[c=4]movsi_from_tr_unspec/0
	load4! &4 	#X4	# 335	[c=4]movsi_push_pop
	store8! &2 	#X1
	load8! &13 	#X13	# 2489	[c=5]movdi_to_tr_unspec/1
	add! -16		# 2491	[c=4]*adddi/0
	store8! &14 	#X13	# 6492	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 2499	[c=12]cbranchsi4_internal
	push! 16	
	add! -2147483648	
	load4! &14 	#X13
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L140.l_o7bf303
	# END CBRANCH
.L343.l_o7bf303:
	load8! &2 	#X2	# 2501	[c=5]movdi_to_tr_unspec/1
	add! 16		# 2503	[c=4]*adddi/0
	store8! &18	# 2504	[c=4]movdi_from_tr_unspec/0
	push! .Li_zeroes_4576.l_o7bf303		# 2508	[c=3]movdi_to_tr_unspec/0
	load8! &3 	#X2	# 2510	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load4! &13 	#X13	# 2512	[c=5]movsi_to_tr_unspec/1
	sigx4		# 2514	[c=6]*extendsidi2
	store8! &2 	#X1	# 2515	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 2517	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 2519	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &1 	#X1	# 2526	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 2528	[c=6]*adddi/2
	add
	store8! &1 	#AR	# 2529	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 2532	[c=4]movdi_push_pop
	store8! &24
	load4! &14 	#X14	# 2533	[c=4]movsi_push_pop
	store4! &23
	# CBRANCH	# 2534	[c=12]cbranchsi4_internal
	push! 7	
	add! -2147483648	
	load4! &15 	#X14
	add! -2147483648	
	lt_u	
	jump_zero! .L333.l_o7bf303
	# END CBRANCH
.L141.l_o7bf303:
	# CBRANCH EQ0	# 2554	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L334.l_o7bf303
	# END CBRANCH
	push! &0		# 5575	[c=4]movdi_to_tr_unspec/1
	add! 168		# 5582	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 5584	[c=0]*peep2_pop_pusharg
	load8! &10 	#X9	# 2567	[c=4]pushdi1_not_fp/1
	load8! &17 	#X15	# 2568	[c=4]pushdi1_not_fp/1
	call! .Li___sprint_r.part_0.l_o7bf303		# 2569	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	# CBRANCH EQ0	# 2571	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L39.l_o7bf303
	# END CBRANCH
	load8! &23	# 2573	[c=2]movdi_push_pop
	store8! &1 	#AR
	load4! &22	# 2574	[c=2]movsi_push_pop
	store8! &2 	#X1
	load8! &1 	#X1	# 2575	[c=5]movdi_to_tr_unspec/1
	add! 1		# 2577	[c=4]*adddi/0
	store8! &6 	#X5	# 6488	[c=4]movsi_from_tr_unspec/0
	push! &0		# 5542	[c=4]movdi_to_tr_unspec/1
	add! 232		# 5549	[c=4]*adddi/0
	add! 16		# 367	[c=4]*adddi/0
	store8! &5 	#X4	# 368	[c=4]movdi_from_tr_unspec/0
	push! &0		# 5559	[c=4]movdi_to_tr_unspec/1
	add! 232		# 5566	[c=4]*adddi/0
	store8! &3 	#X2	# 5564	[c=4]movdi_from_tr_unspec/0
	load8! &12 	#X12	# 6828	[c=5]movdi_to_tr_unspec/1
	load8! &9 	#X8	# 6830	[c=14]*subdi3/2
	sub
	neg		# 6831	[c=4]*neg_tr
	store8! &9 	#X8	# 6832	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 6833	[c=12]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &9 	#X8
	add! -2147483648	
	lt_u	
	jump_zero! .L143.l_o7bf303
	# END CBRANCH
.L317.l_o7bf303:
	# CBRANCH	# 2601	[c=12]cbranchsi4_internal
	push! 16	
	add! -2147483648	
	load4! &9 	#X8
	add! -2147483648	
	lt_u	
	jump_zero! .L196.l_o7bf303
	# END CBRANCH
.L148.l_o7bf303:
	push! .Li_zeroes_4576.l_o7bf303		# 2603	[c=3]movdi_to_tr_unspec/0
	load8! &3 	#X2	# 2605	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	push! 16		# 2607	[c=3]movdi_to_tr_unspec/0
	load8! &3 	#X2	# 2609	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &0 	#AR	# 2616	[c=5]movdi_to_tr_unspec/1
	add! 16		# 2618	[c=4]*adddi/0
	store8! &1 	#AR	# 2619	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 2622	[c=4]movdi_push_pop
	store8! &24
	load8! &1 	#X1	# 2623	[c=5]movdi_to_tr_unspec/1
	add! 1		# 2625	[c=4]*adddi/0
	store8! &5 	#X4	# 2626	[c=4]movdi_from_tr_unspec/0
	load4! &4 	#X4	# 5525	[c=4]movsi_push_pop
	store4! &23
	# CBRANCH	# 2633	[c=12]cbranchsi4_internal
	push! 7	
	add! -2147483648	
	load4! &5 	#X4
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L145.l_o7bf303
	# END CBRANCH
	load8! &2 	#X2	# 2640	[c=5]movdi_to_tr_unspec/1
	add! 16		# 2642	[c=4]*adddi/0
	store8! &3 	#X2	# 2643	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 2646	[c=5]movdi_to_tr_unspec/1
	add! 2		# 2648	[c=4]*adddi/0
	store8! &6 	#X5	# 6484	[c=4]movsi_from_tr_unspec/0
	load4! &4 	#X4	# 384	[c=4]movsi_push_pop
	store8! &2 	#X1
	load8! &8 	#X8	# 2691	[c=5]movdi_to_tr_unspec/1
	add! -16		# 2693	[c=4]*adddi/0
	store8! &9 	#X8	# 6480	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 2701	[c=12]cbranchsi4_internal
	push! 16	
	add! -2147483648	
	load4! &9 	#X8
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L148.l_o7bf303
	# END CBRANCH
.L339.l_o7bf303:
	load8! &2 	#X2	# 2703	[c=5]movdi_to_tr_unspec/1
	add! 16		# 2705	[c=4]*adddi/0
	store8! &2 	#X1	# 2706	[c=4]movdi_from_tr_unspec/0
.L144.l_o7bf303:
	push! .Li_zeroes_4576.l_o7bf303		# 2710	[c=3]movdi_to_tr_unspec/0
	load8! &3 	#X2	# 2712	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load4! &8 	#X8	# 2714	[c=5]movsi_to_tr_unspec/1
	sigx4		# 2716	[c=6]*extendsidi2
	store8! &5 	#X4	# 2717	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 2719	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 2721	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &4 	#X4	# 2728	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 2730	[c=6]*adddi/2
	add
	store8! &1 	#AR	# 2731	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 2734	[c=4]movdi_push_pop
	store8! &24
	load4! &5 	#X5	# 2735	[c=4]movsi_push_pop
	store4! &23
	# CBRANCH	# 2736	[c=12]cbranchsi4_internal
	push! 7	
	add! -2147483648	
	load4! &6 	#X5
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L149.l_o7bf303
	# END CBRANCH
	load8! &5 	#X5	# 2738	[c=5]movdi_to_tr_unspec/1
	add! 1		# 2740	[c=4]*adddi/0
	store8! &6 	#X5	# 6478	[c=4]movsi_from_tr_unspec/0
	load8! &1 	#X1	# 2747	[c=5]movdi_to_tr_unspec/1
	add! 16		# 2749	[c=4]*adddi/0
	store8! &5 	#X4	# 2750	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 391	[c=4]movdi_push_pop
	store8! &3 	#X2
	jump! .L143.l_o7bf303		# 7240	[c=4]jump
.L319.l_o7bf303:
	push! &0		# 5244	[c=4]movdi_to_tr_unspec/1
	add! 168		# 5251	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 5253	[c=0]*peep2_pop_pusharg
	load8! &10 	#X9	# 3086	[c=4]pushdi1_not_fp/1
	load8! &17 	#X15	# 3087	[c=4]pushdi1_not_fp/1
	call! .Li___sprint_r.part_0.l_o7bf303		# 3088	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	# CBRANCH EQ0	# 3090	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L39.l_o7bf303
	# END CBRANCH
	push! 0		# 6836	[c=4]movsi_push_pop
	store4! &23
	push! &0		# 6837	[c=4]movdi_to_tr_unspec/1
	add! 232		# 6839	[c=4]*adddi/0
	store8! &3 	#X2	# 6840	[c=4]movdi_from_tr_unspec/0
	jump! .L30.l_o7bf303		# 7242	[c=4]jump
.L318.l_o7bf303:
	push! 0		# 2820	[c=4]movsi_push_pop
	store4! &23
	load8! &11 	#X11	# 2821	[c=5]movdi_to_tr_unspec/1
	and! 0x4		# 2823	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 6474	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L335.l_o7bf303
	# END CBRANCH
	load8! &10 	#X10	# 5180	[c=5]movdi_to_tr_unspec/1
	load8! &8 	#X7	# 5182	[c=14]*subdi3/2
	sub
	neg		# 5183	[c=4]*neg_tr
	store8! &3 	#X2	# 6442	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 3240	[c=12]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &3 	#X2
	add! -2147483648	
	lt_u	
	jump_zero! .L283.l_o7bf303
	# END CBRANCH
	push! &0		# 5348	[c=4]movdi_to_tr_unspec/1
	add! 232		# 5355	[c=4]*adddi/0
	store8! &5 	#X4	# 5353	[c=4]movdi_from_tr_unspec/0
.L173.l_o7bf303:
	load4! &22	# 2877	[c=2]movsi_push_pop
	store8! &4 	#X3
	# CBRANCH	# 2878	[c=12]cbranchsi4_internal
	push! 16	
	add! -2147483648	
	load4! &3 	#X2
	add! -2147483648	
	lt_u	
	jump_zero! .L156.l_o7bf303
	# END CBRANCH
.L160.l_o7bf303:
	push! .Li_blanks_4575.l_o7bf303		# 2880	[c=3]movdi_to_tr_unspec/0
	load8! &5 	#X4	# 2882	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	push! 16		# 2884	[c=3]movdi_to_tr_unspec/0
	load8! &5 	#X4	# 2886	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &0 	#AR	# 2893	[c=5]movdi_to_tr_unspec/1
	add! 16		# 2895	[c=4]*adddi/0
	store8! &1 	#AR	# 2896	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 2899	[c=4]movdi_push_pop
	store8! &24
	load8! &3 	#X3	# 2900	[c=5]movdi_to_tr_unspec/1
	add! 1		# 2902	[c=4]*adddi/0
	store8! &2 	#X1	# 2903	[c=4]movdi_from_tr_unspec/0
	load4! &1 	#X1	# 5339	[c=4]movsi_push_pop
	store4! &23
	# CBRANCH	# 2910	[c=12]cbranchsi4_internal
	push! 7	
	add! -2147483648	
	load4! &2 	#X1
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L157.l_o7bf303
	# END CBRANCH
	load8! &4 	#X4	# 2917	[c=5]movdi_to_tr_unspec/1
	add! 16		# 2919	[c=4]*adddi/0
	store8! &5 	#X4	# 2920	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 2923	[c=5]movdi_to_tr_unspec/1
	add! 2		# 2925	[c=4]*adddi/0
	store8! &6 	#X5	# 6466	[c=4]movsi_from_tr_unspec/0
	load4! &1 	#X1	# 434	[c=4]movsi_push_pop
	store8! &4 	#X3
	load8! &2 	#X2	# 2968	[c=5]movdi_to_tr_unspec/1
	add! -16		# 2970	[c=4]*adddi/0
	store8! &3 	#X2	# 6462	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 2978	[c=12]cbranchsi4_internal
	push! 16	
	add! -2147483648	
	load4! &3 	#X2
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L160.l_o7bf303
	# END CBRANCH
.L161.l_o7bf303:
	push! .Li_blanks_4575.l_o7bf303		# 2995	[c=3]movdi_to_tr_unspec/0
	load8! &5 	#X4	# 2997	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load4! &2 	#X2	# 2999	[c=5]movsi_to_tr_unspec/1
	sigx4		# 3001	[c=6]*extendsidi2
	store8! &2 	#X1	# 3002	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 3004	[c=5]movdi_to_tr_unspec/1
	load8! &5 	#X4	# 3006	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &1 	#X1	# 3013	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 3015	[c=6]*adddi/2
	add
	store8! &1 	#AR	# 3016	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 3019	[c=4]movdi_push_pop
	store8! &24
	load4! &5 	#X5	# 3020	[c=4]movsi_push_pop
	store4! &23
	# CBRANCH	# 3021	[c=12]cbranchsi4_internal
	push! 7	
	add! -2147483648	
	load4! &6 	#X5
	add! -2147483648	
	lt_u	
	jump_zero! .L155.l_o7bf303
	# END CBRANCH
	# CBRANCH EQ0	# 3023	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L336.l_o7bf303
	# END CBRANCH
	push! &0		# 5268	[c=4]movdi_to_tr_unspec/1
	add! 168		# 5275	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 5277	[c=0]*peep2_pop_pusharg
	load8! &10 	#X9	# 3052	[c=4]pushdi1_not_fp/1
	load8! &17 	#X15	# 3053	[c=4]pushdi1_not_fp/1
	call! .Li___sprint_r.part_0.l_o7bf303		# 3054	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	# CBRANCH EQ0	# 3056	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L39.l_o7bf303
	# END CBRANCH
	load8! &23	# 3058	[c=2]movdi_push_pop
	store8! &1 	#AR
	jump! .L155.l_o7bf303		# 7246	[c=4]jump
.L305.l_o7bf303:
	load8! &9 	#X9	# 565	[c=6]movhi_to_tr_unspec/2
	add! 18	
	load2	
	#	
	# CBRANCH - peep (modesize=2)
	and! 65535		# 6430	[c=12]*peep2_cbranchhi
	add! -32768	
	push! 0	
	add! -32768	
	lt_u	
	not	
	jump_zero! .L29.l_o7bf303
	# END CBRANCH
	load8! &49	# 571	[c=2]pushdi1_not_fp/1
	load8! &7 	#X6	# 572	[c=4]pushdi1_not_fp/1
	load8! &11 	#X9	# 573	[c=4]pushdi1_not_fp/1
	load8! &18 	#X15	# 574	[c=4]pushdi1_not_fp/1
	call! __sbprintf.s_o7bf303		# 575	[c=0]*call_value_pop_1/0
	store8! &4

	set_sp! &3
	load4! &0 	#AR	# 576	[c=4]movsi_push_pop
	store4! &17
	load4! &16	# 6843	[c=2]movsi_push_pop
	store4! &47
	jump! .L309.l_o7bf303		# 7248	[c=4]jump
.L304.l_o7bf303:
	load8! &15 	#X15	# 469	[c=4]pushdi1_not_fp/1
	call! __sinit		# 470	[c=5]*call_pop_0/0
	set_sp! (+ &0 8)
	

	jump! .L23.l_o7bf303		# 7250	[c=4]jump
.L43.l_o7bf303:
	# CBRANCH EQ0	# 1936	[c=12]cbranchqi4_internal
	load1! &3 	#X3
	jump_not_zero! .L337.l_o7bf303
	# END CBRANCH
.L114.l_o7bf303:
	# CBRANCH EQ0	# 1941	[c=12]cbranchsi4_internal
	load4! &1 	#X1
	jump_zero! .L31.l_o7bf303
	# END CBRANCH
	load1! &1 	#X1	# 6528	[c=4]movqi_push_pop
	store1! &25
	push! 0		# 1948	[c=4]movqi_push_pop
	store1! &20
	push! 1		# 444	[c=4]movsi_push_pop
	store8! &11 	#X10
	push! 1		# 445	[c=4]movsi_push_pop
	store8! &13 	#X12
	push! &0		# 6000	[c=4]movdi_to_tr_unspec/1
	add! 192		# 6007	[c=4]*adddi/0
	store8! &4 	#X3	# 6005	[c=4]movdi_from_tr_unspec/0
	load4! &4 	#X4	# 6846	[c=4]movsi_push_pop
	store8! &12 	#X11
	push! 0		# 6847	[c=4]movsi_push_pop
	store8! &9 	#X8
	jump! .L116.l_o7bf303		# 7253	[c=4]jump
.L145.l_o7bf303:
	# CBRANCH EQ0	# 2659	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L338.l_o7bf303
	# END CBRANCH
	push! &0		# 5497	[c=4]movdi_to_tr_unspec/1
	add! 168		# 5504	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 5506	[c=0]*peep2_pop_pusharg
	load8! &10 	#X9	# 2672	[c=4]pushdi1_not_fp/1
	load8! &17 	#X15	# 2673	[c=4]pushdi1_not_fp/1
	call! .Li___sprint_r.part_0.l_o7bf303		# 2674	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	# CBRANCH EQ0	# 2676	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L39.l_o7bf303
	# END CBRANCH
	load8! &23	# 2678	[c=2]movdi_push_pop
	store8! &1 	#AR
	load4! &22	# 2679	[c=2]movsi_push_pop
	store8! &2 	#X1
	load8! &1 	#X1	# 2680	[c=5]movdi_to_tr_unspec/1
	add! 1		# 2682	[c=4]*adddi/0
	store8! &6 	#X5	# 6482	[c=4]movsi_from_tr_unspec/0
	push! &0		# 5481	[c=4]movdi_to_tr_unspec/1
	add! 232		# 5488	[c=4]*adddi/0
	store8! &3 	#X2	# 5486	[c=4]movdi_from_tr_unspec/0
	load8! &8 	#X8	# 6850	[c=5]movdi_to_tr_unspec/1
	add! -16		# 6852	[c=4]*adddi/0
	store8! &9 	#X8	# 6854	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 6855	[c=12]cbranchsi4_internal
	push! 16	
	add! -2147483648	
	load4! &9 	#X8
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L148.l_o7bf303
	# END CBRANCH
	jump! .L339.l_o7bf303		# 7258	[c=4]jump
.L120.l_o7bf303:
	# CBRANCH EQ0	# 2090	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L340.l_o7bf303
	# END CBRANCH
	push! &0		# 5947	[c=4]movdi_to_tr_unspec/1
	add! 168		# 5954	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 5956	[c=0]*peep2_pop_pusharg
	load8! &10 	#X9	# 2103	[c=4]pushdi1_not_fp/1
	load8! &17 	#X15	# 2104	[c=4]pushdi1_not_fp/1
	call! .Li___sprint_r.part_0.l_o7bf303		# 2105	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	# CBRANCH EQ0	# 2107	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L39.l_o7bf303
	# END CBRANCH
	load8! &23	# 2109	[c=2]movdi_push_pop
	store8! &1 	#AR
	load4! &22	# 2110	[c=2]movsi_push_pop
	store8! &2 	#X1
	load8! &1 	#X1	# 2111	[c=5]movdi_to_tr_unspec/1
	add! 1		# 2113	[c=4]*adddi/0
	store8! &15 	#X14	# 6514	[c=4]movsi_from_tr_unspec/0
	push! &0		# 5931	[c=4]movdi_to_tr_unspec/1
	add! 232		# 5938	[c=4]*adddi/0
	store8! &3 	#X2	# 5936	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 6858	[c=5]movdi_to_tr_unspec/1
	add! -16		# 6860	[c=4]*adddi/0
	store8! &5 	#X4	# 6861	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 6862	[c=12]cbranchsi4_internal
	push! 16	
	add! -2147483648	
	load4! &5 	#X4
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L123.l_o7bf303
	# END CBRANCH
	jump! .L119.l_o7bf303		# 7262	[c=4]jump
.L157.l_o7bf303:
	# CBRANCH EQ0	# 2936	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L341.l_o7bf303
	# END CBRANCH
	push! &0		# 5311	[c=4]movdi_to_tr_unspec/1
	add! 168		# 5318	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 5320	[c=0]*peep2_pop_pusharg
	load8! &10 	#X9	# 2949	[c=4]pushdi1_not_fp/1
	load8! &17 	#X15	# 2950	[c=4]pushdi1_not_fp/1
	call! .Li___sprint_r.part_0.l_o7bf303		# 2951	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	# CBRANCH EQ0	# 2953	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L39.l_o7bf303
	# END CBRANCH
	load8! &23	# 2955	[c=2]movdi_push_pop
	store8! &1 	#AR
	load4! &22	# 2956	[c=2]movsi_push_pop
	store8! &4 	#X3
	load8! &3 	#X3	# 2957	[c=5]movdi_to_tr_unspec/1
	add! 1		# 2959	[c=4]*adddi/0
	store8! &6 	#X5	# 6464	[c=4]movsi_from_tr_unspec/0
	push! &0		# 5295	[c=4]movdi_to_tr_unspec/1
	add! 232		# 5302	[c=4]*adddi/0
	store8! &5 	#X4	# 5300	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 6865	[c=5]movdi_to_tr_unspec/1
	add! -16		# 6867	[c=4]*adddi/0
	store8! &3 	#X2	# 6869	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 6870	[c=12]cbranchsi4_internal
	push! 16	
	add! -2147483648	
	load4! &3 	#X2
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L160.l_o7bf303
	# END CBRANCH
	jump! .L161.l_o7bf303		# 7266	[c=4]jump
.L137.l_o7bf303:
	# CBRANCH EQ0	# 2457	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L342.l_o7bf303
	# END CBRANCH
	push! &0		# 5645	[c=4]movdi_to_tr_unspec/1
	add! 168		# 5652	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 5654	[c=0]*peep2_pop_pusharg
	load8! &10 	#X9	# 2470	[c=4]pushdi1_not_fp/1
	load8! &17 	#X15	# 2471	[c=4]pushdi1_not_fp/1
	call! .Li___sprint_r.part_0.l_o7bf303		# 2472	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	# CBRANCH EQ0	# 2474	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L39.l_o7bf303
	# END CBRANCH
	load8! &23	# 2476	[c=2]movdi_push_pop
	store8! &1 	#AR
	load4! &22	# 2477	[c=2]movsi_push_pop
	store8! &2 	#X1
	load8! &1 	#X1	# 2478	[c=5]movdi_to_tr_unspec/1
	add! 1		# 2480	[c=4]*adddi/0
	store8! &15 	#X14	# 6494	[c=4]movsi_from_tr_unspec/0
	push! &0		# 5629	[c=4]movdi_to_tr_unspec/1
	add! 232		# 5636	[c=4]*adddi/0
	store8! &3 	#X2	# 5634	[c=4]movdi_from_tr_unspec/0
	load8! &13 	#X13	# 6873	[c=5]movdi_to_tr_unspec/1
	add! -16		# 6875	[c=4]*adddi/0
	store8! &14 	#X13	# 6877	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 6878	[c=12]cbranchsi4_internal
	push! 16	
	add! -2147483648	
	load4! &14 	#X13
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L140.l_o7bf303
	# END CBRANCH
	jump! .L343.l_o7bf303		# 7271	[c=4]jump
.L338.l_o7bf303:
	push! 0		# 2661	[c=4]movsi_push_pop
	store4! &23
	push! 1		# 377	[c=4]movsi_push_pop
	store8! &6 	#X5
	push! 0		# 378	[c=4]movsi_push_pop
	store8! &2 	#X1
	push! &0		# 5515	[c=4]movdi_to_tr_unspec/1
	add! 232		# 5522	[c=4]*adddi/0
	store8! &3 	#X2	# 5520	[c=4]movdi_from_tr_unspec/0
	load8! &8 	#X8	# 6881	[c=5]movdi_to_tr_unspec/1
	add! -16		# 6883	[c=4]*adddi/0
	store8! &9 	#X8	# 6885	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 6886	[c=12]cbranchsi4_internal
	push! 16	
	add! -2147483648	
	load4! &9 	#X8
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L148.l_o7bf303
	# END CBRANCH
	jump! .L339.l_o7bf303		# 7274	[c=4]jump
.L198.l_o7bf303:
	load4! &11 	#X11	# 107	[c=4]movsi_push_pop
	store8! &5 	#X4
.L107.l_o7bf303:
	push! &0		# 6091	[c=4]movdi_to_tr_unspec/1
	add! 192		# 6098	[c=4]*adddi/0
	add! 40		# 115	[c=4]*adddi/0
	store8! &4 	#X3	# 116	[c=4]movdi_from_tr_unspec/0
	load8! &18	# 4332	[c=2]movdi_push_pop
	store8! &11 	#X10
.L113.l_o7bf303:
	load8! &0 	#AR	# 1850	[c=5]movdi_to_tr_unspec/1
	and! 0xf		# 1852	[c=4]*anddi3/0
	load8! &11 	#X10	# 6080	[c=6]*adddi/2
	add
	store8! &6 	#X5	# 6081	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 1865	[c=5]movdi_to_tr_unspec/1
	add! -1		# 1867	[c=4]*adddi/0
	store8! &4 	#X3	# 1868	[c=4]movdi_from_tr_unspec/0
	load8! &5 	#X5	# 1871	[c=7]movqi_to_tr_unspec/2
	load1	
	#	
	load8! &4 	#X3	# 1877	[c=4]movqi_from_tr_unspec/1
	store1	
	#	
	load8! &0 	#AR	# 1884	[c=5]movdi_to_tr_unspec/1
	shift_ru! 4	# 1886	[c=40]*lshrdi3/0
	store8! &1 	#AR	# 1887	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 1891	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_not_zero! .L113.l_o7bf303
	# END CBRANCH
	push! &0		# 6068	[c=4]movdi_to_tr_unspec/1
	add! 192		# 6075	[c=4]*adddi/0
	add! 40		# 1900	[c=4]*adddi/0
	load8! &4 	#X3	# 1905	[c=14]*subdi3/2
	sub
	store8! &13 	#X12	# 6532	[c=4]movsi_from_tr_unspec/0
	load4! &4 	#X4	# 131	[c=4]movsi_push_pop
	store8! &12 	#X11
	jump! .L94.l_o7bf303		# 7276	[c=4]jump
.L340.l_o7bf303:
	push! 0		# 2092	[c=4]movsi_push_pop
	store4! &23
	push! 0		# 183	[c=4]movsi_push_pop
	store8! &2 	#X1
	push! 1		# 184	[c=4]movsi_push_pop
	store8! &15 	#X14
	push! &0		# 5965	[c=4]movdi_to_tr_unspec/1
	add! 232		# 5972	[c=4]*adddi/0
	store8! &3 	#X2	# 5970	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 6889	[c=5]movdi_to_tr_unspec/1
	add! -16		# 6891	[c=4]*adddi/0
	store8! &5 	#X4	# 6892	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 6893	[c=12]cbranchsi4_internal
	push! 16	
	add! -2147483648	
	load4! &5 	#X4
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L123.l_o7bf303
	# END CBRANCH
	jump! .L119.l_o7bf303		# 7279	[c=4]jump
.L341.l_o7bf303:
	push! 0		# 2938	[c=4]movsi_push_pop
	store4! &23
	push! 1		# 427	[c=4]movsi_push_pop
	store8! &6 	#X5
	push! 0		# 428	[c=4]movsi_push_pop
	store8! &4 	#X3
	push! &0		# 5329	[c=4]movdi_to_tr_unspec/1
	add! 232		# 5336	[c=4]*adddi/0
	store8! &5 	#X4	# 5334	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 6896	[c=5]movdi_to_tr_unspec/1
	add! -16		# 6898	[c=4]*adddi/0
	store8! &3 	#X2	# 6900	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 6901	[c=12]cbranchsi4_internal
	push! 16	
	add! -2147483648	
	load4! &3 	#X2
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L160.l_o7bf303
	# END CBRANCH
	jump! .L161.l_o7bf303		# 7282	[c=4]jump
.L342.l_o7bf303:
	push! 0		# 2459	[c=4]movsi_push_pop
	store4! &23
	push! 1		# 328	[c=4]movsi_push_pop
	store8! &15 	#X14
	push! 0		# 329	[c=4]movsi_push_pop
	store8! &2 	#X1
	push! &0		# 5663	[c=4]movdi_to_tr_unspec/1
	add! 232		# 5670	[c=4]*adddi/0
	store8! &3 	#X2	# 5668	[c=4]movdi_from_tr_unspec/0
	load8! &13 	#X13	# 6904	[c=5]movdi_to_tr_unspec/1
	add! -16		# 6906	[c=4]*adddi/0
	store8! &14 	#X13	# 6908	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 6909	[c=12]cbranchsi4_internal
	push! 16	
	add! -2147483648	
	load4! &14 	#X13
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L140.l_o7bf303
	# END CBRANCH
	jump! .L343.l_o7bf303		# 7285	[c=4]jump
.L314.l_o7bf303:
	push! 0		# 2274	[c=4]movsi_push_pop
	store4! &23
	# CBRANCH EQ0	# 2275	[c=14]cbranchsi4_internal
	load4! &17
	jump_zero! .L344.l_o7bf303
	# END CBRANCH
	push! &0		# 5154	[c=4]movdi_to_tr_unspec/1
	add! 160		# 5161	[c=4]*adddi/0
	store8! &30	# 5159	[c=4]movdi_from_tr_unspec/0
	push! 2		# 3252	[c=4]movdi_push_pop
	store8! &31
	push! 2		# 3253	[c=4]movdi_push_pop
	store8! &24
	push! 1		# 3254	[c=4]movsi_push_pop
	store4! &23
	push! &0		# 5170	[c=4]movdi_to_tr_unspec/1
	add! 232		# 5177	[c=4]*adddi/0
	add! 16		# 241	[c=4]*adddi/0
	store8! &5 	#X4	# 242	[c=4]movdi_from_tr_unspec/0
	push! 1		# 244	[c=4]movsi_push_pop
	store8! &6 	#X5
	push! 2		# 245	[c=4]movdi_push_pop
	store8! &1 	#AR
.L175.l_o7bf303:
	load8! &5 	#X5	# 2332	[c=5]movdi_to_tr_unspec/1
	add! 1		# 2334	[c=4]*adddi/0
	store8! &3 	#X2	# 6502	[c=4]movsi_from_tr_unspec/0
	load8! &4 	#X4	# 2341	[c=5]movdi_to_tr_unspec/1
	add! 16		# 2343	[c=4]*adddi/0
	store8! &15 	#X14	# 2344	[c=4]movdi_from_tr_unspec/0
	load4! &5 	#X5	# 290	[c=4]movsi_push_pop
	store8! &2 	#X1
	load4! &2 	#X2	# 291	[c=4]movsi_push_pop
	store8! &6 	#X5
	load8! &4 	#X4	# 292	[c=4]movdi_push_pop
	store8! &3 	#X2
	load8! &14 	#X14	# 293	[c=4]movdi_push_pop
	store8! &5 	#X4
.L355.l_o7bf303:
	# CBRANCH	# 6912	[c=12]cbranchsi4_internal
	load4! &13 	#X13
	push! 128	
	xor	
	push! 1	
	lt_u	
	jump_zero! .L135.l_o7bf303
	# END CBRANCH
	jump! .L316.l_o7bf303		# 7289	[c=4]jump
.L188.l_o7bf303:
	load4! &11 	#X11	# 80	[c=4]movsi_push_pop
	store8! &5 	#X4
	# CBRANCH	# 6915	[c=12]cbranchsi4_internal
	load4! &3 	#X3
	push! 1	
	xor	
	push! 1	
	lt_u	
	jump_zero! .L345.l_o7bf303
	# END CBRANCH
.L106.l_o7bf303:
	# CBRANCH	# 1764	[c=12]cbranchdi4_internal
	push! 9	
	load8! &1 	#AR
	lt_u	
	not	
	jump_zero! .L346.l_o7bf303
	# END CBRANCH
.L168.l_o7bf303:
	load8! &0 	#AR	# 1770	[c=5]movdi_to_tr_unspec/1
	add! 48		# 1772	[c=4]*adddi/0
	store1! (+ &0 239)	# 6543	[c=4]movqi_from_tr_unspec/0
	load4! &4 	#X4	# 119	[c=4]movsi_push_pop
	store8! &12 	#X11
	push! 1		# 120	[c=4]movsi_push_pop
	store8! &13 	#X12
	push! &0		# 6149	[c=4]movdi_to_tr_unspec/1
	add! 192		# 6156	[c=4]*adddi/0
	add! 39		# 128	[c=4]*adddi/0
	store8! &4 	#X3	# 129	[c=4]movdi_from_tr_unspec/0
	jump! .L94.l_o7bf303		# 7293	[c=4]jump
.L149.l_o7bf303:
	# CBRANCH EQ0	# 2756	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L347.l_o7bf303
	# END CBRANCH
	push! &0		# 5443	[c=4]movdi_to_tr_unspec/1
	add! 168		# 5450	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 5452	[c=0]*peep2_pop_pusharg
	load8! &10 	#X9	# 2777	[c=4]pushdi1_not_fp/1
	load8! &17 	#X15	# 2778	[c=4]pushdi1_not_fp/1
	call! .Li___sprint_r.part_0.l_o7bf303		# 2779	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	# CBRANCH EQ0	# 2781	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L39.l_o7bf303
	# END CBRANCH
	load8! &23	# 2783	[c=2]movdi_push_pop
	store8! &1 	#AR
	load4! &22	# 5399	[c=5]movsi_to_tr_unspec/1
	add! 1		# 2787	[c=4]*adddi/0
	store8! &6 	#X5	# 6476	[c=4]movsi_from_tr_unspec/0
	push! &0		# 5410	[c=4]movdi_to_tr_unspec/1
	add! 232		# 5417	[c=4]*adddi/0
	add! 16		# 399	[c=4]*adddi/0
	store8! &5 	#X4	# 400	[c=4]movdi_from_tr_unspec/0
	push! &0		# 5427	[c=4]movdi_to_tr_unspec/1
	add! 232		# 5434	[c=4]*adddi/0
	store8! &3 	#X2	# 5432	[c=4]movdi_from_tr_unspec/0
	jump! .L143.l_o7bf303		# 7296	[c=4]jump
.L308.l_o7bf303:
	push! 0		# 668	[c=4]movsi_push_pop
	store4! &23
	push! &0		# 6386	[c=4]movdi_to_tr_unspec/1
	add! 232		# 6393	[c=4]*adddi/0
	store8! &3 	#X2	# 6391	[c=4]movdi_from_tr_unspec/0
	load4! &16	# 6918	[c=5]movsi_to_tr_unspec/1
	load8! &6 	#X5	# 6920	[c=6]*adddi/2
	add
	store4! &17	# 6921	[c=4]movsi_from_tr_unspec/0
	load8! &4 	#X4	# 6922	[c=6]movqi_to_tr_unspec/2
	add! 1	
	load1	
	#	
	# CBRANCH - peep (modesize=1)
	and! 255		# 6924	[c=12]*peep2_cbranchqi
	# - EQ0
	jump_not_zero! .L32.l_o7bf303
	# END CBRANCH
	jump! .L31.l_o7bf303		# 7299	[c=4]jump
.L315.l_o7bf303:
	push! 0		# 2352	[c=4]movsi_push_pop
	store4! &23
	push! &0		# 5741	[c=4]movdi_to_tr_unspec/1
	add! 232		# 5748	[c=4]*adddi/0
	add! 16		# 265	[c=4]*adddi/0
	store8! &5 	#X4	# 266	[c=4]movdi_from_tr_unspec/0
	push! 1		# 268	[c=4]movsi_push_pop
	store8! &6 	#X5
	push! 0		# 269	[c=4]movsi_push_pop
	store8! &2 	#X1
	push! &0		# 5758	[c=4]movdi_to_tr_unspec/1
	add! 232		# 5765	[c=4]*adddi/0
	store8! &3 	#X2	# 5763	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 6927	[c=12]cbranchsi4_internal
	load4! &13 	#X13
	push! 128	
	xor	
	push! 1	
	lt_u	
	jump_zero! .L135.l_o7bf303
	# END CBRANCH
	jump! .L316.l_o7bf303		# 7302	[c=4]jump
.L335.l_o7bf303:
	# CBRANCH	# 3134	[c=12]cbranchsi4_internal
	load4! &7 	#X7
	add! -2147483648	
	load4! &11 	#X10
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L348.l_o7bf303
	# END CBRANCH
	load4! &16	# 5194	[c=5]movsi_to_tr_unspec/1
	load8! &8 	#X7	# 5197	[c=6]*adddi/2
	add
	store4! &17	# 6450	[c=4]movsi_from_tr_unspec/0
.L351.l_o7bf303:
	push! 0		# 6930	[c=4]movsi_push_pop
	store4! &23
	push! &0		# 6931	[c=4]movdi_to_tr_unspec/1
	add! 232		# 6933	[c=4]*adddi/0
	store8! &3 	#X2	# 6934	[c=4]movdi_from_tr_unspec/0
	jump! .L30.l_o7bf303		# 7305	[c=4]jump
.L109.l_o7bf303:
	# CBRANCH EQ	# 1701	[c=12]cbranchqi4_internal
	load1! &5 	#X5
	push! 48	
	xor	
	jump_zero! .L349.l_o7bf303
	# END CBRANCH
	load8! &10 	#X10	# 1726	[c=5]movdi_to_tr_unspec/1
	add! -2		# 1728	[c=4]*adddi/0
	store8! &1 	#AR	# 1729	[c=4]movdi_from_tr_unspec/0
	push! 48		# 6158	[c=3]movqi_to_tr_unspec/0
	load8! &4 	#X3	# 6160	[c=5]movdi_to_tr_unspec/1
	add! -1		# 6162	[c=4]*adddi/0
	store1		# 6163	[c=4]*peep2_mov_from_tr_to_mem_tr_ind_popqi_unspec
	push! &0		# 6172	[c=4]movdi_to_tr_unspec/1
	add! 192		# 6179	[c=4]*adddi/0
	add! 40		# 1748	[c=4]*adddi/0
	load8! &1 	#AR	# 1753	[c=14]*subdi3/2
	sub
	store8! &13 	#X12	# 6545	[c=4]movsi_from_tr_unspec/0
	load4! &4 	#X4	# 156	[c=4]movsi_push_pop
	store8! &12 	#X11
	load8! &0 	#AR	# 157	[c=4]movdi_push_pop
	store8! &4 	#X3
	jump! .L94.l_o7bf303		# 7308	[c=4]jump
.L179.l_o7bf303:
	load8! &6 	#X6	# 31	[c=4]movdi_push_pop
	store8! &4 	#X3
	load8! &3 	#X3	# 6937	[c=5]movdi_to_tr_unspec/1
	add! 1		# 6939	[c=4]*adddi/0
	store8! &1 	#AR	# 6940	[c=4]movdi_from_tr_unspec/0
	push! 0		# 6941	[c=4]movqi_push_pop
	store1! &20
	push! 0		# 6942	[c=4]movqi_push_pop
	store8! &4 	#X3
	push! 0		# 6943	[c=4]movqi_push_pop
	store8! &6 	#X5
	push! -1		# 6944	[c=4]movsi_push_pop
	store8! &9 	#X8
	push! 0		# 6945	[c=4]movsi_push_pop
	store8! &8 	#X7
	push! 0		# 6946	[c=4]movsi_push_pop
	store8! &5 	#X4
	jump! .L40.l_o7bf303		# 7310	[c=4]jump
.L184.l_o7bf303:
	load8! &0 	#AR	# 38	[c=4]movdi_push_pop
	store8! &50
	load8! &6 	#X6	# 6949	[c=4]movdi_push_pop
	store8! &1 	#AR
	jump! .L40.l_o7bf303		# 7312	[c=4]jump
.L283.l_o7bf303:
	# CBRANCH	# 3206	[c=12]cbranchsi4_internal
	load4! &7 	#X7
	add! -2147483648	
	load4! &11 	#X10
	add! -2147483648	
	lt_u	
	jump_zero! .L172.l_o7bf303
	# END CBRANCH
	load4! &10 	#X10	# 3207	[c=4]movsi_push_pop
	store8! &8 	#X7
.L172.l_o7bf303:
	load4! &16	# 5186	[c=5]movsi_to_tr_unspec/1
	load8! &8 	#X7	# 5189	[c=6]*adddi/2
	add
	store4! &17	# 6444	[c=4]movsi_from_tr_unspec/0
	push! 0		# 6952	[c=4]movsi_push_pop
	store4! &23
	push! &0		# 6953	[c=4]movdi_to_tr_unspec/1
	add! 232		# 6955	[c=4]*adddi/0
	store8! &3 	#X2	# 6956	[c=4]movdi_from_tr_unspec/0
	jump! .L30.l_o7bf303		# 7314	[c=4]jump
.L193.l_o7bf303:
	push! &0		# 6016	[c=4]movdi_to_tr_unspec/1
	add! 192		# 6023	[c=4]*adddi/0
	add! 40		# 168	[c=4]*adddi/0
	store8! &4 	#X3	# 169	[c=4]movdi_from_tr_unspec/0
	jump! .L94.l_o7bf303		# 7316	[c=4]jump
.L125.l_o7bf303:
	push! &0		# 5910	[c=4]movdi_to_tr_unspec/1
	add! 168		# 5917	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 5919	[c=0]*peep2_pop_pusharg
	load8! &10 	#X9	# 2203	[c=4]pushdi1_not_fp/1
	load8! &17 	#X15	# 2204	[c=4]pushdi1_not_fp/1
	call! .Li___sprint_r.part_0.l_o7bf303		# 2205	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	# CBRANCH EQ0	# 2207	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L39.l_o7bf303
	# END CBRANCH
	load8! &23	# 2209	[c=2]movdi_push_pop
	store8! &1 	#AR
	load4! &22	# 2210	[c=2]movsi_push_pop
	store8! &2 	#X1
	load8! &1 	#X1	# 2211	[c=5]movdi_to_tr_unspec/1
	add! 1		# 2213	[c=4]*adddi/0
	store8! &6 	#X5	# 6508	[c=4]movsi_from_tr_unspec/0
	push! &0		# 5894	[c=4]movdi_to_tr_unspec/1
	add! 232		# 5901	[c=4]*adddi/0
	store8! &3 	#X2	# 5899	[c=4]movdi_from_tr_unspec/0
	jump! .L118.l_o7bf303		# 7318	[c=4]jump
.L333.l_o7bf303:
	load8! &14 	#X14	# 2536	[c=5]movdi_to_tr_unspec/1
	add! 1		# 2538	[c=4]*adddi/0
	store8! &6 	#X5	# 6490	[c=4]movsi_from_tr_unspec/0
	load8! &17	# 2545	[c=5]movdi_to_tr_unspec/1
	add! 16		# 2547	[c=4]*adddi/0
	store8! &5 	#X4	# 2548	[c=4]movdi_from_tr_unspec/0
	load4! &14 	#X14	# 375	[c=4]movsi_push_pop
	store8! &2 	#X1
	load8! &17	# 376	[c=2]movdi_push_pop
	store8! &3 	#X2
	load8! &12 	#X12	# 6959	[c=5]movdi_to_tr_unspec/1
	load8! &9 	#X8	# 6961	[c=14]*subdi3/2
	sub
	neg		# 6962	[c=4]*neg_tr
	store8! &9 	#X8	# 6963	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 6964	[c=12]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &9 	#X8
	add! -2147483648	
	lt_u	
	jump_zero! .L143.l_o7bf303
	# END CBRANCH
	jump! .L317.l_o7bf303		# 7321	[c=4]jump
.L324.l_o7bf303:
	load4! &16	# 1197	[c=5]movsi_to_tr_unspec/1
	sigx4		# 1199	[c=6]*extendsidi2
	load8! &1 	#AR	# 1204	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	jump! .L30.l_o7bf303		# 7323	[c=4]jump
.L187.l_o7bf303:
	load8! &3 	#X3	# 75	[c=4]movdi_push_pop
	store8! &50
	push! 2		# 76	[c=4]movsi_push_pop
	store8! &4 	#X3
	push! 0		# 6967	[c=4]movqi_push_pop
	store1! &20
	push! 0		# 6968	[c=4]movqi_push_pop
	store8! &2 	#X1
	jump! .L80.l_o7bf303		# 7325	[c=4]jump
.L89.l_o7bf303:
	load4! &0 	#AR	# 6273	[c=5]movsi_to_tr_unspec/1
	store8! &1 	#AR	# 6275	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 56	[c=4]movdi_push_pop
	store8! &50
	push! 0		# 57	[c=4]movsi_push_pop
	store8! &4 	#X3
	push! 0		# 6971	[c=4]movqi_push_pop
	store1! &20
	push! 0		# 6972	[c=4]movqi_push_pop
	store8! &2 	#X1
	jump! .L80.l_o7bf303		# 7327	[c=4]jump
.L78.l_o7bf303:
	load8! &49	# 4587	[c=2]movdi_push_pop
	store8! &2 	#X1
	load8! &1 	#X1	# 1132	[c=7]movsi_to_tr_unspec/2
	load4	
	#	
	store8! &2 	#X1	# 1134	[c=4]movsi_from_tr_unspec/0
	load4! &1 	#X1	# 1136	[c=5]movsi_to_tr_unspec/1
	sigx4		# 1138	[c=6]*extendsidi2
	store8! &1 	#AR	# 1139	[c=4]movdi_from_tr_unspec/0
	load4! &1 	#X1	# 1141	[c=5]movsi_to_tr_unspec/1
	sigx4		# 1143	[c=6]*extendsidi2
	store8! &2 	#X1	# 1144	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 52	[c=4]movdi_push_pop
	store8! &50
	jump! .L77.l_o7bf303		# 7329	[c=4]jump
.L98.l_o7bf303:
	load4! &0 	#AR	# 6258	[c=5]movsi_to_tr_unspec/1
	store8! &1 	#AR	# 6260	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 61	[c=4]movdi_push_pop
	store8! &50
	push! 1		# 62	[c=4]movsi_push_pop
	store8! &4 	#X3
	push! 0		# 6975	[c=4]movqi_push_pop
	store1! &20
	push! 0		# 6976	[c=4]movqi_push_pop
	store8! &2 	#X1
	jump! .L80.l_o7bf303		# 7331	[c=4]jump
.L102.l_o7bf303:
	load4! &0 	#AR	# 6249	[c=5]movsi_to_tr_unspec/1
	store8! &1 	#AR	# 6251	[c=4]movdi_from_tr_unspec/0
	jump! .L101.l_o7bf303		# 7333	[c=4]jump
.L344.l_o7bf303:
	push! 0		# 294	[c=4]movsi_push_pop
	store8! &2 	#X1
	push! &0		# 5843	[c=4]movdi_to_tr_unspec/1
	add! 232		# 5850	[c=4]*adddi/0
	add! 16		# 302	[c=4]*adddi/0
	store8! &5 	#X4	# 303	[c=4]movdi_from_tr_unspec/0
	push! 1		# 305	[c=4]movsi_push_pop
	store8! &6 	#X5
	push! &0		# 5860	[c=4]movdi_to_tr_unspec/1
	add! 232		# 5867	[c=4]*adddi/0
	store8! &3 	#X2	# 5865	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 6979	[c=12]cbranchsi4_internal
	load4! &13 	#X13
	push! 128	
	xor	
	push! 1	
	lt_u	
	jump_zero! .L135.l_o7bf303
	# END CBRANCH
	jump! .L316.l_o7bf303		# 7336	[c=4]jump
.L346.l_o7bf303:
	push! &0		# 6129	[c=4]movdi_to_tr_unspec/1
	add! 192		# 6136	[c=4]*adddi/0
	add! 40		# 103	[c=4]*adddi/0
	store8! &4 	#X3	# 104	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 1785	[c=5]movdi_to_tr_unspec/1
	rem_u! 10	# 1787	[c=28]*umoddi3/0
	add! 48		# 1796	[c=4]*adddi/0
	store8! &6 	#X5	# 6540	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 6541	[c=5]movdi_to_tr_unspec/1
	add! -1		# 1810	[c=4]*adddi/0
	store8! &4 	#X3	# 1811	[c=4]movdi_from_tr_unspec/0
	load1! &5 	#X5	# 1815	[c=5]movqi_to_tr_unspec/1
	load8! &4 	#X3	# 1817	[c=4]movqi_from_tr_unspec/1
	store1	
	#	
	load8! &0 	#AR	# 1819	[c=5]movdi_to_tr_unspec/1
	div_u! 10	# 1821	[c=28]*udivdi3/0
	store8! &6 	#X5	# 1822	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 1824	[c=12]cbranchdi4_internal
	push! 9	
	load8! &1 	#AR
	lt_u	
	jump_zero! .L350.l_o7bf303
	# END CBRANCH
.L191.l_o7bf303:
	load8! &5 	#X5	# 106	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 6982	[c=5]movdi_to_tr_unspec/1
	rem_u! 10	# 6984	[c=28]*umoddi3/0
	add! 48		# 6986	[c=4]*adddi/0
	store8! &6 	#X5	# 6987	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 6988	[c=5]movdi_to_tr_unspec/1
	add! -1		# 6990	[c=4]*adddi/0
	store8! &4 	#X3	# 6991	[c=4]movdi_from_tr_unspec/0
	load1! &5 	#X5	# 6992	[c=5]movqi_to_tr_unspec/1
	load8! &4 	#X3	# 6994	[c=4]movqi_from_tr_unspec/1
	store1	
	#	
	load8! &0 	#AR	# 6995	[c=5]movdi_to_tr_unspec/1
	div_u! 10	# 6997	[c=28]*udivdi3/0
	store8! &6 	#X5	# 6998	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 6999	[c=12]cbranchdi4_internal
	push! 9	
	load8! &1 	#AR
	lt_u	
	not	
	jump_zero! .L191.l_o7bf303
	# END CBRANCH
.L350.l_o7bf303:
	push! &0		# 6108	[c=4]movdi_to_tr_unspec/1
	add! 192		# 6115	[c=4]*adddi/0
	add! 40		# 1833	[c=4]*adddi/0
	load8! &4 	#X3	# 1838	[c=14]*subdi3/2
	sub
	store8! &13 	#X12	# 6535	[c=4]movsi_from_tr_unspec/0
	load4! &4 	#X4	# 159	[c=4]movsi_push_pop
	store8! &12 	#X11
	jump! .L94.l_o7bf303		# 7339	[c=4]jump
.L348.l_o7bf303:
	load4! &10 	#X10	# 3135	[c=4]movsi_push_pop
	store8! &8 	#X7
	load4! &16	# 7002	[c=5]movsi_to_tr_unspec/1
	load8! &8 	#X7	# 7004	[c=6]*adddi/2
	add
	store4! &17	# 7005	[c=4]movsi_from_tr_unspec/0
	jump! .L351.l_o7bf303		# 7342	[c=4]jump
.L312.l_o7bf303:
	load4! &11 	#X11	# 93	[c=4]movsi_push_pop
	store8! &5 	#X4
	# CBRANCH	# 7008	[c=12]cbranchdi4_internal
	push! 9	
	load8! &1 	#AR
	lt_u	
	jump_zero! .L168.l_o7bf303
	# END CBRANCH
	jump! .L346.l_o7bf303		# 7345	[c=4]jump
.L92.l_o7bf303:
	load8! &3 	#X3	# 1401	[c=4]pushdi1_not_fp/1
	call! strlen		# 1402	[c=0]*call_value_pop_1/0
	store8! &1

	load4! &0 	#AR	# 6268	[c=4]movsi_push_pop
	store8! &13 	#X12
	load1! &19	# 1408	[c=2]movqi_push_pop
	store8! &2 	#X1
	load8! &5 	#X5	# 171	[c=4]movdi_push_pop
	store8! &50
	load4! &4 	#X4	# 172	[c=4]movsi_push_pop
	store8! &12 	#X11
	push! 0		# 173	[c=4]movsi_push_pop
	store8! &9 	#X8
	jump! .L94.l_o7bf303		# 7347	[c=4]jump
.L349.l_o7bf303:
	push! &0		# 6191	[c=4]movdi_to_tr_unspec/1
	add! 192		# 6198	[c=4]*adddi/0
	add! 40		# 1710	[c=4]*adddi/0
	load8! &4 	#X3	# 1715	[c=14]*subdi3/2
	sub
	store8! &13 	#X12	# 6547	[c=4]movsi_from_tr_unspec/0
	load4! &4 	#X4	# 158	[c=4]movsi_push_pop
	store8! &12 	#X11
	jump! .L94.l_o7bf303		# 7349	[c=4]jump
.L336.l_o7bf303:
	# CBRANCH	# 3026	[c=12]cbranchsi4_internal
	load4! &7 	#X7
	add! -2147483648	
	load4! &11 	#X10
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L352.l_o7bf303
	# END CBRANCH
	load4! &16	# 5278	[c=5]movsi_to_tr_unspec/1
	load8! &8 	#X7	# 5281	[c=6]*adddi/2
	add
	store4! &17	# 6458	[c=4]movsi_from_tr_unspec/0
.L354.l_o7bf303:
	push! 0		# 7011	[c=4]movsi_push_pop
	store4! &23
	push! &0		# 7012	[c=4]movdi_to_tr_unspec/1
	add! 232		# 7014	[c=4]*adddi/0
	store8! &3 	#X2	# 7015	[c=4]movdi_from_tr_unspec/0
	jump! .L30.l_o7bf303		# 7352	[c=4]jump
.L196.l_o7bf303:
	load8! &4 	#X4	# 390	[c=4]movdi_push_pop
	store8! &2 	#X1
	jump! .L144.l_o7bf303		# 7354	[c=4]jump
.L347.l_o7bf303:
	load8! &3 	#X3	# 2758	[c=4]movdi_push_pop
	store8! &30
	load4! &12 	#X12	# 2759	[c=5]movsi_to_tr_unspec/1
	sigx4		# 2761	[c=6]*extendsidi2
	store8! &1 	#AR	# 2762	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 2764	[c=4]movdi_push_pop
	store8! &31
	load8! &0 	#AR	# 2765	[c=4]movdi_push_pop
	store8! &24
	push! 1		# 2766	[c=4]movsi_push_pop
	store4! &23
	push! &0		# 5461	[c=4]movdi_to_tr_unspec/1
	add! 232		# 5468	[c=4]*adddi/0
	add! 16		# 419	[c=4]*adddi/0
	store8! &5 	#X4	# 420	[c=4]movdi_from_tr_unspec/0
	jump! .L151.l_o7bf303		# 7356	[c=4]jump
.L321.l_o7bf303:
	# CBRANCH EQ	# 3159	[c=12]cbranchsi4_internal
	load4! &3 	#X3
	push! 1	
	xor	
	jump_zero! .L197.l_o7bf303
	# END CBRANCH
	# CBRANCH EQ	# 3161	[c=12]cbranchsi4_internal
	load4! &3 	#X3
	push! 2	
	xor	
	jump_zero! .L198.l_o7bf303
	# END CBRANCH
	load4! &11 	#X11	# 81	[c=4]movsi_push_pop
	store8! &5 	#X4
	push! &0		# 7018	[c=4]movdi_to_tr_unspec/1
	add! 192		# 7020	[c=4]*adddi/0
	add! 40		# 7022	[c=4]*adddi/0
	store8! &11 	#X10	# 7023	[c=4]movdi_from_tr_unspec/0
	jump! .L108.l_o7bf303		# 7358	[c=4]jump
.L328.l_o7bf303:
	# CBRANCH	# 1365	[c=12]cbranchsi4_internal
	push! 6	
	load4! &9 	#X8
	lt_u	
	jump_zero! .L91.l_o7bf303
	# END CBRANCH
	push! 6		# 1366	[c=4]movsi_push_pop
	store8! &9 	#X8
.L91.l_o7bf303:
	load4! &8 	#X8	# 1368	[c=4]movsi_push_pop
	store8! &13 	#X12
	load4! &8 	#X8	# 441	[c=4]movsi_push_pop
	store8! &11 	#X10
	load8! &5 	#X5	# 442	[c=4]movdi_push_pop
	store8! &50
	push! .LC2.l_o7bf303		# 443	[c=4]movdi_push_pop
	store8! &4 	#X3
	load4! &4 	#X4	# 7026	[c=4]movsi_push_pop
	store8! &12 	#X11
	push! 0		# 7027	[c=4]movsi_push_pop
	store8! &9 	#X8
	jump! .L116.l_o7bf303		# 7360	[c=4]jump
.L84.l_o7bf303:
	load4! &16	# 1234	[c=5]movsi_to_tr_unspec/1
	load8! &1 	#AR	# 1236	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	jump! .L30.l_o7bf303		# 7362	[c=4]jump
.L334.l_o7bf303:
	push! 0		# 2556	[c=4]movsi_push_pop
	store4! &23
	push! &0		# 5593	[c=4]movdi_to_tr_unspec/1
	add! 232		# 5600	[c=4]*adddi/0
	add! 16		# 350	[c=4]*adddi/0
	store8! &5 	#X4	# 351	[c=4]movdi_from_tr_unspec/0
	push! 1		# 353	[c=4]movsi_push_pop
	store8! &6 	#X5
	push! 0		# 354	[c=4]movsi_push_pop
	store8! &2 	#X1
	push! &0		# 5610	[c=4]movdi_to_tr_unspec/1
	add! 232		# 5617	[c=4]*adddi/0
	store8! &3 	#X2	# 5615	[c=4]movdi_from_tr_unspec/0
	load8! &12 	#X12	# 7030	[c=5]movdi_to_tr_unspec/1
	load8! &9 	#X8	# 7032	[c=14]*subdi3/2
	sub
	neg		# 7033	[c=4]*neg_tr
	store8! &9 	#X8	# 7034	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 7035	[c=12]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &9 	#X8
	add! -2147483648	
	lt_u	
	jump_zero! .L143.l_o7bf303
	# END CBRANCH
	jump! .L317.l_o7bf303		# 7365	[c=4]jump
.L281.l_o7bf303:
	# CBRANCH EQ0	# 3300	[c=14]cbranchsi4_internal
	load4! &17
	jump_not_zero! .L178.l_o7bf303
	# END CBRANCH
	push! 0		# 311	[c=4]movsi_push_pop
	store8! &2 	#X1
	push! &0		# 5054	[c=4]movdi_to_tr_unspec/1
	add! 232		# 5061	[c=4]*adddi/0
	add! 16		# 319	[c=4]*adddi/0
	store8! &5 	#X4	# 320	[c=4]movdi_from_tr_unspec/0
	push! 1		# 322	[c=4]movsi_push_pop
	store8! &6 	#X5
	push! &0		# 5071	[c=4]movdi_to_tr_unspec/1
	add! 232		# 5078	[c=4]*adddi/0
	store8! &3 	#X2	# 5076	[c=4]movdi_from_tr_unspec/0
	load8! &12 	#X12	# 7038	[c=5]movdi_to_tr_unspec/1
	load8! &9 	#X8	# 7040	[c=14]*subdi3/2
	sub
	neg		# 7041	[c=4]*neg_tr
	store8! &9 	#X8	# 7042	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 7043	[c=12]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &9 	#X8
	add! -2147483648	
	lt_u	
	jump_zero! .L143.l_o7bf303
	# END CBRANCH
	jump! .L317.l_o7bf303		# 7368	[c=4]jump
.L329.l_o7bf303:
	load1! &5 	#X5	# 1065	[c=4]movqi_push_pop
	store1! &20
	jump! .L75.l_o7bf303		# 7370	[c=4]jump
.L332.l_o7bf303:
	load1! &5 	#X5	# 1257	[c=4]movqi_push_pop
	store1! &20
	jump! .L86.l_o7bf303		# 7372	[c=4]jump
.L194.l_o7bf303:
	load4! &5 	#X5	# 196	[c=4]movsi_push_pop
	store8! &15 	#X14
	jump! .L119.l_o7bf303		# 7374	[c=4]jump
.L325.l_o7bf303:
	load1! &5 	#X5	# 749	[c=4]movqi_push_pop
	store1! &20
	push! .LC1.l_o7bf303		# 7046	[c=4]movdi_push_pop
	store8! &19
	jump! .L353.l_o7bf303		# 7377	[c=4]jump
.L323.l_o7bf303:
	load1! &5 	#X5	# 1168	[c=4]movqi_push_pop
	store1! &20
	load8! &4 	#X4	# 7049	[c=5]movdi_to_tr_unspec/1
	and! 0x10		# 7051	[c=4]*anddi3/0
	store8! &2 	#X1	# 7053	[c=4]movsi_from_tr_unspec/0
	load8! &49	# 7054	[c=2]movdi_push_pop
	store8! &4 	#X3
	load8! &3 	#X3	# 7055	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	store8! &1 	#AR	# 7057	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 7058	[c=5]movdi_to_tr_unspec/1
	add! 8		# 7060	[c=4]*adddi/0
	store8! &50	# 7061	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 7062	[c=12]cbranchsi4_internal
	load4! &1 	#X1
	jump_zero! .L82.l_o7bf303
	# END CBRANCH
	jump! .L324.l_o7bf303		# 7380	[c=4]jump
.L310.l_o7bf303:
	load1! &5 	#X5	# 1047	[c=4]movqi_push_pop
	store1! &20
	load8! &4 	#X4	# 7065	[c=5]movdi_to_tr_unspec/1
	or! 0x10		# 7067	[c=4]*iordi3/0
	store8! &5 	#X4	# 7069	[c=4]movsi_from_tr_unspec/0
	jump! .L74.l_o7bf303		# 7382	[c=4]jump
.L320.l_o7bf303:
	load1! &5 	#X5	# 1500	[c=4]movqi_push_pop
	store1! &20
	push! .LC0.l_o7bf303		# 7072	[c=4]movdi_push_pop
	store8! &19
	jump! .L67.l_o7bf303		# 7384	[c=4]jump
.L322.l_o7bf303:
	load1! &5 	#X5	# 1428	[c=4]movqi_push_pop
	store1! &20
	jump! .L96.l_o7bf303		# 7386	[c=4]jump
.L337.l_o7bf303:
	load1! &5 	#X5	# 1938	[c=4]movqi_push_pop
	store1! &20
	jump! .L114.l_o7bf303		# 7388	[c=4]jump
.L352.l_o7bf303:
	load4! &10 	#X10	# 3027	[c=4]movsi_push_pop
	store8! &8 	#X7
	load4! &16	# 7075	[c=5]movsi_to_tr_unspec/1
	load8! &8 	#X7	# 7077	[c=6]*adddi/2
	add
	store4! &17	# 7078	[c=4]movsi_from_tr_unspec/0
	jump! .L354.l_o7bf303		# 7391	[c=4]jump
.L156.l_o7bf303:
	load8! &3 	#X3	# 2984	[c=5]movdi_to_tr_unspec/1
	add! 1		# 2986	[c=4]*adddi/0
	store8! &6 	#X5	# 6460	[c=4]movsi_from_tr_unspec/0
	jump! .L161.l_o7bf303		# 7393	[c=4]jump
.L195.l_o7bf303:
	load8! &4 	#X4	# 341	[c=4]movdi_push_pop
	store8! &18
	load4! &5 	#X5	# 342	[c=4]movsi_push_pop
	store8! &15 	#X14
	push! .Li_zeroes_4576.l_o7bf303		# 7081	[c=3]movdi_to_tr_unspec/0
	load8! &3 	#X2	# 7083	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load4! &13 	#X13	# 7084	[c=5]movsi_to_tr_unspec/1
	sigx4		# 7086	[c=6]*extendsidi2
	store8! &2 	#X1	# 7087	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 7088	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 7090	[c=4]movdi_from_tr_unspec/1
	add! 8	
	store8	
	#	
	load8! &1 	#X1	# 7091	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 7093	[c=6]*adddi/2
	add
	store8! &1 	#AR	# 7094	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 7095	[c=4]movdi_push_pop
	store8! &24
	load4! &14 	#X14	# 7096	[c=4]movsi_push_pop
	store4! &23
	# CBRANCH	# 7097	[c=12]cbranchsi4_internal
	push! 7	
	add! -2147483648	
	load4! &15 	#X14
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L141.l_o7bf303
	# END CBRANCH
	jump! .L333.l_o7bf303		# 7396	[c=4]jump
.L166.l_o7bf303:
	push! -1		# 440	[c=4]movsi_push_pop
	store4! &17
	load4! &16	# 7100	[c=2]movsi_push_pop
	store4! &47
	jump! .L309.l_o7bf303		# 7398	[c=4]jump
.L93.l_o7bf303:
	load1! &19	# 1953	[c=2]movqi_push_pop
	store8! &2 	#X1
	load8! &5 	#X5	# 177	[c=4]movdi_push_pop
	store8! &50
	load4! &8 	#X8	# 178	[c=4]movsi_push_pop
	store8! &13 	#X12
	load4! &4 	#X4	# 179	[c=4]movsi_push_pop
	store8! &12 	#X11
	push! 0		# 180	[c=4]movsi_push_pop
	store8! &9 	#X8
	jump! .L94.l_o7bf303		# 7400	[c=4]jump
.L178.l_o7bf303:
	push! &0		# 5087	[c=4]movdi_to_tr_unspec/1
	add! 160		# 5094	[c=4]*adddi/0
	store8! &30	# 5092	[c=4]movdi_from_tr_unspec/0
	push! 2		# 3292	[c=4]movdi_push_pop
	store8! &31
	push! 2		# 3293	[c=4]movdi_push_pop
	store8! &24
	push! 1		# 3294	[c=4]movsi_push_pop
	store4! &23
	push! &0		# 5103	[c=4]movdi_to_tr_unspec/1
	add! 232		# 5110	[c=4]*adddi/0
	add! 16		# 253	[c=4]*adddi/0
	store8! &5 	#X4	# 254	[c=4]movdi_from_tr_unspec/0
	push! 1		# 256	[c=4]movsi_push_pop
	store8! &6 	#X5
	push! 2		# 257	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &5 	#X5	# 7103	[c=5]movdi_to_tr_unspec/1
	add! 1		# 7105	[c=4]*adddi/0
	store8! &3 	#X2	# 7107	[c=4]movsi_from_tr_unspec/0
	load8! &4 	#X4	# 7108	[c=5]movdi_to_tr_unspec/1
	add! 16		# 7110	[c=4]*adddi/0
	store8! &15 	#X14	# 7111	[c=4]movdi_from_tr_unspec/0
	load4! &5 	#X5	# 7112	[c=4]movsi_push_pop
	store8! &2 	#X1
	load4! &2 	#X2	# 7113	[c=4]movsi_push_pop
	store8! &6 	#X5
	load8! &4 	#X4	# 7114	[c=4]movdi_push_pop
	store8! &3 	#X2
	load8! &14 	#X14	# 7115	[c=4]movdi_push_pop
	store8! &5 	#X4
	jump! .L355.l_o7bf303		# 7403	[c=4]jump
.L197.l_o7bf303:
	load4! &11 	#X11	# 94	[c=4]movsi_push_pop
	store8! &5 	#X4
	load8! &0 	#AR	# 7119	[c=5]movdi_to_tr_unspec/1
	add! 48		# 7121	[c=4]*adddi/0
	store1! (+ &0 239)	# 7122	[c=4]movqi_from_tr_unspec/0
	load4! &4 	#X4	# 7123	[c=4]movsi_push_pop
	store8! &12 	#X11
	push! 1		# 7124	[c=4]movsi_push_pop
	store8! &13 	#X12
	push! &0		# 7125	[c=4]movdi_to_tr_unspec/1
	add! 192		# 7127	[c=4]*adddi/0
	add! 39		# 7129	[c=4]*adddi/0
	store8! &4 	#X3	# 7130	[c=4]movdi_from_tr_unspec/0
	jump! .L94.l_o7bf303		# 7405	[c=4]jump
.L201.l_o7bf303:
	load4! &11 	#X11	# 95	[c=4]movsi_push_pop
	store8! &5 	#X4
	load8! &0 	#AR	# 7134	[c=5]movdi_to_tr_unspec/1
	add! 48		# 7136	[c=4]*adddi/0
	store1! (+ &0 239)	# 7137	[c=4]movqi_from_tr_unspec/0
	load4! &4 	#X4	# 7138	[c=4]movsi_push_pop
	store8! &12 	#X11
	push! 1		# 7139	[c=4]movsi_push_pop
	store8! &13 	#X12
	push! &0		# 7140	[c=4]movdi_to_tr_unspec/1
	add! 192		# 7142	[c=4]*adddi/0
	add! 39		# 7144	[c=4]*adddi/0
	store8! &4 	#X3	# 7145	[c=4]movdi_from_tr_unspec/0
	jump! .L94.l_o7bf303		# 7407	[c=4]jump
.L68.l_o7bf303:
	load8! &49	# 847	[c=5]movdi_to_tr_unspec/1
	add! 8		# 849	[c=4]*adddi/0
	store8! &1 	#AR	# 850	[c=4]movdi_from_tr_unspec/0
	load8! &49	# 4576	[c=2]movdi_push_pop
	store8! &2 	#X1
	load8! &1 	#X1	# 852	[c=7]movsi_to_tr_unspec/2
	load4	
	#	
	store8! &9 	#X8	# 854	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 857	[c=12]cbranchsi4_internal
	load4! &8 	#X8
	add! -2147483648	
	push! 0	
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L356.l_o7bf303
	# END CBRANCH
	load8! &0 	#AR	# 34	[c=4]movdi_push_pop
	store8! &50
	load8! &10 	#X10	# 35	[c=4]movdi_push_pop
	store8! &7 	#X6
.L357.l_o7bf303:
	load8! &6 	#X6	# 7148	[c=4]movdi_push_pop
	store8! &1 	#AR
	jump! .L40.l_o7bf303		# 7410	[c=4]jump
.L356.l_o7bf303:
	push! -1		# 858	[c=4]movsi_push_pop
	store8! &9 	#X8
	load8! &0 	#AR	# 7151	[c=4]movdi_push_pop
	store8! &50
	load8! &10 	#X10	# 7152	[c=4]movdi_push_pop
	store8! &7 	#X6
	jump! .L357.l_o7bf303		# 7413	[c=4]jump
.L309.l_o7bf303:

	# epilogue
	set_sp! &45
	return

# FUNCTION ENDS:_vfiprintf_r


# FUNCTION BEGINS:vfiprintf
	EXPORT	vfiprintf
vfiprintf:
	# prologue (1 GPRs)
	push! 0

	load8! &4	# 9	[c=2]pushdi1_not_fp/1
	load8! &4	# 10	[c=2]pushdi1_not_fp/1
	load8! &4	# 11	[c=2]pushdi1_not_fp/1
	load8! _impure_ptr	# 12	[c=1]pushdi1_not_fp/1
	call! _vfiprintf_r		# 13	[c=0]*call_value_pop_1/0
	store8! &4

	set_sp! &3
	load4! &0 	#AR	# 18	[c=4]movsi_push_pop
	store4! &3

	# epilogue
	store8! &0 #set_sp! &1
	return

# FUNCTION ENDS:vfiprintf

	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole move+push(pushable)
	#peephole 1
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole nop+set
	#peephole pop+move2(deadreg)
	#peephole pop+move2(deadreg)
	#peephole pop+move2(deadreg)
	#peephole pop+move2(deadreg)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole redundant blockage insn
	#peephole pop+move2(deadreg)
	#peephole popdi(deadreg)+push
	#peephole and+pophi

# FUNCTION BEGINS:__sbprintf
__sbprintf.s_o7bf303:
	# prologue (4 GPRs)

	set_sp! &-155

	load8! &157	# 3	[c=2]movdi_push_pop
	store8! &3 	#X2
	load8! &2 	#X2	# 10	[c=6]movhi_to_tr_unspec/2
	add! 16	
	load2	
	#	
	and! 0xfffffffffffffffd		# 16	[c=4]*anddi3/0
	store2! &7	# 272	[c=4]movhi_from_tr_unspec/0
	load8! &2 	#X2	# 24	[c=6]movsi_to_tr_unspec/2
	add! 176	
	load4	
	#	
	store4! &27	# 210	[c=4]movsi_from_tr_unspec/0
	load8! &2 	#X2	# 29	[c=6]movhi_to_tr_unspec/2
	add! 18	
	load2	
	#	
	store2! (+ &0 58)	# 211	[c=4]movhi_from_tr_unspec/0
	load8! &2 	#X2	# 34	[c=11]movdi_to_tr_unspec/2
	add! 48	
	load8	
	#	
	store8! &11	# 212	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 39	[c=11]movdi_to_tr_unspec/2
	add! 64	
	load8	
	#	
	store8! &13	# 213	[c=4]movdi_from_tr_unspec/0
	push! &0		# 222	[c=4]movdi_to_tr_unspec/1
	add! 216		# 229	[c=4]*adddi/0
	store8! &5	# 227	[c=4]movdi_from_tr_unspec/0
	push! &0		# 238	[c=4]movdi_to_tr_unspec/1
	add! 216		# 245	[c=4]*adddi/0
	store8! &8	# 243	[c=4]movdi_from_tr_unspec/0
	push! 1024		# 54	[c=4]movsi_push_pop
	store4! (+ &0 52)
	push! 1024		# 55	[c=4]movsi_push_pop
	store4! &9
	push! 0		# 56	[c=4]movsi_push_pop
	store4! &10
	load8! &159	# 57	[c=2]pushdi1_not_fp/1
	load8! &159	# 58	[c=2]pushdi1_not_fp/1
	push! &0		# 254	[c=4]movdi_to_tr_unspec/1
	add! 48		# 261	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 263	[c=0]*peep2_pop_pusharg
	load8! &159	# 65	[c=2]pushdi1_not_fp/1
	call! _vfiprintf_r		# 66	[c=0]*call_value_pop_1/0
	store8! &4

	set_sp! &3
	load4! &0 	#AR	# 67	[c=4]movsi_push_pop
	store8! &4 	#X3
	# CBRANCH	# 68	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	add! -2147483648	
	push! 0	
	add! -2147483648	
	lt_u	
	jump_zero! .L371.l_o7bf303
	# END CBRANCH
.L361.l_o7bf303:
	load2! &6	# 186	[c=5]movhi_to_tr_unspec/1
	and! 0x40		# 86	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=2)
	and! 65535		# 270	[c=12]*peep2_cbranchhi
	# - EQ0
	jump_zero! .L360.l_o7bf303
	# END CBRANCH
	load8! &2 	#X2	# 95	[c=6]movhi_to_tr_unspec/2
	add! 16	
	load2	
	#	
	or! 0x40		# 101	[c=4]*iordi3/0
	load8! &3 	#X2	# 275	[c=4]movhi_from_tr_unspec/1
	add! 16	
	store2	
	#	
	jump! .L360.l_o7bf303		# 279	[c=4]jump
.L371.l_o7bf303:
	push! &0		# 197	[c=4]movdi_to_tr_unspec/1
	add! 32		# 204	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 206	[c=0]*peep2_pop_pusharg
	load8! &157	# 76	[c=2]pushdi1_not_fp/1
	call! _fflush_r		# 77	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH EQ0	# 79	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_zero! .L361.l_o7bf303
	# END CBRANCH
	push! -1		# 7	[c=4]movsi_push_pop
	store8! &4 	#X3
	jump! .L361.l_o7bf303		# 281	[c=4]jump
.L360.l_o7bf303:
	load4! &3 	#X3	# 117	[c=4]movsi_push_pop
	store4! &157

	# epilogue
	set_sp! &155
	return

# FUNCTION ENDS:__sbprintf

.Li_zeroes_4576.l_o7bf303:
	data1 [48]
	data1 [48]
	data1 [48]
	data1 [48]
	data1 [48]
	data1 [48]
	data1 [48]
	data1 [48]
	data1 [48]
	data1 [48]
	data1 [48]
	data1 [48]
	data1 [48]
	data1 [48]
	data1 [48]
	data1 [48]
.Li_blanks_4575.l_o7bf303:
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
	data1 [32]
#	IMPORT _fflush_r
#	IMPORT _impure_ptr
#	IMPORT strlen
#	IMPORT __sinit
#	IMPORT memchr
#	IMPORT __swsetup_r
#	IMPORT __sfvwrite_r
#	IMPORT _fputwc_r
#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: o804259
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"vsnprintf.c"
#	.text
	#peephole nop+set
	#peephole nop+set
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole 1
	#peephole 1
	#peephole nop+set
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole nop+set

# FUNCTION BEGINS:_vsnprintf_r
	EXPORT	_vsnprintf_r
_vsnprintf_r:
	# prologue (2 GPRs)

	set_sp! &-25

	load8! &27	# 3	[c=2]movdi_push_pop
	store8! &2 	#X1
	load8! &28	# 4	[c=2]movdi_push_pop
	store8! &1 	#AR
	# CBRANCH	# 11	[c=12]cbranchdi4_internal
	push! 2147483647	
	load8! &1 	#AR
	lt_u	
	not	
	jump_zero! .L10.l_o804259
	# END CBRANCH
	push! 520		# 21	[c=4]movhi_push_pop
	store2! &5
	load8! &1 	#X1	# 22	[c=4]movdi_push_pop
	store8! &3
	load8! &1 	#X1	# 23	[c=4]movdi_push_pop
	store8! &6
	# CBRANCH EQ0	# 24	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L4.l_o804259
	# END CBRANCH
	load8! &0 	#AR	# 30	[c=5]movdi_to_tr_unspec/1
	add! -1		# 32	[c=4]*adddi/0
	store8! &1 	#AR	# 33	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 169	[c=4]movsi_push_pop
	store4! (+ &0 36)
	load4! &0 	#AR	# 41	[c=4]movsi_push_pop
	store4! &7
	push! -1		# 42	[c=4]movhi_push_pop
	store2! (+ &0 42)
	load8! &30	# 43	[c=2]pushdi1_not_fp/1
	load8! &30	# 44	[c=2]pushdi1_not_fp/1
	push! &0		# 178	[c=4]movdi_to_tr_unspec/1
	add! 32		# 185	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 187	[c=0]*peep2_pop_pusharg
	load8! &29	# 51	[c=2]pushdi1_not_fp/1
	call! _svfprintf_r		# 52	[c=0]*call_value_pop_1/0
	store8! &4

	set_sp! &3
	# CBRANCH	# 54	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	add! -2147483648	
	push! 4294967295	
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L5.l_o804259
	# END CBRANCH
	push! 0		# 57	[c=3]movqi_to_tr_unspec/0
	load8! &3	# 59	[c=4]movqi_from_tr_unspec/1
	store1	
	#	
.L1.l_o804259:
	load4! &0 	#AR	# 103	[c=4]movsi_push_pop
	store4! &27
	jump! .L11.l_o804259		# 205	[c=4]jump
.L4.l_o804259:
	push! 0		# 67	[c=4]movsi_push_pop
	store4! (+ &0 36)
	push! 0		# 68	[c=4]movsi_push_pop
	store4! &7
	push! -1		# 69	[c=4]movhi_push_pop
	store2! (+ &0 42)
	load8! &30	# 70	[c=2]pushdi1_not_fp/1
	load8! &30	# 71	[c=2]pushdi1_not_fp/1
	push! &0		# 157	[c=4]movdi_to_tr_unspec/1
	add! 32		# 164	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 166	[c=0]*peep2_pop_pusharg
	load8! &29	# 78	[c=2]pushdi1_not_fp/1
	call! _svfprintf_r		# 79	[c=0]*call_value_pop_1/0
	store8! &4

	set_sp! &3
	# CBRANCH	# 81	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	add! -2147483648	
	push! 4294967295	
	add! -2147483648	
	lt_u	
	jump_zero! .L1.l_o804259
	# END CBRANCH
	push! 139		# 96	[c=3]movsi_to_tr_unspec/0
	load8! &27	# 147	[c=2]movdi_push_pop
	store8! &3 	#X1
	load8! &2 	#X1	# 98	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	load4! &0 	#AR	# 192	[c=4]movsi_push_pop
	store4! &27
	jump! .L11.l_o804259		# 207	[c=4]jump
.L5.l_o804259:
	push! 139		# 87	[c=3]movsi_to_tr_unspec/0
	load8! &27	# 148	[c=2]movdi_push_pop
	store8! &3 	#X1
	load8! &2 	#X1	# 89	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	push! 0		# 195	[c=3]movqi_to_tr_unspec/0
	load8! &3	# 197	[c=4]movqi_from_tr_unspec/1
	store1	
	#	
	jump! .L1.l_o804259		# 209	[c=4]jump
.L10.l_o804259:
	push! 139		# 13	[c=3]movsi_to_tr_unspec/0
	load8! &27	# 188	[c=2]movdi_push_pop
	store8! &2 	#AR
	load8! &1 	#AR	# 15	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	push! -1		# 8	[c=4]movsi_push_pop
	store8! &1 	#AR
	load4! &0 	#AR	# 200	[c=4]movsi_push_pop
	store4! &27
.L11.l_o804259:

	# epilogue
	set_sp! &25
	return

# FUNCTION ENDS:_vsnprintf_r


# FUNCTION BEGINS:vsnprintf
	EXPORT	vsnprintf
vsnprintf:
	# prologue (1 GPRs)
	push! 0

	load8! &5	# 10	[c=2]pushdi1_not_fp/1
	load8! &5	# 11	[c=2]pushdi1_not_fp/1
	load8! &5	# 12	[c=2]pushdi1_not_fp/1
	load8! &5	# 13	[c=2]pushdi1_not_fp/1
	load8! _impure_ptr	# 14	[c=1]pushdi1_not_fp/1
	call! _vsnprintf_r		# 15	[c=0]*call_value_pop_1/0
	store8! &5

	set_sp! &4
	load4! &0 	#AR	# 20	[c=4]movsi_push_pop
	store4! &3

	# epilogue
	store8! &0 #set_sp! &1
	return

# FUNCTION ENDS:vsnprintf

#	IMPORT _impure_ptr
#	IMPORT _svfprintf_r
#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: o77d07f
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"wbuf.c"
#	.text
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole pop+cmp
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole move
	#peephole 1
	#peephole 1
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole pop+cmp
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole and+pophi
	#peephole popdi(deadreg)+push
	#peephole and+popsi

# FUNCTION BEGINS:__swbuf_r
	EXPORT	__swbuf_r
__swbuf_r:
	# prologue (7 GPRs)

	set_sp! &-7

	load8! &8	# 2	[c=2]movdi_push_pop
	store8! &4 	#X3
	load8! &10	# 4	[c=2]movdi_push_pop
	store8! &3 	#X2
	# CBRANCH EQ0	# 10	[c=12]cbranchdi4_internal
	load8! &3 	#X3
	jump_zero! .L2.l_o77d07f
	# END CBRANCH
	load8! &3 	#X3	# 12	[c=6]movsi_to_tr_unspec/2
	add! 80	
	load4	
	#	
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 293	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L23.l_o77d07f
	# END CBRANCH
.L2.l_o77d07f:
	load8! &2 	#X2	# 22	[c=6]movsi_to_tr_unspec/2
	add! 40	
	load4	
	#	
	load8! &3 	#X2	# 28	[c=4]movsi_from_tr_unspec/1
	add! 12	
	store4	
	#	
	load8! &2 	#X2	# 30	[c=6]movhi_to_tr_unspec/2
	add! 16	
	load2	
	#	
	store8! &1 	#AR	# 32	[c=4]movhi_from_tr_unspec/0
	load8! &0 	#AR	# 34	[c=5]movdi_to_tr_unspec/1
	and! 0x8		# 36	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=2)
	and! 65535		# 320	[c=12]*peep2_cbranchhi
	# - EQ0
	jump_zero! .L3.l_o77d07f
	# END CBRANCH
	load8! &2 	#X2	# 45	[c=11]movdi_to_tr_unspec/2
	add! 24	
	load8	
	#	
	store8! &2 	#X1	# 47	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 49	[c=12]cbranchdi4_internal
	load8! &1 	#X1
	jump_zero! .L3.l_o77d07f
	# END CBRANCH
	load4! &9	# 274	[c=2]movsi_push_pop
	store8! &5 	#X4
	load1! &4 	#X4	# 288	[c=4]movqi_push_pop
	store8! &7 	#X6
	load8! &4 	#X4	# 76	[c=5]movdi_to_tr_unspec/1
	and! 0xff		# 78	[c=4]*anddi3/0
	store8! &5 	#X4	# 311	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 312	[c=5]movdi_to_tr_unspec/1
	and! 0x2000		# 87	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=2)
	and! 65535		# 316	[c=12]*peep2_cbranchhi
	# - EQ0
	jump_zero! .L24.l_o77d07f
	# END CBRANCH
.L7.l_o77d07f:
	load8! &2 	#X2	# 128	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	store8! &1 	#AR	# 130	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 132	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 134	[c=14]*subdi3/2
	sub
	store8! &2 	#X1	# 135	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 141	[c=6]movsi_to_tr_unspec/2
	add! 32	
	load4	
	#	
	store8! &6 	#X5	# 143	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 145	[c=12]cbranchsi4_internal
	load4! &1 	#X1
	add! -2147483648	
	load4! &6 	#X5
	add! -2147483648	
	lt_u	
	jump_zero! .L8.l_o77d07f
	# END CBRANCH
.L26.l_o77d07f:
	load8! &1 	#X1	# 147	[c=5]movdi_to_tr_unspec/1
	add! 1		# 149	[c=4]*adddi/0
	store8! &6 	#X5	# 303	[c=4]movsi_from_tr_unspec/0
	load8! &2 	#X2	# 173	[c=6]movsi_to_tr_unspec/2
	add! 12	
	load4	
	#	
	add! -1		# 179	[c=4]*adddi/0
	load8! &3 	#X2	# 323	[c=4]movsi_from_tr_unspec/1
	add! 12	
	store4	
	#	
	load8! &0 	#AR	# 190	[c=5]movdi_to_tr_unspec/1
	add! 1		# 192	[c=4]*adddi/0
	load8! &3 	#X2	# 197	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load1! &6 	#X6	# 199	[c=5]movqi_to_tr_unspec/1
	load8! &1 	#AR	# 201	[c=4]movqi_from_tr_unspec/1
	store1	
	#	
	load8! &2 	#X2	# 203	[c=6]movsi_to_tr_unspec/2
	add! 32	
	load4	
	#	
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 282	[c=12]*peep2_cbranchsi
	# - EQ
	load4! &6 	#X5
	xor	
	jump_zero! .L11.l_o77d07f
	# END CBRANCH
.L27.l_o77d07f:
	load8! &2 	#X2	# 209	[c=6]movhi_to_tr_unspec/2
	add! 16	
	load2	
	#	
	and! 0x1		# 215	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=2)
	and! 65535		# 297	[c=12]*peep2_cbranchhi
	# - EQ0
	jump_zero! .L1.l_o77d07f
	# END CBRANCH
	# CBRANCH EQ	# 224	[c=12]cbranchsi4_internal
	load4! &4 	#X4
	push! 10	
	xor	
	jump_zero! .L11.l_o77d07f
	# END CBRANCH
.L1.l_o77d07f:
	load4! &4 	#X4	# 237	[c=4]movsi_push_pop
	store4! &9
	jump! .L25.l_o77d07f		# 382	[c=4]jump
.L3.l_o77d07f:
	load8! &2 	#X2	# 52	[c=4]pushdi1_not_fp/1
	load8! &4 	#X3	# 53	[c=4]pushdi1_not_fp/1
	call! __swsetup_r		# 54	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH EQ0	# 56	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L10.l_o77d07f
	# END CBRANCH
	load8! &2 	#X2	# 62	[c=6]movhi_to_tr_unspec/2
	add! 16	
	load2	
	#	
	store8! &1 	#AR	# 64	[c=4]movhi_from_tr_unspec/0
	load8! &2 	#X2	# 66	[c=11]movdi_to_tr_unspec/2
	add! 24	
	load8	
	#	
	store8! &2 	#X1	# 68	[c=4]movdi_from_tr_unspec/0
	load4! &9	# 333	[c=2]movsi_push_pop
	store8! &5 	#X4
	load1! &4 	#X4	# 334	[c=4]movqi_push_pop
	store8! &7 	#X6
	load8! &4 	#X4	# 335	[c=5]movdi_to_tr_unspec/1
	and! 0xff		# 337	[c=4]*anddi3/0
	store8! &5 	#X4	# 338	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 339	[c=5]movdi_to_tr_unspec/1
	and! 0x2000		# 341	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=2)
	and! 65535		# 342	[c=12]*peep2_cbranchhi
	# - EQ0
	jump_not_zero! .L7.l_o77d07f
	# END CBRANCH
.L24.l_o77d07f:
	load8! &0 	#AR	# 96	[c=5]movdi_to_tr_unspec/1
	or! 0x2000		# 98	[c=4]*iordi3/0
	load8! &3 	#X2	# 326	[c=4]movhi_from_tr_unspec/1
	add! 16	
	store2	
	#	
	load8! &2 	#X2	# 109	[c=6]movsi_to_tr_unspec/2
	add! 176	
	load4	
	#	
	and! 0xffffffffffffdfff		# 115	[c=4]*anddi3/0
	load8! &3 	#X2	# 329	[c=4]movsi_from_tr_unspec/1
	add! 176	
	store4	
	#	
	load8! &2 	#X2	# 345	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	store8! &1 	#AR	# 347	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 348	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 350	[c=14]*subdi3/2
	sub
	store8! &2 	#X1	# 351	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 353	[c=6]movsi_to_tr_unspec/2
	add! 32	
	load4	
	#	
	store8! &6 	#X5	# 355	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 356	[c=12]cbranchsi4_internal
	load4! &1 	#X1
	add! -2147483648	
	load4! &6 	#X5
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L26.l_o77d07f
	# END CBRANCH
.L8.l_o77d07f:
	load8! &2 	#X2	# 160	[c=4]pushdi1_not_fp/1
	load8! &4 	#X3	# 161	[c=4]pushdi1_not_fp/1
	call! _fflush_r		# 162	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH EQ0	# 165	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L10.l_o77d07f
	# END CBRANCH
	load8! &2 	#X2	# 167	[c=7]movdi_to_tr_unspec/2
	load8	
	#	
	store8! &1 	#AR	# 169	[c=4]movdi_from_tr_unspec/0
	push! 1		# 6	[c=4]movsi_push_pop
	store8! &6 	#X5
	load8! &2 	#X2	# 359	[c=6]movsi_to_tr_unspec/2
	add! 12	
	load4	
	#	
	add! -1		# 361	[c=4]*adddi/0
	load8! &3 	#X2	# 362	[c=4]movsi_from_tr_unspec/1
	add! 12	
	store4	
	#	
	load8! &0 	#AR	# 363	[c=5]movdi_to_tr_unspec/1
	add! 1		# 365	[c=4]*adddi/0
	load8! &3 	#X2	# 367	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load1! &6 	#X6	# 368	[c=5]movqi_to_tr_unspec/1
	load8! &1 	#AR	# 370	[c=4]movqi_from_tr_unspec/1
	store1	
	#	
	load8! &2 	#X2	# 371	[c=6]movsi_to_tr_unspec/2
	add! 32	
	load4	
	#	
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 373	[c=12]*peep2_cbranchsi
	load4! &6 	#X5
	xor	
	push! 1	
	lt_u	
	jump_zero! .L27.l_o77d07f
	# END CBRANCH
.L11.l_o77d07f:
	load8! &2 	#X2	# 227	[c=4]pushdi1_not_fp/1
	load8! &4 	#X3	# 228	[c=4]pushdi1_not_fp/1
	call! _fflush_r		# 229	[c=0]*call_value_pop_1/0
	store8! &2

	store8! &0 #set_sp! &1
	# CBRANCH EQ0	# 231	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_zero! .L1.l_o77d07f
	# END CBRANCH
.L10.l_o77d07f:
	push! -1		# 7	[c=4]movsi_push_pop
	store8! &5 	#X4
	load4! &4 	#X4	# 376	[c=4]movsi_push_pop
	store4! &9
	jump! .L25.l_o77d07f		# 386	[c=4]jump
.L23.l_o77d07f:
	load8! &3 	#X3	# 18	[c=4]pushdi1_not_fp/1
	call! __sinit		# 19	[c=5]*call_pop_0/0
	set_sp! (+ &0 8)
	

	jump! .L2.l_o77d07f		# 388	[c=4]jump
.L25.l_o77d07f:

	# epilogue
	set_sp! &7
	return

# FUNCTION ENDS:__swbuf_r


# FUNCTION BEGINS:__swbuf
	EXPORT	__swbuf
__swbuf:
	# prologue (1 GPRs)
	push! 0

	load8! &3	# 8	[c=2]pushdi1_not_fp/1
	load4! &3	# 9	[c=2]pushsi1_not_fp/1
	load8! _impure_ptr	# 10	[c=1]pushdi1_not_fp/1
	call! __swbuf_r		# 11	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	load4! &0 	#AR	# 16	[c=4]movsi_push_pop
	store4! &3

	# epilogue
	store8! &0 #set_sp! &1
	return

# FUNCTION ENDS:__swbuf

#	IMPORT _impure_ptr
#	IMPORT __sinit
#	IMPORT _fflush_r
#	IMPORT __swsetup_r
#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: o894954
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"wcrtomb.c"
#	.text
	#peephole nop+set
	#peephole nop+set
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole move

# FUNCTION BEGINS:_wcrtomb_r
	EXPORT	_wcrtomb_r
_wcrtomb_r:
	# prologue (2 GPRs)
	push! 0
	push! 0
	push! 0
	push! 0

	load8! (+ __global_locale 224)	# 110	[c=1]movdi_push_pop
	store8! &1 	#AR
	# CBRANCH EQ0	# 15	[c=14]cbranchdi4_internal
	load8! &6
	jump_zero! .L8.l_o894954
	# END CBRANCH
	load8! &8	# 32	[c=2]pushdi1_not_fp/1
	load4! &8	# 33	[c=2]pushsi1_not_fp/1
	load8! &8	# 34	[c=2]pushdi1_not_fp/1
	load8! &8	# 35	[c=2]pushdi1_not_fp/1
	load8! &4 	#AR	# 36	[c=0]*call_value_pop_1/1
	call	
	store8! &4

	set_sp! &3
	# CBRANCH EQ	# 40	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	push! 4294967295	
	xor	
	jump_zero! .L9.l_o894954
	# END CBRANCH
.L4.l_o894954:
	load4! &0 	#AR	# 54	[c=5]movsi_to_tr_unspec/1
	sigx4		# 56	[c=6]*extendsidi2
	store8! &1 	#AR	# 57	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 64	[c=4]movdi_push_pop
	store8! &6
	jump! .L10.l_o894954		# 123	[c=4]jump
.L8.l_o894954:
	load8! &8	# 17	[c=2]pushdi1_not_fp/1
	push! 0		# 18	[c=4]pushsi1_not_fp/0
	push! &0		# 100	[c=4]movdi_to_tr_unspec/1
	add! 32		# 107	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 109	[c=0]*peep2_pop_pusharg
	load8! &8	# 25	[c=2]pushdi1_not_fp/1
	load8! &4 	#AR	# 26	[c=0]*call_value_pop_1/1
	call	
	store8! &4

	set_sp! &3
	# CBRANCH	# 114	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	push! 4294967295	
	xor	
	push! 1	
	lt_u	
	jump_zero! .L4.l_o894954
	# END CBRANCH
.L9.l_o894954:
	push! 0		# 42	[c=3]movsi_to_tr_unspec/0
	load8! &9	# 90	[c=2]movdi_push_pop
	store8! &2 	#AR
	load8! &1 	#AR	# 44	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	push! 138		# 46	[c=3]movsi_to_tr_unspec/0
	load8! &6	# 91	[c=2]movdi_push_pop
	store8! &3 	#X1
	load8! &2 	#X1	# 48	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	push! -1		# 7	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 117	[c=4]movdi_push_pop
	store8! &6
.L10.l_o894954:

	# epilogue
	set_sp! &4
	return

# FUNCTION ENDS:_wcrtomb_r

	#peephole nop+set
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole binop1+2+deadreg+binop3
	#peephole rdx1+rdx2 (+)
	#peephole rdx1+rdx2 (+)
	#peephole pop+pusharg
	#peephole move

# FUNCTION BEGINS:wcrtomb
	EXPORT	wcrtomb
wcrtomb:
	# prologue (3 GPRs)

	set_sp! &-5

	load8! _impure_ptr	# 9	[c=1]movdi_push_pop
	store8! &3 	#X2
	load8! (+ __global_locale 224)	# 106	[c=1]movdi_push_pop
	store8! &1 	#AR
	# CBRANCH EQ0	# 15	[c=14]cbranchdi4_internal
	load8! &6
	jump_zero! .L18.l_o894954
	# END CBRANCH
	load8! &8	# 32	[c=2]pushdi1_not_fp/1
	load4! &8	# 33	[c=2]pushsi1_not_fp/1
	load8! &8	# 34	[c=2]pushdi1_not_fp/1
	load8! &5 	#X2	# 35	[c=4]pushdi1_not_fp/1
	load8! &4 	#AR	# 36	[c=0]*call_value_pop_1/1
	call	
	store8! &4

	set_sp! &3
	# CBRANCH EQ	# 40	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	push! 4294967295	
	xor	
	jump_zero! .L19.l_o894954
	# END CBRANCH
.L14.l_o894954:
	load4! &0 	#AR	# 54	[c=5]movsi_to_tr_unspec/1
	sigx4		# 56	[c=6]*extendsidi2
	store8! &1 	#AR	# 57	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 64	[c=4]movdi_push_pop
	store8! &7
	jump! .L20.l_o894954		# 119	[c=4]jump
.L18.l_o894954:
	load8! &8	# 17	[c=2]pushdi1_not_fp/1
	push! 0		# 18	[c=4]pushsi1_not_fp/0
	push! &0		# 96	[c=4]movdi_to_tr_unspec/1
	add! 40		# 103	[c=4]*adddi/0
	#peep - pop(deadreg)+pusharg	# 105	[c=0]*peep2_pop_pusharg
	load8! &5 	#X2	# 25	[c=4]pushdi1_not_fp/1
	load8! &4 	#AR	# 26	[c=0]*call_value_pop_1/1
	call	
	store8! &4

	set_sp! &3
	# CBRANCH	# 110	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	push! 4294967295	
	xor	
	push! 1	
	lt_u	
	jump_zero! .L14.l_o894954
	# END CBRANCH
.L19.l_o894954:
	push! 0		# 42	[c=3]movsi_to_tr_unspec/0
	load8! &9	# 87	[c=2]movdi_push_pop
	store8! &2 	#AR
	load8! &1 	#AR	# 44	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	push! 138		# 46	[c=3]movsi_to_tr_unspec/0
	load8! &3 	#X2	# 48	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	push! -1		# 6	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 113	[c=4]movdi_push_pop
	store8! &7
.L20.l_o894954:

	# epilogue
	set_sp! &5
	return

# FUNCTION ENDS:wcrtomb

#	IMPORT _impure_ptr
#	IMPORT __global_locale
#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: oeb00bc
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"wctomb_r.c"
#	.text
	#peephole move

# FUNCTION BEGINS:_wctomb_r
	EXPORT	_wctomb_r
_wctomb_r:
	# prologue (1 GPRs)
	push! 0

	load8! (+ __global_locale 224)	# 29	[c=1]movdi_push_pop
	store8! &1 	#AR
	load8! &5	# 14	[c=2]pushdi1_not_fp/1
	load4! &5	# 15	[c=2]pushsi1_not_fp/1
	load8! &5	# 16	[c=2]pushdi1_not_fp/1
	load8! &5	# 17	[c=2]pushdi1_not_fp/1
	load8! &4 	#AR	# 18	[c=0]*call_value_pop_1/1
	call	
	store8! &4

	set_sp! &3
	load4! &0 	#AR	# 23	[c=4]movsi_push_pop
	store4! &3

	# epilogue
	store8! &0 #set_sp! &1
	return

# FUNCTION ENDS:_wctomb_r

	#peephole move+push(pushable)
	#peephole pop(deadreg)+push
	#peephole redundant blockage insn

# FUNCTION BEGINS:__ascii_wctomb
	EXPORT	__ascii_wctomb
__ascii_wctomb:
	# prologue (2 GPRs)
	push! 0
	push! 0

	load8! &4	# 3	[c=2]movdi_push_pop
	store8! &1 	#AR
	# CBRANCH EQ0	# 13	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L6.l_oeb00bc
	# END CBRANCH
	# CBRANCH	# 15	[c=14]cbranchsi4_internal
	push! 255	
	load4! &6
	lt_u	
	not	
	jump_zero! .L9.l_oeb00bc
	# END CBRANCH
	load4! &5	# 55	[c=5]movsi_to_tr_unspec/1
	load8! &1 	#AR	# 31	[c=4]movqi_from_tr_unspec/1
	store1	
	#	
	push! 1		# 7	[c=4]movsi_push_pop
	store8! &1 	#AR
	load4! &0 	#AR	# 38	[c=4]movsi_push_pop
	store4! &4
	jump! .L10.l_oeb00bc		# 70	[c=4]jump
.L9.l_oeb00bc:
	push! 138		# 17	[c=3]movsi_to_tr_unspec/0
	load8! &4	# 19	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	push! -1		# 8	[c=4]movsi_push_pop
	store8! &1 	#AR
	load4! &0 	#AR	# 62	[c=4]movsi_push_pop
	store4! &4
	jump! .L10.l_oeb00bc		# 72	[c=4]jump
.L6.l_oeb00bc:
	push! 0		# 9	[c=4]movsi_push_pop
	store8! &1 	#AR
	load4! &0 	#AR	# 65	[c=4]movsi_push_pop
	store4! &4
.L10.l_oeb00bc:

	# epilogue
	set_sp! &2
	return

# FUNCTION ENDS:__ascii_wctomb

#	IMPORT __global_locale
#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: o7b97a7
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"writer.c"
#	.text

# FUNCTION BEGINS:_write_r
	EXPORT	_write_r
_write_r:
	# prologue (2 GPRs)
	push! 0
	push! 0

	push! 0		# 9	[c=4]movsi_push_pop
	store4! errno
	load8! &6	# 10	[c=2]pushdi1_not_fp/1
	load8! &6	# 11	[c=2]pushdi1_not_fp/1
	load4! &6	# 12	[c=2]pushsi1_not_fp/1
	call! write		# 13	[c=0]*call_value_pop_1/0
	store8! &3

	set_sp! &2
	load4! &0 	#AR	# 15	[c=5]movsi_to_tr_unspec/1
	sigx4		# 17	[c=6]*extendsidi2
	store8! &1 	#AR	# 18	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ	# 20	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	push! -1	
	xor	
	jump_zero! .L8.l_o7b97a7
	# END CBRANCH
.L1.l_o7b97a7:
	load8! &0 	#AR	# 34	[c=4]movdi_push_pop
	store8! &4
	jump! .L9.l_o7b97a7		# 56	[c=4]jump
.L8.l_o7b97a7:
	load4! errno	# 22	[c=1]movsi_push_pop
	store8! &2 	#X1
	# CBRANCH EQ0	# 23	[c=12]cbranchsi4_internal
	load4! &1 	#X1
	jump_zero! .L1.l_o7b97a7
	# END CBRANCH
	load4! &1 	#X1	# 25	[c=5]movsi_to_tr_unspec/1
	load8! &4	# 27	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	load8! &0 	#AR	# 51	[c=4]movdi_push_pop
	store8! &4
.L9.l_o7b97a7:

	# epilogue
	set_sp! &2
	return

# FUNCTION ENDS:_write_r

#	IMPORT write
#	IMPORT errno
#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: odae016
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"wsetup.c"
#	.text
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole pop(deadreg)+pushdi
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole pop+cmprev
	#peephole 1
	#peephole nop+set
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole pop+cmp
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole popdi(deadreg)+push
	#peephole and+pophi
	#peephole popdi(deadreg)+push
	#peephole and+popsi
	#peephole popdi(deadreg)+push
	#peephole and+pophi

# FUNCTION BEGINS:__swsetup_r
	EXPORT	__swsetup_r
__swsetup_r:
	# prologue (4 GPRs)
	push! 0
	push! 0
	push! 0
	push! 0

	load8! &6	# 3	[c=2]movdi_push_pop
	store8! &3 	#X2
	load8! _impure_ptr	# 12	[c=1]movdi_push_pop
	store8! &1 	#AR
	# CBRANCH EQ0	# 13	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	jump_zero! .L2.l_odae016
	# END CBRANCH
	load8! &0 	#AR	# 15	[c=6]movsi_to_tr_unspec/2
	add! 80	
	load4	
	#	
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 353	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L30.l_odae016
	# END CBRANCH
.L2.l_odae016:
	load8! &2 	#X2	# 25	[c=6]movhi_to_tr_unspec/2
	add! 16	
	load2	
	#	
	store8! &1 	#AR	# 27	[c=4]movhi_from_tr_unspec/0
	load8! &0 	#AR	# 29	[c=5]movdi_to_tr_unspec/1
	and! 0x8		# 31	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=2)
	and! 65535		# 389	[c=12]*peep2_cbranchhi
	# - EQ0
	jump_zero! .L3.l_odae016
	# END CBRANCH
.L35.l_odae016:
	load8! &2 	#X2	# 40	[c=11]movdi_to_tr_unspec/2
	add! 24	
	load8	
	#	
	store8! &2 	#X1	# 42	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 165	[c=12]cbranchdi4_internal
	load8! &1 	#X1
	jump_zero! .L31.l_odae016
	# END CBRANCH
.L11.l_odae016:
	load8! &0 	#AR	# 191	[c=5]movdi_to_tr_unspec/1
	and! 0x1		# 193	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=2)
	and! 65535		# 368	[c=12]*peep2_cbranchhi
	# - EQ0
	jump_not_zero! .L32.l_odae016
	# END CBRANCH
.L12.l_odae016:
	load8! &0 	#AR	# 227	[c=5]movdi_to_tr_unspec/1
	and! 0x2		# 229	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=2)
	and! 65535		# 361	[c=12]*peep2_cbranchhi
	# - EQ0
	jump_not_zero! .L15.l_odae016
	# END CBRANCH
	load8! &2 	#X2	# 238	[c=6]movsi_to_tr_unspec/2
	add! 32	
	load4	
	#	
	store8! &1 	#AR	# 240	[c=4]movsi_from_tr_unspec/0
	load4! &0 	#AR	# 244	[c=5]movsi_to_tr_unspec/1
	load8! &3 	#X2	# 246	[c=4]movsi_from_tr_unspec/1
	add! 12	
	store4	
	#	
.L13.l_odae016:
	# CBRANCH EQ0	# 250	[c=12]cbranchdi4_internal
	load8! &1 	#X1
	jump_zero! .L33.l_odae016
	# END CBRANCH
.L16.l_odae016:
	push! 0		# 8	[c=4]movsi_push_pop
	store8! &1 	#AR
.L1.l_odae016:
	load4! &0 	#AR	# 285	[c=4]movsi_push_pop
	store4! &6
	jump! .L34.l_odae016		# 448	[c=4]jump
.L32.l_odae016:
	push! 0		# 202	[c=3]movsi_to_tr_unspec/0
	load8! &3 	#X2	# 204	[c=4]movsi_from_tr_unspec/1
	add! 12	
	store4	
	#	
	load8! &2 	#X2	# 206	[c=6]movsi_to_tr_unspec/2
	add! 32	
	load4	
	#	
	neg		# 212	[c=3]*negdi2
	load8! &3 	#X2	# 395	[c=4]movsi_from_tr_unspec/1
	add! 40	
	store4	
	#	
	# CBRANCH EQ0	# 402	[c=12]cbranchdi4_internal
	load8! &1 	#X1
	jump_not_zero! .L16.l_odae016
	# END CBRANCH
.L33.l_odae016:
	load8! &2 	#X2	# 252	[c=6]movhi_to_tr_unspec/2
	add! 16	
	load2	
	#	
	store8! &2 	#X1	# 254	[c=4]movhi_from_tr_unspec/0
	load8! &1 	#X1	# 256	[c=5]movdi_to_tr_unspec/1
	and! 0x80		# 258	[c=4]*anddi3/0
	store8! &4 	#X3	# 358	[c=4]movhi_from_tr_unspec/0
	push! 0		# 9	[c=4]movsi_push_pop
	store8! &1 	#AR
	# CBRANCH EQ0	# 265	[c=12]cbranchhi4_internal
	load2! &3 	#X3
	jump_zero! .L1.l_odae016
	# END CBRANCH
	load8! &1 	#X1	# 267	[c=5]movdi_to_tr_unspec/1
	or! 0x40		# 269	[c=4]*iordi3/0
	load8! &3 	#X2	# 392	[c=4]movhi_from_tr_unspec/1
	add! 16	
	store2	
	#	
	push! -1		# 7	[c=4]movsi_push_pop
	store8! &1 	#AR
	load4! &0 	#AR	# 405	[c=4]movsi_push_pop
	store4! &6
	jump! .L34.l_odae016		# 450	[c=4]jump
.L31.l_odae016:
	load8! &0 	#AR	# 167	[c=5]movdi_to_tr_unspec/1
	and! 0x280		# 169	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=2)
	and! 65535		# 371	[c=12]*peep2_cbranchhi
	# - EQ
	push! 512	
	xor	
	jump_zero! .L11.l_odae016
	# END CBRANCH
	load8! &2 	#X2	# 178	[c=4]pushdi1_not_fp/1
	load8! &6	# 179	[c=2]pushdi1_not_fp/1
	call! __smakebuf_r		# 180	[c=5]*call_pop_0/0
	set_sp! (+ &0 16)
	

	load8! &2 	#X2	# 181	[c=6]movhi_to_tr_unspec/2
	add! 16	
	load2	
	#	
	store8! &1 	#AR	# 183	[c=4]movhi_from_tr_unspec/0
	load8! &2 	#X2	# 185	[c=11]movdi_to_tr_unspec/2
	add! 24	
	load8	
	#	
	store8! &2 	#X1	# 187	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 408	[c=5]movdi_to_tr_unspec/1
	and! 0x1		# 410	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=2)
	and! 65535		# 411	[c=12]*peep2_cbranchhi
	# - EQ0
	jump_zero! .L12.l_odae016
	# END CBRANCH
	jump! .L32.l_odae016		# 453	[c=4]jump
.L30.l_odae016:
	load8! &0 	#AR	# 21	[c=4]pushdi1_not_fp/1
	call! __sinit		# 22	[c=5]*call_pop_0/0
	set_sp! (+ &0 8)
	

	load8! &2 	#X2	# 414	[c=6]movhi_to_tr_unspec/2
	add! 16	
	load2	
	#	
	store8! &1 	#AR	# 416	[c=4]movhi_from_tr_unspec/0
	load8! &0 	#AR	# 417	[c=5]movdi_to_tr_unspec/1
	and! 0x8		# 419	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=2)
	and! 65535		# 420	[c=12]*peep2_cbranchhi
	# - EQ0
	jump_not_zero! .L35.l_odae016
	# END CBRANCH
.L3.l_odae016:
	load8! &0 	#AR	# 48	[c=5]movdi_to_tr_unspec/1
	and! 0x10		# 50	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=2)
	and! 65535		# 386	[c=12]*peep2_cbranchhi
	# - EQ0
	jump_zero! .L36.l_odae016
	# END CBRANCH
	load8! &0 	#AR	# 80	[c=5]movdi_to_tr_unspec/1
	and! 0x4		# 82	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=2)
	and! 65535		# 380	[c=12]*peep2_cbranchhi
	# - EQ0
	jump_not_zero! .L7.l_odae016
	# END CBRANCH
	load8! &2 	#X2	# 91	[c=11]movdi_to_tr_unspec/2
	add! 24	
	load8	
	#	
	store8! &2 	#X1	# 93	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 150	[c=5]movdi_to_tr_unspec/1
	or! 0x8		# 152	[c=4]*iordi3/0
	store8! &1 	#AR	# 372	[c=4]movdi_from_tr_unspec/0
	load2! &0 	#AR	# 373	[c=5]movhi_to_tr_unspec/1
	load8! &3 	#X2	# 161	[c=4]movhi_from_tr_unspec/1
	add! 16	
	store2	
	#	
.L37.l_odae016:
	# CBRANCH EQ0	# 423	[c=12]cbranchdi4_internal
	load8! &1 	#X1
	jump_not_zero! .L11.l_odae016
	# END CBRANCH
	jump! .L31.l_odae016		# 458	[c=4]jump
.L15.l_odae016:
	push! 0		# 5	[c=4]movsi_push_pop
	store8! &1 	#AR
	load4! &0 	#AR	# 426	[c=5]movsi_to_tr_unspec/1
	load8! &3 	#X2	# 428	[c=4]movsi_from_tr_unspec/1
	add! 12	
	store4	
	#	
	jump! .L13.l_odae016		# 460	[c=4]jump
.L7.l_odae016:
	load8! &2 	#X2	# 99	[c=11]movdi_to_tr_unspec/2
	add! 88	
	load8	
	#	
	store8! &2 	#X1	# 101	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 103	[c=12]cbranchdi4_internal
	load8! &1 	#X1
	jump_zero! .L9.l_odae016
	# END CBRANCH
	load8! &2 	#X2	# 105	[c=5]movdi_to_tr_unspec/1
	add! 116		# 107	[c=4]*adddi/0
	# CBRANCH - peep (modesize=8)
	# - EQ
	load8! &2 	#X1	# 347	[c=12]*peep2_cbranchdi_reverse
	xor	
	jump_zero! .L10.l_odae016
	# END CBRANCH
	load8! &1 	#X1	# 112	[c=4]pushdi1_not_fp/1
	load8! &6	# 113	[c=2]pushdi1_not_fp/1
	call! _free_r		# 114	[c=5]*call_pop_0/0
	set_sp! (+ &0 16)
	

	load8! &2 	#X2	# 115	[c=6]movhi_to_tr_unspec/2
	add! 16	
	load2	
	#	
	store8! &1 	#AR	# 117	[c=4]movhi_from_tr_unspec/0
.L10.l_odae016:
	push! 0		# 121	[c=3]movdi_to_tr_unspec/0
	load8! &3 	#X2	# 123	[c=4]movdi_from_tr_unspec/1
	add! 88	
	store8	
	#	
.L9.l_odae016:
	load8! &0 	#AR	# 127	[c=5]movdi_to_tr_unspec/1
	and! 0xffffffffffffffdb		# 129	[c=4]*anddi3/0
	store8! &1 	#AR	# 375	[c=4]movdi_from_tr_unspec/0
	push! 0		# 376	[c=3]movsi_to_tr_unspec/0
	load8! &3 	#X2	# 138	[c=4]movsi_from_tr_unspec/1
	add! 8	
	store4	
	#	
	load8! &2 	#X2	# 140	[c=11]movdi_to_tr_unspec/2
	add! 24	
	load8	
	#	
	store8! &2 	#X1	# 142	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 144	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 146	[c=4]movdi_from_tr_unspec/1
	store8	
	#	
	load8! &0 	#AR	# 431	[c=5]movdi_to_tr_unspec/1
	or! 0x8		# 433	[c=4]*iordi3/0
	store8! &1 	#AR	# 434	[c=4]movdi_from_tr_unspec/0
	load2! &0 	#AR	# 435	[c=5]movhi_to_tr_unspec/1
	load8! &3 	#X2	# 437	[c=4]movhi_from_tr_unspec/1
	add! 16	
	store2	
	#	
	jump! .L37.l_odae016		# 463	[c=4]jump
.L36.l_odae016:
	push! 9		# 59	[c=3]movsi_to_tr_unspec/0
	load8! &6	# 349	[c=2]movdi_push_pop
	store8! &3 	#X1
	load8! &2 	#X1	# 61	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	load8! &0 	#AR	# 63	[c=5]movdi_to_tr_unspec/1
	or! 0x40		# 65	[c=4]*iordi3/0
	load8! &3 	#X2	# 398	[c=4]movhi_from_tr_unspec/1
	add! 16	
	store2	
	#	
	push! -1		# 6	[c=4]movsi_push_pop
	store8! &1 	#AR
	load4! &0 	#AR	# 440	[c=4]movsi_push_pop
	store4! &6
.L34.l_odae016:

	# epilogue
	set_sp! &4
	return

# FUNCTION ENDS:__swsetup_r

#	IMPORT _free_r
#	IMPORT __sinit
#	IMPORT __smakebuf_r
#	IMPORT _impure_ptr
#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: o5807e2
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"lseek.c"
#	.text

# FUNCTION BEGINS:lseek
	EXPORT	lseek
lseek:
	# prologue (1 GPRs)
	push! 0

	# variadic *call_value
	call! __errno		# 8	[c=5]*call_value/0

	push! 29		# 10	[c=3]movsi_to_tr_unspec/0
	load8! &1 	#AR	# 12	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	push! -1		# 18	[c=4]movdi_push_pop
	store8! &3

	# epilogue
	store8! &0 #set_sp! &1
	return

# FUNCTION ENDS:lseek


# FUNCTION BEGINS:fcntl
	EXPORT	fcntl
fcntl:
	# prologue (1 GPRs)
	push! 0

	# variadic *call_value
	call! __errno		# 7	[c=5]*call_value/0

	push! 22		# 9	[c=3]movsi_to_tr_unspec/0
	load8! &1 	#AR	# 11	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	push! -1		# 17	[c=4]movsi_push_pop
	store4! &3

	# epilogue
	store8! &0 #set_sp! &1
	return

# FUNCTION ENDS:fcntl

#	IMPORT __errno
#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: o386024
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"muldf3.c"
#	.text
	#peephole zero_extend
	#peephole binop1+deadreg+binop2
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole binop1+2
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole binop1+2
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole binop1+2
	#peephole move_dead
	#peephole move+move(allmodes x allmodes)
	#peephole move_dead
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole nop+set
	#peephole 1
	#peephole zero_extend
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole zero_extend
	#peephole move_dead
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole zero_extend
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole 1
	#peephole zero_extend
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole zero_extend
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole move_dead
	#peephole move_dead
	#peephole move_dead
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole 1
	#peephole nop+set
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move_dead
	#peephole move+push(pushable)
	#peephole pop+push+commut(di)
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole nop+set
	#peephole zero_extend
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole nop+set
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole nop+set
	#peephole 1
	#peephole 1
	#peephole nop+set
	#peephole zero_extend
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole nop+set
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole 1
	#peephole move_dead
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move_dead
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole move_dead
	#peephole 1
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole 1
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole move_dead
	#peephole 1
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole zero_extend
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole move_dead
	#peephole zero_extend
	#peephole pop+pusharg
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole pop+pusharg
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole move_dead
	#peephole move_dead
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move_dead
	#peephole zero_extend
	#peephole 1
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole move
	#peephole move
	#peephole move+push(pushable)
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole move_dead
	#peephole 1
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole zero_extend
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole move_dead
	#peephole zero_extend
	#peephole pop+pusharg
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole pop+pusharg
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole move_dead
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move_dead
	#peephole zero_extend
	#peephole 1
	#peephole move_dead
	#peephole move
	#peephole move
	#peephole move+push(pushable)
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole pop+move2(deadreg)
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+push+pop+push
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+cmp
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move2(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+push+pop+push
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+push+pop+push
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+commut(di)
	#peephole pop+block+push+commut(di)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+commut(di)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+commut(di)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole redundant blockage insn
	#peephole popdi(deadreg)+push
	#peephole redundant blockage insn
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push

# FUNCTION BEGINS:__muldf3
	EXPORT	__muldf3
__muldf3:
	# prologue (16 GPRs)

	set_sp! &-17

	load8! &18	# 3935	[c=2]movdi_push_pop
	store8! &1 	#AR
	load8! &18	# 3937	[c=5]movdi_to_tr_unspec/1
	store8! &3 	#X2	# 82	[c=4]movsi_from_tr_unspec/0
	load8! &0 	#AR	# 84	[c=5]movdi_to_tr_unspec/1
	shift_ru! 32	# 86	[c=40]*lshrdi3/0
	and! 0xfffff		# 95	[c=4]*anddi3/0
	store8! &5 	#X4	# 4450	[c=4]movsi_from_tr_unspec/0
	load4! &4 	#X4	# 102	[c=4]movsi_push_pop
	store8! &7 	#X6
	load8! &0 	#AR	# 103	[c=5]movdi_to_tr_unspec/1
	shift_ru! 52	# 105	[c=40]*lshrdi3/0
	and! 0x7ff		# 114	[c=4]*anddi3/0
	store8! &2 	#X1	# 4455	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 4456	[c=5]movdi_to_tr_unspec/1
	shift_ru! 63	# 123	[c=40]*lshrdi3/0
	store8! &10 	#X9	# 4459	[c=4]movqi_from_tr_unspec/0
	# CBRANCH EQ0	# 130	[c=12]cbranchhi4_internal
	load2! &1 	#X1
	jump_zero! .L2.l_o386024
	# END CBRANCH
	# CBRANCH EQ	# 132	[c=12]cbranchhi4_internal
	load2! &1 	#X1
	push! 2047	
	xor	
	jump_zero! .L3.l_o386024
	# END CBRANCH
	load8! &6 	#X6	# 134	[c=5]movdi_to_tr_unspec/1
	shift_l! 3	# 136	[c=8]*ashldi3/0
	store8! &4 	#X3	# 4429	[c=4]movsi_from_tr_unspec/0
	load4! &2 	#X2	# 3921	[c=5]movsi_to_tr_unspec/1
	shift_ru! 29	# 3923	[c=40]*lshrdi3/0
	store8! &1 	#AR	# 4570	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 4571	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 163	[c=6]*iordi3/2
	or
	or! 0x800000		# 172	[c=4]*iordi3/0
	store8! &7 	#X6	# 4436	[c=4]movsi_from_tr_unspec/0
	load8! &2 	#X2	# 179	[c=5]movdi_to_tr_unspec/1
	shift_l! 3	# 181	[c=8]*ashldi3/0
	store8! &4 	#X3	# 4438	[c=4]movsi_from_tr_unspec/0
	load2! &1 	#X1	# 3930	[c=5]movhi_to_tr_unspec/1
	add! -1023		# 199	[c=4]*adddi/0
	store8! &3 	#X2	# 4444	[c=4]movsi_from_tr_unspec/0
	push! 0		# 7	[c=4]movsi_push_pop
	store8! &5 	#X4
	push! 0		# 8	[c=4]movsi_push_pop
	store8! &8 	#X7
.L4.l_o386024:
	load8! &19	# 3833	[c=2]movdi_push_pop
	store8! &1 	#AR
	load8! &19	# 3835	[c=5]movdi_to_tr_unspec/1
	store8! &9 	#X8	# 460	[c=4]movsi_from_tr_unspec/0
	load8! &0 	#AR	# 462	[c=5]movdi_to_tr_unspec/1
	shift_ru! 32	# 464	[c=40]*lshrdi3/0
	and! 0xfffff		# 473	[c=4]*anddi3/0
	store8! &11 	#X10	# 4374	[c=4]movsi_from_tr_unspec/0
	load4! &10 	#X10	# 480	[c=4]movsi_push_pop
	store8! &6 	#X5
	load8! &0 	#AR	# 481	[c=5]movdi_to_tr_unspec/1
	shift_ru! 52	# 483	[c=40]*lshrdi3/0
	and! 0x7ff		# 492	[c=4]*anddi3/0
	store8! &2 	#X1	# 4379	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 4380	[c=5]movdi_to_tr_unspec/1
	shift_ru! 63	# 501	[c=40]*lshrdi3/0
	store8! &13 	#X12	# 4383	[c=4]movqi_from_tr_unspec/0
	# CBRANCH EQ0	# 508	[c=12]cbranchhi4_internal
	load2! &1 	#X1
	jump_zero! .L9.l_o386024
	# END CBRANCH
	# CBRANCH EQ	# 510	[c=12]cbranchhi4_internal
	load2! &1 	#X1
	push! 2047	
	xor	
	jump_zero! .L10.l_o386024
	# END CBRANCH
	load8! &5 	#X5	# 512	[c=5]movdi_to_tr_unspec/1
	shift_l! 3	# 514	[c=8]*ashldi3/0
	store8! &6 	#X5	# 4350	[c=4]movsi_from_tr_unspec/0
	load4! &8 	#X8	# 3814	[c=5]movsi_to_tr_unspec/1
	shift_ru! 29	# 3816	[c=40]*lshrdi3/0
	store8! &1 	#AR	# 4564	[c=4]movdi_from_tr_unspec/0
	load8! &5 	#X5	# 4565	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 541	[c=6]*iordi3/2
	or
	or! 0x800000		# 550	[c=4]*iordi3/0
	store8! &6 	#X5	# 4357	[c=4]movsi_from_tr_unspec/0
	load8! &8 	#X8	# 557	[c=5]movdi_to_tr_unspec/1
	shift_l! 3	# 559	[c=8]*ashldi3/0
	store8! &12 	#X11	# 4359	[c=4]movsi_from_tr_unspec/0
	load2! &1 	#X1	# 3823	[c=5]movhi_to_tr_unspec/1
	add! -1023		# 577	[c=4]*adddi/0
	load8! &3 	#X2	# 3831	[c=6]*adddi/2
	add
	store8! &3 	#X2	# 4368	[c=4]movsi_from_tr_unspec/0
	push! 0		# 25	[c=4]movsi_push_pop
	store8! &9 	#X8
.L11.l_o386024:
	load8! &12 	#X12	# 3721	[c=5]movdi_to_tr_unspec/1
	load8! &10 	#X9	# 3723	[c=6]*xordi3/2
	xor
	store8! &1 	#AR	# 4290	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 4291	[c=5]movdi_to_tr_unspec/1
	add! 1		# 913	[c=4]*adddi/0
	store8! &2 	#X1	# 914	[c=4]movdi_from_tr_unspec/0
	#CASESI		# 920	[c=43]casesi_internal
	push! 14	
	load4! &5 	#X4
	sigx4	
	add! -1	
	lt_u	
	not	
	jump_zero! .L18.l_o386024
	load4! &4 	#X4
	sigx4	
	add! -1	
	mult! 8	
	add! .L20.l_o386024	
	load8	
	jump	
	##	
.L20.l_o386024:
	data8 [.L25.l_o386024]#casesi entry
	data8 [.L25.l_o386024]#casesi entry
	data8 [.L22.l_o386024]#casesi entry
	data8 [.L23.l_o386024]#casesi entry
	data8 [.L23.l_o386024]#casesi entry
	data8 [.L55.l_o386024]#casesi entry
	data8 [.L22.l_o386024]#casesi entry
	data8 [.L23.l_o386024]#casesi entry
	data8 [.L55.l_o386024]#casesi entry
	data8 [.L23.l_o386024]#casesi entry
	data8 [.L22.l_o386024]#casesi entry
	data8 [.L21.l_o386024]#casesi entry
	data8 [.L21.l_o386024]#casesi entry
	data8 [.L21.l_o386024]#casesi entry
	data8 [.L19.l_o386024]#casesi entry
.L10.l_o386024:
	load8! &5 	#X5	# 3729	[c=5]movdi_to_tr_unspec/1
	load8! &9 	#X8	# 3731	[c=6]*iordi3/2
	or
	store8! &12 	#X11	# 4298	[c=4]movsi_from_tr_unspec/0
	load8! &2 	#X2	# 863	[c=5]movdi_to_tr_unspec/1
	add! 2047		# 865	[c=4]*adddi/0
	store8! &3 	#X2	# 4300	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ0	# 872	[c=12]cbranchsi4_internal
	load4! &11 	#X11
	jump_not_zero! .L84.l_o386024
	# END CBRANCH
	load8! &4 	#X4	# 887	[c=5]movdi_to_tr_unspec/1
	or! 0x2		# 889	[c=4]*iordi3/0
	store8! &5 	#X4	# 4294	[c=4]movsi_from_tr_unspec/0
	push! 0		# 29	[c=4]movsi_push_pop
	store8! &6 	#X5
	push! 2		# 30	[c=4]movsi_push_pop
	store8! &9 	#X8
	jump! .L11.l_o386024		# 4927	[c=4]jump
.L22.l_o386024:
	load1! &12 	#X12	# 33	[c=4]movqi_push_pop
	store8! &1 	#AR
	load4! &5 	#X5	# 34	[c=4]movsi_push_pop
	store8! &7 	#X6
	load4! &11 	#X11	# 35	[c=4]movsi_push_pop
	store8! &4 	#X3
	load4! &8 	#X8	# 36	[c=4]movsi_push_pop
	store8! &8 	#X7
.L23.l_o386024:
	# CBRANCH EQ	# 2194	[c=12]cbranchsi4_internal
	load4! &7 	#X7
	push! 2	
	xor	
	jump_zero! .L57.l_o386024
	# END CBRANCH
	# CBRANCH EQ	# 2196	[c=12]cbranchsi4_internal
	load4! &7 	#X7
	push! 3	
	xor	
	jump_zero! .L39.l_o386024
	# END CBRANCH
	# CBRANCH	# 2198	[c=12]cbranchsi4_internal
	load4! &7 	#X7
	push! 1	
	xor	
	push! 1	
	lt_u	
	jump_zero! .L36.l_o386024
	# END CBRANCH
	push! 0		# 56	[c=4]movhi_push_pop
	store8! &3 	#X2
	push! 0		# 57	[c=4]movsi_push_pop
	store8! &5 	#X4
	push! 0		# 58	[c=4]movsi_push_pop
	store8! &4 	#X3
	load4! &3 	#X3	# 3159	[c=5]movsi_to_tr_unspec/1
	store8! &4 	#X3	# 3161	[c=4]movdi_from_tr_unspec/0
	push! 0		# 3162	[c=3]movdi_to_tr_unspec/0
	and! 0xffffffff00000000		# 3164	[c=4]*anddi3/0
	load8! &4 	#X3	# 3165	[c=6]*iordi3/2
	or
	store8! &2 	#X1	# 3166	[c=4]movdi_from_tr_unspec/0
	load4! &4 	#X4	# 3170	[c=5]movsi_to_tr_unspec/1
	and! 0xfffff		# 3172	[c=4]*anddi3/0
	shift_l! 32	# 2848	[c=8]*ashldi3/0
	store8! &4 	#X3	# 2849	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 3175	[c=5]movdi_to_tr_unspec/1
	and! 0xfff00000ffffffff		# 3177	[c=4]*anddi3/0
	load8! &4 	#X3	# 3178	[c=6]*iordi3/2
	or
	store8! &2 	#X1	# 3179	[c=4]movdi_from_tr_unspec/0
	load2! &2 	#X2	# 3183	[c=5]movhi_to_tr_unspec/1
	and! 0x7ff		# 3185	[c=4]*anddi3/0
	shift_l! 52	# 2874	[c=8]*ashldi3/0
	store8! &3 	#X2	# 2875	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 3188	[c=5]movdi_to_tr_unspec/1
	and! 0x800fffffffffffff		# 3190	[c=4]*anddi3/0
	load8! &3 	#X2	# 3191	[c=6]*iordi3/2
	or
	store8! &2 	#X1	# 3192	[c=4]movdi_from_tr_unspec/0
	load1! &0 	#AR	# 3196	[c=5]movqi_to_tr_unspec/1
	shift_l! 63	# 3198	[c=8]*ashldi3/0
	store8! &1 	#AR	# 3199	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 3200	[c=5]movdi_to_tr_unspec/1
	and! 0x7fffffffffffffff		# 3202	[c=4]*anddi3/0
	load8! &1 	#AR	# 3203	[c=6]*iordi3/2
	or
	store8! &19	# 3944	[c=4]movdf_from_tr_unspec/0
	jump! .L85.l_o386024		# 4930	[c=4]jump
.L9.l_o386024:
	load8! &5 	#X5	# 3806	[c=5]movdi_to_tr_unspec/1
	load8! &9 	#X8	# 3808	[c=6]*iordi3/2
	or
	store8! &12 	#X11	# 4348	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ0	# 614	[c=12]cbranchsi4_internal
	load4! &11 	#X11
	jump_zero! .L86.l_o386024
	# END CBRANCH
	# CBRANCH EQ0	# 629	[c=12]cbranchsi4_internal
	load4! &10 	#X10
	jump_zero! .L13.l_o386024
	# END CBRANCH
	load4! &10 	#X10	# 3790	[c=5]movsi_to_tr_unspec/1
	#peep - pop(deadreg)+pusharg	# 3794	[c=0]*peep2_pop_pusharg
	call! __clzdi2		# 637	[c=0]*call_value_pop_1/0
	store8! &1

	load4! &0 	#AR	# 3798	[c=5]movsi_to_tr_unspec/1
	add! -32		# 3800	[c=4]*adddi/0
	store8! &1 	#AR	# 4340	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 4341	[c=5]movdi_to_tr_unspec/1
	add! -11		# 655	[c=4]*adddi/0
	store8! &6 	#X5	# 4344	[c=4]movsi_from_tr_unspec/0
.L14.l_o386024:
	load8! &0 	#AR	# 709	[c=5]movdi_to_tr_unspec/1
	add! -8		# 711	[c=4]*adddi/0
	store8! &2 	#X1	# 4311	[c=4]movdi_from_tr_unspec/0
	load4! &1 	#X1	# 4312	[c=5]movsi_to_tr_unspec/1
	pow2		# 3752	[c=4]*pow_tr
	load8! &11 	#X10	# 3753	[c=6]*muldi3/2
	mult
	store8! &12 	#X11	# 4316	[c=4]movsi_from_tr_unspec/0
	push! 29		# 4317	[c=3]movdi_to_tr_unspec/0
	load8! &6 	#X5	# 738	[c=14]*subdi3/2
	sub
	store8! &6 	#X5	# 4319	[c=4]movdi_from_tr_unspec/0
	load4! &8 	#X8	# 4320	[c=5]movsi_to_tr_unspec/1
	load4! &6 	#X5	# 4322	[c=5]movsi_to_tr_unspec/1
	store8! &7 	#X5	# 4324	[c=4]movdi_from_tr_unspec/0
	load8! &6 	#X5	# 757	[c=42]*lshrdi3/2
	shift_ru
	load8! &12 	#X11	# 3767	[c=6]*iordi3/2
	or
	store8! &6 	#X5	# 4328	[c=4]movdi_from_tr_unspec/0
	load4! &1 	#X1	# 4329	[c=5]movsi_to_tr_unspec/1
	pow2		# 3772	[c=4]*pow_tr
	load8! &9 	#X8	# 3773	[c=6]*muldi3/2
	mult
	store8! &12 	#X11	# 4332	[c=4]movsi_from_tr_unspec/0
	push! -1011		# 824	[c=3]movdi_to_tr_unspec/0
	load8! &1 	#AR	# 826	[c=14]*subdi3/2
	sub
	load8! &3 	#X2	# 3739	[c=6]*adddi/2
	add
	store8! &3 	#X2	# 4305	[c=4]movsi_from_tr_unspec/0
	push! 0		# 26	[c=4]movsi_push_pop
	store8! &9 	#X8
	jump! .L11.l_o386024		# 4933	[c=4]jump
.L2.l_o386024:
	load8! &2 	#X2	# 3913	[c=5]movdi_to_tr_unspec/1
	load8! &5 	#X4	# 3915	[c=6]*iordi3/2
	or
	store8! &4 	#X3	# 4427	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ0	# 223	[c=12]cbranchsi4_internal
	load4! &3 	#X3
	jump_zero! .L53.l_o386024
	# END CBRANCH
	# CBRANCH EQ0	# 225	[c=12]cbranchsi4_internal
	load4! &4 	#X4
	jump_zero! .L5.l_o386024
	# END CBRANCH
	load4! &4 	#X4	# 3898	[c=5]movsi_to_tr_unspec/1
	#peep - pop(deadreg)+pusharg	# 3902	[c=0]*peep2_pop_pusharg
	call! __clzdi2		# 233	[c=0]*call_value_pop_1/0
	store8! &1

	load4! &0 	#AR	# 3906	[c=5]movsi_to_tr_unspec/1
	add! -32		# 3908	[c=4]*adddi/0
	store8! &1 	#AR	# 4421	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 4422	[c=5]movdi_to_tr_unspec/1
	add! -11		# 251	[c=4]*adddi/0
	store8! &4 	#X3	# 4425	[c=4]movsi_from_tr_unspec/0
.L6.l_o386024:
	load8! &0 	#AR	# 305	[c=5]movdi_to_tr_unspec/1
	add! -8		# 307	[c=4]*adddi/0
	store8! &2 	#X1	# 4393	[c=4]movdi_from_tr_unspec/0
	load4! &1 	#X1	# 4394	[c=5]movsi_to_tr_unspec/1
	pow2		# 3860	[c=4]*pow_tr
	load8! &5 	#X4	# 3861	[c=6]*muldi3/2
	mult
	store8! &6 	#X5	# 4398	[c=4]movsi_from_tr_unspec/0
	push! 29		# 4399	[c=3]movdi_to_tr_unspec/0
	load8! &4 	#X3	# 334	[c=14]*subdi3/2
	sub
	store8! &4 	#X3	# 4401	[c=4]movdi_from_tr_unspec/0
	load4! &2 	#X2	# 4402	[c=5]movsi_to_tr_unspec/1
	load4! &4 	#X3	# 4404	[c=5]movsi_to_tr_unspec/1
	store8! &5 	#X3	# 4406	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X3	# 353	[c=42]*lshrdi3/2
	shift_ru
	load8! &6 	#X5	# 3875	[c=6]*iordi3/2
	or
	store8! &7 	#X6	# 4411	[c=4]movsi_from_tr_unspec/0
	load4! &1 	#X1	# 3877	[c=5]movsi_to_tr_unspec/1
	pow2		# 3880	[c=4]*pow_tr
	load8! &3 	#X2	# 3881	[c=6]*muldi3/2
	mult
	store8! &4 	#X3	# 4413	[c=4]movsi_from_tr_unspec/0
	push! -1011		# 420	[c=3]movdi_to_tr_unspec/0
	load8! &1 	#AR	# 422	[c=14]*subdi3/2
	sub
	store8! &3 	#X2	# 4387	[c=4]movsi_from_tr_unspec/0
	push! 0		# 9	[c=4]movsi_push_pop
	store8! &5 	#X4
	push! 0		# 10	[c=4]movsi_push_pop
	store8! &8 	#X7
	jump! .L4.l_o386024		# 4935	[c=4]jump
.L3.l_o386024:
	load8! &2 	#X2	# 3843	[c=5]movdi_to_tr_unspec/1
	load8! &7 	#X6	# 3845	[c=6]*iordi3/2
	or
	store8! &4 	#X3	# 4385	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ0	# 446	[c=12]cbranchsi4_internal
	load4! &3 	#X3
	jump_not_zero! .L87.l_o386024
	# END CBRANCH
	push! 0		# 15	[c=4]movsi_push_pop
	store8! &7 	#X6
	push! 8		# 16	[c=4]movsi_push_pop
	store8! &5 	#X4
	push! 2047		# 17	[c=4]movsi_push_pop
	store8! &3 	#X2
	push! 2		# 18	[c=4]movsi_push_pop
	store8! &8 	#X7
	jump! .L4.l_o386024		# 4938	[c=4]jump
.L57.l_o386024:
	push! 2047		# 59	[c=4]movhi_push_pop
	store8! &3 	#X2
	push! 0		# 60	[c=4]movsi_push_pop
	store8! &5 	#X4
	push! 0		# 61	[c=4]movsi_push_pop
	store8! &4 	#X3
	load4! &3 	#X3	# 4597	[c=5]movsi_to_tr_unspec/1
	store8! &4 	#X3	# 4599	[c=4]movdi_from_tr_unspec/0
	push! 0		# 4600	[c=3]movdi_to_tr_unspec/0
	and! 0xffffffff00000000		# 4602	[c=4]*anddi3/0
	load8! &4 	#X3	# 4603	[c=6]*iordi3/2
	or
	store8! &2 	#X1	# 4604	[c=4]movdi_from_tr_unspec/0
	load4! &4 	#X4	# 4605	[c=5]movsi_to_tr_unspec/1
	and! 0xfffff		# 4607	[c=4]*anddi3/0
	shift_l! 32	# 4609	[c=8]*ashldi3/0
	store8! &4 	#X3	# 4610	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 4611	[c=5]movdi_to_tr_unspec/1
	and! 0xfff00000ffffffff		# 4613	[c=4]*anddi3/0
	load8! &4 	#X3	# 4614	[c=6]*iordi3/2
	or
	store8! &2 	#X1	# 4615	[c=4]movdi_from_tr_unspec/0
	load2! &2 	#X2	# 4616	[c=5]movhi_to_tr_unspec/1
	and! 0x7ff		# 4618	[c=4]*anddi3/0
	shift_l! 52	# 4620	[c=8]*ashldi3/0
	store8! &3 	#X2	# 4621	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 4622	[c=5]movdi_to_tr_unspec/1
	and! 0x800fffffffffffff		# 4624	[c=4]*anddi3/0
	load8! &3 	#X2	# 4625	[c=6]*iordi3/2
	or
	store8! &2 	#X1	# 4626	[c=4]movdi_from_tr_unspec/0
	load1! &0 	#AR	# 4627	[c=5]movqi_to_tr_unspec/1
	shift_l! 63	# 4629	[c=8]*ashldi3/0
	store8! &1 	#AR	# 4630	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 4631	[c=5]movdi_to_tr_unspec/1
	and! 0x7fffffffffffffff		# 4633	[c=4]*anddi3/0
	load8! &1 	#AR	# 4634	[c=6]*iordi3/2
	or
	store8! &19	# 4635	[c=4]movdf_from_tr_unspec/0
	jump! .L85.l_o386024		# 4940	[c=4]jump
.L87.l_o386024:
	load4! &2 	#X2	# 19	[c=4]movsi_push_pop
	store8! &4 	#X3
	push! 12		# 20	[c=4]movsi_push_pop
	store8! &5 	#X4
	push! 2047		# 21	[c=4]movsi_push_pop
	store8! &3 	#X2
	push! 3		# 22	[c=4]movsi_push_pop
	store8! &8 	#X7
	jump! .L4.l_o386024		# 4942	[c=4]jump
.L53.l_o386024:
	push! 0		# 11	[c=4]movsi_push_pop
	store8! &7 	#X6
	push! 4		# 12	[c=4]movsi_push_pop
	store8! &5 	#X4
	push! 0		# 13	[c=4]movsi_push_pop
	store8! &3 	#X2
	push! 1		# 14	[c=4]movsi_push_pop
	store8! &8 	#X7
	jump! .L4.l_o386024		# 4944	[c=4]jump
.L86.l_o386024:
	load8! &4 	#X4	# 616	[c=5]movdi_to_tr_unspec/1
	or! 0x1		# 618	[c=4]*iordi3/0
	store8! &5 	#X4	# 4346	[c=4]movsi_from_tr_unspec/0
	push! 0		# 27	[c=4]movsi_push_pop
	store8! &6 	#X5
	push! 1		# 28	[c=4]movsi_push_pop
	store8! &9 	#X8
	jump! .L11.l_o386024		# 4946	[c=4]jump
.L55.l_o386024:
	push! 0		# 50	[c=4]movqi_push_pop
	store8! &1 	#AR
	push! 1048575		# 51	[c=4]movsi_push_pop
	store8! &5 	#X4
	push! -1		# 52	[c=4]movsi_push_pop
	store8! &4 	#X3
	push! 2047		# 62	[c=4]movhi_push_pop
	store8! &3 	#X2
.L88.l_o386024:
	load4! &3 	#X3	# 4638	[c=5]movsi_to_tr_unspec/1
	store8! &4 	#X3	# 4640	[c=4]movdi_from_tr_unspec/0
	push! 0		# 4641	[c=3]movdi_to_tr_unspec/0
	and! 0xffffffff00000000		# 4643	[c=4]*anddi3/0
	load8! &4 	#X3	# 4644	[c=6]*iordi3/2
	or
	store8! &2 	#X1	# 4645	[c=4]movdi_from_tr_unspec/0
	load4! &4 	#X4	# 4646	[c=5]movsi_to_tr_unspec/1
	and! 0xfffff		# 4648	[c=4]*anddi3/0
	shift_l! 32	# 4650	[c=8]*ashldi3/0
	store8! &4 	#X3	# 4651	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 4652	[c=5]movdi_to_tr_unspec/1
	and! 0xfff00000ffffffff		# 4654	[c=4]*anddi3/0
	load8! &4 	#X3	# 4655	[c=6]*iordi3/2
	or
	store8! &2 	#X1	# 4656	[c=4]movdi_from_tr_unspec/0
	load2! &2 	#X2	# 4657	[c=5]movhi_to_tr_unspec/1
	and! 0x7ff		# 4659	[c=4]*anddi3/0
	shift_l! 52	# 4661	[c=8]*ashldi3/0
	store8! &3 	#X2	# 4662	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 4663	[c=5]movdi_to_tr_unspec/1
	and! 0x800fffffffffffff		# 4665	[c=4]*anddi3/0
	load8! &3 	#X2	# 4666	[c=6]*iordi3/2
	or
	store8! &2 	#X1	# 4667	[c=4]movdi_from_tr_unspec/0
	load1! &0 	#AR	# 4668	[c=5]movqi_to_tr_unspec/1
	shift_l! 63	# 4670	[c=8]*ashldi3/0
	store8! &1 	#AR	# 4671	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 4672	[c=5]movdi_to_tr_unspec/1
	and! 0x7fffffffffffffff		# 4674	[c=4]*anddi3/0
	load8! &1 	#AR	# 4675	[c=6]*iordi3/2
	or
	store8! &19	# 4676	[c=4]movdf_from_tr_unspec/0
	jump! .L85.l_o386024		# 4948	[c=4]jump
.L84.l_o386024:
	load8! &4 	#X4	# 874	[c=5]movdi_to_tr_unspec/1
	or! 0x3		# 876	[c=4]*iordi3/0
	store8! &5 	#X4	# 4296	[c=4]movsi_from_tr_unspec/0
	load4! &8 	#X8	# 31	[c=4]movsi_push_pop
	store8! &12 	#X11
	push! 3		# 32	[c=4]movsi_push_pop
	store8! &9 	#X8
	jump! .L11.l_o386024		# 4950	[c=4]jump
.L21.l_o386024:
	load1! &9 	#X9	# 37	[c=4]movqi_push_pop
	store8! &1 	#AR
	jump! .L23.l_o386024		# 4952	[c=4]jump
.L19.l_o386024:
	load8! &6 	#X6	# 2122	[c=5]movdi_to_tr_unspec/1
	and! 0x80000		# 2124	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 4086	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L37.l_o386024
	# END CBRANCH
	load8! &5 	#X5	# 2133	[c=5]movdi_to_tr_unspec/1
	and! 0x80000		# 2135	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 4083	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L37.l_o386024
	# END CBRANCH
	load8! &5 	#X5	# 2144	[c=5]movdi_to_tr_unspec/1
	or! 0x80000		# 2146	[c=4]*iordi3/0
	and! 0xfffff		# 2155	[c=4]*anddi3/0
	store8! &5 	#X4	# 4080	[c=4]movsi_from_tr_unspec/0
	load1! &12 	#X12	# 47	[c=4]movqi_push_pop
	store8! &1 	#AR
	load4! &11 	#X11	# 48	[c=4]movsi_push_pop
	store8! &4 	#X3
	push! 2047		# 4679	[c=4]movhi_push_pop
	store8! &3 	#X2
	jump! .L88.l_o386024		# 4955	[c=4]jump
.L25.l_o386024:
	load4! &5 	#X5	# 38	[c=4]movsi_push_pop
	store8! &7 	#X6
	load4! &11 	#X11	# 39	[c=4]movsi_push_pop
	store8! &4 	#X3
	load4! &8 	#X8	# 40	[c=4]movsi_push_pop
	store8! &8 	#X7
	jump! .L23.l_o386024		# 4957	[c=4]jump
.L37.l_o386024:
	load8! &6 	#X6	# 2166	[c=5]movdi_to_tr_unspec/1
	or! 0x80000		# 2168	[c=4]*iordi3/0
	and! 0xfffff		# 2177	[c=4]*anddi3/0
	store8! &5 	#X4	# 4074	[c=4]movsi_from_tr_unspec/0
	load1! &9 	#X9	# 49	[c=4]movqi_push_pop
	store8! &1 	#AR
	push! 2047		# 4682	[c=4]movhi_push_pop
	store8! &3 	#X2
	jump! .L88.l_o386024		# 4959	[c=4]jump
.L18.l_o386024:
	load4! &3 	#X3	# 3673	[c=5]movsi_to_tr_unspec/1
	shift_ru! 16	# 3675	[c=40]*lshrdi3/0
	store8! &11 	#X10	# 4270	[c=4]movsi_from_tr_unspec/0
	load4! &11 	#X11	# 3681	[c=5]movsi_to_tr_unspec/1
	shift_ru! 16	# 3683	[c=40]*lshrdi3/0
	store8! &8 	#X7	# 4272	[c=4]movsi_from_tr_unspec/0
	load8! &3 	#X3	# 958	[c=5]movdi_to_tr_unspec/1
	and! 0xffff		# 960	[c=4]*anddi3/0
	store8! &4 	#X3	# 4273	[c=4]movdi_from_tr_unspec/0
	load8! &11 	#X11	# 4274	[c=5]movdi_to_tr_unspec/1
	and! 0xffff		# 969	[c=4]*anddi3/0
	store8! &9 	#X8	# 4277	[c=4]movsi_from_tr_unspec/0
	load8! &3 	#X3	# 3689	[c=5]movdi_to_tr_unspec/1
	load8! &9 	#X8	# 3691	[c=6]*muldi3/2
	mult
	store8! &12 	#X11	# 4279	[c=4]movsi_from_tr_unspec/0
	load8! &3 	#X3	# 3694	[c=5]movdi_to_tr_unspec/1
	load8! &8 	#X7	# 3696	[c=6]*muldi3/2
	mult
	store8! &14 	#X13	# 4281	[c=4]movsi_from_tr_unspec/0
	load8! &8 	#X8	# 3699	[c=5]movdi_to_tr_unspec/1
	load8! &11 	#X10	# 3701	[c=6]*muldi3/2
	mult
	store8! &13 	#X12	# 4283	[c=4]movsi_from_tr_unspec/0
	load8! &7 	#X7	# 3704	[c=5]movdi_to_tr_unspec/1
	load8! &11 	#X10	# 3706	[c=6]*muldi3/2
	mult
	store8! &10 	#X9	# 4285	[c=4]movsi_from_tr_unspec/0
	load4! &11 	#X11	# 3711	[c=5]movsi_to_tr_unspec/1
	shift_ru! 16	# 3713	[c=40]*lshrdi3/0
	store8! &5 	#X4	# 4555	[c=4]movdi_from_tr_unspec/0
	load8! &12 	#X12	# 4556	[c=5]movdi_to_tr_unspec/1
	load8! &14 	#X13	# 1048	[c=6]*adddi/2
	add
	load8! &5 	#X4	# 1061	[c=6]*adddi/2
	add
	store8! &5 	#X4	# 4288	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 4289	[c=12]cbranchsi4_internal
	load4! &4 	#X4
	load4! &13 	#X12
	lt_u	
	jump_zero! .L26.l_o386024
	# END CBRANCH
	load8! &9 	#X9	# 1070	[c=5]movdi_to_tr_unspec/1
	add! 65536		# 1072	[c=4]*adddi/0
	store8! &10 	#X9	# 1073	[c=4]movdi_from_tr_unspec/0
.L26.l_o386024:
	load4! &4 	#X4	# 3621	[c=5]movsi_to_tr_unspec/1
	shift_ru! 16	# 3623	[c=40]*lshrdi3/0
	store8! &13 	#X12	# 4237	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 4238	[c=5]movdi_to_tr_unspec/1
	and! 0xffff		# 1097	[c=4]*anddi3/0
	shift_l! 16	# 1106	[c=8]*ashldi3/0
	store8! &5 	#X4	# 4244	[c=4]movdi_from_tr_unspec/0
	load8! &11 	#X11	# 4245	[c=5]movdi_to_tr_unspec/1
	and! 0xffff		# 1115	[c=4]*anddi3/0
	load8! &5 	#X4	# 1128	[c=6]*adddi/2
	add
	store4! &17	# 4248	[c=4]movsi_from_tr_unspec/0
	load4! &5 	#X5	# 3634	[c=5]movsi_to_tr_unspec/1
	shift_ru! 16	# 3636	[c=40]*lshrdi3/0
	store8! &5 	#X4	# 4249	[c=4]movdi_from_tr_unspec/0
	load8! &5 	#X5	# 4250	[c=5]movdi_to_tr_unspec/1
	and! 0xffff		# 1151	[c=4]*anddi3/0
	store8! &6 	#X5	# 4252	[c=4]movdi_from_tr_unspec/0
	load8! &5 	#X5	# 4253	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 3643	[c=6]*muldi3/2
	mult
	store8! &12 	#X11	# 4255	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 4256	[c=5]movdi_to_tr_unspec/1
	load8! &5 	#X4	# 3648	[c=6]*muldi3/2
	mult
	store8! &4 	#X3	# 4258	[c=4]movdi_from_tr_unspec/0
	load8! &5 	#X5	# 4259	[c=5]movdi_to_tr_unspec/1
	load8! &11 	#X10	# 3653	[c=6]*muldi3/2
	mult
	store8! &14 	#X13	# 4545	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 4546	[c=5]movdi_to_tr_unspec/1
	load8! &11 	#X10	# 1203	[c=6]*muldi3/2
	mult
	store8! &11 	#X10	# 4262	[c=4]movdi_from_tr_unspec/0
	load4! &11 	#X11	# 4263	[c=5]movsi_to_tr_unspec/1
	shift_ru! 16	# 3662	[c=40]*lshrdi3/0
	store8! &15 	#X14	# 4548	[c=4]movdi_from_tr_unspec/0
	load8! &13 	#X13	# 4549	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 1230	[c=6]*adddi/2
	add
	load8! &15 	#X14	# 1243	[c=6]*adddi/2
	add
	store8! &4 	#X3	# 4267	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 4268	[c=12]cbranchsi4_internal
	load4! &3 	#X3
	load4! &14 	#X13
	lt_u	
	jump_zero! .L27.l_o386024
	# END CBRANCH
	load8! &10 	#X10	# 1252	[c=5]movdi_to_tr_unspec/1
	add! 65536		# 1254	[c=4]*adddi/0
	store8! &11 	#X10	# 1255	[c=4]movdi_from_tr_unspec/0
.L27.l_o386024:
	load4! &3 	#X3	# 3562	[c=5]movsi_to_tr_unspec/1
	shift_ru! 16	# 3564	[c=40]*lshrdi3/0
	load8! &11 	#X10	# 4525	[c=6]*adddi/2
	add
	store8! &11 	#X10	# 4526	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 4203	[c=5]movdi_to_tr_unspec/1
	and! 0xffff		# 1292	[c=4]*anddi3/0
	shift_l! 16	# 1301	[c=8]*ashldi3/0
	store8! &4 	#X3	# 4209	[c=4]movdi_from_tr_unspec/0
	load8! &11 	#X11	# 4210	[c=5]movdi_to_tr_unspec/1
	and! 0xffff		# 1310	[c=4]*anddi3/0
	load8! &4 	#X3	# 1323	[c=6]*adddi/2
	add
	store8! &12 	#X11	# 4214	[c=4]movsi_from_tr_unspec/0
	load8! &11 	#X11	# 3575	[c=5]movdi_to_tr_unspec/1
	load8! &13 	#X12	# 3577	[c=6]*adddi/2
	add
	store8! &14 	#X13	# 4216	[c=4]movsi_from_tr_unspec/0
	load4! &6 	#X6	# 3582	[c=5]movsi_to_tr_unspec/1
	shift_ru! 16	# 3584	[c=40]*lshrdi3/0
	store8! &4 	#X3	# 4217	[c=4]movdi_from_tr_unspec/0
	load8! &6 	#X6	# 4218	[c=5]movdi_to_tr_unspec/1
	and! 0xffff		# 1359	[c=4]*anddi3/0
	store8! &7 	#X6	# 4220	[c=4]movdi_from_tr_unspec/0
	load8! &6 	#X6	# 4221	[c=5]movdi_to_tr_unspec/1
	load8! &9 	#X8	# 3591	[c=6]*muldi3/2
	mult
	store8! &13 	#X12	# 4223	[c=4]movdi_from_tr_unspec/0
	load8! &6 	#X6	# 4224	[c=5]movdi_to_tr_unspec/1
	load8! &8 	#X7	# 3596	[c=6]*muldi3/2
	mult
	store8! &15 	#X14	# 4226	[c=4]movdi_from_tr_unspec/0
	load8! &8 	#X8	# 4227	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 3601	[c=6]*muldi3/2
	mult
	store8! &9 	#X8	# 4531	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 4532	[c=5]movdi_to_tr_unspec/1
	load8! &8 	#X7	# 1411	[c=6]*muldi3/2
	mult
	store8! &8 	#X7	# 4230	[c=4]movdi_from_tr_unspec/0
	load4! &12 	#X12	# 4231	[c=5]movsi_to_tr_unspec/1
	shift_ru! 16	# 3610	[c=40]*lshrdi3/0
	store8! &16 	#X15	# 4534	[c=4]movdi_from_tr_unspec/0
	load8! &8 	#X8	# 4535	[c=5]movdi_to_tr_unspec/1
	load8! &15 	#X14	# 1438	[c=6]*adddi/2
	add
	load8! &16 	#X15	# 1451	[c=6]*adddi/2
	add
	store8! &15 	#X14	# 4235	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 4236	[c=12]cbranchsi4_internal
	load4! &14 	#X14
	load4! &9 	#X8
	lt_u	
	jump_zero! .L28.l_o386024
	# END CBRANCH
	load8! &7 	#X7	# 1460	[c=5]movdi_to_tr_unspec/1
	add! 65536		# 1462	[c=4]*adddi/0
	store8! &8 	#X7	# 1463	[c=4]movdi_from_tr_unspec/0
.L28.l_o386024:
	load4! &14 	#X14	# 3514	[c=5]movsi_to_tr_unspec/1
	shift_ru! 16	# 3516	[c=40]*lshrdi3/0
	load8! &8 	#X7	# 4514	[c=6]*adddi/2
	add
	store8! &8 	#X7	# 4515	[c=4]movdi_from_tr_unspec/0
	load8! &14 	#X14	# 4169	[c=5]movdi_to_tr_unspec/1
	and! 0xffff		# 1500	[c=4]*anddi3/0
	shift_l! 16	# 1509	[c=8]*ashldi3/0
	store8! &9 	#X8	# 4175	[c=4]movdi_from_tr_unspec/0
	load8! &12 	#X12	# 4176	[c=5]movdi_to_tr_unspec/1
	and! 0xffff		# 1518	[c=4]*anddi3/0
	load8! &9 	#X8	# 1531	[c=6]*adddi/2
	add
	store8! &9 	#X8	# 4179	[c=4]movdi_from_tr_unspec/0
	load8! &6 	#X6	# 4180	[c=5]movdi_to_tr_unspec/1
	load8! &6 	#X5	# 3529	[c=6]*muldi3/2
	mult
	store8! &13 	#X12	# 4182	[c=4]movdi_from_tr_unspec/0
	load8! &6 	#X6	# 4183	[c=5]movdi_to_tr_unspec/1
	load8! &5 	#X4	# 3534	[c=6]*muldi3/2
	mult
	store8! &7 	#X6	# 4185	[c=4]movdi_from_tr_unspec/0
	load8! &5 	#X5	# 4186	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 3539	[c=6]*muldi3/2
	mult
	store8! &15 	#X14	# 4190	[c=4]movsi_from_tr_unspec/0
	load8! &3 	#X3	# 4191	[c=5]movdi_to_tr_unspec/1
	load8! &5 	#X4	# 1583	[c=6]*muldi3/2
	mult
	store8! &6 	#X5	# 4194	[c=4]movsi_from_tr_unspec/0
	load4! &12 	#X12	# 3546	[c=5]movsi_to_tr_unspec/1
	shift_ru! 16	# 3548	[c=40]*lshrdi3/0
	store8! &4 	#X3	# 4195	[c=4]movdi_from_tr_unspec/0
	load8! &14 	#X14	# 4196	[c=5]movdi_to_tr_unspec/1
	load8! &7 	#X6	# 3554	[c=6]*adddi/2
	add
	load8! &4 	#X3	# 1623	[c=6]*adddi/2
	add
	store8! &4 	#X3	# 4199	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 4200	[c=12]cbranchsi4_internal
	load4! &3 	#X3
	load4! &15 	#X14
	lt_u	
	jump_zero! .L29.l_o386024
	# END CBRANCH
	load8! &5 	#X5	# 1632	[c=5]movdi_to_tr_unspec/1
	add! 65536		# 1634	[c=4]*adddi/0
	store8! &6 	#X5	# 4166	[c=4]movsi_from_tr_unspec/0
.L29.l_o386024:
	load4! &3 	#X3	# 3495	[c=5]movsi_to_tr_unspec/1
	shift_ru! 16	# 3497	[c=40]*lshrdi3/0
	store8! &7 	#X6	# 4152	[c=4]movsi_from_tr_unspec/0
	load8! &3 	#X3	# 1657	[c=5]movdi_to_tr_unspec/1
	and! 0xffff		# 1659	[c=4]*anddi3/0
	shift_l! 16	# 1668	[c=8]*ashldi3/0
	store8! &4 	#X3	# 4157	[c=4]movdi_from_tr_unspec/0
	load8! &12 	#X12	# 4158	[c=5]movdi_to_tr_unspec/1
	and! 0xffff		# 1677	[c=4]*anddi3/0
	load8! &4 	#X3	# 1690	[c=6]*adddi/2
	add
	store8! &15 	#X14	# 4162	[c=4]movsi_from_tr_unspec/0
	load8! &9 	#X9	# 3506	[c=5]movdi_to_tr_unspec/1
	load8! &14 	#X13	# 3508	[c=6]*adddi/2
	add
	store8! &5 	#X4	# 4164	[c=4]movsi_from_tr_unspec/0
	push! 1		# 1710	[c=4]movqi_push_pop
	store8! &4 	#X3
	# CBRANCH	# 1711	[c=12]cbranchsi4_internal
	load4! &4 	#X4
	load4! &12 	#X11
	lt_u	
	not	
	jump_zero! .L30.l_o386024
	# END CBRANCH
	push! 0		# 1712	[c=4]movqi_push_pop
	store8! &4 	#X3
.L30.l_o386024:
	load1! &3 	#X3	# 3482	[c=5]movqi_to_tr_unspec/1
	store8! &13 	#X12	# 4150	[c=4]movsi_from_tr_unspec/0
	load8! &10 	#X10	# 3487	[c=5]movdi_to_tr_unspec/1
	load8! &15 	#X14	# 3489	[c=6]*adddi/2
	add
	store8! &4 	#X3	# 1730	[c=4]movdi_from_tr_unspec/0
	push! 1		# 3491	[c=4]movqi_push_pop
	store8! &12 	#X11
	# CBRANCH	# 1737	[c=12]cbranchsi4_internal
	load4! &3 	#X3
	load4! &11 	#X10
	lt_u	
	not	
	jump_zero! .L31.l_o386024
	# END CBRANCH
	push! 0		# 1738	[c=4]movqi_push_pop
	store8! &12 	#X11
.L31.l_o386024:
	load8! &12 	#X12	# 1744	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 1746	[c=6]*adddi/2
	add
	store8! &4 	#X3	# 1747	[c=4]movdi_from_tr_unspec/0
	push! 1		# 3481	[c=4]movqi_push_pop
	store8! &10 	#X9
	# CBRANCH	# 1754	[c=12]cbranchsi4_internal
	load4! &3 	#X3
	load4! &13 	#X12
	lt_u	
	not	
	jump_zero! .L32.l_o386024
	# END CBRANCH
	push! 0		# 1755	[c=4]movqi_push_pop
	store8! &10 	#X9
.L32.l_o386024:
	load8! &9 	#X9	# 3466	[c=5]movdi_to_tr_unspec/1
	load8! &12 	#X11	# 3468	[c=6]*iordi3/2
	or
	and! 0xff		# 4587	[c=4]*anddi3/0
	load8! &7 	#X6	# 1785	[c=6]*adddi/2
	add
	store8! &11 	#X10	# 4146	[c=4]movsi_from_tr_unspec/0
	load8! &8 	#X8	# 4147	[c=5]movdi_to_tr_unspec/1
	load8! &5 	#X4	# 1798	[c=6]*adddi/2
	add
	store8! &5 	#X4	# 1799	[c=4]movdi_from_tr_unspec/0
	push! 1		# 3478	[c=4]movqi_push_pop
	store8! &7 	#X6
	# CBRANCH	# 1806	[c=12]cbranchsi4_internal
	load4! &4 	#X4
	load4! &9 	#X8
	lt_u	
	not	
	jump_zero! .L33.l_o386024
	# END CBRANCH
	push! 0		# 1807	[c=4]movqi_push_pop
	store8! &7 	#X6
.L33.l_o386024:
	load1! &6 	#X6	# 3458	[c=5]movqi_to_tr_unspec/1
	store8! &10 	#X9	# 4137	[c=4]movsi_from_tr_unspec/0
	load8! &7 	#X7	# 4138	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 1824	[c=6]*adddi/2
	add
	store8! &4 	#X3	# 1825	[c=4]movdi_from_tr_unspec/0
	push! 1		# 3464	[c=4]movqi_push_pop
	store8! &9 	#X8
	# CBRANCH	# 1832	[c=12]cbranchsi4_internal
	load4! &3 	#X3
	load4! &8 	#X7
	lt_u	
	not	
	jump_zero! .L34.l_o386024
	# END CBRANCH
	push! 0		# 1833	[c=4]movqi_push_pop
	store8! &9 	#X8
.L34.l_o386024:
	load8! &9 	#X9	# 1839	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 1841	[c=6]*adddi/2
	add
	store8! &4 	#X3	# 1842	[c=4]movdi_from_tr_unspec/0
	push! 1		# 3457	[c=4]movqi_push_pop
	store8! &7 	#X6
	# CBRANCH	# 1849	[c=12]cbranchsi4_internal
	load4! &3 	#X3
	load4! &10 	#X9
	lt_u	
	not	
	jump_zero! .L35.l_o386024
	# END CBRANCH
	push! 0		# 1850	[c=4]movqi_push_pop
	store8! &7 	#X6
.L35.l_o386024:
	load8! &6 	#X6	# 3398	[c=5]movdi_to_tr_unspec/1
	load8! &9 	#X8	# 3400	[c=6]*iordi3/2
	or
	and! 0xff		# 4582	[c=4]*anddi3/0
	load8! &11 	#X10	# 3409	[c=6]*adddi/2
	add
	load8! &6 	#X5	# 1893	[c=6]*adddi/2
	add
	store8! &7 	#X6	# 4106	[c=4]movsi_from_tr_unspec/0
	load8! &4 	#X4	# 1900	[c=5]movdi_to_tr_unspec/1
	shift_l! 9	# 1902	[c=8]*ashldi3/0
	store8! &8 	#X7	# 4108	[c=4]movsi_from_tr_unspec/0
	load4! &16	# 3414	[c=5]movsi_to_tr_unspec/1
	load8! &8 	#X7	# 3417	[c=6]*iordi3/2
	or
	store8! &8 	#X7	# 4111	[c=4]movsi_from_tr_unspec/0
	load4! &4 	#X4	# 3423	[c=5]movsi_to_tr_unspec/1
	shift_ru! 23	# 3425	[c=40]*lshrdi3/0
	store8! &6 	#X5	# 4113	[c=4]movsi_from_tr_unspec/0
	load8! &3 	#X3	# 1936	[c=5]movdi_to_tr_unspec/1
	shift_l! 9	# 1938	[c=8]*ashldi3/0
	store8! &5 	#X4	# 4114	[c=4]movdi_from_tr_unspec/0
	load4! &3 	#X3	# 4115	[c=5]movsi_to_tr_unspec/1
	shift_ru! 23	# 3434	[c=40]*lshrdi3/0
	store8! &4 	#X3	# 4117	[c=4]movdi_from_tr_unspec/0
	load8! &6 	#X6	# 4118	[c=5]movdi_to_tr_unspec/1
	shift_l! 9	# 1961	[c=8]*ashldi3/0
	load8! &4 	#X3	# 1974	[c=6]*iordi3/2
	or
	store8! &7 	#X6	# 4122	[c=4]movsi_from_tr_unspec/0
	load4! &7 	#X7	# 3440	[c=5]movsi_to_tr_unspec/1
	neg		# 1988	[c=3]*negdi2
	shift_ru! 63	# 1993	[c=40]*lshrdi3/0
	and! 0xff		# 4584	[c=4]*anddi3/0
	load8! &6 	#X5	# 4498	[c=6]*iordi3/2
	or
	load8! &5 	#X4	# 4501	[c=6]*iordi3/2
	or
	store8! &4 	#X3	# 4502	[c=4]movdi_from_tr_unspec/0
	load8! &6 	#X6	# 4130	[c=5]movdi_to_tr_unspec/1
	and! 0x1000000		# 2037	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 4134	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L89.l_o386024
	# END CBRANCH
	load4! &2 	#X2	# 41	[c=4]movsi_push_pop
	store8! &2 	#X1
.L36.l_o386024:
	load8! &1 	#X1	# 2226	[c=5]movdi_to_tr_unspec/1
	add! 1023		# 2228	[c=4]*adddi/0
	store8! &3 	#X2	# 4061	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 4062	[c=12]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &3 	#X2
	add! -2147483648	
	lt_u	
	jump_zero! .L40.l_o386024
	# END CBRANCH
	load8! &3 	#X3	# 2237	[c=5]movdi_to_tr_unspec/1
	and! 0x7		# 2239	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 4060	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L41.l_o386024
	# END CBRANCH
	load8! &3 	#X3	# 2248	[c=5]movdi_to_tr_unspec/1
	and! 0xf		# 2250	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 4057	[c=12]*peep2_cbranchsi
	# - EQ
	push! 4	
	xor	
	jump_zero! .L41.l_o386024
	# END CBRANCH
	load8! &3 	#X3	# 2259	[c=5]movdi_to_tr_unspec/1
	add! 4		# 2261	[c=4]*adddi/0
	store8! &5 	#X4	# 2262	[c=4]movdi_from_tr_unspec/0
	push! 1		# 3363	[c=4]movqi_push_pop
	store8! &6 	#X5
	# CBRANCH	# 2269	[c=12]cbranchsi4_internal
	load4! &4 	#X4
	load4! &4 	#X3
	lt_u	
	not	
	jump_zero! .L42.l_o386024
	# END CBRANCH
	push! 0		# 2270	[c=4]movqi_push_pop
	store8! &6 	#X5
.L42.l_o386024:
	load1! &5 	#X5	# 3353	[c=5]movqi_to_tr_unspec/1
	load8! &7 	#X6	# 3360	[c=6]*adddi/2
	add
	store8! &7 	#X6	# 4054	[c=4]movsi_from_tr_unspec/0
	load4! &4 	#X4	# 42	[c=4]movsi_push_pop
	store8! &4 	#X3
.L41.l_o386024:
	load8! &6 	#X6	# 2296	[c=5]movdi_to_tr_unspec/1
	and! 0x1000000		# 2298	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 4049	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L43.l_o386024
	# END CBRANCH
	load8! &6 	#X6	# 2307	[c=5]movdi_to_tr_unspec/1
	and! 0xfffffffffeffffff		# 2309	[c=4]*anddi3/0
	store8! &7 	#X6	# 4044	[c=4]movsi_from_tr_unspec/0
	load8! &1 	#X1	# 2316	[c=5]movdi_to_tr_unspec/1
	add! 1024		# 2318	[c=4]*adddi/0
	store8! &3 	#X2	# 4046	[c=4]movsi_from_tr_unspec/0
.L43.l_o386024:
	# CBRANCH	# 2327	[c=12]cbranchsi4_internal
	push! 2046	
	add! -2147483648	
	load4! &3 	#X2
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L59.l_o386024
	# END CBRANCH
	load8! &6 	#X6	# 2329	[c=5]movdi_to_tr_unspec/1
	shift_l! 29	# 2331	[c=8]*ashldi3/0
	store8! &5 	#X4	# 4028	[c=4]movsi_from_tr_unspec/0
	load4! &3 	#X3	# 3332	[c=5]movsi_to_tr_unspec/1
	shift_ru! 3	# 3334	[c=40]*lshrdi3/0
	store8! &2 	#X1	# 4475	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 4476	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 2358	[c=6]*iordi3/2
	or
	store8! &4 	#X3	# 4031	[c=4]movsi_from_tr_unspec/0
	load4! &6 	#X6	# 3342	[c=5]movsi_to_tr_unspec/1
	shift_ru! 3	# 3344	[c=40]*lshrdi3/0
	and! 0xfffff		# 2381	[c=4]*anddi3/0
	store8! &5 	#X4	# 4038	[c=4]movsi_from_tr_unspec/0
	load8! &2 	#X2	# 4039	[c=5]movdi_to_tr_unspec/1
	and! 0x7ff		# 2394	[c=4]*anddi3/0
	store8! &3 	#X2	# 4042	[c=4]movhi_from_tr_unspec/0
	load4! &3 	#X3	# 4685	[c=5]movsi_to_tr_unspec/1
	store8! &4 	#X3	# 4687	[c=4]movdi_from_tr_unspec/0
	push! 0		# 4688	[c=3]movdi_to_tr_unspec/0
	and! 0xffffffff00000000		# 4690	[c=4]*anddi3/0
	load8! &4 	#X3	# 4691	[c=6]*iordi3/2
	or
	store8! &2 	#X1	# 4692	[c=4]movdi_from_tr_unspec/0
	load4! &4 	#X4	# 4693	[c=5]movsi_to_tr_unspec/1
	and! 0xfffff		# 4695	[c=4]*anddi3/0
	shift_l! 32	# 4697	[c=8]*ashldi3/0
	store8! &4 	#X3	# 4698	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 4699	[c=5]movdi_to_tr_unspec/1
	and! 0xfff00000ffffffff		# 4701	[c=4]*anddi3/0
	load8! &4 	#X3	# 4702	[c=6]*iordi3/2
	or
	store8! &2 	#X1	# 4703	[c=4]movdi_from_tr_unspec/0
	load2! &2 	#X2	# 4704	[c=5]movhi_to_tr_unspec/1
	and! 0x7ff		# 4706	[c=4]*anddi3/0
	shift_l! 52	# 4708	[c=8]*ashldi3/0
	store8! &3 	#X2	# 4709	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 4710	[c=5]movdi_to_tr_unspec/1
	and! 0x800fffffffffffff		# 4712	[c=4]*anddi3/0
	load8! &3 	#X2	# 4713	[c=6]*iordi3/2
	or
	store8! &2 	#X1	# 4714	[c=4]movdi_from_tr_unspec/0
	load1! &0 	#AR	# 4715	[c=5]movqi_to_tr_unspec/1
	shift_l! 63	# 4717	[c=8]*ashldi3/0
	store8! &1 	#AR	# 4718	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 4719	[c=5]movdi_to_tr_unspec/1
	and! 0x7fffffffffffffff		# 4721	[c=4]*anddi3/0
	load8! &1 	#AR	# 4722	[c=6]*iordi3/2
	or
	store8! &19	# 4723	[c=4]movdf_from_tr_unspec/0
	jump! .L85.l_o386024		# 4962	[c=4]jump
.L13.l_o386024:
	load4! &8 	#X8	# 3775	[c=5]movsi_to_tr_unspec/1
	#peep - pop(deadreg)+pusharg	# 3779	[c=0]*peep2_pop_pusharg
	call! __clzdi2		# 672	[c=0]*call_value_pop_1/0
	store8! &1

	load4! &0 	#AR	# 3783	[c=5]movsi_to_tr_unspec/1
	add! -32		# 3785	[c=4]*adddi/0
	store8! &2 	#X1	# 4334	[c=4]movsi_from_tr_unspec/0
	load8! &1 	#X1	# 688	[c=5]movdi_to_tr_unspec/1
	add! 32		# 690	[c=4]*adddi/0
	store8! &1 	#AR	# 4335	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 4336	[c=5]movdi_to_tr_unspec/1
	add! 21		# 699	[c=4]*adddi/0
	store8! &6 	#X5	# 4338	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 4339	[c=12]cbranchsi4_internal
	push! 28	
	add! -2147483648	
	load4! &6 	#X5
	add! -2147483648	
	lt_u	
	jump_zero! .L14.l_o386024
	# END CBRANCH
	load8! &1 	#X1	# 795	[c=5]movdi_to_tr_unspec/1
	add! -8		# 797	[c=4]*adddi/0
	and! 0xffffffff		# 4590	[c=4]*anddi3/0
	pow2		# 3745	[c=4]*pow_tr
	load8! &9 	#X8	# 3746	[c=6]*muldi3/2
	mult
	store8! &6 	#X5	# 4310	[c=4]movsi_from_tr_unspec/0
	push! 0		# 23	[c=4]movsi_push_pop
	store8! &12 	#X11
	push! -1011		# 4727	[c=3]movdi_to_tr_unspec/0
	load8! &1 	#AR	# 4729	[c=14]*subdi3/2
	sub
	load8! &3 	#X2	# 4731	[c=6]*adddi/2
	add
	store8! &3 	#X2	# 4733	[c=4]movsi_from_tr_unspec/0
	push! 0		# 4734	[c=4]movsi_push_pop
	store8! &9 	#X8
	jump! .L11.l_o386024		# 4964	[c=4]jump
.L5.l_o386024:
	load4! &2 	#X2	# 3883	[c=5]movsi_to_tr_unspec/1
	#peep - pop(deadreg)+pusharg	# 3887	[c=0]*peep2_pop_pusharg
	call! __clzdi2		# 268	[c=0]*call_value_pop_1/0
	store8! &1

	load4! &0 	#AR	# 3891	[c=5]movsi_to_tr_unspec/1
	add! -32		# 3893	[c=4]*adddi/0
	store8! &2 	#X1	# 4415	[c=4]movsi_from_tr_unspec/0
	load8! &1 	#X1	# 284	[c=5]movdi_to_tr_unspec/1
	add! 32		# 286	[c=4]*adddi/0
	store8! &1 	#AR	# 4416	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 4417	[c=5]movdi_to_tr_unspec/1
	add! 21		# 295	[c=4]*adddi/0
	store8! &4 	#X3	# 4419	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 4420	[c=12]cbranchsi4_internal
	push! 28	
	add! -2147483648	
	load4! &4 	#X3
	add! -2147483648	
	lt_u	
	jump_zero! .L6.l_o386024
	# END CBRANCH
	load8! &1 	#X1	# 391	[c=5]movdi_to_tr_unspec/1
	add! -8		# 393	[c=4]*adddi/0
	and! 0xffffffff		# 4592	[c=4]*anddi3/0
	pow2		# 3853	[c=4]*pow_tr
	load8! &3 	#X2	# 3854	[c=6]*muldi3/2
	mult
	store8! &7 	#X6	# 4392	[c=4]movsi_from_tr_unspec/0
	push! 0		# 5	[c=4]movsi_push_pop
	store8! &4 	#X3
	push! -1011		# 4738	[c=3]movdi_to_tr_unspec/0
	load8! &1 	#AR	# 4740	[c=14]*subdi3/2
	sub
	store8! &3 	#X2	# 4742	[c=4]movsi_from_tr_unspec/0
	push! 0		# 4743	[c=4]movsi_push_pop
	store8! &5 	#X4
	push! 0		# 4744	[c=4]movsi_push_pop
	store8! &8 	#X7
	jump! .L4.l_o386024		# 4966	[c=4]jump
.L40.l_o386024:
	load8! &2 	#X2	# 3322	[c=5]movdi_to_tr_unspec/1
	sub! 1		# 3324	[c=12]*subdi3/0
	neg		# 3325	[c=4]*neg_tr
	store8! &5 	#X4	# 4025	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 4026	[c=12]cbranchsi4_internal
	push! 56	
	add! -2147483648	
	load4! &5 	#X4
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L60.l_o386024
	# END CBRANCH
	# CBRANCH	# 2420	[c=12]cbranchsi4_internal
	push! 31	
	add! -2147483648	
	load4! &5 	#X4
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L44.l_o386024
	# END CBRANCH
	load8! &1 	#X1	# 2422	[c=5]movdi_to_tr_unspec/1
	add! 1054		# 2424	[c=4]*adddi/0
	store8! &2 	#X1	# 3997	[c=4]movdi_from_tr_unspec/0
	load4! &1 	#X1	# 3998	[c=5]movsi_to_tr_unspec/1
	store8! &3 	#X2	# 3281	[c=4]movdi_from_tr_unspec/0
	load8! &6 	#X6	# 2436	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 2438	[c=10]*ashldi3/2
	shift_l
	store8! &3 	#X2	# 4000	[c=4]movdi_from_tr_unspec/0
	load4! &3 	#X3	# 4001	[c=5]movsi_to_tr_unspec/1
	store8! &8 	#X7	# 3285	[c=4]movdi_from_tr_unspec/0
	load4! &4 	#X4	# 3286	[c=5]movsi_to_tr_unspec/1
	store8! &6 	#X5	# 3288	[c=4]movdi_from_tr_unspec/0
	load8! &7 	#X7	# 2455	[c=5]movdi_to_tr_unspec/1
	load8! &6 	#X5	# 2457	[c=42]*lshrdi3/2
	shift_ru
	load8! &3 	#X2	# 2470	[c=6]*iordi3/2
	or
	store8! &6 	#X5	# 4005	[c=4]movsi_from_tr_unspec/0
	load4! &1 	#X1	# 3292	[c=5]movsi_to_tr_unspec/1
	pow2		# 3295	[c=4]*pow_tr
	load8! &4 	#X3	# 3296	[c=6]*muldi3/2
	mult
	and! 0xffffffff		# 4578	[c=4]*anddi3/0
	neg		# 2498	[c=3]*negdi2
	shift_ru! 63	# 2503	[c=40]*lshrdi3/0
	and! 0xff		# 4580	[c=4]*anddi3/0
	load8! &6 	#X5	# 3311	[c=6]*iordi3/2
	or
	store8! &2 	#X1	# 4016	[c=4]movdi_from_tr_unspec/0
	load4! &6 	#X6	# 4017	[c=5]movsi_to_tr_unspec/1
	store8! &4 	#X3	# 3315	[c=4]movdi_from_tr_unspec/0
	load4! &4 	#X4	# 3316	[c=5]movsi_to_tr_unspec/1
	store8! &3 	#X2	# 3318	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 2542	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 2544	[c=42]*lshrdi3/2
	shift_ru
	store8! &3 	#X2	# 4019	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 4020	[c=5]movdi_to_tr_unspec/1
	and! 0x7		# 2553	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 4024	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L46.l_o386024
	# END CBRANCH
	load8! &1 	#X1	# 2694	[c=5]movdi_to_tr_unspec/1
	and! 0xf		# 2696	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 3968	[c=12]*peep2_cbranchsi
	# - EQ
	push! 4	
	xor	
	jump_zero! .L46.l_o386024
	# END CBRANCH
.L51.l_o386024:
	load8! &1 	#X1	# 2705	[c=5]movdi_to_tr_unspec/1
	add! 4		# 2707	[c=4]*adddi/0
	store8! &4 	#X3	# 2708	[c=4]movdi_from_tr_unspec/0
	push! 1		# 3239	[c=4]movqi_push_pop
	store8! &5 	#X4
	# CBRANCH	# 2715	[c=12]cbranchsi4_internal
	load4! &3 	#X3
	load4! &2 	#X1
	lt_u	
	not	
	jump_zero! .L50.l_o386024
	# END CBRANCH
	push! 0		# 2716	[c=4]movqi_push_pop
	store8! &5 	#X4
.L50.l_o386024:
	load1! &4 	#X4	# 3232	[c=5]movqi_to_tr_unspec/1
	store8! &2 	#X1	# 4463	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 4464	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 2733	[c=6]*adddi/2
	add
	store8! &3 	#X2	# 3965	[c=4]movsi_from_tr_unspec/0
	load4! &3 	#X3	# 44	[c=4]movsi_push_pop
	store8! &2 	#X1
.L46.l_o386024:
	load8! &2 	#X2	# 2742	[c=5]movdi_to_tr_unspec/1
	and! 0x800000		# 2744	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 3962	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L52.l_o386024
	# END CBRANCH
	push! 1		# 67	[c=4]movhi_push_pop
	store8! &3 	#X2
	push! 0		# 68	[c=4]movsi_push_pop
	store8! &5 	#X4
	push! 0		# 69	[c=4]movsi_push_pop
	store8! &4 	#X3
	load4! &3 	#X3	# 4747	[c=5]movsi_to_tr_unspec/1
	store8! &4 	#X3	# 4749	[c=4]movdi_from_tr_unspec/0
	push! 0		# 4750	[c=3]movdi_to_tr_unspec/0
	and! 0xffffffff00000000		# 4752	[c=4]*anddi3/0
	load8! &4 	#X3	# 4753	[c=6]*iordi3/2
	or
	store8! &2 	#X1	# 4754	[c=4]movdi_from_tr_unspec/0
	load4! &4 	#X4	# 4755	[c=5]movsi_to_tr_unspec/1
	and! 0xfffff		# 4757	[c=4]*anddi3/0
	shift_l! 32	# 4759	[c=8]*ashldi3/0
	store8! &4 	#X3	# 4760	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 4761	[c=5]movdi_to_tr_unspec/1
	and! 0xfff00000ffffffff		# 4763	[c=4]*anddi3/0
	load8! &4 	#X3	# 4764	[c=6]*iordi3/2
	or
	store8! &2 	#X1	# 4765	[c=4]movdi_from_tr_unspec/0
	load2! &2 	#X2	# 4766	[c=5]movhi_to_tr_unspec/1
	and! 0x7ff		# 4768	[c=4]*anddi3/0
	shift_l! 52	# 4770	[c=8]*ashldi3/0
	store8! &3 	#X2	# 4771	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 4772	[c=5]movdi_to_tr_unspec/1
	and! 0x800fffffffffffff		# 4774	[c=4]*anddi3/0
	load8! &3 	#X2	# 4775	[c=6]*iordi3/2
	or
	store8! &2 	#X1	# 4776	[c=4]movdi_from_tr_unspec/0
	load1! &0 	#AR	# 4777	[c=5]movqi_to_tr_unspec/1
	shift_l! 63	# 4779	[c=8]*ashldi3/0
	store8! &1 	#AR	# 4780	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 4781	[c=5]movdi_to_tr_unspec/1
	and! 0x7fffffffffffffff		# 4783	[c=4]*anddi3/0
	load8! &1 	#AR	# 4784	[c=6]*iordi3/2
	or
	store8! &19	# 4785	[c=4]movdf_from_tr_unspec/0
	jump! .L85.l_o386024		# 4968	[c=4]jump
.L59.l_o386024:
	push! 2047		# 63	[c=4]movhi_push_pop
	store8! &3 	#X2
	push! 0		# 64	[c=4]movsi_push_pop
	store8! &5 	#X4
	push! 0		# 65	[c=4]movsi_push_pop
	store8! &4 	#X3
	load4! &3 	#X3	# 4788	[c=5]movsi_to_tr_unspec/1
	store8! &4 	#X3	# 4790	[c=4]movdi_from_tr_unspec/0
	push! 0		# 4791	[c=3]movdi_to_tr_unspec/0
	and! 0xffffffff00000000		# 4793	[c=4]*anddi3/0
	load8! &4 	#X3	# 4794	[c=6]*iordi3/2
	or
	store8! &2 	#X1	# 4795	[c=4]movdi_from_tr_unspec/0
	load4! &4 	#X4	# 4796	[c=5]movsi_to_tr_unspec/1
	and! 0xfffff		# 4798	[c=4]*anddi3/0
	shift_l! 32	# 4800	[c=8]*ashldi3/0
	store8! &4 	#X3	# 4801	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 4802	[c=5]movdi_to_tr_unspec/1
	and! 0xfff00000ffffffff		# 4804	[c=4]*anddi3/0
	load8! &4 	#X3	# 4805	[c=6]*iordi3/2
	or
	store8! &2 	#X1	# 4806	[c=4]movdi_from_tr_unspec/0
	load2! &2 	#X2	# 4807	[c=5]movhi_to_tr_unspec/1
	and! 0x7ff		# 4809	[c=4]*anddi3/0
	shift_l! 52	# 4811	[c=8]*ashldi3/0
	store8! &3 	#X2	# 4812	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 4813	[c=5]movdi_to_tr_unspec/1
	and! 0x800fffffffffffff		# 4815	[c=4]*anddi3/0
	load8! &3 	#X2	# 4816	[c=6]*iordi3/2
	or
	store8! &2 	#X1	# 4817	[c=4]movdi_from_tr_unspec/0
	load1! &0 	#AR	# 4818	[c=5]movqi_to_tr_unspec/1
	shift_l! 63	# 4820	[c=8]*ashldi3/0
	store8! &1 	#AR	# 4821	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 4822	[c=5]movdi_to_tr_unspec/1
	and! 0x7fffffffffffffff		# 4824	[c=4]*anddi3/0
	load8! &1 	#AR	# 4825	[c=6]*iordi3/2
	or
	store8! &19	# 4826	[c=4]movdf_from_tr_unspec/0
	jump! .L85.l_o386024		# 4970	[c=4]jump
.L60.l_o386024:
	push! 0		# 53	[c=4]movhi_push_pop
	store8! &3 	#X2
	push! 0		# 54	[c=4]movsi_push_pop
	store8! &5 	#X4
	push! 0		# 55	[c=4]movsi_push_pop
	store8! &4 	#X3
	load4! &3 	#X3	# 4829	[c=5]movsi_to_tr_unspec/1
	store8! &4 	#X3	# 4831	[c=4]movdi_from_tr_unspec/0
	push! 0		# 4832	[c=3]movdi_to_tr_unspec/0
	and! 0xffffffff00000000		# 4834	[c=4]*anddi3/0
	load8! &4 	#X3	# 4835	[c=6]*iordi3/2
	or
	store8! &2 	#X1	# 4836	[c=4]movdi_from_tr_unspec/0
	load4! &4 	#X4	# 4837	[c=5]movsi_to_tr_unspec/1
	and! 0xfffff		# 4839	[c=4]*anddi3/0
	shift_l! 32	# 4841	[c=8]*ashldi3/0
	store8! &4 	#X3	# 4842	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 4843	[c=5]movdi_to_tr_unspec/1
	and! 0xfff00000ffffffff		# 4845	[c=4]*anddi3/0
	load8! &4 	#X3	# 4846	[c=6]*iordi3/2
	or
	store8! &2 	#X1	# 4847	[c=4]movdi_from_tr_unspec/0
	load2! &2 	#X2	# 4848	[c=5]movhi_to_tr_unspec/1
	and! 0x7ff		# 4850	[c=4]*anddi3/0
	shift_l! 52	# 4852	[c=8]*ashldi3/0
	store8! &3 	#X2	# 4853	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 4854	[c=5]movdi_to_tr_unspec/1
	and! 0x800fffffffffffff		# 4856	[c=4]*anddi3/0
	load8! &3 	#X2	# 4857	[c=6]*iordi3/2
	or
	store8! &2 	#X1	# 4858	[c=4]movdi_from_tr_unspec/0
	load1! &0 	#AR	# 4859	[c=5]movqi_to_tr_unspec/1
	shift_l! 63	# 4861	[c=8]*ashldi3/0
	store8! &1 	#AR	# 4862	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 4863	[c=5]movdi_to_tr_unspec/1
	and! 0x7fffffffffffffff		# 4865	[c=4]*anddi3/0
	load8! &1 	#AR	# 4866	[c=6]*iordi3/2
	or
	store8! &19	# 4867	[c=4]movdf_from_tr_unspec/0
	jump! .L85.l_o386024		# 4972	[c=4]jump
.L44.l_o386024:
	push! -31		# 2570	[c=3]movdi_to_tr_unspec/0
	load8! &3 	#X2	# 2572	[c=14]*subdi3/2
	sub
	store8! &3 	#X2	# 3989	[c=4]movdi_from_tr_unspec/0
	load4! &6 	#X6	# 3990	[c=5]movsi_to_tr_unspec/1
	load4! &3 	#X2	# 3992	[c=5]movsi_to_tr_unspec/1
	store8! &4 	#X2	# 3994	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X2	# 2591	[c=42]*lshrdi3/2
	shift_ru
	store8! &6 	#X5	# 3996	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ	# 2598	[c=12]cbranchsi4_internal
	load4! &4 	#X4
	push! 32	
	xor	
	jump_zero! .L47.l_o386024
	# END CBRANCH
	load8! &1 	#X1	# 2600	[c=5]movdi_to_tr_unspec/1
	add! 1086		# 2602	[c=4]*adddi/0
	and! 0xffffffff		# 4576	[c=4]*anddi3/0
	pow2		# 3261	[c=4]*pow_tr
	load8! &7 	#X6	# 3262	[c=6]*muldi3/2
	mult
	load8! &4 	#X3	# 3267	[c=6]*iordi3/2
	or
	store8! &4 	#X3	# 3988	[c=4]movsi_from_tr_unspec/0
.L47.l_o386024:
	load4! &3 	#X3	# 3241	[c=5]movsi_to_tr_unspec/1
	neg		# 2645	[c=3]*negdi2
	shift_ru! 63	# 2650	[c=40]*lshrdi3/0
	and! 0xff		# 4574	[c=4]*anddi3/0
	load8! &6 	#X5	# 3254	[c=6]*iordi3/2
	or
	store8! &2 	#X1	# 3976	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 3977	[c=5]movdi_to_tr_unspec/1
	and! 0x7		# 2681	[c=4]*anddi3/0
	store8! &4 	#X3	# 3980	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ0	# 2688	[c=12]cbranchsi4_internal
	load4! &3 	#X3
	jump_not_zero! .L48.l_o386024
	# END CBRANCH
	push! 0		# 46	[c=4]movsi_push_pop
	store8! &5 	#X4
	load4! &1 	#X1	# 3214	[c=5]movsi_to_tr_unspec/1
	shift_ru! 3	# 3216	[c=40]*lshrdi3/0
	store8! &2 	#X1	# 4460	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 4461	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 2807	[c=6]*iordi3/2
	or
	store8! &4 	#X3	# 3950	[c=4]movsi_from_tr_unspec/0
	push! 0		# 66	[c=4]movhi_push_pop
	store8! &3 	#X2
.L91.l_o386024:
	load4! &3 	#X3	# 4870	[c=5]movsi_to_tr_unspec/1
	store8! &4 	#X3	# 4872	[c=4]movdi_from_tr_unspec/0
	push! 0		# 4873	[c=3]movdi_to_tr_unspec/0
	and! 0xffffffff00000000		# 4875	[c=4]*anddi3/0
	load8! &4 	#X3	# 4876	[c=6]*iordi3/2
	or
	store8! &2 	#X1	# 4877	[c=4]movdi_from_tr_unspec/0
	load4! &4 	#X4	# 4878	[c=5]movsi_to_tr_unspec/1
	and! 0xfffff		# 4880	[c=4]*anddi3/0
	shift_l! 32	# 4882	[c=8]*ashldi3/0
	store8! &4 	#X3	# 4883	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 4884	[c=5]movdi_to_tr_unspec/1
	and! 0xfff00000ffffffff		# 4886	[c=4]*anddi3/0
	load8! &4 	#X3	# 4887	[c=6]*iordi3/2
	or
	store8! &2 	#X1	# 4888	[c=4]movdi_from_tr_unspec/0
	load2! &2 	#X2	# 4889	[c=5]movhi_to_tr_unspec/1
	and! 0x7ff		# 4891	[c=4]*anddi3/0
	shift_l! 52	# 4893	[c=8]*ashldi3/0
	store8! &3 	#X2	# 4894	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 4895	[c=5]movdi_to_tr_unspec/1
	and! 0x800fffffffffffff		# 4897	[c=4]*anddi3/0
	load8! &3 	#X2	# 4898	[c=6]*iordi3/2
	or
	store8! &2 	#X1	# 4899	[c=4]movdi_from_tr_unspec/0
	load1! &0 	#AR	# 4900	[c=5]movqi_to_tr_unspec/1
	shift_l! 63	# 4902	[c=8]*ashldi3/0
	store8! &1 	#AR	# 4903	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 4904	[c=5]movdi_to_tr_unspec/1
	and! 0x7fffffffffffffff		# 4906	[c=4]*anddi3/0
	load8! &1 	#AR	# 4907	[c=6]*iordi3/2
	or
	store8! &19	# 4908	[c=4]movdf_from_tr_unspec/0
	jump! .L85.l_o386024		# 4974	[c=4]jump
.L48.l_o386024:
	load8! &1 	#X1	# 2917	[c=5]movdi_to_tr_unspec/1
	and! 0xf		# 2919	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 3947	[c=12]*peep2_cbranchsi
	# - EQ
	push! 4	
	xor	
	jump_zero! .L90.l_o386024
	# END CBRANCH
	push! 0		# 43	[c=4]movsi_push_pop
	store8! &3 	#X2
	jump! .L51.l_o386024		# 4977	[c=4]jump
.L90.l_o386024:
	push! 0		# 45	[c=4]movsi_push_pop
	store8! &3 	#X2
.L52.l_o386024:
	load8! &2 	#X2	# 2753	[c=5]movdi_to_tr_unspec/1
	shift_l! 29	# 2755	[c=8]*ashldi3/0
	store8! &4 	#X3	# 3951	[c=4]movdi_from_tr_unspec/0
	load4! &2 	#X2	# 3952	[c=5]movsi_to_tr_unspec/1
	shift_ru! 3	# 3227	[c=40]*lshrdi3/0
	and! 0xfffff		# 2778	[c=4]*anddi3/0
	store8! &5 	#X4	# 3959	[c=4]movsi_from_tr_unspec/0
	load4! &1 	#X1	# 4911	[c=5]movsi_to_tr_unspec/1
	shift_ru! 3	# 4913	[c=40]*lshrdi3/0
	store8! &2 	#X1	# 4914	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 4915	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 4917	[c=6]*iordi3/2
	or
	store8! &4 	#X3	# 4919	[c=4]movsi_from_tr_unspec/0
	push! 0		# 4920	[c=4]movhi_push_pop
	store8! &3 	#X2
	jump! .L91.l_o386024		# 4980	[c=4]jump
.L39.l_o386024:
	load8! &6 	#X6	# 2204	[c=5]movdi_to_tr_unspec/1
	or! 0x80000		# 2206	[c=4]*iordi3/0
	and! 0xfffff		# 2215	[c=4]*anddi3/0
	store8! &5 	#X4	# 4068	[c=4]movsi_from_tr_unspec/0
	push! 2047		# 4923	[c=4]movhi_push_pop
	store8! &3 	#X2
	jump! .L88.l_o386024		# 4982	[c=4]jump
.L89.l_o386024:
	load8! &6 	#X6	# 2046	[c=5]movdi_to_tr_unspec/1
	shift_l! 31	# 2048	[c=8]*ashldi3/0
	store8! &5 	#X4	# 4088	[c=4]movsi_from_tr_unspec/0
	load4! &3 	#X3	# 3379	[c=5]movsi_to_tr_unspec/1
	shift_ru! 1	# 3381	[c=40]*lshrdi3/0
	store8! &3 	#X2	# 4089	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 4090	[c=5]movdi_to_tr_unspec/1
	and! 0x1		# 2071	[c=4]*anddi3/0
	load8! &3 	#X2	# 2084	[c=6]*iordi3/2
	or
	store8! &3 	#X2	# 4484	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X4	# 4485	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 2097	[c=6]*iordi3/2
	or
	store8! &4 	#X3	# 4095	[c=4]movsi_from_tr_unspec/0
	load4! &6 	#X6	# 3392	[c=5]movsi_to_tr_unspec/1
	shift_ru! 1	# 3394	[c=40]*lshrdi3/0
	store8! &7 	#X6	# 4097	[c=4]movsi_from_tr_unspec/0
	jump! .L36.l_o386024		# 4984	[c=4]jump
.L85.l_o386024:

	# epilogue
	set_sp! &17
	return

# FUNCTION ENDS:__muldf3

#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: o48cd8d
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"open.c"
#	.text

# FUNCTION BEGINS:open
	EXPORT	open
open:
	# prologue (1 GPRs)
	push! 0

	# variadic *call_value
	call! __errno		# 7	[c=5]*call_value/0

	push! 5		# 9	[c=3]movsi_to_tr_unspec/0
	load8! &1 	#AR	# 11	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	push! -1		# 17	[c=4]movsi_push_pop
	store4! &3

	# epilogue
	store8! &0 #set_sp! &1
	return

# FUNCTION ENDS:open

#	IMPORT __errno
#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: o5d6042
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"read.c"
#	.text

# FUNCTION BEGINS:read
	EXPORT	read
read:
	# prologue (0 GPRs)

	push! 0		# 12	[c=4]movsi_push_pop
	store4! &2

	# epilogue
	return

# FUNCTION ENDS:read

#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: oadad1b
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"sbrk.c"
#	.text
	#peephole pop+move2(deadreg)
	#peephole move+pushimm+commutative(deadreg)
	#peephole binop1+deadreg+binop2
	#peephole rdx1+rdx2 (+)
	#peephole popdi+cmp rev

# FUNCTION BEGINS:sbrk
	EXPORT	sbrk
sbrk:
	# prologue (5 GPRs)

	set_sp! &-5

	load8! .Li_allocated_2828.l_oadad1b	# 8	[c=1]movdi_push_pop
	store8! &3 	#X2
	load8! __heap_start	# 9	[c=4]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 11	[c=6]*adddi/2
	add
	store8! &1 	#AR	# 12	[c=4]movdi_from_tr_unspec/0
	load8! &6	# 15	[c=2]movdi_push_pop
	store8! &2 	#X1
	load8! &0 	#AR	# 17	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 19	[c=6]*adddi/2
	add
	store8! &5 	#X4	# 20	[c=4]movdi_from_tr_unspec/0
	push! &0		# 73	[c=4]movdi_to_tr_unspec/1
	add! -65488		# 78	[c=4]*adddi/0
	# CBRANCH - peep (modesize=8)
	# - reverse 
	load8! &5 	#X4	# 79	[c=12]*peep2_cbranchdi_reverse
	gt_u	
	jump_zero! .L6.l_oadad1b
	# END CBRANCH
	load8! &2 	#X2	# 41	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 43	[c=6]*adddi/2
	add
	store8! .Li_allocated_2828.l_oadad1b	# 69	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 52	[c=4]movdi_push_pop
	store8! &7
	jump! .L7.l_oadad1b		# 88	[c=4]jump
.L6.l_oadad1b:
	# variadic *call_value
	call! __errno		# 30	[c=5]*call_value/0

	push! 12		# 32	[c=3]movsi_to_tr_unspec/0
	load8! &1 	#AR	# 34	[c=4]movsi_from_tr_unspec/1
	store4	
	#	
	push! -1		# 3	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 83	[c=4]movdi_push_pop
	store8! &7
.L7.l_oadad1b:

	# epilogue
	set_sp! &5
	return

# FUNCTION ENDS:sbrk

#	.data
.Li_allocated_2828.l_oadad1b:
	data8 [0]

	EXPORT	__args_start
__args_start:
	data8 [0]

	EXPORT	__heap_start
__heap_start:
	data8 [0]

#	IMPORT __errno
#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: o077fa1
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"subdf3.c"
#	.text
	#peephole zero_extend
	#peephole binop1+deadreg+binop2
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole binop1+2
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole pop(deadreg)+push
	#peephole binop1+2
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole binop1+2
	#peephole 1
	#peephole nop+set
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole move_dead
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole move_dead
	#peephole move_dead
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole move_dead
	#peephole move
	#peephole move+push(pushable)
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole nop+set
	#peephole 1
	#peephole nop+set
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole zero_extend
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole 1
	#peephole zero_extend
	#peephole zero_extend
	#peephole 1
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole zero_extend
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole 1
	#peephole zero_extend
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole zero_extend
	#peephole zero_extend
	#peephole 1
	#peephole nop+set
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole 1
	#peephole nop+set
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole 1
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole zero_extend
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole 1
	#peephole zero_extend
	#peephole pop+pusharg
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole 1
	#peephole zero_extend
	#peephole pop+pusharg
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move_dead
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+sub
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+sub
	#peephole move_dead
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole move
	#peephole move+push+sub
	#peephole move_dead
	#peephole move
	#peephole move+push+sub
	#peephole move_dead
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole move_dead
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+sub
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+sub
	#peephole move_dead
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move
	#peephole move+push+sub
	#peephole move_dead
	#peephole move
	#peephole move+push+sub
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole move_dead
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole nop+set
	#peephole move_dead
	#peephole move+push+sub
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole zero_extend
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole zero_extend
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole 1
	#peephole zero_extend
	#peephole zero_extend
	#peephole move_dead
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole zero_extend
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole 1
	#peephole zero_extend
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole zero_extend
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move_dead
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole nop+set
	#peephole move_dead
	#peephole move+push+sub
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+sub
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole move_dead
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move+push+sub
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole zero_extend
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole zero_extend
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole 1
	#peephole zero_extend
	#peephole zero_extend
	#peephole move_dead
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole zero_extend
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole 1
	#peephole zero_extend
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole zero_extend
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move_dead
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole nop+set
	#peephole move_dead
	#peephole move+push+sub
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+sub
	#peephole move_dead
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole nop+set
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole 1
	#peephole nop+set
	#peephole zero_extend
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole 1
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole nop+set
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole zero_extend
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole zero_extend
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole 1
	#peephole zero_extend
	#peephole zero_extend
	#peephole move_dead
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole zero_extend
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole 1
	#peephole zero_extend
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole zero_extend
	#peephole zero_extend
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole move_dead
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole zero_extend
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole zero_extend
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole zero_extend
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole 1
	#peephole zero_extend
	#peephole zero_extend
	#peephole move_dead
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole zero_extend
	#peephole zero_extend
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole pop+push(deadreg)+shiftl
	#peephole 1
	#peephole zero_extend
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole zero_extend
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole zero_extend
	#peephole zero_extend
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole move_dead
	#peephole zero_extend
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole 1
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole move
	#peephole move+push+commutative(deadreg)
	#peephole move_dead
	#peephole 1
	#peephole move
	#peephole move+push+sub
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole move
	#peephole move
	#peephole move+push(pushable)
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole move_dead
	#peephole zero_extend
	#peephole move_dead
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move_dead
	#peephole move
	#peephole move
	#peephole move+push(pushable)
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole 1
	#peephole zero_extend
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole zero_extend
	#peephole push+pop+deadreg+binop
	#peephole 1
	#peephole 1
	#peephole move_dead
	#peephole move_dead
	#peephole pop+move2(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+cmp
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole redundant blockage insn
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+push+pop+push
	#peephole pop+block+cmp
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+block+push+block
	#peephole pop+push+pop+push
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+push+pop+push
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+push+pop+push
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+block+push+block
	#peephole pop+push+pop+push
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+push+pop+push
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+block+push+block
	#peephole pop+push+pop+push
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+push+pop+push
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+block+push+block
	#peephole pop+push+pop+push
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+cmp
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+push+pop+push
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+block+push+block
	#peephole pop+push+pop+push
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop(deadreg)+pushdi
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+move(deadreg)
	#peephole pop+block+cmp
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+cmp
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+move(deadreg)
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+commut(di)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+commut(di)
	#peephole pop+block+push+commut(di)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+push+sub
	#peephole pop+block+push+block
	#peephole pop+push+sub
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+push+sub
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+push+sub
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+push+sub
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+push+sub
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+commut(di)
	#peephole pop+block+push+commut(di)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+block+push+commut(di)
	#peephole pop+block+push+commut(di)
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop+block+push+commut(di)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+commut(di)
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole redundant blockage insn
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole redundant blockage insn
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push

# FUNCTION BEGINS:__subdf3
	EXPORT	__subdf3
__subdf3:
	# prologue (13 GPRs)

	set_sp! &-13

	load8! &14	# 7223	[c=2]movdi_push_pop
	store8! &1 	#AR
	load8! &14	# 7225	[c=5]movdi_to_tr_unspec/1
	store8! &3 	#X2	# 66	[c=4]movsi_from_tr_unspec/0
	load8! &0 	#AR	# 68	[c=5]movdi_to_tr_unspec/1
	shift_ru! 32	# 70	[c=40]*lshrdi3/0
	and! 0xfffff		# 79	[c=4]*anddi3/0
	store8! &2 	#X1	# 8098	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 8099	[c=5]movdi_to_tr_unspec/1
	shift_ru! 52	# 89	[c=40]*lshrdi3/0
	and! 0x7ff		# 98	[c=4]*anddi3/0
	and! 0xffff		# 8474	[c=4]*anddi3/0
	store8! &4 	#X3	# 8108	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 8109	[c=5]movdi_to_tr_unspec/1
	shift_ru! 63	# 116	[c=40]*lshrdi3/0
	store8! &5 	#X4	# 8112	[c=4]movqi_from_tr_unspec/0
	load1! &4 	#X4	# 7236	[c=5]movqi_to_tr_unspec/1
	store8! &11 	#X10	# 8114	[c=4]movsi_from_tr_unspec/0
	load8! &1 	#X1	# 132	[c=5]movdi_to_tr_unspec/1
	shift_l! 3	# 134	[c=8]*ashldi3/0
	store8! &1 	#AR	# 8115	[c=4]movdi_from_tr_unspec/0
	load4! &2 	#X2	# 8116	[c=5]movsi_to_tr_unspec/1
	shift_ru! 29	# 7246	[c=40]*lshrdi3/0
	load8! &1 	#AR	# 161	[c=6]*iordi3/2
	or
	store8! &9 	#X8	# 8120	[c=4]movsi_from_tr_unspec/0
	load8! &2 	#X2	# 168	[c=5]movdi_to_tr_unspec/1
	shift_l! 3	# 170	[c=8]*ashldi3/0
	store8! &10 	#X9	# 8122	[c=4]movsi_from_tr_unspec/0
	load8! &15	# 7252	[c=2]movdi_push_pop
	store8! &1 	#AR
	load8! &15	# 7254	[c=5]movdi_to_tr_unspec/1
	store8! &7 	#X6	# 187	[c=4]movsi_from_tr_unspec/0
	load8! &0 	#AR	# 189	[c=5]movdi_to_tr_unspec/1
	shift_ru! 32	# 191	[c=40]*lshrdi3/0
	and! 0xfffff		# 200	[c=4]*anddi3/0
	store8! &6 	#X5	# 8128	[c=4]movsi_from_tr_unspec/0
	load8! &0 	#AR	# 208	[c=5]movdi_to_tr_unspec/1
	shift_ru! 52	# 210	[c=40]*lshrdi3/0
	and! 0x7ff		# 219	[c=4]*anddi3/0
	and! 0xffff		# 8476	[c=4]*anddi3/0
	store8! &2 	#X1	# 8136	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 8137	[c=5]movdi_to_tr_unspec/1
	shift_ru! 63	# 237	[c=40]*lshrdi3/0
	store8! &12 	#X11	# 8140	[c=4]movqi_from_tr_unspec/0
	load8! &5 	#X5	# 244	[c=5]movdi_to_tr_unspec/1
	shift_l! 3	# 246	[c=8]*ashldi3/0
	store8! &1 	#AR	# 8141	[c=4]movdi_from_tr_unspec/0
	load4! &6 	#X6	# 8142	[c=5]movsi_to_tr_unspec/1
	shift_ru! 29	# 7271	[c=40]*lshrdi3/0
	load8! &1 	#AR	# 273	[c=6]*iordi3/2
	or
	store8! &6 	#X5	# 8146	[c=4]movsi_from_tr_unspec/0
	load8! &6 	#X6	# 280	[c=5]movdi_to_tr_unspec/1
	shift_l! 3	# 282	[c=8]*ashldi3/0
	store8! &8 	#X7	# 8148	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ	# 289	[c=12]cbranchsi4_internal
	load4! &1 	#X1
	push! 2047	
	xor	
	jump_zero! .L2.l_o077fa1
	# END CBRANCH
	load8! &1 	#X1	# 7212	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 7214	[c=14]*subdi3/2
	sub
	neg		# 7215	[c=4]*neg_tr
	store8! &1 	#AR	# 8086	[c=4]movdi_from_tr_unspec/0
	load8! &11 	#X11	# 8087	[c=5]movdi_to_tr_unspec/1
	xor! 0x1		# 306	[c=4]*xordi3/0
	and! 0xff		# 8472	[c=4]*anddi3/0
	store8! &12 	#X11	# 8092	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ	# 8093	[c=12]cbranchsi4_internal
	load4! &10 	#X10
	load4! &12 	#X11
	xor	
	jump_zero! .L161.l_o077fa1
	# END CBRANCH
	# CBRANCH	# 2194	[c=12]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	jump_zero! .L48.l_o077fa1
	# END CBRANCH
	# CBRANCH EQ0	# 2196	[c=12]cbranchsi4_internal
	load4! &1 	#X1
	jump_not_zero! .L49.l_o077fa1
	# END CBRANCH
	load8! &7 	#X7	# 6682	[c=5]movdi_to_tr_unspec/1
	load8! &6 	#X5	# 6684	[c=6]*iordi3/2
	or
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 7775	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L162.l_o077fa1
	# END CBRANCH
	load8! &0 	#AR	# 2262	[c=5]movdi_to_tr_unspec/1
	add! -1		# 2264	[c=4]*adddi/0
	store8! &2 	#X1	# 7766	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 7767	[c=12]cbranchsi4_internal
	load4! &1 	#X1
	jump_zero! .L163.l_o077fa1
	# END CBRANCH
	# CBRANCH EQ	# 2329	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	push! 2047	
	xor	
	jump_zero! .L164.l_o077fa1
	# END CBRANCH
	load4! &1 	#X1	# 9	[c=4]movsi_push_pop
	store8! &1 	#AR
.L54.l_o077fa1:
	# CBRANCH	# 2442	[c=12]cbranchsi4_internal
	push! 56	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L56.l_o077fa1
	# END CBRANCH
.L175.l_o077fa1:
	# CBRANCH	# 2444	[c=12]cbranchsi4_internal
	push! 31	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L57.l_o077fa1
	# END CBRANCH
	load8! &0 	#AR	# 6573	[c=5]movdi_to_tr_unspec/1
	sub! 32		# 6575	[c=12]*subdi3/0
	neg		# 6576	[c=4]*neg_tr
	store8! &2 	#X1	# 7717	[c=4]movdi_from_tr_unspec/0
	load4! &1 	#X1	# 7718	[c=5]movsi_to_tr_unspec/1
	store8! &3 	#X2	# 6581	[c=4]movdi_from_tr_unspec/0
	load8! &5 	#X5	# 2464	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 2466	[c=10]*ashldi3/2
	shift_l
	store8! &3 	#X2	# 7720	[c=4]movdi_from_tr_unspec/0
	load4! &7 	#X7	# 7721	[c=5]movsi_to_tr_unspec/1
	store8! &11 	#X10	# 6585	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 6586	[c=5]movsi_to_tr_unspec/1
	store8! &7 	#X6	# 6588	[c=4]movdi_from_tr_unspec/0
	load8! &10 	#X10	# 2483	[c=5]movdi_to_tr_unspec/1
	load8! &7 	#X6	# 2485	[c=42]*lshrdi3/2
	shift_ru
	load8! &3 	#X2	# 2498	[c=6]*iordi3/2
	or
	store8! &7 	#X6	# 7725	[c=4]movsi_from_tr_unspec/0
	load4! &1 	#X1	# 6592	[c=5]movsi_to_tr_unspec/1
	pow2		# 6595	[c=4]*pow_tr
	load8! &8 	#X7	# 6596	[c=6]*muldi3/2
	mult
	and! 0xffffffff		# 8441	[c=4]*anddi3/0
	neg		# 2526	[c=3]*negdi2
	shift_ru! 63	# 2531	[c=40]*lshrdi3/0
	and! 0xff		# 8443	[c=4]*anddi3/0
	load8! &7 	#X6	# 6611	[c=6]*iordi3/2
	or
	store8! &2 	#X1	# 7736	[c=4]movdi_from_tr_unspec/0
	load4! &5 	#X5	# 7737	[c=5]movsi_to_tr_unspec/1
	load4! &1 	#AR	# 7739	[c=5]movsi_to_tr_unspec/1
	store8! &2 	#AR	# 7741	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#AR	# 2572	[c=42]*lshrdi3/2
	shift_ru
	store8! &1 	#AR	# 8290	[c=4]movdi_from_tr_unspec/0
	load8! &8 	#X8	# 8291	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 2585	[c=14]*subdi3/2
	sub
	store8! &9 	#X8	# 7744	[c=4]movsi_from_tr_unspec/0
.L58.l_o077fa1:
	load8! &1 	#X1	# 6515	[c=5]movdi_to_tr_unspec/1
	load8! &10 	#X9	# 6517	[c=14]*subdi3/2
	sub
	neg		# 6518	[c=4]*neg_tr
	store8! &3 	#X2	# 7682	[c=4]movsi_from_tr_unspec/0
	push! 1		# 2769	[c=4]movqi_push_pop
	store8! &1 	#AR
	# CBRANCH	# 2770	[c=12]cbranchsi4_internal
	load4! &9 	#X9
	load4! &3 	#X2
	lt_u	
	not	
	jump_zero! .L60.l_o077fa1
	# END CBRANCH
	push! 0		# 2771	[c=4]movqi_push_pop
	store8! &1 	#AR
.L60.l_o077fa1:
	load1! &0 	#AR	# 6508	[c=5]movqi_to_tr_unspec/1
	load8! &9 	#X8	# 8277	[c=14]*subdi3/2
	sub
	neg		# 8278	[c=4]*neg_tr
	store8! &1 	#AR	# 8279	[c=4]movdi_from_tr_unspec/0
.L53.l_o077fa1:
	load8! &0 	#AR	# 4203	[c=5]movdi_to_tr_unspec/1
	and! 0x800000		# 4205	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 7450	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L41.l_o077fa1
	# END CBRANCH
.L182.l_o077fa1:
	load8! &0 	#AR	# 4214	[c=5]movdi_to_tr_unspec/1
	and! 0x7fffff		# 4216	[c=4]*anddi3/0
	store8! &7 	#X6	# 7447	[c=4]movsi_from_tr_unspec/0
.L88.l_o077fa1:
	# CBRANCH EQ0	# 4225	[c=12]cbranchsi4_internal
	load4! &6 	#X6
	jump_zero! .L89.l_o077fa1
	# END CBRANCH
	load4! &6 	#X6	# 6090	[c=5]movsi_to_tr_unspec/1
	#peep - pop(deadreg)+pusharg	# 6094	[c=0]*peep2_pop_pusharg
	call! __clzdi2		# 4233	[c=0]*call_value_pop_1/0
	store8! &1

	load4! &0 	#AR	# 6098	[c=5]movsi_to_tr_unspec/1
	add! -32		# 6100	[c=4]*adddi/0
	add! -8		# 4251	[c=4]*adddi/0
	store8! &1 	#AR	# 4252	[c=4]movdi_from_tr_unspec/0
.L90.l_o077fa1:
	load4! &0 	#AR	# 6048	[c=5]movsi_to_tr_unspec/1
	pow2		# 6051	[c=4]*pow_tr
	load8! &7 	#X6	# 6052	[c=6]*muldi3/2
	mult
	store8! &2 	#X1	# 7425	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 7426	[c=5]movdi_to_tr_unspec/1
	sub! 32		# 6057	[c=12]*subdi3/0
	neg		# 6058	[c=4]*neg_tr
	store8! &6 	#X5	# 7428	[c=4]movdi_from_tr_unspec/0
	load4! &2 	#X2	# 7429	[c=5]movsi_to_tr_unspec/1
	load4! &6 	#X5	# 7431	[c=5]movsi_to_tr_unspec/1
	store8! &7 	#X5	# 7433	[c=4]movdi_from_tr_unspec/0
	load8! &6 	#X5	# 4335	[c=42]*lshrdi3/2
	shift_ru
	load8! &2 	#X1	# 4348	[c=6]*iordi3/2
	or
	store8! &2 	#X1	# 7435	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 7436	[c=5]movsi_to_tr_unspec/1
	pow2		# 6073	[c=4]*pow_tr
	load8! &3 	#X2	# 6074	[c=6]*muldi3/2
	mult
	store8! &3 	#X2	# 4363	[c=4]movdi_from_tr_unspec/0
.L92.l_o077fa1:
	# CBRANCH	# 4398	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	add! -2147483648	
	load4! &4 	#X3
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L93.l_o077fa1
	# END CBRANCH
	load8! &0 	#AR	# 4404	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 4406	[c=14]*subdi3/2
	sub
	store8! &4 	#X3	# 7419	[c=4]movsi_from_tr_unspec/0
	load8! &3 	#X3	# 4413	[c=5]movdi_to_tr_unspec/1
	add! 1		# 4415	[c=4]*adddi/0
	store8! &1 	#AR	# 7420	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 7421	[c=12]cbranchsi4_internal
	push! 31	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L94.l_o077fa1
	# END CBRANCH
	load8! &0 	#AR	# 5989	[c=5]movdi_to_tr_unspec/1
	sub! 32		# 5991	[c=12]*subdi3/0
	neg		# 5992	[c=4]*neg_tr
	store8! &4 	#X3	# 7392	[c=4]movdi_from_tr_unspec/0
	load4! &3 	#X3	# 7393	[c=5]movsi_to_tr_unspec/1
	store8! &6 	#X5	# 5997	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 4442	[c=5]movdi_to_tr_unspec/1
	load8! &6 	#X5	# 4444	[c=10]*ashldi3/2
	shift_l
	store8! &6 	#X5	# 7395	[c=4]movdi_from_tr_unspec/0
	load4! &2 	#X2	# 7396	[c=5]movsi_to_tr_unspec/1
	store8! &8 	#X7	# 6001	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 6002	[c=5]movsi_to_tr_unspec/1
	store8! &7 	#X6	# 6004	[c=4]movdi_from_tr_unspec/0
	load8! &7 	#X7	# 4461	[c=5]movdi_to_tr_unspec/1
	load8! &7 	#X6	# 4463	[c=42]*lshrdi3/2
	shift_ru
	load8! &6 	#X5	# 4476	[c=6]*iordi3/2
	or
	store8! &6 	#X5	# 7399	[c=4]movdi_from_tr_unspec/0
	load4! &3 	#X3	# 7400	[c=5]movsi_to_tr_unspec/1
	pow2		# 6011	[c=4]*pow_tr
	load8! &3 	#X2	# 6012	[c=6]*muldi3/2
	mult
	and! 0xffffffff		# 8410	[c=4]*anddi3/0
	neg		# 4504	[c=3]*negdi2
	shift_ru! 63	# 4509	[c=40]*lshrdi3/0
	and! 0xff		# 8412	[c=4]*anddi3/0
	load8! &6 	#X5	# 6027	[c=6]*iordi3/2
	or
	store8! &3 	#X2	# 7412	[c=4]movdi_from_tr_unspec/0
	load4! &1 	#X1	# 7413	[c=5]movsi_to_tr_unspec/1
	load4! &1 	#AR	# 7415	[c=5]movsi_to_tr_unspec/1
	store8! &2 	#AR	# 7417	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#AR	# 4550	[c=42]*lshrdi3/2
	shift_ru
	store8! &1 	#AR	# 4551	[c=4]movdi_from_tr_unspec/0
	push! 0		# 6036	[c=4]movsi_push_pop
	store8! &4 	#X3
.L96.l_o077fa1:
	load8! &2 	#X2	# 4788	[c=5]movdi_to_tr_unspec/1
	and! 0x7		# 4790	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 7353	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L97.l_o077fa1
	# END CBRANCH
.L80.l_o077fa1:
.L102.l_o077fa1:
	load8! &2 	#X2	# 4799	[c=5]movdi_to_tr_unspec/1
	and! 0xf		# 4801	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 7350	[c=12]*peep2_cbranchsi
	# - EQ
	push! 4	
	xor	
	jump_zero! .L97.l_o077fa1
	# END CBRANCH
	load8! &2 	#X2	# 4810	[c=5]movdi_to_tr_unspec/1
	add! 4		# 4812	[c=4]*adddi/0
	store8! &2 	#X1	# 4813	[c=4]movdi_from_tr_unspec/0
	push! 1		# 5923	[c=4]movqi_push_pop
	store8! &6 	#X5
	# CBRANCH	# 4820	[c=12]cbranchsi4_internal
	load4! &1 	#X1
	load4! &3 	#X2
	lt_u	
	not	
	jump_zero! .L98.l_o077fa1
	# END CBRANCH
	push! 0		# 4821	[c=4]movqi_push_pop
	store8! &6 	#X5
.L98.l_o077fa1:
	load1! &5 	#X5	# 5915	[c=5]movqi_to_tr_unspec/1
	load8! &1 	#AR	# 8165	[c=6]*adddi/2
	add
	store8! &1 	#AR	# 8166	[c=4]movdi_from_tr_unspec/0
	load4! &1 	#X1	# 5921	[c=4]movsi_push_pop
	store8! &3 	#X2
.L97.l_o077fa1:
	load8! &0 	#AR	# 4847	[c=5]movdi_to_tr_unspec/1
	and! 0x800000		# 4849	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 7346	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L99.l_o077fa1
	# END CBRANCH
	load8! &3 	#X3	# 4858	[c=5]movdi_to_tr_unspec/1
	add! 1		# 4860	[c=4]*adddi/0
	store8! &4 	#X3	# 7341	[c=4]movsi_from_tr_unspec/0
	load2! &3 	#X3	# 5911	[c=5]movhi_to_tr_unspec/1
	and! 0x7ff		# 4873	[c=4]*anddi3/0
	store8! &2 	#X1	# 7342	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ	# 7343	[c=12]cbranchsi4_internal
	load4! &3 	#X3
	push! 2047	
	xor	
	jump_zero! .L165.l_o077fa1
	# END CBRANCH
	load8! &0 	#AR	# 5099	[c=5]movdi_to_tr_unspec/1
	and! 0xffffffffff7fffff		# 5101	[c=4]*anddi3/0
	store8! &1 	#AR	# 7304	[c=4]movdi_from_tr_unspec/0
	load4! &2 	#X2	# 7305	[c=5]movsi_to_tr_unspec/1
	shift_ru! 3	# 5863	[c=40]*lshrdi3/0
	store8! &3 	#X2	# 7307	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 7308	[c=5]movdi_to_tr_unspec/1
	shift_l! 29	# 5124	[c=8]*ashldi3/0
	load8! &3 	#X2	# 5137	[c=6]*iordi3/2
	or
	store8! &11 	#X10	# 7312	[c=4]movsi_from_tr_unspec/0
	load4! &0 	#AR	# 5872	[c=5]movsi_to_tr_unspec/1
	shift_ru! 3	# 5874	[c=40]*lshrdi3/0
	and! 0xfffff		# 5160	[c=4]*anddi3/0
	store8! &3 	#X2	# 7318	[c=4]movsi_from_tr_unspec/0
	load4! &10 	#X10	# 5767	[c=5]movsi_to_tr_unspec/1
	store8! &4 	#X3	# 5769	[c=4]movdi_from_tr_unspec/0
	push! 0		# 5770	[c=3]movdi_to_tr_unspec/0
	and! 0xffffffff00000000		# 5772	[c=4]*anddi3/0
	load8! &4 	#X3	# 5773	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 5774	[c=4]movdi_from_tr_unspec/0
	load4! &2 	#X2	# 5778	[c=5]movsi_to_tr_unspec/1
	and! 0xfffff		# 5780	[c=4]*anddi3/0
	shift_l! 32	# 5030	[c=8]*ashldi3/0
	store8! &3 	#X2	# 5031	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 5783	[c=5]movdi_to_tr_unspec/1
	and! 0xfff00000ffffffff		# 5785	[c=4]*anddi3/0
	load8! &3 	#X2	# 5786	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 5787	[c=4]movdi_from_tr_unspec/0
	load2! &1 	#X1	# 5791	[c=5]movhi_to_tr_unspec/1
	and! 0x7ff		# 5793	[c=4]*anddi3/0
	shift_l! 52	# 5056	[c=8]*ashldi3/0
	store8! &2 	#X1	# 5057	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 5796	[c=5]movdi_to_tr_unspec/1
	and! 0x800fffffffffffff		# 5798	[c=4]*anddi3/0
	load8! &2 	#X1	# 5799	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 5800	[c=4]movdi_from_tr_unspec/0
	load1! &4 	#X4	# 5804	[c=5]movqi_to_tr_unspec/1
	shift_l! 63	# 5806	[c=8]*ashldi3/0
	store8! &2 	#X1	# 5807	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 5808	[c=5]movdi_to_tr_unspec/1
	and! 0x7fffffffffffffff		# 5810	[c=4]*anddi3/0
	load8! &2 	#X1	# 5811	[c=6]*iordi3/2
	or
	store8! &15	# 7277	[c=4]movdf_from_tr_unspec/0
	jump! .L166.l_o077fa1		# 9001	[c=4]jump
.L161.l_o077fa1:
	# CBRANCH	# 356	[c=12]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	jump_zero! .L7.l_o077fa1
	# END CBRANCH
	# CBRANCH EQ0	# 358	[c=12]cbranchsi4_internal
	load4! &1 	#X1
	jump_not_zero! .L8.l_o077fa1
	# END CBRANCH
	load8! &7 	#X7	# 7201	[c=5]movdi_to_tr_unspec/1
	load8! &6 	#X5	# 7203	[c=6]*iordi3/2
	or
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 8081	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L9.l_o077fa1
	# END CBRANCH
	load8! &0 	#AR	# 375	[c=5]movdi_to_tr_unspec/1
	add! -1		# 377	[c=4]*adddi/0
	store8! &2 	#X1	# 8077	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 8078	[c=12]cbranchsi4_internal
	load4! &1 	#X1
	jump_zero! .L167.l_o077fa1
	# END CBRANCH
	# CBRANCH EQ	# 442	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	push! 2047	
	xor	
	jump_zero! .L168.l_o077fa1
	# END CBRANCH
	load4! &1 	#X1	# 5	[c=4]movsi_push_pop
	store8! &1 	#AR
.L13.l_o077fa1:
	# CBRANCH	# 555	[c=12]cbranchsi4_internal
	push! 56	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L16.l_o077fa1
	# END CBRANCH
	# CBRANCH	# 557	[c=12]cbranchsi4_internal
	push! 31	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	jump_zero! .L169.l_o077fa1
	# END CBRANCH
	load8! &0 	#AR	# 709	[c=5]movdi_to_tr_unspec/1
	add! -32		# 711	[c=4]*adddi/0
	store8! &2 	#X1	# 8014	[c=4]movdi_from_tr_unspec/0
	load4! &5 	#X5	# 8015	[c=5]movsi_to_tr_unspec/1
	load4! &2 	#X1	# 8017	[c=5]movsi_to_tr_unspec/1
	store8! &3 	#X1	# 8019	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X1	# 730	[c=42]*lshrdi3/2
	shift_ru
	store8! &3 	#X2	# 8021	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ	# 737	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	push! 32	
	xor	
	jump_zero! .L19.l_o077fa1
	# END CBRANCH
	push! 64		# 743	[c=3]movdi_to_tr_unspec/0
	load8! &1 	#AR	# 745	[c=14]*subdi3/2
	sub
	and! 0xffffffff		# 8466	[c=4]*anddi3/0
	pow2		# 7086	[c=4]*pow_tr
	load8! &6 	#X5	# 7087	[c=6]*muldi3/2
	mult
	load8! &8 	#X7	# 7092	[c=6]*iordi3/2
	or
	store8! &8 	#X7	# 8013	[c=4]movsi_from_tr_unspec/0
.L19.l_o077fa1:
	load4! &7 	#X7	# 7066	[c=5]movsi_to_tr_unspec/1
	neg		# 788	[c=3]*negdi2
	shift_ru! 63	# 793	[c=40]*lshrdi3/0
	and! 0xff		# 8464	[c=4]*anddi3/0
	load8! &3 	#X2	# 7079	[c=6]*iordi3/2
	or
	store8! &2 	#X1	# 8005	[c=4]movsi_from_tr_unspec/0
.L18.l_o077fa1:
	load8! &9 	#X9	# 7047	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 7049	[c=6]*adddi/2
	add
	store8! &3 	#X2	# 7987	[c=4]movsi_from_tr_unspec/0
	push! 1		# 882	[c=4]movqi_push_pop
	store8! &1 	#AR
	# CBRANCH	# 883	[c=12]cbranchsi4_internal
	load4! &2 	#X2
	load4! &10 	#X9
	lt_u	
	not	
	jump_zero! .L20.l_o077fa1
	# END CBRANCH
	push! 0		# 884	[c=4]movqi_push_pop
	store8! &1 	#AR
.L20.l_o077fa1:
	load1! &0 	#AR	# 7040	[c=5]movqi_to_tr_unspec/1
	load8! &9 	#X8	# 8371	[c=6]*adddi/2
	add
	store8! &1 	#AR	# 8372	[c=4]movdi_from_tr_unspec/0
.L21.l_o077fa1:
	load8! &0 	#AR	# 2168	[c=5]movdi_to_tr_unspec/1
	and! 0x800000		# 2170	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 7780	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L41.l_o077fa1
	# END CBRANCH
	load8! &3 	#X3	# 2179	[c=5]movdi_to_tr_unspec/1
	add! 1		# 2181	[c=4]*adddi/0
	store8! &4 	#X3	# 7777	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ	# 2188	[c=12]cbranchsi4_internal
	load4! &3 	#X3
	push! 2047	
	xor	
	jump_zero! .L170.l_o077fa1
	# END CBRANCH
	load8! &0 	#AR	# 4704	[c=5]movdi_to_tr_unspec/1
	and! 0xffffffffff7fffff		# 4706	[c=4]*anddi3/0
	store8! &1 	#AR	# 7354	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 7355	[c=5]movdi_to_tr_unspec/1
	and! 0x1		# 4715	[c=4]*anddi3/0
	store8! &6 	#X5	# 7358	[c=4]movsi_from_tr_unspec/0
	load4! &2 	#X2	# 5931	[c=5]movsi_to_tr_unspec/1
	shift_ru! 1	# 5933	[c=40]*lshrdi3/0
	store8! &2 	#X1	# 8167	[c=4]movdi_from_tr_unspec/0
	load8! &5 	#X5	# 8168	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 4742	[c=6]*iordi3/2
	or
	store8! &3 	#X2	# 7361	[c=4]movsi_from_tr_unspec/0
	load8! &0 	#AR	# 4749	[c=5]movdi_to_tr_unspec/1
	shift_l! 31	# 4751	[c=8]*ashldi3/0
	store8! &2 	#X1	# 8170	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 8171	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 4764	[c=6]*iordi3/2
	or
	store8! &3 	#X2	# 7364	[c=4]movsi_from_tr_unspec/0
	load4! &0 	#AR	# 5944	[c=5]movsi_to_tr_unspec/1
	shift_ru! 1	# 5946	[c=40]*lshrdi3/0
	store8! &1 	#AR	# 5947	[c=4]movdi_from_tr_unspec/0
.L193.l_o077fa1:
	load8! &2 	#X2	# 8481	[c=5]movdi_to_tr_unspec/1
	and! 0x7		# 8483	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 8484	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L97.l_o077fa1
	# END CBRANCH
	jump! .L102.l_o077fa1		# 9008	[c=4]jump
.L2.l_o077fa1:
	load8! &7 	#X7	# 7206	[c=5]movdi_to_tr_unspec/1
	load8! &6 	#X5	# 7208	[c=6]*iordi3/2
	or
	store8! &13 	#X12	# 8083	[c=4]movsi_from_tr_unspec/0
	load8! &3 	#X3	# 341	[c=5]movdi_to_tr_unspec/1
	add! -2047		# 343	[c=4]*adddi/0
	store8! &1 	#AR	# 8084	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 8085	[c=12]cbranchsi4_internal
	load4! &12 	#X12
	jump_not_zero! .L171.l_o077fa1
	# END CBRANCH
	load8! &11 	#X11	# 5319	[c=5]movdi_to_tr_unspec/1
	xor! 0x1		# 5321	[c=4]*xordi3/0
	and! 0xff		# 8403	[c=4]*anddi3/0
	store8! &12 	#X11	# 7281	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ	# 7282	[c=12]cbranchsi4_internal
	load4! &10 	#X10
	load4! &12 	#X11
	xor	
	jump_zero! .L7.l_o077fa1
	# END CBRANCH
.L48.l_o077fa1:
	# CBRANCH EQ0	# 2799	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L172.l_o077fa1
	# END CBRANCH
	load8! &3 	#X3	# 3430	[c=5]movdi_to_tr_unspec/1
	add! 1		# 3432	[c=4]*adddi/0
	and! 0x7fe		# 3441	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 7576	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L73.l_o077fa1
	# END CBRANCH
	load8! &9 	#X9	# 6307	[c=5]movdi_to_tr_unspec/1
	load8! &9 	#X8	# 6309	[c=6]*iordi3/2
	or
	store8! &2 	#X1	# 7565	[c=4]movdi_from_tr_unspec/0
	load8! &7 	#X7	# 7566	[c=5]movdi_to_tr_unspec/1
	load8! &6 	#X5	# 6314	[c=6]*iordi3/2
	or
	store8! &11 	#X10	# 7568	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 7569	[c=12]cbranchsi4_internal
	load4! &3 	#X3
	jump_not_zero! .L74.l_o077fa1
	# END CBRANCH
	# CBRANCH EQ0	# 3478	[c=12]cbranchsi4_internal
	load4! &1 	#X1
	jump_zero! .L173.l_o077fa1
	# END CBRANCH
	# CBRANCH EQ0	# 3544	[c=12]cbranchsi4_internal
	load4! &10 	#X10
	jump_not_zero! .L76.l_o077fa1
	# END CBRANCH
	load8! &2 	#X2	# 3546	[c=5]movdi_to_tr_unspec/1
	and! 0x1fffffff		# 3548	[c=4]*anddi3/0
	store8! &2 	#X1	# 7548	[c=4]movdi_from_tr_unspec/0
	load8! &8 	#X8	# 7549	[c=5]movdi_to_tr_unspec/1
	shift_l! 29	# 3557	[c=8]*ashldi3/0
	load8! &2 	#X1	# 3570	[c=6]*iordi3/2
	or
	store8! &11 	#X10	# 7553	[c=4]movsi_from_tr_unspec/0
	load4! &8 	#X8	# 6285	[c=5]movsi_to_tr_unspec/1
	shift_ru! 3	# 6287	[c=40]*lshrdi3/0
	store8! &2 	#X1	# 6288	[c=4]movdi_from_tr_unspec/0
.L38.l_o077fa1:
	load8! &1 	#X1	# 4940	[c=5]movdi_to_tr_unspec/1
	and! 0xfffff		# 4942	[c=4]*anddi3/0
	store8! &3 	#X2	# 7329	[c=4]movsi_from_tr_unspec/0
	load2! &0 	#AR	# 5887	[c=5]movhi_to_tr_unspec/1
	and! 0x7ff		# 4955	[c=4]*anddi3/0
	store8! &2 	#X1	# 7331	[c=4]movhi_from_tr_unspec/0
.L178.l_o077fa1:
	load4! &10 	#X10	# 8488	[c=5]movsi_to_tr_unspec/1
	store8! &4 	#X3	# 8490	[c=4]movdi_from_tr_unspec/0
	push! 0		# 8491	[c=3]movdi_to_tr_unspec/0
	and! 0xffffffff00000000		# 8493	[c=4]*anddi3/0
	load8! &4 	#X3	# 8494	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 8495	[c=4]movdi_from_tr_unspec/0
	load4! &2 	#X2	# 8496	[c=5]movsi_to_tr_unspec/1
	and! 0xfffff		# 8498	[c=4]*anddi3/0
	shift_l! 32	# 8500	[c=8]*ashldi3/0
	store8! &3 	#X2	# 8501	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 8502	[c=5]movdi_to_tr_unspec/1
	and! 0xfff00000ffffffff		# 8504	[c=4]*anddi3/0
	load8! &3 	#X2	# 8505	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 8506	[c=4]movdi_from_tr_unspec/0
	load2! &1 	#X1	# 8507	[c=5]movhi_to_tr_unspec/1
	and! 0x7ff		# 8509	[c=4]*anddi3/0
	shift_l! 52	# 8511	[c=8]*ashldi3/0
	store8! &2 	#X1	# 8512	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 8513	[c=5]movdi_to_tr_unspec/1
	and! 0x800fffffffffffff		# 8515	[c=4]*anddi3/0
	load8! &2 	#X1	# 8516	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 8517	[c=4]movdi_from_tr_unspec/0
	load1! &4 	#X4	# 8518	[c=5]movqi_to_tr_unspec/1
	shift_l! 63	# 8520	[c=8]*ashldi3/0
	store8! &2 	#X1	# 8521	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 8522	[c=5]movdi_to_tr_unspec/1
	and! 0x7fffffffffffffff		# 8524	[c=4]*anddi3/0
	load8! &2 	#X1	# 8525	[c=6]*iordi3/2
	or
	store8! &15	# 8526	[c=4]movdf_from_tr_unspec/0
	jump! .L166.l_o077fa1		# 9013	[c=4]jump
.L49.l_o077fa1:
	# CBRANCH EQ	# 2380	[c=12]cbranchsi4_internal
	load4! &3 	#X3
	push! 2047	
	xor	
	jump_zero! .L174.l_o077fa1
	# END CBRANCH
	load8! &5 	#X5	# 2431	[c=5]movdi_to_tr_unspec/1
	or! 0x800000		# 2433	[c=4]*iordi3/0
	store8! &6 	#X5	# 7746	[c=4]movsi_from_tr_unspec/0
	# CBRANCH	# 8529	[c=12]cbranchsi4_internal
	push! 56	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	jump_zero! .L175.l_o077fa1
	# END CBRANCH
.L56.l_o077fa1:
	load8! &7 	#X7	# 6522	[c=5]movdi_to_tr_unspec/1
	load8! &6 	#X5	# 6524	[c=6]*iordi3/2
	or
	and! 0xffffffff		# 8433	[c=4]*anddi3/0
	neg		# 2733	[c=3]*negdi2
	shift_ru! 63	# 2738	[c=40]*lshrdi3/0
	and! 0xff		# 8435	[c=4]*anddi3/0
	store8! &2 	#X1	# 7691	[c=4]movsi_from_tr_unspec/0
	jump! .L58.l_o077fa1		# 9017	[c=4]jump
.L171.l_o077fa1:
	load1! &11 	#X11	# 5821	[c=5]movqi_to_tr_unspec/1
	store8! &12 	#X11	# 7286	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 7287	[c=12]cbranchsi4_internal
	load4! &10 	#X10
	load4! &12 	#X11
	xor	
	push! 1	
	lt_u	
	jump_zero! .L48.l_o077fa1
	# END CBRANCH
.L7.l_o077fa1:
	# CBRANCH EQ0	# 912	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L176.l_o077fa1
	# END CBRANCH
	load8! &3 	#X3	# 1530	[c=5]movdi_to_tr_unspec/1
	add! 1		# 1532	[c=4]*adddi/0
	store8! &2 	#X1	# 7875	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 7876	[c=5]movdi_to_tr_unspec/1
	and! 0x7fe		# 1541	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 7880	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L35.l_o077fa1
	# END CBRANCH
	load8! &9 	#X9	# 6849	[c=5]movdi_to_tr_unspec/1
	load8! &9 	#X8	# 6851	[c=6]*iordi3/2
	or
	store8! &2 	#X1	# 7873	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 7874	[c=12]cbranchsi4_internal
	load4! &3 	#X3
	jump_not_zero! .L36.l_o077fa1
	# END CBRANCH
	# CBRANCH EQ0	# 1565	[c=12]cbranchsi4_internal
	load4! &1 	#X1
	jump_zero! .L177.l_o077fa1
	# END CBRANCH
	load8! &7 	#X7	# 6832	[c=5]movdi_to_tr_unspec/1
	load8! &6 	#X5	# 6834	[c=6]*iordi3/2
	or
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 7867	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L39.l_o077fa1
	# END CBRANCH
	load8! &2 	#X2	# 1631	[c=5]movdi_to_tr_unspec/1
	and! 0x1fffffff		# 1633	[c=4]*anddi3/0
	store8! &3 	#X2	# 7861	[c=4]movsi_from_tr_unspec/0
	load8! &8 	#X8	# 1640	[c=5]movdi_to_tr_unspec/1
	shift_l! 29	# 1642	[c=8]*ashldi3/0
	store8! &2 	#X1	# 8337	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 8338	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 1655	[c=6]*iordi3/2
	or
	store8! &11 	#X10	# 7864	[c=4]movsi_from_tr_unspec/0
	load4! &8 	#X8	# 6826	[c=5]movsi_to_tr_unspec/1
	shift_ru! 3	# 6828	[c=40]*lshrdi3/0
	store8! &2 	#X1	# 6829	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 8532	[c=5]movdi_to_tr_unspec/1
	and! 0xfffff		# 8534	[c=4]*anddi3/0
	store8! &3 	#X2	# 8536	[c=4]movsi_from_tr_unspec/0
	load2! &0 	#AR	# 8537	[c=5]movhi_to_tr_unspec/1
	and! 0x7ff		# 8539	[c=4]*anddi3/0
	store8! &2 	#X1	# 8541	[c=4]movhi_from_tr_unspec/0
	jump! .L178.l_o077fa1		# 9022	[c=4]jump
.L172.l_o077fa1:
	load8! &3 	#X3	# 6498	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 6500	[c=14]*subdi3/2
	sub
	neg		# 6501	[c=4]*neg_tr
	store8! &1 	#AR	# 7675	[c=4]movdi_from_tr_unspec/0
	load1! &11 	#X11	# 7676	[c=5]movqi_to_tr_unspec/1
	and! 0x1		# 2820	[c=4]*anddi3/0
	store8! &5 	#X4	# 7679	[c=4]movqi_from_tr_unspec/0
	# CBRANCH EQ0	# 2827	[c=12]cbranchsi4_internal
	load4! &3 	#X3
	jump_not_zero! .L62.l_o077fa1
	# END CBRANCH
	load8! &9 	#X9	# 6493	[c=5]movdi_to_tr_unspec/1
	load8! &9 	#X8	# 6495	[c=6]*iordi3/2
	or
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 7674	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L179.l_o077fa1
	# END CBRANCH
	load8! &0 	#AR	# 2893	[c=5]movdi_to_tr_unspec/1
	add! -1		# 2895	[c=4]*adddi/0
	store8! &3 	#X2	# 7664	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 7665	[c=12]cbranchsi4_internal
	load4! &2 	#X2
	jump_zero! .L180.l_o077fa1
	# END CBRANCH
	# CBRANCH EQ	# 2960	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	push! 2047	
	xor	
	jump_zero! .L181.l_o077fa1
	# END CBRANCH
	load4! &2 	#X2	# 10	[c=4]movsi_push_pop
	store8! &1 	#AR
.L66.l_o077fa1:
	# CBRANCH	# 3073	[c=12]cbranchsi4_internal
	push! 56	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L68.l_o077fa1
	# END CBRANCH
	# CBRANCH	# 3075	[c=12]cbranchsi4_internal
	push! 31	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L69.l_o077fa1
	# END CBRANCH
	load8! &0 	#AR	# 6384	[c=5]movdi_to_tr_unspec/1
	sub! 32		# 6386	[c=12]*subdi3/0
	neg		# 6387	[c=4]*neg_tr
	store8! &3 	#X2	# 7614	[c=4]movdi_from_tr_unspec/0
	load4! &2 	#X2	# 7615	[c=5]movsi_to_tr_unspec/1
	store8! &4 	#X3	# 6392	[c=4]movdi_from_tr_unspec/0
	load8! &8 	#X8	# 3095	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 3097	[c=10]*ashldi3/2
	shift_l
	store8! &4 	#X3	# 7617	[c=4]movdi_from_tr_unspec/0
	load4! &9 	#X9	# 7618	[c=5]movsi_to_tr_unspec/1
	store8! &11 	#X10	# 6396	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 6397	[c=5]movsi_to_tr_unspec/1
	store8! &7 	#X6	# 6399	[c=4]movdi_from_tr_unspec/0
	load8! &10 	#X10	# 3114	[c=5]movdi_to_tr_unspec/1
	load8! &7 	#X6	# 3116	[c=42]*lshrdi3/2
	shift_ru
	load8! &4 	#X3	# 3129	[c=6]*iordi3/2
	or
	store8! &7 	#X6	# 7622	[c=4]movsi_from_tr_unspec/0
	load4! &2 	#X2	# 6403	[c=5]movsi_to_tr_unspec/1
	pow2		# 6406	[c=4]*pow_tr
	load8! &10 	#X9	# 6407	[c=6]*muldi3/2
	mult
	and! 0xffffffff		# 8427	[c=4]*anddi3/0
	neg		# 3157	[c=3]*negdi2
	shift_ru! 63	# 3162	[c=40]*lshrdi3/0
	and! 0xff		# 8429	[c=4]*anddi3/0
	load8! &7 	#X6	# 6422	[c=6]*iordi3/2
	or
	store8! &3 	#X2	# 7633	[c=4]movdi_from_tr_unspec/0
	load4! &8 	#X8	# 7634	[c=5]movsi_to_tr_unspec/1
	load4! &1 	#AR	# 7636	[c=5]movsi_to_tr_unspec/1
	store8! &2 	#AR	# 7638	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#AR	# 3203	[c=42]*lshrdi3/2
	shift_ru
	store8! &1 	#AR	# 8252	[c=4]movdi_from_tr_unspec/0
	load8! &5 	#X5	# 8253	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 3216	[c=14]*subdi3/2
	sub
	store8! &6 	#X5	# 7641	[c=4]movsi_from_tr_unspec/0
.L70.l_o077fa1:
	load8! &2 	#X2	# 6326	[c=5]movdi_to_tr_unspec/1
	load8! &8 	#X7	# 6328	[c=14]*subdi3/2
	sub
	neg		# 6329	[c=4]*neg_tr
	store8! &3 	#X2	# 7579	[c=4]movsi_from_tr_unspec/0
	push! 1		# 3400	[c=4]movqi_push_pop
	store8! &1 	#AR
	# CBRANCH	# 3401	[c=12]cbranchsi4_internal
	load4! &7 	#X7
	load4! &3 	#X2
	lt_u	
	not	
	jump_zero! .L72.l_o077fa1
	# END CBRANCH
	push! 0		# 3402	[c=4]movqi_push_pop
	store8! &1 	#AR
.L72.l_o077fa1:
	load1! &0 	#AR	# 6318	[c=5]movqi_to_tr_unspec/1
	load8! &6 	#X5	# 8239	[c=14]*subdi3/2
	sub
	neg		# 8240	[c=4]*neg_tr
	store8! &1 	#AR	# 8241	[c=4]movdi_from_tr_unspec/0
	load4! &1 	#X1	# 6324	[c=4]movsi_push_pop
	store8! &4 	#X3
	load8! &0 	#AR	# 8544	[c=5]movdi_to_tr_unspec/1
	and! 0x800000		# 8546	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 8547	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L182.l_o077fa1
	# END CBRANCH
.L41.l_o077fa1:
	load8! &2 	#X2	# 5223	[c=5]movdi_to_tr_unspec/1
	and! 0x7		# 5225	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 7298	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L102.l_o077fa1
	# END CBRANCH
.L185.l_o077fa1:
	load4! &2 	#X2	# 5828	[c=5]movsi_to_tr_unspec/1
	shift_ru! 3	# 5830	[c=40]*lshrdi3/0
	store8! &2 	#X1	# 7288	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 7289	[c=5]movdi_to_tr_unspec/1
	shift_l! 29	# 5251	[c=8]*ashldi3/0
	load8! &2 	#X1	# 5264	[c=6]*iordi3/2
	or
	store8! &11 	#X10	# 7293	[c=4]movsi_from_tr_unspec/0
	load4! &0 	#AR	# 5839	[c=5]movsi_to_tr_unspec/1
	shift_ru! 3	# 5841	[c=40]*lshrdi3/0
	store8! &2 	#X1	# 7295	[c=4]movsi_from_tr_unspec/0
	load4! &3 	#X3	# 20	[c=4]movsi_push_pop
	store8! &1 	#AR
	# CBRANCH	# 4937	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	push! 2047	
	xor	
	push! 1	
	lt_u	
	jump_zero! .L38.l_o077fa1
	# END CBRANCH
.L14.l_o077fa1:
	load8! &1 	#X1	# 5881	[c=5]movdi_to_tr_unspec/1
	load8! &11 	#X10	# 5883	[c=6]*iordi3/2
	or
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 7327	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L183.l_o077fa1
	# END CBRANCH
.L82.l_o077fa1:
	load8! &1 	#X1	# 4982	[c=5]movdi_to_tr_unspec/1
	or! 0x80000		# 4984	[c=4]*iordi3/0
	and! 0xfffff		# 4993	[c=4]*anddi3/0
	store8! &3 	#X2	# 7324	[c=4]movsi_from_tr_unspec/0
	push! 2047		# 36	[c=4]movhi_push_pop
	store8! &2 	#X1
.L194.l_o077fa1:
	load4! &10 	#X10	# 8550	[c=5]movsi_to_tr_unspec/1
	store8! &4 	#X3	# 8552	[c=4]movdi_from_tr_unspec/0
	push! 0		# 8553	[c=3]movdi_to_tr_unspec/0
	and! 0xffffffff00000000		# 8555	[c=4]*anddi3/0
	load8! &4 	#X3	# 8556	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 8557	[c=4]movdi_from_tr_unspec/0
	load4! &2 	#X2	# 8558	[c=5]movsi_to_tr_unspec/1
	and! 0xfffff		# 8560	[c=4]*anddi3/0
	shift_l! 32	# 8562	[c=8]*ashldi3/0
	store8! &3 	#X2	# 8563	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 8564	[c=5]movdi_to_tr_unspec/1
	and! 0xfff00000ffffffff		# 8566	[c=4]*anddi3/0
	load8! &3 	#X2	# 8567	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 8568	[c=4]movdi_from_tr_unspec/0
	load2! &1 	#X1	# 8569	[c=5]movhi_to_tr_unspec/1
	and! 0x7ff		# 8571	[c=4]*anddi3/0
	shift_l! 52	# 8573	[c=8]*ashldi3/0
	store8! &2 	#X1	# 8574	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 8575	[c=5]movdi_to_tr_unspec/1
	and! 0x800fffffffffffff		# 8577	[c=4]*anddi3/0
	load8! &2 	#X1	# 8578	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 8579	[c=4]movdi_from_tr_unspec/0
	load1! &4 	#X4	# 8580	[c=5]movqi_to_tr_unspec/1
	shift_l! 63	# 8582	[c=8]*ashldi3/0
	store8! &2 	#X1	# 8583	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 8584	[c=5]movdi_to_tr_unspec/1
	and! 0x7fffffffffffffff		# 8586	[c=4]*anddi3/0
	load8! &2 	#X1	# 8587	[c=6]*iordi3/2
	or
	store8! &15	# 8588	[c=4]movdf_from_tr_unspec/0
	jump! .L166.l_o077fa1		# 9029	[c=4]jump
.L8.l_o077fa1:
	# CBRANCH EQ	# 493	[c=12]cbranchsi4_internal
	load4! &3 	#X3
	push! 2047	
	xor	
	jump_zero! .L184.l_o077fa1
	# END CBRANCH
	load8! &5 	#X5	# 544	[c=5]movdi_to_tr_unspec/1
	or! 0x800000		# 546	[c=4]*iordi3/0
	store8! &6 	#X5	# 8053	[c=4]movsi_from_tr_unspec/0
	jump! .L13.l_o077fa1		# 9032	[c=4]jump
.L165.l_o077fa1:
	push! 2047		# 40	[c=4]movhi_push_pop
	store8! &2 	#X1
	push! 0		# 41	[c=4]movsi_push_pop
	store8! &3 	#X2
	push! 0		# 42	[c=4]movsi_push_pop
	store8! &11 	#X10
	load4! &10 	#X10	# 8591	[c=5]movsi_to_tr_unspec/1
	store8! &4 	#X3	# 8593	[c=4]movdi_from_tr_unspec/0
	push! 0		# 8594	[c=3]movdi_to_tr_unspec/0
	and! 0xffffffff00000000		# 8596	[c=4]*anddi3/0
	load8! &4 	#X3	# 8597	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 8598	[c=4]movdi_from_tr_unspec/0
	load4! &2 	#X2	# 8599	[c=5]movsi_to_tr_unspec/1
	and! 0xfffff		# 8601	[c=4]*anddi3/0
	shift_l! 32	# 8603	[c=8]*ashldi3/0
	store8! &3 	#X2	# 8604	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 8605	[c=5]movdi_to_tr_unspec/1
	and! 0xfff00000ffffffff		# 8607	[c=4]*anddi3/0
	load8! &3 	#X2	# 8608	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 8609	[c=4]movdi_from_tr_unspec/0
	load2! &1 	#X1	# 8610	[c=5]movhi_to_tr_unspec/1
	and! 0x7ff		# 8612	[c=4]*anddi3/0
	shift_l! 52	# 8614	[c=8]*ashldi3/0
	store8! &2 	#X1	# 8615	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 8616	[c=5]movdi_to_tr_unspec/1
	and! 0x800fffffffffffff		# 8618	[c=4]*anddi3/0
	load8! &2 	#X1	# 8619	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 8620	[c=4]movdi_from_tr_unspec/0
	load1! &4 	#X4	# 8621	[c=5]movqi_to_tr_unspec/1
	shift_l! 63	# 8623	[c=8]*ashldi3/0
	store8! &2 	#X1	# 8624	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 8625	[c=5]movdi_to_tr_unspec/1
	and! 0x7fffffffffffffff		# 8627	[c=4]*anddi3/0
	load8! &2 	#X1	# 8628	[c=6]*iordi3/2
	or
	store8! &15	# 8629	[c=4]movdf_from_tr_unspec/0
	jump! .L166.l_o077fa1		# 9034	[c=4]jump
.L93.l_o077fa1:
	load8! &3 	#X3	# 4682	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 4684	[c=14]*subdi3/2
	sub
	store8! &4 	#X3	# 7366	[c=4]movsi_from_tr_unspec/0
	load8! &1 	#X1	# 4691	[c=5]movdi_to_tr_unspec/1
	and! 0xffffffffff7fffff		# 4693	[c=4]*anddi3/0
	store8! &1 	#AR	# 4694	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 8632	[c=5]movdi_to_tr_unspec/1
	and! 0x7		# 8634	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 8635	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L102.l_o077fa1
	# END CBRANCH
	jump! .L185.l_o077fa1		# 9038	[c=4]jump
.L89.l_o077fa1:
	load4! &2 	#X2	# 6076	[c=5]movsi_to_tr_unspec/1
	#peep - pop(deadreg)+pusharg	# 6080	[c=0]*peep2_pop_pusharg
	call! __clzdi2		# 4268	[c=0]*call_value_pop_1/0
	store8! &1

	load4! &0 	#AR	# 6084	[c=5]movsi_to_tr_unspec/1
	add! -32		# 6086	[c=4]*adddi/0
	store8! &2 	#X1	# 7439	[c=4]movsi_from_tr_unspec/0
	load8! &1 	#X1	# 4284	[c=5]movdi_to_tr_unspec/1
	add! 24		# 4286	[c=4]*adddi/0
	store8! &1 	#AR	# 7440	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 7441	[c=12]cbranchsi4_internal
	push! 31	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	jump_zero! .L90.l_o077fa1
	# END CBRANCH
	load8! &1 	#X1	# 4373	[c=5]movdi_to_tr_unspec/1
	add! -8		# 4375	[c=4]*adddi/0
	and! 0xffffffff		# 8414	[c=4]*anddi3/0
	pow2		# 6044	[c=4]*pow_tr
	load8! &3 	#X2	# 6045	[c=6]*muldi3/2
	mult
	store8! &2 	#X1	# 4390	[c=4]movdi_from_tr_unspec/0
	push! 0		# 6047	[c=4]movsi_push_pop
	store8! &3 	#X2
	jump! .L92.l_o077fa1		# 9040	[c=4]jump
.L73.l_o077fa1:
	load8! &7 	#X7	# 6143	[c=5]movdi_to_tr_unspec/1
	load8! &10 	#X9	# 6145	[c=14]*subdi3/2
	sub
	neg		# 6146	[c=4]*neg_tr
	store8! &3 	#X2	# 7469	[c=4]movsi_from_tr_unspec/0
	load8! &5 	#X5	# 6150	[c=5]movdi_to_tr_unspec/1
	load8! &9 	#X8	# 6152	[c=14]*subdi3/2
	sub
	neg		# 6153	[c=4]*neg_tr
	store8! &7 	#X6	# 7471	[c=4]movsi_from_tr_unspec/0
	push! 1		# 4078	[c=4]movqi_push_pop
	store8! &2 	#X1
	# CBRANCH	# 4079	[c=12]cbranchsi4_internal
	load4! &9 	#X9
	load4! &3 	#X2
	lt_u	
	jump_zero! .L186.l_o077fa1
	# END CBRANCH
.L85.l_o077fa1:
	load1! &1 	#X1	# 6135	[c=5]movqi_to_tr_unspec/1
	store8! &2 	#X1	# 8189	[c=4]movdi_from_tr_unspec/0
	load8! &6 	#X6	# 8190	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 4097	[c=14]*subdi3/2
	sub
	store8! &7 	#X6	# 7464	[c=4]movsi_from_tr_unspec/0
	load8! &6 	#X6	# 4104	[c=5]movdi_to_tr_unspec/1
	and! 0x800000		# 4106	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 7467	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L187.l_o077fa1
	# END CBRANCH
	load8! &6 	#X6	# 6107	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 6109	[c=6]*iordi3/2
	or
	store8! &11 	#X10	# 7452	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ0	# 4197	[c=12]cbranchsi4_internal
	load4! &10 	#X10
	jump_not_zero! .L88.l_o077fa1
	# END CBRANCH
	push! 0		# 30	[c=4]movsi_push_pop
	store8! &2 	#X1
	push! 0		# 31	[c=4]movqi_push_pop
	store8! &5 	#X4
	load8! &1 	#X1	# 8638	[c=5]movdi_to_tr_unspec/1
	and! 0xfffff		# 8640	[c=4]*anddi3/0
	store8! &3 	#X2	# 8642	[c=4]movsi_from_tr_unspec/0
	load2! &0 	#AR	# 8643	[c=5]movhi_to_tr_unspec/1
	and! 0x7ff		# 8645	[c=4]*anddi3/0
	store8! &2 	#X1	# 8647	[c=4]movhi_from_tr_unspec/0
	jump! .L178.l_o077fa1		# 9044	[c=4]jump
.L162.l_o077fa1:
	load8! &2 	#X2	# 2213	[c=5]movdi_to_tr_unspec/1
	and! 0x1fffffff		# 2215	[c=4]*anddi3/0
	store8! &3 	#X2	# 7769	[c=4]movsi_from_tr_unspec/0
	load8! &8 	#X8	# 2222	[c=5]movdi_to_tr_unspec/1
	shift_l! 29	# 2224	[c=8]*ashldi3/0
	store8! &2 	#X1	# 8306	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 8307	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 2237	[c=6]*iordi3/2
	or
	store8! &11 	#X10	# 7772	[c=4]movsi_from_tr_unspec/0
	load4! &8 	#X8	# 6676	[c=5]movsi_to_tr_unspec/1
	shift_ru! 3	# 6678	[c=40]*lshrdi3/0
	store8! &2 	#X1	# 6679	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 8650	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	push! 2047	
	xor	
	push! 1	
	lt_u	
	jump_zero! .L38.l_o077fa1
	# END CBRANCH
	jump! .L14.l_o077fa1		# 9047	[c=4]jump
.L176.l_o077fa1:
	load8! &3 	#X3	# 7034	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 7036	[c=14]*subdi3/2
	sub
	neg		# 7037	[c=4]*neg_tr
	store8! &1 	#AR	# 7983	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 7984	[c=12]cbranchsi4_internal
	load4! &3 	#X3
	jump_not_zero! .L23.l_o077fa1
	# END CBRANCH
	load8! &9 	#X9	# 7029	[c=5]movdi_to_tr_unspec/1
	load8! &9 	#X8	# 7031	[c=6]*iordi3/2
	or
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 7982	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L188.l_o077fa1
	# END CBRANCH
	load8! &0 	#AR	# 993	[c=5]movdi_to_tr_unspec/1
	add! -1		# 995	[c=4]*adddi/0
	store8! &3 	#X2	# 7972	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 7973	[c=12]cbranchsi4_internal
	load4! &2 	#X2
	jump_zero! .L189.l_o077fa1
	# END CBRANCH
	# CBRANCH EQ	# 1060	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	push! 2047	
	xor	
	jump_zero! .L190.l_o077fa1
	# END CBRANCH
	load4! &2 	#X2	# 6	[c=4]movsi_push_pop
	store8! &1 	#AR
.L28.l_o077fa1:
	# CBRANCH	# 1173	[c=12]cbranchsi4_internal
	push! 56	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L30.l_o077fa1
	# END CBRANCH
	# CBRANCH	# 1175	[c=12]cbranchsi4_internal
	push! 31	
	add! -2147483648	
	load4! &1 	#AR
	add! -2147483648	
	lt_u	
	not	
	jump_zero! .L31.l_o077fa1
	# END CBRANCH
	load8! &0 	#AR	# 6919	[c=5]movdi_to_tr_unspec/1
	sub! 32		# 6921	[c=12]*subdi3/0
	neg		# 6922	[c=4]*neg_tr
	store8! &3 	#X2	# 7918	[c=4]movdi_from_tr_unspec/0
	load4! &2 	#X2	# 7919	[c=5]movsi_to_tr_unspec/1
	store8! &4 	#X3	# 6927	[c=4]movdi_from_tr_unspec/0
	load8! &8 	#X8	# 1195	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 1197	[c=10]*ashldi3/2
	shift_l
	store8! &4 	#X3	# 7921	[c=4]movdi_from_tr_unspec/0
	load4! &9 	#X9	# 7922	[c=5]movsi_to_tr_unspec/1
	store8! &11 	#X10	# 6931	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 6932	[c=5]movsi_to_tr_unspec/1
	store8! &7 	#X6	# 6934	[c=4]movdi_from_tr_unspec/0
	load8! &10 	#X10	# 1214	[c=5]movdi_to_tr_unspec/1
	load8! &7 	#X6	# 1216	[c=42]*lshrdi3/2
	shift_ru
	load8! &4 	#X3	# 1229	[c=6]*iordi3/2
	or
	store8! &7 	#X6	# 7926	[c=4]movsi_from_tr_unspec/0
	load4! &2 	#X2	# 6938	[c=5]movsi_to_tr_unspec/1
	pow2		# 6941	[c=4]*pow_tr
	load8! &10 	#X9	# 6942	[c=6]*muldi3/2
	mult
	and! 0xffffffff		# 8455	[c=4]*anddi3/0
	neg		# 1257	[c=3]*negdi2
	shift_ru! 63	# 1262	[c=40]*lshrdi3/0
	and! 0xff		# 8457	[c=4]*anddi3/0
	load8! &7 	#X6	# 6957	[c=6]*iordi3/2
	or
	store8! &3 	#X2	# 7937	[c=4]movdi_from_tr_unspec/0
	load4! &8 	#X8	# 7938	[c=5]movsi_to_tr_unspec/1
	load4! &1 	#AR	# 7940	[c=5]movsi_to_tr_unspec/1
	store8! &2 	#AR	# 7942	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#AR	# 1303	[c=42]*lshrdi3/2
	shift_ru
	load8! &6 	#X5	# 6969	[c=6]*adddi/2
	add
	store8! &6 	#X5	# 7947	[c=4]movsi_from_tr_unspec/0
.L32.l_o077fa1:
	load8! &7 	#X7	# 6863	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 6865	[c=6]*adddi/2
	add
	store8! &3 	#X2	# 7883	[c=4]movsi_from_tr_unspec/0
	push! 1		# 1500	[c=4]movqi_push_pop
	store8! &1 	#AR
	# CBRANCH	# 1501	[c=12]cbranchsi4_internal
	load4! &2 	#X2
	load4! &8 	#X7
	lt_u	
	not	
	jump_zero! .L34.l_o077fa1
	# END CBRANCH
	push! 0		# 1502	[c=4]movqi_push_pop
	store8! &1 	#AR
.L34.l_o077fa1:
	load1! &0 	#AR	# 6855	[c=5]movqi_to_tr_unspec/1
	load8! &6 	#X5	# 8344	[c=6]*adddi/2
	add
	store8! &1 	#AR	# 8345	[c=4]movdi_from_tr_unspec/0
	load4! &1 	#X1	# 6861	[c=4]movsi_push_pop
	store8! &4 	#X3
	jump! .L21.l_o077fa1		# 9052	[c=4]jump
.L62.l_o077fa1:
	# CBRANCH EQ	# 3011	[c=12]cbranchsi4_internal
	load4! &1 	#X1
	push! 2047	
	xor	
	jump_zero! .L191.l_o077fa1
	# END CBRANCH
	load8! &8 	#X8	# 3062	[c=5]movdi_to_tr_unspec/1
	or! 0x800000		# 3064	[c=4]*iordi3/0
	store8! &9 	#X8	# 7643	[c=4]movsi_from_tr_unspec/0
	jump! .L66.l_o077fa1		# 9055	[c=4]jump
.L16.l_o077fa1:
	load8! &7 	#X7	# 7052	[c=5]movdi_to_tr_unspec/1
	load8! &6 	#X5	# 7054	[c=6]*iordi3/2
	or
	and! 0xffffffff		# 8460	[c=4]*anddi3/0
	neg		# 846	[c=3]*negdi2
	shift_ru! 63	# 851	[c=40]*lshrdi3/0
	and! 0xff		# 8462	[c=4]*anddi3/0
	store8! &2 	#X1	# 7996	[c=4]movsi_from_tr_unspec/0
	jump! .L18.l_o077fa1		# 9057	[c=4]jump
.L94.l_o077fa1:
	load8! &3 	#X3	# 4561	[c=5]movdi_to_tr_unspec/1
	add! -31		# 4563	[c=4]*adddi/0
	store8! &4 	#X3	# 7384	[c=4]movdi_from_tr_unspec/0
	load4! &1 	#X1	# 7385	[c=5]movsi_to_tr_unspec/1
	load4! &4 	#X3	# 7387	[c=5]movsi_to_tr_unspec/1
	store8! &5 	#X3	# 7389	[c=4]movdi_from_tr_unspec/0
	load8! &4 	#X3	# 4582	[c=42]*lshrdi3/2
	shift_ru
	store8! &4 	#X3	# 7390	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ	# 7391	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	push! 32	
	xor	
	jump_zero! .L95.l_o077fa1
	# END CBRANCH
	push! 64		# 4595	[c=3]movdi_to_tr_unspec/0
	load8! &1 	#AR	# 4597	[c=14]*subdi3/2
	sub
	and! 0xffffffff		# 8408	[c=4]*anddi3/0
	pow2		# 5972	[c=4]*pow_tr
	load8! &2 	#X1	# 5973	[c=6]*muldi3/2
	mult
	load8! &3 	#X2	# 5978	[c=6]*iordi3/2
	or
	store8! &3 	#X2	# 7383	[c=4]movsi_from_tr_unspec/0
.L95.l_o077fa1:
	load4! &2 	#X2	# 5952	[c=5]movsi_to_tr_unspec/1
	neg		# 4640	[c=3]*negdi2
	shift_ru! 63	# 4645	[c=40]*lshrdi3/0
	and! 0xff		# 8406	[c=4]*anddi3/0
	load8! &4 	#X3	# 5965	[c=6]*iordi3/2
	or
	store8! &3 	#X2	# 7375	[c=4]movsi_from_tr_unspec/0
	push! 0		# 51	[c=4]movsi_push_pop
	store8! &1 	#AR
	push! 0		# 52	[c=4]movsi_push_pop
	store8! &4 	#X3
	load8! &2 	#X2	# 8653	[c=5]movdi_to_tr_unspec/1
	and! 0x7		# 8655	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 8656	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L102.l_o077fa1
	# END CBRANCH
	jump! .L185.l_o077fa1		# 9060	[c=4]jump
.L57.l_o077fa1:
	load8! &0 	#AR	# 2596	[c=5]movdi_to_tr_unspec/1
	add! -32		# 2598	[c=4]*adddi/0
	store8! &2 	#X1	# 7709	[c=4]movdi_from_tr_unspec/0
	load4! &5 	#X5	# 7710	[c=5]movsi_to_tr_unspec/1
	load4! &2 	#X1	# 7712	[c=5]movsi_to_tr_unspec/1
	store8! &3 	#X1	# 7714	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X1	# 2617	[c=42]*lshrdi3/2
	shift_ru
	store8! &3 	#X2	# 7716	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ	# 2624	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	push! 32	
	xor	
	jump_zero! .L59.l_o077fa1
	# END CBRANCH
	push! 64		# 2630	[c=3]movdi_to_tr_unspec/0
	load8! &1 	#AR	# 2632	[c=14]*subdi3/2
	sub
	and! 0xffffffff		# 8439	[c=4]*anddi3/0
	pow2		# 6556	[c=4]*pow_tr
	load8! &6 	#X5	# 6557	[c=6]*muldi3/2
	mult
	load8! &8 	#X7	# 6562	[c=6]*iordi3/2
	or
	store8! &8 	#X7	# 7708	[c=4]movsi_from_tr_unspec/0
.L59.l_o077fa1:
	load4! &7 	#X7	# 6536	[c=5]movsi_to_tr_unspec/1
	neg		# 2675	[c=3]*negdi2
	shift_ru! 63	# 2680	[c=40]*lshrdi3/0
	and! 0xff		# 8437	[c=4]*anddi3/0
	load8! &3 	#X2	# 6549	[c=6]*iordi3/2
	or
	store8! &2 	#X1	# 7700	[c=4]movsi_from_tr_unspec/0
	jump! .L58.l_o077fa1		# 9062	[c=4]jump
.L186.l_o077fa1:
	push! 0		# 4080	[c=4]movqi_push_pop
	store8! &2 	#X1
	jump! .L85.l_o077fa1		# 9064	[c=4]jump
.L23.l_o077fa1:
	# CBRANCH EQ	# 1111	[c=12]cbranchsi4_internal
	load4! &1 	#X1
	push! 2047	
	xor	
	jump_zero! .L192.l_o077fa1
	# END CBRANCH
	load8! &8 	#X8	# 1162	[c=5]movdi_to_tr_unspec/1
	or! 0x800000		# 1164	[c=4]*iordi3/0
	store8! &9 	#X8	# 7949	[c=4]movsi_from_tr_unspec/0
	jump! .L28.l_o077fa1		# 9067	[c=4]jump
.L170.l_o077fa1:
	push! 2047		# 43	[c=4]movhi_push_pop
	store8! &2 	#X1
	push! 0		# 44	[c=4]movsi_push_pop
	store8! &3 	#X2
	push! 0		# 45	[c=4]movsi_push_pop
	store8! &11 	#X10
	load4! &10 	#X10	# 8659	[c=5]movsi_to_tr_unspec/1
	store8! &4 	#X3	# 8661	[c=4]movdi_from_tr_unspec/0
	push! 0		# 8662	[c=3]movdi_to_tr_unspec/0
	and! 0xffffffff00000000		# 8664	[c=4]*anddi3/0
	load8! &4 	#X3	# 8665	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 8666	[c=4]movdi_from_tr_unspec/0
	load4! &2 	#X2	# 8667	[c=5]movsi_to_tr_unspec/1
	and! 0xfffff		# 8669	[c=4]*anddi3/0
	shift_l! 32	# 8671	[c=8]*ashldi3/0
	store8! &3 	#X2	# 8672	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 8673	[c=5]movdi_to_tr_unspec/1
	and! 0xfff00000ffffffff		# 8675	[c=4]*anddi3/0
	load8! &3 	#X2	# 8676	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 8677	[c=4]movdi_from_tr_unspec/0
	load2! &1 	#X1	# 8678	[c=5]movhi_to_tr_unspec/1
	and! 0x7ff		# 8680	[c=4]*anddi3/0
	shift_l! 52	# 8682	[c=8]*ashldi3/0
	store8! &2 	#X1	# 8683	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 8684	[c=5]movdi_to_tr_unspec/1
	and! 0x800fffffffffffff		# 8686	[c=4]*anddi3/0
	load8! &2 	#X1	# 8687	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 8688	[c=4]movdi_from_tr_unspec/0
	load1! &4 	#X4	# 8689	[c=5]movqi_to_tr_unspec/1
	shift_l! 63	# 8691	[c=8]*ashldi3/0
	store8! &2 	#X1	# 8692	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 8693	[c=5]movdi_to_tr_unspec/1
	and! 0x7fffffffffffffff		# 8695	[c=4]*anddi3/0
	load8! &2 	#X1	# 8696	[c=6]*iordi3/2
	or
	store8! &15	# 8697	[c=4]movdf_from_tr_unspec/0
	jump! .L166.l_o077fa1		# 9069	[c=4]jump
.L169.l_o077fa1:
	load8! &0 	#AR	# 7103	[c=5]movdi_to_tr_unspec/1
	sub! 32		# 7105	[c=12]*subdi3/0
	neg		# 7106	[c=4]*neg_tr
	store8! &2 	#X1	# 8022	[c=4]movdi_from_tr_unspec/0
	load4! &1 	#X1	# 8023	[c=5]movsi_to_tr_unspec/1
	store8! &3 	#X2	# 7111	[c=4]movdi_from_tr_unspec/0
	load8! &5 	#X5	# 577	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 579	[c=10]*ashldi3/2
	shift_l
	store8! &3 	#X2	# 8025	[c=4]movdi_from_tr_unspec/0
	load4! &7 	#X7	# 8026	[c=5]movsi_to_tr_unspec/1
	store8! &11 	#X10	# 7115	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 7116	[c=5]movsi_to_tr_unspec/1
	store8! &7 	#X6	# 7118	[c=4]movdi_from_tr_unspec/0
	load8! &10 	#X10	# 596	[c=5]movdi_to_tr_unspec/1
	load8! &7 	#X6	# 598	[c=42]*lshrdi3/2
	shift_ru
	load8! &3 	#X2	# 611	[c=6]*iordi3/2
	or
	store8! &7 	#X6	# 8030	[c=4]movsi_from_tr_unspec/0
	load4! &1 	#X1	# 7122	[c=5]movsi_to_tr_unspec/1
	pow2		# 7125	[c=4]*pow_tr
	load8! &8 	#X7	# 7126	[c=6]*muldi3/2
	mult
	and! 0xffffffff		# 8468	[c=4]*anddi3/0
	neg		# 639	[c=3]*negdi2
	shift_ru! 63	# 644	[c=40]*lshrdi3/0
	and! 0xff		# 8470	[c=4]*anddi3/0
	load8! &7 	#X6	# 7141	[c=6]*iordi3/2
	or
	store8! &2 	#X1	# 8041	[c=4]movdi_from_tr_unspec/0
	load4! &5 	#X5	# 8042	[c=5]movsi_to_tr_unspec/1
	load4! &1 	#AR	# 8044	[c=5]movsi_to_tr_unspec/1
	store8! &2 	#AR	# 8046	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#AR	# 685	[c=42]*lshrdi3/2
	shift_ru
	load8! &9 	#X8	# 7153	[c=6]*adddi/2
	add
	store8! &9 	#X8	# 8051	[c=4]movsi_from_tr_unspec/0
	jump! .L18.l_o077fa1		# 9071	[c=4]jump
.L167.l_o077fa1:
	load8! &7 	#X7	# 7190	[c=5]movdi_to_tr_unspec/1
	load8! &10 	#X9	# 7192	[c=6]*adddi/2
	add
	store8! &3 	#X2	# 8074	[c=4]movsi_from_tr_unspec/0
	load8! &5 	#X5	# 7195	[c=5]movdi_to_tr_unspec/1
	load8! &9 	#X8	# 7197	[c=6]*adddi/2
	add
	store8! &4 	#X3	# 8076	[c=4]movsi_from_tr_unspec/0
	push! 1		# 412	[c=4]movqi_push_pop
	store8! &1 	#AR
	# CBRANCH	# 413	[c=12]cbranchsi4_internal
	load4! &2 	#X2
	load4! &10 	#X9
	lt_u	
	not	
	jump_zero! .L11.l_o077fa1
	# END CBRANCH
	push! 0		# 414	[c=4]movqi_push_pop
	store8! &1 	#AR
.L11.l_o077fa1:
	load1! &0 	#AR	# 7180	[c=5]movqi_to_tr_unspec/1
	load8! &4 	#X3	# 7187	[c=6]*adddi/2
	add
	store8! &1 	#AR	# 432	[c=4]movdi_from_tr_unspec/0
.L12.l_o077fa1:
	load8! &0 	#AR	# 5304	[c=5]movdi_to_tr_unspec/1
	and! 0x800000		# 5306	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 7285	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L115.l_o077fa1
	# END CBRANCH
	push! 1		# 53	[c=4]movsi_push_pop
	store8! &4 	#X3
	load8! &2 	#X2	# 8700	[c=5]movdi_to_tr_unspec/1
	and! 0x7		# 8702	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 8703	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L102.l_o077fa1
	# END CBRANCH
	jump! .L185.l_o077fa1		# 9074	[c=4]jump
.L179.l_o077fa1:
	load8! &6 	#X6	# 2844	[c=5]movdi_to_tr_unspec/1
	and! 0x1fffffff		# 2846	[c=4]*anddi3/0
	store8! &2 	#X1	# 7666	[c=4]movdi_from_tr_unspec/0
	load8! &5 	#X5	# 7667	[c=5]movdi_to_tr_unspec/1
	shift_l! 29	# 2855	[c=8]*ashldi3/0
	load8! &2 	#X1	# 2868	[c=6]*iordi3/2
	or
	store8! &11 	#X10	# 7671	[c=4]movsi_from_tr_unspec/0
	load4! &5 	#X5	# 6487	[c=5]movsi_to_tr_unspec/1
	shift_ru! 3	# 6489	[c=40]*lshrdi3/0
	store8! &2 	#X1	# 6490	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 8706	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	push! 2047	
	xor	
	push! 1	
	lt_u	
	jump_zero! .L38.l_o077fa1
	# END CBRANCH
	jump! .L14.l_o077fa1		# 9077	[c=4]jump
.L36.l_o077fa1:
	# CBRANCH EQ0	# 1756	[c=12]cbranchsi4_internal
	load4! &1 	#X1
	jump_not_zero! .L42.l_o077fa1
	# END CBRANCH
	load8! &6 	#X6	# 1758	[c=5]movdi_to_tr_unspec/1
	and! 0x1fffffff		# 1760	[c=4]*anddi3/0
	store8! &2 	#X1	# 7841	[c=4]movsi_from_tr_unspec/0
	load8! &5 	#X5	# 1767	[c=5]movdi_to_tr_unspec/1
	shift_l! 29	# 1769	[c=8]*ashldi3/0
	store8! &1 	#AR	# 8332	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 8333	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 1782	[c=6]*iordi3/2
	or
	store8! &11 	#X10	# 7844	[c=4]movsi_from_tr_unspec/0
	load4! &5 	#X5	# 6792	[c=5]movsi_to_tr_unspec/1
	shift_ru! 3	# 6794	[c=40]*lshrdi3/0
	store8! &2 	#X1	# 7846	[c=4]movsi_from_tr_unspec/0
	load8! &1 	#X1	# 8709	[c=5]movdi_to_tr_unspec/1
	load8! &11 	#X10	# 8711	[c=6]*iordi3/2
	or
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 8712	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L82.l_o077fa1
	# END CBRANCH
	jump! .L183.l_o077fa1		# 9080	[c=4]jump
.L173.l_o077fa1:
	# CBRANCH EQ0	# 3480	[c=12]cbranchsi4_internal
	load4! &10 	#X10
	jump_zero! .L109.l_o077fa1
	# END CBRANCH
	load8! &6 	#X6	# 3482	[c=5]movdi_to_tr_unspec/1
	and! 0x1fffffff		# 3484	[c=4]*anddi3/0
	store8! &2 	#X1	# 7554	[c=4]movdi_from_tr_unspec/0
	load8! &5 	#X5	# 7555	[c=5]movdi_to_tr_unspec/1
	shift_l! 29	# 3493	[c=8]*ashldi3/0
	load8! &2 	#X1	# 3506	[c=6]*iordi3/2
	or
	store8! &11 	#X10	# 7559	[c=4]movsi_from_tr_unspec/0
	load4! &5 	#X5	# 6297	[c=5]movsi_to_tr_unspec/1
	shift_ru! 3	# 6299	[c=40]*lshrdi3/0
	store8! &2 	#X1	# 7560	[c=4]movdi_from_tr_unspec/0
	load1! &11 	#X11	# 7561	[c=5]movqi_to_tr_unspec/1
	and! 0x1		# 3533	[c=4]*anddi3/0
	store8! &5 	#X4	# 7564	[c=4]movqi_from_tr_unspec/0
	load8! &1 	#X1	# 8715	[c=5]movdi_to_tr_unspec/1
	and! 0xfffff		# 8717	[c=4]*anddi3/0
	store8! &3 	#X2	# 8719	[c=4]movsi_from_tr_unspec/0
	load2! &0 	#AR	# 8720	[c=5]movhi_to_tr_unspec/1
	and! 0x7ff		# 8722	[c=4]*anddi3/0
	store8! &2 	#X1	# 8724	[c=4]movhi_from_tr_unspec/0
	jump! .L178.l_o077fa1		# 9082	[c=4]jump
.L191.l_o077fa1:
	load8! &6 	#X6	# 3013	[c=5]movdi_to_tr_unspec/1
	and! 0x1fffffff		# 3015	[c=4]*anddi3/0
	store8! &2 	#X1	# 7645	[c=4]movsi_from_tr_unspec/0
	load8! &5 	#X5	# 3022	[c=5]movdi_to_tr_unspec/1
	shift_l! 29	# 3024	[c=8]*ashldi3/0
	store8! &1 	#AR	# 8255	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 8256	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 3037	[c=6]*iordi3/2
	or
	store8! &11 	#X10	# 7648	[c=4]movsi_from_tr_unspec/0
	load4! &5 	#X5	# 6441	[c=5]movsi_to_tr_unspec/1
	shift_ru! 3	# 6443	[c=40]*lshrdi3/0
	store8! &2 	#X1	# 7650	[c=4]movsi_from_tr_unspec/0
	load8! &1 	#X1	# 8727	[c=5]movdi_to_tr_unspec/1
	load8! &11 	#X10	# 8729	[c=6]*iordi3/2
	or
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 8730	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L82.l_o077fa1
	# END CBRANCH
	jump! .L183.l_o077fa1		# 9085	[c=4]jump
.L163.l_o077fa1:
	load8! &7 	#X7	# 6655	[c=5]movdi_to_tr_unspec/1
	load8! &10 	#X9	# 6657	[c=14]*subdi3/2
	sub
	neg		# 6658	[c=4]*neg_tr
	store8! &3 	#X2	# 7763	[c=4]movsi_from_tr_unspec/0
	load8! &5 	#X5	# 6662	[c=5]movdi_to_tr_unspec/1
	load8! &9 	#X8	# 6664	[c=14]*subdi3/2
	sub
	neg		# 6665	[c=4]*neg_tr
	store8! &2 	#X1	# 7765	[c=4]movsi_from_tr_unspec/0
	push! 1		# 2299	[c=4]movqi_push_pop
	store8! &1 	#AR
	# CBRANCH	# 2300	[c=12]cbranchsi4_internal
	load4! &9 	#X9
	load4! &3 	#X2
	lt_u	
	not	
	jump_zero! .L52.l_o077fa1
	# END CBRANCH
	push! 0		# 2301	[c=4]movqi_push_pop
	store8! &1 	#AR
.L52.l_o077fa1:
	load1! &0 	#AR	# 6647	[c=5]movqi_to_tr_unspec/1
	load8! &2 	#X1	# 8303	[c=14]*subdi3/2
	sub
	neg		# 8304	[c=4]*neg_tr
	store8! &1 	#AR	# 8305	[c=4]movdi_from_tr_unspec/0
	push! 1		# 6653	[c=4]movsi_push_pop
	store8! &4 	#X3
	jump! .L53.l_o077fa1		# 9087	[c=4]jump
.L174.l_o077fa1:
	load8! &2 	#X2	# 2382	[c=5]movdi_to_tr_unspec/1
	and! 0x1fffffff		# 2384	[c=4]*anddi3/0
	store8! &2 	#X1	# 7748	[c=4]movsi_from_tr_unspec/0
	load8! &8 	#X8	# 2391	[c=5]movdi_to_tr_unspec/1
	shift_l! 29	# 2393	[c=8]*ashldi3/0
	store8! &1 	#AR	# 8293	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 8294	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 2406	[c=6]*iordi3/2
	or
	store8! &11 	#X10	# 7751	[c=4]movsi_from_tr_unspec/0
	load4! &8 	#X8	# 6630	[c=5]movsi_to_tr_unspec/1
	shift_ru! 3	# 6632	[c=40]*lshrdi3/0
	store8! &2 	#X1	# 7753	[c=4]movsi_from_tr_unspec/0
	load8! &1 	#X1	# 8733	[c=5]movdi_to_tr_unspec/1
	load8! &11 	#X10	# 8735	[c=6]*iordi3/2
	or
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 8736	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L82.l_o077fa1
	# END CBRANCH
	jump! .L183.l_o077fa1		# 9090	[c=4]jump
.L9.l_o077fa1:
	load8! &2 	#X2	# 5171	[c=5]movdi_to_tr_unspec/1
	and! 0x1fffffff		# 5173	[c=4]*anddi3/0
	store8! &3 	#X2	# 7300	[c=4]movsi_from_tr_unspec/0
	load8! &8 	#X8	# 5180	[c=5]movdi_to_tr_unspec/1
	shift_l! 29	# 5182	[c=8]*ashldi3/0
	store8! &2 	#X1	# 8153	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 8154	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 5195	[c=6]*iordi3/2
	or
	store8! &11 	#X10	# 7303	[c=4]movsi_from_tr_unspec/0
	load4! &8 	#X8	# 5852	[c=5]movsi_to_tr_unspec/1
	shift_ru! 3	# 5854	[c=40]*lshrdi3/0
	store8! &2 	#X1	# 5855	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 8739	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	push! 2047	
	xor	
	push! 1	
	lt_u	
	jump_zero! .L38.l_o077fa1
	# END CBRANCH
	jump! .L14.l_o077fa1		# 9093	[c=4]jump
.L68.l_o077fa1:
	load8! &9 	#X9	# 6333	[c=5]movdi_to_tr_unspec/1
	load8! &9 	#X8	# 6335	[c=6]*iordi3/2
	or
	and! 0xffffffff		# 8419	[c=4]*anddi3/0
	neg		# 3364	[c=3]*negdi2
	shift_ru! 63	# 3369	[c=40]*lshrdi3/0
	and! 0xff		# 8421	[c=4]*anddi3/0
	store8! &3 	#X2	# 7588	[c=4]movsi_from_tr_unspec/0
	jump! .L70.l_o077fa1		# 9095	[c=4]jump
.L164.l_o077fa1:
	load8! &2 	#X2	# 2331	[c=5]movdi_to_tr_unspec/1
	and! 0x1fffffff		# 2333	[c=4]*anddi3/0
	store8! &2 	#X1	# 7755	[c=4]movsi_from_tr_unspec/0
	load8! &8 	#X8	# 2340	[c=5]movdi_to_tr_unspec/1
	shift_l! 29	# 2342	[c=8]*ashldi3/0
	store8! &1 	#AR	# 8296	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 8297	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 2355	[c=6]*iordi3/2
	or
	store8! &11 	#X10	# 7758	[c=4]movsi_from_tr_unspec/0
	load4! &8 	#X8	# 6642	[c=5]movsi_to_tr_unspec/1
	shift_ru! 3	# 6644	[c=40]*lshrdi3/0
	store8! &2 	#X1	# 7760	[c=4]movsi_from_tr_unspec/0
	load8! &1 	#X1	# 8742	[c=5]movdi_to_tr_unspec/1
	load8! &11 	#X10	# 8744	[c=6]*iordi3/2
	or
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 8745	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L82.l_o077fa1
	# END CBRANCH
	jump! .L183.l_o077fa1		# 9098	[c=4]jump
.L35.l_o077fa1:
	# CBRANCH EQ	# 2060	[c=12]cbranchsi4_internal
	load4! &1 	#X1
	push! 2047	
	xor	
	jump_zero! .L105.l_o077fa1
	# END CBRANCH
	load8! &7 	#X7	# 6720	[c=5]movdi_to_tr_unspec/1
	load8! &10 	#X9	# 6722	[c=6]*adddi/2
	add
	store8! &3 	#X2	# 7794	[c=4]movsi_from_tr_unspec/0
	push! 1		# 2075	[c=4]movqi_push_pop
	store8! &1 	#AR
	# CBRANCH	# 2076	[c=12]cbranchsi4_internal
	load4! &2 	#X2
	load4! &10 	#X9
	lt_u	
	not	
	jump_zero! .L46.l_o077fa1
	# END CBRANCH
	push! 0		# 2077	[c=4]movqi_push_pop
	store8! &1 	#AR
.L46.l_o077fa1:
	load1! &0 	#AR	# 6688	[c=5]movqi_to_tr_unspec/1
	store8! &4 	#X3	# 7782	[c=4]movsi_from_tr_unspec/0
	load8! &5 	#X5	# 6693	[c=5]movdi_to_tr_unspec/1
	load8! &9 	#X8	# 6695	[c=6]*adddi/2
	add
	load8! &4 	#X3	# 8311	[c=6]*adddi/2
	add
	store8! &1 	#AR	# 8312	[c=4]movdi_from_tr_unspec/0
	load4! &2 	#X2	# 7785	[c=5]movsi_to_tr_unspec/1
	shift_ru! 1	# 6704	[c=40]*lshrdi3/0
	store8! &4 	#X3	# 7788	[c=4]movsi_from_tr_unspec/0
	load8! &0 	#AR	# 2128	[c=5]movdi_to_tr_unspec/1
	shift_l! 31	# 2130	[c=8]*ashldi3/0
	load8! &4 	#X3	# 8314	[c=6]*iordi3/2
	or
	store8! &3 	#X2	# 8315	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 7791	[c=5]movsi_to_tr_unspec/1
	shift_ru! 1	# 6715	[c=40]*lshrdi3/0
	store8! &1 	#AR	# 6716	[c=4]movdi_from_tr_unspec/0
	load4! &1 	#X1	# 6718	[c=4]movsi_push_pop
	store8! &4 	#X3
	load8! &2 	#X2	# 8748	[c=5]movdi_to_tr_unspec/1
	and! 0x7		# 8750	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 8751	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L102.l_o077fa1
	# END CBRANCH
	jump! .L185.l_o077fa1		# 9101	[c=4]jump
.L187.l_o077fa1:
	load8! &9 	#X9	# 6122	[c=5]movdi_to_tr_unspec/1
	load8! &8 	#X7	# 6124	[c=14]*subdi3/2
	sub
	neg		# 6125	[c=4]*neg_tr
	store8! &3 	#X2	# 7459	[c=4]movsi_from_tr_unspec/0
	load8! &8 	#X8	# 6129	[c=5]movdi_to_tr_unspec/1
	load8! &6 	#X5	# 6131	[c=14]*subdi3/2
	sub
	neg		# 6132	[c=4]*neg_tr
	store8! &2 	#X1	# 7461	[c=4]movsi_from_tr_unspec/0
	push! 1		# 4141	[c=4]movqi_push_pop
	store8! &1 	#AR
	# CBRANCH	# 4142	[c=12]cbranchsi4_internal
	load4! &7 	#X7
	load4! &3 	#X2
	lt_u	
	not	
	jump_zero! .L87.l_o077fa1
	# END CBRANCH
	push! 0		# 4143	[c=4]movqi_push_pop
	store8! &1 	#AR
.L87.l_o077fa1:
	load1! &0 	#AR	# 6111	[c=5]movqi_to_tr_unspec/1
	store8! &1 	#AR	# 8186	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 8187	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 4160	[c=14]*subdi3/2
	sub
	store8! &7 	#X6	# 7455	[c=4]movsi_from_tr_unspec/0
	load1! &11 	#X11	# 6118	[c=5]movqi_to_tr_unspec/1
	and! 0x1		# 4173	[c=4]*anddi3/0
	store8! &5 	#X4	# 7457	[c=4]movqi_from_tr_unspec/0
	jump! .L88.l_o077fa1		# 9103	[c=4]jump
.L74.l_o077fa1:
	# CBRANCH EQ0	# 3746	[c=12]cbranchsi4_internal
	load4! &1 	#X1
	jump_not_zero! .L81.l_o077fa1
	# END CBRANCH
	# CBRANCH EQ0	# 3748	[c=12]cbranchsi4_internal
	load4! &10 	#X10
	jump_zero! .L111.l_o077fa1
	# END CBRANCH
	load8! &6 	#X6	# 3750	[c=5]movdi_to_tr_unspec/1
	and! 0x1fffffff		# 3752	[c=4]*anddi3/0
	store8! &1 	#AR	# 7515	[c=4]movdi_from_tr_unspec/0
	load8! &5 	#X5	# 7516	[c=5]movdi_to_tr_unspec/1
	shift_l! 29	# 3761	[c=8]*ashldi3/0
	load8! &1 	#AR	# 3774	[c=6]*iordi3/2
	or
	store8! &11 	#X10	# 7520	[c=4]movsi_from_tr_unspec/0
	load4! &5 	#X5	# 6219	[c=5]movsi_to_tr_unspec/1
	shift_ru! 3	# 6221	[c=40]*lshrdi3/0
	store8! &2 	#X1	# 7522	[c=4]movsi_from_tr_unspec/0
	load1! &11 	#X11	# 6225	[c=5]movqi_to_tr_unspec/1
	and! 0x1		# 3801	[c=4]*anddi3/0
	store8! &5 	#X4	# 7524	[c=4]movqi_from_tr_unspec/0
	load8! &1 	#X1	# 8754	[c=5]movdi_to_tr_unspec/1
	load8! &11 	#X10	# 8756	[c=6]*iordi3/2
	or
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 8757	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L82.l_o077fa1
	# END CBRANCH
	jump! .L183.l_o077fa1		# 9106	[c=4]jump
.L184.l_o077fa1:
	load8! &2 	#X2	# 495	[c=5]movdi_to_tr_unspec/1
	and! 0x1fffffff		# 497	[c=4]*anddi3/0
	store8! &1 	#AR	# 8054	[c=4]movdi_from_tr_unspec/0
	load8! &8 	#X8	# 8055	[c=5]movdi_to_tr_unspec/1
	shift_l! 29	# 506	[c=8]*ashldi3/0
	load8! &1 	#AR	# 519	[c=6]*iordi3/2
	or
	store8! &11 	#X10	# 8059	[c=4]movsi_from_tr_unspec/0
	load4! &8 	#X8	# 7163	[c=5]movsi_to_tr_unspec/1
	shift_ru! 3	# 7165	[c=40]*lshrdi3/0
	store8! &2 	#X1	# 8061	[c=4]movsi_from_tr_unspec/0
	load8! &1 	#X1	# 8760	[c=5]movdi_to_tr_unspec/1
	load8! &11 	#X10	# 8762	[c=6]*iordi3/2
	or
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 8763	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L82.l_o077fa1
	# END CBRANCH
	jump! .L183.l_o077fa1		# 9109	[c=4]jump
.L76.l_o077fa1:
	load8! &7 	#X7	# 6265	[c=5]movdi_to_tr_unspec/1
	load8! &10 	#X9	# 6267	[c=14]*subdi3/2
	sub
	neg		# 6268	[c=4]*neg_tr
	store8! &3 	#X2	# 7545	[c=4]movsi_from_tr_unspec/0
	load8! &5 	#X5	# 6272	[c=5]movdi_to_tr_unspec/1
	load8! &9 	#X8	# 6274	[c=14]*subdi3/2
	sub
	neg		# 6275	[c=4]*neg_tr
	store8! &2 	#X1	# 7547	[c=4]movsi_from_tr_unspec/0
	push! 1		# 3621	[c=4]movqi_push_pop
	store8! &1 	#AR
	# CBRANCH	# 3622	[c=12]cbranchsi4_internal
	load4! &9 	#X9
	load4! &3 	#X2
	lt_u	
	not	
	jump_zero! .L77.l_o077fa1
	# END CBRANCH
	push! 0		# 3623	[c=4]movqi_push_pop
	store8! &1 	#AR
.L77.l_o077fa1:
	load1! &0 	#AR	# 6257	[c=5]movqi_to_tr_unspec/1
	load8! &2 	#X1	# 8224	[c=14]*subdi3/2
	sub
	neg		# 8225	[c=4]*neg_tr
	store8! &1 	#AR	# 8226	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 7539	[c=5]movdi_to_tr_unspec/1
	and! 0x800000		# 3649	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 7543	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L78.l_o077fa1
	# END CBRANCH
	load8! &9 	#X9	# 6244	[c=5]movdi_to_tr_unspec/1
	load8! &8 	#X7	# 6246	[c=14]*subdi3/2
	sub
	neg		# 6247	[c=4]*neg_tr
	store8! &3 	#X2	# 7534	[c=4]movsi_from_tr_unspec/0
	load8! &8 	#X8	# 6251	[c=5]movdi_to_tr_unspec/1
	load8! &6 	#X5	# 6253	[c=14]*subdi3/2
	sub
	neg		# 6254	[c=4]*neg_tr
	store8! &2 	#X1	# 7536	[c=4]movsi_from_tr_unspec/0
	push! 1		# 3684	[c=4]movqi_push_pop
	store8! &1 	#AR
	# CBRANCH	# 3685	[c=12]cbranchsi4_internal
	load4! &7 	#X7
	load4! &3 	#X2
	lt_u	
	not	
	jump_zero! .L79.l_o077fa1
	# END CBRANCH
	push! 0		# 3686	[c=4]movqi_push_pop
	store8! &1 	#AR
.L79.l_o077fa1:
	load1! &0 	#AR	# 6233	[c=5]movqi_to_tr_unspec/1
	load8! &2 	#X1	# 8217	[c=14]*subdi3/2
	sub
	neg		# 8218	[c=4]*neg_tr
	store8! &1 	#AR	# 8219	[c=4]movdi_from_tr_unspec/0
	load1! &11 	#X11	# 7529	[c=5]movqi_to_tr_unspec/1
	and! 0x1		# 3716	[c=4]*anddi3/0
	store8! &5 	#X4	# 7532	[c=4]movqi_from_tr_unspec/0
	load8! &2 	#X2	# 8766	[c=5]movdi_to_tr_unspec/1
	and! 0x7		# 8768	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 8769	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L97.l_o077fa1
	# END CBRANCH
	jump! .L102.l_o077fa1		# 9112	[c=4]jump
.L30.l_o077fa1:
	load8! &9 	#X9	# 6868	[c=5]movdi_to_tr_unspec/1
	load8! &9 	#X8	# 6870	[c=6]*iordi3/2
	or
	and! 0xffffffff		# 8447	[c=4]*anddi3/0
	neg		# 1464	[c=3]*negdi2
	shift_ru! 63	# 1469	[c=40]*lshrdi3/0
	and! 0xff		# 8449	[c=4]*anddi3/0
	store8! &3 	#X2	# 7892	[c=4]movsi_from_tr_unspec/0
	jump! .L32.l_o077fa1		# 9114	[c=4]jump
.L168.l_o077fa1:
	load8! &2 	#X2	# 444	[c=5]movdi_to_tr_unspec/1
	and! 0x1fffffff		# 446	[c=4]*anddi3/0
	store8! &1 	#AR	# 8062	[c=4]movdi_from_tr_unspec/0
	load8! &8 	#X8	# 8063	[c=5]movdi_to_tr_unspec/1
	shift_l! 29	# 455	[c=8]*ashldi3/0
	load8! &1 	#AR	# 468	[c=6]*iordi3/2
	or
	store8! &11 	#X10	# 8067	[c=4]movsi_from_tr_unspec/0
	load4! &8 	#X8	# 7175	[c=5]movsi_to_tr_unspec/1
	shift_ru! 3	# 7177	[c=40]*lshrdi3/0
	store8! &2 	#X1	# 8069	[c=4]movsi_from_tr_unspec/0
	load8! &1 	#X1	# 8773	[c=5]movdi_to_tr_unspec/1
	load8! &11 	#X10	# 8775	[c=6]*iordi3/2
	or
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 8776	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L82.l_o077fa1
	# END CBRANCH
	jump! .L183.l_o077fa1		# 9117	[c=4]jump
.L69.l_o077fa1:
	load8! &0 	#AR	# 3227	[c=5]movdi_to_tr_unspec/1
	add! -32		# 3229	[c=4]*adddi/0
	store8! &3 	#X2	# 7606	[c=4]movdi_from_tr_unspec/0
	load4! &8 	#X8	# 7607	[c=5]movsi_to_tr_unspec/1
	load4! &3 	#X2	# 7609	[c=5]movsi_to_tr_unspec/1
	store8! &4 	#X2	# 7611	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X2	# 3248	[c=42]*lshrdi3/2
	shift_ru
	store8! &4 	#X3	# 7613	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ	# 3255	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	push! 32	
	xor	
	jump_zero! .L71.l_o077fa1
	# END CBRANCH
	push! 64		# 3261	[c=3]movdi_to_tr_unspec/0
	load8! &1 	#AR	# 3263	[c=14]*subdi3/2
	sub
	and! 0xffffffff		# 8425	[c=4]*anddi3/0
	pow2		# 6367	[c=4]*pow_tr
	load8! &9 	#X8	# 6368	[c=6]*muldi3/2
	mult
	load8! &10 	#X9	# 6373	[c=6]*iordi3/2
	or
	store8! &10 	#X9	# 7605	[c=4]movsi_from_tr_unspec/0
.L71.l_o077fa1:
	load4! &9 	#X9	# 6347	[c=5]movsi_to_tr_unspec/1
	neg		# 3306	[c=3]*negdi2
	shift_ru! 63	# 3311	[c=40]*lshrdi3/0
	and! 0xff		# 8423	[c=4]*anddi3/0
	load8! &4 	#X3	# 6360	[c=6]*iordi3/2
	or
	store8! &3 	#X2	# 7597	[c=4]movsi_from_tr_unspec/0
	jump! .L70.l_o077fa1		# 9119	[c=4]jump
.L115.l_o077fa1:
	push! 2		# 16	[c=4]movsi_push_pop
	store8! &4 	#X3
	load8! &0 	#AR	# 8779	[c=5]movdi_to_tr_unspec/1
	and! 0xffffffffff7fffff		# 8781	[c=4]*anddi3/0
	store8! &1 	#AR	# 8782	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 8783	[c=5]movdi_to_tr_unspec/1
	and! 0x1		# 8785	[c=4]*anddi3/0
	store8! &6 	#X5	# 8787	[c=4]movsi_from_tr_unspec/0
	load4! &2 	#X2	# 8788	[c=5]movsi_to_tr_unspec/1
	shift_ru! 1	# 8790	[c=40]*lshrdi3/0
	store8! &2 	#X1	# 8791	[c=4]movdi_from_tr_unspec/0
	load8! &5 	#X5	# 8792	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 8794	[c=6]*iordi3/2
	or
	store8! &3 	#X2	# 8796	[c=4]movsi_from_tr_unspec/0
	load8! &0 	#AR	# 8797	[c=5]movdi_to_tr_unspec/1
	shift_l! 31	# 8799	[c=8]*ashldi3/0
	store8! &2 	#X1	# 8800	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 8801	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 8803	[c=6]*iordi3/2
	or
	store8! &3 	#X2	# 8805	[c=4]movsi_from_tr_unspec/0
	load4! &0 	#AR	# 8806	[c=5]movsi_to_tr_unspec/1
	shift_ru! 1	# 8808	[c=40]*lshrdi3/0
	store8! &1 	#AR	# 8809	[c=4]movdi_from_tr_unspec/0
	jump! .L193.l_o077fa1		# 9122	[c=4]jump
.L81.l_o077fa1:
	load8! &8 	#X8	# 3812	[c=5]movdi_to_tr_unspec/1
	shift_l! 29	# 3814	[c=8]*ashldi3/0
	store8! &4 	#X3	# 7512	[c=4]movsi_from_tr_unspec/0
	load4! &8 	#X8	# 6207	[c=5]movsi_to_tr_unspec/1
	shift_ru! 3	# 6209	[c=40]*lshrdi3/0
	store8! &2 	#X1	# 7514	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ0	# 3835	[c=12]cbranchsi4_internal
	load4! &10 	#X10
	jump_not_zero! .L83.l_o077fa1
	# END CBRANCH
	load8! &2 	#X2	# 3837	[c=5]movdi_to_tr_unspec/1
	and! 0x1fffffff		# 3839	[c=4]*anddi3/0
	store8! &1 	#AR	# 8206	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 8207	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 3852	[c=6]*iordi3/2
	or
	store8! &11 	#X10	# 7510	[c=4]movsi_from_tr_unspec/0
	load8! &1 	#X1	# 8813	[c=5]movdi_to_tr_unspec/1
	load8! &11 	#X10	# 8815	[c=6]*iordi3/2
	or
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 8816	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L82.l_o077fa1
	# END CBRANCH
	jump! .L183.l_o077fa1		# 9125	[c=4]jump
.L99.l_o077fa1:
	load4! &2 	#X2	# 5893	[c=5]movsi_to_tr_unspec/1
	shift_ru! 3	# 5895	[c=40]*lshrdi3/0
	store8! &2 	#X1	# 7332	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 7333	[c=5]movdi_to_tr_unspec/1
	shift_l! 29	# 4902	[c=8]*ashldi3/0
	load8! &2 	#X1	# 4915	[c=6]*iordi3/2
	or
	store8! &11 	#X10	# 7337	[c=4]movsi_from_tr_unspec/0
	load4! &0 	#AR	# 5904	[c=5]movsi_to_tr_unspec/1
	shift_ru! 3	# 5906	[c=40]*lshrdi3/0
	store8! &2 	#X1	# 7339	[c=4]movsi_from_tr_unspec/0
	load4! &3 	#X3	# 19	[c=4]movsi_push_pop
	store8! &1 	#AR
	# CBRANCH	# 8819	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	push! 2047	
	xor	
	push! 1	
	lt_u	
	jump_zero! .L38.l_o077fa1
	# END CBRANCH
	jump! .L14.l_o077fa1		# 9128	[c=4]jump
.L180.l_o077fa1:
	load8! &9 	#X9	# 6466	[c=5]movdi_to_tr_unspec/1
	load8! &8 	#X7	# 6468	[c=14]*subdi3/2
	sub
	neg		# 6469	[c=4]*neg_tr
	store8! &3 	#X2	# 7661	[c=4]movsi_from_tr_unspec/0
	load8! &8 	#X8	# 6473	[c=5]movdi_to_tr_unspec/1
	load8! &6 	#X5	# 6475	[c=14]*subdi3/2
	sub
	neg		# 6476	[c=4]*neg_tr
	store8! &2 	#X1	# 7663	[c=4]movsi_from_tr_unspec/0
	push! 1		# 2930	[c=4]movqi_push_pop
	store8! &1 	#AR
	# CBRANCH	# 2931	[c=12]cbranchsi4_internal
	load4! &7 	#X7
	load4! &3 	#X2
	lt_u	
	not	
	jump_zero! .L65.l_o077fa1
	# END CBRANCH
	push! 0		# 2932	[c=4]movqi_push_pop
	store8! &1 	#AR
.L65.l_o077fa1:
	load1! &0 	#AR	# 6458	[c=5]movqi_to_tr_unspec/1
	load8! &2 	#X1	# 8266	[c=14]*subdi3/2
	sub
	neg		# 8267	[c=4]*neg_tr
	store8! &1 	#AR	# 8268	[c=4]movdi_from_tr_unspec/0
	push! 1		# 6464	[c=4]movsi_push_pop
	store8! &4 	#X3
	jump! .L53.l_o077fa1		# 9130	[c=4]jump
.L177.l_o077fa1:
	load8! &6 	#X6	# 1567	[c=5]movdi_to_tr_unspec/1
	and! 0x1fffffff		# 1569	[c=4]*anddi3/0
	store8! &3 	#X2	# 7869	[c=4]movsi_from_tr_unspec/0
	load8! &5 	#X5	# 1576	[c=5]movdi_to_tr_unspec/1
	shift_l! 29	# 1578	[c=8]*ashldi3/0
	store8! &2 	#X1	# 8340	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 8341	[c=5]movdi_to_tr_unspec/1
	load8! &2 	#X1	# 1591	[c=6]*iordi3/2
	or
	store8! &11 	#X10	# 7872	[c=4]movsi_from_tr_unspec/0
	load4! &5 	#X5	# 6843	[c=5]movsi_to_tr_unspec/1
	shift_ru! 3	# 6845	[c=40]*lshrdi3/0
	store8! &2 	#X1	# 6846	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 8822	[c=5]movdi_to_tr_unspec/1
	and! 0xfffff		# 8824	[c=4]*anddi3/0
	store8! &3 	#X2	# 8826	[c=4]movsi_from_tr_unspec/0
	load2! &0 	#AR	# 8827	[c=5]movhi_to_tr_unspec/1
	and! 0x7ff		# 8829	[c=4]*anddi3/0
	store8! &2 	#X1	# 8831	[c=4]movhi_from_tr_unspec/0
	jump! .L178.l_o077fa1		# 9132	[c=4]jump
.L39.l_o077fa1:
	load8! &7 	#X7	# 6810	[c=5]movdi_to_tr_unspec/1
	load8! &10 	#X9	# 6812	[c=6]*adddi/2
	add
	store8! &3 	#X2	# 7857	[c=4]movsi_from_tr_unspec/0
	load8! &5 	#X5	# 6815	[c=5]movdi_to_tr_unspec/1
	load8! &9 	#X8	# 6817	[c=6]*adddi/2
	add
	store8! &6 	#X5	# 7859	[c=4]movsi_from_tr_unspec/0
	push! 1		# 1706	[c=4]movqi_push_pop
	store8! &1 	#AR
	# CBRANCH	# 1707	[c=12]cbranchsi4_internal
	load4! &2 	#X2
	load4! &10 	#X9
	lt_u	
	not	
	jump_zero! .L40.l_o077fa1
	# END CBRANCH
	push! 0		# 1708	[c=4]movqi_push_pop
	store8! &1 	#AR
.L40.l_o077fa1:
	load1! &0 	#AR	# 6799	[c=5]movqi_to_tr_unspec/1
	load8! &6 	#X5	# 6806	[c=6]*adddi/2
	add
	store8! &1 	#AR	# 7850	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 7851	[c=5]movdi_to_tr_unspec/1
	and! 0x800000		# 1734	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 7855	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L41.l_o077fa1
	# END CBRANCH
	load8! &0 	#AR	# 1743	[c=5]movdi_to_tr_unspec/1
	and! 0xffffffffff7fffff		# 1745	[c=4]*anddi3/0
	store8! &1 	#AR	# 1746	[c=4]movdi_from_tr_unspec/0
	push! 1		# 6798	[c=4]movsi_push_pop
	store8! &4 	#X3
	load8! &2 	#X2	# 8834	[c=5]movdi_to_tr_unspec/1
	and! 0x7		# 8836	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 8837	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L102.l_o077fa1
	# END CBRANCH
	jump! .L185.l_o077fa1		# 9135	[c=4]jump
.L188.l_o077fa1:
	load8! &6 	#X6	# 944	[c=5]movdi_to_tr_unspec/1
	and! 0x1fffffff		# 946	[c=4]*anddi3/0
	store8! &2 	#X1	# 7974	[c=4]movdi_from_tr_unspec/0
	load8! &5 	#X5	# 7975	[c=5]movdi_to_tr_unspec/1
	shift_l! 29	# 955	[c=8]*ashldi3/0
	load8! &2 	#X1	# 968	[c=6]*iordi3/2
	or
	store8! &11 	#X10	# 7979	[c=4]movsi_from_tr_unspec/0
	load4! &5 	#X5	# 7023	[c=5]movsi_to_tr_unspec/1
	shift_ru! 3	# 7025	[c=40]*lshrdi3/0
	store8! &2 	#X1	# 7026	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 8840	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	push! 2047	
	xor	
	push! 1	
	lt_u	
	jump_zero! .L38.l_o077fa1
	# END CBRANCH
	jump! .L14.l_o077fa1		# 9138	[c=4]jump
.L105.l_o077fa1:
	push! 2047		# 37	[c=4]movhi_push_pop
	store8! &2 	#X1
	push! 0		# 38	[c=4]movsi_push_pop
	store8! &3 	#X2
	push! 0		# 39	[c=4]movsi_push_pop
	store8! &11 	#X10
	load4! &10 	#X10	# 8843	[c=5]movsi_to_tr_unspec/1
	store8! &4 	#X3	# 8845	[c=4]movdi_from_tr_unspec/0
	push! 0		# 8846	[c=3]movdi_to_tr_unspec/0
	and! 0xffffffff00000000		# 8848	[c=4]*anddi3/0
	load8! &4 	#X3	# 8849	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 8850	[c=4]movdi_from_tr_unspec/0
	load4! &2 	#X2	# 8851	[c=5]movsi_to_tr_unspec/1
	and! 0xfffff		# 8853	[c=4]*anddi3/0
	shift_l! 32	# 8855	[c=8]*ashldi3/0
	store8! &3 	#X2	# 8856	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 8857	[c=5]movdi_to_tr_unspec/1
	and! 0xfff00000ffffffff		# 8859	[c=4]*anddi3/0
	load8! &3 	#X2	# 8860	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 8861	[c=4]movdi_from_tr_unspec/0
	load2! &1 	#X1	# 8862	[c=5]movhi_to_tr_unspec/1
	and! 0x7ff		# 8864	[c=4]*anddi3/0
	shift_l! 52	# 8866	[c=8]*ashldi3/0
	store8! &2 	#X1	# 8867	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 8868	[c=5]movdi_to_tr_unspec/1
	and! 0x800fffffffffffff		# 8870	[c=4]*anddi3/0
	load8! &2 	#X1	# 8871	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 8872	[c=4]movdi_from_tr_unspec/0
	load1! &4 	#X4	# 8873	[c=5]movqi_to_tr_unspec/1
	shift_l! 63	# 8875	[c=8]*ashldi3/0
	store8! &2 	#X1	# 8876	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 8877	[c=5]movdi_to_tr_unspec/1
	and! 0x7fffffffffffffff		# 8879	[c=4]*anddi3/0
	load8! &2 	#X1	# 8880	[c=6]*iordi3/2
	or
	store8! &15	# 8881	[c=4]movdf_from_tr_unspec/0
	jump! .L166.l_o077fa1		# 9140	[c=4]jump
.L42.l_o077fa1:
	load8! &7 	#X7	# 6772	[c=5]movdi_to_tr_unspec/1
	load8! &6 	#X5	# 6774	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 7833	[c=4]movdi_from_tr_unspec/0
	load8! &8 	#X8	# 7834	[c=5]movdi_to_tr_unspec/1
	shift_l! 29	# 1822	[c=8]*ashldi3/0
	store8! &4 	#X3	# 7837	[c=4]movsi_from_tr_unspec/0
	load4! &8 	#X8	# 6780	[c=5]movsi_to_tr_unspec/1
	shift_ru! 3	# 6782	[c=40]*lshrdi3/0
	store8! &2 	#X1	# 7838	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ0	# 7839	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	jump_not_zero! .L43.l_o077fa1
	# END CBRANCH
	load8! &2 	#X2	# 1845	[c=5]movdi_to_tr_unspec/1
	and! 0x1fffffff		# 1847	[c=4]*anddi3/0
	store8! &1 	#AR	# 8329	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X3	# 8330	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 1860	[c=6]*iordi3/2
	or
	store8! &11 	#X10	# 7832	[c=4]movsi_from_tr_unspec/0
	load8! &1 	#X1	# 8884	[c=5]movdi_to_tr_unspec/1
	load8! &11 	#X10	# 8886	[c=6]*iordi3/2
	or
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 8887	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L82.l_o077fa1
	# END CBRANCH
	jump! .L183.l_o077fa1		# 9143	[c=4]jump
.L109.l_o077fa1:
	push! 0		# 26	[c=4]movsi_push_pop
	store8! &2 	#X1
	push! 0		# 28	[c=4]movqi_push_pop
	store8! &5 	#X4
	load8! &1 	#X1	# 8890	[c=5]movdi_to_tr_unspec/1
	and! 0xfffff		# 8892	[c=4]*anddi3/0
	store8! &3 	#X2	# 8894	[c=4]movsi_from_tr_unspec/0
	load2! &0 	#AR	# 8895	[c=5]movhi_to_tr_unspec/1
	and! 0x7ff		# 8897	[c=4]*anddi3/0
	store8! &2 	#X1	# 8899	[c=4]movhi_from_tr_unspec/0
	jump! .L178.l_o077fa1		# 9145	[c=4]jump
.L78.l_o077fa1:
	load8! &0 	#AR	# 6229	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 6231	[c=6]*iordi3/2
	or
	store8! &11 	#X10	# 7526	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ0	# 3740	[c=12]cbranchsi4_internal
	load4! &10 	#X10
	jump_not_zero! .L41.l_o077fa1
	# END CBRANCH
	push! 0		# 22	[c=4]movsi_push_pop
	store8! &2 	#X1
	push! 0		# 23	[c=4]movsi_push_pop
	store8! &1 	#AR
	push! 0		# 24	[c=4]movqi_push_pop
	store8! &5 	#X4
	load8! &1 	#X1	# 8902	[c=5]movdi_to_tr_unspec/1
	and! 0xfffff		# 8904	[c=4]*anddi3/0
	store8! &3 	#X2	# 8906	[c=4]movsi_from_tr_unspec/0
	load2! &0 	#AR	# 8907	[c=5]movhi_to_tr_unspec/1
	and! 0x7ff		# 8909	[c=4]*anddi3/0
	store8! &2 	#X1	# 8911	[c=4]movhi_from_tr_unspec/0
	jump! .L178.l_o077fa1		# 9147	[c=4]jump
.L181.l_o077fa1:
	load8! &6 	#X6	# 2962	[c=5]movdi_to_tr_unspec/1
	and! 0x1fffffff		# 2964	[c=4]*anddi3/0
	store8! &1 	#AR	# 7651	[c=4]movdi_from_tr_unspec/0
	load8! &5 	#X5	# 7652	[c=5]movdi_to_tr_unspec/1
	shift_l! 29	# 2973	[c=8]*ashldi3/0
	load8! &1 	#AR	# 2986	[c=6]*iordi3/2
	or
	store8! &11 	#X10	# 7656	[c=4]movsi_from_tr_unspec/0
	load4! &5 	#X5	# 6453	[c=5]movsi_to_tr_unspec/1
	shift_ru! 3	# 6455	[c=40]*lshrdi3/0
	store8! &2 	#X1	# 7658	[c=4]movsi_from_tr_unspec/0
	load8! &1 	#X1	# 8914	[c=5]movdi_to_tr_unspec/1
	load8! &11 	#X10	# 8916	[c=6]*iordi3/2
	or
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 8917	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L82.l_o077fa1
	# END CBRANCH
	jump! .L183.l_o077fa1		# 9150	[c=4]jump
.L31.l_o077fa1:
	load8! &0 	#AR	# 1327	[c=5]movdi_to_tr_unspec/1
	add! -32		# 1329	[c=4]*adddi/0
	store8! &3 	#X2	# 7910	[c=4]movdi_from_tr_unspec/0
	load4! &8 	#X8	# 7911	[c=5]movsi_to_tr_unspec/1
	load4! &3 	#X2	# 7913	[c=5]movsi_to_tr_unspec/1
	store8! &4 	#X2	# 7915	[c=4]movdi_from_tr_unspec/0
	load8! &3 	#X2	# 1348	[c=42]*lshrdi3/2
	shift_ru
	store8! &4 	#X3	# 7917	[c=4]movsi_from_tr_unspec/0
	# CBRANCH EQ	# 1355	[c=12]cbranchsi4_internal
	load4! &0 	#AR
	push! 32	
	xor	
	jump_zero! .L33.l_o077fa1
	# END CBRANCH
	push! 64		# 1361	[c=3]movdi_to_tr_unspec/0
	load8! &1 	#AR	# 1363	[c=14]*subdi3/2
	sub
	and! 0xffffffff		# 8453	[c=4]*anddi3/0
	pow2		# 6902	[c=4]*pow_tr
	load8! &9 	#X8	# 6903	[c=6]*muldi3/2
	mult
	load8! &10 	#X9	# 6908	[c=6]*iordi3/2
	or
	store8! &10 	#X9	# 7909	[c=4]movsi_from_tr_unspec/0
.L33.l_o077fa1:
	load4! &9 	#X9	# 6882	[c=5]movsi_to_tr_unspec/1
	neg		# 1406	[c=3]*negdi2
	shift_ru! 63	# 1411	[c=40]*lshrdi3/0
	and! 0xff		# 8451	[c=4]*anddi3/0
	load8! &4 	#X3	# 6895	[c=6]*iordi3/2
	or
	store8! &3 	#X2	# 7901	[c=4]movsi_from_tr_unspec/0
	jump! .L32.l_o077fa1		# 9152	[c=4]jump
.L111.l_o077fa1:
	push! 1048575		# 33	[c=4]movsi_push_pop
	store8! &2 	#X1
	push! 0		# 34	[c=4]movqi_push_pop
	store8! &5 	#X4
	push! -1		# 35	[c=4]movsi_push_pop
	store8! &11 	#X10
	load8! &1 	#X1	# 8920	[c=5]movdi_to_tr_unspec/1
	or! 0x80000		# 8922	[c=4]*iordi3/0
	and! 0xfffff		# 8924	[c=4]*anddi3/0
	store8! &3 	#X2	# 8926	[c=4]movsi_from_tr_unspec/0
	push! 2047		# 8927	[c=4]movhi_push_pop
	store8! &2 	#X1
	jump! .L194.l_o077fa1		# 9155	[c=4]jump
.L83.l_o077fa1:
	load8! &2 	#X2	# 3863	[c=5]movdi_to_tr_unspec/1
	and! 0x1fffffff		# 3865	[c=4]*anddi3/0
	load8! &4 	#X3	# 8204	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 8205	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 7503	[c=5]movdi_to_tr_unspec/1
	and! 0x80000		# 3887	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 7507	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L84.l_o077fa1
	# END CBRANCH
	load4! &5 	#X5	# 6190	[c=5]movsi_to_tr_unspec/1
	shift_ru! 3	# 6192	[c=40]*lshrdi3/0
	store8! &3 	#X2	# 7495	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 7496	[c=5]movdi_to_tr_unspec/1
	and! 0x80000		# 3912	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 7500	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L84.l_o077fa1
	# END CBRANCH
	load8! &5 	#X5	# 3921	[c=5]movdi_to_tr_unspec/1
	shift_l! 29	# 3923	[c=8]*ashldi3/0
	store8! &2 	#X1	# 7488	[c=4]movsi_from_tr_unspec/0
	load8! &6 	#X6	# 3930	[c=5]movdi_to_tr_unspec/1
	and! 0x1fffffff		# 3932	[c=4]*anddi3/0
	load8! &2 	#X1	# 8201	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 8202	[c=4]movdi_from_tr_unspec/0
	load1! &11 	#X11	# 7491	[c=5]movqi_to_tr_unspec/1
	and! 0x1		# 3958	[c=4]*anddi3/0
	store8! &5 	#X4	# 7494	[c=4]movqi_from_tr_unspec/0
	load4! &2 	#X2	# 11	[c=4]movsi_push_pop
	store8! &2 	#X1
.L84.l_o077fa1:
	load8! &1 	#X1	# 3967	[c=5]movdi_to_tr_unspec/1
	shift_l! 3	# 3969	[c=8]*ashldi3/0
	store8! &2 	#X1	# 7472	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 7473	[c=5]movsi_to_tr_unspec/1
	shift_ru! 29	# 6162	[c=40]*lshrdi3/0
	load8! &2 	#X1	# 3996	[c=6]*iordi3/2
	or
	store8! &2 	#X1	# 7476	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 7477	[c=5]movdi_to_tr_unspec/1
	and! 0x1fffffff		# 4005	[c=4]*anddi3/0
	store8! &1 	#AR	# 7479	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 7480	[c=5]movdi_to_tr_unspec/1
	shift_l! 29	# 4014	[c=8]*ashldi3/0
	load8! &1 	#AR	# 4027	[c=6]*iordi3/2
	or
	store8! &11 	#X10	# 7484	[c=4]movsi_from_tr_unspec/0
	load4! &1 	#X1	# 6174	[c=5]movsi_to_tr_unspec/1
	shift_ru! 3	# 6176	[c=40]*lshrdi3/0
	store8! &2 	#X1	# 7486	[c=4]movsi_from_tr_unspec/0
	load8! &1 	#X1	# 8930	[c=5]movdi_to_tr_unspec/1
	load8! &11 	#X10	# 8932	[c=6]*iordi3/2
	or
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 8933	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L82.l_o077fa1
	# END CBRANCH
	jump! .L183.l_o077fa1		# 9158	[c=4]jump
.L189.l_o077fa1:
	load8! &7 	#X7	# 7006	[c=5]movdi_to_tr_unspec/1
	load8! &10 	#X9	# 7008	[c=6]*adddi/2
	add
	store8! &3 	#X2	# 7969	[c=4]movsi_from_tr_unspec/0
	load8! &5 	#X5	# 7011	[c=5]movdi_to_tr_unspec/1
	load8! &9 	#X8	# 7013	[c=6]*adddi/2
	add
	store8! &4 	#X3	# 7971	[c=4]movsi_from_tr_unspec/0
	push! 1		# 1030	[c=4]movqi_push_pop
	store8! &1 	#AR
	# CBRANCH	# 1031	[c=12]cbranchsi4_internal
	load4! &2 	#X2
	load4! &8 	#X7
	lt_u	
	not	
	jump_zero! .L27.l_o077fa1
	# END CBRANCH
	push! 0		# 1032	[c=4]movqi_push_pop
	store8! &1 	#AR
.L27.l_o077fa1:
	load1! &0 	#AR	# 6996	[c=5]movqi_to_tr_unspec/1
	load8! &4 	#X3	# 7003	[c=6]*adddi/2
	add
	store8! &1 	#AR	# 1050	[c=4]movdi_from_tr_unspec/0
	jump! .L12.l_o077fa1		# 9160	[c=4]jump
.L192.l_o077fa1:
	load8! &6 	#X6	# 1113	[c=5]movdi_to_tr_unspec/1
	and! 0x1fffffff		# 1115	[c=4]*anddi3/0
	store8! &2 	#X1	# 7951	[c=4]movsi_from_tr_unspec/0
	load8! &5 	#X5	# 1122	[c=5]movdi_to_tr_unspec/1
	shift_l! 29	# 1124	[c=8]*ashldi3/0
	store8! &1 	#AR	# 8357	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 8358	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 1137	[c=6]*iordi3/2
	or
	store8! &11 	#X10	# 7954	[c=4]movsi_from_tr_unspec/0
	load4! &5 	#X5	# 6979	[c=5]movsi_to_tr_unspec/1
	shift_ru! 3	# 6981	[c=40]*lshrdi3/0
	store8! &2 	#X1	# 7956	[c=4]movsi_from_tr_unspec/0
	load8! &1 	#X1	# 8936	[c=5]movdi_to_tr_unspec/1
	load8! &11 	#X10	# 8938	[c=6]*iordi3/2
	or
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 8939	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L82.l_o077fa1
	# END CBRANCH
	jump! .L183.l_o077fa1		# 9163	[c=4]jump
.L43.l_o077fa1:
	load8! &2 	#X2	# 1871	[c=5]movdi_to_tr_unspec/1
	and! 0x1fffffff		# 1873	[c=4]*anddi3/0
	load8! &4 	#X3	# 8327	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 8328	[c=4]movdi_from_tr_unspec/0
	load8! &1 	#X1	# 7825	[c=5]movdi_to_tr_unspec/1
	and! 0x80000		# 1895	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 7829	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L44.l_o077fa1
	# END CBRANCH
	load4! &5 	#X5	# 6758	[c=5]movsi_to_tr_unspec/1
	shift_ru! 3	# 6760	[c=40]*lshrdi3/0
	store8! &3 	#X2	# 7817	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 7818	[c=5]movdi_to_tr_unspec/1
	and! 0x80000		# 1920	[c=4]*anddi3/0
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 7822	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L44.l_o077fa1
	# END CBRANCH
	load8! &5 	#X5	# 1929	[c=5]movdi_to_tr_unspec/1
	shift_l! 29	# 1931	[c=8]*ashldi3/0
	store8! &2 	#X1	# 7810	[c=4]movsi_from_tr_unspec/0
	load8! &6 	#X6	# 1938	[c=5]movdi_to_tr_unspec/1
	and! 0x1fffffff		# 1940	[c=4]*anddi3/0
	load8! &2 	#X1	# 8324	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 8325	[c=4]movdi_from_tr_unspec/0
	load1! &11 	#X11	# 7813	[c=5]movqi_to_tr_unspec/1
	and! 0x1		# 1966	[c=4]*anddi3/0
	store8! &5 	#X4	# 7816	[c=4]movqi_from_tr_unspec/0
	load4! &2 	#X2	# 7	[c=4]movsi_push_pop
	store8! &2 	#X1
.L44.l_o077fa1:
	load8! &1 	#X1	# 1975	[c=5]movdi_to_tr_unspec/1
	shift_l! 3	# 1977	[c=8]*ashldi3/0
	store8! &2 	#X1	# 7795	[c=4]movdi_from_tr_unspec/0
	load4! &0 	#AR	# 7796	[c=5]movsi_to_tr_unspec/1
	shift_ru! 29	# 6730	[c=40]*lshrdi3/0
	load8! &2 	#X1	# 2004	[c=6]*iordi3/2
	or
	store8! &2 	#X1	# 7799	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 7800	[c=5]movdi_to_tr_unspec/1
	and! 0x1fffffff		# 2013	[c=4]*anddi3/0
	store8! &3 	#X2	# 7803	[c=4]movsi_from_tr_unspec/0
	load8! &1 	#X1	# 2020	[c=5]movdi_to_tr_unspec/1
	shift_l! 29	# 2022	[c=8]*ashldi3/0
	store8! &1 	#AR	# 8320	[c=4]movdi_from_tr_unspec/0
	load8! &2 	#X2	# 8321	[c=5]movdi_to_tr_unspec/1
	load8! &1 	#AR	# 2035	[c=6]*iordi3/2
	or
	store8! &11 	#X10	# 7806	[c=4]movsi_from_tr_unspec/0
	load4! &1 	#X1	# 6742	[c=5]movsi_to_tr_unspec/1
	shift_ru! 3	# 6744	[c=40]*lshrdi3/0
	store8! &2 	#X1	# 7808	[c=4]movsi_from_tr_unspec/0
	load8! &1 	#X1	# 8942	[c=5]movdi_to_tr_unspec/1
	load8! &11 	#X10	# 8944	[c=6]*iordi3/2
	or
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 8945	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L82.l_o077fa1
	# END CBRANCH
	jump! .L183.l_o077fa1		# 9166	[c=4]jump
.L190.l_o077fa1:
	load8! &6 	#X6	# 1062	[c=5]movdi_to_tr_unspec/1
	and! 0x1fffffff		# 1064	[c=4]*anddi3/0
	store8! &1 	#AR	# 7957	[c=4]movdi_from_tr_unspec/0
	load8! &5 	#X5	# 7958	[c=5]movdi_to_tr_unspec/1
	shift_l! 29	# 1073	[c=8]*ashldi3/0
	load8! &1 	#AR	# 1086	[c=6]*iordi3/2
	or
	store8! &11 	#X10	# 7962	[c=4]movsi_from_tr_unspec/0
	load4! &5 	#X5	# 6991	[c=5]movsi_to_tr_unspec/1
	shift_ru! 3	# 6993	[c=40]*lshrdi3/0
	store8! &2 	#X1	# 7964	[c=4]movsi_from_tr_unspec/0
	load8! &1 	#X1	# 8948	[c=5]movdi_to_tr_unspec/1
	load8! &11 	#X10	# 8950	[c=6]*iordi3/2
	or
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 8951	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_not_zero! .L82.l_o077fa1
	# END CBRANCH
.L183.l_o077fa1:
	push! 0		# 46	[c=4]movsi_push_pop
	store8! &11 	#X10
	push! 2047		# 47	[c=4]movhi_push_pop
	store8! &2 	#X1
	push! 0		# 48	[c=4]movsi_push_pop
	store8! &3 	#X2
	load4! &10 	#X10	# 8954	[c=5]movsi_to_tr_unspec/1
	store8! &4 	#X3	# 8956	[c=4]movdi_from_tr_unspec/0
	push! 0		# 8957	[c=3]movdi_to_tr_unspec/0
	and! 0xffffffff00000000		# 8959	[c=4]*anddi3/0
	load8! &4 	#X3	# 8960	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 8961	[c=4]movdi_from_tr_unspec/0
	load4! &2 	#X2	# 8962	[c=5]movsi_to_tr_unspec/1
	and! 0xfffff		# 8964	[c=4]*anddi3/0
	shift_l! 32	# 8966	[c=8]*ashldi3/0
	store8! &3 	#X2	# 8967	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 8968	[c=5]movdi_to_tr_unspec/1
	and! 0xfff00000ffffffff		# 8970	[c=4]*anddi3/0
	load8! &3 	#X2	# 8971	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 8972	[c=4]movdi_from_tr_unspec/0
	load2! &1 	#X1	# 8973	[c=5]movhi_to_tr_unspec/1
	and! 0x7ff		# 8975	[c=4]*anddi3/0
	shift_l! 52	# 8977	[c=8]*ashldi3/0
	store8! &2 	#X1	# 8978	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 8979	[c=5]movdi_to_tr_unspec/1
	and! 0x800fffffffffffff		# 8981	[c=4]*anddi3/0
	load8! &2 	#X1	# 8982	[c=6]*iordi3/2
	or
	store8! &1 	#AR	# 8983	[c=4]movdi_from_tr_unspec/0
	load1! &4 	#X4	# 8984	[c=5]movqi_to_tr_unspec/1
	shift_l! 63	# 8986	[c=8]*ashldi3/0
	store8! &2 	#X1	# 8987	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 8988	[c=5]movdi_to_tr_unspec/1
	and! 0x7fffffffffffffff		# 8990	[c=4]*anddi3/0
	load8! &2 	#X1	# 8991	[c=6]*iordi3/2
	or
	store8! &15	# 8992	[c=4]movdf_from_tr_unspec/0
.L166.l_o077fa1:

	# epilogue
	set_sp! &13
	return

# FUNCTION ENDS:__subdf3

#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: ofac755
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"unorddf2.c"
#	.text
	#peephole move
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole zero_extend
	#peephole pop(deadreg)+push
	#peephole pop(deadreg)+push
	#peephole 1
	#peephole zero_extend
	#peephole move
	#peephole move+push(pushable)
	#peephole move_dead
	#peephole move+push+commutative(deadreg)
	#peephole 1
	#peephole move
	#peephole 1
	#peephole move_dead
	#peephole 1
	#peephole move_dead
	#peephole move
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole 1
	#peephole pop(deadreg)+pushdi
	#peephole pop+block+push+block
	#peephole redundant blockage insn
	#peephole pop+block+push+block
	#peephole pop(deadreg)+pushdi
	#peephole pop+block+cmp
	#peephole popdi+cmp
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+move(deadreg)
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+push+block
	#peephole pop+block+push+block
	#peephole pop(deadreg)+push
	#peephole pop+block+cmp
	#peephole redundant blockage insn
	#peephole redundant blockage insn
	#peephole popdi(deadreg)+push
	#peephole popdi(deadreg)+push

# FUNCTION BEGINS:__unorddf2
	EXPORT	__unorddf2
__unorddf2:
	# prologue (5 GPRs)

	set_sp! &-5

	load8! &6	# 221	[c=2]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 13	[c=5]movdi_to_tr_unspec/1
	shift_ru! 32	# 15	[c=40]*lshrdi3/0
	and! 0xfffff		# 24	[c=4]*anddi3/0
	store8! &4 	#X3	# 248	[c=4]movsi_from_tr_unspec/0
	load8! &0 	#AR	# 31	[c=5]movdi_to_tr_unspec/1
	shift_ru! 52	# 33	[c=40]*lshrdi3/0
	and! 0x7ff		# 42	[c=4]*anddi3/0
	store8! &2 	#X1	# 254	[c=4]movhi_from_tr_unspec/0
	load8! &7	# 226	[c=2]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 53	[c=5]movdi_to_tr_unspec/1
	shift_ru! 32	# 55	[c=40]*lshrdi3/0
	and! 0xfffff		# 64	[c=4]*anddi3/0
	store8! &3 	#X2	# 259	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 260	[c=5]movdi_to_tr_unspec/1
	shift_ru! 52	# 73	[c=40]*lshrdi3/0
	and! 0x7ff		# 82	[c=4]*anddi3/0
	store8! &1 	#AR	# 266	[c=4]movdi_from_tr_unspec/0
	# CBRANCH EQ	# 267	[c=12]cbranchhi4_internal
	load2! &1 	#X1
	push! 2047	
	xor	
	jump_zero! .L8.l_ofac755
	# END CBRANCH
.L2.l_ofac755:
	# CBRANCH EQ	# 116	[c=12]cbranchhi4_internal
	load2! &0 	#AR
	push! 2047	
	xor	
	jump_zero! .L9.l_ofac755
	# END CBRANCH
	push! 0		# 6	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 169	[c=4]movdi_push_pop
	store8! &7
	jump! .L10.l_ofac755		# 286	[c=4]jump
.L8.l_ofac755:
	load8! &6	# 214	[c=5]movdi_to_tr_unspec/1
	load8! &4 	#X3	# 219	[c=6]*iordi3/2
	or
	# CBRANCH - peep (modesize=4)
	and! 4294967295		# 242	[c=12]*peep2_cbranchsi
	# - EQ0
	jump_zero! .L2.l_ofac755
	# END CBRANCH
	push! 1		# 5	[c=4]movdi_push_pop
	store8! &1 	#AR
	load8! &0 	#AR	# 277	[c=4]movdi_push_pop
	store8! &7
	jump! .L10.l_ofac755		# 288	[c=4]jump
.L9.l_ofac755:
	load8! &7	# 197	[c=5]movdi_to_tr_unspec/1
	load8! &3 	#X2	# 202	[c=6]*iordi3/2
	or
	and! 0xffffffff		# 270	[c=4]*anddi3/0
	neg		# 147	[c=3]*negdi2
	shift_ru! 63	# 152	[c=40]*lshrdi3/0
	and! 0xff		# 272	[c=4]*anddi3/0
	store8! &1 	#AR	# 212	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 280	[c=4]movdi_push_pop
	store8! &7
.L10.l_ofac755:

	# epilogue
	set_sp! &5
	return

# FUNCTION ENDS:__unorddf2

#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
##:ivm64:obj-id: o75a3b4
# This is a GCC-generated ivm64 assembly object file
# GCC Cross Compiler for ivm64, version 1.1-optim (Nov 10 2020, 23:44:28)
#	.file	"write.c"
#	.text
	#peephole pop+move2(deadreg)
	#peephole 1
	#peephole zero_extend
	#peephole binop1+deadreg+binop2
	#peephole pop+block+push+block
	#peephole popdi(deadreg)+push

# FUNCTION BEGINS:write
	EXPORT	write
write:
	# prologue (4 GPRs)

	set_sp! &-5

	load4! &8	# 4	[c=2]movsi_push_pop
	store8! &4 	#X3
	# CBRANCH	# 9	[c=12]cbranchsi4_internal
	push! 0	
	add! -2147483648	
	load4! &4 	#X3
	add! -2147483648	
	lt_u	
	jump_zero! .L4.l_o75a3b4
	# END CBRANCH
	load8! &7	# 11	[c=2]movdi_push_pop
	store8! &1 	#AR
	load8! &3 	#X3	# 13	[c=5]movdi_to_tr_unspec/1
	add! -1		# 15	[c=4]*adddi/0
	and! 0xffffffff		# 95	[c=4]*anddi3/0
	store8! &2 	#X1	# 86	[c=4]movdi_from_tr_unspec/0
	load8! &0 	#AR	# 87	[c=5]movdi_to_tr_unspec/1
	add! 1		# 89	[c=4]*adddi/0
	load8! &2 	#X1	# 90	[c=6]*adddi/2
	add
	store8! &3 	#X2	# 91	[c=4]movdi_from_tr_unspec/0
.L3.l_o75a3b4:
	load8! &0 	#AR	# 39	[c=7]movqi_to_tr_unspec/2
	load1	
	#	
	store1! &5	# 82	[c=4]movqi_from_tr_unspec/0
# Inline assembly starts
# 19 "../../../../libgloss/ivm64/write.c" 1
	put_char! (load1 &4)

# 0 "" 2
# Inline assembly ends
	load8! &0 	#AR	# 50	[c=5]movdi_to_tr_unspec/1
	add! 1		# 52	[c=4]*adddi/0
	store8! &1 	#AR	# 53	[c=4]movdi_from_tr_unspec/0
	# CBRANCH	# 57	[c=12]cbranchdi4_internal
	load8! &0 	#AR
	load8! &3 	#X2
	xor	
	push! 1	
	lt_u	
	jump_zero! .L3.l_o75a3b4
	# END CBRANCH
	load4! &3 	#X3	# 64	[c=4]movsi_push_pop
	store4! &7
	jump! .L8.l_o75a3b4		# 104	[c=4]jump
.L4.l_o75a3b4:
	push! 0		# 6	[c=4]movsi_push_pop
	store8! &4 	#X3
	load4! &3 	#X3	# 100	[c=4]movsi_push_pop
	store4! &7
.L8.l_o75a3b4:

	# epilogue
	set_sp! &5
	return

# FUNCTION ENDS:write

#	.ident	"GCC:(ivm64 1.1-optim)8.3.0"
